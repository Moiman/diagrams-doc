* Packages
** vector-space-points						       :skip:
   Has had no updates since 0.1.3, already on Hackage.
** monoid-extras						       :skip:
   No updates since 0.3.2.4, on Hackage.
** dual-tree							       :skip:
   No updates since 0.2.0.1, on Hackage.
** diagrams-core						   :toupload:
  + [X] CHANGES file updated
  + [X] all CHANGES in user manual
  + [X] version bumped to 1.1
  + [X] update LICENSE
** active							       :skip:
   0.1.0.10 on Hackage.  Needs no updating.
   IMPORTANT: look at active-0.1 branch, not master!
** diagrams-lib							       :todo:
  + [X] CHANGES updated
  + [X] all CHANGES in user manual or tutorial
  + [X] upper bounds fixed
  + [X] lower bounds fixed
  + [X] update tested-with field
  + [X] Haddocks up to date
  + [X] version bump
  + [X] LICENSE updated
  + [X] make sure denys's doc fix is incorporated and noted
  + [ ] note new features to fix SVG fill bug
** SVGFonts 							       :done:
   Only a simple bump to the diagrams-lib upper bound.  Uploaded.
** palette							       :skip:
** diagrams-contrib						   :toupload:
   No significant changes, but bumped lower bounds for diagrams-lib
   and -core to 1.1.

  + [X] CHANGES updated
  + [X] all CHANGES in user manual or tutorial
  + [X] upper bounds fixed
  + [X] lower bounds fixed
  + [X] update tested-with field
  + [X] Haddocks up to date
  + [X] version bump
  + [X] LICENSE updated
** statestack							       :skip:
   Latest version (0.2) is already on Hackage, no changes needed.
** diagrams-cairo						   :toupload:
  + [X] CHANGES updated
  + [X] all CHANGES in user manual or tutorial
  + [X] upper bounds fixed
  + [X] lower bounds fixed
  + [X] update tested-with field
  + [X] Haddocks up to date
  + [X] version bump
  + [X] LICENSE updated
** diagrams-gtk							       :todo:
   Waiting to merge new double-buffering code:
   https://github.com/diagrams/diagrams-gtk/pull/1
** diagrams-postscript						       :todo:
   Waiting to merge CMYK support?

  + [ ] CHANGES updated
  + [ ] all CHANGES in user manual or tutorial
  + [ ] upper bounds fixed
  + [ ] lower bounds fixed
  + [ ] update tested-with field
  + [ ] Haddocks up to date
  + [ ] version bump
  + [ ] LICENSE updated
** diagrams-svg							       :todo:
  + [ ] CHANGES updated
  + [ ] all CHANGES in user manual or tutorial
  + [ ] upper bounds fixed
  + [ ] lower bounds fixed
  + [ ] update tested-with field
  + [ ] Haddocks up to date
  + [ ] version bump
  + [ ] LICENSE updated
** diagrams							       :todo:
** diagrams-builder						       :todo:
** diagrams-haddock						       :todo:
** diagrams-doc							       :todo:
* Release checklist
  + [ ] go through per-package checklist
  + [ ] user manual / tutorials
    + [ ] make sure all examples build
    + [ ] make sure documentation is up-to-date
    + [ ] make sure all new features are described/mentioned in the manual
    + [ ] diagrams-haddock
      + [ ] make sure all diagrams-haddock examples build
      + [ ] rebuild all diagrams-haddock examples and check them in
  + [ ] testing
    + [ ] check all travis tests
    + [ ] run diagrams-backend-tests
    + [ ] copy diagrams-backend-tests output to website
  + [ ] update release page on website
    - See previous versions for format.  Should be possible to
      essentially paste in the relevant parts of the CHANGES files
      for individual repos.
    - We should probably come up with a better format and/or a more
      automated way of doing this...
  + [ ] upload packages
    + [ ] List release date in each CHANGES file
    + [ ] Apply a tag to each repo just before releasing
      - The tag should have a name like "vX.X.X", with a v prefixed
        to the version
      - The tag message should mention the version and give a very
        short comment describing the release
      - Use a command like: git tag -a v1.3 -m "1.3 release (update for frozz-wizz)"
    + [ ] Upload
  + [ ] regenerate combined Haddock documentation and commit to website.
    NOTE: this must be done AFTER releasing packages to Hackage!
    There is a script, build-haddocks.sh, in the diagrams-doc root
    which can be used to build combined Haddocks.  See the comments
    for more info and prerequisites.
  + [ ] Rebuild and upload new website.
