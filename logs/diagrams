2011-03-25 20:51:55 UTC <byorgey> Testing...
2011-03-25 20:52:16 UTC <fryguybob> Hello!
2011-03-25 20:52:37 UTC <byorgey> well, that was easy
2011-03-25 20:52:43 UTC <fryguybob> Excellent.
2011-03-25 20:53:34 UTC <byorgey> I'm going to create a diagrams-doc repository for stuff like IRC logs, tutorials, website, etc.
2011-03-25 20:59:15 UTC <byorgey> Testing
2011-03-31 18:47:48 UTC <luite> anything happened here while I was away? :p
2011-03-31 18:55:52 UTC <fryguybob> We have logging now :D
2011-03-31 18:56:13 UTC <fryguybob> http://www.patch-tag.com/r/byorgey/diagrams-doc/home
2011-03-31 18:56:57 UTC <byorgey> hi luite!  Nothing much has happened in this channel, but I have been doing lots of hacking =)
2011-03-31 18:58:08 UTC <luite> cool :) I've just been doing lots of skiing ;)
2011-03-31 18:59:14 UTC <byorgey> sounds fun =)
2011-03-31 19:00:16 UTC <byorgey> In the next half-hour or so I'm going to implement a mode for the cairo CmdLine module which watches to see when the source of a diagram has been modified, and automatically recompiles itself
2011-03-31 19:00:19 UTC <luite> hehe it would've been more fun if my boots didn't hurt so much (actually it's my feet that hurt, not my boots). need to get them adjusted, or maybe a new pair, for next season
2011-03-31 19:00:42 UTC <byorgey> so you can just be editing a diagram and have a PDF viewer open and see it update every time you hit save in the editor =)
2011-03-31 19:00:59 UTC <byorgey> yikes, yes, well-fitting boots are essential
2011-03-31 19:01:13 UTC <byorgey> glad to hear the boots were not in pain though.
2011-03-31 19:02:40 UTC <luite> ah sounds good. what kind of diagrams do you want to use that feature for?
2011-03-31 19:04:05 UTC <byorgey> what kind of diagrams would you not want to use that feature for? ;)
2011-03-31 19:05:06 UTC <byorgey> seriously though, when developing one-off diagrams (e.g. to illustrate a blog post or something like that) it just dramatically cuts down the time you spend in the edit-compile-view cycle.
2011-03-31 19:07:06 UTC <byorgey> only problem I guess is that I don't know how to make it portable so it works on Windows too.
2011-03-31 19:07:19 UTC <fryguybob> I can work on that :D
2011-03-31 19:07:26 UTC <byorgey> ok, sounds good =)
2011-03-31 19:07:27 UTC <luite> oh I have a windows machine with cairo, so I can check
2011-03-31 19:07:29 UTC <luite> oh
2011-03-31 19:07:38 UTC <luite> great :)
2011-03-31 19:07:59 UTC <fryguybob> ACTION is a slave to windows for his day job... but not for long.
2011-03-31 19:08:32 UTC <luite> I need windows at home for adobe products
2011-03-31 19:08:57 UTC <luite> and uhm, itunes...
2011-03-31 19:40:15 UTC <byorgey> hmm, this CmdLine module needs to be split out into its own package, it's pulling too many dependencies into diagrams-cairo...
2011-03-31 20:24:42 UTC <byorgey> it works! =D
2011-03-31 20:37:11 UTC <byorgey> oh man, this is so much fun =)
2011-03-31 20:37:51 UTC <byorgey> there's something magical about processes with near-instant feedback
2011-03-31 20:59:53 UTC <fryguybob> :D
2011-03-31 22:01:05 UTC <fryguybob> byorgey: If the only thing from unix you need executeFile that should be easy.
2011-03-31 22:01:37 UTC <fryguybob> Alternatively we could use something like hint.  It seems to work fine for me on Windows.
2011-04-01 00:38:44 UTC <fryguybob> byorgey: There were only a couple of issues.  I could replace executeFile with runProcess and then build without the unix dependency.
2011-04-01 00:39:32 UTC <fryguybob> On Windows you can't overwrite the executing program, so I had to monkey with alternating the file name that it writes to.
2011-04-01 17:25:18 UTC <byorgey> fryguybob: hmm, won't using runProcess instead of executeFile result in having a bunch of processes all running at once, all except the last one waiting for the others to finish?
2011-04-01 17:26:40 UTC <fryguybob> byorgey: I thought that, but looking at the running processes, the previous one does exit.  So I don't think there is any parent/child process relationship with that particular call on windows.
2011-04-01 17:27:38 UTC <byorgey> oh, I see.  Actually, that makes sense -- note how the call to GHC has to use a call to 'waitForProcess', presumably otherwise it would just plow ahead without waiting for GHC to finish
2011-04-01 17:28:08 UTC <byorgey> ok, cool.
2011-04-01 17:28:58 UTC <byorgey> we might want to look into using hint anyway, since that could allow us to do things like externally specify which diagram you want to render, without changing main
2011-04-01 17:29:07 UTC <fryguybob> right
2011-04-01 17:30:28 UTC <byorgey> It would also be simpler since then we could make a standalone application that just watches for changes and then recompiles the diagram, rather than having this funny thing that recompiles and restarts itself
2011-04-01 17:30:54 UTC <fryguybob> Yeah, I was just going to say as it is you can compile yourself into a corner.
2011-04-01 17:31:22 UTC <byorgey> Right.
2011-04-01 17:34:08 UTC <byorgey> so I'm thinking that we (a) keep the basic command-line stuff in the cairo package, and (b) take out the looping stuff and make it into a standalone application using hint
2011-04-01 17:35:14 UTC <byorgey> what do you think?
2011-04-01 17:36:01 UTC <fryguybob> Sounds good.  I'm trying to think of other interesting things we could do with hint.
2011-04-01 17:37:13 UTC <byorgey> all sorts of things I'm sure.
2011-04-01 17:38:17 UTC <byorgey> How about a mode where it takes all the top-level things of type Diagram in a file and renders them in a grid.
2011-04-01 17:38:27 UTC <fryguybob> Yeah.
2011-04-01 17:38:32 UTC <byorgey> and then you could click on any one of them to "focus" and have it only render that one
2011-04-01 17:38:42 UTC <byorgey> if it was a gtk application or something
2011-04-01 17:39:20 UTC <byorgey> that would be a neat way to develop.  Work on the whole thing for a while, then you want to focus on some subpart so you have it just render that until you're happy with it, then go back to looking at the whole diagram...
2011-04-01 17:39:31 UTC <fryguybob> Yeah
2011-04-01 17:39:33 UTC <fryguybob> Another would be parameterized diagrams where it asked for values to functions that return diagrams.
2011-04-01 17:39:53 UTC <byorgey> yeah, with little sliders and input boxes!
2011-04-01 17:40:28 UTC <fryguybob> Kind of like what luite is doing.
2011-04-01 17:40:37 UTC <byorgey> indeed.
2011-04-01 17:40:48 UTC <fryguybob> luite: Are your sliders explicitly specified?
2011-04-01 17:41:13 UTC <fryguybob> ACTION hears a woosh of skis...
2011-04-01 17:41:22 UTC <byorgey> hehe
2011-04-01 17:41:32 UTC <luite> fryguybob: yes, unfortunately I don't know a better way
2011-04-01 17:41:38 UTC <fryguybob> Ah ok.
2011-04-01 17:42:53 UTC <luite> but my execution model is more limited than a local one, I can't use thunks or pass partially applied functions. every request has to be an expression, text based
2011-04-01 17:43:55 UTC <byorgey> fryguybob: is this standalone recompiling/previewing thing something you are interested in working on? (Feel free to say "no".)
2011-04-01 17:44:23 UTC <byorgey> It's not a huge priority but it is fun.
2011-04-01 17:44:44 UTC <fryguybob> Yeah, I don't think I will have time to do anything until mid June though.
2011-04-01 17:44:54 UTC <byorgey> ah, ok.
2011-04-01 17:46:27 UTC <byorgey> well, I may work on it if I get around to it, but the itch is scratched enough for now with the current hacked-up version, and I have a long list of other things to work on first.
2011-04-06 13:35:28 UTC <fryguybob> I made a minimal example of using Diagrams with hint: http://hpaste.org/45365/diagrams_with_hint
2011-04-06 15:15:50 UTC <byorgey> fryguybob: awesome, thanks!
2011-04-06 15:16:38 UTC <fryguybob> byorgey: I wasn't sure if the standalone deriving was going to work but it seemed to work fine.
2011-04-06 15:18:02 UTC <fryguybob> It also wasn't clear to me why I had to import what I did.
2011-04-06 15:18:16 UTC <byorgey> fryguybob: ah, yes, I see.  well, the instances for AnnDiagram and Cairo should be added.  not much we can do about Any. =)
2011-04-06 15:18:59 UTC <byorgey> yeah, I would have thought you would only need to import Diagrams.Prelude and Diagrams.Backend.Cairo.CmdLine
2011-04-06 15:19:46 UTC <fryguybob> Yeah I added deriving Typeable for AnnDiagram and Cairo then noticed Any and tried the standalone and it all worked.
2011-04-06 15:22:21 UTC <byorgey> I don't know if you've seen the stuff I've been playing around with in UDTree.  Freezing complicates everything =(
2011-04-06 15:26:28 UTC <fryguybob> byorgey: I looked at it a little bit this morning.  I'll try and look at it some more soon.
2011-04-06 15:36:34 UTC <byorgey> no rush, just wondering.
2011-04-08 18:12:45 UTC <fryguybob> byorgey: So, on issue 13.  I'm a little confused by diagrams-cairo's cairoStyle renderAttr.
2011-04-08 18:13:31 UTC <byorgey> me too.
2011-04-08 18:13:40 UTC <fryguybob> :D
2011-04-08 18:14:19 UTC <byorgey> don't waste brainpower thinking about #13 until I'm done with #15.
2011-04-08 18:14:19 UTC <fryguybob> cairoTransf t >> f a >> cairoTransf (inv t)  -- seems more correct
2011-04-08 18:14:41 UTC <byorgey> yes, but I think I tried that and it doesn't work.
2011-04-08 18:15:05 UTC <byorgey> I need to look more carefully into how setting attributes in cairo interacts with the current transformation.
2011-04-08 18:15:53 UTC <byorgey> well, *someone* needs to look more carefully into it, it doesn't necessarily have to be me =)
2011-04-08 18:16:40 UTC <fryguybob> Hehe, I'm mostly trying to get up to speed on things and write down some "laws" for how things should behave in the presence of freeze.
2011-04-08 18:17:10 UTC <byorgey> ah, great.
2011-04-08 18:17:25 UTC <fryguybob> Certainly   d # freeze # lc x == d # lc x # freeze :D
2011-04-08 18:17:48 UTC <byorgey> yes, which doesn't hold currently =)
2011-04-08 18:18:21 UTC <byorgey> also  freeze . f . freeze === freeze . f
2011-04-08 18:18:28 UTC <fryguybob> yes
2011-04-08 18:18:32 UTC <byorgey> err, f . freeze
2011-04-08 18:18:58 UTC <byorgey> I shouldn't mix # and .
2011-04-08 18:19:54 UTC <fryguybob> On the canvas backend   canvasTransf t >> f a >> canvasTransf (inv t)    lc x does commute correctly so it does seem like it is some strange interaction with Cairo.  I don't think the canvas output is correct yet though :D.
2011-04-08 18:21:19 UTC <byorgey> hehe =)
2011-04-08 18:28:03 UTC <fryguybob> One thing that is entirely clear to me is what something like  d # freeze # scale 2 # lw 2  means.
2011-04-08 19:03:57 UTC <byorgey> fryguybob: well I'm glad it's entirely clear to you! ;)
2011-04-08 19:04:59 UTC <fryguybob> byorgey: Ooops, I meant to say, *not* entirely clear.
2011-04-08 19:05:10 UTC <byorgey> hehe, I figured =)
2011-04-08 19:05:18 UTC <fryguybob> yeah
2011-04-08 19:06:06 UTC <fryguybob> It almost seems to me that freeze should be a type change.
2011-04-08 19:06:38 UTC <byorgey> hmm.  and then you can't apply transformable attributes to frozen things, or something?
2011-04-08 19:07:14 UTC <fryguybob> Yeah attributes that commute with freeze can be on either side.  But I haven't thought it through all the way.
2011-04-08 19:12:37 UTC <fryguybob> Humm, I think I have something I can test with Cairo that should clear a few things up.
2011-04-08 19:42:40 UTC <byorgey> actually, I think d # freeze # scale 2 # lw 2  makes sense.
2011-04-08 19:43:12 UTC <byorgey> it means that the line width should be uniformly equal to 2 with respect to the diagram's local vector space after applying the scale.
2011-04-08 19:43:29 UTC <byorgey> but since it's frozen any further transformations will affect the line width.
2011-04-08 19:43:56 UTC <byorgey> so e.g.  d # freeze # scale 2 # lw 2 # scale 2 === d # freeze # scale 4 # lw 4
2011-04-08 19:44:13 UTC <byorgey> === d # freeze # lw 1 # scale 4
2011-04-08 19:44:55 UTC <fryguybob> ok so on the other side   d # lw x # scale s # freeze === d # scale s # lw x # freeze
2011-04-08 19:48:23 UTC <byorgey> yes
2011-04-08 19:50:05 UTC <fryguybob> And  lw x # lw y === lw y
2011-04-08 19:50:58 UTC <byorgey> no, lw x
2011-04-08 19:51:03 UTC <fryguybob> ok
2011-04-08 19:51:26 UTC <byorgey> inner things i.e. things lower down in the AST override outer/higher things
2011-04-08 19:51:47 UTC <byorgey> so if you have some d and you apply an attribute to it, it only has an effect if that attribute was not already set
2011-04-08 19:52:13 UTC <byorgey> ok, I've got to go, talk to you later
2011-04-08 19:52:18 UTC <fryguybob> ok
2011-04-08 20:53:29 UTC <fryguybob> byorgey: I forgot to recompile (hint makes you forget about these things) so when I tested   cairoTransf t >> f a >> cairoTransf (inv t)   before I didn't see a change, but now after recompiling it appears to make lc x commute correctly.
2011-04-08 21:10:45 UTC <fryguybob> Ahh cairoTransf t >> f a >> cairoTransf (inv t)   makes lw always act as though it is unfrozen.
2011-04-08 22:20:19 UTC <byorgey> fryguybob: right, that was the problem.
2011-04-08 22:20:59 UTC <luite_> hmm, what does freeze do?
2011-04-08 22:21:08 UTC <luite_> (too busy in #haskell at the moment :p )
2011-04-08 22:22:49 UTC <byorgey> luite_: normally if you set, say, the line width of a diagram, the line width will be relative to the vector space of the *final* rendered diagram
2011-04-08 22:23:29 UTC <byorgey> this is so you can have a bunch of diagrams set to say lw 2 and have them all come out looking like they are drawn with the same size lines, even if you transformed some of them
2011-04-08 22:23:54 UTC <luite_> does it do the same for alpha values and compositing?
2011-04-08 22:23:55 UTC <fryguybob> I updated issue 13, don't know if you saw.
2011-04-08 22:24:02 UTC <byorgey> but once you freeze a diagram, transformations start affecting attributes like the line width as well, so scaling a diagram makes the lines get thicker/thinner, etc.
2011-04-08 22:24:21 UTC <byorgey> luite_: I'm not sure what effect transformations would have on alpha values
2011-04-08 22:24:52 UTC <byorgey> fryguybob: I did see, but I haven't had a chance to look at the patch yet
2011-04-08 22:25:21 UTC <luite_> hmm, ok. because I wondered, when you have two crossing lines, and then change the alpha to 0.5, does that make the whole cross 0.5, or will the point where the two lines cross be darker
2011-04-08 22:25:30 UTC <luite_> and how can you get both behaviours :)
2011-04-08 22:26:32 UTC <fryguybob> luite_: That's a good point.  I'm not sure what would happen in that situation right now.
2011-04-08 22:27:22 UTC <luite_> I'm pretty sure that you can get both with svg with grouping, don't know about cairo though
2011-04-08 22:27:33 UTC <byorgey> you can do grouping with cairo too
2011-04-08 22:27:46 UTC <byorgey> right now the intersection point would be darker
2011-04-08 22:28:14 UTC <byorgey> but we could probably just add a 'group' primitive, which backends would be free to ignore if they don't have a notion of grouping
2011-04-08 22:29:25 UTC <byorgey> I don't think I've actually played around with transparency at all even thought the current colour library + cairo backend can totally handle it =)
2011-04-08 22:29:39 UTC <luite_> groupign would probably be very useful for other things, like stencil groups, where one group determines where another is visible
2011-04-08 22:29:52 UTC <luite_> or compositing groups
2011-04-08 22:30:16 UTC <byorgey> right, good idea.
2011-04-08 22:30:51 UTC <luite_> don't know how good the backend support is for those things. pdf has a lot of transparency things, but postscript doesn't
2011-04-08 22:33:41 UTC <luite_> it would be messy if diagrams had to do all the compositing (especially if the output format is vector based)
2011-04-08 22:34:30 UTC <byorgey> yeah, we definitely don't want to get ourselves into the business of compositing.
2011-04-08 22:35:16 UTC <luite_> I looked at the pdf spec some time ago and apparently there's a lot involved in building a flexible transparency model, fortunately I didn't need to bother with all that :)
2011-04-08 22:41:42 UTC <byorgey> fryguybob: if I'm understanding your patch correctly, wouldn't that break if there was more than one type of transformable attribute?
2011-04-08 22:41:58 UTC <fryguybob> Yes
2011-04-08 22:42:05 UTC <byorgey> =(
2011-04-08 22:42:24 UTC <luite_> . o O ( #haskell is getting too big for beginners to get proper help with monads )
2011-04-08 22:42:43 UTC <fryguybob> But it depends on the kind of transformations that attribute allows.
2011-04-08 22:43:32 UTC <fryguybob> I think we could just as easily transform the line width value itself instead of building the matrix, but then if you do scaleX you won't get a varying line width like you should.
2011-04-08 22:43:46 UTC <byorgey> right.
2011-04-08 22:44:14 UTC <fryguybob> So attributes where that kind of transformation isn't needed would be fine.
2011-04-08 22:45:00 UTC <luite_> hmm, can't you combine the freezing with grouping, so that you don't need a separate freeze after all
2011-04-08 22:45:13 UTC <fryguybob> Like if you had an attribute for arrows at the end of a path.  You don't want those squished anyway..
2011-04-08 22:46:46 UTC <fryguybob> Another way to get the same scaling behavior for lines would be to convert them to filled areas on a freeze.
2011-04-08 22:47:11 UTC <byorgey> but then you can't later set their color.
2011-04-08 22:47:35 UTC <fryguybob> Right
2011-04-08 22:47:38 UTC <fryguybob> I think this is why I was confused about d # freeze # lw x
2011-04-08 22:48:13 UTC <fryguybob> I think what I think of with freeze is getting the semantics of  type image = VectorSpace v => v -> Pixel
2011-04-08 22:48:37 UTC <fryguybob> I've got to run.  Talk to you all later.
2011-04-08 22:48:43 UTC <byorgey> ok, see you
2011-04-09 01:30:26 UTC <byorgey> making some good progress on switching over to a tree representation. I've ripped out the guts, stuck a tree in its place, and now carefully suturing the wound closed ;)
2011-04-09 01:47:48 UTC <fryguybob> :D
2011-04-09 01:52:05 UTC <byorgey> fryguybob: did you read my comments on #13?  Do they make sense?
2011-04-09 01:52:59 UTC <fryguybob> Still reading :D
2011-04-09 01:53:04 UTC <byorgey> ok =)
2011-04-09 02:01:47 UTC <fryguybob> byorgey: Yes that makes sense to me!
2011-04-09 02:05:03 UTC <byorgey> ok, good =)
2011-04-09 11:42:16 UTC <byorgey> refactoring done. looks like it introduced a few bugs.
2011-04-09 11:42:38 UTC <byorgey> haven't had much time to test and track them down, will get to it on Monday.
2011-04-09 12:42:38 UTC <byorgey> hmm, one bug down, but others yet remain =)
2011-04-09 16:42:46 UTC <fryguybob> byorgey: ping
2011-04-09 16:51:26 UTC <fryguybob> I added a fuller example of using hint here: http://hpaste.org/45484/hint_diagrams_20
2011-04-11 00:23:34 UTC <fryguybob> byorgey: I can now successfully load a module and find all the top level expressions that are diagrams.
2011-04-11 18:14:53 UTC <byorgey> fryguybob: diagrams-hint looks promising, thanks!
2011-04-11 18:16:08 UTC <byorgey> also, I just found out that the HCAR submission deadline is May 1, and it would be really nice to have something released by then so we can talk about it
2011-04-11 18:16:21 UTC <fryguybob> Yeah, it's fun.  Shouldn't be too much more work and it will be ready to do the really fun stuff.
2011-04-11 18:16:42 UTC <byorgey> so I'm arbitrarily setting April 30 as the deadline for having a preview release out
2011-04-11 18:16:46 UTC <byorgey> =)
2011-04-11 18:17:08 UTC <fryguybob> Excellent
2011-04-11 18:17:20 UTC <fryguybob> The prestigious 20th edition.
2011-04-11 18:17:36 UTC <byorgey> oh, is it?  I didn't even realize that
2011-04-26 13:40:42 UTC <fryguybob> byorgey: Which would be better `segmentSplitAtParam` or `splitAtParam` or something else?
2011-04-26 14:49:41 UTC <fryguybob> byorgey: The latest isn't building for me because of some of the imports that were removed.
2011-04-26 15:08:22 UTC <fryguybob> I think you just forgot to push some changes from core.
2011-04-26 16:11:33 UTC <byorgey> fryguybob: yes, sorry, I was trying to push them last night before going to bed but my connection died =(
2011-04-26 16:11:38 UTC <byorgey> I'm pushing them now
2011-04-26 16:12:34 UTC <byorgey> last night I actually thought "I hope Ryan does not try to work on diagrams tomorrow morning because it will not build for him"
2011-04-26 17:10:13 UTC <fryguybob> byorgey: Hehe, no problem :D.
2011-04-26 17:24:53 UTC <byorgey> fryguybob: pushed
2011-04-26 17:25:21 UTC <byorgey> fryguybob: when I said "I'm pushing them now" it turns out I meant "after my computer crashes and I eat lunch and I talk for an hour with my officemates" =P
2011-04-26 17:25:37 UTC <fryguybob> of course, that's how all pushes work :D
2011-04-26 17:25:55 UTC <byorgey> sort of like "it's in the mail" =)
2011-04-26 17:26:39 UTC <fryguybob> did you have an opinion on the name?
2011-04-26 17:26:55 UTC <fryguybob> I think I'm leaning splitAtParam
2011-04-26 17:29:50 UTC <byorgey> yes, I like splitAtParam better too
2011-04-26 17:30:01 UTC <byorgey> the type should make it clear it is acting on segments.
2011-04-26 18:35:24 UTC <fryguybob> byorgey: Humm, does: class Arbitrary (Segment Q2) where ...  not make sense?
2011-04-26 18:35:46 UTC <byorgey> fryguybob: should be fine, why?
2011-04-26 18:37:35 UTC <fryguybob> I get the following error: http://hpaste.org/46059/quickcheck
2011-04-26 18:38:30 UTC <byorgey> oh! s/class/instance/  =)
2011-04-26 18:38:46 UTC <byorgey> that's not a very helpful error message
2011-04-26 18:39:22 UTC <fryguybob> ha, oops
2011-04-26 18:48:18 UTC <fryguybob> byorgey: Ok, I pushed.
2011-04-26 18:49:12 UTC <byorgey> cool, thanks!
2011-04-26 18:51:19 UTC <byorgey> haha, "lerp lerp lerp lerp lerp lerp"
2011-04-26 18:51:34 UTC <byorgey> call me juvenile but I find that hilarious =)
2011-04-26 18:51:47 UTC <fryguybob> :D
2011-04-26 18:55:20 UTC <byorgey> fryguybob: I am surprised to learn that there is no closed form for cubic Bezier arc length!
2011-04-26 18:55:56 UTC <byorgey> everything else about Bezier curves seems so neat and tidy
2011-04-26 18:55:57 UTC <fryguybob> Yeah it seams it is a sacrifice that you have to make to get nice subdivision.
2011-04-26 18:56:30 UTC <byorgey> well, I think it's useful in its own right as well
2011-04-26 18:57:13 UTC <byorgey> for example one thing I thought of that might be useful is an operation like "shorten this segment to 80% of its former length"
2011-04-26 18:57:44 UTC <byorgey> e.g. if you want a curved arrow pointing between two things but you want a little space between the arrow endpoints and the things being pointed from/to
2011-04-26 18:58:54 UTC <fryguybob> Yeah, it might be nice to have a more computationally heavy segment that is a Cubic with a length based parameterization.
2011-04-26 19:00:33 UTC <fryguybob> So "80% its former length" would be:  fst (splitAtParam c 0.8)
2011-04-26 19:01:35 UTC <byorgey> hmm, indeed
2011-04-26 19:02:10 UTC <byorgey> well, or maybe we can just provide a different operation, like splitAtParam, but which works by length instead of by t?
2011-04-26 19:02:45 UTC <byorgey> fundamentally I suppose we just need to be able to convert between t-values and arc length values
2011-04-26 19:03:25 UTC <byorgey> t -> arc length is easy given splitAtParam and arcLength
2011-04-26 19:03:31 UTC <luite> is shortening by a percentage really a good way? typically if you wanted to have your image look consistent, you'd want to have all arrowheads the same distance from the thing they point to, regardless of arrow length
2011-04-26 19:04:04 UTC <byorgey> ok, sure, we would also want a way to adjust the length by an absolute amount
2011-04-26 19:04:44 UTC <byorgey> but all these sorts of things can be easily implemented in terms of just a few fundamental pieces
2011-04-26 19:04:46 UTC <luite> tikz uses a shortening parameter for the arrow head I think
2011-04-26 19:06:08 UTC <fryguybob> One case where the map from t -> arc length is important is when placing things at length along a bezier.  Stroking with patterns for instance.
2011-04-26 19:06:26 UTC <luite> yeah or a label anchored at some point
2011-04-26 19:06:36 UTC <fryguybob> Right
2011-04-26 19:06:39 UTC <byorgey> hmm, don't you want arc length -> t for that?
2011-04-26 19:07:08 UTC <fryguybob> byorgey: Oops yes.
2011-04-26 19:07:29 UTC <byorgey> but I agree being able to convert in both directions is important
2011-04-26 19:08:23 UTC <byorgey> I suppose arc length -> t is done by some sort of subdivision as well
2011-04-26 19:09:28 UTC <fryguybob> If the invariant in the test that I pushed holds then we can share %arc length -> t maps across subdivisions.
2011-04-26 19:09:34 UTC <fryguybob> I don't know if that is helpful though.
2011-04-26 19:11:05 UTC <fryguybob> As in, if you know f :: %arc length -> t for  b, then you can compute it based on f for  (l,r) =  splitAtParam b t
2011-04-26 19:11:35 UTC <byorgey> makes sense
2011-04-26 19:15:03 UTC <fryguybob> byorgey: I haven't had time to play around with it, but this package could have some interesting stuff: http://hackage.haskell.org/package/polynomials-bernstein
2011-04-26 19:15:56 UTC <byorgey> woah, crazy
2011-04-26 19:16:29 UTC <byorgey> "Computes the intersection of a given Bezier hypersurface, given by its graph, with plane z=0."
2011-04-26 19:16:33 UTC <byorgey> o.O
2011-04-26 19:17:20 UTC <byorgey> It might be useful, but it's so abstract I can't tell yet =)
2011-04-26 19:17:28 UTC <fryguybob> Yeah :D
2011-04-26 19:17:46 UTC <byorgey> let's see if any other packages depend on it...
2011-04-26 19:18:55 UTC <byorgey> indeed, http://hackage.haskell.org/package/typography-geometry
2011-04-26 19:19:31 UTC <byorgey> ooh
2011-04-26 19:19:33 UTC <byorgey> approximate :: [Curve] -> [(Bernsteinp Int Double, Bernsteinp Int Double)]Source
2011-04-26 19:19:36 UTC <byorgey> Approximates a list of Curves with a list of degree 3 Bernstein curves.
2011-04-26 19:20:14 UTC <fryguybob> fun
2011-04-26 19:21:19 UTC <byorgey> looks like he was implementing a bunch of algorithms for essentially making a Haskell implementation of Metafont
2011-04-26 19:24:06 UTC <byorgey> and he was working on it as recently as four days ago, judging by the timestamps in his darcs repo =)
2011-04-26 19:24:43 UTC <byorgey> perhaps we can convince him to help with the implementation of text for diagrams
2011-04-26 19:25:30 UTC <fryguybob> Indeed.
2011-04-26 19:29:35 UTC <byorgey> sigh, this is boring
2011-04-26 19:29:50 UTC <byorgey> I am kicking myself now for not being better about writing good documentation along the way =P
2011-04-26 19:31:19 UTC <fryguybob> Yeah, I have that problem at work, but the backlog goes back 13 years...
2011-04-26 19:32:04 UTC <byorgey> haha, wow
2011-04-26 21:46:31 UTC <byorgey> whew, finally done adding Haddock documentation
2011-04-26 21:47:05 UTC <byorgey> of course, we will still need a tutorial and a user's manual but those can wait =)
2011-04-26 21:48:59 UTC <fryguybob> ACTION has been considering writing a blog post or two...
2011-04-26 21:49:23 UTC <byorgey> sure, that sounds fun
2011-04-26 21:49:34 UTC <byorgey> but wait until we put something up on Hackage of course
2011-04-26 21:49:43 UTC <fryguybob> yeah
2011-04-26 21:50:02 UTC <byorgey> hmm, so what still needs to be done before we do put something up on Hackage?
2011-04-26 21:51:16 UTC <byorgey> I'm imagining just announcing it as a "preview" release, i.e. enough for curious people to take a look, but not to expect too much
2011-04-26 21:51:26 UTC <byorgey> I want to start attracting more contributors
2011-04-26 21:51:41 UTC <fryguybob> I think as it is it doesn't build on Windows.  I have a patch that makes it build for me but also has stuff trying to do the looped compile thing.
2011-04-26 21:52:38 UTC <fryguybob> Should I cut that patch down to something that conditionally removes that functionality?
2011-04-26 21:52:44 UTC <byorgey> sure
2011-04-26 21:52:51 UTC <byorgey> and how hard is cairo to install on Windows?
2011-04-26 21:52:52 UTC <fryguybob> Ok.
2011-04-26 21:53:01 UTC <byorgey> I seem to recall that being a showstopper for Windows people before
2011-04-26 21:53:29 UTC <byorgey> which is part of the reason this version is more backend-pluggable
2011-04-26 21:53:38 UTC <fryguybob> Well it was quite easy but 7.0.3 requires some patching to the setup files unfortunately.
2011-04-26 21:53:47 UTC <byorgey> ah =(
2011-04-26 21:54:01 UTC <fryguybob> I don't think it has been fixed yet.
2011-04-26 21:54:21 UTC <byorgey> well, again, this is a preview release -- I think it's OK if we say up front "it's probably difficult to get working on Windows, but just wait!"
2011-04-26 21:54:35 UTC <fryguybob> http://hackage.haskell.org/trac/gtk2hs/ticket/1203
2011-04-26 21:54:42 UTC <fryguybob> Yeah that's fine.
2011-04-26 21:55:23 UTC <byorgey> long-term, we'll want to start pushing some other backends that are easier to get going on Windows
2011-04-26 21:55:34 UTC <byorgey> like maybe a native SVG backend or something
2011-04-26 21:55:38 UTC <byorgey> ?
2011-04-26 21:55:59 UTC <fryguybob> Yeah that wouldn't be very hard.
2011-04-26 21:57:21 UTC <byorgey> I'd like to get this path-inside-outside-testing thing working before the preview release
2011-04-26 21:58:06 UTC <fryguybob> One thing that I was wondering is are we going to consider line thickness when calculating bounds?
2011-04-26 21:58:12 UTC <byorgey> other than that I don't think there's anything critical
2011-04-26 21:58:19 UTC <byorgey> no
2011-04-26 21:58:25 UTC <fryguybob> ok that makes it easy :D
2011-04-26 21:58:53 UTC <byorgey> especially because the relative line thickness might change if the diagram isn't frozen and you do a scale
2011-04-26 21:59:34 UTC <byorgey> although having the ability to include the line thickness in the bounds would probably be a good idea.  but in any case it can wait.
2011-04-26 22:00:14 UTC <fryguybob> I suppose there could be some use to a "hardFreeze" that changes to a filled closed path, but that requires a lot of work.
2011-04-26 22:00:28 UTC <byorgey> yeah.
2011-04-26 22:00:32 UTC <fryguybob> But that would naturally include line thickness in the bounds.
2011-04-26 22:00:55 UTC <byorgey> yes, that's probably the right way to do it.  i.e. do the 'stroking' ourselves, manually.
2011-04-26 22:01:12 UTC <byorgey> why is it a lot of work?
2011-04-26 22:01:38 UTC <fryguybob> Well calculating the offset of a bezier is not easy.
2011-04-26 22:01:52 UTC <byorgey> oh, hm, yes, I see!
2011-04-26 22:01:58 UTC <fryguybob> I think there was something for that in the typography package we were looking at though.
2011-04-26 22:02:04 UTC <fryguybob> That made me excited.
2011-04-26 22:02:05 UTC <byorgey> shiny =)
2011-04-26 22:02:59 UTC <fryguybob> ACTION runs off to diner.
2011-04-26 22:03:13 UTC <byorgey> ok, enjoy your dinner. talk to you later.
2011-04-26 22:06:51 UTC <luite> proper font support could be an issue, with cairo or a native svg backend
2011-04-26 22:20:14 UTC <luite> hmm, I don't think there are haskell libraries that can convert a ttf/otf font to svg, but you can get the outlines for glyphs with the freetype2 bindings
2011-04-26 22:37:14 UTC <byorgey> luite: yeah, I was planning to look into getting glyph outlines with freetype2
2011-04-28 00:00:02 UTC <fryguybob> byorgey: I can't get anything conclusive about the accuracy.
2011-04-28 13:53:16 UTC <fryguybob> ACTION loves darcs amend-record.
2011-04-28 13:54:00 UTC <fryguybob> byorgey: I have a patch that avoids the looping stuff for Windows via CPP, do you want to look it over before I push?
2011-04-28 14:45:06 UTC <byorgey> amend-record is nice indeed =)
2011-04-28 14:46:03 UTC <byorgey> fryguybob: not really, go ahead =)
2011-04-28 14:46:15 UTC <fryguybob> ok
2011-04-28 21:29:22 UTC <fryguybob> byorgey: Is there an alignment aware atop combinator?
2011-04-28 21:29:50 UTC <byorgey> fryguybob: what do you mean?
2011-04-28 21:30:18 UTC <byorgey> there is no such thing as alignment, really
2011-04-28 21:30:24 UTC <byorgey> only local origins
2011-04-28 21:30:47 UTC <byorgey> atop matches up the local origins of two diagrams
2011-04-28 21:32:38 UTC <fryguybob> I think I know how to write what I want.
2011-04-28 21:33:08 UTC <fryguybob> The specific problem is given a box, put a smaller box in each corner of that box.
2011-04-28 21:34:39 UTC <fryguybob> byorgey: I want to be able to write that as:  acat [ sheet, aTL corner, aTR corner, aBL corner, aBR corner ]
2011-04-28 21:35:54 UTC <byorgey> hmm
2011-04-28 21:38:02 UTC <byorgey> you could do something like  acat :: D -> [(D, D -> D)];  acat = foldr (\d (other, algn) -> algn other <> algn d),  maybe?
2011-04-28 21:38:53 UTC <byorgey> otherwise you have to write code to look at a diagram and figure out "how it's aligned" by looking at its local origin in relation to its bounding region
2011-04-28 21:39:08 UTC <byorgey> that might be useful but I'm not sure what it would do in general.
2011-04-28 21:40:37 UTC <fryguybob> I'll experiment some and let you know what works for me.
2011-04-28 21:40:44 UTC <fryguybob> Thanks!
2011-04-28 21:41:56 UTC <byorgey> ok
2011-04-28 21:43:42 UTC <byorgey> fryguybob: what's stripProg?  I get a not-in-scope error
2011-04-28 21:44:01 UTC <byorgey> in D.B.Cairo.CmdLine
2011-04-28 21:44:07 UTC <fryguybob> Humm
2011-04-28 21:45:55 UTC <fryguybob> Yeah I missed that line.
2011-04-28 21:46:09 UTC <byorgey> hehe
2011-04-28 21:47:02 UTC <byorgey> well, see if you can push a fix when you get a chance, but no rush, I'm about to head home
2011-04-28 21:47:48 UTC <fryguybob> Ok, I pushed with that line removed.
2011-04-28 21:49:27 UTC <byorgey> thanks, works now =)
2011-04-29 22:56:46 UTC <fryguybob> byorgey: Here's what I ended up with: http://hpaste.org/46174/acat
2011-04-29 23:04:10 UTC <fryguybob> I'm not sure about it, but it seems a little better than what I had before.
2011-05-02 21:18:52 UTC <byorgey> fryguybob: can you explain what the 'phantom b' in your example is for?  I'm not sure I understand what it is doing.
2011-05-05 13:20:49 UTC <fryguybob> byorgey: Nice work on issue 17!
2011-05-05 13:21:45 UTC <fryguybob> I was not thinking clearly before on that and was confusing the issue with general clipping with beziers.
2011-05-05 14:21:44 UTC <byorgey> fryguybob: thanks!
2011-05-05 14:22:33 UTC <byorgey> not sure what you mean by general clipping
2011-05-05 14:23:19 UTC <fryguybob> byorgey: Computing intersection and union of closed paths.
2011-05-05 14:23:24 UTC <byorgey> ah, right
2011-05-05 14:23:37 UTC <byorgey> we will want that too, eventually, but it sounds difficult
2011-05-05 14:24:07 UTC <fryguybob> byorgey: Yeah we gave up at work and used GPC :D.
2011-05-05 14:24:39 UTC <byorgey> hehe
2011-05-05 14:29:50 UTC <byorgey> fryguybob: getting close to a preview release now.
2011-05-05 14:30:01 UTC <fryguybob> Excellent.
2011-05-05 14:30:17 UTC <byorgey> anything else you can think of that we ought to do before releasing?
2011-05-05 14:31:23 UTC <fryguybob> I wish I had more time to do some stuff with hint, but my replacement has been hired at work and so I'm quite busy training.
2011-05-05 14:31:38 UTC <byorgey> right, no worries
2011-05-05 14:32:28 UTC <byorgey> how much longer will you be at your job?
2011-05-05 14:32:44 UTC <fryguybob> Until the end of May.
2011-05-05 14:32:54 UTC <byorgey> just out of curiosity, this is not  version of "when will you start working on stuff with hint" =)
2011-05-05 14:33:00 UTC <byorgey> *not a coded version
2011-05-05 14:33:14 UTC <fryguybob> Right
2011-05-05 14:33:34 UTC <byorgey> any fun plans for the summer before you start school?
2011-05-05 14:33:38 UTC <fryguybob> Then in June I'm at the ACMS conference and after that I'm free.
2011-05-05 14:33:55 UTC <fryguybob> Hacphi!!
2011-05-05 14:34:10 UTC <fryguybob> I'm going to try and study up on some things and do a lot of cycling.
2011-05-05 14:34:12 UTC <byorgey> yay!
2011-05-05 14:34:28 UTC <byorgey> sounds nice =)
2011-05-05 14:34:39 UTC <byorgey> ACMS?
2011-05-05 14:34:50 UTC <fryguybob> http://acmsonline.org/
2011-05-05 14:35:18 UTC <fryguybob> It is mostly math people but that fits nicely with my wife and me.
2011-05-05 14:35:36 UTC <byorgey> oh, neat!
2011-05-05 14:35:48 UTC <fryguybob> I'm excited that Brooks is talking at this one.
2011-05-05 14:36:08 UTC <byorgey> I didn't know you're a Christian, so am I =)
2011-05-05 14:36:54 UTC <fryguybob> :D
2011-05-05 14:37:48 UTC <byorgey> for some reason I don't remember hearing about ACMS before, although I'm sure I did hear about it at InterVarsity's Following Christ conference a few years back
2011-05-05 14:39:07 UTC <fryguybob> Yeah I went to Wheaton for undergrad and the guy that started it was the head of the Math department there.
2011-05-05 14:39:27 UTC <byorgey> I see, cool
2011-05-08 12:57:43 UTC <luite> http://hackage.haskell.org/packages/archive/dia-base/0.1/doc/html/Graphics-Diagrams.html <- hmm, more competition :p
2011-05-08 12:58:14 UTC <luite> http://pnyf.inf.elte.hu/fp/Diagrams_en.xml
2011-05-08 18:04:54 UTC <byorgey> that's very cool!
2011-05-08 18:04:59 UTC <byorgey> it's not competition.
2011-05-08 18:06:01 UTC <byorgey> the scope is obviously MUCH smaller.
2011-05-08 19:10:31 UTC <luite> hehe yes, but it's a cool result
2011-05-08 19:13:57 UTC <luite> by the way, I have a demo of a reworked interface online now: http://jabberwock.xs4all.nl/exp/jquery-console/
2011-05-08 19:14:46 UTC <luite> the interactive graphics are done with wumpus at the moment, until there's a native svg backend for diagrams that supports annotations, such as onclick event handlers :)
2011-05-08 19:15:33 UTC <luite> it only supports expression cells at the moment, but I'm going to add comment cells (with markdown) and definitions
2011-05-08 22:22:39 UTC <luite> I was wondering, is something like "defs" planned or implemented in diagrams, where you can make building blocks that are reused, even in the output image?
2011-05-09 11:17:34 UTC <byorgey> luite: oh, interesting question, I'd have to think about it
2011-05-09 11:17:58 UTC <byorgey> Something like this should definitely be possible but I'm not sure what the best way to go about it would be
2011-05-13 20:19:51 UTC <byorgey> fryguybob: do you have a link to something about getting cairo to build/work on Windows?
2011-05-13 20:20:02 UTC <byorgey> I'd like to mention it in the tutorial
2011-05-13 20:21:05 UTC <fryguybob> Yeah, let me dig up a couple things.
2011-05-13 20:21:21 UTC <byorgey> aiming for a release on Monday!
2011-05-13 20:22:19 UTC <fryguybob> Super!
2011-05-13 20:22:32 UTC <fryguybob> http://www.haskell.org/pipermail/haskell-cafe/2011-May/091656.html  is the latest from someone having trouble.
2011-05-13 20:22:48 UTC <fryguybob> http://hackage.haskell.org/trac/gtk2hs/ticket/1203 is the issue with 7.0.x
2011-05-13 20:23:56 UTC <fryguybob> I think the steps normally followed to get the gtk libraries are on the gtk2hs project page, but that is down (as mentioned in the thread).
2011-05-13 20:27:58 UTC <byorgey> ok, thanks!
2011-05-13 20:28:09 UTC <fryguybob> These steps should work with the exception of the #1203 issue:  http://jystic.com/2010/10/20/installing-gtk2hs-on-windows/
2011-05-13 20:28:40 UTC <fryguybob> But doing  --global is the easiest way around that (if you don't mind the consequences)
2011-05-13 20:29:52 UTC <byorgey> doing --global for what?
2011-05-13 20:32:42 UTC <luite> hmm, where was the darcs repository for diagrams again?
2011-05-13 20:33:13 UTC <byorgey> patch-tag.com/r/byorgey/diagrams-X
2011-05-13 20:33:20 UTC <fryguybob> sorry, looked away.
2011-05-13 20:33:25 UTC <byorgey> where X is an element of {core,lib,cairo,doc}
2011-05-13 20:33:27 UTC <fryguybob> cabal install cairo --global
2011-05-13 20:33:33 UTC <byorgey> oh, ok, I see
2011-05-13 20:33:44 UTC <byorgey> I think I'll just make a page about this on the wiki and link to it from the tutorial
2011-05-13 20:34:02 UTC <fryguybob> Sounds good.  I can fill in details there.
2011-05-13 20:34:35 UTC <byorgey> cool, thanks.
2011-05-13 20:51:39 UTC <luite> hmm, looks like my mysterious cairo linking problems have been solved with the upgrade to 7.0.3
2011-05-13 20:52:15 UTC <luite> at least I can compile the cairo examples now, from the darcs repository :)
2011-05-13 20:55:49 UTC <byorgey> excellent =)
2011-05-13 20:56:56 UTC <luite> is there any support for text in this release?
2011-05-13 20:58:12 UTC <byorgey> fryguybob: http://code.google.com/p/diagrams/wiki/CairoOnWindows
2011-05-13 20:58:17 UTC <byorgey> luite: no, there isn't
2011-05-13 20:58:40 UTC <byorgey> but that's high on the list of things to work on.
2011-05-13 20:58:51 UTC <byorgey> it's quite difficult to do well.
2011-05-13 20:58:53 UTC <luite> hmm, yes, but tricky to get right
2011-05-13 20:58:58 UTC <byorgey> indeed.
2011-05-13 20:59:28 UTC <luite> only local coordinates would be a problem in many applications
2011-05-13 21:00:00 UTC <byorgey> why is that?
2011-05-13 21:01:07 UTC <luite> because you often want consistent font sizes I think, and the positioning of the text could depend on its relative size compared to the geometry
2011-05-13 21:01:48 UTC <byorgey> ah, right, indeed.  I didn't realize you were still specifically talking about text
2011-05-13 21:01:56 UTC <luite> oh ok :)
2011-05-13 21:02:23 UTC <luite> text metrics might even depend on their size, some fonts have glyph sets for different sizes
2011-05-13 21:02:40 UTC <byorgey> yikes, indeed
2011-05-13 21:03:43 UTC <luite> are there existing and usable libraries for proper typesetting in exotic situations, like text along a bezier?
2011-05-13 21:04:28 UTC <byorgey> there is a library fryguybob and I were looking at the other day which looks promising -- it basically looked like someone was trying to reimplement metafont in Haskell =)
2011-05-13 21:04:41 UTC <byorgey> so we might see if he is interested in contributing
2011-05-13 21:10:21 UTC <byorgey> a first-order approximation would be to have text take up no space, and make font size an attribute (hence not affected by transformations unless frozen)
2011-05-13 21:10:44 UTC <byorgey> if you wanted text to take up space you'd have to add an explicit bounding function yourself
2011-05-13 21:11:13 UTC <byorgey> to actually get it to automatically adjust everything according to the final size of the text will require first implementing a module to do constraint-based layout
2011-05-13 21:11:17 UTC <byorgey> which is also on the todo list anyway
2011-05-13 21:11:49 UTC <luite> I imagine that people will want LaTeX like math things once you add text :)
2011-05-13 21:12:00 UTC <byorgey> oh, of course =)
2011-05-13 21:12:18 UTC <byorgey> but that will be the domain of a backend that knows how to interpret LaTeX
2011-05-13 21:12:30 UTC <byorgey> or that can generate latex + pstex
2011-05-13 21:12:42 UTC <luite> or someone who wants to invent a new edsl for math :p
2011-05-13 21:12:46 UTC <byorgey> haha
2011-05-13 21:13:17 UTC <byorgey> well, I'm certainly not stopping them =)
2011-05-13 21:16:05 UTC <luite> where is this metafont lib by the way?
2011-05-13 21:18:37 UTC <byorgey> http://hackage.haskell.org/package/typography-geometry
2011-05-13 21:20:46 UTC <luite> ah still relatively low level
2011-05-13 21:21:54 UTC <byorgey> yes, it seems so
2011-05-13 21:22:30 UTC <byorgey> but combined with the freetype2 bindings that lispy has been putting together I think we will be able to get something working without having to reinvent the wheel
2011-05-13 21:22:32 UTC <luite> whoah 10 let, 4 if/else, 2 case in a single function :)
2011-05-13 21:22:46 UTC <byorgey> haha, wow =)
2011-05-13 21:24:05 UTC <fryguybob> But how many lerps?
2011-05-13 21:24:47 UTC <luite> using freetype is going to take some work, getting the outlines for a glyph is supported, but requires some very low level manipulation
2011-05-13 21:25:00 UTC <byorgey> fryguybob: hahaha
2011-05-13 21:25:17 UTC <byorgey> luite: yeah.
2011-05-13 21:25:53 UTC <luite> reading fonts would require some part of the diagrams things to be in IO :(
2011-05-13 21:26:30 UTC <byorgey> yeah, that is sad indeed =(
2011-05-13 21:27:32 UTC <fryguybob> unsafePerformFont ...
2011-05-13 21:28:15 UTC <luite> initially just supporting svg fonts might be an alternative to freetype, at least it's relatively easy to parse
2011-05-13 21:29:39 UTC <fryguybob> Just bake all the users fonts in at compile time with template haskell =P
2011-05-13 21:29:46 UTC <luite> but I guess it depends on the output type
2011-05-13 21:30:00 UTC <luite> I don't think you can embed svg fonts in pdf
2011-05-13 21:30:03 UTC <luite> not sure though
2011-05-13 21:34:37 UTC <luite> hmm, I should get back to writing javascript if I ever want to finish this thing :)
2011-05-13 21:34:57 UTC <byorgey> =)
2011-05-13 21:35:38 UTC <luite> for some reason the quality of javascript code samples seems to be lower than haskell...
2011-05-14 15:47:13 UTC <fryguybob> byorgey: I like the tutorial.  It inspired me to add a command to diagrams-hint that renders all the top level diagrams in a module.
2011-05-16 17:50:07 UTC <byorgey> fryguybob: glad you like the tutorial.  And rendering all top-level diagrams sounds cool, unfortunately I can't try it out just yet since I only have ghc 6.12 on this computer (and waiting for them to up my disk quota so I can install 7.0.3 as well)
2011-05-16 17:50:29 UTC <byorgey> I'm working on a release announcement.
2011-05-16 17:51:18 UTC <fryguybob> Moar disk!!!
2011-05-16 18:07:13 UTC <byorgey> 8 GB is not enough when you start having things like multiple copies of the GHC development repository =P
2011-05-16 18:22:26 UTC <fryguybob> Yeah diagrams-hint links to 21.2 MB for me.
2011-05-16 20:02:10 UTC <byorgey> compile compile compile...
2011-05-16 20:09:01 UTC <luite> hmm, have you guys talked with tg_ some more? I saw him recommending a paper to byorgey
2011-05-16 20:09:38 UTC <byorgey> luite: he recommended a number theory paper to me, it had nothing to do with diagrams
2011-05-16 20:09:44 UTC <luite> he has all kinds of fantastic physical/mathematical theories, and apparently he needs me to integrate my haskell web interface with gitit to explain them
2011-05-16 20:09:45 UTC <byorgey> was tg_ talking about diagram stuff?
2011-05-16 20:09:53 UTC <byorgey> ah, hehe
2011-05-16 20:10:38 UTC <luite> I had seen the paper before, but I don't know much of the field, would take me a long time to make sense of it :)
2011-05-16 20:12:30 UTC <byorgey> same for me
2011-05-16 20:12:31 UTC <luite> he did talk about diagrams related stuff too though, and mentioned protovis, which has declarative visualization with basic interactivity. that's about waht I'd like to do with diagrams :)
2011-05-16 20:12:51 UTC <byorgey> hmm, I'd never heard of protovis
2011-05-16 20:13:01 UTC <byorgey> ah, looks cool
2011-05-16 20:14:04 UTC <byorgey> they call that "declarative"?
2011-05-16 20:14:16 UTC <luite> yeah I  have to admit that I was a bit disapponted too :p
2011-05-16 20:14:54 UTC <byorgey> I guess the style is mostly declarative, but with function names and syntax that make it sound imperative =P
2011-05-16 20:15:31 UTC <byorgey> anyway, I think a protovis-like library built on top of diagrams would be really cooll
2011-05-16 20:15:32 UTC <luite> but I think it should be perfectly possible to do these things with diagrams
2011-05-16 20:15:35 UTC <byorgey> yeah
2011-05-16 20:15:37 UTC <luite> yes!
2011-05-16 20:15:42 UTC <luite> but you need a native svg generator
2011-05-16 20:15:43 UTC <luite> :)
2011-05-16 20:15:58 UTC <byorgey> yep, shouldn't be too hard =)
2011-05-16 20:16:07 UTC <byorgey> no one's stopping you from writing one ;)
2011-05-16 20:16:37 UTC <luite> yeah I already started, but I didn't get much further than module SVGGenerator ;p
2011-05-16 20:16:54 UTC <byorgey> I see =)
2011-05-16 20:17:13 UTC <byorgey> well, feel free to link to what you've done from http://code.google.com/p/diagrams/wiki/BackendProjects, perhaps others can pick up where you left off
2011-05-16 20:17:16 UTC <luite> problem was that I didn't know how to do things like fonts
2011-05-16 20:17:38 UTC <byorgey> we don't even have text objects yet, why are you worrying about fonts?
2011-05-16 20:17:50 UTC <byorgey> just get it working without text to start
2011-05-16 20:17:52 UTC <luite> and that I wanted to work on my web things first, and hoped that a svg backend would appear magically in the meantime ;p
2011-05-16 20:18:04 UTC <byorgey> hehe, fair enough =)
2011-05-16 20:18:26 UTC <fryguybob> ACTION waits for magic 3d printer backend.
2011-05-16 20:18:45 UTC <byorgey> =O
2011-05-16 20:19:08 UTC <byorgey> ACTION wants a magic 4d printer backend, as long as we are wishing for magical backends
2011-05-16 20:19:21 UTC <luite> fryguybob: does diagrams do 3d already?
2011-05-16 20:20:02 UTC <byorgey> luite: there's no reason in principle why it can't, although we have not yet added any 3d-specific primitives or transformations to the standard library
2011-05-16 20:20:27 UTC <byorgey> but that will just be a matter of taking the time to do it, there's nothing difficult about it
2011-05-16 20:20:47 UTC <byorgey> thanks for reminding me, I should make a ticket for that
2011-05-16 20:24:40 UTC <luite> hehe ok
2011-05-16 20:25:17 UTC <luite> bah I feel a bit guilty doing other stuffs while tg_ is explaining his theories to me :)
2011-05-16 20:26:27 UTC <byorgey> hehe
2011-05-16 20:41:23 UTC <byorgey> here's the release announcement: http://patch-tag.com/r/byorgey/diagrams-doc/snapshot/current/content/pretty/release/announce.markdown
2011-05-16 20:41:29 UTC <byorgey> feedback appreciated before I send it out
2011-05-16 20:41:49 UTC <byorgey> I may not actually quite get to it today but if not it will go out first thing in the morning
2011-05-16 20:42:38 UTC <byorgey> still trying to figure out the best way to distribute/make available the tutorial
2011-05-16 20:44:29 UTC <luite> yay I'm in the contributors list, for a one line patch or something :)
2011-05-16 20:44:52 UTC <byorgey> yes, IIRC you made it compile with GHC 7, a very important contribution =)
2011-05-16 20:49:23 UTC <luite> ah interesting, I hadn't seen the diagrams-canvas backend before
2011-05-16 20:53:07 UTC <byorgey> fryguybob has been working on it in his spare time, I don't actually know what the status is
2011-05-16 20:53:51 UTC <fryguybob> I haven't looked at it in a while.  I think the last time was after switching to GHC 7 I updated it a little, but mostly it was an exercise to understand how things work.
2011-05-16 20:54:29 UTC <luite> svg seems to be a better match for the vector oriented nature of diagrams though
2011-05-16 20:54:31 UTC <fryguybob> I chose not to just do SVG as I wanted to experiment a little with making interactive diagrams via some attributes that turn into javascript of some sort.
2011-05-16 20:54:47 UTC <fryguybob> But I haven't got around to that yet.
2011-05-16 20:54:59 UTC <luite> hmm, you can do that with svg as well, can't you?
2011-05-16 20:55:14 UTC <fryguybob> Yes
2011-05-16 21:03:02 UTC <luite> I really want to do something along those lines. It's how I've made tic-tac-toe of course, but that was done with wumpus
2011-05-16 21:03:13 UTC <luite> using really low level stuff because I didn't understand the rest
2011-05-16 21:16:35 UTC <byorgey> well, I've got to go home & make dinner, looks like the release will have to wait until first thing in the morning
2011-05-16 21:16:42 UTC <byorgey> but I've got everything pretty much ready to go!
2011-05-16 21:28:22 UTC <fryguybob> byorgey: Super!
2011-05-17 00:46:30 UTC <fryguybob> byorgey: Are you around?
2011-05-17 00:50:33 UTC <fryguybob> byorgey: I'll be traveling for the next three weeks or so and won't have much irc access but I'll be around with email.
2011-05-17 14:58:41 UTC <luite> byorgey: have you already released the new diagrams?
2011-05-17 14:59:08 UTC <byorgey> luite: not quite!
2011-05-17 14:59:29 UTC <byorgey> probably in the next half hour or so
2011-05-17 14:59:34 UTC <luite> ok cool :)
2011-05-17 14:59:44 UTC <byorgey> doing a few final tweaks to the documentation, release announcement, etc.
2011-05-17 14:59:52 UTC <luite> ah good
2011-05-17 15:01:07 UTC <luite> I hope to have module support in my web thing soon, so you can just copy the source from a diagrams example
2011-05-17 15:07:42 UTC <byorgey> neat
2011-05-17 15:13:34 UTC <luite> hmm, looks like the server-side support works, the rest is just javascribbling :)
2011-05-17 15:14:21 UTC <luite> and I need to whitelist the imports for Diagrams of course, I hope you didn't sneak some unsafePerformIO in there ;)
2011-05-17 15:36:53 UTC <byorgey> nope =)
2011-05-17 15:37:00 UTC <byorgey> uploaded!
2011-05-17 15:37:07 UTC <byorgey> now to spam the release announcement everywhere
2011-05-17 15:37:09 UTC <luite> sweet :)
2011-05-17 15:39:37 UTC <luite> I'll be javascripting for a few more hours, then I'll install it :)  the code should automatically be uploaded to the server and typechecked as the user types. when it typechecks, the user can evaluate expressions and generate diagrams
2011-05-17 15:44:48 UTC <byorgey> released!
2011-05-17 15:46:22 UTC <luite> I'm anxiously waiting for the hackagebot announce!
2011-05-17 15:46:34 UTC <byorgey> you mised them!
2011-05-17 15:46:36 UTC <byorgey> *missed
2011-05-17 15:46:38 UTC <luite> oh really?
2011-05-17 15:46:39 UTC <luite> :(
2011-05-17 15:46:51 UTC <byorgey> aroudn 11:37-11:38
2011-05-17 15:46:55 UTC <luite> ah I see
2011-05-17 15:47:01 UTC <byorgey> grah, I cnat spel tody
2011-05-17 15:53:54 UTC <byorgey> I just uploaded a new version of the 'diagrams' package saying it is deprecated.  But I wonder whether we ought to make 'diagrams' just a wrapper package that depends on diagrams-core and diagrams-lib or something like that, and move the old version of diagrams to 'diagrams-old' or something like that
2011-05-17 15:57:11 UTC <byorgey> and now we wait =)
2011-05-17 16:02:14 UTC <luite> yes, we should see a huge influx of users in this channel soon
2011-05-17 16:33:10 UTC <alpounet> hey
2011-05-17 16:33:28 UTC <alpounet> this release looks fun!
2011-05-17 16:33:30 UTC <luite> woohoo
2011-05-17 16:33:37 UTC <luite> a new user in the channel
2011-05-17 16:33:46 UTC <luite> the first after the new release
2011-05-17 16:34:27 UTC <alpounet> byorgey's on his way to fame and fortune
2011-05-17 16:34:53 UTC <byorgey> =D
2011-05-17 16:35:14 UTC <byorgey> thanks alpounet, glad it looks fun!
2011-05-17 16:35:43 UTC <byorgey> I'm off to lunch, back later
2011-05-17 16:41:00 UTC <alpounet> gonna try to make some fun graphics if i have some spare time tonight
2011-05-17 16:44:30 UTC <luite> please share the code if you have something, I want more examples :)
2011-05-17 16:44:50 UTC <alpounet> sure
2011-05-17 16:45:03 UTC <alpounet> are you working on the library or "just" using it ?
2011-05-17 16:46:50 UTC <luite> just using it
2011-05-17 16:47:22 UTC <luite> I want to use it for interactive web graphics
2011-05-17 16:47:42 UTC <alpounet> how interactive ?
2011-05-17 16:49:48 UTC <luite> basic "local" functionality (with generated javascript), and callbacks to the server for requesting new image data
2011-05-17 16:51:44 UTC <luite> I have a demo here http://jabberwock.xs4all.nl/exp/wolfgang/
2011-05-17 16:52:04 UTC <luite> but I'm hacking on it, and I don't have a separate production version :)
2011-05-17 16:52:23 UTC <alpounet> okay
2011-05-17 16:52:36 UTC <luite> there are a few demo's with a javascript ui and a non-interactive image, and the tic-tac-toe is a basic demonstration of server callbacks
2011-05-17 16:52:44 UTC <luite> oh it doesn't work in IE, use Chrome for best results
2011-05-17 16:53:19 UTC <alpounet> i'm using chrome
2011-05-17 16:53:53 UTC <luite> I hope it works :)
2011-05-17 16:54:05 UTC <alpounet> it seems to yeah
2011-05-17 16:54:22 UTC <luite> note that the "definitions" cell is just a fake, I'm adding real support soon, it already works on the server side
2011-05-17 16:55:28 UTC <luite> oh the highlight3 cell has interaction as well, but that one is much simpler than the tictactoe cell
2011-05-17 20:15:21 UTC <luite> hmm, almost done :)
2011-05-17 20:42:21 UTC <luite> yay module support done, I can now add diagrams examples
2011-05-17 21:12:29 UTC <ezyang> test
2011-05-17 21:14:07 UTC <alpounet> successful
2011-05-17 21:20:49 UTC <ezyang> Oh blah, the last time I tried to play with diagrams I got stuck installing Cairo.
2011-05-17 21:21:02 UTC <luite> on windows?
2011-05-17 21:21:32 UTC <ezyang> Linux.
2011-05-17 21:21:34 UTC <luite> I'm busy making the diagrams tutorial available in your web browser, should be ready in a few hours
2011-05-17 21:22:04 UTC <ezyang> http://hpaste.org/46767/cairo_error
2011-05-17 21:22:24 UTC <luite> cabal install gtk2hs-buildtools
2011-05-17 21:22:41 UTC <luite> that's a dependency of all gtk2hs things, cannot be installed automatically by cabal-install
2011-05-17 21:23:52 UTC <ezyang> srsly
2011-05-17 21:25:24 UTC <alpounet> yup
2011-05-17 21:25:40 UTC <ezyang> Excellent, installed and ready to go.
2011-05-17 22:43:53 UTC <luite> byorgey: http://jabberwock.xs4all.nl/exp/wolfgang/   check this, I stoled your tutorial and put it on a site
2011-05-18 03:07:26 UTC <byorgey> luite: that is super hot
2011-05-18 03:07:49 UTC <byorgey> luite: there seem to be some problems with your rendering though
2011-05-18 03:08:23 UTC <byorgey> anyway, I'm off to bed
2011-05-18 05:23:20 UTC <luite> it just uses cairo, but for some reason the scale is off or something
2011-05-18 08:56:27 UTC <luite> byorgey: but some of it is caused by the code in the tutorial, for example the circle ||| square example uses those elements without extra attributes, they get rendered with no fill and a stroke width of 0.01 here
2011-05-18 11:16:11 UTC <DrSyzygy> Has anyone had any luck getting diagrams-cairo up and running on MacOSX (without MacPorts of Fink or any of that)?
2011-05-18 11:24:52 UTC <alpounet> what problem do you encounter ?
2011-05-18 11:35:20 UTC <luite> byorgey: hmm, it looks like the rendering problems are caused by diagrams or the cairo svg generator. if you just run the tutorial lhs and -o something.svg, it looks the same
2011-05-18 11:53:48 UTC <luite> byorgey: reload http://jabberwock.xs4all.nl/exp/wolfgang/ , I've worked around the issue by generating png instead of svg, for now
2011-05-18 12:40:57 UTC <byorgey> luite: awesome, looks great now!
2011-05-18 12:41:21 UTC <byorgey> I will have to look into why there are problems with SVG generation
2011-05-18 12:52:13 UTC <luite> if you have updates to the tutorial I'd be happy to add them. I only need to add the extra first paragraph and extra import line to the .lhs and then run a small script to publish it :)
2011-05-18 12:55:34 UTC <luite> unfortunately the markdown parser cannot cope with the ~~~(.haskell) syntax highlighting
2011-05-18 13:22:51 UTC <byorgey> luite: ok, and by the way, the tutorial lives in http://patch-tag.com/r/byorgey/diagrams-doc so you can pull changes from there
2011-05-18 13:23:13 UTC <byorgey> luite: I noticed the thing with the ~~~~ syntax.  That's a pandoc-specific extension I think.
2011-05-18 13:24:04 UTC <byorgey> I was using it to get syntax highlighting on code that I don't want to be actually seen by ghc(i).
2011-05-18 13:24:56 UTC <byorgey> luite: if you have any suggestions on how we can make it work I'm all ears. I think Wolfram|Lambda (haha) is super awesome and I'm really excited to have it as a vehicle for the diagrams tutorial!
2011-05-18 13:25:31 UTC <byorgey> DrSyzygy: what problem(s) are you running into specifically?
2011-05-18 13:39:28 UTC <luite> byorgey: yes that's where I pulled the current version from (yesterday). I already have haskell syntax highlighting and markdown in javascript, but it might be tricky to combine them because they are from completely different libraries
2011-05-18 13:39:42 UTC <luite> but the markdown parser does have some intermediate tree representation of the code
2011-05-18 13:39:47 UTC <luite> so it should be possible
2011-05-18 13:40:11 UTC <byorgey> OK. Let me know if you need any help or want to change the tutorial in some way that would make it easier
2011-05-18 13:40:21 UTC <luite> it's (for me) a minor detail though, there are more important things to do first
2011-05-18 13:40:27 UTC <byorgey> yes, I agree
2011-05-18 13:45:46 UTC <luite> but I'll make a note in my todo list :) it should also not try to replace $....$ math things in the haskell code :)
2011-05-18 13:46:57 UTC <byorgey> hehe, indeed =)
2011-05-18 13:53:08 UTC <DrSyzygy> byorgey: pkg-config cairo-pdf yields a build-error
2011-05-18 13:53:35 UTC <DrSyzygy> Configuring cairo-0.12.0...
2011-05-18 13:53:36 UTC <DrSyzygy> setup: The pkg-config package cairo-pdf is required but it could not be found.
2011-05-18 13:53:36 UTC <DrSyzygy> cabal: Error: some packages failed to install:
2011-05-18 13:53:36 UTC <DrSyzygy> cairo-0.12.0 failed during the configure step. The exception was:
2011-05-18 13:53:36 UTC <DrSyzygy> ExitFailure 1
2011-05-18 13:53:38 UTC <DrSyzygy> diagrams-cairo-0.1 depends on cairo-0.12.0 which failed to install.
2011-05-18 13:53:52 UTC <byorgey> ugh
2011-05-18 13:54:31 UTC <byorgey> no idea
2011-05-18 13:54:35 UTC <byorgey> have you googled it?
2011-05-18 13:56:43 UTC <DrSyzygy> Yeah, and all I see is talk about Cairo on linux. :-(
2011-05-18 13:56:53 UTC <byorgey> =(
2011-05-18 13:57:09 UTC <byorgey> I found a couple places of people posting the same error, but no solutions
2011-05-18 13:57:34 UTC <byorgey> well, I will redouble my efforts to get a non-cairo backend working
2011-05-18 13:57:49 UTC <ezyang> What are the other possible backends?
2011-05-18 13:58:56 UTC <byorgey> there are lots.  Natively generating SVG is one possibility.  Along a similar line it may also work to convert diagrams into wumpus-core data structures which can natively generate SVG.
2011-05-18 13:59:27 UTC <ezyang> ah, ok.
2011-05-18 13:59:38 UTC <luite> DrSyzygy: that means that you haven't installed the development libraries for cairo-pdf
2011-05-18 13:59:44 UTC <byorgey> There's also been some work (although stalled at the moment) on OpenGL and on HTML5 canvas.
2011-05-18 13:59:49 UTC <DrSyzygy> luite: Aight. Any idea where I can get that?
2011-05-18 13:59:51 UTC <luite> DrSyzygy: those are an external dependency
2011-05-18 13:59:59 UTC <luite> DrSyzygy: your package manager usually
2011-05-18 14:00:19 UTC <luite> oh which operating system by the way?
2011-05-18 14:00:22 UTC <DrSyzygy> .... which I don't have one, since I'm on MacOSX and both fink and macports have a habit of disintegrating when I use them.
2011-05-18 14:00:27 UTC <luite> oh right
2011-05-18 14:00:51 UTC <luite> hmm, I don't really use OS X, last time I tried, it felt quite messy, compared to linux
2011-05-18 14:01:26 UTC <DrSyzygy> If you try to do linux on OS X, it _is_ messy. For the things it does well, though, it is incredibly comfortable.
2011-05-18 14:01:35 UTC <DrSyzygy> ACTION tries not to get stuck in OS holy wars. ;-)
2011-05-18 14:02:02 UTC <luite> yeah that's what I meant
2011-05-18 14:02:21 UTC <luite> sorry for that :)
2011-05-18 14:02:59 UTC <DrSyzygy> luite: Don't worry: you're nowhere near holy war standards yet. You haven't even suggested I install ubuntu instead of OS X. ;-)
2011-05-18 14:03:52 UTC <byorgey> "oh, getting diagrams to work on MacOSX is easy. First, install Ubuntu..." ;)
2011-05-18 14:44:07 UTC <byorgey> http://byorgey.wordpress.com/2011/05/18/tic-tac-toe-maps-with-diagrams/  =)
2011-05-18 14:47:50 UTC <luite> byorgey: I added syntax highlighting of the ~~~{.haskell} sections
2011-05-18 14:48:23 UTC <byorgey> luite: sweet! I guess this means you must have also gotten a bunch of other higher-priority things done too ;)
2011-05-18 14:49:16 UTC <luite> hehe yes ;p
2011-05-18 14:49:58 UTC <luite> nah I cheated by matching ~~~{.xxxx} things in the output with a regexp instead of properly patching the markdown code
2011-05-18 14:50:44 UTC <byorgey> eh, works for me =)
2011-05-18 14:50:59 UTC <luite> I don't want to touch the library code too much, because this is probably a nonstandard extension, and I'd have to maintain my own branch, I don't want to do that :)
2011-05-18 14:52:57 UTC <luite> oh I guess the highlighter doesn't work if you have empty lines in your haskell code, since those would end up in different p tags
2011-05-18 14:53:50 UTC <luite> hmm, but that can be fixed
2011-05-18 14:54:18 UTC <byorgey> luite: is it possible to create a Wolfgang|Lambda worksheet and then somehow save it/get a link which allows other people to view it?
2011-05-18 14:54:45 UTC <luite> not yet, but that's of course one of the more important things being planned :p
2011-05-18 14:55:00 UTC <byorgey> ok, sounds good =)
2011-05-18 14:55:30 UTC <luite> I don't know how exactly to do it. the easiest would be something like hpaste, you edit a worksheet, click save, and then you get a permanent url
2011-05-18 14:55:53 UTC <byorgey> yeah
2011-05-18 14:55:54 UTC <luite> but you wouldn't be able to edit existing docs, because you'd get a new url every time
2011-05-18 14:56:25 UTC <byorgey> right, I wasn't necessarily meaning that you should be able to collaboratively edit a doc
2011-05-18 14:56:30 UTC <byorgey> that sounds much more complicated
2011-05-18 14:56:54 UTC <byorgey> just that you could save something and then hand it out to other people as a starting point for their explorations
2011-05-18 14:57:24 UTC <byorgey> it might even be sufficient to give people the option to download/upload worksheets
2011-05-18 14:57:25 UTC <luite> collaborative editing could still be based on this
2011-05-18 14:57:33 UTC <luite> using the unique urls as revisions
2011-05-18 14:57:41 UTC <luite> and some other system to linke them to some canonical name
2011-05-18 14:57:45 UTC <byorgey> that way you don't have to worry about storing them on the server
2011-05-18 14:57:50 UTC <byorgey> yes, you could do that
2011-05-18 15:00:11 UTC <byorgey> luite: hmm, it seems that clicking on hyperlinks does not work?
2011-05-18 15:00:16 UTC <luite> nah I think they should be stored on the server, it's easier for the user. although uploading files should be possible of course
2011-05-18 15:00:40 UTC <byorgey> sure, I'm just trying to brainstorm an easy incremental path
2011-05-18 15:00:44 UTC <luite> I have a rudimentary .lhs preprocessor that just adds definitions sections and text sections
2011-05-18 15:01:07 UTC <luite> and for diagrams, I add an expression cell for each line that starts with   > something =
2011-05-18 15:01:36 UTC <byorgey> ah, I was wondering how you did that =)
2011-05-18 15:01:42 UTC <luite> a proper preprocessor might use haskell-src-exts and ghci to infer types :)
2011-05-18 15:02:24 UTC <byorgey> yes, fryguybob has been working on a diagrams-hint project which already does this sort of type inference to find top-level diagrams
2011-05-18 15:02:55 UTC <luite> yeah I already have hint and stuff, and haskell-src-exts, so it shouldn't be too much work to add
2011-05-18 15:03:07 UTC <byorgey> yup, just take a look at the diagrams-hint repo
2011-05-18 15:05:22 UTC <luite> oh I think I already have most of the code in place, since I haskell-src-exts the code to filter allowed imports and language extensions
2011-05-18 15:05:33 UTC <luite> it's a very minor addition to get a list of top-level exprs
2011-05-18 15:05:44 UTC <luite> and I already run hint for all evaluation
2011-05-18 15:06:13 UTC <luite> but I still need to think about how I'd go about mapping types to output functions
2011-05-18 15:06:29 UTC <luite> I manually added renderWebPNG to all diagrams lines
2011-05-18 15:07:16 UTC <luite> but I think that some kind of Showable class would be better
2011-05-18 15:07:27 UTC <luite> with a default display function for each type
2011-05-18 15:07:58 UTC <luite> and that the user can still use explicit render functions for more options
2011-05-18 15:08:32 UTC <byorgey> sounds reasonable
2011-05-18 15:11:43 UTC <luite> ultimately I'd like to make some showcase with worksheets in categories, some might show how to use some haskell module, but there could be categories for various math topics, including high school level with fun things to play with
2011-05-18 15:12:34 UTC <luite> the haskell definitions sections may be collaped in such pages
2011-05-18 15:15:57 UTC <luite> oh don't know about the hyperlinks by the way, I think it's probably some problem with an event handler that captures the click before it reaches the <a/> element
2011-05-18 15:16:06 UTC <luite> I need to fix that
2011-05-18 15:16:28 UTC <byorgey> luite: your ultimate vision sounds fantastic
2011-05-18 15:17:34 UTC <byorgey> luite: I don't think it is possible to convey over IRC how totally sweet I think W|L is.  I hope someday to buy you a beverage (or several) of your choice.
2011-05-18 15:17:43 UTC <luite> aha
2011-05-18 15:17:45 UTC <luite> haha
2011-05-18 15:18:34 UTC <luite> the name isn't final by the way, I'm open to suggestions
2011-05-18 15:18:52 UTC <byorgey> I think the name is pretty funny =)
2011-05-18 15:19:29 UTC <byorgey> as long as Wolfram doesn't send you a cease-and-desist letter
2011-05-18 15:19:32 UTC <luite> hehe, but it might get me in trouble for trademark infringement, Wolfram has more budget for lawyers than me ;p
2011-05-18 15:19:51 UTC <byorgey> well, if they send you a letter, you change the name, oh well.
2011-05-18 15:20:01 UTC <luite> yean that's true
2011-05-18 15:20:36 UTC <byorgey> I think it's probably protected as satire but it's not worth fighting it in court =)
2011-05-18 15:23:20 UTC <luite> apart from the domain name, I need some permament place to run this site. I already have a dedicated server somewhere, but it's relatively slow and outdated... might need to find something else
2011-05-18 15:23:58 UTC <luite> the backend needs lots of ram, and possible a virtual machine for security
2011-05-18 15:28:38 UTC <luite> but I can probably save ram by reworking how new interpreter processes are created. I'd need a single "big" process with lots of commonly used haskell modules preloaded, and use fork to create new instances
2011-05-18 15:28:54 UTC <luite> linux probably uses copy on write, so the new ones wouldn't necessarily consume a lot of extra memory
2011-05-18 15:30:47 UTC <luite> it already minimizes the number of code reloads as much as possible, it has a pool of available workers, and when a request is made, it tries to pick an interpreter with the correct module (L2340928-somelongnumberhere-234234 typically, for pages with user generated code) already loaded
2011-05-18 15:31:17 UTC <luite> and if none of the available workers in the pool has this module, it just picks the least recently used one
2011-05-18 15:53:43 UTC <byorgey> blarg, hakyll won't install =(
2011-05-18 15:54:09 UTC <byorgey> too many dependencies (hakyll), not enough root access (me)
2011-05-18 15:58:21 UTC <byorgey> hah, got it to work by replacing regex-pcre with regex-pcre-builtin =)
2011-05-18 17:34:16 UTC <luite> ok multi-line haskell works as well, and I reimported the tutorial to remove empty lines at the end of each code section
2011-05-18 17:34:50 UTC <luite> and I had to add some ugly hacks to prevent the highlighter (which actually is a read-only editor) from stealing the focus :p
2011-05-18 17:52:40 UTC <byorgey> cool
2011-05-18 18:15:39 UTC <luite> ok error reporting works properly now
2011-05-18 18:16:04 UTC <luite> if you for example comment out the line import Diagrams.Prelude in the tutorial, you'll get lots of lines with multiple errors
2011-05-18 18:16:15 UTC <luite> neatly organized in one tooltip :)
2011-05-18 18:17:15 UTC <luite> unfortunately line numbers aren't accurate, because of the source parsing+prettyprinting combination, which is lossy
2011-05-18 18:17:40 UTC <luite> they're close, but not completely the same
2011-05-18 20:11:34 UTC <byorgey> luite: I just showed W|L to my officemates, and they thought it was one of the coolest things they have ever seen =)
2011-05-18 20:11:53 UTC <byorgey> but don't worry, I'm not going to post it on slashdot yet ;)
2011-05-18 20:12:01 UTC <luite> great, I think I should prepare for an IPO soon ;)
2011-05-18 20:12:14 UTC <byorgey> hehe
2011-05-18 20:12:24 UTC <luite> perhaps some venture capital fundraising first
2011-05-18 20:19:40 UTC <luite> but it's really cool that people like it. I'll try to add the loading/saving feature with permanent url's soon
2011-05-18 20:20:26 UTC <luite> probably with the persistent package, from yesod, which seems relatively nice to use, while still storing data in a standard way, that can be accessed from other, non-haskell, applications
2011-05-18 20:23:15 UTC <luite> byorgey: I already asked Cale not to reddit it :)
2011-05-18 20:23:54 UTC <luite> until I have a somewhat production version that doesn't break so often
2011-05-18 20:24:04 UTC <byorgey> right.
2011-05-18 20:25:06 UTC <luite> and I'm not quite comfortable with the security yet :)
2011-05-18 20:25:17 UTC <byorgey> hehe, fair =)
2011-05-18 20:25:18 UTC <luite> since it does write haskell files to disk and runs them
2011-05-18 20:25:29 UTC <luite> which is quite a bit more than lambdabot does
2011-05-18 20:25:40 UTC <byorgey> so should I not link to it yet from the diagrams website?
2011-05-18 20:26:12 UTC <luite> not yet I think
2011-05-18 20:26:19 UTC <byorgey> ok.
2011-05-18 20:26:25 UTC <byorgey> I will comment that part out
2011-05-18 20:26:30 UTC <luite> hehe ok
2011-05-18 20:27:04 UTC <luite> it's also just my home server, if I download something it will become really slow
2011-05-18 20:27:33 UTC <byorgey> oh, haha
2011-05-18 20:30:23 UTC <luite> it's the only linux server that I have, that's fast enough. I have a dedicated server with an old pentium 4 and 2GB RAM, but that already runs a lot of other things, not much memory is left for this
2011-05-18 20:30:52 UTC <luite> oh I meant colocated
2011-05-18 20:57:14 UTC <luite> but it's probably no problem to replace it with a better one, if the costs aren't much higher
2011-05-18 21:01:49 UTC <alpounet> ok i'm gonna try to get diagrams working on win7
2011-05-18 21:03:16 UTC <luite> ah finally some on-topic discussion ;)
2011-05-18 21:03:32 UTC <alpounet> how's a web version of the tutorial off-topic ? :p
2011-05-18 21:04:18 UTC <luite> it's not just a web version of the tutorial, it's a complete knowledge engine ;)
2011-05-18 21:05:39 UTC <alpounet> yeah yeah
2011-05-18 21:05:41 UTC <byorgey> new website is now up:  http://projects.haskell.org/diagrams
2011-05-18 21:05:42 UTC <luite> although at the moment its knowledge consists of the diagrams tutorial and a hardcoded demo worksheet
2011-05-18 21:06:00 UTC <byorgey> alpounet: cool, let us know how it goes
2011-05-18 21:06:16 UTC <alpounet> yup
2011-05-18 21:10:21 UTC <alpounet> installing gtk atm
2011-05-18 21:18:11 UTC <alpounet> encountered some errors
2011-05-18 21:18:16 UTC <alpounet> found a solution apparently
2011-05-18 21:33:12 UTC <alpounet> hooray! gtk installed
2011-05-18 21:46:46 UTC <byorgey> =D
2011-05-18 21:51:00 UTC <Tyr42> Hello
2011-05-18 21:51:20 UTC <byorgey> hi Tyr42, welcome
2011-05-18 21:52:02 UTC <luite> ooh 11 users, that means that diagrams is now more popular on irc than yesod
2011-05-18 21:52:08 UTC <byorgey> haha
2011-05-18 21:55:31 UTC <Tyr42> So, I was looking, and I would like to help out
2011-05-18 21:55:47 UTC <byorgey> great!
2011-05-18 21:56:30 UTC <byorgey> anything in particular you're interested in working on?
2011-05-18 21:57:28 UTC <Tyr42> Umm
2011-05-18 21:57:56 UTC <Tyr42> I haven't really looked too deeply yet
2011-05-18 21:58:24 UTC <luite> what do you want to use it for?
2011-05-18 21:59:51 UTC <byorgey> Tyr42: you could look at the tickets listed at http://code.google.com/p/diagrams/issues/list
2011-05-18 22:00:25 UTC <byorgey> Tyr42: but probably the best way to get started is just start creating some diagrams and see what's missing that you want
2011-05-18 22:00:27 UTC <alpounet> ok byorgey how would you go for drawing, for example, the successive iterations of the cantor set construction ?
2011-05-18 22:00:32 UTC <byorgey> then do that =)
2011-05-18 22:00:59 UTC <luite> oh there was a sierpinski example in the older diagrams package
2011-05-18 22:01:07 UTC <luite> if you like your cantor sets triangular ;)
2011-05-18 22:01:19 UTC <byorgey> there's a sierpinski example in diagrams-cairo/examples/Fractal.hs
2011-05-18 22:01:36 UTC <alpounet> oh woot
2011-05-18 22:01:41 UTC <luite> oh sorry, it thought it was in the older one :)
2011-05-18 22:01:50 UTC <byorgey> alpounet: just do the natural recursive construction.  make a function cantor :: Int -> Diagram Cairo R2
2011-05-18 22:01:54 UTC <byorgey> the base case is a rectangle
2011-05-18 22:02:22 UTC <byorgey> and in the recursive case you construct two recursive ones and hcat them together with a strut in between
2011-05-18 22:03:08 UTC <byorgey> you can get fancier than that but that's the basic idea
2011-05-18 22:03:20 UTC <alpounet> yeah ok
2011-05-18 22:04:01 UTC <luite> interestingly the file size of the cantor set goes to infinity as its measure goes to zero
2011-05-18 22:04:10 UTC <byorgey> hehe
2011-05-18 22:05:52 UTC <Tyr42> well, I can't seem to get the repo from the google code page using hg
2011-05-18 22:06:16 UTC <byorgey> Tyr42: the repo isn't actually hosted there, we just use google code for the wiki and issue tracker
2011-05-18 22:06:48 UTC <byorgey> under "How to get involved" it lists how to get the darcs repositories
2011-05-18 22:06:51 UTC <alpounet> it's on patch-tag
2011-05-18 22:06:57 UTC <Tyr42> byorgey:  Ah, that explains why it was empty
2011-05-18 22:08:19 UTC <byorgey> luite: a sierpinski example was in the older one too, sierpinski is just the sort of prototypical example that has to be done by every drawing library =)
2011-05-18 22:09:17 UTC <luite> it's like the teapot of 2d drawing
2011-05-18 22:09:23 UTC <byorgey> exactly =)
2011-05-18 22:10:38 UTC <byorgey> OK, I'm off homewards, probably won't be online again until tomorrow morning
2011-05-18 22:10:45 UTC <byorgey> but I'll see any messages left for me here
2011-05-19 14:14:04 UTC <byorgey> hi fryguybob =)
2011-05-19 14:29:41 UTC <luite> someone linked wolfgang on reddit
2011-05-19 14:30:28 UTC <fryguybob> Howdy.  I read the logs good to have a bunch of people here!
2011-05-19 14:39:40 UTC <byorgey> luite: uh oh =(
2011-05-19 14:40:48 UTC <luite> byorgey: hehe it could be worse, but I wanted to add persistent storage, but now I'd feel guilty taking it offline for that ;p
2011-05-19 14:41:32 UTC <luite> people seem to like it though, already some feature suggestions
2011-05-19 14:44:51 UTC <byorgey> nah, don't feel bad taking it offline
2011-05-19 14:45:24 UTC <byorgey> or maybe wait a day or two until it falls off the haskell reddit front page if you really want
2011-05-19 14:45:35 UTC <byorgey> but I wouldn't worry about it too much.
2011-05-19 14:45:36 UTC <fryguybob> luite: With regard to using hint with diagrams, I'm not doing anything special and just sorting through all the top level declarations and checking each to see if they type check as a diagram.
2011-05-19 14:46:14 UTC <byorgey> fryguybob: diagrams-hint is built with gtk, right?
2011-05-19 14:46:18 UTC <luite> fryguybob: yeah that's what I plan to do as well
2011-05-19 14:46:34 UTC <luite> fryguybob: I already parse all the code with haskell-src-exts
2011-05-19 14:46:42 UTC <fryguybob> byorgey: Yeah, I have some CPP for switching backends though.
2011-05-19 14:47:09 UTC <byorgey> fryguybob: ok, so we should modify the cairo backend to return not just IO () but an (IO (), Cairo ()) pair, so to use cairo you don't have to go via the filesystem
2011-05-19 14:47:26 UTC <byorgey> just render it directly to the gtk window
2011-05-19 14:47:43 UTC <byorgey> will probably make it faster too
2011-05-19 14:47:53 UTC <fryguybob> Yeah
2011-05-19 14:48:07 UTC <byorgey> anyway, just a random thought =)
2011-05-19 14:49:27 UTC <luite> fryguybob: have you seen the interactive web tutorial?
2011-05-19 14:51:05 UTC <fryguybob> luite: Yeah it is a lot of fun!
2011-05-19 18:43:03 UTC <luite> byorgey: I'm going to write a thing in javascript to convert between .lhs and worksheets (lhs with some extra markup), that way, the .lhs files can simply be served through gitit or mediawiki
2011-05-19 18:43:29 UTC <byorgey> luite: yes, that sounds like a great idea
2011-05-19 18:43:42 UTC <luite> free versioning stuff and all :)
2011-05-19 18:43:48 UTC <byorgey> yup =)
2011-05-19 19:12:24 UTC <luite> ugh now it's on ycombinator and dons made another reddit
2011-05-19 19:16:25 UTC <mightybyte> Hehe
2011-05-19 22:29:53 UTC <alpounet> luite, awesome heh
2011-05-20 13:46:58 UTC <luite> http://jabberwock.xs4all.nl/exp/wolfgang/wolfgang-logo1.png what do you think of my first wolfgang logo design try?
2011-05-20 13:48:16 UTC <mightybyte> I like it.
2011-05-20 13:48:42 UTC <mightybyte> Did you use diagrams to create it?  :)
2011-05-20 13:48:45 UTC <luite> it's based on the lambda logo cut in half ;p
2011-05-20 13:48:53 UTC <luite> actually yes
2011-05-20 13:49:17 UTC <luite> the diagrams-drawn haskell logo
2011-05-20 13:52:38 UTC <luite> but I edited it too much in photoshop, so it doesn't really look that good anymore at pixel level
2011-05-20 14:02:45 UTC <luite> suggestions for the page design are welcome too :)
2011-05-20 14:27:47 UTC <byorgey> I like it too
2011-05-20 14:41:30 UTC <luite> lol someone reported a bug in the tic-tac-toe engine
2011-05-20 14:42:40 UTC <mightybyte> Haha
2011-05-20 14:43:43 UTC <luite> actually it isn't a bug, because it still plays perfectly, but it doesn't always play in such a way that it wins in the fewest possible moves
2011-05-20 14:44:20 UTC <mightybyte> Ahhh, yes.  I'm familiar with that problem.
2011-05-20 14:46:01 UTC <mightybyte> I usually solve it with something like this at the end of the minimax/alphabeta function: if score > INF-1000 then score-1 else if score < -INF+1000 then score+1 else score
2011-05-20 14:46:34 UTC <luite> yes this one just uses win/lose/tie as evaluations
2011-05-20 15:06:21 UTC <byorgey> I solved that problem too if you look at the tic-tac-toe solver in the examples directory (or in my blog post)
2011-05-20 15:06:59 UTC <byorgey> Along with "win/lose" it keeps track of the number of moves until the win, and sorts results accordingly
2011-05-20 15:07:07 UTC <sordina> Hey. Is there an easy way to create a color? I tried creating a RGBA datatype that is an instance of ColorAlpha, but diagrams complains that it's not using Color.Internal (or something like that). Is there a 'fromRGBA' or something similar?
2011-05-20 15:07:25 UTC <luite> hehe what's the ELO rating of your tic-tac-toe solver? ;)
2011-05-20 15:07:45 UTC <byorgey> sordina: there should be, just a second
2011-05-20 15:07:57 UTC <byorgey> luite: infinity, I suppose =)
2011-05-20 15:08:56 UTC <luite> byorgey: I do like it that someone pointed this out, it's exactly the kind of things you can explain easily with this kind of interface
2011-05-20 15:09:02 UTC <byorgey> sordina: what's the actual error message you get?
2011-05-20 15:09:34 UTC <byorgey> sordina: oh, wait, you made your own color datatype?
2011-05-20 15:09:45 UTC <sordina> Couldn't match expected type `colour-2.3.1:Data.Colour.Internal.Colour
2011-05-20 15:09:47 UTC <sordina>                                     Double'
2011-05-20 15:09:49 UTC <sordina>                 with actual type `ColorData'
2011-05-20 15:10:37 UTC <sordina> I'm using the fc function.
2011-05-20 15:10:52 UTC <byorgey> if you want to use your own color data type you just have to make it an instance of Color from Diagrams.Attributes
2011-05-20 15:10:57 UTC <byorgey> http://hackage.haskell.org/packages/archive/diagrams-lib/0.1.1/doc/html/Diagrams-Attributes.html#t:Color
2011-05-20 15:11:09 UTC <byorgey> although I'm not sure why you would want to use your own color type
2011-05-20 15:11:40 UTC <byorgey> and then use fillColor instead of fc
2011-05-20 15:11:41 UTC <sordina> byorgey: Ah cool. I don't really want to I was just trying that since I couldn't find a function to construct a color from rgba values.
2011-05-20 15:13:45 UTC <sordina> I'm looking at creating a data-oriented EDSL wrapper similar to how gloss works since I love how gloss diagrams are inspectable. Would that be derivable somehow?
2011-05-20 15:14:08 UTC <byorgey> sordina: try using the sRGB function from Data.Colour.SRGB, followed by a call to withOpacity
2011-05-20 15:14:25 UTC <byorgey> perhaps a function like this should be added to diagrams-lib
2011-05-20 15:15:14 UTC <byorgey> sordina: I'm not actually familiar with gloss
2011-05-20 15:15:22 UTC <ezyang> link?
2011-05-20 15:17:13 UTC <sordina> http://hackage.haskell.org/package/gloss
2011-05-20 15:18:15 UTC <byorgey> ah, right, I remember that now
2011-05-20 15:18:31 UTC <byorgey> sordina: so can you explain a bit more what you are trying to achieve?
2011-05-20 15:18:34 UTC <sordina> fillColor worked by the way :)
2011-05-20 15:18:39 UTC <byorgey> great =)
2011-05-20 15:19:59 UTC <byorgey> oh, I see what you mean, you actually build up a Picture AST which you can inspect
2011-05-20 15:20:16 UTC <sordina> Yes!
2011-05-20 15:20:21 UTC <sordina> It's great
2011-05-20 15:20:40 UTC <sordina> Most intuitive image construction I've come across.
2011-05-20 15:21:35 UTC <sordina> Color red (Translate (10,15) (Scale 2 Circle))
2011-05-20 15:21:39 UTC <sordina> something like that
2011-05-20 15:22:29 UTC <byorgey> well, you can still *construct* things like that using diagrams, of course.  But the way things are currently implemented you can't inspect them.
2011-05-20 15:23:06 UTC <sordina> byorgey: yes, it's almost identical in how things are constructed which is why I'm interested in writing an inspectable wrapper.
2011-05-20 15:23:24 UTC <byorgey> But you could certainly make a little AST language which you can "compile" into diagrams
2011-05-20 15:23:28 UTC <byorgey> that would be very easy.
2011-05-20 15:23:30 UTC <byorgey> and cool.
2011-05-20 15:23:32 UTC <sordina> with a runImage function to convert to Diagrams.
2011-05-20 15:23:36 UTC <byorgey> right.
2011-05-20 15:23:55 UTC <sordina> It would enable serialization and such things trivially too.
2011-05-20 15:24:06 UTC <byorgey> yup.
2011-05-20 15:24:34 UTC <sordina> I was just wondering if such a wrapper could be derived somehow, or if it would just be a by-hand affair.
2011-05-20 15:25:09 UTC <byorgey> Yeah, I don't think there would be any way to derive it.
2011-05-20 15:25:59 UTC <byorgey> I'll have to think more about whether there's a fundamental reason diagrams is not internally implemented in terms of an AST.
2011-05-20 15:26:20 UTC <byorgey> Intuitively it seems it would make things less flexible/extensible but I am not sure.
2011-05-20 15:26:21 UTC <sordina> Ah okay. Well it shouldn't be a huge task to create one anyway. I'll give it a go :)
2011-05-20 15:26:26 UTC <byorgey> great!
2011-05-20 15:26:51 UTC <ezyang> Does diagrams have any internal rep, or is it tagless?
2011-05-20 15:27:42 UTC <byorgey> you might even be able to just reuse parts of gloss
2011-05-20 15:28:07 UTC <byorgey> ezyang: I'm not sure I understand your question.
2011-05-20 15:28:28 UTC <sordina> Probably, although I think Diagrams is much more feature rich for static images.
2011-05-20 15:30:54 UTC <sordina> The AST datatypes have no tricks involved at all as far as I can tell, so I'm not sure there would be much to gain by using the existing gloss definitions.
2011-05-20 15:32:13 UTC <byorgey> yes, I guess you're right.
2011-05-20 15:33:31 UTC <sordina> Anyway, I'm got to drive home now. Thanks for the awesome package guys. I'd been waiting for something like diagrams to come along for a while now :)
2011-05-20 15:33:53 UTC <byorgey> sordina: thanks, glad you like it =)
2011-05-20 15:34:41 UTC <byorgey> I'm off as well, to walk to school
2011-05-20 15:34:58 UTC <byorgey> ezyang: if you explain your question a bit more I will try to answer when I get to school
2011-05-20 15:35:31 UTC <ezyang> Ah, it's not particularly important.
2011-05-21 10:37:44 UTC <luite> byorgey: does the diagrams lambda logo example render properly for you, when you use svg output?
2011-05-21 10:38:16 UTC <luite> it did work here with an older version of diagrams, but not with the latest
2011-05-21 10:38:25 UTC <luite> png is ok
2011-05-21 10:40:05 UTC <luite> it might be some problem with my cairo lib (I use the standard cairo lib from ubuntu 10.04)
2011-05-21 22:19:49 UTC <byorgey> luite: generating SVG from hslogo works fine for me
2011-05-21 23:27:40 UTC <alpounet> hey byorgey
2011-05-21 23:27:44 UTC <alpounet> are you around ?
2011-05-22 00:00:26 UTC <luite> byorgey: hmm, interesting...
2011-05-22 01:19:08 UTC <luite> byorgey: made a start with integrating the wiki, it now loads this page from the wiki: http://jabberwock.xs4all.nl/wiki/Diagrams%20Tutorial
2011-05-22 01:19:43 UTC <luite> you can edit it if you register, but only if you edit the raw data directly
2011-05-22 01:20:08 UTC <luite> oh and most of the user interface doesn't work :)
2011-05-22 11:11:13 UTC <luite> also added the demo: http://jabberwock.xs4all.nl/wiki/Demo
2011-05-22 13:52:38 UTC <luite> byorgey: there's a few things I want to add, apart from getting the user interface working properly. pages in /Paste (or /Scratch or something like that) should be free to add without logging in (this should be what the "save" button defaults to if not logged in), other pages are editable with login
2011-05-22 13:53:16 UTC <luite> but authors can set their own page to read-only and specify a list of users that can edit them
2011-05-22 13:54:12 UTC <luite> and the lhs code for for example /wiki/Demo should be available as the module Wolfgang.Demo, so other pages can import it and use the code
2011-05-22 13:58:07 UTC <luite> other ideas or suggestions are welcome :)
2011-05-22 13:59:14 UTC <ezyang> Hmm... with Repa, I don't seem to be able to actually draw individual pixels. Is this intentional?
2011-05-22 13:59:55 UTC <ezyang> Ah! mix :-(
2011-05-22 14:08:45 UTC <luite> does repa have a safe mode where all operations are bounds checked?
2011-05-22 16:12:05 UTC <byorgey> luite: very cool!  I don't have any other suggestions at the moment...
2011-05-22 16:23:23 UTC <luite> byorgey: ok, I'm going to do the easy bits first (exporting modules when they are saved can be done with a PreCommit plugin for gitit), the more difficult parts will come later (authentication and file ownership and permissions will probably require some gitit patching)
2011-05-22 16:24:59 UTC <byorgey> sure, sounds good
2011-05-22 16:25:23 UTC <byorgey> and I will get back to actually hacking on the actual diagrams library =)
2011-05-22 16:27:07 UTC <luite> hehe there have been some users asking for the wolfgang source coude and I've been trying to gently push them towards contributing to diagrams... but I guess most of them just want to see how it's done
2011-05-22 16:31:47 UTC <byorgey> hehe
2011-05-22 16:32:25 UTC <byorgey> luite: just a random thought, I think it would be cool to eventually integrate the 'Gallery' portion of the diagrams website with Wolfgang
2011-05-22 16:32:44 UTC <byorgey> so you could be looking at an example and just click a button to load it up in Wolfgang
2011-05-22 16:33:00 UTC <byorgey> or maybe just have Wolfgang be embedded directly
2011-05-22 16:36:37 UTC <luite> hmm, are there some extra features required for that? I'd be difficult to integrate it in another site without having the whole page in an iframe or something, because of security restrictions for cross-domain javascript requests
2011-05-22 16:37:11 UTC <byorgey> oh, ok, well forget the direct embedding then
2011-05-22 16:37:11 UTC <luite> there's a way to get around it, but it would require a few changes...
2011-05-22 16:37:25 UTC <byorgey> you're right, I guess it's just up to me to create the links =)
2011-05-22 16:42:30 UTC <luite> where is this diagrams gallery by the way?
2011-05-22 16:43:21 UTC <byorgey> http://projects.haskell.org/diagrams/gallery.html
2011-05-22 16:43:43 UTC <luite> oh that's the server-that-never-works
2011-05-22 16:43:54 UTC <byorgey> hmm?  seems to be working fine
2011-05-22 16:44:12 UTC <luite> really, it's never worked here
2011-05-22 16:44:29 UTC <byorgey> really? strange
2011-05-22 16:45:37 UTC <byorgey> well, if you have hakyll and hint installed you can build yourself a local version from diagrams-doc/web
2011-05-22 16:45:55 UTC <byorgey> and perhaps I should look into better hosting solutions
2011-05-22 16:46:09 UTC <byorgey> but projects.h.o seemed easiest for the moment
2011-05-22 16:48:58 UTC <luite> oh lol
2011-05-22 16:49:03 UTC <luite> it was my fault
2011-05-22 16:49:17 UTC <byorgey> haha, how?
2011-05-22 16:50:10 UTC <luite> when the haskell.org domain was offline there was a list of items to add to your hosts file. and I still had a backup of that in my /etc, probably copied the wrong backup over the real file some time ago...
2011-05-22 16:50:49 UTC <luite> the other haskell servers apparently still have the same IP address :)
2011-05-22 16:52:18 UTC <byorgey> ah, haha
2011-05-22 16:53:55 UTC <luite> 2001-05-21 huh?
2011-05-22 16:56:28 UTC <luite> hadn't seen the gray code one before, nice
2011-05-22 17:30:09 UTC <luite> do you know who hosts projects.haskell.org?
2011-05-22 17:32:16 UTC <luite> "This server is run by a mysterious group of Haskell hackers who do not wish to be known as a Cabal, and is funded from money earned by haskell.org mentors in the Google Summer-of-Code programme."
2011-05-22 17:32:20 UTC <luite> hehe
2011-05-22 17:40:33 UTC <luite> probably not very suitable for wolfgang anyway
2011-05-22 17:47:18 UTC <luite> hmm their hosting provider is quite cheap, 49 euro per month for a quad core i7 920 server with 8GB RAM
2011-05-22 17:47:25 UTC <luite> 149 setup
2011-05-22 17:48:55 UTC <byorgey> luite: 2001, haha whoops =)
2011-05-22 17:49:45 UTC <byorgey> luite: I don't really know exactly who runs projects.h.o
2011-05-22 17:50:34 UTC <luite> hmm, I'll ask in #haskell
2011-05-22 17:57:06 UTC <luite> the identity of the admins seems to be a closely guarded secret
2011-05-23 01:07:47 UTC <byorgey> alpounet: sorry I missed you
2011-05-23 01:08:43 UTC <byorgey> FYI, if I am not around you can always just leave questions etc. here and I will read them later
2011-05-23 07:03:37 UTC <alpounet> byorgey, any idea why http://hpaste.org/46955/diagrams__cantor only yields one of the iterations of the cantor set, whereas what i want is draw the first 5 iterations, on the same diagram, at different heights
2011-05-23 10:33:07 UTC <byorgey> alpounet: struts and hrules have height 0, so combining them with === just puts them on top of each other
2011-05-23 10:33:40 UTC <byorgey> alpounet: try using rectangles (i.e. scaled squares) in place of the hrules.
2011-05-23 10:39:36 UTC <byorgey> alpounet: you'll also want to scale the iterations so they are all the same width
2011-05-23 10:40:01 UTC <byorgey> using something like  scaleTo w d = d # scaleX (w / width d)
2011-05-23 19:21:34 UTC <alpounet> oh ok, thanks byorgey
2011-05-23 19:21:41 UTC <alpounet> will try this soon
2011-05-23 20:42:08 UTC <tromp> what would be the shortest program to draw a path of 3 lines in U shape
2011-05-23 20:43:11 UTC <tromp> or the most straightforward program
2011-05-23 21:15:22 UTC <byorgey> tromp: well, you could do something like   stroke $ fromSegments [(0,-1),(1,0),(0,1)]
2011-05-23 21:30:59 UTC <tromp> thx; i'll try that
2011-05-23 21:41:43 UTC <tromp> @pl \(x, y) -> (f y, f x)
2011-05-23 21:44:40 UTC <byorgey> (f &&& f) . swap
2011-05-23 22:17:46 UTC <tromp> does Diagrams work with Complex to represent the plane?
2011-05-23 22:19:39 UTC <byorgey> tromp: interesting question!
2011-05-23 22:20:00 UTC <byorgey> tromp: are you asking about how it is implemented, or whether it could be made to work with Complex?
2011-05-23 22:20:21 UTC <byorgey> it is not implemented in terms of Complex
2011-05-23 22:21:36 UTC <byorgey> but since complex numbers form a vector space you could easily construct diagrams over (Complex Double)
2011-05-23 22:23:41 UTC <tromp> so i could do pathFromVectors [-i,1,i] ?
2011-05-23 22:25:40 UTC <byorgey> you could do  fromOffsets [-i,1,i] :: Path (Complex Double)
2011-05-23 22:25:52 UTC <byorgey> or fromVertices (map P [-i,1,i])
2011-05-23 22:26:15 UTC <byorgey> tromp: by the way, I just realized I said fromSegments before when I should have said fromOffsets, sorry about that
2011-05-23 22:26:26 UTC <byorgey> maybe you already figured that out
2011-05-23 22:28:49 UTC <tromp> yeah, fromSegments didnt look right
2011-05-23 22:29:56 UTC <tromp> but hen what's difference between pathFromVectors and fromOffsets?
2011-05-23 22:30:40 UTC <byorgey> hmm, which module is pathFromVectors in?
2011-05-23 22:31:55 UTC <byorgey> fromOffsets constructs either a Path or a Trail from a list of vectors
2011-05-23 22:32:50 UTC <tromp> i see it used in http://en.wikipedia.org/wiki/Hilbert_curve#Haskell_Implementation
2011-05-23 22:33:32 UTC <byorgey> oh, that is from the old version of diagrams
2011-05-23 22:34:15 UTC <tromp> that explains
2011-05-23 22:34:25 UTC <byorgey> ok, so fromOffsets is essentially a much more general version of what pathFromVectors used to be
2011-05-23 22:36:26 UTC <byorgey> tromp: there are more up-to-date examples here: http://projects.haskell.org/diagrams/gallery.html
2011-05-23 22:36:39 UTC <byorgey> although now that I think about it none of those examples uses paths in a very interesting way
2011-05-23 22:37:13 UTC <byorgey> tromp: if there's a particular sort of example you'd like to see let me know and I could probably work something up
2011-05-23 22:38:45 UTC <tromp> oh, a working hilbert curve would be nice
2011-05-23 22:41:12 UTC <byorgey> ok, sure
2011-05-23 22:56:34 UTC <byorgey> tromp: http://hpaste.org/46985/hilbert_curve_with_diagrams
2011-05-23 22:57:57 UTC <byorgey> this is one way to do it.  It's a bit longer than the previous one but I think it's a little nicer since it builds up the path directly by gluing the sections together, rather than dealing with coordinates
2011-05-23 22:58:18 UTC <byorgey> also, while doing this I realized I wanted a function to reverse trails, so I wrote it, but I will add it to the standard library
2011-05-23 23:06:00 UTC <tromp> you could even try to compose the diagrams instead of the trails
2011-05-23 23:07:01 UTC <tromp> you start with a diagram t, then put a unitY diagram below and a rotated t below that
2011-05-23 23:07:20 UTC <tromp> then call that diagram y
2011-05-23 23:07:37 UTC <tromp> put y beside a unitX diagram beside a reflected y
2011-05-23 23:07:59 UTC <tromp> then re-assign the origin to be in bottom left
2011-05-23 23:08:46 UTC <tromp> funny that you can compse at so many levels: vectors, trails, diagrams
2011-05-24 01:13:53 UTC <byorgey> tromp: yes, you could do it that way too
2011-05-24 01:14:05 UTC <byorgey> tromp: but you would have to do some annoying fiddling to get things to line up properly
2011-05-24 01:14:53 UTC <byorgey> tromp: personally I find the ability to compose at so many levels quite useful, since the different sorts of composition have different semantics
2011-05-24 01:15:01 UTC <byorgey> then again, I am obviously biased =)
2011-05-24 01:15:37 UTC <tromp> yes, it's a nice feature for sure
2011-05-24 01:16:19 UTC <tromp> to align properly, i need the origin in the lower left, and the vertical composition should keep the origin of the top object
2011-05-24 01:16:53 UTC <tromp> i believe that's not too much fiddling:)
2011-05-24 01:16:59 UTC <byorgey> I guess not =)
2011-05-24 01:17:29 UTC <byorgey> if you want vertical composition that preserves the top object's origin you can use  append (negateV unitY)
2011-05-24 01:18:21 UTC <byorgey> append v d1 d2  places d1 and d2 next to each other with v pointing from d1 to d2, and preserves d1's origin
2011-05-24 01:22:21 UTC <tromp> doesn't vcat do something similar on a list?
2011-05-24 01:23:25 UTC <byorgey> yes
2011-05-24 01:23:40 UTC <byorgey> so I guess you could also do  vcat [d1,d2]  in this particular case
2011-05-24 01:24:00 UTC <byorgey> s/I guess//  =)
2011-05-24 01:25:01 UTC <tromp> i'll try when i get home
2011-05-24 16:29:18 UTC <luite> ugh I feel a bit guilty about not giving tg_ the latest wolfgang sources he asked for, suggesting that he'd better improve diagrams instead if he really wanted to help
2011-05-24 18:00:44 UTC <byorgey> luite: hehe, I wouldn't =)
2011-05-24 18:01:44 UTC <byorgey> luite: I'm all for open source, but "open source" doesn't preclude keeping the source private for a while at first
2011-05-24 18:03:04 UTC <hpc> "eventually open source" :Q
2011-05-24 18:03:10 UTC <hpc> *:P
2011-05-24 18:30:47 UTC <luite> byorgey: hehe he's been bugging me all week about "our" project and how the things he's going to write are totally going to supersede wolfgang :)
2011-05-24 18:41:34 UTC <hpc> heh
2011-05-24 19:24:13 UTC <byorgey> hah, yikes
2011-05-24 19:25:19 UTC <tg_> what do you know
2011-05-24 19:25:36 UTC <tg_> byorgey: curiously enough, all of the work I'll end up doing in haskell is to support physics research
2011-05-24 19:26:01 UTC <tg_> i'm interested in testing the validity of a (really the, there's only one) circle fractal
2011-05-24 19:26:37 UTC <tg_> as a geometric spacetime.
2011-05-24 19:26:50 UTC <tg_> (I'm a physicist, a computer scientist 2nd)
2011-05-24 19:27:03 UTC <tg_> anyway, one thing that might throw me for a loop
2011-05-24 19:27:11 UTC <tg_> is that the circle fractal is strongly Integer addressed
2011-05-24 19:27:55 UTC <tg_> So R2 isn't the most natural place to work
2011-05-24 19:28:33 UTC <tg_> how much work do you see extending diagrams to work in some arbitrary space?
2011-05-24 19:28:55 UTC <byorgey> diagrams already supports arbitrary vector spaces.
2011-05-24 19:29:07 UTC <tg_> through VectorSpace?
2011-05-24 19:29:12 UTC <byorgey> yes
2011-05-24 19:29:35 UTC <tg_> hm
2011-05-24 19:29:52 UTC <tg_> so I need a new HasBasis
2011-05-24 19:30:18 UTC <byorgey> tg_: what vector space do you want?
2011-05-24 19:30:47 UTC <tg_> byorgey: that's the question I have to answer
2011-05-24 19:31:13 UTC <tg_> it's probably 28 dimensional
2011-05-24 19:31:16 UTC <tg_> whatever it is
2011-05-24 19:31:28 UTC <tg_> (there is lots of literature about the fractal, inclding some recent PhD paper discoveries)
2011-05-24 19:31:31 UTC <byorgey> ok
2011-05-24 19:31:33 UTC <tg_> one thing that's interesting/nice
2011-05-24 19:31:47 UTC <tg_> is that you can essentially make two modifications to the normal equations for circles:
2011-05-24 19:32:09 UTC <byorgey> so you want to produce some sort of concrete visualizations of this 28-dimensional fractal?
2011-05-24 19:32:13 UTC <tg_> one, [2,3] aren't prime, and there is an explicit division algebra on 0
2011-05-24 19:32:42 UTC <tg_> two, there are 28 "almost prime" 4-vectors that serve as a basis
2011-05-24 19:33:04 UTC <tg_> although they are probably not 4-vectors, they are probably 4-vectors (quaternions) embedded in a octonion basis
2011-05-24 19:33:12 UTC <tg_> oh, third rule
2011-05-24 19:33:15 UTC <tg_> leave pi out
2011-05-24 19:33:26 UTC <byorgey> um, I will take your word for it.
2011-05-24 19:33:58 UTC <tg_> well I need to figure out how to get it to work, but I have done about 1.5 years of research into studying the mathematics of the fractal, its group
2011-05-24 19:34:33 UTC <tg_> anyway, you clarified the point - since you use an abstract vector space
2011-05-24 19:34:37 UTC <tg_> i don't need to worry about that
2011-05-24 19:35:15 UTC <byorgey> this sounds cool though, I was hoping someone would try to draw things in funny vector spaces =)
2011-05-24 19:35:27 UTC <tg_> byorgey: well, what I really hope to prove
2011-05-24 19:35:37 UTC <byorgey> you would also have to create your own backend that knows how to render 28-dimensional diagrams or whatever
2011-05-24 19:35:40 UTC <tg_> is that if you use the circle fractal as the lowest basis
2011-05-24 19:35:49 UTC <tg_> well, it's 3-dimensional
2011-05-24 19:35:50 UTC <tg_> in terms of rendering
2011-05-24 19:37:26 UTC <tg_> you can view it as a coupling of a set of 8, 3-dimensional vector spaces
2011-05-24 19:37:28 UTC <tg_> but it's recursively defined
2011-05-24 19:37:45 UTC <tg_> have you even encountered the apollonian fractal before?
2011-05-24 19:37:46 UTC <tg_> for some reason it's not very well known
2011-05-24 19:38:17 UTC <byorgey> yes, I have
2011-05-24 19:38:37 UTC <tg_> well, a very bright PhD student used a technique called an 'affine sieve' to prove properties
2011-05-24 19:38:40 UTC <tg_> about the fractal
2011-05-24 19:38:49 UTC <tg_> though lots has been discovered generally in the last 10 years
2011-05-24 19:39:01 UTC <luite> ah that's a fun thing to draw
2011-05-24 19:39:10 UTC <tg_> but the PhD student (Elena Fuchs) got her PhD for proving that, in the context of the fractal
2011-05-24 19:39:15 UTC <tg_> 2 and 3 are not numbers
2011-05-24 19:39:21 UTC <tg_> (rather, they aren't prime "curvatures"
2011-05-24 19:39:23 UTC <tg_> )
2011-05-24 19:39:41 UTC <tg_> and that the smallest reprsentation group is something very much like D_28h
2011-05-24 19:39:58 UTC <tg_> though she proved it using mappings in and out of the complex numbers
2011-05-24 19:40:26 UTC <tg_> but the group has all kinds of weird properties
2011-05-24 19:40:38 UTC <byorgey> luite: yeah, I had a version of it drawn with the old version of diagrams, someone ought to recreate it
2011-05-24 19:41:02 UTC <tg_> one of which is that the joint spectral radius of the generators is equal to the golden ratio
2011-05-24 19:41:41 UTC <tg_> byorgey: yeah that'll probably be me
2011-05-24 19:41:44 UTC <tg_> i'm just getting running
2011-05-24 19:41:50 UTC <byorgey> great =)
2011-05-24 19:41:58 UTC <luite> oh that would be a good exercise
2011-05-24 19:42:02 UTC <tg_> i have spent two years struggling with mathematica
2011-05-24 19:42:05 UTC <luite> only 26 more dimenstions to go afterwards ;p
2011-05-24 19:42:15 UTC <tg_> luite: like I said, it's not "really" 28 dimensional
2011-05-24 19:42:20 UTC <tg_> the fractal is strictly 3 dimensional
2011-05-24 19:42:30 UTC <tg_> there is a fourth dimension, but it's an inner product dimension
2011-05-24 19:43:29 UTC <tg_> after four, the fractal is degenerate - whereas you started addressing evertyhing (the (center * curvature), the depth, the area, and the volume) of the objects with Integers
2011-05-24 19:43:45 UTC <tg_> you start getting n-spheres which are no longer Integers
2011-05-24 19:44:21 UTC <luite> hmm, I'm getting type errors in my head, expected type Integer, actual type n-sphere
2011-05-24 19:44:31 UTC <tg_> luite: right, it doesn't make sense intuitively
2011-05-24 19:44:39 UTC <tg_> but the circles are *addressed* *uniquely* by integers
2011-05-24 19:45:13 UTC <tg_> which surprisngly implies that n-spheres
2011-05-24 19:45:19 UTC <tg_> are addressed by products of integers
2011-05-24 19:45:25 UTC <tg_> which are still integers :O
2011-05-24 19:45:54 UTC <tg_> i realize it sounds crazy, but it was proved about 10 years ago
2011-05-24 19:46:09 UTC <tg_> I have about 1200 pages of material I've digested about the fractal
2011-05-24 19:46:18 UTC <tg_> most of it was done by Jeffery Lagarias at AT&T Labs
2011-05-24 19:46:31 UTC <tg_> some by Ron Graham
2011-05-24 19:47:16 UTC <tg_> byorgey: i love how most of the answers to even the most absurdly strange ideas from you guys have been "yeah, that should be doable."
2011-05-24 19:47:22 UTC <tg_> this community is awesome
2011-05-24 19:47:25 UTC <byorgey> =)
2011-05-24 19:48:26 UTC <byorgey> "Haskell: making difficult things easy and easy things into zygohistomorphic prepromorphisms since 1987"
2011-05-24 19:49:04 UTC <tg_> hahaha
2011-05-24 19:49:11 UTC <tg_> that's wonderful
2011-05-24 19:49:42 UTC <tg_> incedentally, I had already "decided" to use ||| as a geometric operator
2011-05-24 19:49:46 UTC <tg_> and you beat me to that one
2011-05-24 19:51:01 UTC <luite> tg_: yeah that happens quite often. actually I worked out non-euclidean geometry some 30 years before Gauss did, but I didn't publish it because I thought the results wouldn't be interesting to others ;)
2011-05-24 19:51:15 UTC <tg_> luite: hey now
2011-05-24 19:51:41 UTC <tg_> I think that's the role of mathemiticians in the universe
2011-05-24 19:52:03 UTC <tg_> to invent useless things for no reason, ironically
2011-05-24 19:52:11 UTC <tg_> and then for them to to turn out to be useful
2011-05-24 19:53:17 UTC <tg_> the ones that really confound me are those like Ramajuran who were better calculators than I am, with a quad core processor
2011-05-24 19:55:11 UTC <tg_> byorgey: how many years have you been studying this-and-that-morphisms?
2011-05-24 19:55:44 UTC <byorgey> tg_: category theory?  I think I first started learning it 3 or 4 years ago
2011-05-24 19:56:08 UTC <byorgey> not that I have been studying it intensively ever since.
2011-05-24 19:56:10 UTC <tg_> how long have you been in a PhD program? do you consider yourself an expert (on that)?
2011-05-24 19:57:07 UTC <byorgey> I've been in my PhD program 3 years, and as far as category theory goes, I consider myself comfortably conversant but far from expert.
2011-05-24 19:57:27 UTC <byorgey> then again, "expert" is a relative term.
2011-05-24 19:57:33 UTC <tg_> yeah
2011-05-24 19:57:49 UTC <tg_> what areas "underneath" (more abstract) have you studied, if any?
2011-05-24 19:58:08 UTC <byorgey> I don't understand the question.
2011-05-24 19:58:15 UTC <tg_> like, have you studied model theory?
2011-05-24 19:58:20 UTC <byorgey> yes, a bit
2011-05-24 19:58:22 UTC <tg_> or any of the even more abstract ideas
2011-05-24 19:58:37 UTC <tg_> is it incorrect to think of that as "more abstract" than category theory?
2011-05-24 19:59:41 UTC <byorgey> I don't know.
2011-05-24 20:02:50 UTC <luite> hmm, I don't know too much model theory, compactness theorem is about as much as I can actively recall, but I wouldn't really say that, it just seems to focus on a different aspect
2011-05-24 20:06:04 UTC <tg_> luite: well, to even hint that a circle fractal could be interpreted as a real, physical possibility is so far outside the comfort zone of physicists
2011-05-24 20:06:38 UTC <tg_> so I'm used to pretty much everything I deal with is so far removed from typical quantum physics calculations that I used to do all the time
2011-05-24 20:07:30 UTC <tg_> ironically, the first place I thought such an idea was worth investigating was after going through all of the modern physical theory (QM -> QFT -> Gauge Theory -> Yang-Mills theories -> String theories)
2011-05-24 20:07:35 UTC <tg_> was all the way at the end
2011-05-24 20:13:34 UTC <luite> what idea? sorry for not following you
2011-05-24 20:14:04 UTC <tg_> the idea of propsing a fractal theory of quantum physics
2011-05-24 20:14:20 UTC <tg_> it's "wrong" in physics circles for two reasons
2011-05-24 20:14:37 UTC <tg_> outside of the subfields of [string theory, quantum loop gravity], it's considered completely absurd
2011-05-24 20:14:54 UTC <tg_> inside the field of string theory, spherical solutions are currently though to be ruled out
2011-05-24 20:15:47 UTC <tg_> and QLG is one of the least explored areas in theory
2011-05-24 20:21:35 UTC <luite> do you think the regular non-fractal string theories are wrong?
2011-05-24 20:23:54 UTC <tg_> no, I think (as do many physicists) think that string theory is a mathematical, not a physical, framework
2011-05-24 20:25:14 UTC <tg_> As Leonard Susskind (one of the "fathers" of string theory) says, "When one wants to sit down and do a calculation, one immediately discovers that you are off by at least 22 dimensions."
2011-05-24 20:26:35 UTC <tg_> string theory is (in my view) a mathematical framework to the quanta of spacetime by solving 26 seperate (no cross-product terms) electrostatics problems
2011-05-24 20:26:41 UTC <luite> hehe I like leonard susskinds lectures (the ones on itunes), but that immediately shows how little I know about this
2011-05-24 20:26:53 UTC <tg_> how many did you watch?
2011-05-24 20:27:13 UTC <tg_> the best ones, really, are the string theory ones
2011-05-24 20:27:16 UTC <tg_> and the m-theory ones
2011-05-24 20:27:25 UTC <luite> not too many, classical and quantum mechanics I think, still need to do the modern physics ones, one day
2011-05-24 20:27:25 UTC <tg_> (which don't cover m-theory at all, but that's the title of them)
2011-05-24 20:27:47 UTC <tg_> string theory basically lets you reduce physics to electrostatic problems over conformal spaces
2011-05-24 20:27:57 UTC <tg_> where you have 26 different types of charges
2011-05-24 20:29:37 UTC <tg_> the equations for string theory really are pretty simple (at least the canonical integral is)
2011-05-24 20:30:53 UTC <tg_> the main problem I suppose
2011-05-24 20:31:00 UTC <tg_> is that in order to not have cross products
2011-05-24 20:31:16 UTC <tg_> all of the "dimensions" have to satisfy the cauchy-riemann equations
2011-05-24 20:32:15 UTC <luite> hehe one day I'll watch them. perhaps this summer when I'm on holiday in the alps, camping, it's been raining for a few days, nothing better to do ;)
2011-05-24 20:32:30 UTC <tg_> susskind in the alps
2011-05-24 20:32:34 UTC <tg_> sounds like a good time to me
2011-05-25 00:29:15 UTC <hpc> susskind gave a ted talk about feynmann
2011-05-25 00:29:29 UTC <hpc> that's three awesome things in one tiny .mp4
2011-05-25 00:44:24 UTC <luite> hmm
2011-05-25 15:33:16 UTC <tromp> i have to say there was a certain artistic quality to the hrule/vrule mixup:-)
2011-05-25 15:34:27 UTC <byorgey> hehe, indeed =)
2011-05-25 15:35:12 UTC <byorgey> sometimes I like just running a diagram in looped-compile mode (with the -l option) and then fiddling around with the source and seeing what comes out =)
2011-05-25 15:35:55 UTC <byorgey> http://projects.haskell.org/diagrams/gallery/Hilbert.html
2011-05-25 15:37:15 UTC <tromp> oh, you only need to import the Prelude. i'
2011-05-25 15:37:23 UTC <tromp> i'll update the wikipedia accordingly
2011-05-25 15:37:27 UTC <byorgey> no
2011-05-25 15:37:39 UTC <byorgey> if you want to compile it with the Cairo backend you have to import that
2011-05-25 15:38:13 UTC <byorgey> I just have things set up in the gallery so that it looks for something named "example" and renders it using the Cairo backend
2011-05-25 15:38:23 UTC <tromp> ic
2011-05-25 15:38:27 UTC <byorgey> just to make the examples less backend-specific
2011-05-25 15:48:50 UTC <tromp> I included a link to Diagrams in the wikipedia version
2011-05-25 15:49:58 UTC <byorgey> good idea
2011-05-25 16:02:25 UTC <Lemmih> http://mirror.seize.it/outlines.svg
2011-05-25 16:03:24 UTC <Lemmih> Add printer + arts&crafts to get a 3D sin wave.
2011-05-25 16:03:46 UTC <luite> hehe
2011-05-25 16:05:48 UTC <Lemmih> I am gonna make a matric ton of these.
2011-05-25 16:06:31 UTC <luite> add a HPGL2 backend to automate production on a cutting table :p
2011-05-25 16:09:21 UTC <Lemmih> ACTION considers plotting two optimization parameters for GHC and making a cutout.
2011-05-25 16:11:06 UTC <luite> do you have a sine cutter? ;)
2011-05-25 16:47:00 UTC <byorgey> Lemmih: did you make those outlines with diagrams too?
2011-05-25 18:51:04 UTC <luite> whoah it uses ipv6 :O)
2011-05-25 19:39:45 UTC <sjoerd_visscher> hi!
2011-05-25 19:39:55 UTC <byorgey> hi sjoerd_visscher!
2011-05-25 19:39:55 UTC <sjoerd_visscher> who knows something about the UDTree?
2011-05-25 19:40:15 UTC <byorgey> I pretend to ;)
2011-05-25 19:40:28 UTC <sjoerd_visscher> I'm confused by the branch having a list of d's instead of just one
2011-05-25 19:40:54 UTC <sjoerd_visscher> it looks like that was originally the case even
2011-05-25 19:41:18 UTC <byorgey> sjoerd_visscher: it's sort of a hack
2011-05-25 19:41:53 UTC <sjoerd_visscher> what do you need it for?
2011-05-25 19:41:55 UTC <byorgey> sjoerd_visscher: the basic idea is that by delaying composition of the d's we move a Monoid constraint from some creation function to some elimination function
2011-05-25 19:42:09 UTC <byorgey> and there was some reason why I wanted that but I couldn't tell you now.
2011-05-25 19:43:26 UTC <sjoerd_visscher> I want to make a version using Fix from http://hackage.haskell.org/packages/archive/recursion-schemes/0.4.3/doc/html/Data-Functor-Foldable.html
2011-05-25 19:43:34 UTC <byorgey> cool.
2011-05-25 19:44:07 UTC <sjoerd_visscher> But I'll stick to one d then for now.
2011-05-25 19:44:22 UTC <byorgey> yes, that makes sense.
2011-05-25 19:45:17 UTC <sjoerd_visscher> If the u's would have been a list I would understand, as u doesn't need to be a Monoid for Actions to be defined on it
2011-05-25 19:45:52 UTC <byorgey> yeah
2011-05-25 19:46:03 UTC <sjoerd_visscher> wait
2011-05-25 19:46:18 UTC <sjoerd_visscher> still confused
2011-05-25 19:46:23 UTC <byorgey> I probably need to go back at some point and rethink/clean up UDTree, at the time I just really wanted to get it to work so I could get on with making diagrams =)
2011-05-25 19:47:42 UTC <sjoerd_visscher> you should move the repo to github if you want more people to send patches I think
2011-05-25 19:47:59 UTC <byorgey> but then I would have to use git, right?
2011-05-25 19:48:16 UTC <byorgey> or can I mirror it somehow?
2011-05-25 19:48:31 UTC <sjoerd_visscher> how did they do it with GHC?
2011-05-25 19:48:39 UTC <byorgey> I don't really know.
2011-05-25 19:49:42 UTC <sjoerd_visscher> Google says there are ways to mirror darcs to git
2011-05-25 19:51:54 UTC <byorgey> sjoerd_visscher: thanks, I will look into it
2011-05-25 19:52:11 UTC <byorgey> I love github but I can't say I am a big fan of git
2011-05-25 19:52:45 UTC <sjoerd_visscher> I'm not a fan of command-line tools
2011-05-25 19:53:06 UTC <luite> what do you use instead, for git? git gui?
2011-05-25 19:53:11 UTC <sjoerd_visscher> GitX
2011-05-25 19:53:39 UTC <luite> hmm, havent seen that one yet
2011-05-25 19:53:48 UTC <sjoerd_visscher> it's for MacOS
2011-05-25 19:54:21 UTC <luite> oh right, I use UbuntuOS
2011-05-25 19:54:56 UTC <byorgey> what do you know, https://github.com/purcell/darcs-to-git
2011-05-25 19:59:19 UTC <Lemmih> byorgey: Yes, I made the outlines with disgrams.
2011-05-25 19:59:43 UTC <Lemmih> It's amazing what you can do in a few lines of Haskell.
2011-05-25 19:59:51 UTC <byorgey> Lemmih: impressive, did you use beziers, or just lots of tiny straight lines?
2011-05-25 20:00:11 UTC <Lemmih> byorgey: Lots of straight lines.
2011-05-25 20:00:44 UTC <byorgey> I mean eventually I hope someone will write an extension module to let you plot function curves, but I didn't expect it would be that easy to do it from scratch =)
2011-05-25 20:01:02 UTC <byorgey> yes, having Haskell at your disposal is rather powerful.
2011-05-25 20:02:45 UTC <Lemmih> The entire code (both for rendering outlines and generating top-down color views) is less than 60 lines.
2011-05-25 20:03:06 UTC <byorgey> nice
2011-05-25 20:03:48 UTC <byorgey> Lemmih: while writing it, were there any things you wished were in the standard library, but weren't?
2011-05-25 20:06:04 UTC <Lemmih> Not really. The hardest part was figuring out how to draw lines.
2011-05-25 20:07:29 UTC <byorgey> ok.
2011-05-25 20:07:33 UTC <luite> I think the hard parts of plotting are in all the extra details, choosing a proper range, the right number of ticks, labels, placing the legend somewhere
2011-05-25 20:16:55 UTC <tromp> that's why the plot script i maintain at work is over 3000 lines of perl:(
2011-05-25 20:18:41 UTC <tromp> just parsing all the options is over 300 lines:(
2011-05-25 20:20:35 UTC <byorgey> yikes!
2011-05-25 20:21:49 UTC <luite> tromp: did you have to do tricky things? like reading font metrics for determining the size and placement of a label or legend box?
2011-05-25 20:22:18 UTC <tromp> it queries pgplot routines for that
2011-05-25 20:22:42 UTC <luite> hehe so doing everything in haskell would be even more work :)
2011-05-25 20:23:28 UTC <tromp> also, it's not self contained, but uses other perl modules for manipulating time series
2011-05-25 20:23:53 UTC <tromp> rewriting in haskell is not even a consideration:(
2011-05-25 20:24:15 UTC <luite> aw ;p
2011-05-25 20:24:39 UTC <tromp> i'm one of the few ppl in my company who has even heard of haskell
2011-05-25 20:25:29 UTC <luite> show them diagrams and they'll see how awesome it is (just don't mention that there's no text support yet)
2011-05-25 20:47:30 UTC <byorgey> so we currently have both rotate (which takes an angle in radians) and rotateBy (which takes a fraction of a circle)
2011-05-25 20:48:01 UTC <byorgey> should we keep both? or drop the radians one? or make one function that takes an argument in some Angle class with instances for both?
2011-05-25 20:48:58 UTC <byorgey> I'm kind of leaning towards the type class approach but could be talked out of it
2011-05-25 20:50:07 UTC <tromp> it's hard to imagine why you'd need to rotate by an angle that's not a fraction of pi
2011-05-25 20:50:45 UTC <alpounet> agreed
2011-05-25 20:50:56 UTC <byorgey> what if you wanted a particular slope?
2011-05-25 20:51:06 UTC <byorgey> then you would compute the angle with atan2 or something like that
2011-05-25 20:52:00 UTC <tromp> yes, then you might need to divide by 2*pi  to get the fraction:(
2011-05-25 20:52:44 UTC <tromp> is there a way now to use 360 degree type angles?
2011-05-25 20:53:01 UTC <byorgey> sure, divide by 360 and multiply by 2*pi  ;)
2011-05-25 20:53:12 UTC <tromp> but not direct?
2011-05-25 20:53:16 UTC <byorgey> but there are no functions that specifically take angles in degrees
2011-05-25 20:53:16 UTC <byorgey> right
2011-05-25 20:54:03 UTC <tromp> it's not clear that fractions like 1/4 are an improvement over degrees like 90
2011-05-25 20:54:19 UTC <tromp> which many other frameworks use
2011-05-25 20:54:35 UTC <byorgey> but degrees are arbitrary and dumb.
2011-05-25 20:54:47 UTC <byorgey> anyway, I am envisioning something like the ability to say   rotate (1/3)   or  rotate (Rad (2*pi/3))   or  rotate (Deg 120)
2011-05-25 20:54:49 UTC <tromp> arbitrary, dumb, and familiar:(
2011-05-25 20:54:56 UTC <byorgey> sadly, yes
2011-05-25 20:55:17 UTC <sjoerd_visscher> the default unit is tau?
2011-05-25 20:55:27 UTC <tromp> shouldn't the 1/3 be a proper Data.Ratio 1%3 ?
2011-05-25 20:55:28 UTC <byorgey> yes
2011-05-25 20:55:34 UTC <sjoerd_visscher> cool
2011-05-25 20:56:16 UTC <byorgey> tromp: perhaps, but (1/3 :: Rational) == 1%3
2011-05-25 20:56:38 UTC <byorgey> ok, off to bridge club
2011-05-25 20:56:51 UTC <tromp> happy bidding
2011-05-25 20:56:56 UTC <byorgey> thanks
2011-05-25 21:12:12 UTC <Lemmih> http://mirror.seize.it/spiral.png http://mirror.seize.it/spiral.svg
2011-05-25 21:13:14 UTC <luite> cool, but it's discontinuous :(
2011-05-25 21:24:22 UTC <Lemmih> Discontinuous?
2011-05-25 21:25:40 UTC <luite> yes at the horizontal line from the center to the right
2011-05-25 21:26:03 UTC <Lemmih> Ah, yeah.
2011-05-25 21:43:25 UTC <Lemmih> ACTION doesn't know how to fix that /-:
2011-05-25 21:44:42 UTC <sjoerd_visscher> multiply by pi somewhere
2011-05-25 21:45:24 UTC <sjoerd_visscher> pi/3
2011-05-26 13:13:29 UTC <hpc> :( the wolfgang site is down
2011-05-26 13:13:40 UTC <hpc> or rather, it's no longer up
2011-05-26 13:44:08 UTC <luite> sorry :p
2011-05-26 13:44:48 UTC <luite> there were some hanging interpreter processes yesterday, the autokiller doesn't work properly in all situations
2011-05-26 13:45:43 UTC <luite> and I've added some other things that might decrease security (loading code from one worksheet in another, uploading your own data files)
2011-05-26 13:45:55 UTC <luite> so I want to fix that first, before making it public again
2011-05-26 13:46:18 UTC <hpc> ah, makes sense
2011-05-26 13:55:29 UTC <hpc> can someone review my svg package and give thoughts?
2011-05-26 13:55:30 UTC <hpc> https://code.google.com/p/hs-svg/
2011-05-26 13:56:01 UTC <hpc> i could use some input before i start adding more functionality
2011-05-26 14:06:21 UTC <byorgey> hpc: looks nice!
2011-05-26 14:06:26 UTC <byorgey> needs moar comments ;)
2011-05-26 14:07:20 UTC <byorgey> also I think there is a lot of repeated stuff in Out.hs that can be factored into some common routines
2011-05-26 14:07:58 UTC <luite> using Show to do the output might not be ideal
2011-05-26 14:08:48 UTC <byorgey> oh, good point.  just derive the Show instance and make another class for serializing SVG stuff
2011-05-26 14:09:20 UTC <byorgey> then all the functions like showPoint, showElem, etc. can just be instances of that class
2011-05-26 14:12:44 UTC <luite> and SVGTree may not be the ideal data type for this: SVG is often just a flat list of elements, drawn from top to bottom (painter's algorithm), you  may want to have some (Monoidal) operation to combine two lists of drawing instructions, without adding extra root elements
2011-05-26 14:13:35 UTC <luite> so even though the XML is always a tree, having a forest for intermediate operation could make sense. I haven't thought about it too much, so I might be wrong :)
2011-05-26 14:13:57 UTC <hpc> i already have a forest, [SVGTree]
2011-05-26 14:13:58 UTC <hpc> i think
2011-05-26 14:14:43 UTC <luite> yes that could work
2011-05-26 14:15:07 UTC <hpc> i thought about making SVGTree a monoid, then got hung up on mempty
2011-05-26 14:15:10 UTC <luite> maybe there's already enough
2011-05-26 14:15:21 UTC <luite> with the g function and a list of trees
2011-05-26 14:16:44 UTC <hpc> also, i want to keep the types deliberately simple
2011-05-26 14:16:48 UTC <hpc> strut :: (Backend b v, InnerSpace v, OrderedField (Scalar v), Monoid m) => v -> AnnDiagram b v m -- yuck
2011-05-26 14:16:53 UTC <luite> haha
2011-05-26 14:17:24 UTC <hpc> g :: [SVGTree] -> SVGTree -- win
2011-05-26 14:17:26 UTC <luite> you're supposed to say "how wonderfully polymorphic" ;p
2011-05-26 14:17:32 UTC <hpc> haha
2011-05-26 14:18:27 UTC <hpc> (on a side note, the culture of making libs with complex types might be contributing to the perception that there aren't good libs for haskell)
2011-05-26 14:18:47 UTC <hpc> (because everything looks like ghc internals or whatever, and not like something meant to be used by programmers)
2011-05-26 14:19:05 UTC <hpc> anyhoo
2011-05-26 14:19:13 UTC <byorgey> hehe, I have worried about this.
2011-05-26 14:19:14 UTC <luite> either that, or there should be some syntax for context synonyms :p
2011-05-26 14:19:33 UTC <byorgey> there is a big tension between making things as useful and general as possible, and making the types comprehensible.
2011-05-26 14:19:52 UTC <hpc> yeah
2011-05-26 14:20:09 UTC <byorgey> I have even wondered about making a "beginner version" of diagrams that re-exports all the basic functions but with monomorphic types.
2011-05-26 14:20:15 UTC <byorgey> or nearly monomorphic.
2011-05-26 14:20:27 UTC <byorgey> it could be a pain to maintain though.
2011-05-26 14:20:29 UTC <hpc> i come from the bizarro half-world between java and perl, so i am mostly content with using concrete types as glue
2011-05-26 14:20:44 UTC <byorgey> perhaps it could be done with some sort of automated tool though.
2011-05-26 14:21:19 UTC <hpc> i think the big issue is that the class constraints don't separate concerns
2011-05-26 14:21:20 UTC <byorgey> luite: I already do use some constraint synonyms!
2011-05-26 14:21:34 UTC <hpc> your backend 'b' leaks through types and goes everywhere
2011-05-26 14:21:50 UTC <hpc> judging from what 'strut' has to do with the backend (nothing) at least
2011-05-26 14:22:28 UTC <luite> byorgey: how do you make them? I've used some before, but I think that required some (for me at least) less desirable language pragma's
2011-05-26 14:22:43 UTC <byorgey> hpc: you can only use a strut in vector space v with backends that work with that vector space.
2011-05-26 14:23:06 UTC <hpc> oh
2011-05-26 14:23:27 UTC <byorgey> luite: it's kind of a hack, you make a class with no methods  class (Some, Constraints, Here) => Synonym
2011-05-26 14:23:36 UTC <luite> ah yes, that's the same method
2011-05-26 14:23:42 UTC <byorgey> luite: and then a trivial instance   instance (Some, Constraints, Here) => Synonym a
2011-05-26 14:23:46 UTC <hpc> isn't that a bit beyond the scope of "an EDSL for diagrams"?
2011-05-26 14:24:10 UTC <byorgey> hpc: um... no? =)
2011-05-26 14:24:22 UTC <luite> but that requires OverlappingInstances or UndecidableInstances right?
2011-05-26 14:24:37 UTC <byorgey> luite: I don't remember.
2011-05-26 14:24:59 UTC <byorgey> luite: I do need those extensions though, but I don't know if it's for that or for other things
2011-05-26 14:25:04 UTC <luite> hehe after a while all your .hs files start with a few kilobyte of extensions :p
2011-05-26 14:25:14 UTC <byorgey> yeah =P
2011-05-26 14:25:46 UTC <hpc> ACTION can happily say he has never used an extension in code that does anything productive
2011-05-26 14:29:29 UTC <hpc> so, review of your review:
2011-05-26 14:29:49 UTC <hpc> make stuff derive Show, and make my own class for prettyprinting the elements and trees
2011-05-26 14:30:23 UTC <hpc> and see how appending trees works, and what i can do to make it easier
2011-05-26 14:33:52 UTC <luite> yes, and something you may want to keep in mind: it will be useful to store elements and reference them in other locations (defs/symbol + use)
2011-05-26 14:34:03 UTC <hpc> yeah, that i already have on my todo list
2011-05-26 14:34:06 UTC <hpc> for textpath
2011-05-26 14:34:33 UTC <luite> it's also useful for other things, like clipping paths, and groups that you just want to render a lot of times
2011-05-26 14:34:44 UTC <hpc> indeed
2011-05-26 14:35:18 UTC <luite> have you thought about how to make that in some way safe? no duplicate symbols, and that you can only refer to an existing symbol?
2011-05-26 14:36:50 UTC <hpc> that would be intractable
2011-05-26 14:36:54 UTC <hpc> you can reference lower ids
2011-05-26 14:36:57 UTC <luite> maybe you can just use Eq to combine equal trees
2011-05-26 14:37:06 UTC <luite> and generate id's when you write the svg
2011-05-26 14:37:27 UTC <hpc> so <foo href=bar>...[oodles of complex stuff]...<def id=bar>
2011-05-26 14:37:47 UTC <luite> some hashing of trees could make the Eq comparisons efficient
2011-05-26 14:38:37 UTC <hpc> i think ill start out just with a mostly 1:1 mapping of svg <-> haskell
2011-05-26 14:38:42 UTC <hpc> and add more safety later
2011-05-26 14:38:50 UTC <hpc> in the rewrite, perhaps
2011-05-26 14:39:35 UTC <luite> xlink :: SVGTree -> SVGTree -> SVGTree, where you store the references SVGTree in some attribute of the tree
2011-05-26 14:39:44 UTC <luite> the referenced SVGTree
2011-05-26 14:40:30 UTC <luite> and when you write the SVG file, you just collect all xlink attributes
2011-05-26 14:40:37 UTC <luite> and give them some id
2011-05-26 14:40:48 UTC <luite> combining identical trees
2011-05-26 14:41:14 UTC <luite> but maybe not ;p
2011-05-26 14:41:26 UTC <hpc> data SVG = SVG Context SVGTree?
2011-05-26 14:41:50 UTC <hpc> if anything in C can be solved with a deeper pointer, anything in haskell can be solved with another data structure
2011-05-26 14:42:30 UTC <luite> hehe, there's a difference though, in C you can use pointer comparison to check whether things refer to the same other thing
2011-05-26 14:42:45 UTC <hpc> heh
2011-05-26 14:42:48 UTC <luite> in haskell not really, unless you want to do things that look scary ;)
2011-05-26 14:43:34 UTC <luite> and with C you can have some global counter to generate your id's
2011-05-26 14:44:11 UTC <luite> whereas in haskell it's difficult to make unique things in a pure context
2011-05-26 14:52:11 UTC <tromp> you need to run in a State monad then
2011-05-26 14:53:29 UTC <luite> there are more specialized monads for that, MonadSupply in particular... but I think it's not ideal to make everything monadic
2011-05-26 14:54:32 UTC <luite> but maybe the pure alternatives are even worse
2011-05-26 14:54:33 UTC <tromp> better that than giving up purity, no?
2011-05-26 14:55:15 UTC <tromp> or passing the state around explicitly
2011-05-26 14:55:28 UTC <hpc> it's not purity i am worried about, so much as the extra pointless polymorphism
2011-05-26 14:55:53 UTC <hpc> because the 'a' in your State s a is only ever going to be SVGTree
2011-05-26 14:56:18 UTC <tromp> how does the polymorphism hurt you?
2011-05-26 14:56:36 UTC <hpc> it's just annoying is all
2011-05-26 14:56:50 UTC <hpc> it implies useful types that aren't actually there
2011-05-26 15:03:46 UTC <hpc> hmm, appendTree l@Leaf{} t = g [l,t]
2011-05-26 15:04:11 UTC <hpc> appendTree t t' = -- crap, can't even make mappend that way
2011-05-26 15:29:42 UTC <byorgey> hey there fryguybob
2011-05-26 15:29:46 UTC <fryguybob> Howdy
2011-05-26 15:30:37 UTC <byorgey> are you traveling or something? I forget
2011-05-26 15:31:00 UTC <fryguybob> Yeah, finishing up at my job.
2011-05-26 15:31:11 UTC <byorgey> ah, cool
2011-05-26 15:31:22 UTC <fryguybob> Then a conference
2011-05-26 15:31:34 UTC <byorgey> right, fun
2011-05-26 15:31:51 UTC <fryguybob> The gallery is coming along nicely.
2011-05-26 15:32:24 UTC <byorgey> thanks! I had fun coding it up with hakyll
2011-05-26 15:33:12 UTC <byorgey> now you just add a single .lhs file and it auto-generates the diagram, the gallery itself, the page for the example with syntax-highlighted code, the download link... =D
2011-05-26 15:41:21 UTC <tg_> byorgey: how do you see animated diagrams working in the future?
2011-05-26 15:41:29 UTC <tg_> byorgey: or interactive ones, or...
2011-05-26 15:42:12 UTC <byorgey> animated and interactive are two very different things =)
2011-05-26 15:43:02 UTC <byorgey> in theory, making animations should work very nicely: in place of diagrams over some vector space v we look at diagrams over  time -> v  (which also form a vector space).
2011-05-26 15:43:27 UTC <byorgey> however there are a lot of interesting practical details to be worked out.  at some point I need to sit down and think through it carefull again.
2011-05-26 15:43:42 UTC <tg_> byorgey: have you surveyed the field?
2011-05-26 15:43:53 UTC <tg_> byorgey: I mention: protovis, prototype(.js), raphael
2011-05-26 15:44:02 UTC <tg_> et al
2011-05-26 15:44:23 UTC <byorgey> yes, thanks for the reminder, I should look into those.
2011-05-26 15:44:26 UTC <tg_> protovis, to me, is the closest to being haskell-friendly because it's (1) declarative, and has (2) discrete time functions
2011-05-26 15:44:36 UTC <tg_> it's also exceedingly small
2011-05-26 15:44:43 UTC <tg_> (800 KB)
2011-05-26 15:44:52 UTC <tg_> prototype.js is very big, very slow
2011-05-26 15:45:01 UTC <tg_> raphael is *tiny* (55 KB)
2011-05-26 15:45:41 UTC <hpc> those are javascript libraries?
2011-05-26 15:46:13 UTC <tg_> yep
2011-05-26 15:46:22 UTC <byorgey> I really don't understand what the protovis people mean when they say it is "declarative"
2011-05-26 15:46:33 UTC <tg_> byorgey: you can't write loops in it
2011-05-26 15:46:39 UTC <byorgey> looking at the code examples it looks quite imperative to me.
2011-05-26 15:46:50 UTC <byorgey> northbound.forEach(function(stop) stop.bound = "N");
2011-05-26 15:46:53 UTC <byorgey> what do you call that?
2011-05-26 15:47:00 UTC <tg_> an iterator
2011-05-26 15:47:20 UTC <byorgey> what's the difference?  it's looping over a list of things and mutating them.
2011-05-26 15:47:28 UTC <tg_> you can't (or shouldn/'t?) write a *drawing* loop
2011-05-26 15:47:37 UTC <tg_> which is one step back (toward) your correct abstraction
2011-05-26 15:47:45 UTC <tg_> of describing what it should be, not how to draw it
2011-05-26 15:47:48 UTC <byorgey> ok, fair enough.
2011-05-26 15:48:01 UTC <tg_> whereas prototype explicity requires drawing loops
2011-05-26 15:49:25 UTC <tg_> byorgey: I was (ignorantly) considering trying to connect protovis as a backend to diagrams as a stopgap
2011-05-26 15:49:57 UTC <tg_> a key thing with my work (in haskell, and in general) is that I *always* want animated (& sometimes interactive) diagrams
2011-05-26 15:50:12 UTC <byorgey> yes, the interactivity yk (toward) your correct abstraction
2011-05-26 15:50:22 UTC <byorgey> er, sorry,
2011-05-26 15:50:41 UTC <byorgey> the interactivity you get with protovis et al is extremely nice
2011-05-26 15:51:05 UTC <tg_> byorgey: yes, some processing examples *really* shine
2011-05-26 15:51:09 UTC <tg_> and the raphael ones are nice enough
2011-05-26 15:51:27 UTC <tg_> byorgey: there's also ExtJS, which is made by the Sencha people (who pay the salary of the person who wrote raphael)
2011-05-26 15:51:27 UTC <byorgey> I think this sort of thing will eventually be possible with diagrams.
2011-05-26 15:51:36 UTC <tg_> I hope so, I hope I can have a hand in it
2011-05-26 15:52:00 UTC <tg_> but I have been clamoring for what I'm terming a "visual" or "visceral" isomorphism between haskell code and diagrams
2011-05-26 15:52:07 UTC <byorgey> however it's important to note that data visualization was not one of the primary drivers behind the design
2011-05-26 15:52:29 UTC <tg_> which is to say, I want something like a: deriving (Show2D)
2011-05-26 15:52:44 UTC <tg_> and/or even visual representations of type declerations, classes, signatures
2011-05-26 15:52:57 UTC <hpc> hmm, text seems to have forced me to redo my output code
2011-05-26 15:53:17 UTC <tg_> byorgey: one area that I think you might take particular inspiration
2011-05-26 15:53:21 UTC <hpc> i can't express text as an element with my current code, because it is "shaped" like a block
2011-05-26 15:53:29 UTC <tg_> byorgey: is the handling of textual information in protovis
2011-05-26 15:53:38 UTC <byorgey> tg_: ok, I'll take a look at it
2011-05-26 15:53:39 UTC <tg_> byorgey: where they are integrated using "anchors"
2011-05-26 15:53:53 UTC <byorgey> tg_: thanks for the tip
2011-05-26 15:54:04 UTC <hpc> ill work on this tomorrow, perhaps
2011-05-26 15:54:13 UTC <tg_> byorgey: I know I've heard a few people complain about the lack of annotation in Diagrams
2011-05-26 15:54:19 UTC <tg_> byorgey: not that they have a right to :O
2011-05-26 15:54:29 UTC <tg_> byorgey: http://vis.stanford.edu/protovis/docs/anchor.html
2011-05-26 15:55:45 UTC <byorgey> tg_: the lack of annotation? you mean text?
2011-05-26 15:56:00 UTC <tg_> byorgey: yes
2011-05-26 15:56:37 UTC <tg_> byorgey: it may be reasonable to think of "lifting" the TwoD space into a strictly augmented ThreeD space, where the third D only contains "anchors" (points) which serve as reference for text
2011-05-26 15:57:06 UTC <tg_> so the ThreeD space isn't really ThreeD, it's TwoD ++ text only
2011-05-26 15:57:25 UTC <byorgey> tg_: that doesn't really make sense to me
2011-05-26 15:57:27 UTC <tg_> where I use "lift" not in the monad sense, I think
2011-05-26 15:57:33 UTC <byorgey> tg_: anyway, diagrams has something like anchors already
2011-05-26 15:57:39 UTC <byorgey> now that I know what they are
2011-05-26 15:58:15 UTC <byorgey> you can always find out where the "boundary" of a diagram is in any direction
2011-05-26 15:58:26 UTC <byorgey> and it also supports having named points that you can refer to later
2011-05-26 15:58:38 UTC <tg_> byorgey: btw, even though I haven't exhaustively read it, the documentation in Diagrams is first class, so cheers for that
2011-05-26 15:58:42 UTC <byorgey> although the API for using this capability is not very well-developed yet
2011-05-26 15:58:49 UTC <byorgey> tg_: thanks =)
2011-05-26 15:58:56 UTC <byorgey> I care a lot about documentation.
2011-05-26 15:59:01 UTC <tg_> byorgey: i get *very* angry at packages without documentation in haskell
2011-05-26 15:59:04 UTC <tg_> it's just asking for trouble
2011-05-26 15:59:06 UTC <byorgey> me too.
2011-05-26 15:59:23 UTC <tg_> and you're essentially dooming your users to perpetual ignorance unless they write the code themselves
2011-05-26 16:00:00 UTC <tg_> I've begun to think that there is no other language in which it's more important to *understand* the tools (modules) you're working with than in haskell.
2011-05-26 16:00:11 UTC <tg_> In many other languages, you are encouraged to get by wtih using the tools without fully understanding them
2011-05-26 16:00:21 UTC <tg_> I think that's always a mistake in haskell, and I think conal would agree :)
2011-05-26 16:00:56 UTC <byorgey> =)
2011-05-26 16:00:58 UTC <tg_> it reminds me of the very wise words of Richard Feynman: "What I cannot create, I do not understand."
2011-05-26 16:02:16 UTC <tg_> that was the phrase at the top of his blackboard in his office, when he died
2011-05-26 16:02:24 UTC <tg_> in fact, it was probably there for at least several years before that
2011-05-26 16:03:44 UTC <tg_> anyway, to work!
2011-05-26 17:53:14 UTC <ClaudiusMaximus> i want to align my diagrams in a regular grid - what's the best way?
2011-05-26 17:54:36 UTC <byorgey> ClaudiusMaximus: probably the easiest is to use some combination of phantom and/or withBounds to make their bounding regions square, then compose them with hcat and vcat
2011-05-26 17:55:44 UTC <byorgey> ClaudiusMaximus: longer term, I'd like to have a 'grid' combinator in Diagrams.TwoD.Combinators, so if you come up with something nice we could incorporate your code
2011-05-26 17:56:32 UTC <hpc> i think you could do it as two folds
2011-05-26 17:57:02 UTC <hpc> fold the inner lists with (|||) and mempty (because those things are monoids, yes?)
2011-05-26 17:57:14 UTC <hpc> then fold the resulting list with (===)
2011-05-26 17:57:29 UTC <ClaudiusMaximus> i already used   vcat . map hcat  or similar
2011-05-26 17:57:35 UTC <hpc> or that
2011-05-26 17:57:59 UTC <ClaudiusMaximus> i think i'd want to get the extents of the largest diagram in the grid first, then expand it a bit for separation purposes, then withBounds . centerXY or something along those lines
2011-05-26 17:59:31 UTC <byorgey> hpc: vcat and hcat are essentially synonyms for folds with (===) and (|||)
2011-05-26 17:59:54 UTC <hpc> yeah, i figured
2011-05-26 18:00:23 UTC <byorgey> ClaudiusMaximus: yes, that sounds good
2011-05-26 18:01:14 UTC <byorgey> ClaudiusMaximus: withBounds (rect maxX maxY) . centerXY
2011-05-26 18:01:34 UTC <byorgey> where (rect x y) = square # scaleX x # scaleY y  -- this ought to be added to the std lib...
2011-05-26 18:08:10 UTC <ClaudiusMaximus> wow, got something working :)
2011-05-26 18:10:15 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/tilings/ammann-a3-grid.png http://hpaste.org/47097/diagram_grid
2011-05-26 18:12:38 UTC <byorgey> sweet!!
2011-05-26 18:13:59 UTC <byorgey> ClaudiusMaximus: by the way, taking the mconcat of all the bounds like that is probably less efficient than finding the maximum width/height and doing withBounds with a rectangle
2011-05-26 18:14:20 UTC <byorgey> although it is a bit more general if you wanted to put things in some arrangement other than a square grid
2011-05-26 18:14:29 UTC <luite> ClaudiusMaximus: nice
2011-05-26 18:14:38 UTC <luite> infinite tangram puzzles
2011-05-26 18:15:53 UTC <ClaudiusMaximus> :)
2011-05-26 18:15:54 UTC <luite> ClaudiusMaximus: can your program find all ways to tile the pieces?
2011-05-26 18:16:35 UTC <ClaudiusMaximus> it's deterministic, based on substitution rules (the top row are the seed prototiles, and the row below is after the first substitution
2011-05-26 18:16:53 UTC <byorgey> ClaudiusMaximus: and it's aperiodic, right?
2011-05-26 18:17:28 UTC <ClaudiusMaximus> i think this one is, http://tilings.math.uni-bielefeld.de/substitution_rules/ammann_a3
2011-05-26 18:18:36 UTC <byorgey> awesome
2011-05-26 18:18:55 UTC <byorgey> just out of curiosity, how long is the code to generate those?
2011-05-26 18:19:18 UTC <ClaudiusMaximus> is there a nice way to check if bounds intersect?  doesn't have to be perfectly accurate, but knowing if something is outside the viewport could save time subdividing that further...
2011-05-26 18:19:36 UTC <ClaudiusMaximus> i guess i can convert to rectangles and compare them
2011-05-26 18:20:20 UTC <byorgey> hmm, an intersection test for bounds is a nice idea
2011-05-26 18:20:39 UTC <byorgey> I will add it, although there's nothing to do it nicely at the moment
2011-05-26 18:20:50 UTC <ClaudiusMaximus> i saw there was an (eventually) for testing if paths intersect
2011-05-26 18:21:19 UTC <byorgey> yes, that would be much more accurate for path-based things
2011-05-26 18:21:29 UTC <byorgey> testing the bounds will always be an overapproximation
2011-05-26 18:21:44 UTC <byorgey> but testing paths for intersection is much more difficult
2011-05-26 18:22:07 UTC <luite> is there a non-approximate way to test intersection of bezier curves?
2011-05-26 18:22:13 UTC <hpc> yes
2011-05-26 18:22:41 UTC <hpc> not sure if there's an exact way that always terminates
2011-05-26 18:22:53 UTC <hpc> :P
2011-05-26 18:24:05 UTC <luite> termination might be useful in some code ;)
2011-05-26 18:25:18 UTC <hpc> http://www.truetex.com/bezint.htm
2011-05-26 18:25:26 UTC <hpc> ^ finding the intersections themselves
2011-05-26 18:26:21 UTC <hpc> ...which doesn't give an algorithm
2011-05-26 18:26:44 UTC <byorgey> "I am not going to reveal that unpublished algorithm here..."  =P
2011-05-26 18:28:22 UTC <luite> there's De Casteljau's algorithm on wikipedia
2011-05-26 18:28:34 UTC <luite> which recursively splits the curves
2011-05-26 18:29:20 UTC <luite> and then you can use bounding boxes for the halves or something like that
2011-05-26 18:30:20 UTC <hpc> and then you know the lines intersect when...?
2011-05-26 18:30:39 UTC <hpc> well, you know they don't intersect if you can get the bounding boxes to span the whole curve and not touch
2011-05-26 18:31:29 UTC <byorgey> I know de Casteljau but I've never heard of it being used to test intersection of two Bezier curves... then again, there's quite a lot I don't know =)
2011-05-26 18:32:14 UTC <luite> byorgey: oh I just found that on stackoverflow, apparently that's the method asymptote uses
2011-05-26 18:32:32 UTC <byorgey> oh, interesting! link?
2011-05-26 18:33:13 UTC <luite> http://stackoverflow.com/questions/4039229/checking-if-two-cubic-bezier-curves-intersect
2011-05-26 18:33:34 UTC <luite> but that algorithm doesn't really check intersection, step 2
2011-05-26 18:33:41 UTC <luite> I have the feeling that it must be possible to do better
2011-05-26 18:35:53 UTC <hpc> that top answer is awesome
2011-05-26 18:38:11 UTC <luite> if you can somehow make a bounding box of parts of the two curves, and the intersection points of the curves with the box alternate when you walk around the box clockwise, then they must intersect
2011-05-26 18:39:18 UTC <hpc> not even that!
2011-05-26 18:39:30 UTC <hpc> or rather, you can get more general
2011-05-26 18:39:49 UTC <luite> probably, show me :)
2011-05-26 18:39:58 UTC <hpc> crap, i need pictures
2011-05-26 18:39:59 UTC <hpc> sec
2011-05-26 18:41:13 UTC <hpc> so
2011-05-26 18:41:14 UTC <hpc> http://dl.dropbox.com/u/37707/1.png
2011-05-26 18:41:32 UTC <hpc> suppose you have a blue curve and a red curve, as pictured
2011-05-26 18:42:15 UTC <luite> haha
2011-05-26 18:42:27 UTC <luite> what order are those? ;)
2011-05-26 18:42:43 UTC <hpc> who cares, so long as they hit their respective corners
2011-05-26 18:42:44 UTC <hpc> anyhoo
2011-05-26 18:42:49 UTC <hpc> http://dl.dropbox.com/u/37707/2.png
2011-05-26 18:42:55 UTC <hpc> the bounding boxes intersect like that
2011-05-26 18:43:00 UTC <luite> but you're right, if you just take the union of the bounding boxes
2011-05-26 18:43:16 UTC <luite> of any compact region :p
2011-05-26 18:44:09 UTC <hpc> yes, but not what i meant to say, and god i suck at explaining things
2011-05-26 18:44:15 UTC <luite> oh
2011-05-26 18:44:18 UTC <hpc> lol
2011-05-26 18:44:21 UTC <luite> well at least you have nice pictures
2011-05-26 18:44:34 UTC <hpc> lemme try again...
2011-05-26 18:45:04 UTC <luite> ooh
2011-05-26 18:45:08 UTC <luite> I think I see what you mean
2011-05-26 18:45:34 UTC <luite> oh no I don't
2011-05-26 18:45:36 UTC <luite> I was wrong
2011-05-26 18:45:39 UTC <luite> :p
2011-05-26 18:45:57 UTC <hpc> http://dl.dropbox.com/u/37707/1.png
2011-05-26 18:46:00 UTC <hpc> THERE we go
2011-05-26 18:46:09 UTC <luite> yes
2011-05-26 18:46:25 UTC <luite> so I was right after all ;p
2011-05-26 18:46:28 UTC <luite> :D
2011-05-26 18:46:45 UTC <luite> that's what I thought you meant
2011-05-26 18:46:49 UTC <byorgey> we need to have a diabot
2011-05-26 18:46:52 UTC <hpc> yeah, you can take advantage of the fact that there exists a point on the bezier curve for all x
2011-05-26 18:46:57 UTC <hpc> and blahblah for all y
2011-05-26 18:47:10 UTC <byorgey> you type diagrams code in the IRC channel and it posts the output to some image hosting site somewhere
2011-05-26 18:47:15 UTC <hpc> so if you can construct a pair of BB like that, you can say there MUST be an intersection
2011-05-26 18:47:16 UTC <luite> hpc: yeah but that only works if the bounding boxes have some guaranteed approximation accuracy
2011-05-26 18:47:50 UTC <hpc> ah right, good point
2011-05-26 18:48:10 UTC <hpc> and you can't compare two arbitrary precision numbers for > or <
2011-05-26 18:48:18 UTC <hpc> not in guaranteed finite time
2011-05-26 18:49:14 UTC <luite> but you could just run the check for finite time, if it doesn't return, you recurse with smaller boxes
2011-05-26 18:49:28 UTC <hpc> or translated boxes
2011-05-26 18:49:42 UTC <hpc> just pick different points until they are different enough
2011-05-26 18:50:02 UTC <luite> it doesn't seem terribly practical to build an algorithm out of this though
2011-05-26 18:50:12 UTC <hpc> not really
2011-05-26 18:50:38 UTC <hpc> i like your idea better
2011-05-26 18:50:59 UTC <hpc> build a BB out of points from the curves, and check what order the points go in
2011-05-26 18:51:07 UTC <luite> we could reddit both and see who gets the most upvotes ;)
2011-05-26 18:51:21 UTC <hpc> ACTION doesn't reddit
2011-05-26 18:51:55 UTC <hpc> wait, problem
2011-05-26 18:52:29 UTC <hpc> http://dl.dropbox.com/u/37707/Untitled.png
2011-05-26 18:52:40 UTC <hpc> that bounding box meets the condition, but the curves don't intersect
2011-05-26 18:52:46 UTC <luite> not exactly a bounding box right?
2011-05-26 18:52:49 UTC <hpc> er
2011-05-26 18:52:52 UTC <hpc> oh, derp
2011-05-26 18:54:42 UTC <hpc> this is so strange
2011-05-26 18:54:57 UTC <hpc> i just finished math 446, which covers bezier curves
2011-05-26 18:55:02 UTC <hpc> and now they are everywhere
2011-05-26 18:55:53 UTC <byorgey> haha, that always happens to me too
2011-05-26 18:56:07 UTC <hpc> i think i see what this algorithm would be now, i think
2011-05-26 18:56:38 UTC <hpc> subdivide each bezier curve so the axis-aligned bounding box at all points intersects the curve at opposite corners
2011-05-26 18:56:49 UTC <hpc> (aka, split where slope is 0 or infinity)
2011-05-26 18:58:10 UTC <hpc> then do your thing, recursively shrinking the bounding boxes until they either don't intersect, or until there exists a bounding box that the two curves have in common
2011-05-26 18:59:09 UTC <luite> bah I've never had bezier math :(
2011-05-26 18:59:51 UTC <hpc> it's a hard class
2011-05-26 19:45:01 UTC <luite> who's going to come to CamHac? :)
2011-05-26 19:46:00 UTC <alpounet> wish i could
2011-05-26 19:46:03 UTC <alpounet> :/
2011-05-26 19:46:38 UTC <luite> at least it's closer than HacPhi
2011-05-26 19:46:51 UTC <luite> for me :p
2011-05-26 19:48:08 UTC <byorgey> luite: I wish I could come to CamHac too, but had already planned to go on vacation with my family during that time
2011-05-26 19:48:32 UTC <luite> aw :(
2011-05-26 19:48:50 UTC <luite> don't they enjoy haskell hacking? ;)
2011-05-26 19:48:51 UTC <byorgey> also my wife might not want me traveling across the ocean when she is eight months pregnant ;)
2011-05-26 19:49:16 UTC <byorgey> luite: my brother-in-law does, but not really any of the rest of them =)
2011-05-26 19:49:19 UTC <luite> oh cool. first child?
2011-05-26 19:49:22 UTC <byorgey> yes =D
2011-05-26 19:49:47 UTC <luite> for some reason that reminds me of the DOM manipulation API
2011-05-26 19:50:02 UTC <byorgey> ...?
2011-05-26 19:50:05 UTC <byorgey> which part?
2011-05-26 19:50:32 UTC <luite> node.firstChild
2011-05-26 19:50:35 UTC <luite> .nextSibling :p
2011-05-26 19:51:43 UTC <byorgey> hehe
2011-05-26 19:52:45 UTC <byorgey> hmm, should I have commit messages sent to the diagrams-discuss mailing list?  Or maybe I should make a separate diagrams-devel list for that sort of thing?
2011-05-26 19:54:28 UTC <alpounet> wait what
2011-05-26 19:54:33 UTC <alpounet> congrats byorgey!
2011-05-26 19:54:45 UTC <byorgey> thanks alpounet =)
2011-05-26 19:55:05 UTC <alpounet> i guess you're gonna be the 'cool' kind of father
2011-05-26 19:55:12 UTC <alpounet> heh
2011-05-26 19:55:34 UTC <byorgey> hehe, thanks
2011-05-26 19:55:57 UTC <alpounet> soooo
2011-05-26 19:56:03 UTC <alpounet> once i'll be done with my undergrad thesis
2011-05-26 19:56:08 UTC <alpounet> i'll play with diagrams more seriously
2011-05-26 19:56:27 UTC <alpounet> what's up since the pre-release ?
2011-05-26 19:58:09 UTC <byorgey> alpounet: we have a nice-ish website now with a gallery of examples, hpc is working on an SVG package that could form the basis of a native SVG backend, I've added various bits of functionality here and there...
2011-05-26 19:58:32 UTC <byorgey> and several people have already done some cool things with it
2011-05-26 20:00:00 UTC <alpounet> cool
2011-05-26 20:09:13 UTC <byorgey> alpounet: what's your thesis about?
2011-05-26 20:10:40 UTC <alpounet> a link between continued fractions and hyperbolic geometry
2011-05-26 20:10:52 UTC <byorgey> ooh, very cool
2011-05-26 20:11:13 UTC <byorgey> I studied a bit about both those subjects in undergrad
2011-05-26 20:11:30 UTC <byorgey> although I don't remember if I learned about any links between the two
2011-05-26 20:12:04 UTC <alpounet> well
2011-05-26 20:13:30 UTC <alpounet> to sum up, both ends of some geodesics related to isometries of the upper-half hyperbolic plane have specific continued fraction developments
2011-05-26 20:14:17 UTC <byorgey> ok, that makes sense on a high level
2011-05-26 20:14:58 UTC <byorgey> you'll have to send me a copy of your thesis once you're done =)
2011-05-26 20:15:32 UTC <alpounet> sure
2011-05-26 20:15:36 UTC <alpounet> as long as you read French :]
2011-05-26 20:16:21 UTC <byorgey> oh, haha, I don't, sadly
2011-05-26 20:16:43 UTC <byorgey> if you have pretty pictures I could just look at those ;)
2011-05-26 20:16:47 UTC <luite> hmm, how difficult is the french?
2011-05-26 20:17:33 UTC <luite> lots of difficult arguments, or is it easy to follow from the equations?
2011-05-26 20:17:50 UTC <alpounet> well
2011-05-26 20:17:52 UTC <alpounet> for now
2011-05-26 20:17:56 UTC <alpounet> nothing really complicated
2011-05-26 20:18:04 UTC <alpounet> i'm writing about infinite continued fractions right now
2011-05-26 20:18:19 UTC <luite> hmm, probably still too complicated for me :)
2011-05-26 20:18:30 UTC <alpounet> thus i don't know yet how easy it'll be to guess what i'm telling about hyperbolic geometry :P
2011-05-26 20:20:38 UTC <luite> are french math terms often similar to the english ones?
2011-05-26 20:21:14 UTC <alpounet> yeah, a lot of similarities
2011-05-26 20:24:21 UTC <luite> hmm, at least I can understand most of the french wikipedia article about continued fractions, but that's fairly basic material of course :)
2011-05-26 20:26:21 UTC <alpounet> well, continued fractions are quite simple anyway
2011-05-26 20:41:59 UTC <tg_> alpounet: what kind of hyperbolic geometry are you working with>?
2011-05-26 20:42:50 UTC <alpounet> PoincarÃ©'s upper half plane
2011-05-26 20:43:08 UTC <tg_> H3 hyperbolid model?
2011-05-26 20:43:14 UTC <alpounet> studying the action of PSL(2,Z) on the fundamental domain of PoincarÃ©'s upper half plane
2011-05-26 20:43:20 UTC <alpounet> (among other things)
2011-05-26 20:43:28 UTC <tg_> you working with a fractal?
2011-05-26 20:43:29 UTC <tg_> or?
2011-05-26 20:43:32 UTC <alpounet> nope :P
2011-05-26 20:43:38 UTC <alpounet> seems like you're a lot into fractals
2011-05-26 20:44:03 UTC <tg_> well a lot of interesting congruences in PSL2,Z are fractal
2011-05-26 20:44:23 UTC <tg_> someone recently proved a general statement about zariski density in that space
2011-05-26 20:44:43 UTC <tg_> can't think of his name
2011-05-26 20:46:59 UTC <tg_> http://imrn.oxfordjournals.org/content/2010/19/3649.abstract
2011-05-26 20:48:06 UTC <alpounet> don't have the level to understand this yet :P
2011-05-26 21:16:41 UTC <byorgey> haha, I went to find the function to look up a named point in a diagram, and I couldn't find it
2011-05-26 21:16:49 UTC <byorgey> I was pretty sure I had added one...
2011-05-26 21:17:08 UTC <byorgey> then I found withName :: HasLinearMap v => Name -> (Point v -> AnnDiagram b v m -> AnnDiagram b v m) -> AnnDiagram b v m -> AnnDiagram b v m
2011-05-26 21:17:40 UTC <byorgey> I don't remember adding it but it's pretty cool =D
2011-05-26 21:18:14 UTC <byorgey> and way better than the function I thought I had added
2011-05-26 21:22:02 UTC <byorgey> check it out: http://hpaste.org/47104/referring_to_named_points_in_a  http://www.cis.upenn.edu/~byorgey/Connect.png
2011-05-26 22:05:23 UTC <tg_> luite: any progress to report, good sir?
2011-05-26 22:10:13 UTC <luite> tg_: not much to see since I still need to redo security before I online it again
2011-05-26 22:13:12 UTC <luite> tg_: but the basic customization of gitit is almost done (that is, you can import a page for example /wiki/Diagrams/Tutorial as Wolfgang.Diagrams.Tutorial in other pages, you can upload png images etc, /wiki/Spj.png would be available as spj in Wolfgang.Spj, ByteString, every user has a home dir /Users/Username where only that user and admins can create and edit pages
2011-05-26 22:13:31 UTC <luite> a public dir /Scratch where everyone can create pages without logging in, and the rest are regular dirs
2011-05-26 22:15:32 UTC <luite> but I'm a bit unhappy that .lhs doesn't work nicely together with markdown
2011-05-26 22:16:12 UTC <tg_> luite: i thought that was the whole damn point of the markdown work in gitit?
2011-05-26 22:16:35 UTC <luite> well, markdown syntax just clashes with .lhs
2011-05-26 22:16:57 UTC <luite> you can't start a line in a .lhs with ## for example, while that's used for headings in markdown
2011-05-26 22:17:14 UTC <luite> and blockquotes with > obviously aren't going to work
2011-05-26 22:19:44 UTC <luite> if all goes well, I only to patch a few lines of gitit source
2011-05-26 22:20:01 UTC <luite> for the modifications mentioned above
2011-05-26 22:20:07 UTC <tg_> what about <code> html tags?
2011-05-26 22:20:12 UTC <tg_> and no >
2011-05-26 22:20:28 UTC <tg_> i'm sure you've thought of everything
2011-05-26 22:20:39 UTC <luite> hehe not at all :p
2011-05-26 22:20:51 UTC <tg_> luite: well, I'm sure you've thought of all of the simple solutions
2011-05-26 22:21:27 UTC <tg_> I read somewhere that when using .lhs syntax, you need spaces before and after birdbeaks ">" anyway
2011-05-26 22:21:45 UTC <luite> only after I think
2011-05-26 22:22:08 UTC <tg_> "In Bird-style you have to leave a blank before the code."
2011-05-26 22:22:11 UTC <tg_> at
2011-05-26 22:22:21 UTC <luite> yeah that's after the > :)
2011-05-26 22:22:35 UTC <tg_> And you have to leave a blank line after the code as well.
2011-05-26 22:22:40 UTC <luite> yes I know
2011-05-26 22:22:46 UTC <tg_> isn't that "before and after"?
2011-05-26 22:22:53 UTC <tg_> i am quoting from
2011-05-26 22:22:55 UTC <luite> oh I use before and after
2011-05-26 22:22:57 UTC <tg_> http://www.haskell.org/haskellwiki/Literate_programming
2011-05-26 22:24:14 UTC <luite> anyway I can work around the ### issue by preprocessing the files, don't know about the blockquote thing though, you can also make a blockquote in markdown by indenting 4 spaces
2011-05-26 22:24:26 UTC <tg_> :/
2011-05-26 22:24:39 UTC <tg_> i always get weary of things like that, even though I want to impose similar kinds of things on my own code standsards
2011-05-26 22:24:42 UTC <luite> yes, especially for multiple levels of quoting
2011-05-26 22:24:44 UTC <tg_> s/standsards/standards/
2011-05-26 22:24:56 UTC <luite> I really want to support full markdown in the text cells
2011-05-26 22:25:06 UTC <tg_> I don't see what the big fuss about markdown is, though
2011-05-26 22:25:29 UTC <luite> what else? it's simpler than the alternatives
2011-05-26 22:25:54 UTC <tg_> it is, but strictly in the you're-already-using-ascii sense
2011-05-26 22:26:06 UTC <tg_> is pandoc fast? any idea?
2011-05-26 22:26:27 UTC <luite> dunno fast enough for saving pages probably :)
2011-05-26 22:27:12 UTC <tg_> i may drop out here... tornados and thunderstorms galore around here
2011-05-26 22:27:32 UTC <tg_> wish me well! :o
2011-05-26 22:29:00 UTC <tg_> gonna go ahead nd shutdown
2011-05-27 01:11:50 UTC <hpc> hpc's CMS template postulate: unambiguous, easy to use, powerful: pick any two
2011-05-27 01:13:04 UTC <byorgey> heh, that makes a lot of sense
2011-05-27 01:13:17 UTC <byorgey> with diagrams I have tried to go with "easy to use" and "powerful"
2011-05-27 01:13:30 UTC <byorgey> and I am literally struggling with "ambiguous type" errors =P
2011-05-27 01:13:40 UTC <hpc> i think i hit unambiguous + easy
2011-05-27 01:13:55 UTC <hpc> you can always make things more powerful after the fact
2011-05-27 01:14:21 UTC <byorgey> I don't think that's true
2011-05-27 01:14:22 UTC <hpc> but it's very hard to recover from ambiguity, or superfluous complexity
2011-05-27 01:14:38 UTC <hpc> well, you can do it more easily
2011-05-27 01:15:04 UTC <byorgey> "making things more powerful after the fact" usually leads to horrible complex design with stuff bolted on all over the place
2011-05-27 01:15:40 UTC <hpc> it's still easier to do, in small amounts
2011-05-27 01:15:42 UTC <tg_> ACTION casts a one-third valued vote for byorgey in this disagreement
2011-05-27 01:16:15 UTC <hpc> to recover from ambiguity is very hard, even for minor things
2011-05-27 01:16:30 UTC <tg_> hm. the source code for lambdabot has an embarrasingly frequent number of references to blowjobs
2011-05-27 01:16:43 UTC <byorgey> what
2011-05-27 01:16:43 UTC <hpc> :D
2011-05-27 01:16:53 UTC <tg_> https://github.com/seliopou/lambdabot/blob/master/State/vixen
2011-05-27 01:17:08 UTC <hpc> oh god the line endings
2011-05-27 01:17:15 UTC <tg_> yeah i don't know what's up with that
2011-05-27 01:18:29 UTC <tg_> i also don't understand why the contents of "quote" are so messed up
2011-05-27 01:20:16 UTC <tg_> byorgey: yeah, but as I said, embarassingly many
2011-05-27 01:22:19 UTC <luite> ah you survived the storm, good :)
2011-05-27 01:22:30 UTC <tg_> luite: indeed, though several people did not :(
2011-05-27 01:22:37 UTC <luite> :(
2011-05-27 01:22:42 UTC <tg_> at least 4 more dead today in my state
2011-05-27 01:22:42 UTC <hpc> :(
2011-05-27 01:22:53 UTC <tg_> these strings of tornados have been brutal
2011-05-27 01:23:10 UTC <tg_> and many of them are all-time record holders - 200+ mph winds (for several of them)
2011-05-27 01:23:17 UTC <tg_> some of them have been more than 2 miles in diameter
2011-05-27 01:23:24 UTC <hpc> 2 MILES?
2011-05-27 01:23:26 UTC <tg_> yeah
2011-05-27 01:23:28 UTC <tg_> i know
2011-05-27 01:23:33 UTC <tg_> it sounds wrong, but it's not
2011-05-27 01:23:34 UTC <hpc> how the fuck wide can a tornado get?
2011-05-27 01:23:40 UTC <tg_> that's about it, as far as we know
2011-05-27 01:23:46 UTC <hpc> wow
2011-05-27 01:23:50 UTC <hpc> class over, bbl
2011-05-27 13:26:56 UTC <manju_> .
2011-05-27 13:27:11 UTC <luite> byorgey: http://hpaste.org/47137/type_error
2011-05-27 13:27:19 UTC <byorgey> cabal install GLUT is doing its magic...
2011-05-27 13:27:40 UTC <manju_> byorgey, yes...that would work too
2011-05-27 13:28:28 UTC <byorgey> luite: ah, yes, I added some stuff to the cairo backend for manju_
2011-05-27 13:28:41 UTC <byorgey> so I think you have to use the darcs version
2011-05-27 13:28:45 UTC <luite> oh ok
2011-05-27 13:29:53 UTC <byorgey> compile compile compile
2011-05-27 13:30:10 UTC <luite> oh that means that I also need the darcs from -core and -lib
2011-05-27 13:30:14 UTC <byorgey> yeah
2011-05-27 13:31:15 UTC <luite> keeps my cpu busy :)
2011-05-27 13:31:33 UTC <luite> whoah
2011-05-27 13:31:34 UTC <luite> err
2011-05-27 13:31:38 UTC <byorgey> ?
2011-05-27 13:31:40 UTC <luite> that looks like a snowflake
2011-05-27 13:31:43 UTC <luite> not a sierpinski
2011-05-27 13:31:43 UTC <manju_> my first opengl program in years
2011-05-27 13:31:53 UTC <manju_> luite, I changed it from 5 to 6 :-)
2011-05-27 13:32:05 UTC <manju_> pentaflake' is actuall hxaflake'
2011-05-27 13:32:10 UTC <manju_> hexaflake'
2011-05-27 13:32:13 UTC <manju_> heh
2011-05-27 13:32:17 UTC <byorgey> manju_: haha, awesome!
2011-05-27 13:32:21 UTC <luite> but it works, very nice :)
2011-05-27 13:32:27 UTC <luite> (on windows even)
2011-05-27 13:32:28 UTC <byorgey> I just got it to run too
2011-05-27 13:32:32 UTC <manju_> was trying to show my wife that programming was :-)
2011-05-27 13:32:39 UTC <manju_> s/that/what
2011-05-27 13:32:40 UTC <luite> the frame rate is low, is that due to diagrams, or do you limit it?
2011-05-27 13:33:05 UTC <manju_> luite, I am not limiting it
2011-05-27 13:33:22 UTC <luite> oh I'd estimate it only runs at 10fps here
2011-05-27 13:33:38 UTC <byorgey> I'm not surprised, diagrams isn't really designed for doing real-time animations
2011-05-27 13:33:52 UTC <byorgey> although there is almost certainly a lot of room for optimization.
2011-05-27 13:34:17 UTC <luite> lots of specialize and inline pragma's ;)
2011-05-27 13:34:28 UTC <byorgey> hehe
2011-05-27 13:35:08 UTC <manju_> 30 fps ought to be enough for anyone :-)
2011-05-27 13:35:55 UTC <luite> does it run faster on your system?
2011-05-27 13:36:50 UTC <manju_> luite, I don't know the FPS, mine is a ATI 5870, but it still seems kinda jerky
2011-05-27 13:37:09 UTC <luite> yeah my card is old, ati x1900
2011-05-27 13:37:11 UTC <manju_> luite, it maybe due to me changing the angle by a huge amount (1/6) * 360
2011-05-27 13:37:17 UTC <luite> oh right
2011-05-27 13:37:46 UTC <luite> but it still uses 100% cpu on a single core
2011-05-27 13:37:48 UTC <byorgey> mine runs at about 2 fps
2011-05-27 13:37:49 UTC <manju_> luite, maybe if I modified it to move a lesser angle it might probably look better
2011-05-27 13:37:56 UTC <manju_> byorgey, heh
2011-05-27 13:38:13 UTC <luite> hehe how do you time that?
2011-05-27 13:38:14 UTC <manju_> wow
2011-05-27 13:38:28 UTC <byorgey> uh, I just counted =)
2011-05-27 13:38:34 UTC <luite> hehe
2011-05-27 13:38:42 UTC <luite> ok, it runs slightly too fast for that here
2011-05-27 13:39:04 UTC <manju_> yeah, mine is not slow enough to count manually
2011-05-27 13:39:24 UTC <luite> put I guess it's just cpu limited
2011-05-27 13:39:46 UTC <luite> any old gfx card should be able to render a few triangles with a single texture faster than this
2011-05-27 13:40:22 UTC <byorgey> manju_: so is diagrams actually rendering the pentaflake for each frame?
2011-05-27 13:40:29 UTC <manju_> byorgey, yes
2011-05-27 13:40:56 UTC <manju_> luite, surely, gears runs at like 20000+ fps on my box, this is definitely slow
2011-05-27 13:41:22 UTC <byorgey> it would be a lot faster to generate the pentaflake once, then set up a 3d object with this as a texture and rotate the object
2011-05-27 13:41:31 UTC <manju_> rather that should 2000 not 20000
2011-05-27 13:41:34 UTC <manju_> 2223.800 FPS
2011-05-27 13:41:54 UTC <manju_> byorgey, but my target was to do some sort of traffic simulator
2011-05-27 13:42:20 UTC <manju_> byorgey, I can't do this for that
2011-05-27 13:42:58 UTC <luite> hmm, there was some traffic simulator demo in one of the hackage packages
2011-05-27 13:43:08 UTC <luite> don't remember which one
2011-05-27 13:43:14 UTC <luite> or if it even was hackage :)
2011-05-27 13:43:36 UTC <manju_> luite, traffic as in real vehicle traffic
2011-05-27 13:43:52 UTC <manju_> luite, not network packet traffic
2011-05-27 13:43:53 UTC <luite> yeah that one was just a toy example to demonstrate a gui
2011-05-27 13:43:59 UTC <manju_> luite, ah...ok
2011-05-27 13:44:02 UTC <luite> oh yes I meant vehicle traffic
2011-05-27 13:44:14 UTC <manju_> luite, I would be interested in it
2011-05-27 13:44:17 UTC <luite> "cars" were driving around in circles and you could slow some of them down
2011-05-27 13:44:28 UTC <manju_> but byorgey can use this to optimize :-)
2011-05-27 13:44:36 UTC <manju_> luite, hmm...interesting
2011-05-27 13:45:32 UTC <byorgey> manju_: sounds cool
2011-05-27 13:45:55 UTC <manju_> byorgey, yeah I am stuck in the traffic 3 hours a day
2011-05-27 13:46:07 UTC <byorgey> haha, ouch
2011-05-27 13:46:09 UTC <manju_> byorgey, I want to see if I can model how to make it better
2011-05-27 13:46:19 UTC <manju_> byorgey, yeah...I know
2011-05-27 13:46:20 UTC <luite> haha
2011-05-27 13:46:27 UTC <manju_> haha
2011-05-27 13:46:33 UTC <byorgey> if you can model how the actions of a single car can make it better?
2011-05-27 13:46:46 UTC <luite> you should teach all other drivers how to react
2011-05-27 13:47:13 UTC <manju_> byorgey, not really I see that traffic pretty much follows a pattern of cars being connected by springs (mass spring model)
2011-05-27 13:47:14 UTC <byorgey> I am imagining manju_ driving with his traffic simulator running on a laptop in the passenger seat
2011-05-27 13:47:21 UTC <manju_> byorgey, haha
2011-05-27 13:47:42 UTC <byorgey> the laptop says, "calculating... calculating... TURN HARD LEFT RIGHT NOW"
2011-05-27 13:47:48 UTC <luite> manju_: hmm, I thought it was in gloss, but I can't find it
2011-05-27 13:47:55 UTC <manju_> ...and then I hit a tree
2011-05-27 13:48:15 UTC <byorgey> well, there are a few bugs to be worked out of the simulator
2011-05-27 13:48:20 UTC <manju_> luite, that is ok, if you stumble upon it, I can pick it up on the channel
2011-05-27 13:48:24 UTC <manju_> byorgey, hehe...
2011-05-27 13:48:43 UTC <luite> your process doesn't exit if I close the window by the way
2011-05-27 13:48:44 UTC <manju_> this was my first program in years...
2011-05-27 13:48:53 UTC <manju_> luite, that is a bug
2011-05-27 13:48:55 UTC <luite> althoguh that might be a problem with the version of freeglut I use
2011-05-27 13:48:57 UTC <luite> oh ok
2011-05-27 13:49:20 UTC <manju_> hmmm...it exits in mine though
2011-05-27 13:49:42 UTC <luite> do you use windows?
2011-05-27 13:49:53 UTC <manju_> luite, no ubuntu
2011-05-27 13:51:37 UTC <manju_> ok I am off for now, got to take my kid and wife out
2011-05-27 13:51:46 UTC <manju_> talk to you guys later
2011-05-27 13:52:02 UTC <byorgey> ok, bye manju_
2011-05-27 13:52:12 UTC <manju_> byorgey, thanks again
2011-05-27 13:52:23 UTC <byorgey> sure
2011-05-27 13:52:50 UTC <d13724> hi diagraming people
2011-05-27 13:53:00 UTC <byorgey> hi d13724
2011-05-27 13:53:44 UTC <d13724> byorgey, I have another question but on diagrams this time
2011-05-27 13:53:46 UTC <byorgey> trying to produce images from your geometry lib? =)
2011-05-27 13:54:06 UTC <byorgey> sure, ask away
2011-05-27 13:54:41 UTC <d13724> yeah one day when I manage to chose a design and start coding it'd be nice if it could draw
2011-05-27 13:55:43 UTC <d13724> my question is about the scope of diagrams (haven't really tried it yet), does it 'only' draw or is there some geometry functions ?
2011-05-27 13:56:32 UTC <byorgey> d13724: there is a bit of geometry, but it depends what you are looking for.
2011-05-27 13:58:19 UTC <d13724> basically I'm thinking of Asymptote + it's geometry module, for example: take a line, make a perpendicular trough a point, then draw both lines and their intersection
2011-05-27 13:58:19 UTC <byorgey> d13724: what sorts of functions are you interested in?
2011-05-27 13:58:32 UTC <byorgey> ok, I see
2011-05-27 13:59:15 UTC <byorgey> It should be pretty easy to add that kind of stuff, and I hope to add it eventually
2011-05-27 13:59:44 UTC <byorgey> but it doesn't have that sort of thing at the moment
2011-05-27 14:07:14 UTC <d13724> ok
2011-05-27 14:29:48 UTC <d13724> byorgey, thanks for the answer, I'll try diagrams and maybe come back here with more questions
2011-05-27 14:30:04 UTC <byorgey> ok.
2011-05-27 14:30:05 UTC <d13724> answerS, even
2011-05-27 15:18:15 UTC <ClaudiusMaximus> still trying to figure out how to test if two diagrams are disjoint - if i could find the vector between the two local origins then i could check whether the Bounds overlap in that direction...
2011-05-27 15:24:03 UTC <byorgey> ClaudiusMaximus: hmm, so these are two diagrams that you have already composed into one diagram somehow?
2011-05-27 15:24:15 UTC <byorgey> and now you want to find whether the subpieces are disjoint?
2011-05-27 15:25:38 UTC <byorgey> or is it just two separate diagrams you have?
2011-05-27 15:25:40 UTC <ClaudiusMaximus> byorgey: ah, i suppose so (i guess it doesn't make sense to think of it without that composition)
2011-05-27 15:26:08 UTC <byorgey> right, otherwise there is no particular relationship between the two local origins
2011-05-27 15:26:09 UTC <ClaudiusMaximus> byorgey: they are separate, but will be composed with atop
2011-05-27 15:26:22 UTC <byorgey> oh, ok, that makes it easier
2011-05-27 15:27:03 UTC <byorgey> hmm, let me think
2011-05-27 15:27:05 UTC <ClaudiusMaximus> and i guess atop will force the local origins to be identical?
2011-05-27 15:27:21 UTC <byorgey> right
2011-05-27 15:28:20 UTC <byorgey> hmm, actually, perhaps it is not quite as easy as I thought
2011-05-27 15:28:31 UTC <ClaudiusMaximus> which doesn't exactly help because the 0 vector has no direction
2011-05-27 15:28:36 UTC <byorgey> right
2011-05-27 15:29:01 UTC <byorgey> so presumably these two diagrams have been translated in some way so that "atop" won't necessarily put them directly on top of each other
2011-05-27 15:29:05 UTC <ClaudiusMaximus> yes
2011-05-27 15:29:15 UTC <byorgey> so do you know where the "used to" be?
2011-05-27 15:29:19 UTC <byorgey> where *they
2011-05-27 15:30:07 UTC <byorgey> ah, wait
2011-05-27 15:30:08 UTC <ClaudiusMaximus> sort of - i have the initial position and a Transformation
2011-05-27 15:30:30 UTC <byorgey> would it be sufficient to construct a bounding box for each and test for intersection of those?
2011-05-27 15:30:34 UTC <byorgey> because that is not difficult
2011-05-27 15:31:39 UTC <ClaudiusMaximus> yeah that would be fine in this case
2011-05-27 15:31:52 UTC <byorgey> use boundary unitX, boundary (negateV unitX), boundary unitY, etc. on each to get the coordinates of the boxes
2011-05-27 15:32:12 UTC <ClaudiusMaximus> cool
2011-05-27 15:32:54 UTC <byorgey> that's something else that should be added to the standard library, but not too hard to do it manually for now
2011-05-27 15:32:57 UTC <ClaudiusMaximus> is there a way to clip diagrams?
2011-05-27 15:33:07 UTC <byorgey> no, not currently.
2011-05-27 15:33:27 UTC <byorgey> wouldn't be too hard to add for backends that support clipping though.
2011-05-27 15:33:37 UTC <ClaudiusMaximus> ah.  clipping to a rectangle is what i'll need at the final stage to avoid ragged edges...
2011-05-27 15:33:52 UTC <byorgey> ok. I will add it for you =)
2011-05-27 15:35:15 UTC <byorgey> ClaudiusMaximus: would it be sufficient to just have a single "clipping path" as an attribute?
2011-05-27 15:35:37 UTC <byorgey> if it's just a rectangle I guess that should be fine.
2011-05-27 15:36:31 UTC <ClaudiusMaximus> byorgey: well, i can imagine things like wanting to have a textured background covering everything, then clipped to show through arbitrary shapes
2011-05-27 15:37:53 UTC <byorgey> ok. I'll have to look into what, say, cairo can do with clipping, and figure out the best API for supporting it
2011-05-27 15:38:13 UTC <byorgey> but it should be very easy (probably about 15 minutes of hacking) to get something simple working
2011-05-27 15:39:19 UTC <fryguybob> Is this clipping going to change the bounds for a diagram?
2011-05-27 15:42:19 UTC <ClaudiusMaximus> i guess (bounds $ x `clippedBy` y) should be (bounds y), as i don't know if pointwise minimum would work
2011-05-27 15:44:37 UTC <ClaudiusMaximus> could make it a choice - you could always do  withBounds x (x `clippedBy` y) if you didn't like it?
2011-05-27 15:45:57 UTC <ClaudiusMaximus> maybe pointwise minimum would work but it breaks my head thinking about it
2011-05-27 15:50:15 UTC <byorgey> ClaudiusMaximus: why wouldn't pointwise minimum work?
2011-05-27 15:50:40 UTC <byorgey> fryguybob: I hadn't thought about it.  I suppose you should be able to choose?
2011-05-27 15:51:00 UTC <byorgey> kind of depends what you are using the clipping for I guess
2011-05-27 15:51:44 UTC <ClaudiusMaximus> byorgey: i suppose all bounds are convex, then the intersection of two convex regions is always convex (needs a proof maybe?)
2011-05-27 15:51:45 UTC <fryguybob> Yeah.
2011-05-27 15:52:43 UTC <ClaudiusMaximus> maybe have two names, perhaps clippedBy and clippedTo
2011-05-27 15:53:24 UTC <ClaudiusMaximus> where bounds (x`clippedBy`y) = bounds x, bounds (x`clippedTo`y) = bounds y ?
2011-05-27 15:53:42 UTC <byorgey> well, those two names in particular give me no intuition as to which does which, but yes, having two different clipping functions could work
2011-05-27 15:54:06 UTC <byorgey> hmm, actually, maybe they do
2011-05-27 15:57:32 UTC <ClaudiusMaximus> i need a better name for   data TreeFilterThing = Discard | Keep | KeepAllRecursive   (or maybe i should just use Maybe Bool ..)
2011-05-27 15:59:42 UTC <byorgey> anything but Maybe Bool
2011-05-27 16:00:54 UTC <fryguybob> Maybe (Either () ())
2011-05-27 16:02:41 UTC <byorgey> Either () (Either [Void] (Int -> ()))
2011-05-27 16:03:48 UTC <fryguybob> Wait, which one is FileNotFound?
2011-05-27 16:06:20 UTC <byorgey> Right (Left [undefined])
2011-05-27 16:07:17 UTC <byorgey> if the file is found, you get a continuation which takes a byte offset and then computes ()
2011-05-27 16:09:05 UTC <luite> that looks risky for large files on 32 bit systems
2011-05-27 16:09:41 UTC <fryguybob> better do (Double -> ())
2011-05-27 16:10:46 UTC <luite> f :: Double -> (),  f 1 = (), f 2 = (), f 1.5 = )(
2011-05-27 16:10:53 UTC <luite> obviously
2011-05-27 16:11:01 UTC <fryguybob> ha!
2011-05-27 16:12:06 UTC <byorgey> hehehe
2011-05-27 17:43:25 UTC <tg_> byorgey: here?
2011-05-27 17:50:23 UTC <luite> tg_: I want to rely less on the type system for security, so I'm adding some things
2011-05-27 17:51:23 UTC <tg_> luite: "security" here means "safe execution of arbitrary code", yes?
2011-05-27 17:51:32 UTC <luite> yes
2011-05-27 17:51:42 UTC <tg_> ok, the document I sent you has little to do with that
2011-05-27 17:51:56 UTC <tg_> but it does have examples on very smartly handling resource limits, time limits, execution pruning
2011-05-27 17:52:09 UTC <tg_> and handling killing of processes with cleanup
2011-05-27 17:53:58 UTC <tg_> luite: in particular, the sections on asynchronous exceptions, timeouts, and the STM versions of those
2011-05-27 17:56:48 UTC <luite> http://hpaste.org/47141/how_to_be_eval <- perhaps anyone here knows how to do this?
2011-05-27 18:13:31 UTC <luite> (I accept hacky solutions, as long as they work ;p )
2011-05-27 18:19:45 UTC <byorgey> luite: you probably need to call  runInterpreter on the call to eval before passing it to forkProcess
2011-05-27 18:19:50 UTC <byorgey> I guess
2011-05-27 18:20:02 UTC <byorgey> I don't have much experience with hint but the types work out =)
2011-05-27 18:20:15 UTC <byorgey> hi tg_
2011-05-27 18:20:15 UTC <luite> yeah I was afraid of that, because that's exactly the thing I wanted to avoid in the forked process
2011-05-27 18:20:19 UTC <byorgey> ah
2011-05-27 18:20:44 UTC <luite> runInterpreter and loadModules need to construct the complete hint environment, parsing the haskell files, loading interfaces etc
2011-05-27 18:23:17 UTC <tg_> fork seperate processes for eval and runInterpreter
2011-05-27 18:23:54 UTC <tg_> and then just only call eval on things whose runInterpreter doesn't error out
2011-05-27 18:23:58 UTC <luite> euh...
2011-05-27 18:24:08 UTC <tg_> luite: I'm guessing, mang :o
2011-05-27 18:24:41 UTC <luite> tg_: the point is that I want to run runInterpreter in one process, and then do eval, without runInterpreter in a child, the problem is getting the interpreter state into the child
2011-05-27 18:27:20 UTC <tg_> luite: this sounds like exactly what that PDF I sent you is desribing how to do, but I can't be sure of that
2011-05-27 18:27:29 UTC <tg_> he's talking about using concurrent parers and passing the results along
2011-05-27 18:27:51 UTC <luite> nah the problem really is with this specific module
2011-05-27 18:28:06 UTC <tg_> luite: hint, you mean?
2011-05-27 18:29:04 UTC <luite> yes, the InterpreterT type is opaque, you cannot see into it, extract its state or something
2011-05-27 18:34:17 UTC <tg_> byorgey: I am planning on writing documention for mpppc as exercise today - does anyone even use it?
2011-05-27 18:35:04 UTC <byorgey> I didn't even know what that was, so I went to the Hackage page to see -- and was surprised to see myself listed as an author
2011-05-27 18:35:11 UTC <tg_> byorgey: lol
2011-05-27 18:35:35 UTC <tg_> it has no documentation, and I need practice understanding other's modules and writing documentation
2011-05-27 18:35:38 UTC <tg_> so I figured I'd do both
2011-05-27 18:35:43 UTC <byorgey> tg_: I think I am listed as an author because they based it on some code I wrote, probably http://hackage.haskell.org/package/boxes
2011-05-27 18:35:51 UTC <byorgey> but I don't know anything about it really
2011-05-27 18:35:57 UTC <tg_> i figured it might be
2011-05-27 18:36:10 UTC <tg_> oh well, hopefully it actually does something
2011-05-27 18:36:12 UTC <tg_> and works, etc
2011-05-27 18:38:06 UTC <byorgey> hehe
2011-05-27 18:39:19 UTC <ClaudiusMaximus> does this look like a reasonable API for bounding boxes?  http://hpaste.org/47142/bounding_boxes
2011-05-27 18:39:41 UTC <byorgey> tg_: looks like they just uploaded a new version about a week ago, so at least it's current
2011-05-27 18:39:51 UTC <luite> ClaudiusMaximus: lol
2011-05-27 18:40:25 UTC <ClaudiusMaximus> luite: the type signatures are a bit messy..
2011-05-27 18:40:43 UTC <luite> yes, give me a few hours to read them all and I'll get back to you ;)
2011-05-27 18:42:11 UTC <byorgey> ah,  Ord (Basis v), I see
2011-05-27 18:42:30 UTC <luite> ClaudiusMaximus: what's the difference between the primed and unprimed versions?
2011-05-27 18:42:41 UTC <byorgey> ClaudiusMaximus: yes, looks nice, although I might give inside' and outside' better names
2011-05-27 18:42:47 UTC <ClaudiusMaximus> luite: a bit of a pun, inside uses <= and inside' uses <
2011-05-27 18:43:08 UTC <byorgey> oh, wait, I see
2011-05-27 18:43:21 UTC <ClaudiusMaximus> so non-strict vs strict comparison - i could call them inside and strictlyInside, etc
2011-05-27 18:43:22 UTC <byorgey> oh, I was confused, I thought one was for testing points and the other for testing boxes
2011-05-27 18:43:35 UTC <byorgey> no, if that's the difference I think the prime is OK
2011-05-27 18:44:00 UTC <byorgey> ClaudiusMaximus: but it would probably be useful to also have a function for testing whether a point is inside a BB
2011-05-27 18:44:19 UTC <ClaudiusMaximus> byorgey: good point
2011-05-27 18:44:25 UTC <byorgey> hehe
2011-05-27 18:44:37 UTC <tg_> i gotta convince people to stop using "points" :O
2011-05-27 18:44:40 UTC <tg_> one day :o
2011-05-27 18:45:24 UTC <byorgey> what's wrong with points?
2011-05-27 18:45:36 UTC <tg_> byorgey: nothing's wrong, but there is a more powerful abstraction
2011-05-27 18:45:45 UTC <tg_> byorgey: let me try and run through it with you real quickly:
2011-05-27 18:45:52 UTC <ClaudiusMaximus> so i'll add   contains, contains' :: (spam) => BoundingBox v -> v -> Bool
2011-05-27 18:46:03 UTC <byorgey> haha (spam) =>  =)
2011-05-27 18:46:17 UTC <tg_> byorgey: don't worry about right or wrong answers, just answer :o
2011-05-27 18:46:20 UTC <byorgey> ClaudiusMaximus: should be  BoundingBox v -> Point v -> Bool
2011-05-27 18:46:23 UTC <tg_> draw 1 dimensional line
2011-05-27 18:46:47 UTC <tg_> -----\
2011-05-27 18:46:49 UTC <tg_> minus the \
2011-05-27 18:46:52 UTC <byorgey> ok
2011-05-27 18:46:57 UTC <tg_> draw a 2D line:
2011-05-27 18:47:00 UTC <tg_> |
2011-05-27 18:47:01 UTC <tg_> |
2011-05-27 18:47:02 UTC <tg_> ---
2011-05-27 18:47:27 UTC <byorgey> o.... k
2011-05-27 18:47:28 UTC <tg_> a 3d line will look the same, but with another axis
2011-05-27 18:47:35 UTC <byorgey> sure
2011-05-27 18:47:45 UTC <tg_> so lines are the basis vectors for a n-d euclidian space
2011-05-27 18:48:01 UTC <tg_> so what is a 0-dimensional line?
2011-05-27 18:48:07 UTC <tg_> .
2011-05-27 18:48:11 UTC <luite> ClaudiusMaximus: but does a `inside` b mean that a is completely inside b, every point in a is in b?
2011-05-27 18:48:26 UTC <luite> or that there are points of a in b?
2011-05-27 18:48:26 UTC <tg_> a 0-dimensional line is a thing without a basis
2011-05-27 18:48:49 UTC <byorgey> tg_: got it
2011-05-27 18:49:07 UTC <tg_> ok, so now let's talk about volumes instead of lines (skipping over areas)
2011-05-27 18:49:48 UTC <tg_> a 3-cube is a normal cube
2011-05-27 18:49:52 UTC <tg_> a 2-cube is a square
2011-05-27 18:49:57 UTC <tg_> a 1-cube is a line
2011-05-27 18:50:01 UTC <tg_> a 0-cube is...?
2011-05-27 18:50:25 UTC <byorgey> a point, of course
2011-05-27 18:50:42 UTC <tg_> ok, not, let's do the same, but for spheres and balls
2011-05-27 18:50:54 UTC <tg_> the weird thing
2011-05-27 18:51:01 UTC <tg_> is that the "cube" is a 3-cube
2011-05-27 18:51:07 UTC <tg_> but a "sphere" is a 2-sphere
2011-05-27 18:51:25 UTC <tg_> going downward, a 1-sphere is a circle
2011-05-27 18:51:33 UTC <ClaudiusMaximus> luite: the first interpretation
2011-05-27 18:51:34 UTC <tg_> a 0-sphere is a line *segment*
2011-05-27 18:51:48 UTC <byorgey> tg_: what? why is it a line segment?
2011-05-27 18:51:53 UTC <byorgey> that makes no sense
2011-05-27 18:51:59 UTC <tg_> byorgey: because a 1-sphere is orientable
2011-05-27 18:52:11 UTC <luite> ClaudiusMaximus: and a `outside` b? does that mean that intersection a b == Nothing, or that b `inside` a?
2011-05-27 18:52:12 UTC <byorgey> tg_: what is your definition of sphere?
2011-05-27 18:52:20 UTC <tg_> if you have a circle, you don't automatically know if you're talking about the area inside of the inside or the outside
2011-05-27 18:52:40 UTC <byorgey> tg_: sure
2011-05-27 18:52:57 UTC <ClaudiusMaximus> a `intersection` b = Nothing ==> a `outside'` b
2011-05-27 18:53:11 UTC <tg_> byorgey: is there an analogy for the same fact (orientability) with a line?
2011-05-27 18:53:54 UTC <luite> ClaudiusMaximus: hmm, perhaps non-class function overlaps would be better than outside?
2011-05-27 18:53:57 UTC <tg_> it's kind of tricky
2011-05-27 18:54:04 UTC <tg_> there is, but it only shows up in the complex numbers
2011-05-27 18:54:52 UTC <tg_> the orientability is the freedom of choice in which direction is (i) or (-i)
2011-05-27 18:55:21 UTC <tg_> make sense?
2011-05-27 18:55:38 UTC <byorgey> tg_: no. what is the definition of 'sphere' you are using?
2011-05-27 18:55:51 UTC <tg_> byorgey: the one that you derivce from the apollonian group fractal
2011-05-27 18:55:59 UTC <tg_> s/derivce/derive/
2011-05-27 18:56:05 UTC <byorgey> haha, I should have known =P
2011-05-27 18:56:23 UTC <tg_> byorgey: it's similar in every way to the Riemannian definition
2011-05-27 18:56:24 UTC <byorgey> anyway, I don't see why all of this means that we should "stop using points"
2011-05-27 18:56:31 UTC <tg_> byorgey: because, there's a -1-sphere
2011-05-27 18:56:38 UTC <tg_> which is a point
2011-05-27 18:56:47 UTC <ClaudiusMaximus> luite: a`overlaps`b = not (a`outside'`b) ; a`overlaps'`b  is something i need to think about a bit harder (does it mean that the box has >0 size in every dimension?)
2011-05-27 18:56:48 UTC <tg_> for any-sphere
2011-05-27 18:57:06 UTC <tg_> you are *guaranteed* that you can take those two points, and invert them about their center
2011-05-27 18:57:06 UTC <byorgey> so we should talk about -1-spheres instead of points?
2011-05-27 18:57:17 UTC <tg_> no, but once you have this concept
2011-05-27 18:57:33 UTC <tg_> then the smallest geometric concept that one can rigoriously talk about is areas
2011-05-27 18:58:27 UTC <tg_> because if you mention points, you don't know if it's the point on an arc, or if it's center of a circle, or if it's an affine point
2011-05-27 18:58:43 UTC <tg_> but if you talk about only areas the whole time, then you can still discuss points, but *only* as sets
2011-05-27 18:59:15 UTC <tg_> if you did electromagnetism, this analogy is very close to that of gauge symmetry
2011-05-27 18:59:26 UTC <tg_> where only differences in energy are meaningful
2011-05-27 18:59:42 UTC <tg_> in this geometry, only differences in areas (or equivalently, differences in sets of points) are meaningful
2011-05-27 18:59:55 UTC <tg_> I didn't invent this concept, several others did, I'm just characterizing it
2011-05-27 19:00:08 UTC <byorgey> ok, you have lost me now, but it sounds interesting =)
2011-05-27 19:00:20 UTC <tg_> byorgey: another way to look at it, if you want to not talk about spheres at all
2011-05-27 19:00:48 UTC <tg_> imagine dividing up some part of your screen into squares
2011-05-27 19:00:57 UTC <luite> ClaudiusMaximus: hmm, good point...
2011-05-27 19:01:11 UTC <tg_> the smallest thing you can possibly get is a pixel
2011-05-27 19:01:41 UTC <tg_> so, I ask the question, what is the smallest thing you can get which has an area?
2011-05-27 19:01:53 UTC <tg_> in terms of the display itself (and the pixel pitch that it has), it's a single pixel
2011-05-27 19:02:04 UTC <tg_> but in terms of something which is invariant relative to the screen
2011-05-27 19:02:09 UTC <tg_> it's a box of 9 pixels:
2011-05-27 19:02:11 UTC <tg_> . . .
2011-05-27 19:02:12 UTC <tg_> . . .
2011-05-27 19:02:13 UTC <tg_> . . .
2011-05-27 19:02:35 UTC <tg_> it's a square, all of the sides have the same length, and it encloses at least 1 "unit" of area (a pixel)
2011-05-27 19:02:47 UTC <tg_> however, this:
2011-05-27 19:02:48 UTC <tg_> . .
2011-05-27 19:02:48 UTC <tg_> . .
2011-05-27 19:02:59 UTC <tg_> is not similarly invariant over different monitors, screens, or pixel pitches
2011-05-27 19:03:09 UTC <tg_> its area changes when the pixel pitch changes
2011-05-27 19:04:08 UTC <tg_> so if you imagine changing the pixel pitch, then you will get different areas with the four-point-square formulation
2011-05-27 19:04:24 UTC <tg_> but with the nine-point-square formulation, you can absorb the new pixel pitch in the definition of unit length
2011-05-27 19:04:32 UTC <tg_> does *that* make more sense?
2011-05-27 19:05:46 UTC <tg_> if not, then I will have to cede defeat for now :o
2011-05-27 19:08:02 UTC <luite> why can you change the unit length in one case, but not in the other?
2011-05-27 19:08:24 UTC <tg_> luite: because there's no single point which can act as a reference for the change
2011-05-27 19:09:04 UTC <tg_> . .
2011-05-27 19:09:06 UTC <tg_> . .*
2011-05-27 19:09:10 UTC <tg_> you can choose to fix that point
2011-05-27 19:09:14 UTC <tg_> and then change the area
2011-05-27 19:09:19 UTC <tg_> .  .
2011-05-27 19:09:21 UTC <tg_> .  .*
2011-05-27 19:09:47 UTC <tg_> but none of them are guaranteed to be cubes
2011-05-27 19:10:07 UTC <tg_> in the 9-point-case, there is a point which is equidistant from all of the others (the centeroid point)
2011-05-27 19:10:11 UTC <tg_> so you can:
2011-05-27 19:10:20 UTC <luite> err...
2011-05-27 19:10:20 UTC <tg_> .  .  .
2011-05-27 19:10:23 UTC <tg_> .  .  .
2011-05-27 19:10:25 UTC <tg_> .  .
2011-05-27 19:10:32 UTC <tg_> .   .   .
2011-05-27 19:10:35 UTC <tg_> .   .   .
2011-05-27 19:10:39 UTC <tg_> .   .   .
2011-05-27 19:11:07 UTC <tg_> all of the outer 8 points are invertable through the centroid point
2011-05-27 19:11:55 UTC <luite> how are those point equidistant, wouldn't they have to lie on a circle?
2011-05-27 19:12:18 UTC <tg_> luite: no, but there is a transform which can draw them using triangles with a single length
2011-05-27 19:12:34 UTC <tg_> l = sqrt (h^2 - (1/4)a^2)
2011-05-27 19:13:02 UTC <tg_> a = (1/2) a h
2011-05-27 19:13:10 UTC <tg_> big A
2011-05-27 19:13:11 UTC <tg_> for that one
2011-05-27 19:13:13 UTC <tg_> A = (1/2) a h
2011-05-27 19:13:37 UTC <tg_> A = (1/2) a sqrt (h^2 - (1/4)a^2)
2011-05-27 19:13:56 UTC <tg_> A = (1/2) a^2 sqrt[ b^2 / a^2 - (1/4)]
2011-05-27 19:14:00 UTC <tg_> that last step
2011-05-27 19:14:14 UTC <tg_> is the important one
2011-05-27 19:14:15 UTC <luite> I have no idea what you're even using the triangles for, sorry
2011-05-27 19:14:24 UTC <tg_> luite: because that's how you draw everything
2011-05-27 19:14:39 UTC <luite> still no idea ;p
2011-05-27 19:14:46 UTC <tg_> you can't draw a unit square without triangles
2011-05-27 19:15:02 UTC <byorgey> ClaudiusMaximus: so do you want to incorporate this bounding box API as a module in diagrams-lib?
2011-05-27 19:15:27 UTC <tg_> luite: anyway, it doesn't have anything to do with triangles
2011-05-27 19:15:32 UTC <luite> lol
2011-05-27 19:15:34 UTC <tg_> the last equation is lorentz-invariant
2011-05-27 19:15:50 UTC <tg_> it takes areas to areas
2011-05-27 19:16:45 UTC <tg_> luite: I should change: you can't draw a unit square or a unit circle using a [countable] number system
2011-05-27 19:16:58 UTC <ClaudiusMaximus> byorgey: yes, but i'm having major doubts and getting confused about Points, Vectors, etc
2011-05-27 19:17:15 UTC <byorgey> hehe
2011-05-27 19:17:17 UTC <tg_> ClaudiusMaximus: by all means ignore me :O
2011-05-27 19:17:51 UTC <byorgey> tg_: I think ClaudiusMaximus was referring to the diagrams types, not to you =)
2011-05-27 19:18:02 UTC <tg_> byorgey: yeah, but I don't want to confuse anymore more
2011-05-27 19:18:07 UTC <ClaudiusMaximus> tg_: hehe
2011-05-27 19:18:07 UTC <luite> tg_: hmm, why? the algebraic numbers, or even algebraic integers are countable
2011-05-27 19:18:08 UTC <tg_> byorgey: this is certainly confusing enough as is
2011-05-27 19:18:48 UTC <tg_> byorgey: the definition of sphere I'm using, as you asked earlier, is a quadruple cover of the Poincare half-sphere model
2011-05-27 19:19:18 UTC <byorgey> ClaudiusMaximus: a vector is a direction with a magnitude
2011-05-27 19:19:26 UTC <luite> tg_: or do you mean that any collection of points on a line is uncountable?
2011-05-27 19:19:32 UTC <luite> err
2011-05-27 19:19:46 UTC <luite> meh
2011-05-27 19:19:52 UTC <luite> forget that
2011-05-27 19:19:54 UTC <tg_> luite: the definitions of lines we typically use in euclidian (Reals) space
2011-05-27 19:19:59 UTC <tg_> are typicall uncountable by definition
2011-05-27 19:20:05 UTC <ClaudiusMaximus> byorgey: yep, and a point only makes sense in relation to an origin
2011-05-27 19:21:03 UTC <tg_> luite: I'll try to convince you with the tools we make, instead of tying to do it over IRC
2011-05-27 19:21:15 UTC <tg_> luite: but I am rather serious about it, even if I can't explain it simply with the tools at hand
2011-05-27 19:21:20 UTC <byorgey> ClaudiusMaximus: right.  and vectors are unaffected by translations, whereas points are.
2011-05-27 19:21:36 UTC <ClaudiusMaximus> so, i've been using vectors when i think i should have been using points
2011-05-27 19:22:00 UTC <luite> tg_: k
2011-05-27 19:22:16 UTC <byorgey> ClaudiusMaximus: it's quite possible, I did that for quite a while when I started developing diagrams
2011-05-27 19:22:33 UTC <byorgey> ClaudiusMaximus: and then I ran into some serious bugs that boiled down to a failure to distinguish between them =)
2011-05-27 19:23:23 UTC <tg_> luite: the amazing thing about this construction, when you follow it all the way through, is that it allows you to compute something like the area of some circles, and turn them into the area of some triangles, and then into the area of some squares - **without** using irrational (or worse) numbers
2011-05-27 19:23:53 UTC <tg_> which is to say, one can convert between one fractal geometry (the sierpinski gasket) and another (the apollonian gasket) at will
2011-05-27 19:23:57 UTC <byorgey> ClaudiusMaximus: anyway, converting from a point to a vector can be done with  \p -> p .-. origin
2011-05-27 19:24:02 UTC <tg_> which is to say, there is an invariant which exists outside of those constructions
2011-05-27 19:24:20 UTC <byorgey> and converting the other way is  \v -> origin .+^ v
2011-05-27 19:24:30 UTC <tg_> which is really very surprisg, but it seems to be true
2011-05-27 19:25:27 UTC <tg_> luite: I always find it somewhat funny how the "cube" model is sort of the "trivial" fractal, but we don't see it as such
2011-05-27 19:25:32 UTC <ClaudiusMaximus> byorgey: is origin defined somewhere?  i keep seeing references to it, like moveOriginTo (origin .^+ v) === translate (negateV v)
2011-05-27 19:25:46 UTC <tg_> luite: in the dimension-counting sense
2011-05-27 19:25:50 UTC <byorgey> ClaudiusMaximus: yes, I forget where off the top of my head
2011-05-27 19:25:57 UTC <ClaudiusMaximus> byorgey: .. but i assumed that mean forall origin
2011-05-27 19:26:18 UTC <byorgey> forall origin?
2011-05-27 19:26:31 UTC <byorgey> ClaudiusMaximus: it is defined in Graphics.Rendering.Diagrams.Points, from diagrams-core
2011-05-27 19:26:34 UTC <ClaudiusMaximus> like i said, bit confused :)
2011-05-27 19:26:48 UTC <ClaudiusMaximus> aha, cool
2011-05-27 19:27:17 UTC <byorgey> origin is just the local origin of whatever vector space you are working in at the time
2011-05-27 19:27:24 UTC <byorgey> of course it is just defined as  P (0,0)
2011-05-27 19:27:33 UTC <byorgey> err, P zeroV
2011-05-27 19:28:29 UTC <byorgey> ClaudiusMaximus: this is useful for getting a sense of what needs to be explained better when I go to write more documentation/tutorial =)
2011-05-27 19:28:44 UTC <ClaudiusMaximus> cool
2011-05-27 19:28:53 UTC <byorgey> at some point in the not-too-distant future I plan to write a user guide
2011-05-27 19:29:32 UTC <byorgey> putting good explanations in the Haddock is good but it's not helpful if you don't even know what you're looking for =)
2011-05-27 19:30:04 UTC <luite> tg_: hmm, sorry not really following you, I'm still struggling with the fork problem. I'm starting te believe that it's just impossible to do
2011-05-27 19:30:15 UTC <luite> which is annoying since it's so trivial in C
2011-05-27 19:31:46 UTC <tg_> luite: i hope not impossible
2011-05-27 19:31:59 UTC <tg_> luite: explain it to me (so I can learn it) and I'll switch to tryign to help
2011-05-27 19:32:08 UTC <tg_> what do you mean that you can't see what's inside InterperterT?
2011-05-27 19:32:13 UTC <byorgey> luite: maybe ask about it in #haskell?
2011-05-27 19:32:19 UTC <tg_> byorgey: he did, to no avail
2011-05-27 19:32:22 UTC <byorgey> oh =(
2011-05-27 19:32:24 UTC <tg_> byorgey: though it might be time to ask again
2011-05-27 19:32:55 UTC <tg_> luite: I would have thought InterpeterT and eval would ultiamtely do the same thing - run the code and produce a result
2011-05-27 19:32:58 UTC <luite> byorgey: people usually get suspiciouly quiet when something is actually tricky :p
2011-05-27 19:33:03 UTC <byorgey> haha
2011-05-27 19:33:08 UTC <tg_> luite: so perhaps you want a Parser and then an Interpeter?
2011-05-27 19:33:15 UTC <tg_> or am i totally off base?
2011-05-27 19:33:44 UTC <luite> tg_: InterpreterT is something completely different, it's a monad transformer for an interpreter state
2011-05-27 19:34:16 UTC <luite> that state contains the parsed code
2011-05-27 19:34:33 UTC <luite> byorgey: perhaps #ghc, since it's rather low-level
2011-05-27 19:34:55 UTC <byorgey> it's not really about ghc though
2011-05-27 19:35:10 UTC <luite> true, though indirectly it's about the ghc api :)
2011-05-27 19:35:23 UTC <byorgey> luite: oh, well, actually, that's true =)
2011-05-27 19:35:35 UTC <byorgey> cairo_copy_clip_rectangle_list (): Gets the current clip region as a list of rectangles in user coordinates.  -- whaaaat
2011-05-27 19:35:52 UTC <luite> the problem I have at the moment, after some minor patches to hint, is that GhcT is not a MonadPeelIO
2011-05-27 19:40:12 UTC <byorgey> hmm, can you make it on?
2011-05-27 19:40:15 UTC <byorgey> *one
2011-05-27 19:40:57 UTC <luite> not with standalone deriving instance :)
2011-05-27 19:41:22 UTC <luite> I'm still trying to figure out what exactly it does
2011-05-27 19:42:09 UTC <byorgey> looks like you're supposed to just put  peelIO = liftPeel peelIO  and implement MonadTransPeel
2011-05-27 19:42:33 UTC <byorgey> for that you would have to implement
2011-05-27 19:42:55 UTC <byorgey> peel :: (Monad m, Monad n, Monad o) => GhcT n (GhcT m a -> m (GhcT o a))
2011-05-27 19:44:56 UTC <byorgey> peel has to capture the current state of the GhcT computation and then return a function which runs the GhcT m a computation using the captured state
2011-05-27 19:45:26 UTC <byorgey> I don't quite understand what the GhcT o a  is supposed to be
2011-05-27 19:45:31 UTC <byorgey> an example would be nice =P
2011-05-27 19:45:39 UTC <tg_> looks like a mnmeonic to remember something
2011-05-27 19:45:57 UTC <tg_> soh-coh-toa
2011-05-27 19:46:31 UTC <byorgey> hehe
2011-05-27 19:46:56 UTC <byorgey> luite: GhcT is from the GHC API?
2011-05-27 19:47:24 UTC <luite> byorgey: it's some wrapper http://hackage.haskell.org/packages/archive/ghc-mtl/1.0.1.0/doc/html/src/Control-Monad-Ghc.html
2011-05-27 19:47:57 UTC <tg_> it's time for some good news from our favorite Professor: http://www.youtube.com/watch?v=1D1cap6yETA
2011-05-27 19:48:40 UTC <byorgey> luite: oh =(
2011-05-27 19:49:57 UTC <luite> but the other one is also called GhcT
2011-05-27 19:50:01 UTC <byorgey> luite: I don't think you can implement MonadTransPeel for that without access to its internals
2011-05-27 19:50:17 UTC <byorgey> because otherwise you have no idea what sort of state it is carrying around
2011-05-27 19:50:37 UTC <tg_> is MonadTransPeel supposed to "peel" something off?
2011-05-27 19:51:11 UTC <byorgey> I think the idea is that it lets you "peel off" layers of monad transformers
2011-05-27 19:51:13 UTC <luite> it's more for doing something under the peel without actually taking the whole peel off :)
2011-05-27 19:51:21 UTC <byorgey> but I am not sure in what exact sense that is true
2011-05-27 19:51:40 UTC <tg_> so like, you peel off the skin of an apple, inject some posion, and then glue it back? :o
2011-05-27 19:51:57 UTC <byorgey> exactly!
2011-05-27 19:52:08 UTC <tg_> Alan Turing would be proud!
2011-05-27 19:52:11 UTC <tg_> [too soon?]
2011-05-27 19:52:53 UTC <tg_> there's a guy whos time on this Earth was cut *far* too short
2011-05-27 19:53:04 UTC <byorgey> indeed
2011-05-27 19:53:06 UTC <luite> byorgey: that's why I thought some lower level hack might be appropriate here, something that looks more like the C fork() call, but that doesn't destroy the RTS
2011-05-27 19:53:14 UTC <tg_> he was just getting started, too
2011-05-27 19:53:15 UTC <tg_> :(
2011-05-27 19:53:40 UTC <byorgey> luite: maybe post it as a stack overflow question
2011-05-27 19:59:15 UTC <luite> that might be a good idea
2011-05-27 20:05:11 UTC <luite> I'll try to find out some more about the GhcT type first
2011-05-27 20:05:17 UTC <luite> and bug a few more irc channels ;p
2011-05-27 20:05:25 UTC <byorgey> =)
2011-05-27 20:06:04 UTC <byorgey> I'm going to go finish adding clipping
2011-05-27 20:20:43 UTC <tg_> byorgey: can you tell me how I should change the "import Prelude" line to get rid of the compiler warning
2011-05-27 20:20:57 UTC <tg_> https://github.com/technogeeky/mpppc/blob/master/src/Text/PrettyPrint/MPPPC/OneDim/Combinators/Tok.hs
2011-05-27 20:21:54 UTC <tg_> Warning: The import of prelude is redundant except perhaps to import instances from 'Prelude'
2011-05-27 20:23:03 UTC <tg_> i'll ask in #haskell with hpaste
2011-05-27 20:23:05 UTC <ClaudiusMaximus> tg_: import Prelude() ;maybe?
2011-05-27 20:23:15 UTC <tg_> ClaudiusMaximus: nope, that's an error
2011-05-27 20:25:04 UTC <ClaudiusMaximus> tg_: omit the line completely?
2011-05-27 20:25:20 UTC <tg_> ClaudiusMaximus: i'm afraid to do that because he actually uses a function replicate()
2011-05-27 20:25:30 UTC <tg_> it does get rid of the error, though
2011-05-27 20:26:31 UTC <ClaudiusMaximus> i think you can have multiple definitions of the same name in scope, but it's only an error when you try to use it unqualified
2011-05-27 20:34:22 UTC <tg_> ClaudiusMaximus: I think he's intends to do that, but I haven't a clue yet
2011-05-27 20:34:32 UTC <tg_> ClaudiusMaximus: #haskell told me to get rid it using a pragma
2011-05-27 20:35:11 UTC <ClaudiusMaximus> pasted my bounding box implementation here http://hpaste.org/paste/47142/bounding_boxes_annotation#p47145
2011-05-27 21:01:54 UTC <ClaudiusMaximus> what's the best way to layer diagrams with transparency?
2011-05-27 21:27:46 UTC <tg_> ClaudiusMaximus: I think byorgey is working on that now? that's alpha stuff, right?
2011-05-27 21:36:37 UTC <ClaudiusMaximus> i guess so
2011-05-27 21:53:17 UTC <luite> hmm, I think I almost have a MonadtransPeel instance now, but the GhcT type has some restrictions on the underlying monad that I need to get into it
2011-05-27 21:55:43 UTC <tg_> luite: fight through it, I need yoU! :o
2011-05-27 21:55:59 UTC <luite> hehe ;p
2011-05-27 21:56:10 UTC <luite> insert rocky music
2011-05-27 21:57:04 UTC <tg_> indeed
2011-05-27 21:57:22 UTC <byorgey> ClaudiusMaximus: well, you can draw diagrams with transparent colors using lcA and fcA
2011-05-27 21:57:38 UTC <tg_> (but ...)
2011-05-27 21:57:39 UTC <byorgey> something like    foo # fcA (blue `withOpacity` 0.3)
2011-05-27 21:57:44 UTC <tg_> oh, no but
2011-05-27 21:57:51 UTC <byorgey> there is a but
2011-05-27 21:58:52 UTC <byorgey> the but is that if you want to take a diagram that you have already given colors to, there's (currently) no way to say "now make this whole diagram transparent"
2011-05-27 21:59:09 UTC <byorgey> but if that's something people want I could think about how to add that
2011-05-27 21:59:56 UTC <byorgey> actually, I was just working on generalizing style combination to use arbitrary semigroup instances for attributes
2011-05-27 22:00:01 UTC <byorgey> which should make it easier
2011-05-27 22:01:03 UTC <byorgey> ClaudiusMaximus: thanks for the bounding box implementation
2011-05-27 22:01:13 UTC <tg_> byorgey: this time, I get to say: I'll take your word for it
2011-05-27 22:01:22 UTC <byorgey> tg_: haha =)
2011-05-27 22:01:37 UTC <byorgey> ClaudiusMaximus: do you want to stick it in a module in diagrams-lib and send me a darcs patch? or would you like me to do it?
2011-05-27 22:02:40 UTC <tg_> byorgey: ok, can you walk me through a troubleshooting step? I'm trying to do:
2011-05-27 22:02:41 UTC <luite> tg_: this is what I have, but it's not correct (last annotation), because of the constraints on the underlying monads http://hpaste.org/paste/47141/how_to_be_eval_annotation#p47148
2011-05-27 22:02:47 UTC <tg_> cabal install darcs
2011-05-27 22:02:50 UTC <tg_> but first, I did:
2011-05-27 22:02:58 UTC <tg_> cabal install --only-deps darcs
2011-05-27 22:03:05 UTC <tg_> which worked all the way through hashed-storage
2011-05-27 22:03:17 UTC <tg_> that fails to link with ExitError 9
2011-05-27 22:03:18 UTC <tg_> http://hackage.haskell.org/packages/archive/hashed-storage/0.5.7/hashed-storage.cabal
2011-05-27 22:03:23 UTC <tg_> that is the link to its cabal file
2011-05-27 22:03:26 UTC <byorgey> tg_: no idea, sorry
2011-05-27 22:03:34 UTC <tg_> what in there tells me where I should look for C libs and whatnot
2011-05-27 22:03:43 UTC <tg_> things outside of haskell
2011-05-27 22:04:46 UTC <tg_> kk
2011-05-27 22:09:48 UTC <ClaudiusMaximus> byorgey: i'm not too familiar with darcs, but if you want to clean it up and put it in diagrams-lib, would be handy i think
2011-05-27 22:12:21 UTC <luite> tg_: it doesn't use external C dependencies as far as I can see
2011-05-27 22:12:36 UTC <luite> tg_: but it does have a C source file
2011-05-27 22:14:31 UTC <ClaudiusMaximus> gnarg.  adjustDia in diagrams-cairo defeats my attempt to clip my diagram
2011-05-27 22:17:15 UTC <tg_> luite: I gave up and used the distro version
2011-05-27 22:17:31 UTC <tg_> luite: since it's the same version
2011-05-27 22:28:37 UTC <luite> tg_: I'm going to try to use the GHC API directly instead of going through hint
2011-05-27 22:30:42 UTC <tg_> luite: ok
2011-05-27 22:31:15 UTC <tg_> hint is "a huge subset of the GHCI api" "wrapped in a simpler API"
2011-05-27 22:31:18 UTC <tg_> hmmmmm
2011-05-27 22:31:45 UTC <luite> yes, the main problem is that the GHC API changes often
2011-05-27 22:32:29 UTC <tg_> luite: so hint "wraps" that up in an API that is less likely to change?
2011-05-27 22:33:52 UTC <luite> yes, and is easier to use, it re-throws exceptions and stuff
2011-05-27 22:33:56 UTC <luite> and probably much more :)
2011-05-27 22:35:10 UTC <tg_> at this point then
2011-05-27 22:35:16 UTC <tg_> I would go ahead and post a general question on stackexchange
2011-05-27 22:35:24 UTC <tg_> and see if there might be another angle of attack
2011-05-27 22:35:34 UTC <tg_> and then, try moving up to the ghc lib
2011-05-27 22:35:50 UTC <tg_> that way if in 10 hours or so you haven't gotten it going, maybe someone else will point you in another direction
2011-05-27 22:46:52 UTC <ClaudiusMaximus> oops, not cairo backend to blame, it's withBounds that is -- XXX this isn't quite right!  Need to think about this a bit more...
2011-05-27 22:58:50 UTC <tg_> holy crap
2011-05-27 22:58:59 UTC <tg_> compiling just locked up my vm!
2011-05-27 23:01:59 UTC <luite> did you have swap space enabled?
2011-05-27 23:02:07 UTC <tg_> yep
2011-05-27 23:02:15 UTC <tg_> i rebooted it, building
2011-05-27 23:02:17 UTC <tg_> i am getting a GHC panic
2011-05-27 23:02:34 UTC <tg_> loading package ghc-7.0.2 ... ghc: This ELF file contains no symtab
2011-05-27 23:02:46 UTC <tg_> ghc: panic! the ('impossible' happened)
2011-05-27 23:04:10 UTC <tg_> In the meantime, the workaround is to not strip it.
2011-05-27 23:04:45 UTC <luite> what did you strip, and why?
2011-05-27 23:04:49 UTC <tg_> I didn't
2011-05-27 23:04:50 UTC <tg_> it's a known bug
2011-05-27 23:04:54 UTC <tg_> http://hackage.haskell.org/trac/ghc/ticket/5004
2011-05-27 23:06:33 UTC <tg_> ok i'm tired of messing with this
2011-05-27 23:06:36 UTC <tg_> i'm gonna go workout, bbl
2011-05-27 23:29:59 UTC <ClaudiusMaximus> some layers of substitutions superimposed http://claudiusmaximus.goto10.org/g/tilings/ammann-a3-patch-alpha-enhanced.png  (cropped and colour-enhanced in gimp)
2011-05-27 23:32:14 UTC <luite> oooh
2011-05-27 23:35:46 UTC <ClaudiusMaximus> my roadmap (such as there is one..) for this messing around is to make zooming animations where larger layers fade out and smaller layers fade in
2011-05-27 23:36:18 UTC <luite> your next task is to optimize diagrams to make that possible ;)
2011-05-27 23:37:00 UTC <ClaudiusMaximus> i don't mind the waiting (that image took around 30 seconds for the svg)
2011-05-27 23:37:13 UTC <luite> whoah
2011-05-27 23:37:23 UTC <ClaudiusMaximus> but i was running in ghci uncompiled
2011-05-27 23:38:25 UTC <ClaudiusMaximus> last 7 levels of a tree 12 levels deep, with an average of 3 subtiles per tile
2011-05-28 00:09:47 UTC <byorgey> ClaudiusMaximus: woah, cool!!
2011-05-28 00:10:02 UTC <byorgey> ClaudiusMaximus: the withBounds thing is fixed in darcs
2011-05-28 00:16:19 UTC <byorgey> ClaudiusMaximus: also, clipping turns out to be slightly more difficult than I thought
2011-05-28 00:16:37 UTC <byorgey> it is still quite possible, I just have to think for a bit about the right way to refactor things to allow it cleanly
2011-05-28 00:22:15 UTC <ClaudiusMaximus> i'm currently trying to figure out how to modify the style of a diagram
2011-05-28 00:23:20 UTC <ClaudiusMaximus> http://hpaste.org/47154/modify_style is how far i've got, which is not very
2011-05-28 00:36:27 UTC <byorgey> hmmm
2011-05-28 00:37:25 UTC <byorgey> you're not really supposed to be able to directly 'modify' attributes
2011-05-28 00:37:39 UTC <ClaudiusMaximus> ok
2011-05-28 00:37:48 UTC <byorgey> but in the darcs version every attribute forms a Semigroup (i.e. Monoid without identity element)
2011-05-28 00:38:17 UTC <byorgey> so we need to come up with an appropriate semigroup for combining colors
2011-05-28 00:38:33 UTC <byorgey> oh! I've got it
2011-05-28 00:38:43 UTC <byorgey> what if opacity is a separate attribute from color
2011-05-28 00:39:03 UTC <byorgey> that forms a monoid under multiplication
2011-05-28 00:39:16 UTC <byorgey> er, semigroup
2011-05-28 00:39:28 UTC <byorgey> so you would be able to say "make this diagram 25% more transparent" or whatever
2011-05-28 00:39:36 UTC <ClaudiusMaximus> yeah that'd be cool
2011-05-28 00:40:07 UTC <byorgey> ok that's not actually that hard to implement (famous last words)
2011-05-28 00:40:49 UTC <ClaudiusMaximus> but then you might want to do funky stuff like "rotate this diagram's colours 37.4 degrees clockwise in YUV colour space" - would that be possible too?  or am i thinking about this in the wrong way...
2011-05-28 00:41:01 UTC <byorgey> haha, woah
2011-05-28 00:42:06 UTC <byorgey> I'll have to think about it more
2011-05-28 00:42:21 UTC <byorgey> I'm definitely not convinced we have exactly the right design for attributes yet
2011-05-28 00:42:46 UTC <ClaudiusMaximus> i guess there comes a point where you have to decide what the scope of the library is, and the name makes it fairly clear
2011-05-28 00:43:48 UTC <ClaudiusMaximus> at the moment i have colours etc hardcoded in my diagrams - i think i'd be better off "naming" them
2011-05-28 00:43:58 UTC <byorgey> yeah, I think if you wanted to do something like that color rotation thing, then you should just parametrize your diagram creation functions by a YUV colour space rotation in the first place
2011-05-28 00:44:09 UTC <byorgey> yeah
2011-05-28 00:44:26 UTC <byorgey> of course you can do the opacity like that too -- make the opacity a parameter to your diagrams
2011-05-28 00:44:58 UTC <byorgey> but opacity is common enough and it seems easy enough to add it as a separate attribute
2011-05-28 00:45:24 UTC <ClaudiusMaximus> then using something like CSS - say, every tile with a name "L-shaped tile" has this colour, every tile in level "n" has opacity 1 - 1/n, or something like that
2011-05-28 00:46:14 UTC <byorgey> yeah, I wanted to avoid a complicated system like that for specifying properties after the fact
2011-05-28 00:46:31 UTC <byorgey> although I certainly am sympathetic to the idea of separating styling from "content"
2011-05-28 00:47:00 UTC <ClaudiusMaximus> ok
2011-05-28 00:47:15 UTC <byorgey> but since a function to construct a diagram can just take a Style as an argument and use it, it's not that bad
2011-05-28 00:47:44 UTC <byorgey> you don't have to think of everything you might want to customize beforehand and make a separate argument for each thing
2011-05-28 00:48:12 UTC <ClaudiusMaximus> hm
2011-05-28 00:50:11 UTC <ClaudiusMaximus> do you mean something like in my case i could make a    Map (TileID, ZoomLevel) Style   and pass that to my tiling generator?
2011-05-28 00:51:04 UTC <luite> ugh I'm getting frustrated... I tried making my own forkProcess ghc primitive from the original rts sources, but it's difficult to compile because you need way too many rts internals...
2011-05-28 00:51:41 UTC <byorgey> ClaudiusMaximus: sure, or just a function  TileID -> ZoomLevel -> Style
2011-05-28 00:52:30 UTC <byorgey> ClaudiusMaximus: then your tiling generator uses it to compute a style and apply it
2011-05-28 00:53:11 UTC <byorgey> ClaudiusMaximus: and if there are some attributes that will always be the same you can just apply those directly -- and they can be overridden by the Style depending on which you apply first
2011-05-28 00:54:21 UTC <ClaudiusMaximus> maybe actually using CSS would be the best in my case - can cairo svg backend include embedded CSS?
2011-05-28 00:54:41 UTC <byorgey> I don't know
2011-05-28 00:54:59 UTC <byorgey> probably not, I don't remember seeing anything about CSS in the cairo docs
2011-05-28 00:55:05 UTC <ClaudiusMaximus> ok
2011-05-28 00:55:11 UTC <ClaudiusMaximus> ainly i just want to tweak the opacity of a few layers without having to render the whole thing again :)
2011-05-28 00:56:23 UTC <byorgey> makes sense =)
2011-05-28 00:59:27 UTC <byorgey> ClaudiusMaximus: I'm recording the darcs patch importing your bounding box code, how should I list your name and email?
2011-05-28 00:59:40 UTC <byorgey> so you are properly credited
2011-05-28 01:01:17 UTC <ClaudiusMaximus> byorgey: if you must, Claude Heiland-Allen claudiusmaximus#goto10.org
2011-05-28 01:01:28 UTC <ClaudiusMaximus> :)
2011-05-28 01:01:37 UTC <byorgey> yes, I insist =)
2011-05-28 01:04:18 UTC <ClaudiusMaximus> so, cairo gives no control over svg output it seems from a message on a graphviz list
2011-05-28 01:06:17 UTC <luite> yay I can fork off new processes now, and evaluate hint in them
2011-05-28 01:06:22 UTC <byorgey> ah, too bad
2011-05-28 01:06:26 UTC <byorgey> luite: yay!!
2011-05-28 01:06:47 UTC <luite> byorgey: unfortunately I probably leave the rts in an inconsistent state
2011-05-28 01:06:51 UTC <byorgey> ClaudiusMaximus: hpc was working on a native SVG library for Haskell
2011-05-28 01:06:54 UTC <byorgey> luite: heh
2011-05-28 01:07:03 UTC <luite> so this might have been a pointless exercise
2011-05-28 01:07:16 UTC <byorgey> ClaudiusMaximus: so perhaps eventually it will be possible to go directly via that and have a bit more control over it
2011-05-28 01:07:58 UTC <luite> byorgey: I copied the forkProcess primitive from the rts, renamed the function and modified it to just return to the code, instead of running an IO action
2011-05-28 01:09:29 UTC <byorgey> wow, yuck =)
2011-05-28 01:09:30 UTC <ClaudiusMaximus> byorgey: cool
2011-05-28 01:10:00 UTC <luite> this might be the most terriblest thing I've done with haskell :)
2011-05-28 01:10:45 UTC <ClaudiusMaximus> i think i'll adopt a hybrid approach for my mini-project - render images with 'diagrams', then composite the layers with opengl
2011-05-28 01:11:12 UTC <byorgey> ClaudiusMaximus: that sounds like a good approach
2011-05-28 01:11:57 UTC <byorgey> ClaudiusMaximus: especially if you are going to be doing some fading in/out or whatever, compositing with OpenGL will be MUCH faster than re-rendering each frame with different opacities using diagrams
2011-05-28 01:15:27 UTC <ClaudiusMaximus> yep
2011-05-28 01:16:21 UTC <ClaudiusMaximus> maybe it would be fun to have a diagrams-cairo-opengl thingy to render diagrams using cairo to opengl textures
2011-05-28 01:17:44 UTC <byorgey> oh, I helped manju_ get some code working to do that
2011-05-28 01:18:23 UTC <luite> aren't there packages that can do that without cairo?
2011-05-28 01:18:44 UTC <byorgey> ClaudiusMaximus: http://hpaste.org/47135/spinning_sierpinski_opengl
2011-05-28 01:18:51 UTC <luite> not that it's very important, but the haskell platform does contain glut and gl, so that would make windowed graphics possible without extra deps
2011-05-28 01:19:10 UTC <byorgey> yes, I'd like to have an opengl backend for diagrams eventually
2011-05-28 01:23:57 UTC <hpc> ooh, that would be awesome
2011-05-28 01:24:06 UTC <alpounet> indeed
2011-05-28 01:24:34 UTC <ClaudiusMaximus> byorgey: cool, will have to try it later
2011-05-28 02:53:37 UTC <tg_> byorgey: you don't need necessarily to go all the way
2011-05-28 02:53:51 UTC <tg_> one could just use a CUDA- or OpenCL- type background to do computation
2011-05-28 03:30:39 UTC <ClaudiusMaximus> it worked! http://claudiusmaximus.goto10.org/g/tilings/ammann-a3-zoom.ogv
2011-05-28 03:37:35 UTC <luite> nice. did you use opengl for compositing?
2011-05-28 03:38:04 UTC <ClaudiusMaximus> yep
2011-05-28 04:01:28 UTC <ClaudiusMaximus> better version (mipmaps etc) http://claudiusmaximus.goto10.org/g/tilings/ammann-a3-zoom-2.ogv
2011-05-28 04:14:15 UTC <luite> do you have a hd version? :)
2011-05-28 04:15:17 UTC <ClaudiusMaximus> can do, but the textures are only 1024x1024 so it might not look that great - i could reconvert from the svg i suppose..
2011-05-28 05:39:01 UTC <ClaudiusMaximus> luite: http://claudiusmaximus.goto10.org/v/misc/ammann_a3_dynamo.mkv (30MB)
2011-05-28 12:30:32 UTC <hpc> haha, that music
2011-05-28 12:38:53 UTC <ClaudiusMaximus> i ported the opengl compositing part from haskell to puredata+gem to sync it up with music in real time - changing colours, zooming in and out, spinning around - needs more work though, is a bit too random at the moment...
2011-05-28 12:53:41 UTC <luite> oh I hadn't even notice that there was sound :)
2011-05-28 12:56:38 UTC <luite> bah these ubuntu scrollbars are buggy
2011-05-28 13:50:53 UTC <luite> tg_: I have fork support working by the way
2011-05-28 13:51:35 UTC <luite> but some underlying issues need to be resolved, I need to force the GHC API to load all modules before the fork
2011-05-28 13:51:45 UTC <luite> otherwise it doesn't help much :)
2011-05-28 14:03:07 UTC <luite> byorgey: don't your text adventures have grues?
2011-05-28 16:28:32 UTC <tg_> [ You are eaten by a grue. ]
2011-05-28 17:53:52 UTC <hpc> someone should write a text adventure in haskell with opengl
2011-05-28 17:53:56 UTC <hpc> just to be pointless
2011-05-28 18:21:57 UTC <tg_> I also nominate that 'pointless' never be used in the sense that 'pointfree' could be used.
2011-05-28 18:22:00 UTC <tg_> that irritates me
2011-05-28 18:51:24 UTC <luite> tgeeky: yay solved the forking problem stuff
2011-05-28 18:51:35 UTC <tgeeky> luite: excellent
2011-05-28 18:52:16 UTC <luite> I can now fork a new, completely initialized, ghc api process in 0.04 seconds
2011-05-28 18:52:37 UTC <tgeeky> define "completely initalized"?
2011-05-28 18:52:51 UTC <tgeeky> "ready to accept input for evalution"?
2011-05-28 18:52:53 UTC <luite> around 100 packages from hackage linked in memory
2011-05-28 18:53:12 UTC <tgeeky> that's pretty fast
2011-05-28 18:53:23 UTC <luite> nah loading the 100 packages takes a few seconds
2011-05-28 18:53:27 UTC <luite> but I do that in the main process
2011-05-28 18:53:36 UTC <luite> forking the child just copies the entire memory space
2011-05-28 18:53:36 UTC <tgeeky> the fork-ed processes inherit that?
2011-05-28 18:53:41 UTC <tgeeky> how big is it?
2011-05-28 18:53:46 UTC <luite> dunno, big probably ;p
2011-05-28 18:53:49 UTC <luite> but it's copy on write
2011-05-28 18:53:57 UTC <luite> so that shouldn't matter
2011-05-28 18:54:10 UTC <tgeeky> depends on the OS, I guess
2011-05-28 18:54:18 UTC <luite> yes but the OS is fixed, linux
2011-05-28 18:54:37 UTC <luite> I'll need to add more OS specific stuff later
2011-05-28 18:54:41 UTC <tgeeky> can you check to see how big it is with just Prelude and then with the 100 packages, just for reference?
2011-05-28 18:54:55 UTC <luite> ptracing the children, to catch them when they try to fork or do illegal system calls
2011-05-28 18:55:59 UTC <luite> I want to allow a few forks (for example for calling graphviz or another external program in a safe way), but fork bombs should be defused
2011-05-28 18:56:52 UTC <luite> I don't have the complete program yet, only a benchmark thing that loads a few modules, then forks off 100 processes and does a simple evaluation in each of them
2011-05-28 18:57:19 UTC <tgeeky> ok, but progress aplenty still
2011-05-28 18:57:28 UTC <luite> with forking, those 100 evals take ~3.4 seconds on my home server
2011-05-28 18:57:40 UTC <luite> if I do those 100 evals in the same process it's about 125ms
2011-05-28 18:58:20 UTC <luite> so forking still has a lot of overhead, but it only needs to be done when the process is killed due to some abnormal circumstance, timeout, crash, illegal action etc
2011-05-28 18:58:20 UTC <tgeeky> hum
2011-05-28 18:58:47 UTC <tgeeky> are you setting up a [thread, spark, whatever] pool?
2011-05-28 18:58:52 UTC <tgeeky> and pulling them out to eval?
2011-05-28 18:58:57 UTC <luite> no I use separate processes for isolation
2011-05-28 18:59:15 UTC <tgeeky> but can't you still do that within the seperate proces?
2011-05-28 18:59:31 UTC <tgeeky> you mean each eval being totally isolated from every other eval
2011-05-28 18:59:40 UTC <tgeeky> and all of them isolated from the server
2011-05-28 18:59:51 UTC <luite> well not totally isolated form each other, evals still run in the same process sequentially
2011-05-28 19:00:10 UTC <luite> otherwise each request would need a fork, that's too much overhead
2011-05-28 19:00:27 UTC <tgeeky> hm
2011-05-28 19:00:29 UTC <luite> and the evaluators are single-threaded (necessary due to limitations in the RTS)
2011-05-28 19:00:36 UTC <luite> but I run a pool of evaluators
2011-05-28 19:00:43 UTC <luite> currently 10, can be increased
2011-05-28 19:01:16 UTC <tgeeky> ok
2011-05-28 19:01:23 UTC <luite> anyway I do need a patched hint, where I just expose some constructors that are normally hidden, so that I can get to the underlying GHC monad
2011-05-28 19:01:42 UTC <tgeeky> you went back to hint?
2011-05-28 19:02:11 UTC <luite> yeah, hint is still useful, but I do need some low level ghc api things
2011-05-28 19:02:27 UTC <luite> but redoing everything without hint would take a lot more time
2011-05-28 19:02:42 UTC <luite> so I'll do this for now, it's only a few lines that need to be changed
2011-05-28 19:02:44 UTC <tgeeky> gonna wrap that up into a new hint-something hackage file?
2011-05-28 19:02:51 UTC <tgeeky> s/hackage/cabal/
2011-05-28 19:02:57 UTC <luite> yes, but I won't upload it to hackage
2011-05-28 19:03:03 UTC <luite> since it really breaks encapsulation
2011-05-28 19:03:10 UTC <luite> probably just gitit
2011-05-28 19:03:18 UTC <luite> err
2011-05-28 19:03:19 UTC <luite> github
2011-05-28 19:03:55 UTC <tgeeky> kk
2011-05-28 19:04:00 UTC <tgeeky> let me know when you upload something I can play with
2011-05-28 19:04:11 UTC <luite> not yet, security first
2011-05-28 19:04:14 UTC <tgeeky> i am currently getting experience understanding and documenting other people's (undocumented) code
2011-05-28 19:04:19 UTC <luite> that's the next thing
2011-05-28 19:04:25 UTC <luite> oh don't look at my code for that
2011-05-28 19:04:26 UTC <luite> :p
2011-05-28 19:04:30 UTC <tgeeky> nah
2011-05-28 19:04:31 UTC <tgeeky> i won't :)
2011-05-28 19:04:36 UTC <tgeeky> i am messing with mpppc
2011-05-28 19:04:42 UTC <tgeeky> which has 0 docs
2011-05-28 19:04:42 UTC <luite> really, it's quite bad, lots of things that I don't have experience with
2011-05-28 19:04:52 UTC <tgeeky> blah all good
2011-05-28 19:05:02 UTC <luite> and low level api stuff for not terribly well documented api's etc ;p
2011-05-28 19:05:09 UTC <tgeeky> well this package
2011-05-28 19:05:15 UTC <tgeeky> has 0 documentation, 0 usage, 0 examples
2011-05-28 19:05:20 UTC <tgeeky> I don't even know if it does anything :o
2011-05-28 19:05:31 UTC <luite> yeah that's a common problem with hackage packages...
2011-05-28 19:05:55 UTC <tgeeky> i figure I can kill two birds with one stone: document it myself (to learn good practices with haddock)
2011-05-28 19:06:02 UTC <tgeeky> and then publish it with docs
2011-05-28 19:06:06 UTC <luite> hehe good idea
2011-05-28 19:06:10 UTC <tgeeky> and also learn how to read code that I had no hand in writing
2011-05-28 19:06:15 UTC <tgeeky> to figure out the process
2011-05-28 19:06:25 UTC <tgeeky> it doesn't use too many weird extensions, so I should be good
2011-05-28 19:06:46 UTC <tgeeky> and there exist other, similar packages (pretty printers of various types) that are similar enough that I can use them to figure out this thing
2011-05-28 19:06:49 UTC <luite> anyway I'm going to do something else now, already spent far too long with this forking thing
2011-05-28 19:06:57 UTC <tgeeky> how punny
2011-05-28 19:07:20 UTC <tgeeky> by the way
2011-05-28 19:07:30 UTC <tgeeky> nevermind
2011-05-28 19:07:31 UTC <tgeeky> back to work
2011-05-28 19:07:33 UTC <luite> hopefully the syscall tracing is the last really low-level thing that's necessary, and the remaining performance issues can be solved by caching results
2011-05-28 19:08:46 UTC <tgeeky> yeah, that sounds like a "bad thing" to me, given my knowledge of the linux kernel (my CS degree was in systems and kernels)
2011-05-28 19:08:59 UTC <tgeeky> in the sense that intercepting syscalls is rather damn low-level
2011-05-28 19:09:16 UTC <tgeeky> then again, it *is* the "membrane" where all the exploits will fall through
2011-05-28 19:09:21 UTC <luite> there's already an example (in haskell even) that does something similar
2011-05-28 19:09:25 UTC <tgeeky> so it might be the most appropriate place to do it
2011-05-28 19:09:51 UTC <luite> it's for the #c++ channel lambdabot, a thing that can evaluate c++ code safely
2011-05-28 19:09:59 UTC <luite> an it's written in haskell
2011-05-28 19:10:21 UTC <tgeeky> that's clever
2011-05-28 19:10:32 UTC <tgeeky> i was going to mention (before nevermind)
2011-05-28 19:10:40 UTC <tgeeky> that you are unwittingly implementing the idea backend for lambdabot2.0
2011-05-28 19:10:47 UTC <tgeeky> s/idea/ideal/
2011-05-28 19:11:27 UTC <luite> probably not, setup is going to much more complex than ideal for lambdabot
2011-05-28 19:11:34 UTC <tgeeky> have you seen lambdabot?
2011-05-28 19:11:39 UTC <tgeeky> lol
2011-05-28 19:11:51 UTC <luite> lambdabot is pretty simple, just the mueval command line program for eval
2011-05-28 19:11:59 UTC <luite> ok the lambdabot code is messy
2011-05-28 19:12:08 UTC <tgeeky> right, but all of the structure outside of the eval is sitting there
2011-05-28 19:12:15 UTC <luite> but it doesn't need additional daemons, or specific operating system support
2011-05-28 19:12:16 UTC <tgeeky> you're building an eval that could subsume that structure
2011-05-28 19:12:33 UTC <tgeeky> it does require linux
2011-05-28 19:12:45 UTC <luite> doesn't it build on bsd or os x?
2011-05-28 19:12:55 UTC <tgeeky> s/linux/unix/
2011-05-28 19:13:11 UTC <tgeeky> anyway, we'll see
2011-05-28 19:13:15 UTC <tgeeky> just get on with it, we'll see what we can do with it later
2011-05-28 19:13:27 UTC <luite> hmm, ok, well this eval thing can probably be made to work on other systems that support the appropriate posix calls
2011-05-28 19:13:51 UTC <tgeeky> the thing that your work would let one do
2011-05-28 19:14:01 UTC <tgeeky> is allow the backend to be seperate from the irc-bot connector
2011-05-28 19:14:21 UTC <luite> it already is somewhat, a separate executable
2011-05-28 19:14:23 UTC <tgeeky> and hence, you can imagine, if your backend caches things that are typed in Wolfgang, the same cached results would be accessable from the ircbot frontend
2011-05-28 19:14:49 UTC <luite> oh that's true, it would be possible to enter code on the wiki and show results in irc
2011-05-28 19:14:57 UTC <tgeeky> you could do a relatively simple transform of, instead of displaying images (inline), you just display a link to the result
2011-05-28 19:15:13 UTC <tgeeky> which is still terribly useful
2011-05-29 15:40:57 UTC <byorgey> ClaudiusMaximus: http://patch-tag.com/r/byorgey/diagrams-lib/snapshot/hash/20110529020846-1e371-4944a1a5c65f35d6c719db59a165bd7560b9d008/patch
2011-05-29 15:51:10 UTC <luite> nice, does it also have transparency grouping?
2011-06-02 14:52:10 UTC <manjunath> hello
2011-06-02 14:52:14 UTC <manjunath> byorgey, are you around ?
2011-06-02 14:52:24 UTC <manjunath> anyone here ?
2011-06-02 14:52:25 UTC <byorgey> hi manjunath
2011-06-02 14:52:35 UTC <manjunath> I am trying to compile diagrams-cairo
2011-06-02 14:52:41 UTC <manjunath> so I built Setup.hs
2011-06-02 14:52:56 UTC <manjunath> I have downloaded the diagrams-cairo from patch-tag darcs
2011-06-02 14:53:03 UTC <byorgey> ok
2011-06-02 14:53:15 UTC <manjunath> Configuring diagrams-cairo-0.2...
2011-06-02 14:53:15 UTC <manjunath> Setup: At least the following dependencies are missing:
2011-06-02 14:53:15 UTC <manjunath> cmdargs ==0.6.*,
2011-06-02 14:53:15 UTC <manjunath> diagrams-core >=0.1 && <0.3,
2011-06-02 14:53:15 UTC <manjunath> diagrams-lib >=0.1 && <0.3
2011-06-02 14:53:18 UTC <manjunath> I get this error
2011-06-02 14:53:30 UTC <manjunath> I have diagrams-lib and diagrams-core installed
2011-06-02 14:53:33 UTC <manjunath> using cabal
2011-06-02 14:54:19 UTC <byorgey> manjunath: what is the output of  ghc-pkg list diagrams-core  ?
2011-06-02 14:54:21 UTC <manjunath> diagrams-core and diagrams-lib is 1.1
2011-06-02 14:54:40 UTC <manjunath> /home/manjunath/.ghc/x86_64-linux-6.12.3/package.conf.d
2011-06-02 14:54:41 UTC <manjunath>    diagrams-core-0.1.1
2011-06-02 14:55:47 UTC <byorgey> manjunath: well, for one thing, you should not compile Setup.hs yourself, you can just run 'cabal install' from within the diagrams-cairo directory
2011-06-02 14:56:06 UTC <byorgey> but I am still trying to figure out why it says diagrams-core and diagrams-lib are missing
2011-06-02 14:56:24 UTC <manjunath> /home/manjunath/.ghc/x86_64-linux-6.12.3/package.conf.d
2011-06-02 14:56:24 UTC <manjunath>    diagrams-cairo-0.1.2
2011-06-02 14:56:32 UTC <manjunath> so does it mean it is already installed
2011-06-02 14:56:35 UTC <manjunath> I did that
2011-06-02 14:56:51 UTC <manjunath> I thought it download older version from internet and installed it
2011-06-02 14:56:58 UTC <byorgey> oh, I know why, it is because if you run Setup.hs yourself it by default tries to install it globally, so it cannot use the locally installed packages
2011-06-02 14:57:08 UTC <manjunath> ah...ok
2011-06-02 14:57:08 UTC <byorgey> 0.1.2 is not the latest darcs version
2011-06-02 14:57:19 UTC <manjunath> ok...one more thing then
2011-06-02 14:57:51 UTC <byorgey> however, the latest darcs version of diagrams-cairo needs the latest darcs versions of diagrams-core and diagrams-lib as well
2011-06-02 14:58:03 UTC <byorgey> so I think you do not have all the latest patches
2011-06-02 14:58:13 UTC <manjunath> diagrams-cairo how to install profiling libraries then ?
2011-06-02 14:58:21 UTC <manjunath> ah..ok
2011-06-02 14:59:13 UTC <byorgey> manjunath: my recommendation is to get diagrams-core, diagrams-lib, and diagrams-cairo all from patch-tag (make sure you do  'darcs pull' in the diagrams-cairo directory you already have)
2011-06-02 14:59:41 UTC <manjunath> darcs failed:  Not a repository: http://patch-tag.com/r/byorgey/diagrams-lib (Failed to download URL http://patch-tag.com/r/byorgey/diagrams-lib/_darcs/inventory: HTTP response code said error)
2011-06-02 14:59:52 UTC <byorgey> then install them in that order by going into each directory and executing 'cabal install -p'
2011-06-02 14:59:57 UTC <manjunath> darcs get http://patch-tag.com/r/byorgey/diagrams-lib
2011-06-02 15:00:03 UTC <manjunath> is that correct ?
2011-06-02 15:00:05 UTC <byorgey> the -p will enable profiling
2011-06-02 15:00:12 UTC <byorgey> hmm, it should be
2011-06-02 15:00:12 UTC <manjunath> ah...ok
2011-06-02 15:00:54 UTC <manjunath> it fails I am using commands from here http://code.google.com/p/diagrams/
2011-06-02 15:01:21 UTC <byorgey> yes, it seems that patch-tag is down =(
2011-06-02 15:01:35 UTC <manjunath> ah :-(
2011-06-02 15:01:47 UTC <manjunath> I am o-_-o BTW
2011-06-02 15:02:02 UTC <manjunath> reinstalled Ubuntu OS so I could profile the app
2011-06-02 15:02:13 UTC <byorgey> ah, ok
2011-06-02 15:02:16 UTC <manjunath> the OpenGL + Diagrams
2011-06-02 15:02:28 UTC <byorgey> right
2011-06-02 15:02:29 UTC <manjunath> in hindsight that was a stupid thing to do
2011-06-02 15:02:34 UTC <byorgey> hehe
2011-06-02 15:02:43 UTC <manjunath> because I just should've installed the profiling libraries
2011-06-02 15:03:23 UTC <byorgey> yes, I don't see how reinstalling your OS will help =)
2011-06-02 15:03:41 UTC <byorgey> if you learn anything interesting from the profiling I would be very interested to hear it
2011-06-02 15:03:48 UTC <manjunath> sudo apt-get install libghc6-cairo-prof failed in the older version of the OS
2011-06-02 15:04:06 UTC <byorgey> I have not done any work yet optimizing diagrams and I am sure that it can be sped up quite a lot.
2011-06-02 15:04:28 UTC <manjunath> I will take a look, I definitely want to see, if I am doing anything stupid
2011-06-02 15:04:44 UTC <byorgey> I doubt it
2011-06-02 15:05:22 UTC <manjunath> oh..don't be so sure, I couldn't program myself out of a wet paper bag
2011-06-02 15:05:49 UTC <byorgey> haha
2011-06-02 15:09:08 UTC <byorgey> I have sent an email to the patch-tag administrator and also to the user group
2011-06-02 15:09:13 UTC <byorgey> seems like the web server is down
2011-06-02 16:22:09 UTC <tg_> byorgey: thanks for all of your help yesterday
2011-06-02 16:22:20 UTC <tg_> I restarted my investigation with a new set of notes and got all the way to the end of that section
2011-06-02 16:22:35 UTC <tg_> the hiccups were:
2011-06-02 16:22:53 UTC <tg_> my incorrect reading of driver step state (which you corrected)
2011-06-02 16:23:00 UTC <tg_> my misuse of ***, in that
2011-06-02 16:23:06 UTC <tg_> :t id (***) id
2011-06-02 16:23:07 UTC <tg_> and
2011-06-02 16:23:13 UTC <tg_> :t (id *** id)
2011-06-02 16:23:31 UTC <tg_> are not the same in terms of what the type checker spits out
2011-06-02 16:23:37 UTC <tg_> so hence
2011-06-02 16:24:00 UTC <tg_> :t (id (***) inverse cons) -- is not the same as :t (id *** inverse cons)
2011-06-02 16:24:28 UTC <tg_> lot of lost time due to those two misunderstandings, but onward!
2011-06-02 16:28:05 UTC <byorgey> ah, yes, that's sort of sneaky
2011-06-02 16:28:09 UTC <byorgey> glad you got it figured out
2011-06-02 16:29:47 UTC <tg_> a hopefully quick question:
2011-06-02 16:30:09 UTC <tg_> the point of why Control.Isomorphism.Partial.Unsafe is 'unsafe'
2011-06-02 16:30:43 UTC <tg_> is because the haskell type check cannot prove the safety of Iso fg?
2011-06-02 16:30:56 UTC <byorgey> right
2011-06-02 16:31:11 UTC <byorgey> it exports the constructor Iso so you are free to stick any old functions you like in there
2011-06-02 16:31:21 UTC <tg_> And this is forever hopeless, it can't ever be done - one must demonstrate that the specific thing your are making using Iso f g, is safe
2011-06-02 16:31:23 UTC <byorgey> and there is no way to check that they actually form a partial isomorphism
2011-06-02 16:31:36 UTC <byorgey> tg_: it could be done in, say, AGda
2011-06-02 16:31:40 UTC <byorgey> but not Haskell
2011-06-02 16:31:58 UTC <tg_> so instead of proof, this thing is 'demoted' to asking for a demonstration of correctness (in terms of what haskell will let you do)
2011-06-02 16:32:06 UTC <tg_> but if you can demonstrate correctness, then haskellers should just get on with it?
2011-06-02 16:32:50 UTC <tg_> that is, demonstrate isomorhisms for a specific set of functions you claim to cover enough cases to be useful (list, trees, whatever)
2011-06-02 16:33:15 UTC <byorgey> I'm not sure I understand what you are asking
2011-06-02 16:33:20 UTC <tg_> ok, it seems to me
2011-06-02 16:33:28 UTC <tg_> the entire paper up through the chapter I was working with yesterday
2011-06-02 16:33:30 UTC <tg_> was all about
2011-06-02 16:33:56 UTC <tg_> partial isomorphisms on: data [a] = ...
2011-06-02 16:34:26 UTC <tg_> it was all about partial isomorphisms on Lists, and how you could use that to make a parser/printer
2011-06-02 16:34:34 UTC <tg_> but not partial isomorphisms on more complicated structures
2011-06-02 16:34:49 UTC <tg_> is that right?
2011-06-02 16:35:20 UTC <byorgey> right, they used lists in many of their examples (since lists are in some sense the simplest non-trivial recursive type) but it is not hard to see how to extend the techniques to more complicated structures
2011-06-02 16:35:45 UTC <tg_> but they have only *demonstrated* (so far) that this technique works on Lists
2011-06-02 16:35:52 UTC <byorgey> at least, it is not hard for people familiar with such things
2011-06-02 16:36:27 UTC <byorgey> well, but again, anyone familiar with functional programming can easily see that the technique works on a large class of data types
2011-06-02 16:36:43 UTC <tg_> ok, can you quickly think of a counterexample?
2011-06-02 16:36:50 UTC <byorgey> a counterexample to what?
2011-06-02 16:37:06 UTC <tg_> something that can't be demonstrated to be safe
2011-06-02 16:37:15 UTC <tg_> they mention (|||) isn't something because of mplus
2011-06-02 16:37:51 UTC <tg_> 'the mediating aroow for sums is constructed with 'Either' - this is not a proper partial iso because of 'mplus'
2011-06-02 16:38:12 UTC <tg_> while I like that word 'aroow', i meant 'arrow' lol
2011-06-02 16:38:16 UTC <byorgey> hmm, let me go read that again
2011-06-02 16:38:49 UTC <tg_> byorgey: http://hackage.haskell.org/packages/archive/partial-isomorphisms/0.2/doc/html/src/Control-Isomorphism-Partial-Prim.html
2011-06-02 16:40:47 UTC <byorgey> I think what they mean there is that if some x :: a  and y :: b  both map to the same  z :: c  in the forward direction, then in the backward direction z will only map to a
2011-06-02 16:40:56 UTC <byorgey> because mplus always chooses the first alternative if it is successful
2011-06-02 16:41:29 UTC <byorgey> do they talk about (|||) in the paper?
2011-06-02 16:41:41 UTC <tg_> at the end, after all of the main stuff
2011-06-02 16:41:46 UTC <tg_> in 'things needing further work'
2011-06-02 16:41:54 UTC <tg_> I haven't gotten to it, because I need to do simple template haskell stuff now
2011-06-02 16:42:54 UTC <byorgey> I don't see any mention of it in the future work section
2011-06-02 16:43:53 UTC <tg_> nope, not in the paper
2011-06-02 16:44:02 UTC <tg_> i assumed that it was in there since they talked about the other Either things
2011-06-02 16:44:14 UTC <tg_> but I guess it's included in the source as a warning?
2011-06-02 16:44:58 UTC <byorgey> I don't think they ever need (|||) in the paper
2011-06-02 16:45:05 UTC <tg_> they don't, or they never typed it :o
2011-06-02 16:45:06 UTC <byorgey> and you can do a lot with Either without needing it
2011-06-02 16:46:25 UTC <tg_> I once asked this from conal, and got some great papers out of it
2011-06-02 16:46:43 UTC <tg_> can you give me your short list of 'must read' papers about [funpro, haskell, types, category theory, etc]
2011-06-02 16:46:52 UTC <tg_> even if these include *your* papers
2011-06-02 16:47:03 UTC <tg_> just a small list would be nice :o
2011-06-02 16:47:44 UTC <tg_> conal gave me 'Why Functional Programming Matters', 'The next 700 Programming Languages', and 'Can programming be liberated from the Von Nuemann architecture?'
2011-06-02 16:48:14 UTC <byorgey> those are good ones
2011-06-02 16:48:20 UTC <byorgey> let's see...
2011-06-02 16:50:28 UTC <byorgey> I am having trouble coming up with good recommendations off the top of my head
2011-06-02 16:50:37 UTC <byorgey> but I am sure I will think of some eventually
2011-06-02 16:51:16 UTC <tg_> ok, books would be fine too
2011-06-02 16:51:30 UTC <tg_> but if you think of one, just blurt it out ;)
2011-06-02 16:52:38 UTC <byorgey> tg_: "Types and Programming Languages" by Benjamin Pierce is good
2011-06-02 16:52:56 UTC <tg_> hehe, is he your advisor? :o
2011-06-02 16:53:05 UTC <tg_> upenn :o
2011-06-02 16:53:14 UTC <byorgey> he isn't actually my advisor =)
2011-06-02 16:53:19 UTC <byorgey> but I do work with him
2011-06-02 16:53:19 UTC <tg_> hehe
2011-06-02 16:53:27 UTC <tg_> hey, inside information!
2011-06-02 16:53:34 UTC <byorgey> I already thought it was a good book before I came to penn =)
2011-06-02 21:06:28 UTC <byorgey> STOP: clipping time   http://www.cis.upenn.edu/~byorgey/Clip.png
2011-06-02 21:06:32 UTC <byorgey> =D
2011-06-02 21:35:49 UTC <alpounet> uh ?
2011-06-02 21:46:42 UTC <alpounet> what's... this ? :p
2011-06-02 21:52:10 UTC <byorgey> alpounet: diagrams now supports clipping paths
2011-06-02 21:52:30 UTC <byorgey> alpounet: that picture is of a square being clipped by another square at a 45 degree angle
2011-06-02 21:54:56 UTC <alpounet> oooh
2011-06-02 21:55:01 UTC <alpounet> great!
2011-06-02 21:58:07 UTC <byorgey> hmm, now to decide what to work on next
2011-06-02 21:58:17 UTC <byorgey> probably I should make another release
2011-06-02 22:01:18 UTC <alpounet> well
2011-06-02 22:01:22 UTC <alpounet> what's your roadmap ?
2011-06-02 22:48:30 UTC <byorgey> alpounet: that's what I need to decide =)
2011-06-02 23:02:23 UTC <luite> ooh ooh, pick me, pick me ;p
2011-06-02 23:02:28 UTC <luite> I want to suggest text support
2011-06-02 23:04:37 UTC <tg_> byorgey: liar! that's a stop sign before printing TEXT
2011-06-02 23:04:48 UTC <tg_> which, happily, luite suggests you solve! That stop sign is missing letters!
2011-06-02 23:05:18 UTC <tg_> s/TEXT/STOP/
2011-06-02 23:14:47 UTC <alpounet> so that the next sample will be a complete STOP sign
2011-06-02 23:15:20 UTC <alpounet> diagrams, drawing stop signs since 2011
2011-06-02 23:16:50 UTC <tg_> byorgey: plus, once you complete text rendering and make the sign say STOP, you'll also have further instructions.
2011-06-03 01:50:52 UTC <tg_> luite: how goes it today, good sir
2011-06-03 01:52:36 UTC <luite> headache :(  perhaps 3:50 am isn't te best time to be trying to do sysadmin stuffs
2011-06-03 01:53:04 UTC <tg_> indeed not :(
2011-06-03 01:53:10 UTC <tg_> best of luck though
2011-06-03 15:25:45 UTC <byorgey> luite: OK.  Text is Next! =)
2011-06-03 16:10:51 UTC <luite> byorgey: great :)
2011-06-03 17:24:00 UTC <tgeeky> byorgey: so what's the approach?
2011-06-03 17:24:10 UTC <tgeeky> if you wouldn't mind laying out in english in a few lines
2011-06-03 17:24:13 UTC <tgeeky> how do you approach something like that
2011-06-03 18:07:04 UTC <byorgey> tgeeky: http://code.google.com/p/diagrams/wiki/TextSupport
2011-06-03 18:07:23 UTC <byorgey> although I think I already don't agree with a couple things I wrote there
2011-06-03 18:07:25 UTC <byorgey> but I forget which
2011-06-03 18:09:30 UTC <tgeeky> byorgey: that's good
2011-06-03 18:09:32 UTC <tgeeky> (that yo forgot)
2011-06-03 18:11:14 UTC <luite> byorgey: hmm, I don't think converting text to path should be the only way to handle text dimensions
2011-06-03 18:11:36 UTC <tgeeky> byorgey: should that say: glyph (height, width) is an attribute?
2011-06-03 18:12:03 UTC <luite> byorgey: although it will probably be a nice feature to have
2011-06-03 18:12:30 UTC <tgeeky> it's clear to me however
2011-06-03 18:12:39 UTC <tgeeky> that you are attacking this in a much more sophisticated manner than I can even think
2011-06-03 18:14:03 UTC <luite> text is extremely tricky if you want to get everything right :)
2011-06-03 18:14:20 UTC <luite> so it's best not to want that :p
2011-06-03 18:14:36 UTC <tgeeky> yes, obviously
2011-06-03 18:14:42 UTC <tgeeky> Knuth has a thing or two hundred to say about that
2011-06-03 18:15:10 UTC <luite> but it would be great if there's basic text support so that diagrams can be used in some packages that use cairo at the moment
2011-06-03 18:16:39 UTC <luite> although wolfgang should support cairo directly as well
2011-06-03 18:17:23 UTC <tgeeky> i don't see cairo as being that useful, but that's maybe because I don't understand it and/or that I really need to emphasize animation (and interactivity)
2011-06-03 18:17:42 UTC <tgeeky> but I clearly don't understand it that well, since supposedly you can just an SVG into a web browser, and assign attributes to its parts
2011-06-03 18:17:59 UTC <luite> it's useful because it's already being used for some things, some plotting packages use it for example
2011-06-03 18:18:17 UTC <luite> I don't think cairo supports those attributes
2011-06-03 18:18:48 UTC <tgeeky> i thought it was the browser that had to do it
2011-06-03 18:18:55 UTC <tgeeky> ACTION shrugs
2011-06-03 18:18:58 UTC <tgeeky> i can't focus on that yet
2011-06-03 18:19:02 UTC <tgeeky> my haskell chops need to come a long way
2011-06-03 18:19:18 UTC <luite> you still need to output the javascript for them, or at least id's for the nodes
2011-06-03 18:19:25 UTC <tgeeky> yeah, which is pretty easy
2011-06-03 18:19:31 UTC <tgeeky> once you have a diagrams description of things
2011-06-03 18:19:38 UTC <tgeeky> parse the code you used to generate it
2011-06-03 18:19:46 UTC <luite> yes with diagrams, but not with just cairo
2011-06-03 18:20:54 UTC <luite> I have privilege domain transitions working at the moment by the way, and I'm installing a new virtual machine for developing the wolfgang backend in the new more secure (hopefully) setting
2011-06-03 18:22:33 UTC <tgeeky> ok
2011-06-03 18:22:48 UTC <luite> oh and selinux is annoying... if your policy violates some global constraint, it will just say which line in your policy is not accepted, but it doesn't say which constraint... you can just grep the whole selinux policy for all constraints (neverallow lines) and check them all manually...
2011-06-03 18:23:08 UTC <tgeeky> surely there's a package that supports that
2011-06-03 18:23:30 UTC <tgeeky> but yeah
2011-06-03 18:23:39 UTC <tgeeky> any security package whose default troubleshooting is "turn it off"
2011-06-03 18:23:39 UTC <tgeeky> lol
2011-06-03 18:25:56 UTC <luite> there's a "turn it off" mode for selinux that still logs all policy violations
2011-06-03 18:26:48 UTC <tgeeky> good for figuring out who hosed your system :o
2011-06-03 18:27:17 UTC <luite> it's meant for debugging :)
2011-06-03 18:29:03 UTC <luite> when I have a proper server for wolfgang, and the evaluator finally works in selinux, I'll invite a few irc people to try and break it
2011-06-03 18:33:16 UTC <luite> still thinking of getting a hetzner server
2011-06-03 21:10:05 UTC <byorgey> 0.2 is released!
2011-06-03 21:10:21 UTC <byorgey> nothing too amazing, just lots of little accumulated improvements
2011-06-04 02:18:57 UTC <luite> yay partial selinux bindings done
2011-06-04 05:37:10 UTC <sordina> I've been working on an AST representation for diagrams similar to gloss: https://github.com/sordina/Diagrams-AST
2011-06-04 05:37:26 UTC <sordina> It's still incomplete, but I thought you guys might be interested :)
2011-06-04 08:02:24 UTC <manjunath> anyone here ?
2011-06-04 08:05:08 UTC <manjunath> http://hpaste.org/47422/diagramslib_error
2011-06-04 08:05:25 UTC <manjunath> I get this error when comiling latest diagramslib
2011-06-04 08:05:32 UTC <manjunath> diagrams-lib
2011-06-04 19:39:01 UTC <byorgey> sordina: cool =)
2011-06-04 19:39:29 UTC <byorgey> sordina: let us know when you want to add a link to it from the diagrams website
2011-06-04 19:39:52 UTC <byorgey> Somewhere on the website I am going to create a section of links to related projects
2011-06-04 20:47:34 UTC <tgeeky> hum.
2011-06-04 20:48:23 UTC <tgeeky> byorgey: so, after reading [Hutton 99] on universality and expressiveness of folding
2011-06-04 20:48:32 UTC <tgeeky> I understand several things *much* better
2011-06-04 20:48:44 UTC <tgeeky> and, I think this ought to be mandatory reading (or a derivative document)
2011-06-04 20:49:16 UTC <tgeeky> ideally, maybe even introduced *before* many other things (such as introduced early in LYAH, or earlier in RWH)
2011-06-04 20:51:04 UTC <tgeeky> As a matter of personal taste, I think there's something strange about introducing lists, then all of the functions over them (many of which can or are implemented using folding), and then say, by the way we've got this folding thing
2011-06-04 20:51:57 UTC <tgeeky> I see a similar correlation to what many (but not all) physics introductions do which is to explain applications here and there, implementations, and rules, and then at the "end", explain the foundational role of symmetry and invariants
2011-06-04 20:52:57 UTC <tgeeky> A rather critical observation about symmetries and invariants of them, is that our brains *are* in a sense hardwired to percieve them
2011-06-04 21:01:17 UTC <luite> I also think it's strange that elementary school teaches arithmetic and numbers before properly covering the foundations. In fact it's hard to see how children can even use those things without proper knowledge of mathematical logic and the axiom schemes, and skipping intermediate things like group and ring theory altogether. They are even required to use abstract symbols like '1' and '2', that don't even have a direct connection with the axioms.
2011-06-04 21:04:28 UTC <tgeeky> luite: I have to think that's satirical
2011-06-04 21:04:40 UTC <tgeeky> but I am serious, and think those (satirical) objections can be dealt with
2011-06-04 21:06:13 UTC <tgeeky> by the time someone is learning haskell, they probably have a pretty much correct of what a list is
2011-06-04 21:07:50 UTC <luite> for someone who only knows strict languages, a list in haskell probably does have some unexpected properties
2011-06-04 21:08:12 UTC <tgeeky> for someone who knows next to nothing about programming languages
2011-06-04 21:08:17 UTC <tgeeky> you can say simply:
2011-06-04 21:08:38 UTC <tgeeky> a list is a thing with a start and an end
2011-06-04 21:08:58 UTC <tgeeky> the smallest list is that whose start is its end
2011-06-04 21:09:08 UTC <tgeeky> all other lists are bigger (in the middle)
2011-06-04 21:09:22 UTC <tgeeky> or something like that
2011-06-04 21:09:49 UTC <tgeeky> luite: have you read the paper, btw? Hutton 99?
2011-06-04 21:10:11 UTC <luite> I might have, but then it would've been some time ago
2011-06-04 21:10:17 UTC <tgeeky> ok
2011-06-04 21:10:29 UTC <luite> I don't understand your "start" and "end" terminology by the way
2011-06-04 21:10:46 UTC <tgeeky> data List a = Nil | Cons a
2011-06-04 21:11:13 UTC <luite> if you mean "head" and "tail", then it's wrong for the empty list (the smallest list?)
2011-06-04 21:11:18 UTC <tgeeky> no, I don't mean head tail
2011-06-04 21:11:40 UTC <tgeeky> Nil is the end of the list
2011-06-04 21:11:45 UTC <tgeeky> if you have an empty list, that's all you have
2011-06-04 21:11:50 UTC <tgeeky> if you have anything more complicated
2011-06-04 21:11:51 UTC <luite> but in that case, your definition is wrong
2011-06-04 21:12:00 UTC <luite> because not every list has a Nul
2011-06-04 21:12:02 UTC <luite> err, Nil
2011-06-04 21:12:14 UTC <tgeeky> which doesn't?
2011-06-04 21:12:24 UTC <luite> > fix (1:)
2011-06-04 21:12:29 UTC <luite> err no lambdabot
2011-06-04 21:12:42 UTC <tgeeky> that's not a list, that's a function on a list
2011-06-04 21:12:48 UTC <luite> no that is a list
2011-06-04 21:13:07 UTC <tgeeky> ok, sorry
2011-06-04 21:13:10 UTC <tgeeky> I should have said finite
2011-06-04 21:13:10 UTC <tgeeky> above
2011-06-04 21:13:14 UTC <tgeeky> as he does in the paper
2011-06-04 21:13:24 UTC <tgeeky> i thought about typing it several times, but just didn't
2011-06-04 21:13:44 UTC <luite> yeah but infinite lists are exactly one of the differences that will be important for beginners to understand
2011-06-04 21:13:47 UTC <tgeeky> that is more in line with most people's (non-programmers) intuitive understanding of a list
2011-06-04 21:13:58 UTC <tgeeky> yes, true, but then you can specify the differences simply
2011-06-04 21:14:02 UTC <tgeeky> if you've introduced folds
2011-06-04 21:14:44 UTC <tgeeky> as a person writing a tutorial or a book, you want to use *as much existing brainpower* as your reader has
2011-06-04 21:14:51 UTC <tgeeky> not more (because they won't understand)
2011-06-04 21:15:08 UTC <tgeeky> and not less (because they will either be wasting their time, OR they will miss the forest through the trees)
2011-06-04 21:15:36 UTC <tgeeky> most people (non-programmers) will have a notion of a "grocery list"
2011-06-04 21:16:09 UTC <tgeeky> and a notion of doing something to such a list like fold (buying all groceries on the list) -> a kiss on the cheek from a happy wife
2011-06-04 21:16:27 UTC <tgeeky> and something like folding with Maybe
2011-06-04 21:17:01 UTC <tgeeky> (attempting to buy all the groceries on the list, but finding that some are out of stock) -> an explanation of why you didn't get your wife her favorite candies
2011-06-04 21:17:10 UTC <tgeeky> hehe
2011-06-04 21:17:50 UTC <luite> that's starting to sound suspiciously like an explanation with burrito's
2011-06-04 21:18:06 UTC <tgeeky> luite: it seems like the general point of the paper is that [folding] <-> [lists] are more closely connected than any of the things you could actually implement
2011-06-04 21:18:13 UTC <tgeeky> using folding
2011-06-04 21:18:25 UTC <tgeeky> luite: oh? is there some burrito tutorial? :O
2011-06-04 21:19:05 UTC <tgeeky> a google search says monads are like burritos
2011-06-04 21:19:08 UTC <luite> no I mean the "Monads are like burrito's" theme
2011-06-04 21:19:13 UTC <tgeeky> lol, I don't know anything about that
2011-06-04 21:19:46 UTC <tgeeky> anyway, it was just an observation
2011-06-04 21:20:07 UTC <tgeeky> I get the satirical point about learning mathematics in school - that's a hard problem
2011-06-04 21:20:16 UTC <luite> it's sme kind of a joke, in general it's about how monad tutorials try to explain what monads are in general
2011-06-04 21:20:25 UTC <tgeeky> luite: yeah, I see that now
2011-06-04 21:20:25 UTC <luite> and that doesn't help people at all
2011-06-04 21:20:33 UTC <tgeeky> I think my explanation above
2011-06-04 21:20:36 UTC <tgeeky> is perfectly suitable for lists
2011-06-04 21:20:42 UTC <luite> while what does help, is explaining concrete things first
2011-06-04 21:20:43 UTC <tgeeky> because most people have been asked to grocery shop :o
2011-06-04 21:22:26 UTC <tgeeky> any expression like all of my useless exposition above
2011-06-04 21:22:31 UTC <luite> that thing about elementary school by the way, was inspired by the book Mathematics made difficult by Carl E Linederholm
2011-06-04 21:22:35 UTC <tgeeky> can always be taken to mean 'for a person who learns exactly like I do'
2011-06-04 21:22:46 UTC <luite> Linderholm
2011-06-04 21:22:55 UTC <tgeeky> luite: yeah, I have read excerpts from it
2011-06-04 21:23:00 UTC <tgeeky> as well as A Mathemitician's Lament
2011-06-04 21:23:08 UTC <tgeeky> but it is also a very good point
2011-06-04 21:23:30 UTC <tgeeky> learing of mathematics is dominated by historical precedent
2011-06-04 21:23:36 UTC <tgeeky> not by intentional educational design
2011-06-04 21:24:00 UTC <luite> I personally think that a historical context is quite important
2011-06-04 21:24:08 UTC <luite> +teaching
2011-06-04 21:24:10 UTC <tgeeky> I do too
2011-06-04 21:24:14 UTC <tgeeky> *but
2011-06-04 21:24:25 UTC <tgeeky> you have to teach people history before historical contexts make sense
2011-06-04 21:24:31 UTC <tgeeky> and I don't mean the content of history
2011-06-04 21:24:35 UTC <tgeeky> the process of history
2011-06-04 21:24:44 UTC <tgeeky> reconstructing the past through evidence
2011-06-04 21:25:05 UTC <tgeeky> history didn't deal with mathematics at the abstract level we do today
2011-06-04 21:25:36 UTC <tgeeky> evidence that we taught things in some [particular manner], historically
2011-06-04 21:25:47 UTC <tgeeky> is only evidence that we did "good enough" to get to where we are today
2011-06-04 21:26:03 UTC <tgeeky> it's not evidence that we could have done much worse, or much better
2011-06-04 21:26:39 UTC <tgeeky> and it's not evidence that past methods are the only context for future methods [of teaching]
2011-06-04 21:26:46 UTC <tgeeky> in fact, we have good evidence that they should not be :O
2011-06-04 21:27:19 UTC <tgeeky> luite: one interesting example that's *very* recent is that of Kahn Academy, and the reversal of [homework] and [lectures]
2011-06-04 21:28:03 UTC <tgeeky> some middle and elementary school teachers are prescribing homework to watch videos online on youtube about subjects (sets of a few short, 10 min each lectures)
2011-06-04 21:28:15 UTC <tgeeky> and then what would have been homework before
2011-06-04 21:28:25 UTC <tgeeky> becomes group-homework, in the class, with the teacher, and your peers
2011-06-04 21:28:42 UTC <tgeeky> the studies that have been done surrounding this is that they learn *much* more rapidly, and with much better retention
2011-06-04 21:29:49 UTC <tgeeky> it works so well that they are having trouble adding enough extra material to keep the old course plans from falling too short of the entire [semester, quarter, whatever]
2011-06-04 21:30:20 UTC <tgeeky> granted, this is American schools, so it doesn't say much :o
2011-06-04 21:31:14 UTC <luite> but this is about the form of presentation, the order of practice/lectures. not really a restructuring of the order in which the material is presented
2011-06-04 21:31:44 UTC <tgeeky> luite: it actually is
2011-06-04 21:31:51 UTC <tgeeky> because they are finding that they have to restructure even the order
2011-06-04 21:31:58 UTC <tgeeky> to fit in enough lectures to cover a whole semester
2011-06-04 21:32:12 UTC <tgeeky> because they found themselves covering more than 3 times the amount of material than other classes
2011-06-04 21:32:28 UTC <tgeeky> I mean, first of all, 1) this is an example, not proof
2011-06-04 21:32:40 UTC <tgeeky> 2) this is more about student's mindsets (homework sucks, but watching youtube is fun)
2011-06-04 21:32:55 UTC <tgeeky> the point is, we have lots of assumptions on what is and isn't possible to teach young people
2011-06-04 21:33:01 UTC <tgeeky> and they can very well be wrong
2011-06-04 21:33:26 UTC <tgeeky> I sincerely hope wolfgang becomes a tool for teaching
2011-06-04 21:33:33 UTC <tgeeky> as it naturally ought to be
2011-06-04 21:34:03 UTC <luite> well that's exactly what I want it to be
2011-06-04 21:34:08 UTC <tgeeky> yep
2011-06-04 21:34:21 UTC <tgeeky> I also think it could kill several other birds with one stone
2011-06-04 21:34:31 UTC <tgeeky> including a nice web-based haskell IDE
2011-06-04 21:34:38 UTC <tgeeky> and an interactive data explorer
2011-06-04 21:34:51 UTC <tgeeky> and a nice way to write haskell papers
2011-06-04 21:34:51 UTC <luite> not sure about the first, getting a proper IDE gui in javascript is tricky
2011-06-04 21:35:01 UTC <tgeeky> well, we'll find out
2011-06-04 21:35:08 UTC <luite> but I hope to add things like "view type under mouse pointer" and stuff
2011-06-04 21:35:38 UTC <tgeeky> i have a lot of ideas and drawings of what I want to be able to do (in some cases, *need* to be able to do, in order to get a complex point across)
2011-06-04 21:35:54 UTC <tgeeky> and I can see a lot of them being easy once you have the general wolfgang backend going
2011-06-04 21:36:12 UTC <tgeeky> and the more we can write in haskell, the better, of course
2011-06-04 21:36:13 UTC <luite> I hope so, what backend things to you think are required?
2011-06-04 21:37:16 UTC <tgeeky> I'm not totally sure, but one of them is the [literate haskell code] <-> [haskell AST, [comments AST, html AST, computational example AST]] isomorphism
2011-06-04 21:37:34 UTC <tgeeky> which I think can be done relatively easily with this PIso work combined with some hashing trickery
2011-06-04 21:38:09 UTC <tgeeky> if ones has that, it's not hard to build very simple (but very, very rich) wiki
2011-06-04 21:38:25 UTC <tgeeky> if one has that, it's not hard to build arbitrary documents which can reference any of those things (including the wiki)
2011-06-04 21:38:26 UTC <luite> it would be interesting to have a better relation between the ast and text, for ide purposes
2011-06-04 21:38:40 UTC <tgeeky> luite: that's precisely what I am working on
2011-06-04 21:38:46 UTC <tgeeky> a "literate haskell tensor"
2011-06-04 21:38:51 UTC <luite> but I you don't need the wolfgang backend for that
2011-06-04 21:39:02 UTC <tgeeky> I need it to actually evalue the haskell code
2011-06-04 21:39:16 UTC <luite> oh but ghci could also work, right?
2011-06-04 21:39:35 UTC <tgeeky> possibly, but a console enviroment is already obviously too restrictive
2011-06-04 21:39:41 UTC <tgeeky> - no math symbols
2011-06-04 21:39:49 UTC <tgeeky> - no standard pretty anything
2011-06-04 21:39:54 UTC <luite> yes but I mean, for testing your isomorphism program?
2011-06-04 21:39:58 UTC <tgeeky> oh absolutey
2011-06-04 21:40:05 UTC <luite> the pretty typesetting could be added later :)
2011-06-04 21:40:05 UTC <tgeeky> yeah, that's fine
2011-06-04 21:40:08 UTC <tgeeky> i'm not waiting on you
2011-06-04 21:40:13 UTC <tgeeky> in that regard
2011-06-04 21:40:26 UTC <tgeeky> I don't think it is sufficiently easy to write a "tensor" for this in console
2011-06-04 21:40:30 UTC <tgeeky> because of the heavy dependence on readline
2011-06-04 21:40:35 UTC <tgeeky> but maybe it is, I don't know how powerful readline is
2011-06-04 21:40:51 UTC <luite> oh but you could work with an external text file?
2011-06-04 21:40:53 UTC <tgeeky> but I know it's rather easy in HTML, because you can change the document contents "in lace"
2011-06-04 21:41:08 UTC <tgeeky> yeah, the transform looks something like
2011-06-04 21:43:12 UTC <tgeeky> [Document] -> [Expander: (Set AST, MultiSet AST)] <-> Session <-> [Contractor: (Set AST, MultiSet AST)] -> [Document]
2011-06-04 21:44:01 UTC <tgeeky> where the Expanders and Contractors are the abitrarily (document-) ordered
2011-06-04 21:44:13 UTC <tgeeky> the Set AST is the abstract syntax (haskell code)
2011-06-04 21:44:36 UTC <tgeeky> and the Multiset AST is tree of "rich" substitutions in place of whitespace
2011-06-04 21:44:56 UTC <tgeeky> which can be as smiple as replacing whitespace with morewhitespace: ' ' with '   '
2011-06-04 21:45:07 UTC <tgeeky> or can be as complicated as replacing whitespace with a Diagram png file
2011-06-04 21:45:35 UTC <tgeeky> that's basically it, if it makes sense
2011-06-04 21:45:55 UTC <tgeeky> in the console, you have limtations on the transforms
2011-06-04 21:45:58 UTC <luite> not really, but once you have somethign a bit more concrete, it probably will
2011-06-04 21:46:14 UTC <tgeeky> i write an example in hpaste very quickly
2011-06-04 21:46:18 UTC <tgeeky> one sec
2011-06-04 22:10:10 UTC <luite> that is quite a long second
2011-06-04 22:10:17 UTC <tgeeky> luite: one must write :o
2011-06-04 22:10:50 UTC <luite> I might not read it immediately because i'm doing other stuffs, like haskell, in the meantime :p
2011-06-04 22:20:10 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/HelloWorld.png
2011-06-04 22:20:25 UTC <tgeeky> byorgey: you must be in Australia, mate!
2011-06-04 22:20:33 UTC <tgeeky> everything's upside down and backwards!
2011-06-04 22:20:37 UTC <byorgey> a few kinks to be worked out still but we're well on our way to text support =)
2011-06-04 22:20:54 UTC <luite> cool
2011-06-04 22:21:21 UTC <byorgey> I was pleasantly surprised when that actually caused text to show up, even if it is upside-down =)
2011-06-04 22:21:43 UTC <luite> hehe I thought it was intentional :)
2011-06-04 22:21:51 UTC <byorgey> nope =)
2011-06-04 22:21:56 UTC <byorgey> I think I know why it is upside-down though
2011-06-04 22:21:59 UTC <tgeeky> byorgey: I'm sure that someone in Australia can decipher that :o
2011-06-04 22:22:03 UTC <byorgey> hehe
2011-06-04 22:22:08 UTC <tgeeky> it's also backwards, isn't it?
2011-06-04 22:22:17 UTC <tgeeky> it's not a 180 degree rotation, that is
2011-06-04 22:22:32 UTC <tgeeky> it's a per-character 180 degree rotation? :o
2011-06-04 22:22:33 UTC <luite> it's just flipped vertically
2011-06-04 22:22:44 UTC <byorgey> yes, just reflected vertically
2011-06-04 22:22:46 UTC <tgeeky> i didn't look long
2011-06-04 22:22:50 UTC <tgeeky> flipped != reflected :o
2011-06-04 22:22:53 UTC <tgeeky> but yeah
2011-06-04 22:22:57 UTC <luite> not?
2011-06-04 22:23:25 UTC <tgeeky> luite: no, look at it upside down
2011-06-04 22:23:27 UTC <byorgey> it's because cairo uses a coordinate system with the positive y-axis pointing down, but diagrams uses one with the y-axis pointing up
2011-06-04 22:23:40 UTC <byorgey> and I didn't correct for it yet
2011-06-04 22:23:53 UTC <tgeeky> byorgey: a ha! I actually mentioned that a week or two ago :o
2011-06-04 22:24:13 UTC <byorgey> I could be convinced that diagrams should also use a downward-pointing y-axis
2011-06-04 22:24:14 UTC <tgeeky> byorgey: the freedom of choice for {+ or -} with the imaginary axis :o
2011-06-04 22:24:26 UTC <luite> tgeeky: oh "flip vertical" in photoshop actually means reflect in some horizontal line
2011-06-04 22:24:42 UTC <tgeeky> luite: ok
2011-06-04 22:25:12 UTC <byorgey> ok, I'm off for now, talk to you all later
2011-06-04 22:25:59 UTC <tgeeky> cya byorgey
2011-06-04 22:26:51 UTC <tgeeky> luite: ok, hopefully this makes it a little clearer
2011-06-04 22:26:56 UTC <tgeeky> but it demonstrates the idea at least
2011-06-04 22:27:00 UTC <tgeeky> http://hpaste.org/paste/47443/htensor_step_example_annotati#p47447
2011-06-04 22:27:10 UTC <tgeeky> read the post -> annotation 1 -> annotation 2
2011-06-04 22:28:16 UTC <tgeeky> luite: the basic idea is simply: *very* slightly augmented spacing rules on the printing side, and you can recover an isomorphism on a paragrah-of-code level between [printing] and [parsing]
2011-06-04 22:33:41 UTC <luite> don't know about the clearer part...
2011-06-04 22:35:18 UTC <luite> that spacing multiset stuff is from the partial isomorphisms article?
2011-06-04 22:38:48 UTC <tgeeky> no, he specifies it without the multiset, but with an element in the set (' ') which is replaced by functions
2011-06-04 22:39:12 UTC <tgeeky> one for parsing (always used the smallest amount of space allowed)
2011-06-04 22:39:19 UTC <luite> maybe I should read the paper first
2011-06-04 22:39:30 UTC <tgeeky> well, assuming his technique is correct (and he demonstrates)
2011-06-04 22:39:46 UTC <tgeeky> then you can augment it by insisting that all spacing tokens, in each paragrah, are unique
2011-06-04 22:40:42 UTC <tgeeky> and then by injecting a bunch of extra spacing around tokens, you can expand some haskell code out
2011-06-04 22:40:50 UTC <tgeeky> to a "with extra spaces" version
2011-06-04 22:41:00 UTC <tgeeky> then you can just use the fact that
2011-06-04 22:41:06 UTC <tgeeky> [spaces before][token][spaces after]
2011-06-04 22:41:09 UTC <tgeeky> will always be unique
2011-06-04 22:41:11 UTC <tgeeky> to comment the code
2011-06-04 22:41:28 UTC <tgeeky> (per paragraph)
2011-06-04 22:42:04 UTC <luite> but you add comments to the ast? how would you serialize that again?
2011-06-04 22:42:27 UTC <tgeeky> you don't have to, the whole point of his paper
2011-06-04 22:42:31 UTC <tgeeky> is to avoid serialization
2011-06-04 22:43:12 UTC <tgeeky> (not the "whole point" but a large part of it) is to do take this typical situation:
2011-06-04 22:43:15 UTC <luite> but editing code doesn't really work without serialization
2011-06-04 22:44:01 UTC <tgeeky> concrete <throguh> [parser] <gives> abstract
2011-06-04 22:44:02 UTC <tgeeky> and
2011-06-04 22:44:13 UTC <tgeeky> abstract <through> [pretty printer] <gives> concrete
2011-06-04 22:44:20 UTC <tgeeky> there the things between
2011-06-04 22:44:23 UTC <tgeeky> <through> and <gives>
2011-06-04 22:44:30 UTC <tgeeky> are done using serialization and deserialization
2011-06-04 22:44:39 UTC <tgeeky> insetead, use:
2011-06-04 22:44:40 UTC <luite> hmm, sorry I'm too tired to really follow this stuff, we could come back to it later
2011-06-04 22:44:46 UTC <tgeeky> yeah, ok
2011-06-04 22:44:49 UTC <tgeeky> the point is
2011-06-04 22:44:55 UTC <tgeeky> the extension to his paper
2011-06-04 22:45:01 UTC <tgeeky> is to simply take more control over spacing
2011-06-04 22:45:21 UTC <tgeeky> just enough to ensure that each paragarph of code has some additional spacing properties
2011-06-04 22:45:29 UTC <tgeeky> that is enough (hopefully I can prove this!)
2011-06-04 22:47:06 UTC <luite> I have no idea what exactly the purpose of th eextension is, or what you want to prove :)
2011-06-04 22:47:24 UTC <tgeeky> the purpose is to parse lhs without seperating comments from code
2011-06-04 22:47:38 UTC <tgeeky> so that the comments stay localized to the code
2011-06-04 22:48:41 UTC <tgeeky> it's all about chunking up lhs files into small bits (but not too small) and keeping documentation for specific expressions *near* those expressions
2011-06-04 22:48:52 UTC <tgeeky> but no worries, another failed attempt at explaining
2011-06-04 22:48:57 UTC <tgeeky> just indicates that I need demonstrations, not explanations
2011-06-04 22:49:03 UTC <tgeeky> which I suppose I should accept and stop attempting
2011-06-04 22:49:10 UTC <tgeeky> to explain and not demonstrate
2011-06-04 22:49:13 UTC <luite> yes a simple example would probably help a lot
2011-06-04 22:49:24 UTC <tgeeky> well the example was supposed to be all of those dots and ^^^s
2011-06-04 22:49:30 UTC <tgeeky> but it's not clear enough
2011-06-04 22:49:31 UTC <tgeeky> and it was hand written
2011-06-04 22:49:32 UTC <tgeeky> :o
2011-06-04 22:51:25 UTC <luite> was that myFilter function supposed to be the result of prettyprinting some ast with some whitespace transformation?
2011-06-04 22:54:08 UTC <tgeeky> luite: no, it was the observation that using those token lengths, and the fact that the spacing around tokens of the same length (p and x) are different
2011-06-04 22:54:13 UTC <tgeeky> lets you uniquely identify each token
2011-06-04 22:54:45 UTC <tgeeky> you wouldn't print those dots, nor would you ask the programmer to document his code like that
2011-06-04 22:55:33 UTC <tgeeky> but if you have the isomorphism, you could comment it like the top example (where you write comments for the autogenerated ^^^^^^^^'s)
2011-06-04 22:55:46 UTC <tgeeky> and rendered all nice and pretty (however you see fit, with html)
2011-06-04 22:55:57 UTC <tgeeky> using overlays (like you mentioned)
2011-06-04 22:56:11 UTC <tgeeky> or popups, or underlines, or other text decoration, or color
2011-06-04 22:56:17 UTC <tgeeky> or any combination of those things
2011-06-04 23:00:59 UTC <luite> hmm, I don't really see how you can preserve such annotations in an editor
2011-06-04 23:01:37 UTC <luite> suppose the user copies and pastes some of the code to move things around
2011-06-04 23:02:14 UTC <tgeeky> reordering of lines in a paragraph doesn't change the conclusion
2011-06-04 23:02:22 UTC <tgeeky> introducing new lines from outside a paragraph into a paragraph does
2011-06-04 23:02:30 UTC <tgeeky> and so the tensor would have to respace the entire paragraph
2011-06-04 23:03:08 UTC <tgeeky> you can imagine it informally like this:
2011-06-04 23:03:19 UTC <tgeeky> with an editor, we "give up" the tab charcter, replacing it by n-spaces
2011-06-04 23:03:24 UTC <tgeeky> (with haskell in particular)
2011-06-04 23:03:42 UTC <tgeeky> in a browser, we "give up" the tab key, because it takes out out of a text box (though this isn't mandatory)
2011-06-04 23:04:00 UTC <tgeeky> in this editor, we "give up" our spacebar to an auto-tabber-spacer
2011-06-04 23:04:33 UTC <tgeeky> when we press space, it could move us by varying number of spaces, based on the layout of the current paragrah
2011-06-04 23:06:15 UTC <tgeeky> when you copy/paste, whatever rules you came up with for your auto-tabber-spacer, apply to the pasted code
2011-06-04 23:06:50 UTC <tgeeky> we'll see how good it works, it may be infuriating ;)
2011-06-04 23:07:04 UTC <tgeeky> but I am pretty sure it can be done, even if it's weird to use
2011-06-05 04:31:30 UTC <manjunath_> hello
2011-06-05 04:38:03 UTC <luite> morning
2011-06-05 06:07:09 UTC <sordina> Is anyone working on adding text to diagrams?
2011-06-05 06:07:54 UTC <luite> yes byorgey
2011-06-05 06:08:07 UTC <luite> and it works, if you like upside-down reflected text
2011-06-05 18:20:05 UTC <tgeeky> luite: lol
2011-06-05 18:20:35 UTC <tgeeky> luite: Now with text support! (120 lines below) Bug report: text has slight orientation issue.
2011-06-05 19:58:34 UTC <hpc> haha
2011-06-05 20:03:23 UTC <byorgey> I don't see what the big deal is.  Just view your diagrams in a mirror.  While standing on your head.  It's not that hard.
2011-06-06 01:17:02 UTC <luite> hmm, this is great. I talked to conal and he wants exactly what I had in mind for wolfgang, for interactive graphics (the only difference is that I want callbacks to the server) :)
2011-06-06 01:17:50 UTC <luite> although, should I be afraid now that conal can read my mind and steal my ideas? ;p
2011-06-06 02:36:13 UTC <tgeeky> luite: conal, you, and I have been seeing this same project manifest in our mind's eye for some time
2011-06-06 03:05:23 UTC <luite> lalala not hearing you. it was me who thought of it first ;)
2011-06-06 09:11:27 UTC <o-_-o> Hello
2011-06-06 09:11:38 UTC <o-_-o> Is byorgey around ?
2011-06-06 09:13:07 UTC <o-_-o> http://hpaste.org/47502/diagramslib_compile_error
2011-06-06 09:13:23 UTC <o-_-o> I am getting this error can anyone tell me what is wrong ?
2011-06-06 14:45:08 UTC <o-_-o> byorgey: are you around ?
2011-06-06 15:46:08 UTC <byorgey> gah I keep missing o-_-o/manjunath
2011-06-06 15:49:02 UTC <luite> hehe
2011-06-06 15:49:21 UTC <luite> do you know what causes the problem?
2011-06-06 16:03:29 UTC <byorgey> no idea
2011-06-06 16:03:44 UTC <byorgey> probably incompatible versions, unpulled patches, or something like that
2011-06-06 19:14:02 UTC <sordina> luite: Thanks for that! Getting a bit closer with the AST interface. Would it make sense to have this defined in Graphics.Rendering.Diagrams.AST, or not underneath the Diagrams namespace?
2011-06-06 19:16:14 UTC <luite> dunno, byorgey should probably know what he wants to do with that namespace :)
2011-06-06 19:18:02 UTC <byorgey> sordina: my idea was to just use Graphics.Rendering.Diagrams.* for the core library, and put everything else under the top-level Diagrams namespace
2011-06-06 19:18:11 UTC <byorgey> dunno if that's a good idea or not =)
2011-06-06 19:18:22 UTC <byorgey> but otherwise the module names just get too long.
2011-06-06 19:18:31 UTC <sordina> Mmm.
2011-06-06 19:19:09 UTC <byorgey> I guess I wouldn't care as much if there were better tools for managing import lists when writing code =)
2011-06-06 19:19:14 UTC <luite> byorgey: I did find it slighly confusing at first, why not Diagrams.Core or something?
2011-06-06 19:19:57 UTC <byorgey> I don't know.  like I said, it may not have been the best choice.
2011-06-06 19:20:30 UTC <byorgey> perhaps we should discuss it on the mailing list and make a principled decision before it's too late to change?
2011-06-06 19:20:40 UTC <luite> it does make sense if you expect some lower level packages to only use the core
2011-06-06 19:20:56 UTC <sordina> Am I being naive in creating this btw? I'm beginning to think that the same kind of thing might be able to be achieved with Backend.
2011-06-06 19:21:02 UTC <luite> where name clashes may be more likely
2011-06-06 19:22:02 UTC <byorgey> sordina: I don't think so.  I am not sure what you mean by "achieving the same kind of thing with Backend".  Achieving what exactly?
2011-06-06 19:22:23 UTC <luite> "using namespace Graphics.Rendering" "import Diagrams.Monoids" :)
2011-06-06 19:22:48 UTC <luite> that syntax probably not a good idea
2011-06-06 19:24:02 UTC <byorgey> hehe
2011-06-06 19:25:37 UTC <sordina> byorgey: Optimizations, programatic modifications of diagrams, serialization, that sort of thing..
2011-06-06 19:26:03 UTC <luite> hmm, with a backend, you're not supposed to get a diagram back I think?
2011-06-06 19:27:04 UTC <byorgey> sordina: you could write a Backend that will compile to an AST (and you probably should).  But it will lose some information.  You will only get a big list of primitives.
2011-06-06 19:29:02 UTC <sordina> byorgey: Ah. Good idea! I just thought there may be a way to bypass the AST.
2011-06-06 19:30:34 UTC <byorgey> right, not really.  Diagrams does not use a full deep embedding, so unless you build an AST yourself at first there is no way to get all of that information back
2011-06-06 19:38:20 UTC <sordina> Ah. Makes sense. Thanks for your help :)
2011-06-06 21:32:18 UTC <byorgey> hi fryguybob
2011-06-06 21:53:59 UTC <luite> bah my wolfgang backend code is getting way more hairy than I had hoped... lots of unix sockets, signal handlers, message queues
2011-06-06 21:56:52 UTC <fryguybob> Howdy!
2011-06-06 21:56:59 UTC <byorgey> luite: yikes =(
2011-06-06 22:01:13 UTC <luite> byorgey: It's because of all the isolation things. the processes that run the untrusted haskell code each have their own socket.
2011-06-06 22:01:33 UTC <byorgey> luite: right, makes sense.
2011-06-06 22:41:33 UTC <byorgey> almost done with basic text support (font family, size, slant, and weight attributes, and text alignment)
2011-06-06 22:41:49 UTC <byorgey> no text -> path conversion yet.
2011-06-06 22:42:25 UTC <byorgey> going home now, you can expect some nice text support in darcs tomorrow =)
2011-06-06 22:43:08 UTC <luite> oh cool
2011-06-06 22:46:29 UTC <fryguybob> sweet, I've been gone too long :D.
2011-06-07 00:57:40 UTC <byorgey> ok, quick poll: should the color of text be determined by the fill color, the line color, or by a completely separate third attribute?
2011-06-07 00:57:55 UTC <byorgey> what would seem most intuitive/natural to you?
2011-06-07 01:09:00 UTC <fryguybob> byorgey: I would go for fill.
2011-06-07 01:12:52 UTC <luite> hmm
2011-06-07 01:14:19 UTC <luite> fill sounds best
2011-06-07 01:16:30 UTC <byorgey> the people have spoken
2011-06-07 01:17:19 UTC <byorgey> the most blessed attribute for determining the hue of words shall be fill
2011-06-07 01:35:06 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/Text.png
2011-06-07 01:35:24 UTC <luite> yay tekst
2011-06-07 01:35:26 UTC <luite> err text
2011-06-07 01:35:34 UTC <luite> tekst is dutch :)
2011-06-07 01:35:34 UTC <fryguybob> It's beautiful
2011-06-07 01:40:59 UTC <byorgey> and... pushed!
2011-06-07 01:41:08 UTC <byorgey> still needs a bit more commenting/cleanup
2011-06-07 01:41:20 UTC <luite> grate
2011-06-07 01:41:23 UTC <byorgey> but it seems to work!
2011-06-07 01:42:53 UTC <alpounet> good job!
2011-06-07 01:43:03 UTC <luite> have you talked to conal about his plans by the way?
2011-06-07 01:43:33 UTC <byorgey> luite: no, what are his plans?
2011-06-07 01:44:52 UTC <luite> byorgey: he wants to generate "client side interactive graphics", basically something like diagrams that outputs svg or webgl with javascript for basic interactions
2011-06-07 01:45:01 UTC <byorgey> ah, cool
2011-06-07 01:46:46 UTC <luite> yes, and almost exactly the extensions I'd like to see for wolfgang ;)
2011-06-07 01:47:07 UTC <luite> the only difference is that wolfgang can get extra data from the server if required
2011-06-07 01:47:43 UTC <byorgey> right
2011-06-07 01:48:11 UTC <byorgey> but getting extra data from the server is slow, so obviously you would want to do as much as possible in the client
2011-06-07 01:48:16 UTC <luite> yeah
2011-06-07 01:48:37 UTC <luite> but it's not always possible to load everything to the client
2011-06-07 01:48:46 UTC <byorgey> sure.
2011-06-07 01:48:48 UTC <luite> ideally it would work something like google maps
2011-06-07 01:49:03 UTC <byorgey> oh, I see, cool
2011-06-07 01:49:34 UTC <luite> anyway, what conal wants is a pure and declarative way to describe those interactions, something like that would already be a great start
2011-06-07 01:50:07 UTC <alpounet> he's gonna want a frp-ish library for that of course.
2011-06-07 01:50:37 UTC <luite> hehe possibly, but it must all be done within the limitations of statically generated javascript code
2011-06-07 01:51:20 UTC <luite> of course that's not terribly limited because you could generate a haskell interpreter, in theory :)
2011-06-07 01:51:27 UTC <alpounet> :D
2011-06-07 11:21:44 UTC <byorgey> o-_-o: ah, we can talk here
2011-06-07 11:22:12 UTC <byorgey> o-_-o: and diagrams-core compiles without error?
2011-06-07 11:22:30 UTC <o-_-o> byorgey: ok
2011-06-07 11:22:36 UTC <o-_-o> byorgey: yes
2011-06-07 11:23:06 UTC <byorgey> o-_-o: hmm, and then you still get that error with diagrams-lib
2011-06-07 11:23:22 UTC <byorgey> o-_-o: what version of ghc?
2011-06-07 11:23:46 UTC <o-_-o> byorgey: Yes, I just did a darcs pull and then did a cabal -p install and same error
2011-06-07 11:23:58 UTC <o-_-o> 6.12.1
2011-06-07 11:24:23 UTC <byorgey> o-_-o: the other thing to check is whether you have made any inadvertent changes -- what is the result of running 'darcs whatsnew' in diagrams-core and diagrams-lib?
2011-06-07 11:24:24 UTC <o-_-o> It is a problem with semigroups
2011-06-07 11:24:39 UTC <byorgey> hmm?
2011-06-07 11:24:47 UTC <o-_-o> No changes!
2011-06-07 11:25:02 UTC <o-_-o> I changed diagrams-lib.cabal I think
2011-06-07 11:25:31 UTC <o-_-o> The semigroups currently available is 0.5 and diagrams wants 0.4 or less
2011-06-07 11:25:45 UTC <o-_-o> so I bumped up the number, I think that is what is wrong
2011-06-07 11:26:01 UTC <o-_-o> what version of semigroups do you have ? (How do I find mine ?)
2011-06-07 11:26:06 UTC <byorgey> that would not cause this problem
2011-06-07 11:26:29 UTC <byorgey> and I changed the upper bound on semigroups a while ago
2011-06-07 11:26:36 UTC <o-_-o> I have 0.5.0
2011-06-07 11:26:39 UTC <byorgey> so if you have done a darcs pull you would have gotten that change anyway
2011-06-07 11:26:41 UTC <byorgey> so do I
2011-06-07 11:26:46 UTC <o-_-o> ok
2011-06-07 11:26:53 UTC <o-_-o> I thought that was the problem
2011-06-07 11:28:50 UTC <byorgey> hmm, strange
2011-06-07 11:30:18 UTC <byorgey> o-_-o: try going into diagrams-core, do a 'cabal clean' and then 'cabal -p install' and then the same for diagrams-lib
2011-06-07 11:30:28 UTC <o-_-o> byorgey: ok
2011-06-07 11:30:29 UTC <byorgey> worth a try
2011-06-07 11:31:29 UTC <o-_-o> byorgey: It did not work. Same error.
2011-06-07 11:31:33 UTC <byorgey> ok.
2011-06-07 11:31:37 UTC <o-_-o> byorgey: diagrams-core compiled though
2011-06-07 11:31:56 UTC <byorgey> at this point I am wondering if it is a ghc bug.
2011-06-07 11:32:38 UTC <byorgey> o-_-o: when I get to school I will try installing 6.12.1 and see if I get the same error.
2011-06-07 11:32:46 UTC <o-_-o> byorgey: ok
2011-06-07 11:32:57 UTC <o-_-o> how do I install some other version of ghc ?
2011-06-07 11:33:12 UTC <o-_-o> is it possible to just use a different binary or is it more complicated ?
2011-06-07 11:33:15 UTC <byorgey> o-_-o: what operating system do you have?
2011-06-07 11:33:20 UTC <o-_-o> byorgey: ubuntu
2011-06-07 11:33:34 UTC <byorgey> no, it's a little more complicated
2011-06-07 11:33:45 UTC <o-_-o> byorgey: ok...*sigh*
2011-06-07 11:33:49 UTC <byorgey> which ubuntu release?
2011-06-07 11:34:05 UTC <o-_-o> 10.10
2011-06-07 11:34:09 UTC <o-_-o> maverick
2011-06-07 11:36:23 UTC <byorgey> ok, let me look
2011-06-07 11:36:53 UTC <o-_-o> weird cabal update stopped working
2011-06-07 11:38:04 UTC <byorgey> what do you mean?
2011-06-07 11:38:10 UTC <o-_-o> byorgey: nothing it worked
2011-06-07 11:38:13 UTC <o-_-o> I am stupid
2011-06-07 11:38:20 UTC <byorgey> oh, I see, hehe
2011-06-07 11:38:53 UTC <o-_-o> sudo needs to env vars to be respecified on the command-line
2011-06-07 11:39:16 UTC <byorgey> o-_-o: ok, so maverick has version 2010.1.0.0.1 of the Haskell Platform, which is rather old
2011-06-07 11:39:42 UTC <o-_-o> byorgey: ok...anyway to magically upgrade it without upgrading the entire OS ?
2011-06-07 11:40:07 UTC <o-_-o> I am updating cabal to 1.10.1.08711
2011-06-07 11:40:15 UTC <byorgey> o-_-o: if you want to upgrade you should (1) get a binary distribution of ghc from here: http://haskell.org/ghc/download_ghc_7_0_3
2011-06-07 11:40:27 UTC <byorgey> (ignore the STOP warning about the Haskell Platform)
2011-06-07 11:41:03 UTC <byorgey> then (2) get the source distribution of the Haskell Platform here http://hackage.haskell.org/platform/linux.html
2011-06-07 11:41:47 UTC <byorgey> oh, but first for step (0) you should uninstall whatever haskell packages you have through ubuntu
2011-06-07 11:42:00 UTC <o-_-o> byorgey: ok
2011-06-07 11:42:01 UTC <byorgey> so that next time you upgrade it won't clobber your manual install
2011-06-07 11:42:13 UTC <o-_-o> *sigh*
2011-06-07 11:42:20 UTC <o-_-o> oh...well
2011-06-07 11:42:31 UTC <o-_-o> they don't make it easy like in windows do they
2011-06-07 11:42:31 UTC <byorgey> yeah, ubuntu/debian are always rather out of date when it comes to haskell =(
2011-06-07 11:42:43 UTC <o-_-o> ACTION shakes fist at the ghc guys
2011-06-07 11:42:54 UTC <byorgey> it's not the ghc guys' fault.
2011-06-07 11:43:04 UTC <o-_-o> byorgey: I know :-)
2011-06-07 11:45:39 UTC <byorgey> o-_-o: I just realized that I can ssh into my machine at school, so it's currently downloading ghc 6.12.1 =)
2011-06-07 11:45:50 UTC <byorgey> even if you upgrade I still want to check and see
2011-06-07 11:46:21 UTC <o-_-o> hmmm...you know what, I have a recent install of this on one of our clusters
2011-06-07 11:46:38 UTC <o-_-o> I am currently going to get something to eat, I'll be back in a bit
2011-06-07 11:46:47 UTC <byorgey> ok.
2011-06-07 13:06:19 UTC <byorgey> o-_-o: I get the same error when I build with ghc 6.12.1
2011-06-07 13:06:39 UTC <byorgey> o-_-o: so it seems to be a bug in ghc 6.12.1
2011-06-07 13:07:01 UTC <byorgey> o-_-o: however, I have just pushed a workaround (basically just adding a type signature to help out the type inferencer)
2011-06-07 13:07:19 UTC <byorgey> o-_-o: so if you do a darcs pull in diagrams-lib and recompile it ought to work now
2011-06-07 13:26:27 UTC <luite> hmm, my ubuntu has ghc 6.12.3 packages
2011-06-07 13:26:33 UTC <luite> oh
2011-06-07 13:26:34 UTC <luite> maverick
2011-06-07 13:26:43 UTC <o-_-o> luite: can you help with one more error ?
2011-06-07 13:27:06 UTC <luite> uh I can try, but byorgey knows much more about diagrams than I do :)
2011-06-07 13:27:16 UTC <o-_-o> http://hpaste.org/47556/datacolournames_error
2011-06-07 13:27:37 UTC <o-_-o> luite: I have installed the profiling libraries and I still get this error
2011-06-07 13:28:38 UTC <byorgey> o-_-o: you will have to reinstall the colour library with profiling enabled
2011-06-07 13:28:50 UTC <luite> did the profiling libraries install succesfully for everything? it's a known limitation of cabal that it doesn't properly keep track of which profiling libraries are installed
2011-06-07 13:29:11 UTC <o-_-o> Ok...reinstalling again
2011-06-07 13:29:17 UTC <luite> but if you installed the profiling libs for diagrams and it said that all was fine, than this is a strange error
2011-06-07 13:29:23 UTC <luite> then
2011-06-07 13:30:29 UTC <o-_-o> yay!
2011-06-07 13:30:48 UTC <o-_-o> ok...I did a cabal -p install of all the error libraries and now it seems to have built
2011-06-07 13:31:03 UTC <o-_-o> now for diagrams-cairo (dun, dun, dunnnnnnnnn)
2011-06-07 13:31:36 UTC <byorgey> =D
2011-06-07 13:36:09 UTC <o-_-o> cabal: dist/build/autogen/: permission denied
2011-06-07 13:36:09 UTC <o-_-o> cabal: Error: some packages failed to install:
2011-06-07 13:36:12 UTC <o-_-o> any idea ?
2011-06-07 13:36:21 UTC <o-_-o> where will this directory be ?
2011-06-07 13:36:55 UTC <o-_-o> nevermind...I found it
2011-06-07 13:37:37 UTC <byorgey> maybe the permissions got messed up if you accidentally did 'sudo cabal install' at some point in the past?
2011-06-07 13:38:10 UTC <o-_-o> TIL, if cabal says new version of cabal is available why don't you go ahead and do cabal install cabal-install, don't do it!
2011-06-07 13:38:32 UTC <o-_-o> I'm having to rebuild everything
2011-06-07 13:38:45 UTC <o-_-o> yay...diagrams-cairo built
2011-06-07 13:39:05 UTC <o-_-o> actually I don't remember why I was building it in the first place now
2011-06-07 13:39:10 UTC <o-_-o> hmm...
2011-06-07 13:39:50 UTC <o-_-o> heh...I don't remember the name of the directory where I have my programs
2011-06-07 13:39:58 UTC <byorgey> hehe, oops =)
2011-06-07 13:40:07 UTC <byorgey> the new version of cabal-install is nice though
2011-06-07 13:40:28 UTC <o-_-o> ok..found i
2011-06-07 13:40:29 UTC <o-_-o> t
2011-06-07 13:42:25 UTC <o-_-o> toSurface is the one taking the most time
2011-06-07 13:42:36 UTC <o-_-o> I think I wrote it...hmmm
2011-06-07 13:43:05 UTC <o-_-o> no byorgey wrote it :-p
2011-06-07 13:43:44 UTC <o-_-o> byorgey: http://hpaste.org/47557/tosurface
2011-06-07 13:43:49 UTC <byorgey> ACTION whistles innocently
2011-06-07 13:44:16 UTC <o-_-o> heh...
2011-06-07 13:44:59 UTC <byorgey> o-_-o: I expect it is not toSurface itself, but rather the call to renderDia (which actually forces the computation of the whole diagram) which is taking the bulk of the time
2011-06-07 13:45:20 UTC <byorgey> like I said, diagrams is so far completely unoptimized
2011-06-07 13:45:20 UTC <o-_-o> I'll paste the profiling information
2011-06-07 13:46:25 UTC <o-_-o> http://hpaste.org/47558/triangle_profiling_info
2011-06-07 13:46:57 UTC <luite> hmm hpaste is slow
2011-06-07 13:49:05 UTC <o-_-o> Can you optimize lapply' ?
2011-06-07 13:50:12 UTC <luite> I think those thinks should be much faster if they're properly specialized
2011-06-07 13:51:00 UTC <byorgey> sorry, I was playing nikki and the robots
2011-06-07 13:52:00 UTC <o-_-o> haha
2011-06-07 13:52:22 UTC <byorgey> lapply' is from vector-space
2011-06-07 13:52:24 UTC <luite> hehe I don't really want to play a game now but I couldn't resist downloading it :(
2011-06-07 13:52:41 UTC <o-_-o> what ?!
2011-06-07 13:52:52 UTC <byorgey> as luite says, perhaps specialization would help
2011-06-07 13:52:55 UTC <o-_-o> are luite and byorgey same person ?
2011-06-07 13:53:00 UTC <o-_-o> With different nicks ?
2011-06-07 13:53:04 UTC <luite> hehe
2011-06-07 13:53:08 UTC <byorgey> not last time I checked...
2011-06-07 13:53:34 UTC <byorgey> unfortunately, I know approximately zero about haskell optimization
2011-06-07 13:53:44 UTC <o-_-o> byorgey: sorry, I was playing nikki and the robots
2011-06-07 13:53:44 UTC <o-_-o> luite: hehe I don't really want to play a game now but I couldn't resist downloading it :( ?
2011-06-07 13:53:56 UTC <luite> o-_-o: yes, because byorgey mentioned it
2011-06-07 13:54:02 UTC <luite> I didn't know it before
2011-06-07 13:54:05 UTC <luite> but it looked cute
2011-06-07 13:54:07 UTC <o-_-o> luite: I got it now
2011-06-07 13:54:09 UTC <byorgey> we are not the same person, I *did* want to play a game right now ;-)
2011-06-07 13:54:16 UTC <o-_-o> hehe
2011-06-07 13:54:46 UTC <byorgey> anyway, I'm hoping that someone more knowledgeable about optimization will come along and improve diagrams speed
2011-06-07 13:55:00 UTC <byorgey> because at the moment I think my time is best spent improving it in other ways
2011-06-07 13:55:02 UTC <o-_-o> byorgey: haha
2011-06-07 13:55:07 UTC <o-_-o> byorgey: ok
2011-06-07 13:58:38 UTC <luite> hmm, waht do I do when a robot is upside down sitting on its head?
2011-06-07 14:11:17 UTC <byorgey> luite: restart the level, I think =(
2011-06-07 15:57:58 UTC <luite> byorgey: aw :( that might be a usability issue :p
2011-06-07 15:58:30 UTC <byorgey> you mean the robots with the little rockets, right?
2011-06-07 15:58:34 UTC <luite> yes
2011-06-07 15:58:42 UTC <luite> are there more types of robots?
2011-06-07 15:58:48 UTC <byorgey> yes, there are lots
2011-06-07 15:59:00 UTC <luite> oh ok, I've only played a few levels :)
2011-06-07 15:59:28 UTC <byorgey> I think someone else I know was able to turn over a rocket-robot that was on its head somehow
2011-06-07 15:59:31 UTC <byorgey> but I don't know how
2011-06-07 16:00:06 UTC <byorgey> the solution is: Don't Put Robots On Their Head
2011-06-07 16:00:10 UTC <luite> hehe
2011-06-07 16:00:24 UTC <tgeeky> the robots thank you for your efforts
2011-06-07 16:01:19 UTC <tgeeky> byorgey: does this game mean that, finally, someone has code which 'fires the missiles!' as SPJ loves to mention?
2011-06-07 16:03:22 UTC <luite> hmm
2011-06-07 16:06:55 UTC <byorgey> tgeeky: I don't know if there are actually any missiles involved
2011-06-07 16:07:07 UTC <byorgey> tgeeky: but perhaps that should be suggested for future versions =)
2011-06-07 16:08:17 UTC <luite> for Wolfgang, I have regular expressions, which currently must have the typeclass Show. the result of the evaluation is the type of the expression, a String with the result via show.
2011-06-07 16:08:21 UTC <luite> with the new backend that can do IO, and queries can have a result with additional resources. The result (in the communication over the unix socket between interpreter and web service) has type (EvalResult Type Result [Resource], where Type=Result=Data.Text.Text, data Resource = Resource FileName MimeType ByteString  )
2011-06-07 16:09:02 UTC <tgeeky> hmmm
2011-06-07 16:09:24 UTC <luite> but what would be a good way to present those things to the user? it would be quite inconvenient if users had to create IO EvalResult actions for everything
2011-06-07 16:09:41 UTC <tgeeky> i'm not sure I understood what you said already, let me re-read
2011-06-07 16:10:16 UTC <luite> oh by "regular expressions" I meant "pure expressions"
2011-06-07 16:10:22 UTC <luite> sorry for any confusion :p
2011-06-07 16:10:27 UTC <tgeeky> oh
2011-06-07 16:10:28 UTC <tgeeky> lol
2011-06-07 16:10:33 UTC <tgeeky> ok, much less confusing :o
2011-06-07 16:10:51 UTC <tgeeky> i was thinking... why in the world is he using regular expressions to represent evalution?
2011-06-07 16:11:09 UTC <luite> so you can have a pure expression: sum [1..10] or something, and then it will just use Show on the result
2011-06-07 16:11:21 UTC <tgeeky> yeah, ok
2011-06-07 16:11:22 UTC <luite> so the result is then ("55", "Integer")
2011-06-07 16:12:05 UTC <tgeeky> with [Resource] you essentially something that's wrapping around file accesses and the result of accesses?
2011-06-07 16:12:06 UTC <luite> (or actually "(Num a, Enum a) => a" )
2011-06-07 16:12:20 UTC <tgeeky> FileName, MimeType is the type of the file?, and ByteString is the result of reading?
2011-06-07 16:12:44 UTC <luite> hmm
2011-06-07 16:12:54 UTC <luite> I think it might be best to wrap it into some simple library
2011-06-07 16:12:56 UTC <tgeeky> data Resource = Resource FileName MimeType Bytestring
2011-06-07 16:13:02 UTC <tgeeky> well, I was going to suggest
2011-06-07 16:13:05 UTC <tgeeky> the other thing that ought to be in there
2011-06-07 16:13:09 UTC <tgeeky> are the resource limits
2011-06-07 16:13:22 UTC <tgeeky> amount of (time, memory) allowed for work
2011-06-07 16:13:44 UTC <tgeeky> unless that's obviously wrong
2011-06-07 16:13:44 UTC <luite> those aren't visisble to the evaluator at the moment
2011-06-07 16:13:45 UTC <tgeeky> ?
2011-06-07 16:14:08 UTC <tgeeky> so an example that fulfills this type is
2011-06-07 16:14:27 UTC <tgeeky> Resource PrettyPicture.png {picture mimetype} {picture bits} ?
2011-06-07 16:14:28 UTC <luite> I'll add a module later, that has those as constants, but it's not terribly important for most requests
2011-06-07 16:15:08 UTC <luite> every interpreter has a file quota, and the web service won't accept more than some number of resources
2011-06-07 16:15:21 UTC <tgeeky> so, say
2011-06-07 16:15:26 UTC <luite> the expression will automatically get IO exceptions if it runs into those :)
2011-06-07 16:15:42 UTC <tgeeky> Resource /dev/random {text mimetype} {100MB of random bits}
2011-06-07 16:15:47 UTC <tgeeky> wouldn't even finish anyway? :o
2011-06-07 16:16:01 UTC <luite> you can't open /dev/random anyway :)
2011-06-07 16:16:07 UTC <tgeeky> hehe ok
2011-06-07 16:17:04 UTC <luite> but suppose you try to make a 100MB ByteString, then there are three things that can go wrong: 1. you hit the resource limits set for the user/process, interpreter is killed by the operating system killer
2011-06-07 16:17:49 UTC <luite> 2. you take too long (more than 2 seconds) to allocate everything, the control process kills the interpreter
2011-06-07 16:18:25 UTC <luite> 3. you were able to allocate the bytestring in the interpreter and try to send it to the web service. web service denies responses over a certain size
2011-06-07 16:18:34 UTC <luite> (and then requests a kill from the control process)
2011-06-07 16:18:49 UTC <tgeeky> ok
2011-06-07 16:19:07 UTC <luite> actually it's a bit more complicated
2011-06-07 16:20:03 UTC <luite> when a request comes in, the web service will find out which of the interpreters currently serves the client (it doesn't use inteterpreters for multiple clients, unless they are reset first)
2011-06-07 16:20:32 UTC <luite> it then contacts the controller to acquire a lock on that interpreter
2011-06-07 16:20:55 UTC <luite> when the lock is granted, it sends the request over the unix socket for the interpreter and waits for the result
2011-06-07 16:21:20 UTC <luite> the web service has a built-in timeout, if no response is received in the allotted time, then it sends a timeout message to the controller
2011-06-07 16:21:27 UTC <luite> which releases the lock and kills the interpreter
2011-06-07 16:21:57 UTC <luite> if a proper response is received within the time limit, then it just sends a releaseinterpreter query to to the controller, and the interpreter is kept running
2011-06-07 16:23:21 UTC <luite> the controller starts interpreters when a lock is requested. it also kills interpreters that are older than a certain amount of time, and it makes sure that locks are never held for more than a few seconds (kills the interpreter and releases lock after that timeout)
2011-06-07 16:23:50 UTC <byorgey> sounds fancy =D
2011-06-07 16:24:30 UTC <luite> yes, it's much more communication than I'd like, because everything runs under a different userid
2011-06-07 16:25:57 UTC <luite> the controller part is done now :)
2011-06-07 16:26:33 UTC <luite> the interpreter part almost (is not much code anyway), I just need to figure out how to do requests with resources
2011-06-07 16:27:11 UTC <luite> and the web service still needs to me modified to use the new (binary) protocol, and to keep track of which clients use which interpreter
2011-06-07 16:27:16 UTC <byorgey> luite: the resources are for things like e.g. graphics?
2011-06-07 16:27:30 UTC <luite> byorgey: yes
2011-06-07 16:28:26 UTC <luite> for example an SVG with some additional things, like a font or a bitmap that is loaded from a url
2011-06-07 16:29:16 UTC <byorgey> luite: how about just allowing the user to type in expressions of any type; if they enter an expression of type  IO EvalResult then it will be run directly; if they enter an expression of any other type it will get wrapped up in an EvalResult and run
2011-06-07 16:29:29 UTC <byorgey> er, not wrapped up in an EvalResult
2011-06-07 16:29:34 UTC <byorgey> but hopefully you know what I mean
2011-06-07 16:30:28 UTC <byorgey> I also might be misinterpreting your question.
2011-06-07 16:32:46 UTC <luite> I might not have asked my question correctly :) I'm just looking for what would be easiest for the user
2011-06-07 16:33:23 UTC <luite> I'll probably just use Show for pure things
2011-06-07 16:33:46 UTC <luite> and for Show a => IO a, probably execute the IO action and show the a
2011-06-07 16:34:07 UTC <byorgey> yes, that's exactly what ghci does
2011-06-07 16:36:13 UTC <luite> but for resources I either need a different type class EvalResult or something, that would be used instead of Show when available (could be again used in both pure and IO settings in the same way)
2011-06-07 16:36:44 UTC <luite> or some other way, a wrapper type, just an EvalResult a data type, something else?
2011-06-07 16:37:08 UTC <luite> EvalResult a => IO a?
2011-06-07 16:37:59 UTC <luite> the problem is that it might be slightly tricky to get extra type classes into the interpreter :)
2011-06-07 16:38:20 UTC <byorgey> luite: also, what do you do for something that is both EvalReesult and Show?
2011-06-07 16:38:31 UTC <luite> EvalResult probably
2011-06-07 16:38:37 UTC <byorgey> I guess you could handle it but it might be confusing for the user.
2011-06-07 16:38:43 UTC <luite> the result should be the same for the user if it has no resources
2011-06-07 16:39:19 UTC <luite> brb, dinner :)
2011-06-07 16:39:33 UTC <byorgey> luite: ok, I have some other ideas, I'll tell you when you get back
2011-06-07 17:06:42 UTC <luite> I am back
2011-06-07 17:07:22 UTC <byorgey> ok, now let's see if I can remember what my ideas were =)
2011-06-07 17:08:23 UTC <byorgey> oh yes, I was just going to point out that most *end users* of wolfgang are never going to know about this EvalResult thing
2011-06-07 17:08:42 UTC <byorgey> they are just going to use functions provided by someone else which happen to have that return type
2011-06-07 17:09:06 UTC <byorgey> however I imagine you will want people to be able to write plugins etc., and obviously they need to know the types involved
2011-06-07 17:09:57 UTC <luite> true, my reasoning for a typeclass would be that users could enter an expression with type IO (Diagram ...) or just Diagram ...  directly, and then see the result as an image
2011-06-07 17:10:14 UTC <byorgey> oh, I see
2011-06-07 17:10:17 UTC <byorgey> yes, that would be neat
2011-06-07 17:13:37 UTC <luite> maybe something like this would work: class EvalWithResourceAble a where toEvalWithResources :: a -> EvalResult a,   and for non-standard rendering you could make an EvalResult a, or IO (EvalResult a) directly
2011-06-07 17:13:53 UTC <luite> obviously I need to get better at coming up with names ;)
2011-06-07 17:14:07 UTC <byorgey> hehe =)
2011-06-07 17:14:26 UTC <byorgey> well, you can drop the 'to' from 'toEvalWithResources'
2011-06-07 17:14:53 UTC <byorgey> and maybe just 'Eval' instead of 'EvalWithResourceAble'?
2011-06-07 17:14:57 UTC <byorgey> in parallel with 'Show'
2011-06-07 17:14:59 UTC <luite> yes :)
2011-06-07 17:17:20 UTC <luite> I'll have to experiment a bit to see if I can make this work somehow
2011-06-07 17:21:30 UTC <luite> it probably can't be worse than what I have in the current version, which uses show for everything, and writes files behind the user's back with unsafePerformIO :)
2011-06-07 17:27:52 UTC <byorgey> yes, I doubt anything would be worse than that ;)
2011-06-07 17:30:59 UTC <luite> do you know people who are good at linux security by the way? I want someone to try and break it while I can still fix things :)
2011-06-07 17:31:37 UTC <byorgey> hehe, right =)
2011-06-07 17:31:48 UTC <byorgey> I don't, not really
2011-06-07 17:46:12 UTC <luite> I'll ask in -blah when I have the server then, there must be people in there who like breaking stuff
2011-06-07 17:48:23 UTC <byorgey> sounds like a good idea
2011-06-07 22:15:34 UTC <tgeeky> i forgot about -blah
2011-06-08 03:12:07 UTC <luite> byorgey: I have it working now (in a small text program), I try the following, with typeclass Eval a where evalResult :: a -> EvalRes, data EvalRes = EvalRes Text [Resource]
2011-06-08 03:12:16 UTC <luite> and then I evaluate in this order:
2011-06-08 03:12:21 UTC <luite> (expr :: EvalRes)
2011-06-08 03:12:26 UTC <luite> (eval :: IO EvalRes)
2011-06-08 03:12:28 UTC <luite> oops
2011-06-08 03:12:33 UTC <luite> (expr :: IO EvalRes)
2011-06-08 03:12:50 UTC <luite> (evalResult expr :: EvalRes)
2011-06-08 03:12:58 UTC <luite> (evalResult expr :: IO EvalRes)
2011-06-08 03:13:05 UTC <luite> (show expr :: String)
2011-06-08 03:13:18 UTC <luite> (fmap show expr :: IO String)
2011-06-08 03:13:24 UTC <luite> and there's a fmap missing somewhere
2011-06-08 03:13:31 UTC <luite> the first one that succeeds is the result
2011-06-08 03:13:40 UTC <byorgey> fmap evalResult expr :: IO EvalRes
2011-06-08 03:13:54 UTC <luite> that one :)
2011-06-08 03:14:02 UTC <byorgey> cool, that makes sense to me
2011-06-08 03:14:18 UTC <luite> I had hoped to use the typechecker api, instead of just trying to evaluate
2011-06-08 03:14:18 UTC <byorgey> the first one that *succeeds*, or the first one that *typechecks*?
2011-06-08 03:14:27 UTC <byorgey> ah, ok
2011-06-08 03:14:35 UTC <byorgey> but?
2011-06-08 03:14:40 UTC <luite> if you just typechecks, it doesn't check whether there are actually instances for it
2011-06-08 03:15:10 UTC <luite> so for expr="1+1", it typechecks for all these types
2011-06-08 03:15:56 UTC <byorgey> really?
2011-06-08 03:16:03 UTC <luite> err wait, not all
2011-06-08 03:16:17 UTC <luite> not the IO ones
2011-06-08 03:16:26 UTC <luite> and not the monomorphic EvalExpr
2011-06-08 03:16:55 UTC <byorgey> hmm
2011-06-08 03:17:08 UTC <luite> 1+1
2011-06-08 03:17:10 UTC <luite> typeChecks: idER False
2011-06-08 03:17:10 UTC <luite> typeChecks: idS True
2011-06-08 03:17:10 UTC <luite> typeChecks: idIOS True
2011-06-08 03:17:10 UTC <luite> typeChecks: idE True
2011-06-08 03:17:13 UTC <luite> typeChecks: idIOE True
2011-06-08 03:17:15 UTC <luite> 1+1
2011-06-08 03:17:55 UTC <luite> IOE = (Eval a) => IO a
2011-06-08 03:18:04 UTC <luite> E = (Eval a) => a
2011-06-08 03:18:10 UTC <luite> even though there are no instances
2011-06-08 03:18:56 UTC <luite> maybe there are better ways to typecheck :)
2011-06-08 03:19:08 UTC <luite> but I used something like:
2011-06-08 03:19:25 UTC <luite> idIOE :: (Eval a) => IO a -> IO a
2011-06-08 03:19:33 UTC <byorgey> oh, well I certainly believe 1+1 typechecks at type Eval a => a
2011-06-08 03:19:37 UTC <luite> GHC.typeCheck ("idIOE " ++ expr)
2011-06-08 03:19:54 UTC <byorgey> but I *don't* believe that  evalResult (1+1) :: EvalRes  would typecheck
2011-06-08 03:20:04 UTC <luite> oh that's true, that doesn't
2011-06-08 03:20:15 UTC <byorgey> I think you have to actually typecheck the expression wrapped in the evalResult and show calls
2011-06-08 03:21:18 UTC <byorgey> i.e. typecheck the expressions you told me above are the ones that you run =)
2011-06-08 03:23:32 UTC <luite> hmm, I'm afraid you're right ;p
2011-06-08 03:24:13 UTC <luite> although the fmap ones would require some type annotation
2011-06-08 03:25:22 UTC <byorgey> ah, yes
2011-06-08 03:25:29 UTC <byorgey> but you might as well stick type annotations on them all
2011-06-08 03:25:40 UTC <byorgey> since if they typecheck at all you know exactly what types they will be
2011-06-08 03:26:32 UTC <luite> yes everything must be monomorphic
2011-06-08 03:26:49 UTC <luite> since the types might not be available in the wolfgang program
2011-06-08 03:27:24 UTC <luite> hmm
2011-06-08 03:27:28 UTC <luite> don't know if that makes sense
2011-06-08 03:28:08 UTC <byorgey> I'm not sure what you mean by that
2011-06-08 03:28:12 UTC <byorgey> but the types you have make sense to me
2011-06-08 03:28:17 UTC <luite> me neither :)
2011-06-08 03:28:55 UTC <byorgey> =)
2011-06-08 03:30:16 UTC <luite> but it is possible that the first one that typechecks is not the first one that evaluates
2011-06-08 03:31:12 UTC <luite> although it's probable better to fail in those situations
2011-06-08 03:31:18 UTC <luite> *probably
2011-06-08 03:32:03 UTC <byorgey> yes, you do have a choice to make there
2011-06-08 03:35:33 UTC <byorgey> I agree it's probably better to just fail.
2011-06-08 03:49:30 UTC <luite> ok got it working again
2011-06-08 03:49:56 UTC <luite> but I have one last problem
2011-06-08 03:51:39 UTC <luite> if you generate an SVG for example, and you have resources in the EvalRes, for example bitmap images
2011-06-08 03:51:51 UTC <luite> then you need refer to those with a url inside the SVG
2011-06-08 03:52:16 UTC <luite> so you need to know the base location
2011-06-08 03:53:22 UTC <luite> but a fixed base url means that results will overwrite each other, more than one user could generate "image.png" for different pages
2011-06-08 03:53:54 UTC <byorgey> ah, yes, that sounds less than ideal =)
2011-06-08 03:54:30 UTC <luite> a unique prefix for each request would be better, but I need to find a way to present that to the user
2011-06-08 03:54:56 UTC <luite> a global constant baseURL :: String could be done, but I loading constants requires reloading the .hs files\
2011-06-08 03:55:03 UTC <luite> +think
2011-06-08 03:55:31 UTC <byorgey> can't the URL be included with the Resource?
2011-06-08 03:55:55 UTC <luite> no the problem is the other way around
2011-06-08 03:55:59 UTC <byorgey> perhaps I am not understanding the problem
2011-06-08 03:57:15 UTC <luite> for example say you have  type = HTML, EvalRes "<html><img src=http://sompage/image.png"></html>" [Resource "image.png" ByteString]
2011-06-08 03:57:50 UTC <luite> but you need to know where a resource with name "image.png" will end up before you can output the html
2011-06-08 03:58:17 UTC <luite> so it needs to be in the request, not in the result
2011-06-08 04:04:40 UTC <luite> so the type would be something like:   eval :: Expression -> Module -> BaseURL -> IO (EvalRes, Type)
2011-06-08 04:07:41 UTC <luite> hmm, I think I will just make a baseURL :: IO String  in the Wolfgang Prelude
2011-06-08 04:09:22 UTC <luite> since that could just be a readFile "/tmp/baseurl.txt" or something, which can be changed without reloading code
2011-06-08 04:10:30 UTC <luite> (every worker has its own /tmp, that's the only dir the client can write to, and it's cleaned after every request)
2011-06-08 18:20:15 UTC <luite> whoah I can evaluate stuffs in the new backed now
2011-06-08 18:20:25 UTC <luite> within the selinux sandbox
2011-06-08 18:30:56 UTC <tgeeky> sweet!
2011-06-08 18:44:07 UTC <luite> performance seems ok, starting a new worker for a new user takes around 0.04 sec on my test server
2011-06-08 18:44:35 UTC <luite> loading and typechecking a module for a user takes 0.1 sec, time spent in the ghc api and hint
2011-06-08 18:45:02 UTC <byorgey> luite: yay!
2011-06-08 18:48:51 UTC <byorgey> I've almost got Issue 32 squashed (mempty not working properly in things like hcat' with {sep = 1})... it was surprisingly subtle
2011-06-08 18:49:08 UTC <luite> oh, what was the problem?
2011-06-08 18:53:04 UTC <luite> tgeeky: unfortunately the code size is now 10x bigger
2011-06-08 19:01:18 UTC <byorgey> luite: see the note I wrote on the closed ticket if you really want to know: http://code.google.com/p/diagrams/issues/detail?id=32
2011-06-08 19:01:58 UTC <byorgey> it boils down to the fact that composing with the empty diagram doesn't change the bounding region, so you can't rely on the bounding region for doing any positioning afterwards
2011-06-08 19:06:33 UTC <luite> ah
2011-06-08 19:35:18 UTC <tgeeky> luite: but now it's quantifiable in terms of security
2011-06-08 19:35:25 UTC <tgeeky> luite: apples to oranges, then
2011-06-08 19:36:57 UTC <luite> I do need to add a few more security things, but that's just configuration scripts, setting quota and stuff
2011-06-08 19:42:18 UTC <tgeeky> and document the hell out of it :o
2011-06-08 19:42:22 UTC <tgeeky> so us mere mortals can comprehend
2011-06-08 19:43:47 UTC <luite> it's not difficult, just a messy hack job of all kinds of linux security features
2011-06-08 19:45:36 UTC <luite> I hope that it's secure enough, but I still need some people to check (or try to break)
2011-06-08 19:47:59 UTC <tgeeky> i'm sure they'll take the challenge
2011-06-09 01:01:24 UTC <byorgey> hmm, I'm thinking it might be nicer to have things like 'square' and 'circle' take a parameter giving their edge length/radius respectively
2011-06-09 01:01:49 UTC <byorgey> any thoughts? yes? no?
2011-06-09 01:10:14 UTC <hpc> i don't feel i understand enough about diagrams to say what's best
2011-06-09 01:11:26 UTC <hpc> er, about using diagrams
2011-06-09 01:11:37 UTC <tgeeky> byorgey: I could say something about that
2011-06-09 01:12:28 UTC <byorgey> the question is whether it's better to have extremely simple primitives like 'square', 'circle' that you then have to transform... or let them have a parameter or two to customize them
2011-06-09 01:12:29 UTC <hpc> i know that adding the required fields is working well for my SVG library, because those parameters already exist in the spec
2011-06-09 01:12:38 UTC <byorgey> there's a balance to be struck
2011-06-09 01:13:23 UTC <byorgey> tgeeky: ?
2011-06-09 01:14:05 UTC <tgeeky> byorgey: for a circle, you ought to be able specify the circle with (1/radius)*(center x, center y)
2011-06-09 01:14:38 UTC <tgeeky> hmm, but yes
2011-06-09 01:15:04 UTC <tgeeky> you can do squares with an angle and a length only (the length being the distance from the center of the square to one corner)
2011-06-09 01:15:49 UTC <luite> yes it sounds really userfriendly to require irrational numbers for making a unit suare =)
2011-06-09 01:15:52 UTC <luite> square
2011-06-09 01:16:02 UTC <tgeeky> well, I recommend *not allowing* a unit=1 square :o
2011-06-09 01:16:08 UTC <tgeeky> but that's me :o
2011-06-09 01:16:33 UTC <byorgey> o.O
2011-06-09 01:16:38 UTC <tgeeky> byorgey: yeah :(
2011-06-09 01:17:04 UTC <tgeeky> byorgey: circle Area = r * r
2011-06-09 01:17:12 UTC <byorgey> I'm just trying to find the right balance between simplicity and user-friendliness
2011-06-09 01:17:16 UTC <tgeeky> yeah
2011-06-09 01:17:19 UTC <tgeeky> i get it
2011-06-09 01:17:24 UTC <hpc> byorgey: do you want the natural units of diagrams to be dimensions, or do you want the natural dimension to be proportions and scales?
2011-06-09 01:17:25 UTC <tgeeky> just have primitive primitives
2011-06-09 01:17:35 UTC <hpc> "this square is 10 wide, this one 20 wide" vs
2011-06-09 01:17:43 UTC <hpc> "this square is twice the size of that one"
2011-06-09 01:17:48 UTC <tgeeky> byorgey: yeah, that's a better specification - make the minimum thing you can specify is the *area*
2011-06-09 01:17:51 UTC <tgeeky> don't allow specification of points
2011-06-09 01:17:54 UTC <luite> yeah I'd say that square could get a size, and is defined in terms of unitSquare
2011-06-09 01:17:55 UTC <tgeeky> in the default implementations
2011-06-09 01:18:10 UTC <byorgey> luite: yeah, that's what I'm leaning towards
2011-06-09 01:18:44 UTC <byorgey> hpc: well, it's more the first, but the units are arbitrary
2011-06-09 01:19:38 UTC <byorgey> However, I would eventually like to add some constraint-solving sorts of stuff to let you say things like "this square should be twice the size of that one"
2011-06-09 01:19:52 UTC <tgeeky> byorgey: yeah, if you only allow specification of area
2011-06-09 01:20:00 UTC <tgeeky> I guess the key thing
2011-06-09 01:20:05 UTC <tgeeky> is to know the center of everything :o
2011-06-09 01:20:45 UTC <tgeeky> ACTION shrugs
2011-06-09 01:20:45 UTC <byorgey> tgeeky: "only allowing specification of area" may be theoretically interesting but it is intuitively bizarre
2011-06-09 01:20:55 UTC <tgeeky> byorgey: it's implementationally simple, no?
2011-06-09 01:21:04 UTC <tgeeky> then you always know the answer to that constraint-solving
2011-06-09 01:21:31 UTC <byorgey> I am interested in making the *interface* as simple and intuitive as possible, not the implementation
2011-06-09 01:21:35 UTC <luite> hmm, in what situations would you rather specify area than length?
2011-06-09 01:22:01 UTC <byorgey> if there is a tradeoff between simplicity of the user API and the implementation the user API always wins.
2011-06-09 01:22:06 UTC <tgeeky> luite: if you're working with fractals (and most importantly, translating the area of one fractal to another)
2011-06-09 01:22:11 UTC <tgeeky> byorgey: yeah, your library, your choise
2011-06-09 01:22:15 UTC <tgeeky> I am thinking about what I will want, eventually
2011-06-09 01:22:25 UTC <tgeeky> without even knowing how I'd do it in haskell
2011-06-09 01:22:40 UTC <tgeeky> luite: but imagine, for instance, translating the areas of elements inside the sierpinski gasket to a circle fractal
2011-06-09 01:22:49 UTC <tgeeky> it sounds difficult as hell
2011-06-09 01:23:37 UTC <tgeeky> but it ought to not only be possible, but trivially calculable (given the depth)
2011-06-09 01:23:46 UTC <luite> yeah that operation is so common that postscript and asymptote have primitives for that ;)
2011-06-09 01:24:13 UTC <tgeeky> luite: yeah, it sounds nutso, but it's pretty easy to see how it works once you work through all of the circle fractal stuff
2011-06-09 01:24:16 UTC <hpc> perhaps the more ideal approach would be to just give lots of options for creating shapes?
2011-06-09 01:24:24 UTC <tgeeky> hpc: I presume that will be available anyway
2011-06-09 01:24:41 UTC <tgeeky> byorgey: but without going into all of that
2011-06-09 01:24:47 UTC <hpc> "square from this corner to this corner" vs "square this big" vs "primitive square, scaled" vs "circle through these three points" vs "circle with radius blah"
2011-06-09 01:24:51 UTC <hpc> etc
2011-06-09 01:25:12 UTC <byorgey> hpc: well, yes, we can provide lots of different functions for doing things like that
2011-06-09 01:25:13 UTC <tgeeky> byorgey: if the default specification of something is: a center point, a length to a (vertex operator - just a vertex in all simple cases) on an edge
2011-06-09 01:25:44 UTC <tgeeky> that's the obvious implementation for a circle
2011-06-09 01:25:54 UTC <hpc> byorgey: then from the user-interface side, you can implement scaled primitives and primitives with set dimensions in terms of each other
2011-06-09 01:25:58 UTC <luite> hpc: hehe tgeeky would probably suggest that you should then create lines by having it draw a circle through 3 collinear points ;)
2011-06-09 01:26:03 UTC <tgeeky> but it's pretty easy with a square too, if only you give up sqrt(2)/2 as the unit.
2011-06-09 01:26:07 UTC <hpc> luite: lol
2011-06-09 01:26:23 UTC <hpc> byorgey: pick the one that makes the back end simple, and give both options
2011-06-09 01:26:53 UTC <tgeeky> byorgey: in existing diagrams, what is the (x,y) specification in?
2011-06-09 01:27:12 UTC <tgeeky> I have to admit I haven't even used it yet (because luite took down my toys as soon as they worked!)
2011-06-09 01:27:47 UTC <hpc> this reminds me of how little time i have spent on hs-svg now
2011-06-09 01:27:48 UTC <luite> you can still cabal install it yourself!
2011-06-09 01:27:54 UTC <hpc> i think i wrote 5 lines this week
2011-06-09 01:27:55 UTC <byorgey> tgeeky: yes, that might be a nice way to *implement* squares, but it is not a nice way to let the user of the library specify them
2011-06-09 01:28:08 UTC <tgeeky> luite: yes, I can, if I didn't have trouble with much more trivial haskell code, and need to learn first
2011-06-09 01:28:32 UTC <tgeeky> luite: I'm not blaming you, there's also the agda/haskell site that has diagrams
2011-06-09 01:28:34 UTC <byorgey> tgeeky: "what is the (x,y) specification in"? -- I don't understand the question
2011-06-09 01:28:52 UTC <tgeeky> byorgey: if I want to create a square and then translate it, what kind of coordinates do I specify? pixels?
2011-06-09 01:29:00 UTC <tgeeky> relative furlongs?
2011-06-09 01:29:07 UTC <byorgey> tgeeky: the units are arbitrary.
2011-06-09 01:29:27 UTC <byorgey> you specify it in terms of whatever units you want
2011-06-09 01:29:36 UTC <tgeeky> byorgey: ok, then you have already solved all of my requests as listed above
2011-06-09 01:29:36 UTC <byorgey> and then at the end you request it to be rendered at a certain size.
2011-06-09 01:29:42 UTC <hpc> i think he means "which way is up", not "how far is six"
2011-06-09 01:30:11 UTC <tgeeky> hpc: yes, but if they are truly arbitrary (and I think they are, since I think the backend us VectorSpace)
2011-06-09 01:30:20 UTC <tgeeky> then all of my strange demands are nearly satisfied :o
2011-06-09 01:30:55 UTC <tgeeky> byorgey: you sould ignore me re:diagrams until I have 1) used it, 2) implemented my work in haskell (and not mathematica, which always has preferred coordinate systems)
2011-06-09 01:30:59 UTC <byorgey> six is as far as you want it to be, and up is up, if "up" makes sense in your vector space =)
2011-06-09 01:31:13 UTC <hpc> :P
2011-06-09 01:31:31 UTC <byorgey> tgeeky: hehe, well, I won't ignore you, but I'll take your opinions with a grain of salt ;)
2011-06-09 01:31:40 UTC <tgeeky> byorgey: at least with #diagrams
2011-06-09 01:31:51 UTC <tgeeky> If you have a lingering quantum physics question, I'm your guy.
2011-06-09 01:32:07 UTC <byorgey> hehe, not at the moment, for some strange reason ;)
2011-06-09 01:32:52 UTC <tgeeky> Our working relationship and shared knowledge base are [unidirectional, barely overlapping] at this point :o
2011-06-09 01:33:17 UTC <luite> you could make a nice venn diagram out of that
2011-06-09 01:33:26 UTC <tgeeky> luite: for science!
2011-06-09 01:33:29 UTC <luite> specified by area's in arbitrary coordinates
2011-06-09 01:33:36 UTC <tgeeky> hey now
2011-06-09 01:33:38 UTC <tgeeky> be nice :)
2011-06-09 01:34:07 UTC <tgeeky> If you spent two years learning everything you can about a seemingly esoteric fractal geometry, you would sound a little nutso, too.
2011-06-09 01:34:08 UTC <byorgey> circle ||| strutX (-0.03) ||| circle?
2011-06-09 01:34:22 UTC <byorgey> hmm, actually, I wonder if negative struts work like that
2011-06-09 01:34:36 UTC <tgeeky> that direction
2011-06-09 01:34:50 UTC <tgeeky> would require you know some preferred direction from one of the two circles, no?
2011-06-09 01:35:14 UTC <luite> my knowledge has lots of holes. if you would examine it closely you'd probably see that it's a set of zero measure ;p
2011-06-09 01:35:36 UTC <luite> I'm a bit dense, but only in the rationals
2011-06-09 01:35:45 UTC <luite> ugh so mcuh for the bad jokes :p
2011-06-09 01:35:45 UTC <tgeeky> booooo
2011-06-09 01:36:00 UTC <byorgey> tgeeky: I don't think it requires a preferred direction
2011-06-09 01:36:09 UTC <tgeeky> luite: by the way, a more complicated construction than the Cantor set/Cantor dust
2011-06-09 01:36:15 UTC <tgeeky> luite: lies in the circle fractal :o
2011-06-09 01:36:22 UTC <tgeeky> but a set of the same type
2011-06-09 01:36:42 UTC <tgeeky> byorgey: let me see what strutx is
2011-06-09 01:37:06 UTC <tgeeky> byorgey: diagrams-0.3 has no docs listed on hackage
2011-06-09 01:37:14 UTC <luite> that's the old package
2011-06-09 01:37:17 UTC <tgeeky> 0.3?
2011-06-09 01:37:29 UTC <luite> yeah, well, it's just an empty one now
2011-06-09 01:37:34 UTC <luite> that depends on the real packages
2011-06-09 01:37:35 UTC <tgeeky> oh, right.
2011-06-09 01:40:02 UTC <byorgey> strutX doesn't work that way
2011-06-09 01:40:11 UTC <tgeeky> byorgey: can you describe what that should denote?
2011-06-09 01:40:31 UTC <tgeeky> were it to work
2011-06-09 01:40:48 UTC <byorgey> tgeeky: it denotes a circle next to a strut next to a circle
2011-06-09 01:40:55 UTC <byorgey> ||| places things next to each other horizontally
2011-06-09 01:41:12 UTC <byorgey> it turns out that strutX n === strutX (-n)
2011-06-09 01:41:23 UTC <byorgey> but I'm going to make a primitive which acts like a circle with negative radius, for moving things closer together =)
2011-06-09 01:42:20 UTC <tgeeky> byorgey: is it true that seeing this package (diagrams) with all of the nicely seperated modules (bounds, core, hasorigin, mlist, monoids, etc)
2011-06-09 01:42:34 UTC <tgeeky> that the trend of having seperation like that, indiciates a well designed library, in general
2011-06-09 01:42:56 UTC <byorgey> not necessarily
2011-06-09 01:43:16 UTC <byorgey> although I do hope diagrams is well designed.
2011-06-09 01:43:31 UTC <byorgey> but it's easy enough to throw some code in a bunch of different modules
2011-06-09 01:46:16 UTC <tgeeky> byorgey: your use of tau makes me warm inside
2011-06-09 01:47:11 UTC <byorgey> =D
2011-06-09 01:47:22 UTC <tgeeky> that it comes without explanation, even warmer :0
2011-06-09 01:47:44 UTC <byorgey> one should not need to explain the Fundamental Circle Constant. ;)
2011-06-09 01:47:57 UTC <tgeeky> hehe
2011-06-09 01:48:21 UTC <tgeeky> byorgey: actually, and you'll have to take my word for it/consider me crazy
2011-06-09 01:48:27 UTC <byorgey> however, I guess for the sake of evangelism I should link to the Tau Manifesto in the docs
2011-06-09 01:48:41 UTC <tgeeky> but you can take the Tau Manifesto one step further
2011-06-09 01:49:08 UTC <tgeeky> in terms of physics, where people throw around things like 4pi (quantum mechanics), 8pi (gravitation), sqrt(2pi) (fine structure constant)
2011-06-09 01:49:22 UTC <tgeeky> that ought *not* be allowed
2011-06-09 01:49:42 UTC <tgeeky> in terms of maintaining dimensional consistency
2011-06-09 01:50:25 UTC <tgeeky> in physics, they do two major tricks: first - set c = hbar = e = 1
2011-06-09 01:50:30 UTC <tgeeky> and second, ignore constants
2011-06-09 01:51:09 UTC <tgeeky> but then, we include such things in "dimensionless constants" which include those factors
2011-06-09 01:52:58 UTC <tgeeky> byorgey: this is a mind blowing statement:
2011-06-09 01:53:00 UTC <tgeeky> http://cosmiclog.msnbc.msn.com/_news/2011/05/25/6718088-electron-acts-like-a-perfect-sphere
2011-06-09 01:53:06 UTC <tgeeky> "This means that if the electron was magnified to the size of the solar system, it would still appear spherical to within the width of a human hair," Imperial College said in its news release.
2011-06-09 23:34:49 UTC <luite> tgeeky_: haven't coded much today, but I'm trying to make arrangements for a server. Trying to get my brother to pay part of the monthly fee, because he wants to host a few websites :)
2011-06-09 23:35:53 UTC <hpc> luite: you could get the server, and sell site space at a markup
2011-06-09 23:35:55 UTC <hpc> :D
2011-06-09 23:36:35 UTC <luite> nah don't really want to do that, you'd have to compete with the millions of ultra low cost virtual hosting and virtual private server providers
2011-06-09 23:39:22 UTC <luite> my brother can host his sites on a low-cost vps, but he can't do linux admin stuff, so I usually do the installation and configuration for him
2011-06-09 23:58:16 UTC <tgeeky_> hmm
2011-06-09 23:58:38 UTC <tgeeky_> luite: any pushes?
2011-06-09 23:58:59 UTC <tgeeky_> nawp
2011-06-10 01:03:38 UTC <luite> tgeeky_: nah that will be a while
2011-06-10 01:04:21 UTC <tgeeky_> a metric while? we use imperial over here in the US, so I might screw up the conversion. *stupid US*
2011-06-10 01:05:02 UTC <luite> "when it's done" ;p
2011-06-10 01:05:13 UTC <luite> well not really done, because that won't happen any time soon
2011-06-10 01:05:32 UTC <luite> but at least "done enough" to have the complete site running on it, and usable
2011-06-10 01:22:12 UTC <luite> it should be easier to help with other bits
2011-06-10 01:22:18 UTC <luite> frontend related
2011-06-10 01:26:49 UTC <luite> ou were interested in protovis right? there's going to be a way to generate html (loaded in an iframe). you could write all code you need directly on the site, no extra support needed
2011-06-10 01:33:17 UTC <luite> so if you want to write something and already get results, you could design a DSL for protovis, if you let it spit out a html file with everyhing, and additional resources like images, then it would be extremely easy to add it
2011-06-10 13:37:49 UTC <tgeeky_> byorgey: do you have a link to the "fast and sound random generation" paper? I can find some, but it's not the one I was linked to earlier
2011-06-10 13:53:53 UTC <tgeeky_> found it.
2011-06-10 17:42:53 UTC <tgeeky_> byorgey: I'm trying to compile np-extras (so I can get species) against the new numeric-prelude
2011-06-10 17:43:19 UTC <tgeeky_> and I'm running into problems with numeric literals ("1")
2011-06-10 17:45:19 UTC <tgeeky_> I just switched out the dual imports (NumericPrelude, Base) with the new combined single import (NumericPrelude)
2011-06-10 17:45:50 UTC <tgeeky_> and i get a problem with Monomial.hs:62 could not deduce GHC.Num.Num a arising from literal 1
2011-06-10 17:46:42 UTC <byorgey> oh, yeah, I need to update np-extras and species to compile with newer versions of things
2011-06-10 17:46:59 UTC <tgeeky_> byorgey: i was trying to do it, but I don't know what do to next :o
2011-06-10 17:47:00 UTC <byorgey> but I haven't looked at it so I have no advice to give you
2011-06-10 17:47:31 UTC <tgeeky_> ok, if you can take a look at some point in the next few days, I'd appreciate it
2011-06-10 17:48:39 UTC <byorgey> I don't think I will have time in the next few days.  Is it really important that you use the new numeric-prelude?
2011-06-10 17:49:42 UTC <tgeeky_> byorgey: I doubt it. I guess I'll just proceed and find out.
2011-06-10 18:15:03 UTC <luite> I've been thinking of how to present the frontpage for Wolfgang. I've come up with a two-column layout with a scrolling gallery of featured pages, and made a quick photoshop mockup to show what it might look like: http://jabberwock.xs4all.nl/exp/wolfgang/wolfgang-fp-mockup.png
2011-06-10 18:15:07 UTC <luite> comments?
2011-06-10 18:15:36 UTC <luite> the "showcase" section would then contain a more compelte list of these images with short descriptions
2011-06-10 18:15:58 UTC <luite> oh I stoled byorgeys image for one :p
2011-06-10 18:16:55 UTC <byorgey> oooooooh
2011-06-10 18:17:01 UTC <byorgey> looks nice!
2011-06-10 18:17:32 UTC <byorgey> what will go in the "headlines"?
2011-06-10 18:17:44 UTC <luite> I think it's important to give content with nice pictures a prominent place '[p
2011-06-10 18:18:06 UTC <byorgey> yes, the showcase at the top with pictures is really nice
2011-06-10 18:19:29 UTC <luite> byorgey: my idea was general news for visitors, for example if a tutorial is added, or other notable pages
2011-06-10 18:19:49 UTC <byorgey> ah, I see, cool
2011-06-10 18:20:06 UTC <byorgey> ok, and the right column is more technical updates on the software running the site itself?
2011-06-10 18:20:17 UTC <luite> yeah
2011-06-10 18:21:16 UTC <byorgey> sounds good
2011-06-10 18:21:22 UTC <byorgey> anyway, I think it looks fantastic
2011-06-10 18:23:01 UTC <luite> the other pages must be one column though (except for maybe some special pages like categories), but I don't really think that's a problem
2011-06-10 18:23:58 UTC <byorgey> sure
2011-06-10 18:29:26 UTC <luite> ok, great, 100% positive comments so far ;) I guess I'll see if I can convince gitit to make a page look something like this
2011-06-10 18:38:03 UTC <tgeeky_> 1/1 ain't bad
2011-06-10 18:38:19 UTC <tgeeky_> i suggest that whatever you have in the top banner, you have generating/interactive/diagram code for
2011-06-10 18:38:22 UTC <tgeeky_> ala processing.js
2011-06-10 18:38:27 UTC <tgeeky_> other than that, looks great
2011-06-10 18:39:28 UTC <luite> tgeeky_: not sure about that yet. processing.js code would have to run in an iframe from a different domain, for security
2011-06-10 18:39:40 UTC <tgeeky_> what? i'm not saying to use processing
2011-06-10 18:39:55 UTC <tgeeky_> http://processingjs.org/
2011-06-10 18:39:55 UTC <luite> oh sorry
2011-06-10 18:39:58 UTC <tgeeky_> notice how the top bar
2011-06-10 18:40:00 UTC <luite> but I mean any javascript would
2011-06-10 18:40:02 UTC <tgeeky_> is actually processing
2011-06-10 18:40:19 UTC <tgeeky_> (with "view source")
2011-06-10 18:40:30 UTC <tgeeky_> even if you do the same thing by generating your topbar with Diagram (and hence a static picture)
2011-06-10 18:40:41 UTC <tgeeky_> draw the header picture with wolfgang, and include "view source"
2011-06-10 18:40:47 UTC <luite> hmm, not sure about that
2011-06-10 18:40:55 UTC <tgeeky_> to show that you're serious about the power
2011-06-10 18:40:57 UTC <tgeeky_> of wolfgang
2011-06-10 18:41:00 UTC <luite> it would be interesting, but a link to the page would also give you the source
2011-06-10 18:42:05 UTC <luite> the problem really is security, anything that can generate javascript must either be loaded from a different domain, or the code must be checked by the web service, or individually approved by an admin
2011-06-10 18:42:26 UTC <tgeeky_> i'm not even saying that you should use javascript
2011-06-10 18:42:30 UTC <tgeeky_> I'm just saying, if you have pictures up there
2011-06-10 18:42:34 UTC <tgeeky_> that represent something wolfgang can do
2011-06-10 18:42:45 UTC <tgeeky_> make sure you link them to the demonstration of wolfgang doing it
2011-06-10 18:43:00 UTC <luite> yes that was the whole point of the showcase :p
2011-06-10 18:43:09 UTC <tgeeky_> it's a "at-the-top-of-the-page" version of "this page generated by wolfgang"
2011-06-10 18:43:41 UTC <tgeeky_> ok, back to work
2011-06-10 18:43:58 UTC <luite> although it's incorrect for the apollonian gasket, I took the svg from wikipedia
2011-06-10 18:44:55 UTC <luite> tgeeky_: you should make one with diagrams, with the radii of the initial circles as parameters :p
2011-06-10 18:45:36 UTC <tgeeky_> luite: I should, but I'm working on other things first :/
2011-06-10 18:45:49 UTC <tgeeky_> and there aren't "initial circles"
2011-06-10 18:46:02 UTC <tgeeky_> there are several different sets of "initial circles"
2011-06-10 18:46:17 UTC <tgeeky_> (just for reference)
2011-06-10 18:47:02 UTC <tgeeky_> but you already have the sierpinksi code
2011-06-10 18:47:14 UTC <tgeeky_> I suggest you use that instead, because it's more familiar
2011-06-10 18:47:28 UTC <luite> err it's correct in this direction? you can make all possible gaskets with this, without having to specify more than this?
2011-06-10 18:48:09 UTC <tgeeky_> no, there is a finite set of "root" gaskets which don't have the same starting point
2011-06-10 18:48:12 UTC <luite> even though you can't tell from just the image which circles were those with the specified radii
2011-06-10 18:49:02 UTC <tgeeky_> for instance, (0,0,1,1) is one, (-1,2,2,3) is one, (-4,8,8,9) is another, ...
2011-06-10 18:49:18 UTC <tgeeky_> for any four integers satisfying the descartes equation
2011-06-10 18:49:22 UTC <tgeeky_> you will find that you'll end up in one of those
2011-06-10 18:49:43 UTC <tgeeky_> but when you start from one of those and get bigger (in magnitude) integers, you aren't covering the whole gasket
2011-06-10 18:49:43 UTC <luite> what do those numbers mean?
2011-06-10 18:49:53 UTC <tgeeky_> they are the curvatures of the circles inside the gasket
2011-06-10 18:49:58 UTC <tgeeky_> 1/radius
2011-06-10 18:50:31 UTC <luite> all your examples have either zero or negative curvature...
2011-06-10 18:50:57 UTC <tgeeky_> only 3 circles of positive curvature can ever be mutually tangent
2011-06-10 18:51:33 UTC <tgeeky_> another way to look at it
2011-06-10 18:51:35 UTC <tgeeky_> if you have
2011-06-10 18:51:40 UTC <tgeeky_> (2,2,3)
2011-06-10 18:51:47 UTC <tgeeky_> you can go left and get (-1)
2011-06-10 18:52:17 UTC <luite> uhg call me stupid if you want, but I usually find your explanations extremely confusing :p
2011-06-10 18:52:22 UTC <luite> what is going left
2011-06-10 18:52:31 UTC <tgeeky_> (-1,2,2,3)
2011-06-10 18:52:50 UTC <tgeeky_> that is a infinite sequence, defined by traversal using the descartes equation
2011-06-10 18:53:02 UTC <tgeeky_> (-1,2,2) -> 3
2011-06-10 18:53:09 UTC <tgeeky_> (2,2,3) -> another number
2011-06-10 18:54:02 UTC <tgeeky_> I wouldn't call you stpid, and I don't know how best to explain it other than read as much of the literature about it until it makes sense :o
2011-06-10 18:54:46 UTC <tgeeky_> easiest way to explain it:
2011-06-10 18:54:47 UTC <tgeeky_> http://en.wikipedia.org/wiki/Apollonian_gasket
2011-06-10 18:55:00 UTC <tgeeky_> under bottom area "gaskets with near-D3 symmetry"
2011-06-10 18:55:11 UTC <tgeeky_> each of those first four sequences under curvature
2011-06-10 18:55:28 UTC <tgeeky_> is, in haskell, something like:
2011-06-10 18:55:37 UTC <tgeeky_> [-1,2,2,3...]
2011-06-10 18:55:42 UTC <tgeeky_> [-4,8,8,9,...]
2011-06-10 18:55:51 UTC <tgeeky_> [-15,32,32,33...]
2011-06-10 18:55:56 UTC <tgeeky_> there are a set of those
2011-06-10 18:56:14 UTC <tgeeky_> there are more than what are listed on the wikipedia page
2011-06-10 18:56:18 UTC <luite> right, I see :)
2011-06-10 18:56:24 UTC <tgeeky_> they go off to the right ------------>
2011-06-10 18:56:26 UTC <tgeeky_> each one of them does
2011-06-10 18:56:41 UTC <tgeeky_> but they also go off to the bottom
2011-06-10 18:57:17 UTC <tgeeky_> at some point, however, in the downward direction
2011-06-10 18:57:28 UTC <luite> but I don't really see what's "wrong" with them?
2011-06-10 18:57:28 UTC <tgeeky_> they are all integer congruences of the top ones
2011-06-10 18:57:40 UTC <tgeeky_> luite: wrong? nothing's wrong with them
2011-06-10 18:57:52 UTC <tgeeky_> what do you mean?
2011-06-10 18:57:59 UTC <tgeeky_> the fact that they have "almost" symmetry?
2011-06-10 18:58:47 UTC <luite> no I mean, but you can calculate a from (b,c,d) right?
2011-06-10 18:59:33 UTC <tgeeky_> http://upload.wikimedia.org/wikipedia/commons/2/26/ApollonianGasket-15_32_32_33-Labels.png
2011-06-10 18:59:43 UTC <tgeeky_> from (b,c,d) here (32,32,33)
2011-06-10 18:59:46 UTC <tgeeky_> you can either get
2011-06-10 18:59:54 UTC <tgeeky_> the outer circle which touches (b,c,d)
2011-06-10 19:00:03 UTC <tgeeky_> or the inner circle which touches (b,c,d) = 209
2011-06-10 19:00:11 UTC <tgeeky_> the outer = -15
2011-06-10 19:00:29 UTC <tgeeky_> given any triplet, you have two choices of a 4th circle
2011-06-10 19:01:00 UTC <luite> yes I know
2011-06-10 19:01:05 UTC <tgeeky_> the "left" or "outer" or whatever you want to call it (-15, in this case), or the right, or inner (209)
2011-06-10 19:01:10 UTC <tgeeky_> that process just repeats as you zoom in the gasket
2011-06-10 19:01:45 UTC <tgeeky_> luite: ok, so, given three random numbers which satisfy the descartes equation
2011-06-10 19:02:04 UTC <tgeeky_> you will always end up at one of those near-D3 gaskets when run the algorithim that takes you toward the outermost circle
2011-06-10 19:03:31 UTC <tgeeky_> but you don't know which one you'll end up at
2011-06-10 19:04:36 UTC <tgeeky_> anyway, you don't worry about the circle fractal :o
2011-06-10 19:04:42 UTC <tgeeky_> i'll worry about that :)
2011-06-10 19:05:27 UTC <tgeeky_> but as you know, I still need some haskell (and combinatorical, and other) background first
2011-06-10 19:05:32 UTC <tgeeky_> before I can attack it in diagrams
2011-06-10 19:07:14 UTC <luite> hmm,  I'll read some more about it later. I thought that (unless you have some degenerate case with zero curvature somewhere) you always ended up with a single negative curvature one in a finite number of steps
2011-06-10 19:09:21 UTC <tgeeky_> anytime you have four curvatures (and you always have 4 - given (b,c,d) you have (-a) and (e) to choose) one of them will be negative
2011-06-10 19:09:55 UTC <tgeeky_> it's strange to describe it that way, I suppose
2011-06-10 19:10:06 UTC <tgeeky_> but zero and negative curvature aren't degenerate cases, either :o
2011-06-10 19:10:22 UTC <tgeeky_> the only "degenerate" case is the hyperbolic case: (0,0,1,1)
2011-06-10 19:10:24 UTC <luite> really? suppose you start with (100,1,1), I thought both would be positive here
2011-06-10 19:10:34 UTC <tgeeky_> 1,1 is the hyperbolic case
2011-06-10 19:10:42 UTC <luite> but maybe my intuition is wrong here :p
2011-06-10 19:10:52 UTC <tgeeky_> so, this whole discussion started
2011-06-10 19:10:56 UTC <tgeeky_> on there not being "one" circle fractal
2011-06-10 19:11:14 UTC <luite> oops, I meant (100,100,1)
2011-06-10 19:11:21 UTC <tgeeky_> if you want to say there is a "one" circle fractal, it's the tesselation of (0,0,1,1)
2011-06-10 19:11:22 UTC <luite> ugh
2011-06-10 19:11:28 UTC <luite> sorry I did mean (100,1,1)
2011-06-10 19:11:30 UTC <luite> :D
2011-06-10 19:11:31 UTC <tgeeky_> and that's the only degenerate one
2011-06-10 19:11:37 UTC <tgeeky_> hehe yeah, anytime you have 1,1
2011-06-10 19:11:42 UTC <tgeeky_> you're talking about the hyperbolic case
2011-06-10 19:11:44 UTC <tgeeky_> which is actually pretty neat
2011-06-10 19:12:01 UTC <tgeeky_> it's the only one
2011-06-10 19:12:06 UTC <tgeeky_> that's important, which isn't shown on that wiki page
2011-06-10 19:12:06 UTC <luite> well it also works for (100,1,1001/1000)
2011-06-10 19:12:25 UTC <tgeeky_> yeah, but that's non-integer
2011-06-10 19:12:36 UTC <tgeeky_> (though that is still valid in other senses)
2011-06-10 19:12:55 UTC <luite> anyway it looks interesting enough to make a page about this when that's possible :)
2011-06-10 19:13:47 UTC <tgeeky_> luite: I plan to make a whole book out of it
2011-06-10 19:13:52 UTC <tgeeky_> and I have a lot of the material in mathematica :)
2011-06-10 19:14:07 UTC <tgeeky_> if only mathematica could be freely (BSD3) published, and it were a nice platform for web publishing
2011-06-10 19:14:10 UTC <tgeeky_> http://arxiv.org/pdf/math/0101066
2011-06-10 19:14:13 UTC <tgeeky_> look at page 20
2011-06-10 19:14:49 UTC <tgeeky_> clearly something fishy going on with that picture :)
2011-06-10 19:15:03 UTC <luite> maybe later, I want to do some work on the web service irst
2011-06-10 19:15:06 UTC <tgeeky_> easy to explain though, all circles who touch the bounding circle
2011-06-10 19:15:06 UTC <luite> oh picture
2011-06-10 19:15:09 UTC <luite> then ok :p
2011-06-10 19:15:10 UTC <tgeeky_> luite: it's just a single picture
2011-06-10 19:15:25 UTC <tgeeky_> all circles that touch the bounding circle have curvature 1
2011-06-10 19:15:29 UTC <tgeeky_> everything else has integer curvature
2011-06-10 19:16:23 UTC <tgeeky_> that is the "mother of all" apollonian gaskets, technically
2011-06-10 19:16:27 UTC <luite> oh yes the same one is on wikipedia
2011-06-10 19:16:44 UTC <luite> hmm, or not
2011-06-10 19:16:48 UTC <luite> I'm sure I've seen it before :D
2011-06-10 19:16:50 UTC <tgeeky_> luite: didn't think so :o
2011-06-10 19:18:25 UTC <luite> but thanks for the link, it looks interesting, and much of it should be presentable at high school level
2011-06-10 19:19:09 UTC <tgeeky_> yeah, the amazing thing about it is just that
2011-06-10 19:19:24 UTC <tgeeky_> when you have the right tools (and I think it's going to take interactivity as well as declarative structure)
2011-06-10 19:19:45 UTC <tgeeky_> you don't necessarily need to understand the math to understand the picture(s)
2011-06-11 19:04:44 UTC <tgeeky> byorgey: I read through the paper "fast and sound random generation for automated testing in Ocaml" and played with the example haskell implemntation...
2011-06-11 19:04:59 UTC <tgeeky> you mentioned it in your species functional pearl paper
2011-06-11 19:05:59 UTC <tgeeky> but the algorithim they use seems to pretty closely depend on using the Real numbers
2011-06-11 19:06:37 UTC <tgeeky> which i guess should be obvious since they are generating probabilities
2011-06-11 19:07:05 UTC <tgeeky> would it even make sense to try and attempt such a thing using species and quickcheck?
2011-06-11 19:07:35 UTC <tgeeky> i need to read those two references at the end of your paper
2011-06-11 19:08:43 UTC <tgeeky> [quotient containers]
2011-06-11 19:09:25 UTC <byorgey> oh, don't read about quotient containers
2011-06-11 19:09:36 UTC <byorgey> you need to know three metric tons of category theory for it to make sense
2011-06-11 19:09:47 UTC <byorgey> I don't even understand it.
2011-06-11 19:10:19 UTC <byorgey> tgeeky: anyway, yes, it would make a lot of sense to attempt this with species + quickcheck
2011-06-11 19:10:44 UTC <tgeeky> hehe
2011-06-11 19:10:52 UTC <tgeeky> finally something I've thought or said makes sense ;)
2011-06-11 19:11:46 UTC <byorgey> a PhD student of Jacques Carette is actually working on something like this... I hope it will get released soon
2011-06-11 19:13:50 UTC <luite> an actual implementation in haskell?
2011-06-11 19:14:22 UTC <byorgey> yes
2011-06-11 19:14:24 UTC <tgeeky> it seems like GHC 7.2 is going to be a rather big jump forward with generics and a lot of related features
2011-06-11 19:14:30 UTC <luite> ah quite interesting
2011-06-11 19:14:55 UTC <luite> really? I thought 7.2 was going to be a relatively small release because of the darcs -> git move
2011-06-11 19:15:36 UTC <tgeeky> 'a generic deriving mechanism for haskell' is supposedly slated for 7.2
2011-06-11 19:16:53 UTC <luite> hmm that could be useful
2011-06-11 19:17:00 UTC <luite> but I don't know anything about it :)
2011-06-11 19:28:48 UTC <luite> bah, haskell-src-exts rewrites {-#LANGUAGE NoMonomorphismRestriction #-} to {-# LANGUAGENoMonomorphismRestriction #-}
2011-06-11 19:29:09 UTC <tgeeky> that's a bad bug
2011-06-11 19:29:21 UTC <luite> it makes it more fail :(
2011-06-11 19:29:38 UTC <tgeeky> and we're already full up on fail 'round here
2011-06-11 19:38:27 UTC <byorgey> luite: is it because of not having a space between # and LANGUAGE?
2011-06-11 19:38:42 UTC <byorgey> I agree it's a nasty bug =(
2011-06-11 19:52:00 UTC <luite> byorgey: yeah it doesn't correctly store the location of that keyword
2011-06-11 19:52:50 UTC <byorgey> how hard do you think it is to fix?
2011-06-11 19:53:21 UTC <luite> dunno, not very hard probably, at least a workaround is simple, always start the LANGUAGE word directly after the #
2011-06-11 19:53:54 UTC <luite> that would at least not make invalid source files :)
2011-06-11 19:54:52 UTC <luite> this whole thing is very annoying by the way, patching source files without destroying the layout
2011-06-11 20:00:13 UTC <luite> http://hackage.haskell.org/packages/archive/haskell-src-exts/1.11.1/doc/html/src/Language-Haskell-Exts-Annotated-ExactPrint.html#line-455 <- all pragma ExactP instances seem to be wrong
2011-06-11 20:08:10 UTC <luite> it should store an extra srcInfoPoint for the location of "LANGUAGE", looks like it's not difficult to fix
2011-06-11 20:10:07 UTC <byorgey> yeah, patching source files without destroying layout is annoying indeed =(
2011-06-11 20:10:32 UTC <byorgey> I look forward to the day when we will all just edit trees, and configure out editors to display them using whatever style we prefer
2011-06-11 20:43:25 UTC <luite> I think this annotated syntax tree thing would be much more usable if it stored relative positions instead of absolute ones
2011-06-12 00:19:22 UTC <luite> phew
2011-06-12 00:19:25 UTC <luite> I think it works now
2011-06-12 00:34:46 UTC <luite> my code to rename a haskell module went from 1 line to 110 lines, but it preserves layout now :p
2011-06-12 03:19:20 UTC <byorgey> luite: yikes!
2011-06-12 18:44:13 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/Star.png
2011-06-12 18:51:40 UTC <luite> nice pic, does it use some new diagrams feature?
2011-06-12 19:24:54 UTC <byorgey> luite: I've been improving the infrastructure for creating named points/subdiagrams and then being able to refer to them later
2011-06-12 19:25:09 UTC <luite> ah very useful
2011-06-12 19:25:48 UTC <byorgey> so that diagram is created without ever having to specifically refer to any coordinates
2011-06-12 19:27:58 UTC <luite> by the way, I think it would be useful to have some notion of absolute scale in diagrams, is that possible? for example if I write a paper and have some graphs or petri nets or something, I'd like nodes to have a consistent size
2011-06-12 19:28:39 UTC <luite> across diagrams
2011-06-12 19:39:56 UTC <byorgey> luite: yes, that's sensible.
2011-06-12 19:43:54 UTC <byorgey> luite: but this can be achieved just by the way you use it
2011-06-12 19:44:36 UTC <byorgey> luite: one way is to always post-compose your diagrams with a blank rectangle of a fixed size
2011-06-12 19:44:50 UTC <byorgey> then they will always be rescaled by the same factor
2011-06-12 19:45:00 UTC <byorgey> but that assumes that all your images are the same dimensions.
2011-06-12 19:45:41 UTC <byorgey> the other way to do it is to simply work in absolute coordinates the whole time, and then request that the backend not do any rescaling, only recentering
2011-06-12 19:45:59 UTC <byorgey> so that is actually an option we should add to e.g. the cairo backend
2011-06-12 19:52:31 UTC <luite> ah yes that would be a good idea
2011-06-12 19:56:16 UTC <byorgey> luite: want to file a ticket for it?
2011-06-12 19:56:24 UTC <byorgey> so we don't forget
2011-06-12 20:00:52 UTC <luite> ok, will do that later this evening, bug be if I don't ;)
2011-06-12 20:01:01 UTC <luite> *me
2011-06-12 20:01:38 UTC <byorgey> ok =)
2011-06-12 20:24:13 UTC <luite> ah just read your weblog post on the Collatz conjecture "proof" :) I only skimmed the paper, but I have to admit that I would've been disappointed if it was actually proved in a paper that looked like that
2011-06-12 21:28:21 UTC <tgeeky> collatz is one of the best example of how deceiptively complicated mathematics can be
2011-06-12 21:33:16 UTC <luite> yes that's why it would be disappointing if it was settled without uncovering new deep insights or connections... and in a paper full of tables and matlab (?) code...
2011-06-12 21:33:24 UTC <tgeeky> hehe
2011-06-12 21:33:43 UTC <tgeeky> luite: yeah, I am deathly afraid of presenting my work in such an ugly manner
2011-06-12 21:33:54 UTC <tgeeky> and Mathematica is about 2.5 times more beautiful than Matlab
2011-06-13 00:40:13 UTC <byorgey> only 2.5?
2011-06-13 00:50:16 UTC <tgeeky> byorgey: well, it's 8.212 times more awesome
2011-06-13 00:50:28 UTC <tgeeky> but beauty, for me, is a high standard :)
2011-06-13 00:50:58 UTC <byorgey> ah, hehe, makes sense now =)
2011-06-13 00:51:45 UTC <byorgey> luite: have you added that ticket yet?
2011-06-13 00:51:46 UTC <tgeeky> I always got the feeling, from Matlab, that no matter how "good at it" I got, it would never be worth sharing Matlab code
2011-06-13 00:51:50 UTC <luite> byorgey: hehe no :p
2011-06-13 00:51:55 UTC <byorgey> =)
2011-06-13 00:52:09 UTC <luite> working on the code that allocates workers for wolfgang
2011-06-13 00:52:23 UTC <byorgey> ok, that's more important
2011-06-13 00:52:32 UTC <luite> at the moment my worker pool is 5 maps, 1 priority search queue and one set
2011-06-13 00:55:33 UTC <luite> and I should probably use fclables or something
2011-06-13 00:55:44 UTC <luite> too much record update syntax
2011-06-13 00:56:15 UTC <tgeeky> i got really turned off by record syntax at first
2011-06-13 00:57:23 UTC <luite> hmm, I've only used it in 9 places so far, not too bad :)
2011-06-13 00:57:39 UTC <tgeeky> byorgey: I got through your Species paper. Good work.
2011-06-13 00:58:14 UTC <tgeeky> You're the 2nd most clear expositor in the Haskell-verse I've yeat had the time to read.
2011-06-13 00:58:37 UTC <tgeeky> s/yeat/yet/
2011-06-13 00:58:50 UTC <tgeeky> and I have the feeling you'll be happy to know the first is conal :)
2011-06-13 00:58:55 UTC <tgeeky> so you're in good company
2011-06-13 01:03:53 UTC <tgeeky> byorgey: what do you read outside the domain of computer science?
2011-06-13 01:08:53 UTC <luite> he has a librarything pager :p
2011-06-13 01:08:54 UTC <luite> page
2011-06-13 01:09:12 UTC <tgeeky> didn't even know what that was
2011-06-13 01:09:14 UTC <tgeeky> interesting
2011-06-13 01:09:21 UTC <luite> I found it by accident while searching for interesting books :)
2011-06-13 01:12:02 UTC <tgeeky> lol
2011-06-13 01:12:04 UTC <tgeeky> I have heard of a touchy owner of a yacht to whom a guest, on first seeing it, remarked, 'I thought your yacht was larger than it is'; and the owner replied, 'No, my yacht is not larger than it is'.
2011-06-13 01:12:09 UTC <tgeeky> - Bertrand Russell
2011-06-13 01:13:56 UTC <tgeeky> you have read GEB, which I was going to ask about ;0
2011-06-13 01:14:12 UTC <luite> I'd guess that most of #haskell has read it
2011-06-13 01:14:17 UTC <tgeeky> yeah
2011-06-13 01:29:29 UTC <alpounet> that looks very interesting
2011-06-13 01:29:41 UTC <alpounet> didn't know about it until now
2011-06-13 01:39:24 UTC <tgeeky> It's a unique book.
2011-06-13 01:44:30 UTC <alpounet> seems so indeed
2011-06-13 01:44:36 UTC <alpounet> i think i'm gonna order it
2011-06-13 02:52:56 UTC <byorgey> tgeeky: re: clear exposition, thanks =)
2011-06-13 02:53:24 UTC <tgeeky> you're welcome, but you did all the work :)
2011-06-13 02:53:29 UTC <byorgey> hehe
2011-06-13 02:53:51 UTC <tgeeky> i am still sort of annoyed that it's true that the 0 and 1 species are like they are
2011-06-13 02:54:10 UTC <byorgey> annoyed? why?
2011-06-13 02:54:25 UTC <tgeeky> I keep wanting to approach the idea of some implicit configuration possibilities
2011-06-13 02:54:35 UTC <tgeeky> like a set of colors coming first
2011-06-13 02:54:57 UTC <tgeeky> but I was rather convinced that it doesn't make any sense through that framework
2011-06-13 02:55:22 UTC <tgeeky> for instance, the boxes themselves could have coloration
2011-06-13 02:56:05 UTC <tgeeky> but again, doesn't make sense :/
2011-06-13 02:56:28 UTC <tgeeky> one quick question, though
2011-06-13 02:56:41 UTC <tgeeky> you referred, several times, to the enumeration [1..n]
2011-06-13 02:58:08 UTC <tgeeky> re "we can often take the set [n] as the canonical label set
2011-06-13 02:58:09 UTC <tgeeky> "
2011-06-13 02:58:29 UTC <tgeeky> if that set is really the Peano construction, could you not start from any number?
2011-06-13 02:58:47 UTC <tgeeky> like, arbitrarily choose [5..n]
2011-06-13 02:59:13 UTC <tgeeky> so the resulting list of labels has the same magnitude, but there are implicit choices before labeling?
2011-06-13 02:59:51 UTC <tgeeky> or does even this not make a difference?
2011-06-13 03:00:46 UTC <byorgey> tgeeky: you can choose any n-element set you want
2011-06-13 03:01:01 UTC <tgeeky> that just changes the labeling, though, it doesn't add any structure
2011-06-13 03:01:04 UTC <tgeeky> correct?
2011-06-13 03:01:06 UTC <byorgey> the functoriality of species is exactly what tells us that it doesn't matter
2011-06-13 03:01:07 UTC <byorgey> right
2011-06-13 03:03:32 UTC <tgeeky> pretty cool, though
2011-06-13 03:03:44 UTC <tgeeky> I am rather angry that I hadn't been introduced to it earlier
2011-06-13 03:04:06 UTC <tgeeky> it seems like a *large* section of the combinatorics course I struggled through could have been lubricated by the clarity of your paper
2011-06-13 03:04:21 UTC <tgeeky> similarly so with conal's paper/talk about automatic differentiation
2011-06-13 03:04:47 UTC <byorgey> yeah, but I don't think your teachers were holding out on you; they just didn't know about it
2011-06-13 03:05:19 UTC <byorgey> besides, maybe you wouldn't have understood it so well without struggling through the combinatorics class first =)
2011-06-13 03:06:04 UTC <tgeeky> that's true, but the same cannot be said for differentials and conal's talk :)
2011-06-13 03:06:09 UTC <tgeeky> and I don't hold anyone responsible.
2011-06-13 03:06:26 UTC <tgeeky> we are blessed to live in the golden age of information
2011-06-13 03:07:49 UTC <tgeeky> byorgey: are both you and your wife reading the theology/christianity books?
2011-06-13 03:08:01 UTC <tgeeky> or is that her primary interest?
2011-06-13 03:08:07 UTC <byorgey> tgeeky: both of us
2011-06-13 03:08:29 UTC <tgeeky> you guys read a lot, I bet you don't have much time for TV :)
2011-06-13 03:08:37 UTC <tgeeky> (rather a good thing!)
2011-06-13 03:09:03 UTC <byorgey> we don't watch TV at all =)
2011-06-13 03:09:16 UTC <byorgey> we have one but we use it only for watching movies occasionally
2011-06-13 03:10:35 UTC <tgeeky> byorgey: do you have a thesis in mind, by the way?
2011-06-13 03:11:14 UTC <tgeeky> or do you see your existing work as a start for it?
2011-06-13 03:11:51 UTC <byorgey> tgeeky: not quite sure yet, but it looks like it may end up having to do with adding dependent-type-ish features to GHC
2011-06-13 03:12:00 UTC <tgeeky> awh :(
2011-06-13 03:12:17 UTC <byorgey> tgeeky: but don't mention that in #haskell, some people may get too excited ;)
2011-06-13 03:12:29 UTC <tgeeky> maybe not awh, but I keep getting the feeling like DpTs are going to come to haskell in one HUGE chunk
2011-06-13 03:12:51 UTC <tgeeky> hehe :)
2011-06-13 03:12:55 UTC <luite> byorgey: ooh :p
2011-06-13 03:13:35 UTC <luite> I would really like things like type-level naturals and stuff to be more readable and usable :)
2011-06-13 03:15:54 UTC <byorgey> luite: someone is currently working on adding type-level naturals as a special case
2011-06-13 03:16:39 UTC <luite> I'm sure people want more if those are useful :)
2011-06-13 03:16:53 UTC <byorgey> anyway, I'm off to bed, talk to you all later
2011-06-13 13:06:49 UTC <fryguybob> byorgey: I think you missed pushing a change to core on the latest.  Lib needs  instance Atomic ()  to build.
2011-06-13 13:47:10 UTC <byorgey> fryguybob: ah, so I did, sorry about that.  pushed now.
2011-06-13 13:47:36 UTC <fryguybob> byorgey: No problem.  I have a lot to catch up on :D.
2011-06-13 13:47:52 UTC <byorgey> hehe, I guess you do =)
2011-06-13 13:48:00 UTC <byorgey> ping me if you have any questions.
2011-06-13 13:48:33 UTC <fryguybob> ok
2011-06-13 14:06:25 UTC <fryguybob> byorgey: Should   text "abc"   result in something at this point?
2011-06-13 14:06:43 UTC <byorgey> fryguybob: yes, why?
2011-06-13 14:07:00 UTC <byorgey> oh, wait, just text "abc" by itself won't work
2011-06-13 14:07:06 UTC <fryguybob> ok
2011-06-13 14:07:07 UTC <byorgey> because text objects have zero size
2011-06-13 14:07:16 UTC <byorgey> put it on top of a square or something.
2011-06-13 14:08:27 UTC <fryguybob> square 1 <> text "abc"   just a square for me.
2011-06-13 14:09:33 UTC <byorgey> hmm, let me try
2011-06-13 14:12:18 UTC <byorgey> hmm, I see giant letters
2011-06-13 14:12:57 UTC <byorgey> fryguybob: what about dia-cairo/test/Text.hs ?
2011-06-13 14:13:16 UTC <fryguybob> ah, I missed that, I'll try it.
2011-06-13 14:14:10 UTC <fryguybob> Just a red dot.
2011-06-13 14:14:29 UTC <byorgey> ok, weird.
2011-06-13 14:14:47 UTC <fryguybob> Perhaps there is some Cairo setting for default font?
2011-06-13 14:14:49 UTC <byorgey> fryguybob: try specifying a font that you know you have installed?
2011-06-13 14:14:59 UTC <byorgey> yeah, I don't know how it chooses a default font
2011-06-13 14:15:18 UTC <byorgey> text "abc" # font "blah"
2011-06-13 14:21:51 UTC <fryguybob> byorgey: Still nothing.  I'll see if I can find anything about cairo, fonts, and windows.
2011-06-13 14:21:57 UTC <byorgey> ok.
2011-06-13 15:29:00 UTC <fryguybob> byorgey: I looked at the PostScript output and where I would expect an output of text I get:  q ... 0 0 m S Q  (save, ..., move to (0,0), stroke, restore)
2011-06-13 15:33:15 UTC <byorgey> weird, my postscript output has lots of text-y looking stuff
2011-06-13 15:33:36 UTC <byorgey> not that I know all that much about postscript
2011-06-13 15:33:58 UTC <fryguybob> byorgey: The Chart package's ps output has a font embedded.  As far as I can tell it is calling Cairo the same way as Diagrams.
2011-06-13 15:34:11 UTC <fryguybob> I will have to dig some more.
2011-06-13 15:34:14 UTC <byorgey> yes, my output has a font embedded too
2011-06-13 15:35:17 UTC <byorgey> I'm sad you have to do all this extra work to get things to work on Windows, but also glad that someone is doing it, because otherwise windows users would be out of luck!
2011-06-13 15:43:28 UTC <fryguybob> I don't mind :D, makes me feel useful.
2011-06-13 15:43:32 UTC <luite> hehe
2011-06-13 15:43:47 UTC <luite> I'd find it usefull too, since I use windows on my deskto
2011-06-13 15:43:54 UTC <luite> useful
2011-06-13 15:43:57 UTC <luite> desktop
2011-06-13 15:44:02 UTC <tgeeky> me too :(
2011-06-13 15:44:30 UTC <luite> still I hope that it will eventually work without cairo :)
2011-06-13 15:44:37 UTC <byorgey> we really need to work on a non-cairo backend
2011-06-13 15:44:38 UTC <byorgey> yeah
2011-06-13 16:01:25 UTC <byorgey> just pushed some patches adding support for external image primitives
2011-06-13 16:01:52 UTC <byorgey> currently only works with PNG, and if you give it a size other than the actual size of the image it probably won't do what you think
2011-06-13 16:01:55 UTC <byorgey> but it's a good start =)
2011-06-13 16:04:24 UTC <byorgey> see dia-cairo/test/Image.hs for an example
2011-06-13 16:07:41 UTC <fryguybob> ACTION sighs.
2011-06-13 16:07:51 UTC <fryguybob> test = C.withPSSurface "test.ps" 500 500 (\s -> C.renderWith s (C.showText "hello world")) -- this works fine...
2011-06-13 16:11:14 UTC <byorgey> what!
2011-06-13 16:11:50 UTC <byorgey> In theory that is exactly what the cairo backend is doing, only with a few more transformations and such
2011-06-13 16:12:07 UTC <fryguybob> I know, it doesn't make sense.
2011-06-13 16:14:50 UTC <fryguybob> It appears to be the   cairoTransf  call that kills it.
2011-06-13 16:16:07 UTC <byorgey> oh, interesting
2011-06-13 16:17:27 UTC <byorgey> fryguybob: maybe stick some calls to Debug.Trace.traceShow into cairoTransf and see what coefficients it is seeing?
2011-06-13 16:17:37 UTC <fryguybob> Yeah, doing that now.
2011-06-13 16:17:54 UTC <byorgey> I don't know why this would be platform-dependent.
2011-06-13 16:18:19 UTC <byorgey> maybe the call to textExtents is not working properly?
2011-06-13 16:19:38 UTC <fryguybob> the coefficients I get are: [1.0,0.0,0.0,1.0,-0.6132568359375004,7.580566406250003e-2]
2011-06-13 16:20:49 UTC <fryguybob> Which is just a translation...
2011-06-13 16:21:54 UTC <byorgey> as it should be
2011-06-13 16:21:59 UTC <fryguybob> If I change the translation to (0,0) I get the font in the file again.
2011-06-13 16:22:15 UTC <byorgey> most strange
2011-06-13 16:22:27 UTC <fryguybob> I'll try changing the order of things.
2011-06-13 16:24:46 UTC <byorgey> fryguybob: what version of cairo do you have installed?
2011-06-13 16:25:00 UTC <byorgey> I mean cairo itself, not the Haskell bindings
2011-06-13 16:25:32 UTC <fryguybob> 2.20.0
2011-06-13 16:25:55 UTC <byorgey> ok. just trying to google around for bug reports that might be relevant
2011-06-13 16:35:35 UTC <fryguybob> byorgey: Actually it appears to be 1.8.10 of cairo.
2011-06-13 16:37:22 UTC <byorgey> ok. I haven't found anything relevant.
2011-06-13 16:38:48 UTC <fryguybob> calling  C.translate  instead of  C.transform  works.  I think that might be why chart works.
2011-06-13 16:40:58 UTC <byorgey> fascinating.
2011-06-13 16:41:30 UTC <luite> hmm, might be font rendering backend related. is it possible to force cairo to use freetype?
2011-06-13 16:42:23 UTC <byorgey> I mean, if necessary we can special-case cairoTransf to use C.translate when possible...
2011-06-13 16:42:42 UTC <byorgey> but that seems unsatisfactory and hackish
2011-06-13 16:43:26 UTC <luite> yeah would also cause more problems in the future, when windows users can't render scaled or rotated text
2011-06-13 16:45:22 UTC <byorgey> good point.
2011-06-13 16:46:27 UTC <fryguybob> Here is the minimal test case:  http://hpaste.org/47765
2011-06-13 16:49:07 UTC <fryguybob> Rotating and scaling both work when called directly.
2011-06-13 16:49:59 UTC <luite> hmm then at least most use cases should be covered
2011-06-13 16:50:14 UTC <fryguybob> I suppose I should try a newer version of Cairo but I think that is going to be a pain.
2011-06-13 16:50:48 UTC <byorgey> fryguybob: hmm, of the three lines in that example, which do you think should generate text? the first and third?
2011-06-13 16:51:36 UTC <byorgey> I tried it here (linux) and only see text generated by the third one
2011-06-13 16:52:06 UTC <byorgey> fryguybob: I think you switched 100.0 and 0.0 in the first line
2011-06-13 16:52:27 UTC <fryguybob> oops yes.
2011-06-13 16:52:27 UTC <byorgey> when I change it to .... 0.0 100.0 then I see some text
2011-06-13 16:53:20 UTC <fryguybob> If you add a   C.moveTo 0 100  before everything then you should see text for all three, I only see text for the translate and the trivial matrix.
2011-06-13 16:55:16 UTC <byorgey> ok, yes, I can confirm that I see text for all three after adding the moveTo.
2011-06-13 17:01:33 UTC <byorgey> I wonder if we should file a bug against cairo?
2011-06-13 17:03:14 UTC <fryguybob> ACTION cabal install gtk --reinstall
2011-06-13 17:08:19 UTC <byorgey> whee
2011-06-13 17:41:58 UTC <luite> yay my new wolfgang backend handles web requests now
2011-06-13 17:44:24 UTC <byorgey> \o/
2011-06-13 17:45:06 UTC <tgeeky> ACTION coughs release! :o
2011-06-13 17:45:33 UTC <luite> oh niklas broberg responded to my haskell-src-exts bug report, he says that it's tricky to fix
2011-06-13 17:47:08 UTC <luite> tgeeky: nah it's still incomplete, I still need to add resource management (when a request generates an image for example, an extra image resource file must be written), and by backend, I mean that it's not a site now, but just a url where you enter an expression, and get a json response
2011-06-13 17:52:56 UTC <luite> and apparently some things still go wrong with exceptions
2011-06-13 17:54:02 UTC <tgeeky> luite: but I *want* that
2011-06-13 17:54:05 UTC <tgeeky> lol
2011-06-13 17:54:09 UTC <tgeeky> i want the backend more than I want the frontend :o
2011-06-13 17:54:22 UTC <tgeeky> but it's your choice
2011-06-13 17:54:52 UTC <luite> all in due time ;)
2011-06-13 17:55:20 UTC <luite> what do you want with just a backend though, can't you use ghci?
2011-06-13 17:55:54 UTC <tgeeky> ghci isn't a good starting point for pretty[parse,print]-ing
2011-06-13 17:55:59 UTC <tgeeky> especially not in windows
2011-06-13 17:56:23 UTC <tgeeky> plus, I really want to deal with wrapped objects in a browser so I can toy with D3 and protovis and diagrams
2011-06-13 17:56:27 UTC <luite> hmm, I don't really see the use of this for pretty printing
2011-06-13 17:56:41 UTC <tgeeky> it's just an interpreter, right?
2011-06-13 17:57:16 UTC <fryguybob> byorgey: Thanks for the help, I'll try to get the newer version of Cairo working tomorrow or later today if I have time.
2011-06-13 17:57:17 UTC <luite> well the main point of all this work is making safe execution of code, including IO, fast enough
2011-06-13 17:57:44 UTC <tgeeky> sure, but the point from my perspective is
2011-06-13 17:57:50 UTC <luite> if it doesn't need to be safe, then there's no point to installing this :)
2011-06-13 17:57:52 UTC <tgeeky> to pretty-print in an environment that's not fixed-width
2011-06-13 17:58:08 UTC <tgeeky> well, I still don't have any interpreter snap backends
2011-06-13 17:58:17 UTC <byorgey> fryguybob: great, thanks!
2011-06-13 17:58:28 UTC <tgeeky> though I did stumble upon something like that on github
2011-06-13 17:58:33 UTC <luite> tgeeky: if you just want to evaluate some code, you can use hint
2011-06-13 17:58:59 UTC <luite> but that's not really acceptable if you want to deal with timeouts and proper isolation between clients
2011-06-13 17:59:05 UTC <tgeeky> ;)
2011-06-13 17:59:19 UTC <tgeeky> which is why I'd like what you're doing, regardless of the frontend
2011-06-13 17:59:33 UTC <tgeeky> but like I said, it's your choice, and in due time is fine, since I'm still catching up
2011-06-13 18:02:20 UTC <luite> keep in mind that it will only work on a special ubuntu server install with selinux and a lot of extra user accounts. you can probably not run it on your desktop linux unless you want to do a lot of selinux hacking
2011-06-13 18:02:53 UTC <tgeeky> that might be fine, I can just use VMs like (i'm guessing) you also do
2011-06-13 18:02:57 UTC <tgeeky> but just keep going
2011-06-13 18:03:10 UTC <tgeeky> anything that slows you down (such as publishing your code) slows me down too :)
2011-06-13 18:03:17 UTC <tgeeky> I doubt I could even quickly understand everything you're doing yet
2011-06-13 18:04:05 UTC <luite> I'm not using anything complicated, a proper grasp of monad transformers is probably all that's required to understand it
2011-06-13 18:04:15 UTC <tgeeky> byorgey: It occurs to me that there's some overlap between the invertible-syntax / partial iso paper, and lenses (and bidirectional lenses) in general...
2011-06-13 18:04:20 UTC <tgeeky> luite: then you've proved my point :)
2011-06-13 18:04:47 UTC <tgeeky> byorgey: is there a concise description you would apply to the concepts?
2011-06-13 18:05:37 UTC <byorgey> tgeeky: indeed, there is a strong connection between the two, but I'm not sure I could precisely articulate the relationship
2011-06-13 18:06:41 UTC <byorgey> tgeeky: if you're interested you should ask dmwit, he's a colleague of mine who is doing work on lenses
2011-06-13 18:10:29 UTC <tgeeky> byorgey: ah, he is the author of the symmetric lenses paper I read a while ago but didn't understand. I should read it again.
2011-06-13 21:07:12 UTC <fryguybob> Looks like I run into this issue: http://hackage.haskell.org/trac/gtk2hs/ticket/1211  with a newer cairo.
2011-06-13 21:15:57 UTC <luite> ah I had similar errors
2011-06-13 21:17:09 UTC <luite> but I thought that doing other things was more fun than trying to fix that issue ;)
2011-06-13 22:04:37 UTC <byorgey> ugh
2011-06-13 22:14:15 UTC <byorgey> I am super confused.  The image stuff was working, and I haven't changed anything, and now it isn't.
2011-06-13 22:14:38 UTC <fryguybob> solar flares.
2011-06-13 22:14:48 UTC <byorgey> obviously one of those three is incorrect.
2011-06-13 22:14:55 UTC <byorgey> ah yes, or solar flares
2011-06-13 22:15:02 UTC <fryguybob> Or ants.
2011-06-13 22:18:42 UTC <byorgey> those tricksy ants!
2011-06-13 22:20:16 UTC <fryguybob> You must debug them.
2011-06-13 22:33:17 UTC <fryguybob> byorgey: With a newer cairo I get an error message:  user error (invalid matrix (not invertible))
2011-06-13 22:33:56 UTC <fryguybob> My guess is that it is related to the code here:  http://cgit.freedesktop.org/cairo/commit/?id=4ce2b62bcea49eccc0a4ee3781a115e4a34d3ad4
2011-06-13 22:35:35 UTC <luite> how did you install the newer cairo?
2011-06-13 22:36:29 UTC <fryguybob> I didn't really get around that issue, just using --make.
2011-06-14 01:18:44 UTC <byorgey> fryguybob: hmm, but we shouldn't ever be passing noninvertible matrices to cairo.
2011-06-14 01:56:41 UTC <tgeeky> > instance Show a => Show (ESW a) where
2011-06-14 01:56:41 UTC <tgeeky> >   show m = "Log:\n"  ++ log ++ "\n" ++
2011-06-14 01:56:41 UTC <tgeeky> >            "Count: " ++ show cnt ++ "\n" ++
2011-06-14 01:56:41 UTC <tgeeky> >            result
2011-06-14 01:56:41 UTC <tgeeky> >     where ((res, cnt), log) = runWriter (runStateT (runErrorT m) 0)
2011-06-14 01:56:43 UTC <tgeeky> >           result   = case res of
2011-06-14 01:56:46 UTC <tgeeky> >                        Left s -> "Error: " ++ s
2011-06-14 01:56:48 UTC <tgeeky> bah, sorry.
2011-06-14 01:56:56 UTC <tgeeky> evidently right-click + something else pastes
2011-06-14 13:48:37 UTC <fryguybob> byorgey: I don't think it is an issue with the data on our side beyond something potentially not being initialized (at the gtk2hs cairo level).  I'm attempting to build Cairo locally here to probe at what the actual data is.
2011-06-14 14:01:22 UTC <luite> whoah stil fixing those same text rendering problems?
2011-06-14 14:17:29 UTC <byorgey> luite: fryguybob does not give up easily =)
2011-06-14 14:17:35 UTC <byorgey> fryguybob: thanks, sounds good
2011-06-14 14:18:42 UTC <luite> I remember the first time installing gtk2hs on windows, took me a few days :(
2011-06-14 14:19:07 UTC <luite> fortunately the situation has improved :)
2011-06-14 14:23:16 UTC <byorgey> =)
2011-06-14 16:17:21 UTC <luite> byorgey: hmm, I have a problem with polymorphism and Diagrams in Wolfgang, maybe you know how to solve it
2011-06-14 16:20:54 UTC <luite> byorgey: this is the Wolfgang module with the Eval and EvalIO typeclasses for types that can be rendered: http://pastebin.com/6aE6Q8E8
2011-06-14 16:21:10 UTC <luite> http://pastebin.com/rnSMg2Uh  and the instance for Diagrams
2011-06-14 16:21:28 UTC <luite> but now    circle :: Diagrams Cairo R2  works
2011-06-14 16:21:50 UTC <luite> but without a type annotation, it doesnt
2011-06-14 17:12:28 UTC <tgeeky> hm
2011-06-14 17:12:31 UTC <tgeeky> interesting idea
2011-06-14 17:17:48 UTC <tgeeky> byorgey: do you follow any of Baez's work?
2011-06-14 17:20:47 UTC <tgeeky> anyway, I just got http://www.amazon.com/Deep-Beauty-Understanding-Mathematical-Innovation/dp/1107005701
2011-06-14 17:20:58 UTC <tgeeky> I read the introduction and some of Baez's (introductory) chapter
2011-06-14 17:21:03 UTC <tgeeky> seems very good, and clear
2011-06-14 17:22:02 UTC <luite> he's from n-Cat cafe right?
2011-06-14 17:22:10 UTC <tgeeky> yeah, I think he's the ringleader over there
2011-06-14 17:22:25 UTC <tgeeky> but the introduction of the book
2011-06-14 17:23:32 UTC <tgeeky> is an argument about the utility of taking a look at things, [more abstract] than current mathematical physics, [more mathematical] than current physical mathematics, and [alternately philosophical] interpretations of those two
2011-06-14 17:23:55 UTC <tgeeky> 'current mathematical physics' is taken to mean operator algebras on hilbert spaces
2011-06-14 17:26:24 UTC <luite> hm, I've added it to my to-read queue
2011-06-14 18:11:32 UTC <byorgey> luite: I get "unknown paste id" for both of those links
2011-06-14 18:11:56 UTC <byorgey> luite: but I think I can explain what is going on
2011-06-14 18:12:26 UTC <luite> byorgey: oh sorry I set them to expire
2011-06-14 18:12:48 UTC <luite> I have some code on hpaste with a simplified version
2011-06-14 18:13:04 UTC <byorgey> luite: do you understand why  (show . read) :: String -> String   does not type check?
2011-06-14 18:13:13 UTC <luite> yeah
2011-06-14 18:13:14 UTC <byorgey> it is the same problem here
2011-06-14 18:13:27 UTC <luite> but ghci solves some of it with defaulting
2011-06-14 18:14:00 UTC <byorgey> true, but the defaulting mechanism is not extensible
2011-06-14 18:14:05 UTC <luite> indeed :(
2011-06-14 18:14:41 UTC <byorgey> it's a bit more annoying in this case because there are situations where we know that the choice of type for a certain unconstrained type variable will not affect the semantics at all
2011-06-14 18:14:47 UTC <byorgey> but there is no way to tell ghc that.
2011-06-14 18:15:09 UTC <byorgey> it insists on having a concrete instantiation for everything.
2011-06-14 18:16:22 UTC <byorgey> luite: I think you should just add  eval (foo :: Diagram Cairo R2)  etc. to your list of expressions to try
2011-06-14 18:16:33 UTC <byorgey> a bit kludgy, perhaps, but I can't think of a better solution at the moment.
2011-06-14 18:16:39 UTC <luite> that's horribly non-extensible :p
2011-06-14 18:16:53 UTC <byorgey> indeed.
2011-06-14 18:17:13 UTC <luite> I was thinking to use the ghci :info functionality from the GHC API instead
2011-06-14 18:17:29 UTC <byorgey> another possibility is to maintain a "cairo-only" version of the diagrams Prelude, which just re-exports everything from Diagrams.Prelude but with monomorphic types
2011-06-14 18:17:44 UTC <luite> basically doing :info Eval and :info EvalIO
2011-06-14 18:17:46 UTC <byorgey> then provide that version in Wolfgang instead of the real polymorphic Prelude
2011-06-14 18:18:12 UTC <byorgey> luite: I don't understand, how would :info Eval help?
2011-06-14 18:18:39 UTC <luite> you list the instances of Eval and try to find one that fits the inferred type of the expression
2011-06-14 18:18:56 UTC <byorgey> ah, I see, that's clever
2011-06-14 18:19:08 UTC <luite> still not terribly elegant :)
2011-06-14 18:19:12 UTC <byorgey> no =)
2011-06-14 18:19:29 UTC <byorgey> well, it's a lot better than putting in a special case for diagrams =)
2011-06-14 18:19:59 UTC <luite> yeah I really wanted to avoid that
2011-06-14 18:26:51 UTC <luite> I suspect that there will be much more situations here where defaulting will be desirable
2011-06-14 18:58:44 UTC <fryguybob> Well, I finally got cairo to build and link and now it doesn't have a problem with the matrix, but now it leaves the 'h' off of "hello world".
2011-06-14 19:05:03 UTC <byorgey> o.O
2011-06-14 19:07:58 UTC <byorgey> perhaps you accidentally have your localization settings on "Cockney"?
2011-06-14 19:12:42 UTC <fryguybob> If you do "howdy" it outputs: "top of the morning to ya gov'na"
2011-06-14 19:13:53 UTC <byorgey> amazing
2011-06-14 19:21:27 UTC <fryguybob> This only happens when I use a matrix, though.
2011-06-14 19:22:26 UTC <byorgey> quite bizarre.
2011-06-14 19:24:36 UTC <fryguybob> Yeah.  My build is not using freetype so I assume that it is using the windows api for those things (the builds I was using before do use freetype).
2011-06-14 19:27:13 UTC <byorgey> fryguybob: the funny thing is that I have not been able to find much of anything about other people struggling with cairo+text on windows.  you'd think others would have run into whatever this is before.
2011-06-14 19:27:20 UTC <byorgey> but maybe I am just not searching for the right things.
2011-06-14 19:44:17 UTC <fryguybob> byorgey: Yeah, poking at the code there appears to be a bunch of strange paths for things to take that I would not be surprised if they do not get called very often.
2011-06-14 20:06:38 UTC <luite> byorgey: do you still have so many ants? you should feed them this ;) http://themetapicture.com/media/funny-ants-eating-jell-o.jpg
2011-06-14 20:08:11 UTC <byorgey> hehe
2011-06-14 20:08:29 UTC <byorgey> I don't think my ants are see-through like that
2011-06-14 20:09:11 UTC <luite> oh then I guess feeding them would only make the problem worse :)
2011-06-14 20:09:17 UTC <luite> +then
2011-06-14 20:09:24 UTC <byorgey> indeed.
2011-06-14 20:09:53 UTC <byorgey> if you want your mind blown search on youtube for "time-laps ants dead lizard" or something like that
2011-06-14 20:10:00 UTC <byorgey> *lapse
2011-06-14 20:10:21 UTC <byorgey> I can't tell you the precise URL since I have youtube blocked at work
2011-06-14 20:11:05 UTC <luite> ah found it
2011-06-14 20:23:52 UTC <tgeeky> 15:07 < byorgey> perhaps you accidentally have your localization settings on "Cockney"?
2011-06-14 20:23:57 UTC <tgeeky> lol!
2011-06-14 20:24:08 UTC <tgeeky> that brightened my day
2011-06-14 20:35:33 UTC <byorgey> tgeeky: =)
2011-06-14 20:35:55 UTC <tgeeky> byorgey: did you check out "Deep Beauty" the new book?
2011-06-14 20:36:44 UTC <byorgey> no
2011-06-14 20:37:11 UTC <tgeeky> I suggest it. I read a few dozen pages. It may be interesting to you merely for the historical bent on category theory
2011-06-14 20:37:22 UTC <tgeeky> http://www.amazon.com/Deep-Beauty-Understanding-Mathematical-Innovation/dp/1107005701
2011-06-14 20:37:27 UTC <byorgey> OK, I'll add it to my list.
2011-06-14 20:45:11 UTC <luite> I added it to  my ipad :p
2011-06-14 20:46:54 UTC <byorgey> btw luite tgeeky fryguybob, tomorrow morning I'm headed to http://www.cs.uoregon.edu/Activities/summerschool/summer11/ for a week, don't know how much time/internet access I'll have
2011-06-14 20:46:59 UTC <byorgey> just fyi
2011-06-14 20:47:04 UTC <tgeeky> byorgey: we'll miss you :o
2011-06-14 20:47:23 UTC <byorgey> heh, I'll miss you too =)
2011-06-14 20:47:30 UTC <luite> hehe
2011-06-14 20:47:43 UTC <tgeeky> you're not presenting? but Pierce is
2011-06-14 20:47:57 UTC <luite> have fun and stuff :)
2011-06-14 20:48:24 UTC <byorgey> tgeeky: I'm going as his TA, I'm running some labs associated with his lectures
2011-06-14 20:48:28 UTC <byorgey> luite: thanks =)
2011-06-14 20:48:35 UTC <tgeeky> ok.
2011-06-14 20:48:48 UTC <tgeeky> is there expected to be anything groundbreaking at this conference?
2011-06-14 20:48:53 UTC <tgeeky> or is a "summary" conference?
2011-06-14 20:49:11 UTC <byorgey> it's not a conference at all, it's a summer school
2011-06-14 20:49:29 UTC <tgeeky> oh.
2011-06-14 20:49:35 UTC <byorgey> although there will be some really smart people presenting so maybe they will present some new ideas
2011-06-14 20:49:54 UTC <byorgey> but mostly it's to teach beginning PhD students as much about programming languages as possible in 2.5 weeks
2011-06-14 20:50:04 UTC <tgeeky> hehe
2011-06-14 20:50:09 UTC <tgeeky> slam'n'cram
2011-06-14 20:50:19 UTC <byorgey> yep, I hear it is quite exhausting
2011-06-14 20:50:23 UTC <tgeeky> it looks like it
2011-06-14 20:50:24 UTC <byorgey> =)
2011-06-14 20:50:32 UTC <tgeeky> that schedule, 2 weeks
2011-06-14 20:50:37 UTC <tgeeky> it sounds like a mathematical hangover
2011-06-14 20:50:41 UTC <byorgey> yeah, pretty insane
2011-06-14 20:51:05 UTC <byorgey> I am only going for a week so hopefully it won't be too bad.
2011-06-14 20:53:46 UTC <tgeeky> I suppose it's gotta be somewhat exhausting for you, since you have to try to quickly decipher the minds of the unintiated
2011-06-14 20:54:12 UTC <tgeeky> I found being a *good* 'lab TA' was more difficult than being a good lecture TA
2011-06-16 06:06:35 UTC <luite> tgeeky: thanks for the book suggestion yesterday, I skimmed the first chapter and have already seen lots of things that were covered in CS and FP related weblogs or papers. interesting to see them in a different context
2011-06-16 12:26:10 UTC <tgeeky> luite: GEB?
2011-06-16 15:40:05 UTC <luite> tgeeky: no, I've already read that one a long time ago :p
2011-06-16 16:30:40 UTC <tgeeky> luite: oh, deep beauty then
2011-06-16 17:01:01 UTC <luite> yes
2011-06-16 19:28:24 UTC <tgeeky> glad you liked it
2011-06-17 12:55:03 UTC <ClaudiusMaximus> so, i ended up resorting to svg+js for my latest diagram[1], mainly because i needed browser-viewable animation - i guess this is not something that 'diagrams' is likely to ever support? [1] http://claudiusmaximus.goto10.org/g/mandelbrot/exponential_strip.svg
2011-06-17 12:56:34 UTC <luite> ClaudiusMaximus: there are at least three other people interested in that ;p
2011-06-17 12:56:52 UTC <luite> conal, tgeeky and me
2011-06-17 12:57:29 UTC <ClaudiusMaximus> :)  i guess it'll have to be a custom backend, because cairo offers 0 control over svg (which i found out when i wondered about using CSS)
2011-06-17 12:57:53 UTC <luite> yes, we need a new native svg backend, and not only for this reason
2011-06-17 12:58:07 UTC <luite> it would make installation much less painful for many users
2011-06-17 12:58:15 UTC <ClaudiusMaximus> yes
2011-06-17 12:58:27 UTC <luite> nice animation by the way
2011-06-17 12:58:35 UTC <ClaudiusMaximus> thanks :)
2011-06-17 12:58:37 UTC <luite> although I don't immediately see what it's supposed to mean :)
2011-06-17 12:59:30 UTC <ClaudiusMaximus> heh, well on the left is a cartesian zoom sequence at successively 2x zoom levels, and on the right is the same pixel data unwrapped into exponential polar form
2011-06-17 13:01:10 UTC <ClaudiusMaximus> the red pixel on the right pulls from the red pixels on the left using linear interpolation
2011-06-17 13:01:38 UTC <luite> yeah that's what I expected :)
2011-06-17 13:02:13 UTC <luite> the javascript was hand-written right, not generated?
2011-06-17 13:02:16 UTC <ClaudiusMaximus> yeah
2011-06-17 13:02:28 UTC <ClaudiusMaximus> and it's somewhat ugly!
2011-06-17 13:02:47 UTC <ClaudiusMaximus> initially it was more elegant, but way too slow
2011-06-17 13:02:58 UTC <luite> hehe no problem, I'm used to ugly ;p
2011-06-17 13:03:27 UTC <ClaudiusMaximus> so instead of having a grid of <rect> pixels and highlighting them, i have a grid of <line> and a few <rect> that i move around
2011-06-17 13:05:22 UTC <luite> anyway if you think you can come up with some way of describing this kind of animation with diagrams, that would probably be
2011-06-17 13:05:32 UTC <luite> a good starting point for discussions
2011-06-17 13:07:12 UTC <ClaudiusMaximus> i'm not so good at that stuff, i tend to just hack at things until they seem to work..
2011-06-17 13:07:35 UTC <luite> I personally want to add a few more things, interactivity with mouse, callbacks to the server, so that the svg can get extra data when required
2011-06-17 13:07:47 UTC <ClaudiusMaximus> yeah that would be fun too
2011-06-17 13:07:54 UTC <luite> but animations seem to be a good place to start
2011-06-17 14:55:57 UTC <fryguybob> When I compile Cairo debug it produces correct output.  Is that progress? :D
2011-06-17 15:08:03 UTC <byorgey> uh, I guess?
2011-06-17 15:12:42 UTC <fryguybob> At least I now know where to probe the release version.
2011-06-17 15:14:51 UTC <fryguybob> There is also an interesting comment:  "The cairo_show_text() function call is part of what the cairo designers call the "toy" text API."
2011-06-17 15:15:22 UTC <fryguybob> "It is convenient for short demos and simple programs, but it is not expected to be adequate for serious text-using applications. See cairo_show_glyphs() for the "real" text display API in cairo."
2011-06-17 15:15:36 UTC <byorgey> oh, yeah, I know about that
2011-06-17 15:15:46 UTC <byorgey> but still, it ought to at least work!
2011-06-17 15:16:08 UTC <fryguybob> Yeah, but that might explain why it doesn't get much cross platform testing love.
2011-06-17 15:16:17 UTC <byorgey> that's probably true.
2011-06-17 15:16:53 UTC <fryguybob> Is is common practice to have a #define in the middle of a function?
2011-06-17 15:22:30 UTC <tgeeky> well *I'm* such an awesome programmer that I program my functions in terms of #define macros, so yes - it's the only way!
2011-06-17 15:23:22 UTC <tgeeky> </sarcasm>
2011-06-17 15:23:31 UTC <tgeeky> byorgey: hope you're having a good trip
2011-06-17 15:24:06 UTC <ClaudiusMaximus> i tend to do things like switch (x) { #define CASE(y,z) { .... }; break    CASE(1,2); CASE(3,4); .... #undef CASE }
2011-06-17 15:26:04 UTC <byorgey> tgeeky: I am, thanks =)
2011-06-17 15:47:21 UTC <fryguybob> And adding a bunch of printfs also makes things work in release...
2011-06-17 19:44:04 UTC <fryguybob> fryguybob: As best as I can tell the compiler (msvc) is slipping up on some loop unrolling.  With optimization off on one function all seems well.
2011-06-17 23:08:20 UTC <longh> has anyone already thought of writing a TikZ-backend for diagrams? :3
2011-06-17 23:09:05 UTC <byorgey> longh: yes, but no one has done it yet =)
2011-06-17 23:09:28 UTC <longh> but it is possible, isn't it?
2011-06-17 23:10:06 UTC <byorgey> sure!
2011-06-17 23:10:23 UTC <byorgey> there are no technical hurdles to overcome
2011-06-17 23:10:37 UTC <byorgey> just requires some work to actually do it
2011-06-17 23:10:43 UTC <longh> nice :)
2011-06-17 23:11:30 UTC <longh> can diagrams handle text? that would be one pretty good reason to use TikZ/metapost/etc. instead of cairo
2011-06-17 23:13:29 UTC <longh> for example if you want to use the output in a latex document
2011-06-17 23:14:35 UTC <luite> it can, but text support is limited at the moment, basic support was only very recently added
2011-06-17 23:15:45 UTC <longh> i see, hope you keep up the great work guys :)
2011-06-18 05:55:08 UTC <byorgey> ah, this refactoring is going swimmingly
2011-06-18 05:55:19 UTC <byorgey> now Diagrams are instances of PathLike too
2011-06-18 05:55:39 UTC <byorgey> so we no longer need separate polygon/polygonPath, roundedRect/roundedRectPath etc. functions
2011-06-18 05:56:01 UTC <tgeeky> clever
2011-06-18 05:56:03 UTC <byorgey> you just say 'polygon' and if you use it as a diagram, it's a diagram.  If you use it as a path, it's a path. Or a trail.
2011-06-18 08:23:39 UTC <luite> sounds good
2011-06-18 08:34:29 UTC <luite> byorgey: you suggested some time ago that it would be nice to be able to embed wolfgang expressions (+result and maybe some source code) in other sites. do you think that using an iframe would be acceptable for that?
2011-06-18 12:53:02 UTC <luite> yay I ordered a server for wolfgang :)
2011-06-18 15:57:29 UTC <byorgey> luite: I don't even know what an iframe is.
2011-06-18 15:57:32 UTC <byorgey> luite: yay, server!
2011-06-18 15:58:16 UTC <luite> byorgey: oh it basically means that you load a completely different page in an element of your own page
2011-06-18 15:58:31 UTC <luite> it's a rectangle, similar to including an image
2011-06-18 15:59:13 UTC <luite> the difference with loading code on your own page is that interaction is much more limited
2011-06-18 15:59:25 UTC <luite> you can't have your own javascript interact with the data
2011-06-18 15:59:38 UTC <byorgey> right
2011-06-18 16:00:03 UTC <byorgey> well, I don't know, I don't really care too much either way, just thought it would be interesting
2011-06-18 16:00:31 UTC <luite> ok :)
2011-06-18 16:01:26 UTC <luite> it's much easier to implement that way
2011-06-18 16:10:35 UTC <luite> it's the same type of server as projects.haskell.org
2011-06-18 16:11:45 UTC <byorgey> luite: sweet
2011-06-19 13:49:21 UTC <luite> byorgey: do you know how to typecheck and evaluate with the GHC api expressions like show.read where you want a specific type constraint on the intermediate type? I have a Type for it, but don't know how to use it
2011-06-19 14:01:17 UTC <fryguybob> show . flip asTypeOf (undefined :: (Int,[Int])) . read $ "(1  ,  [ 1, 2, 3 ] )"
2011-06-19 14:01:55 UTC <luite> fryguybob: I have a Type but the names of the types may not be in scope
2011-06-19 14:03:28 UTC <fryguybob> You can use any witness with asTypeOf:   show . flip asTypeOf (2,[3]) . read $ "(1  ,  [ 1, 2, 3 ] )"
2011-06-19 14:22:13 UTC <fryguybob> luite: A TypeRep from Data.Typeable?
2011-06-19 14:23:42 UTC <luite> no a Type, TypeRep.Type from GHC
2011-06-19 14:23:54 UTC <fryguybob> ok
2011-06-19 14:24:35 UTC <luite> sorry I'm slow, I'm trying to make an example, but it exits with an exception
2011-06-19 14:32:53 UTC <fryguybob> Maybe using  applyTy  with something like this:   \w -> show . flip asTypeOf w . read
2011-06-19 14:33:16 UTC <luite> ok it works
2011-06-19 14:33:41 UTC <luite> fryguybob: nah the problem is that the type isn't in scope, I can't make values of the type, and no type signatures either
2011-06-19 14:33:55 UTC <luite> I'll hpaste an example
2011-06-19 14:33:59 UTC <fryguybob> ok
2011-06-19 14:34:18 UTC <luite> the problem was the strict security of my thing, access to my example code was blocked :p
2011-06-19 14:35:00 UTC <fryguybob> That reminds me, is the new SafeHaskell stuff going to be helpful for you down the road?
2011-06-19 14:35:46 UTC <luite> nope
2011-06-19 14:36:22 UTC <luite> at least probably not
2011-06-19 14:37:39 UTC <luite> everything is built in such a way that the code can be untrusted
2011-06-19 14:38:41 UTC <luite> it's a much "heavier" solution than safe haskell, because it relies on lots of operating system features, but there's no risk that a vulnerability in a trusted haskell module can be exploited to gain more privileges
2011-06-19 14:39:16 UTC <fryguybob> Yeah
2011-06-19 14:40:13 UTC <luite> safe haskell might be useful in the future, for performance in some situations. for now, because everything is untrusted, all processes must be reset before another client (remote ip address) can use them, generated files are not shared between clients
2011-06-19 14:40:33 UTC <luite> having some safe subset may allow more caching and reuse
2011-06-19 14:42:22 UTC <luite> the only way that a user can make changes that are visible to others is through a wiki commit, which is always clearly visible in the history, and associated with a user account
2011-06-19 14:42:34 UTC <luite> anyway, here's my example: http://hpaste.org/47975
2011-06-19 14:43:08 UTC <luite> in module Test, there's an instance of C in scope for a type DI that's not in scope
2011-06-19 14:43:45 UTC <luite> if you load them in GHCI, then it will hide this instance if you type :info C, for this reason
2011-06-19 14:43:48 UTC <luite> but the instance is there
2011-06-19 14:46:02 UTC <luite> now for my extended defaulting stuff I want to see if for some expr, I can constrain its type so that there's an instance of C for it
2011-06-19 14:46:31 UTC <luite> so if you have in Test.hs a definition  x = undefined
2011-06-19 14:46:51 UTC <luite> then with that defaulting, c x should work, with output "DI"
2011-06-19 14:47:12 UTC <luite> because there's an instance for DI, and x can be of type DI
2011-06-19 14:47:47 UTC <luite> but there's no way that I can specify that type within an expression in the scope of Test
2011-06-19 14:49:27 UTC <luite> this example may seem a bit artificial, but in many cases, instances rely on additional types that are not in scope
2011-06-19 14:49:37 UTC <luite> for example with Diagrams you have the backend and vector space
2011-06-19 15:00:46 UTC <fryguybob> So something like  applyTy (typeOf (\w -> show . flip asTypeOf w . read))  typeDI  should result in a Type that is  DI -> String -> String?
2011-06-19 15:03:54 UTC <luite> err that would be String -> String?
2011-06-19 15:04:20 UTC <fryguybob> (\w -> show . flip asTypeOf w . read)  :: forall a. (Show a, Read a) => a -> String -> String
2011-06-19 15:04:44 UTC <luite> yeah without the typeDI
2011-06-19 15:05:15 UTC <fryguybob> applyTy is applying to the forall, not the parameter.
2011-06-19 15:05:36 UTC <luite> oh right
2011-06-19 15:05:46 UTC <luite> hmm
2011-06-19 15:06:23 UTC <fryguybob> So I think applyTy would fail if it couldn't find Show DI or Read DI otherwise it would give you the Type  DI -> String -> String.
2011-06-19 15:08:00 UTC <luite> I still don't really understand what it's supposed to do :)
2011-06-19 15:10:17 UTC <fryguybob> I don't think  typeOf  is quite right, is there some function  a -> Type  or  TypeRep -> Type ?
2011-06-19 15:11:29 UTC <luite> well you can get the Type of an expression
2011-06-19 15:11:43 UTC <luite> which is somewhate like String -> m Type
2011-06-19 15:11:48 UTC <fryguybob> ok
2011-06-19 15:12:19 UTC <luite> so   exprType "1" = Num a => a, exprType "1::Int" = Int
2011-06-19 15:15:01 UTC <fryguybob> Where is exprType defined?
2011-06-19 15:16:15 UTC <luite> GHC
2011-06-19 15:16:26 UTC <luite> oh sorry
2011-06-19 15:16:28 UTC <luite> InteractiveEval
2011-06-19 15:16:37 UTC <luite> it's reexported by GHC
2011-06-19 15:16:44 UTC <fryguybob> ah ok
2011-06-19 15:17:36 UTC <luite> it caslls hscTcExpr in HscMain
2011-06-19 15:19:20 UTC <luite> and that one tcRnExpr in TcRnDriver, the expression is parsed here
2011-06-19 15:20:09 UTC <luite>  and that one is where it seems to get hairy ;p
2011-06-19 15:28:07 UTC <fryguybob> So is the goal to just check to see if an instance is in place or to build an expression that uses a specific instance?
2011-06-19 15:30:41 UTC <luite> the goal is to find out which instances can be used, and then evaluate an expression that uses one
2011-06-19 15:30:58 UTC <fryguybob> ok
2011-06-19 15:31:52 UTC <luite> I don't really care how, but it looks like it's not possible to just generate an expression :: String, that accomplishes this :)
2011-06-19 15:32:46 UTC <luite> expressions are evaluated with compileExpr :: String -> m HValue
2011-06-19 15:32:54 UTC <luite> where the HValue is unsafeCoerced into the actual type
2011-06-19 15:38:08 UTC <fryguybob> I don't suppose this would work:  "show . flip asTypeOf (undefined :: " ++ ppType typeDI "" ++ ") . read"
2011-06-19 15:38:24 UTC <luite> no
2011-06-19 15:38:27 UTC <luite> because DI is not in scope
2011-06-19 15:39:11 UTC <luite> exprType "(undefined :: DI)" gives an exception
2011-06-19 15:40:39 UTC <fryguybob> So we need some  compileExprAs :: String -> Type -> m HValue ?
2011-06-19 15:41:05 UTC <luite> yeah that would be useful
2011-06-19 15:41:48 UTC <fryguybob> (where it isn't implemented by showing the type and tacking it onto the string :D).
2011-06-19 15:41:57 UTC <luite> yeah :(
2011-06-19 15:44:03 UTC <luite> a better name would be something like: showExprAs :: String -> Type -> m HValue, where it evaluates ("show $ " ++ expr) with expr constrained to Type
2011-06-19 15:44:33 UTC <luite> might be slightly easier than digging inside a complete expression
2011-06-19 15:51:18 UTC <byorgey> about to release 0.3 unless there are any objections
2011-06-19 15:51:39 UTC <luite> not from me :)
2011-06-19 15:52:15 UTC <fryguybob> release away :D
2011-06-19 15:53:51 UTC <luite> fryguybob: I think that somehow the typecheck check (finding the instance to use) could be done separately from the eval step... but I don't know how to do it. the types that the user sees are "zonked"
2011-06-19 15:54:00 UTC <fryguybob> luite: It looks like we want different behavior in TcRnDriver.lhs mkPlan.
2011-06-19 15:56:04 UTC <luite> hmm, that's after defaulting right?
2011-06-19 15:58:35 UTC <fryguybob> I'm not sure.
2011-06-19 15:58:54 UTC <luite> tcGhciStmts contains an interesting comment, but I don't really know what it does :)
2011-06-19 16:02:34 UTC <luite> ooh
2011-06-19 16:02:42 UTC <luite> that thing works with Type :p
2011-06-19 16:12:12 UTC <fryguybob> ACTION must go mow the lawn.
2011-06-20 06:28:06 UTC <luite> fryguybob: hmm, I finally got it working, at least some of it
2011-06-20 07:02:25 UTC <luite> fryguybob: it involves messing with the AST, you can add a type annotation based on a Type (that doesn't need to be in scope)
2011-06-21 12:47:47 UTC <fryguybob> luite: Excellent.  It would be nice if there was extensible defaulting/show in GHCI.  I wonder what the best way to do that would be.
2011-06-21 13:00:14 UTC <luite> yeah
2011-06-22 18:53:38 UTC <luite> defaulting implemented and works \o/ :)
2011-06-22 19:10:21 UTC <tgeeky> ok
2011-06-29 00:46:37 UTC <byorgey> tgeeky: haven't had much time for diagrams hacking lately, but hope to get back to it soon
2011-06-29 00:47:36 UTC <hpc> i finally got time to fix the output code for hs-svg a few days ago
2011-06-29 00:47:51 UTC <hpc> using far more printf than i would like, but it's so much better than lots of (++)
2011-06-29 00:48:09 UTC <hpc> presumably faster too, because base can guarantee that it folds in the right direction
2011-06-29 00:51:59 UTC <tgeeky> byorgey: np, I haven't had much time for things other than sysadmin work in the last week :(
2011-06-29 00:52:38 UTC <byorgey> hpc: ah, cool
2011-06-29 00:52:48 UTC <byorgey> hpc: is there a repo for it somewhere?
2011-06-29 00:52:57 UTC <hpc> https://code.google.com/p/hs-svg/
2011-06-29 01:01:56 UTC <hpc> hmm, i go on vacation in boston starting friday...
2011-06-29 01:02:03 UTC <hpc> i might find time to code more then
2011-06-29 01:07:04 UTC <byorgey> hpc: printf, ick
2011-06-29 01:07:14 UTC <byorgey> hpc: why not use Text.PrettyPrint.HughesPJ?
2011-06-29 01:07:23 UTC <byorgey> and factor out all the repeated formatting of attributes, tags, etc.
2011-06-29 01:08:05 UTC <hpc> it's an extra dependency
2011-06-29 01:09:19 UTC <hpc> im operating on the assumption that cabalizing this package is going to somehow be a huge pain in the ass
2011-06-29 01:09:30 UTC <byorgey> well, yes, but pretty is in the Haskell Platform
2011-06-29 01:09:43 UTC <hpc> don't have the platform, im afraid
2011-06-29 01:09:46 UTC <hpc> installed ghc through apt
2011-06-29 01:09:47 UTC <byorgey> I have no reason to think that will be true
2011-06-29 01:12:28 UTC <byorgey> well, then I don't know what to say other than that I really recommend installing the Platform
2011-06-29 01:12:43 UTC <byorgey> isn't there a Debian package for the Platform, anyway?
2011-06-29 01:13:17 UTC <hpc> nope
2011-06-29 01:13:34 UTC <hpc> apt-cache search platform | grep haskell
2011-06-29 01:13:37 UTC <hpc> apt-cache search platform | grep ghc
2011-06-29 01:14:38 UTC <hpc> at some point, probably before the end of summer, im gonna stab this box and do a fresh install
2011-06-29 01:14:53 UTC <byorgey> http://packages.debian.org/search?keywords=haskell-platform
2011-06-29 01:16:03 UTC <hpc> im on ubuntu
2011-06-29 01:16:08 UTC <hpc> but http://packages.ubuntu.com/oneiric/haskell-platform
2011-06-29 01:16:10 UTC <hpc> so yay
2011-06-29 01:16:32 UTC <byorgey> oh, there you go
2011-06-29 01:17:26 UTC <hpc> im using an older version of ubuntu, so that will have to wait for the upgrade too :P
2011-06-29 01:17:50 UTC <hpc> also im too lazy to switch when printf is working, for the moment
2011-06-29 01:18:15 UTC <hpc> ill hit a roadblock, or just get sick of the repeated code, then upgrade
2011-06-29 01:18:54 UTC <byorgey> heh, ok
2011-06-29 01:19:21 UTC <hpc> the way of the programmer :P
2011-06-29 02:06:36 UTC <tgeeky> i am getting somewhat frustrated with dpkg's and archpkgs, and ...
2011-06-29 02:07:08 UTC <tgeeky> it seems that very often, installing from source is the required mantra
2011-06-29 02:07:20 UTC <tgeeky> actually, haskell seems to be the exception to this trend :o
2011-06-29 02:14:47 UTC <tgeeky> luite: how have you been doing? have you read any more of Deep Beauty?
2011-06-29 10:38:25 UTC <luite> tgeeky: I'm not yet very far
2011-06-29 10:39:48 UTC <luite> I'll probably have to re-read bits and do more calculations and diagrams of my own to get a proper grasp of many of the things discussed
2011-06-29 16:55:14 UTC <tgeeky> yeah
2011-06-29 16:55:25 UTC <tgeeky> luite: I've read much of Baez's introductory chapter
2011-06-29 16:55:28 UTC <tgeeky> and my head nearly asploded
2011-06-29 16:55:43 UTC <tgeeky> I felt like I was decieving myself with his pretty pictures too
2011-07-04 11:39:06 UTC <sordina1> I'm having a bit of trouble figureing out how to write a good backend. Are there any nice examples around somewhere?
2011-07-04 15:13:27 UTC <luite> hmm, I think there's canvas backend by fryguybob, but it's probably incomplete
2011-07-04 16:01:02 UTC <sordina1> I'm reading that now. It's great, but it's so high-level I'm getting a bit dizzy :)
2011-07-04 16:04:02 UTC <luite> sorry I don't know much about it either, I want to use diagrams more in the future, but at the moment I'm still busy writing other stuffs before I can do that :)
2011-07-04 16:05:00 UTC <fryguybob> sordina1: The diagrams-canvas stuff is not much different from the cairo back end.  It is probably a little out of date too.
2011-07-04 16:05:58 UTC <sordina1> luite: What are you working on now if I may ask? I saw the wolfgang site. It was fantastic :D
2011-07-04 16:08:27 UTC <fryguybob> I think the plan was at some point to have a backend tutorial of sorts.  There probably could be a simple abstraction for any sort of backend that is "postscript like" that would be even simpler if your backend didn't need anything fancy.
2011-07-04 16:40:54 UTC <luite> sordina1: oh it's more or less a complete rewrite of wolfgang to make it actually usable and somewhat scalable
2011-07-04 16:42:14 UTC <luite> sordina1: the main differences are that in the new version, you can run arbitrary code, including IO, and that it's integrated with a wiki, where you can store pages/code, and import code from other wiki pages
2011-07-04 16:47:25 UTC <luite> I hope to have a usable version by the end of the summer, with basic diagrams support
2011-07-04 17:28:09 UTC <byorgey> sordina1: what sort of backend are you working on?
2011-07-04 17:48:50 UTC <fryguybob> byorgey: How was Oregon?
2011-07-04 17:49:01 UTC <byorgey> fryguybob: fun!
2011-07-04 17:54:58 UTC <luite> oh you're back?
2011-07-04 18:00:00 UTC <byorgey> yep
2011-07-04 18:00:14 UTC <byorgey> haven't had too much time to work on diagrams since I got back though
2011-07-04 18:00:38 UTC <byorgey> catching up on stuff, kicking off a new research project, etc.
2011-07-04 18:02:33 UTC <luite> what are you going to research?
2011-07-04 18:03:19 UTC <byorgey> oh, finally getting around to actually implementing this "type lifting" in GHC
2011-07-04 18:05:50 UTC <luite> oh cool
2011-07-04 22:10:07 UTC <tgeeky> ACTION has no idea what that is :o
2011-07-05 21:23:16 UTC <dixie> hi, I didn't know where to write so I'm writing here :)
2011-07-05 21:23:42 UTC <dixie> there is small typo in http://projects.haskell.org/diagrams/tutorial/DiagramsTutorial.html first example
2011-07-05 21:24:04 UTC <dixie> > main = defaultMain circle
2011-07-05 21:24:17 UTC <dixie> but of course circle needs radius :-)
2011-07-05 21:29:38 UTC <byorgey> dixie: oh, thanks, I didn't update the tutorial when I changed the circle function
2011-07-05 21:30:37 UTC <byorgey> dixie: circle used to take no arguments and just create a unit circle
2011-07-05 21:37:27 UTC <byorgey> I will update it tomorrow.
2011-07-11 21:31:10 UTC <dixie> stupid & lazy question :)
2011-07-11 21:32:00 UTC <dixie> i have for example three rects of the same size, I concate them into one big rect using "vcat [box1,box2,box1]"
2011-07-11 21:32:22 UTC <dixie> ops, I mean "vcat [box1,box2,box3]"
2011-07-11 21:35:36 UTC <dixie> the local origin (showOrigin red dot) is middle of box1, but I want to have it in middle of merged box (somewhere in middle of box2).
2011-07-11 21:45:32 UTC <dixie> http://rampa.sk/up/upload/haskell/trees.png
2011-07-11 21:45:47 UTC <dixie> first is what I'm getting and second is edited in gimp what I want :)
2011-07-11 21:47:21 UTC <dixie> oops, I found :) sorry ... it is centerXY.
2011-07-12 02:00:26 UTC <byorgey> dixie: sorry I missed your question, glad you figured it out =)
2011-07-13 17:06:12 UTC <luite_> so quiet here
2011-07-13 17:07:47 UTC <byorgey> yeah, I guess that's my fault =)
2011-07-13 17:07:58 UTC <byorgey> haven't had much time to work on diagrams recently
2011-07-13 17:08:43 UTC <byorgey> luite_: what have you been up to?
2011-07-13 17:12:10 UTC <luite_> haven't had too much time to do haskell lately, but I've been working on the website for wolfgang. the boring bits, authentication, wiki file storage etc
2011-07-13 17:12:41 UTC <byorgey> ah, cool
2011-07-13 17:15:43 UTC <luite_> most of the server side code is finished, at least for the basic site (user registration / login, editing your profile, creating/editing wiki pages, uploading images and data files), but a lot of javascript needs to be written before it's actually useful
2011-07-13 17:16:39 UTC <luite_> since most responses from the server (for example when requesting a diff, or the history of a file) are not a complete page, but just a json object
2011-07-13 17:17:38 UTC <luite_> it took me a while to build this because I used yesod, which I had never used before
2011-07-13 17:21:01 UTC <byorgey> ah, neat
2011-07-13 17:21:08 UTC <byorgey> would love to hear your impressions of yesod
2011-07-13 17:23:41 UTC <luite_> hmm, I'm still very new to it, so I don't know a lot of things... the main impression still is that it's very new and unfinished. lots of missing docs, features that don't really work
2011-07-13 17:24:44 UTC <luite_> for example I want to use mathjax, which has around 30000 files. yesod uses some static site thing that generates a haskell name for every single file, and it has to calculate a hash for each file at compile time
2011-07-13 17:25:03 UTC <luite_> so that didn't really help compilation speed ;p
2011-07-13 17:25:54 UTC <byorgey> yikes
2011-07-13 17:26:45 UTC <luite_> I now serve mathjax with a different web server, but an updated yesod static file server should be finished soon
2011-07-13 17:28:15 UTC <luite_> but other than that, hamlet and the other template things are quite practical, probably easier to work with and more concise than the snap equivalent
2011-07-13 17:28:38 UTC <luite_> but it's slightly confusing to work with, and sometimes difficult to find errors, because there's so much generated code that you can't see
2011-07-13 17:30:02 UTC <byorgey> I may end up using some yesod-based stuff for the diagrams user manual
2011-07-13 17:30:09 UTC <luite_> instead of explicitly binding tags or keys to values, you just use names in scope, but especially when the template is in a different file, it's a bit confusing what eactly it uses
2011-07-13 17:30:10 UTC <byorgey> which is why I am interested
2011-07-13 17:30:14 UTC <luite_> for example you use:
2011-07-13 17:30:20 UTC <luite_> userName <- getUsernameSomehow
2011-07-13 17:30:29 UTC <byorgey> oh, I can see how that would be confusing
2011-07-13 17:30:35 UTC <luite_> [hamlet| <div>welcome #{userName}
2011-07-13 17:30:37 UTC <luite_> |]
2011-07-13 17:30:54 UTC <byorgey> right, and that hamlet template could be put in a separate file?
2011-07-13 17:31:10 UTC <luite_> yeah
2011-07-13 17:31:33 UTC <luite_> but it uses the template haskell magic to read and parse the file at compile time of course
2011-07-13 17:31:53 UTC <byorgey> right
2011-07-13 17:32:45 UTC <luite_> so you do have to recompile the application when you make template changes. there's a yesod devel server that automatically tries to do this, but it's not terribly good yet
2011-07-13 17:33:17 UTC <luite_> it basically keeps track of changes in template files, then touches the corresponding .hs file and then runs cabal build again
2011-07-13 17:33:33 UTC <luite_> so your editor complains about changed haskell files all the time :)
2011-07-13 17:33:43 UTC <luite_> (at least mine, emacs, does)
2011-07-13 17:33:47 UTC <byorgey> heh
2011-07-13 17:34:14 UTC <luite_> and it's also rather slow, it would be better if it just used the app in interpreted mode and called the ghc api to reload the files when necessary
2011-07-13 17:35:26 UTC <luite_> and I heard some complaints about yesod using so much quasiquotation in #snapframework, for example where you define your persistent data structures, or the routing table for the site
2011-07-13 17:35:55 UTC <luite_> those could've probably been done in a more haskelly way, with more regular haskell, and a few bits of template haskell
2011-07-13 17:36:40 UTC <luite_> so it does uses its own special format there, but in practice it's not a big problem for me
2011-07-13 17:39:15 UTC <luite_> I've done a little bit of form and input validation with yesod (yesod-form), but I don't really know how it compares to digestive-functors and snap
2011-07-13 17:40:06 UTC <luite_> it's fairly easy to work with, but of course the things I need for wolfgang need all kinds of hacks ;p
2011-07-13 17:41:09 UTC <luite_> (since I cannot reload a complete page for a form submission, because the user might have an open worksheet with unsaved contents)
2011-07-13 17:43:05 UTC <luite_> the yesod guys have been talking about a 1.0 release for some time, that would give it a more stable api... but I have the feeling that it's not ready yet, that it would be better to let the api evolve freely for some more time
2011-07-13 17:47:31 UTC <luite_> persistent is also quite practical, within its limitations. it will get some big api changes as they're trying to borrow new features from groundhog
2011-07-13 18:28:47 UTC <luite_> hmm interesting, hadn't read your paper about unbound yet
2011-07-21 12:00:14 UTC <luite> just so you guys know that I haven't forgotten about wolfgang, I'm working on the login authentication stuffs: http://jabberwock.xs4all.nl/exp/wolfgang/login.png
2011-07-21 12:10:27 UTC <luite> http://jabberwock.xs4all.nl/exp/wolfgang/popup.png
2011-07-21 15:40:25 UTC <byorgey> luite: excellent =)
2011-07-21 15:40:41 UTC <byorgey> oooooh
2011-07-21 15:40:50 UTC <tgeeky> pretty pictures
2011-07-21 15:48:01 UTC <luite> it's a lot of annoying fiddly work and the code is still messy, but hopefully I can use most of this for the other dialogs, for saving pages, handling merge conflicts etc
2011-07-21 15:50:37 UTC <tgeeky> this is a 'fake' viral video set inside of the universe inside the new Deus Ex game: http://www.youtube.com/watch?v=uGzpzlvf0Gs
2011-07-21 15:50:41 UTC <tgeeky> pretty cool, pretty chilling
2011-07-21 16:09:26 UTC <fryguybob> byorgey: How is it going?
2011-07-21 16:09:59 UTC <byorgey> fryguybob: good, thanks!
2011-07-21 16:10:08 UTC <byorgey> fryguybob: how are you?
2011-07-21 16:10:30 UTC <fryguybob> Excellent.  Hanging out in California.
2011-07-21 16:10:37 UTC <fryguybob> Hac Phi is just around the corner.  I'm excited!
2011-07-21 16:11:05 UTC <fryguybob> I'm glad to be missing the heat wave :D.
2011-07-21 16:11:15 UTC <byorgey> hehe
2011-07-21 16:11:24 UTC <byorgey> I'm excited for hac phi too!!
2011-07-21 16:11:32 UTC <byorgey> not so excited about the heat wave though.
2011-07-28 17:41:32 UTC <luite> bah I hate web programming :p
2011-07-28 18:10:13 UTC <byorgey> =(
2011-07-28 18:10:24 UTC <byorgey> I thought you just said the other day that you like web programming.
2011-07-28 18:11:03 UTC <luite> I might have changed my mind ;)
2011-07-28 18:12:29 UTC <byorgey> hehe
2011-07-28 22:06:27 UTC <hpc> i don't mind web programming
2011-07-28 22:06:37 UTC <hpc> it lends itself nicely to separation of concerns
2011-07-28 22:14:47 UTC <luite> dunno, it's always lots of work to make something work, all kinds of small things that end up taking a lot of time
2011-07-28 22:15:57 UTC <luite> and in the end, I never feel that I've actually learned new things, yeah maybe how to do some weird css positioning thing, or obsure differences in font rendering between platforms, browser bugs etc... dunno, feels like useless knowledge that will be obsolete in a year
2011-07-28 22:16:15 UTC <hpc> this is true
2011-07-28 22:19:02 UTC <luite> and the haskell web framework stuff aren't really at the point where everything just works
2011-07-28 22:20:59 UTC <luite> oh and I'm bad at web design, I tend to tinker in photoshop with mockups or screenshots because I'm unhappy about them, but I never really improve them :p
2011-07-28 22:21:46 UTC <tgeeky> luite: :)
2011-07-28 22:21:53 UTC <tgeeky> i hate web design for almost exactly the same reasons
2011-07-28 22:22:02 UTC <tgeeky> specifically the insurmountable pile of small things
2011-07-28 22:23:50 UTC <luite> the pile also doesn't seem to get smaller, ever... but at least the pile of solved things grows, slowly
2011-07-28 23:49:52 UTC <hpc> im writing a web/database backend for my irc bot atm
2011-07-28 23:50:31 UTC <hpc> current plan is to have a web interface to the important stuff like catchphrases and remote admin
2011-07-28 23:50:53 UTC <hpc> then include a meta tag with the bot-friendly output
2011-07-28 23:51:30 UTC <hpc> i should probably just have the two share libraries...
2011-07-29 00:06:11 UTC <luite> ok :)
2011-07-29 00:06:18 UTC <luite> I think my laptop just died :(
2011-07-29 00:06:36 UTC <byorgey> =(
2011-07-29 00:08:18 UTC <luite> beep code says it's system board or ram modules, I'm going to try swapping ram first, but a new system board is probably way too expensive
2011-07-29 00:42:46 UTC <luite> not the ram...
2011-07-29 00:43:02 UTC <fryguybob> web programming killed it :(
2011-07-29 00:43:19 UTC <luite> yes.. I was debugging javascript when it died
2011-07-29 00:48:41 UTC <luite> hmm, apparently the most likely cause is a faulty nvidia gpu. lenovo extended the warranty for affected models by a few months, but mine is still out of warranty even after the extension
2011-08-03 16:11:50 UTC <fryguybob> ACTION now has closed cubic splines.
2011-08-03 16:54:23 UTC <fryguybob> byorgey: Should I add a Newtype instance for Point in core?
2011-08-03 16:55:07 UTC <byorgey> fryguybob: oh, sure
2011-08-03 16:55:14 UTC <byorgey> fryguybob: and hooray for closed cubic splines!
2011-08-03 16:55:21 UTC <fryguybob> :D
2011-08-03 16:56:02 UTC <luite> :)
2011-08-03 16:56:35 UTC <byorgey> I hereby authorize everyone to add Newtype instances for any newtype anywhere
2011-08-03 17:34:18 UTC <fryguybob> ACTION hugs overF
2011-08-03 17:58:22 UTC <fryguybob> Cubic splines are now pushed.
2011-08-03 18:55:41 UTC <byorgey> ACTION tries building diagrams with ghc-7.2.0rc1
2011-08-03 18:56:02 UTC <byorgey> Ambiguous module name `Prelude': it was found in multiple packages: base haskell98-2.0.0.0
2011-08-03 18:56:06 UTC <byorgey> eek
2011-08-03 18:57:07 UTC <byorgey> well, -core and -lib build just fine.  looks like we may have to wait a bit for gtk2hs to catch up though.
2011-08-03 18:57:27 UTC <fryguybob> There was a patch for that on the mailing list.
2011-08-03 18:57:46 UTC <fryguybob> ACTION looks it up...
2011-08-03 18:58:31 UTC <fryguybob> http://blog.gmane.org/gmane.comp.lang.haskell.gtk2hs.devel
2011-08-03 18:59:51 UTC <byorgey> oh, nice
2011-08-03 19:00:08 UTC <byorgey> oh, it was from my officemate Daniel. yesterday. =)
2011-08-03 19:05:16 UTC <fryguybob> I think I'm going to try to bind to the spiro lib now.  I'll make that a couple of new projects something like  spiro-raw  and  diagrams-spiro.
2011-08-03 19:06:29 UTC <byorgey> fryguybob: cool, sounds great!
2011-08-03 19:07:25 UTC <fryguybob> brb
2011-08-03 21:29:46 UTC <byorgey> yaaaaayy making curvy shapes makes me happy
2011-08-03 21:32:43 UTC <byorgey> fryguybob_: I may try coding up Metafont/Hobby, unless you were itching to do that
2011-08-03 21:33:03 UTC <fryguybob_> byorgey: Go ahead.
2011-08-03 21:33:43 UTC <fryguybob_> I'm slogging through FFI for function pointers at the moment.  If anyone has any *pointers* on how best to do that, let me know :D.
2011-08-03 21:33:53 UTC <byorgey> haha!
2011-08-03 21:34:59 UTC <byorgey> Sorry to leave you dangling, but I've never used the FFI...
2011-08-03 21:36:24 UTC <fryguybob_> I'm just writing the boiler plate that seems obvious and hoping that it works like magic.  FFI is magic after all right?
2011-08-03 21:36:57 UTC <byorgey> Right!
2011-08-03 21:38:21 UTC <byorgey> OK, I'm off homeward
2011-08-03 21:38:26 UTC <fryguybob_> later
2011-08-03 21:42:49 UTC <fryguybob_> Humm, that's scary it compiles...
2011-08-04 00:44:25 UTC <byorgey> fryguybob: it's scary what compiles?
2011-08-04 00:44:33 UTC <byorgey> oh, your FFI thing?
2011-08-04 00:44:36 UTC <fryguybob> Yeah
2011-08-04 00:44:58 UTC <byorgey> dmwit (Daniel Wagner) wanted to know whether you are using some tool to generate FFI stuff or just writing it by hand
2011-08-04 00:45:13 UTC <byorgey> (with the implication being that you should use such a tool if you are not)
2011-08-04 00:45:24 UTC <fryguybob> hsc2hs
2011-08-04 00:45:29 UTC <byorgey> OK
2011-08-04 00:45:46 UTC <fryguybob> But I may not be using it's full power.
2011-08-04 00:46:26 UTC <byorgey> I wouldn't know.
2011-08-04 00:46:51 UTC <fryguybob> I'm not sure how to do what I really want to do.
2011-08-04 00:47:30 UTC <fryguybob> The libspiro calls take a struct of function pointers that gives a postscript like context.
2011-08-04 00:48:32 UTC <fryguybob> So I would like to be able to write my api as:  spiroCall :: PostscriptLike m => [R2] -> m ()
2011-08-04 00:48:56 UTC <fryguybob> With   class MonadIO m => PostscriptLike m where ...
2011-08-04 00:59:42 UTC <fryguybob> I made it do something with   spiroCall :: PostscriptLike IO => [R2] -> IO ()   ...
2011-08-04 01:05:20 UTC <byorgey> nice
2011-08-04 01:09:15 UTC <fryguybob> Yeah, what I want to do would require a type on the foreign call that it cannot have :(.
2011-08-04 01:09:21 UTC <fryguybob> At least to do it directly.
2011-08-04 01:10:47 UTC <byorgey> sad =(
2011-08-04 01:11:03 UTC <fryguybob> So perhaps I can stuff the context of what I want into an MVar and look it up as I go along...
2011-08-04 01:54:56 UTC <byorgey> ooooh, Text.XML.HaXml.DtdToHaskell.Convert
2011-08-04 01:55:26 UTC <byorgey> looks like it generates Haskell type definitions corresponding to a DTD
2011-08-04 14:25:55 UTC <fryguybob> byorgey: I got things working with spiro via MVar.  I have a repo up if you want to try it out:  https://patch-tag.com/r/fryguybob/spiro-raw/
2011-08-04 14:26:19 UTC <byorgey> fryguybob: nifty!
2011-08-04 14:26:53 UTC <byorgey> I'll take a look
2011-08-04 14:27:36 UTC <fryguybob> I haven't convinced myself that it is quite right, but I have yet to segfault :D.
2011-08-04 14:28:12 UTC <byorgey> if it typechecks and doesn't segfault it must be right! ;)
2011-08-04 14:28:22 UTC <fryguybob> Exactly.
2011-08-04 14:28:43 UTC <fryguybob> It also appears that spiro likes to be over specified compared with what I would expect for a spline.
2011-08-04 14:29:29 UTC <fryguybob> Which is fine, I was just a little surprised by the results at first, but I think they are correct.
2011-08-04 14:29:51 UTC <fryguybob> I can't remember, do Paths form a monoid?
2011-08-04 14:30:36 UTC <byorgey> Paths form a monoid under superposition
2011-08-04 14:30:41 UTC <byorgey> Trails form a monoid under concatenation
2011-08-04 14:30:57 UTC <fryguybob> Ok
2011-08-04 14:31:14 UTC <byorgey> In general, the answer to "is X a monoid" is probably "yes" =)
2011-08-04 14:33:23 UTC <byorgey> fryguybob: re: the -- ???  note in test/diagrams.hs, you can do degree elevation using  B(t) = (1-t)B(t) + tB(t)
2011-08-04 14:33:48 UTC <fryguybob> byorgey: Good to know.
2011-08-04 14:33:53 UTC <byorgey> fryguybob: if you do that for degree 2 -> degree 3 you end up with something like  p0, (p0 + 2p1), (2p1 + p2), p2
2011-08-04 14:34:11 UTC <fryguybob> ok
2011-08-04 14:34:11 UTC <byorgey> this is on the Wikipedia page for Bezier curves, in the "Degree elevation" section
2011-08-04 14:34:57 UTC <byorgey> I don't know if that leaves the parameterization the same but it does keep the shape the same
2011-08-04 14:35:37 UTC <fryguybob> So the PostscriptLike instance for diagrams will be fairly general.  We could then make a PostscriptLike backend, then turn diagrams into diagrams.  Yo dawg?
2011-08-04 14:35:48 UTC <byorgey> hehe
2011-08-04 14:39:31 UTC <fryguybob> One of the nice examples for spiro is if you give it the corners of a square you get a circle.
2011-08-04 14:40:30 UTC <byorgey> oh, nice
2011-08-04 14:40:53 UTC <byorgey> I seem to recall that Metafont has a special case built in so if you give it two points you get a circle =)
2011-08-04 14:45:16 UTC <fryguybob> When it comes to importing font glyphs PostscriptLike might come in handy too.  I can't remember what that freetype binding was like.
2011-08-04 14:53:30 UTC <fryguybob> ACTION disapears...
2011-08-05 20:35:06 UTC <fryguybob> byorgey: I finished up diagrams-spiro.
2011-08-05 20:40:19 UTC <fryguybob> https://patch-tag.com/r/fryguybob/diagrams-spiro/
2011-08-08 21:19:51 UTC <fryguybob> byorgey: I got fed up with Cairo and wrote a native postscript backend.
2011-08-08 21:20:26 UTC <fryguybob> (fed up with Cairo on Windows specifically).
2011-08-08 21:20:51 UTC <fryguybob> ACTION goes on a bike ride...
2011-08-08 21:23:08 UTC <byorgey> fryguybob: awesome!
2011-08-08 21:23:13 UTC <byorgey> enjoy your bike ride =)
2011-08-08 21:24:01 UTC <luite> yay
2011-08-09 00:00:14 UTC <fryguybob> Still in progress but mostly functional: https://patch-tag.com/r/fryguybob/diagrams-postscript/
2011-08-09 00:51:37 UTC <alpounet> excellent
2011-08-09 01:06:01 UTC <byorgey> fryguybob: great! add it to the wiki!
2011-08-09 01:06:54 UTC <byorgey> ACTION is working hard on some secret documentation tools
2011-08-09 01:07:13 UTC <byorgey> diagrams is going to have the best documentation EVAR
2011-08-09 02:02:11 UTC <alpounet> wow
2011-08-09 02:02:17 UTC <alpounet> tell us more!
2011-08-09 02:02:26 UTC <alpounet> you just can't tease us like this
2011-08-09 03:17:27 UTC <byorgey> alpounet: hehe
2011-08-09 03:17:59 UTC <byorgey> alpounet: I'm writing some tools to convert docutils XML to various other formats
2011-08-09 03:18:20 UTC <byorgey> alpounet: so I can write in reStructuredText and output HTML, PDF, etc.
2011-08-09 03:18:56 UTC <byorgey> the nice thing about reST is that it is extensible so you can easily do arbitrary semantic markup, then insert transformations into the pipeline
2011-08-09 03:20:01 UTC <byorgey> e.g. automatically generate images from embedded diagram code, do syntax highlighting, linking to API, and anything else we think of
2011-08-09 03:24:34 UTC <byorgey> I want this for more than just diagrams, but writing the diagrams user manual was the original impetus
2011-08-09 03:29:47 UTC <fryguybob> Wiki updated.
2011-08-09 07:12:00 UTC <alpounet> sounds awesome byorgey!
2011-08-09 10:24:09 UTC <luite> are there javascript parsers for reST? :p
2011-08-09 14:04:13 UTC <byorgey> luite: don't worry, we can write a little backend to output whatever format you want for W|L
2011-08-09 14:04:19 UTC <byorgey> if that's what you're worried about
2011-08-09 14:09:53 UTC <luite> oh I have markdown lhs at the moment, but I'm slightly unhappy with the markdown heading syntax interfering with CPP. I'll probably keep this though, because I already have a good javascript parser for it
2011-08-09 14:29:06 UTC <byorgey> OK.
2011-08-09 16:32:32 UTC <fryguybob> byorgey: Is text "centered" both vertically and horizontally?
2011-08-09 16:36:19 UTC <fryguybob> Specifically  text "l" || text "j"  would not have matching baselines right?
2011-08-09 17:52:59 UTC <byorgey> fryguybob: yes, but I consider this a bug
2011-08-09 17:53:13 UTC <fryguybob> right
2011-08-09 17:54:04 UTC <byorgey> I spent an hour trying to fix it a while ago but got my brain so twisted up with transformations and coordinate spaces that I gave up
2011-08-09 17:54:42 UTC <fryguybob> What behavior were you going for with the fix?
2011-08-09 17:57:13 UTC <byorgey> I wanted text to be centered horizontally the same as it currently is, but vertically it should be centered with respect to the descent and ascent lines defined by the font, not the actual extent of the text
2011-08-09 17:57:19 UTC <byorgey> or something like that
2011-08-09 17:58:42 UTC <fryguybob> Ok.  I know of some hacky ways of doing that.
2011-08-09 17:58:51 UTC <byorgey> heh, ok =)
2011-08-09 18:05:45 UTC <luite> hmm, isn't centering the x-height better, ignoring the ascenders and descenders?
2011-08-09 18:06:45 UTC <fryguybob> luite: I think eventually we will have to have both.
2011-08-09 18:07:06 UTC <fryguybob> ACTION pushes minimal text support for diagrams-postscript.
2011-08-09 18:09:02 UTC <luite> the latest postscript still doesn't support transparency and blending, does it?
2011-08-09 18:10:21 UTC <fryguybob> Not that I am aware of (at least not directly).
2011-08-09 18:10:59 UTC <luite> do you think it would be difficult to adapt the code to output pdf instead?
2011-08-09 18:13:40 UTC <fryguybob> I don't think so, I was hoping to do that at some point.  It is mostly a matter of doing the right setup and encoding.
2011-08-09 18:13:51 UTC <fryguybob> There might be a bit more that has to be precomputed.
2011-08-09 18:16:11 UTC <luite> do you actually use postscript control structures to draw some things?
2011-08-09 18:18:03 UTC <fryguybob> Only things like measuring text and checking current line width at this point.
2011-08-09 18:18:14 UTC <fryguybob> I don't know if those are allowed in PDF or not.
2011-08-09 18:19:08 UTC <luite> oh, hmm, me neither, I've only done relatively simple graphics output with pdf in haskell
2011-08-09 18:21:26 UTC <fryguybob> The linewidth is something that I should be doing on the backend side of things anyway, but it was slightly easier to do it in the setup instead.
2011-08-09 18:23:13 UTC <luite> I wanted to make something that substituted "bad" letters (scanned, or low quality bitmap fonts) with proper fonts, based on some visual similarity measures, word lists and user feedback, but it was too much work and tricky to get right
2011-08-09 18:25:27 UTC <fryguybob> Yeah, that would get tricky
2011-08-09 18:27:25 UTC <luite> I had some success, by ignoring the letter spacing within words
2011-08-09 18:28:32 UTC <luite> so I had a substituted font, estimated some tracking (fixed letter spacing) value from the bounds and then used that for the word
2011-08-09 18:29:01 UTC <luite> but it was still not usable
2011-08-09 18:30:43 UTC <luite> I'd have to inspect the glyphs to do proper alignment, there I stopped :p
2011-08-10 01:08:31 UTC <byorgey> ACTION is deep in icky ghc api hacking
2011-08-10 01:09:22 UTC <byorgey> got it to work though: I can now write something like `Diagrams.Prelude`:mod: and have it turn into a link to that module's Haddocks
2011-08-10 01:09:29 UTC <byorgey> and it uses the GHC API to figure out which package provides that module
2011-08-10 01:09:55 UTC <luite> hmm, why GHC API? you can do that with the Cabal API
2011-08-10 01:10:35 UTC <byorgey> oh!
2011-08-10 01:10:39 UTC <luite> oh but Cabal does run ghc-pkg for that, so it's probably less efficient
2011-08-10 01:11:01 UTC <byorgey> well, no matter, it's working now
2011-08-10 01:11:21 UTC <byorgey> it's not that much code, it just took a while to figure out the right magic incantations
2011-08-10 01:11:44 UTC <luite> yeah same here for the things that I did with the GHC API
2011-08-10 01:12:56 UTC <byorgey> hmm one thing I want to do is be able to automatically typeset ghci sessions
2011-08-10 01:13:22 UTC <byorgey> i.e. just write the inputs and have it automatically run them though ghci and futputs
2011-08-10 01:13:39 UTC <byorgey> should I use the ghc API or just pipe stuff into ghci and parse the output?
2011-08-10 01:14:21 UTC <byorgey> hmm "futputs" was supposed to read "format the outputs"
2011-08-10 01:14:37 UTC <fryguybob> There are some parts of ghci that seem tricky to duplicate with just hint (at least for me :D)
2011-08-10 01:15:12 UTC <byorgey> yeah, hint hides a lot from you
2011-08-10 01:15:35 UTC <byorgey> I didn't even bother trying to use hint for this
2011-08-10 01:16:35 UTC <byorgey> you know what? I have not actually made any DIAGRAMS for weeks!
2011-08-10 01:16:52 UTC <byorgey> this is sad, I will go make some =)
2011-08-10 01:17:03 UTC <fryguybob> I just used cubicSplines for the first time in something that wasn't a test  :D.
2011-08-10 01:17:05 UTC <fryguybob> It looked nice.
2011-08-10 01:17:15 UTC <byorgey> hehe, excellent =)
2011-08-10 01:17:32 UTC <byorgey> link?
2011-08-10 01:18:27 UTC <fryguybob> Well it doesn't look that nice (yet)
2011-08-10 01:18:59 UTC <byorgey> ok, I am patient.
2011-08-10 01:19:34 UTC <luite> hehe, show it to me then, I'm easily impressed ;)
2011-08-10 01:19:50 UTC <byorgey> ACTION pulls diagrams-postscript and diagrams-tikz
2011-08-10 01:20:25 UTC <luite> whoah tikz too, what did I miss?
2011-08-10 01:20:26 UTC <luite> :)
2011-08-10 01:21:08 UTC <byorgey> luite: aren't you on the mailing list?
2011-08-10 01:21:23 UTC <byorgey> luite: Scott Walck was working on a tikz backend at hac phi
2011-08-10 01:22:02 UTC <luite> ah, err, apparently I'm not on the mailing list
2011-08-10 01:22:41 UTC <byorgey> well, you're welcome to join it if you like =)
2011-08-10 01:24:52 UTC <luite> oh I have to write a motivation letter
2011-08-10 01:37:40 UTC <fryguybob> Here are mine spline pictures:  http://goo.gl/nfKtr  vs  http://goo.gl/lknWM
2011-08-10 01:39:08 UTC <luite> hmm, it seems to be rendered as straight line segments?
2011-08-10 01:39:55 UTC <fryguybob> The bad one is, the other is using cubicSpline.
2011-08-10 01:41:35 UTC <luite> ah I see, very smooth :p
2011-08-10 05:26:26 UTC <alpounet> i will have to test all these new stuffs guys
2011-08-10 05:26:39 UTC <alpounet> i haven't looked at diagrams for a while
2011-08-10 05:33:59 UTC <alpounet> soon, you'll be able to relax on my bomberman (only network mode) :P
2011-08-10 05:34:03 UTC <alpounet> anyway, off to work
2011-08-10 14:49:31 UTC <fryguybob> byorgey: We still haven't implemented the scale invariant thing right?
2011-08-10 14:49:41 UTC <byorgey> fryguybob: right, not yet
2011-08-10 15:35:56 UTC <byorgey> fryguybob: your diagrams-postscript repo seems to be missing a .cabal file
2011-08-10 16:38:57 UTC <fryguybob> byorgey: Oops!
2011-08-10 16:40:39 UTC <fryguybob> cabal file pushed.
2011-08-10 18:27:48 UTC <byorgey> fryguybob: thanks, works now.
2011-08-10 20:53:36 UTC <fryguybob> byorgey: Is there a reverse path?
2011-08-10 20:53:58 UTC <byorgey> fryguybob: yes, I just pushde it
2011-08-10 20:54:09 UTC <fryguybob> excellent timing :D
2011-08-10 20:54:20 UTC <byorgey> I knew you were about to ask for it ;)
2011-08-10 20:54:49 UTC <byorgey> actually I wanted to make a filled annulus and realized I needed it
2011-08-10 20:55:14 UTC <byorgey> we should add a 'circlePath' function to D.TwoD.Arc
2011-08-10 20:55:39 UTC <fryguybob> I was trying to figure out how many fmaps I was going to need and decided to ask for it :D.
2011-08-10 20:55:56 UTC <byorgey> hehe =)
2011-08-10 20:56:18 UTC <byorgey> well, and while implementing  it  I found a bug in reverseTrail anyway
2011-08-10 20:56:28 UTC <byorgey> itdidn't work for closed trails
2011-08-12 05:36:08 UTC <luite> http://hdiff.luite.com/cgit/diagrams-core/commit/?id=0.3
2011-08-12 05:36:27 UTC <luite> (sorry for the wrong author field, I'm not claiming to have written diagrams :p )
2011-08-12 06:57:58 UTC <luite> ok fixed
2011-08-12 14:27:07 UTC <fryguybob> byorgey: I'm just getting back to things.  The new reversePath is confusing me: http://hpaste.org/50222
2011-08-12 14:34:06 UTC <fryguybob> Is reverseRootedPath flipped?   reverseRootedTrail (p, t)  | isClosed t = (p .+^ trailOffset t, reverseTrail t)   | otherwise  = (p, reverseTrail t)   seems like it should be the cases are switched.
2011-08-12 14:37:31 UTC <fryguybob> byorgey: Switching those cases gives the behavior I expect, I have a patch ready, let me know if you agree.
2011-08-12 17:06:43 UTC <byorgey> fryguybob: doh, yes
2011-08-12 17:06:55 UTC <byorgey> fryguybob: that's what I get for not testing it very well.
2011-08-12 17:07:08 UTC <byorgey> sorry, I ought to know better
2011-08-12 17:07:21 UTC <byorgey> ACTION slaps his own wrist
2011-08-12 17:08:00 UTC <byorgey> luite: what's this?
2011-08-12 17:08:03 UTC <fryguybob> :D no problem
2011-08-12 17:08:06 UTC <fryguybob> I'll push the fix.
2011-08-12 17:09:33 UTC <luite> byorgey: oh I was annoyed that many authors of hackage packages don't have public repositories and that there's no easy way to view what has changed in a package
2011-08-12 17:09:44 UTC <luite> other than downloading/diffing multiple versions
2011-08-12 17:10:05 UTC <luite> so I've imported all versions of all packages in a git repository with a web interface :)
2011-08-12 17:12:19 UTC <byorgey> luite: very cool =)
2011-08-12 17:15:15 UTC <luite> I'm going to add a title page with recent changes and a small javscript bookmarklet that you can click on a hackage page, that directly takes you to the diff with the previous version
2011-08-12 17:15:38 UTC <luite> and then email cafe, maybe some other people will find it useful
2011-08-12 17:19:19 UTC <luite> had to download 16000 packages from hackage for this, but I  haven't heard any complaints from server admins :)
2011-08-12 17:21:51 UTC <byorgey> luite: awesome =)
2011-08-12 18:37:26 UTC <byorgey> check it out: http://www.cis.upenn.edu/~byorgey/diagrams-manual/diagrams-manual.html
2011-08-12 18:37:37 UTC <byorgey> generated from this source: http://www.cis.upenn.edu/~byorgey/diagrams-manual/diagrams-manual.rst
2011-08-12 18:38:00 UTC <byorgey> just a preview of course
2011-08-12 19:17:17 UTC <fryguybob> Very nice!
2011-08-12 19:48:29 UTC <alpounet> agreed
2011-08-12 19:50:29 UTC <alpounet> luite, for hdiff, that would be nice to have several rows of page numbers, rather than this almost infinite line of page numbers, making us scroll beyond the limits of the universe :P
2011-08-13 07:51:12 UTC <luite> alpounet: fixed
2011-08-13 07:51:32 UTC <alpounet> thanks! :)
2011-08-15 01:03:40 UTC <copumpkin> anyone have plans for a pure svg backend for it?
2011-08-15 01:03:45 UTC <copumpkin> without the cairo dependency?
2011-08-15 01:05:59 UTC <luite> \o/
2011-08-15 01:06:04 UTC <luite> make one and give it to me!
2011-08-15 01:06:12 UTC <luite> with javascript support for wolfgang|lambda ;p
2011-08-15 01:06:21 UTC <copumpkin> hah
2011-08-15 01:06:31 UTC <copumpkin> I've dealt with svg before and didn't enjoy it muc
2011-08-15 01:06:32 UTC <copumpkin> h
2011-08-15 01:06:39 UTC <copumpkin> the path syntax is ugly :(
2011-08-15 01:51:15 UTC <fryguybob> copumpkin: Robin Morisset was working on one at Hacphi: http://code.google.com/p/diagrams/wiki/BackendProjects
2011-08-15 02:36:33 UTC <luite> https://github.com/yesodweb/persistent/issues/17
2011-08-15 02:36:39 UTC <luite> whoops wrong chan
2011-08-15 03:13:12 UTC <byorgey> I hope to sit down with Robin sometime this week and figure out what still needs to be done to get the SVG backend released
2011-08-15 03:14:05 UTC <luite> byorgey: do you know something about changes in type families between 7.0 and 7.2?
2011-08-15 03:14:30 UTC <luite> I have some code that results in top-level data families in 7.2, but not with 7.0
2011-08-15 03:14:45 UTC <byorgey> I might but I must be off t obed at the moment
2011-08-15 03:14:49 UTC <byorgey> ask me again tomorrow
2011-08-15 03:15:07 UTC <luite> ok, good night the n :)
2011-08-15 03:15:40 UTC <byorgey> night =)
2011-08-15 03:47:13 UTC <luite> http://hpaste.org/50325 -- this seems to show the problem, an extra top-level data family F with ghc 7.2.1
2011-08-15 15:16:50 UTC <byorgey> luite: hmm, interesting, I have not seen anything like this before
2011-08-15 15:17:01 UTC <byorgey> luite: which behavior do you want/which do you think is correct?
2011-08-15 15:19:23 UTC <luite> well, the 7.0.4 behaviour works :p
2011-08-15 15:19:32 UTC <luite> (with the current version of these libraries)
2011-08-15 15:19:55 UTC <luite> but I haven't really thought about which one would be better
2011-08-15 15:21:05 UTC <luite> why is it useful to add a top-level data family when you only use associated types?
2011-08-15 15:21:40 UTC <luite> I've posted this to glasgow-haskell-users by the way
2011-08-15 15:23:54 UTC <luite> https://github.com/yesodweb/persistent/issues/17 <- here's the issue with the persistent library in yesod
2011-08-15 15:25:07 UTC <byorgey> ah, yeah, I just saw your email to g-h-u
2011-08-15 15:26:41 UTC <luite> I added the data family D a to show that :browse also prints these families in ghci 7.0.4
2011-08-15 15:27:14 UTC <byorgey> as for why it's useful to add a top-level data family when you only use associated types, I am not sure
2011-08-15 15:27:34 UTC <byorgey> at the level of ghc's core language, there is no difference between top-level and associated families
2011-08-15 15:27:54 UTC <byorgey> but that doesn't mean there ought not to be a difference at the surface level
2011-08-15 15:28:03 UTC <luite> hmm, but at that point, the names should've been disambiguated
2011-08-15 15:28:10 UTC <luite> if that's how it's spelled :p
2011-08-15 15:28:29 UTC <byorgey> I guess :browse gives you a list of top-level *names* that are exported, i.e. things that can be referred to
2011-08-15 15:28:51 UTC <byorgey> it is still illegal to try to specify a top-level instance for D or F
2011-08-15 15:29:13 UTC <byorgey> but in that case it is surprising to me that 7.2.1 lists F, since you cannot refer to it as F, only as C.F
2011-08-15 15:29:48 UTC <luite> yes, that's why I imported it qualified, surprised (and confused) me as well
2011-08-15 15:41:04 UTC <luite> 7.3.20110814 shows the same as 7.2.1
2011-08-15 16:19:48 UTC <luite> apparently not many people on g-h-u know much about this, or they're all tired from camhac :)
2011-08-15 17:21:45 UTC <byorgey> luite: or maybe both =)
2011-08-15 17:22:10 UTC <byorgey> luite: my guess is that it was an unintentional change
2011-08-15 17:24:44 UTC <luite> yeah I would've expected some documentation/discussion about it if it was intentional, but I can't find any
2011-08-15 19:24:52 UTC <d-d> byorgey: any reason you decided on .rst for that?
2011-08-15 20:29:18 UTC <byorgey> d-day: yes, because .rst is extensible
2011-08-15 20:30:00 UTC <byorgey> d-day: you can register arbitrary new tags for both inline and block markup and then decide what to do with them later.
2011-08-15 20:30:47 UTC <byorgey> d-day: so for example I use it to mark the names of packages, the names of modules, literate haskell code, literate haskell code that should also produce a diagram automatically, etc.
2011-08-15 20:31:56 UTC <byorgey> to do something similar with (say) Markdown would require lots of ugly hacks.
2011-08-15 21:46:26 UTC <d-day> byorgey: oh, then I suppose that the software I am writing today is 'lots of ugly hacks' :o
2011-08-15 21:46:37 UTC <byorgey> d-day: what are you working on?
2011-08-15 21:46:39 UTC <d-day> hehe
2011-08-15 21:47:45 UTC <d-day> I am writing a parser/printer for markdown that has explicit color schemes encoded into the document, support for automatic code/indentation detection (by understanding tabstop-like settings)
2011-08-15 21:48:02 UTC <d-day> automatic linking of words that have reference links
2011-08-15 21:48:53 UTC <d-day> and a metadata tag for markdown (by absorbing out #^6 and (optionally, #^5))
2011-08-15 21:49:36 UTC <d-day> the idea is basically to allow people to write (.hs, .rb, .etc) files with markdown in comments, but with (.hs, .rb, .etc) code in fences in comments
2011-08-15 21:50:59 UTC <d-day> i am absorbing some of the freedom that's there in markdown (such as not differentiating between +, -, and *, in lists, and the different styles of refrence links '', "", and () )
2011-08-15 21:51:49 UTC <d-day> i don't know much about rst, I'll have to check it out
2011-08-15 21:52:37 UTC <d-day> the really cool part is the colors, though, and I'm not quite sure how I'm going to do it
2011-08-15 21:52:55 UTC <d-day> byorgey: are you a vimmer?
2011-08-15 21:53:29 UTC <byorgey> d-day: sounds cool
2011-08-15 21:53:32 UTC <byorgey> d-day: no, I use emacs
2011-08-15 21:53:50 UTC <luite> yay emacs
2011-08-15 21:53:57 UTC <d-day> byorgey: the early mockups are like this (rendered in vim, because it's where I found it)
2011-08-15 21:54:00 UTC <d-day> http://imgur.com/a/IBxKo
2011-08-15 21:55:16 UTC <d-day> the idea is, if you know (or set an explicit) tabstop width, you decree that some portion of that (first three character columns, in this case) should 'commute' in the sense that you could run characters up and down in the extra 2 characters
2011-08-15 21:56:17 UTC <d-day> then, you assign colors (varaiations on a color, I'm not trying to make people trip while coding) to the blocks based on the contents of the start and/or end
2011-08-15 21:56:54 UTC <d-day> so, for instance, if some code causes a compilation error (like something in wolfgang) or has an alignment bug, you can just change the color to lead them to the right spot
2011-08-15 21:58:37 UTC <d-day> (the content of this document is just meandering self-talk to fill it)
2011-08-15 21:59:37 UTC <d-day> unfortunately, I'm not smart enough to do this in Haskell yet, so I'm doing in C/Ruby and using regular expressions in a somewhat applicative style
2011-08-15 22:01:53 UTC <d-day> byorgey: another goal, actually, is to do similar things that you're doing with .rst - in particular, pulling out document-wide portions of code (in haskell, this means imports/modules/some pragmas) and putting them in markdown format, in a way that "commutes" in the sense above
2011-08-15 22:03:39 UTC <d-day> byorgey: haven't talked in a while. you back with a full head of steam toward diagrams?
2011-08-15 22:04:02 UTC <d-day> and luite: what's going on with w'gang?
2011-08-15 22:04:19 UTC <byorgey> d-day: are you tgeeky?
2011-08-15 22:04:51 UTC <d-day> byorgey: yep
2011-08-15 22:04:55 UTC <byorgey> d-day: I don't know if I'd say "full head of steam" exactly -- I have other projects to work on too -- but yes, I have been working on it a bunch more lately
2011-08-15 22:05:09 UTC <byorgey> mostly writing documentation but a bit of coding as well
2011-08-15 22:05:10 UTC <d-day> this more closely matches my real name
2011-08-15 22:05:14 UTC <byorgey> ok =)
2011-08-15 22:05:29 UTC <byorgey> just making the connection
2011-08-15 22:06:40 UTC <d-day> byorgey: another thing I have on the list for this parser (but I have almost no idea how to implement in practice)
2011-08-15 22:07:24 UTC <d-day> is something like regular exprsesions that match characters that look the same (their glyph looks the same) -- such as the letter 'A' in ASCII, and in various mathematical reps (blackboard bold, etc)
2011-08-15 22:07:46 UTC <d-day> not automatically, but just so that someone can do something like:
2011-08-15 22:08:08 UTC <d-day> d, dd (to get a derivative-style d), ddd (to get a bold style d) -- something along those lines
2011-08-15 22:08:28 UTC <d-day> rep-letters -> math letters
2011-08-15 22:09:16 UTC <d-day> but I haven't a clue where to start there
2011-08-15 22:24:01 UTC <d-day> man, some of the things in this book 'pearls of functional algorithim design' blow my mind lol
2011-08-15 22:29:31 UTC <luite> d-day: still working on it from time to time, bug I'm currently stuck because of some strange issue with ghc
2011-08-15 22:29:45 UTC <luite> but
2011-08-15 22:31:35 UTC <d-day> k
2011-08-15 22:31:43 UTC <luite> I have some of my code converted to yesod 0.9 (from github) and ghc 7.2.1, because I need some new yesod features, and wanted to update the evaluator to the 7.2.1 api
2011-08-15 22:31:57 UTC <luite> but the combination is not runnign smoothly
2011-08-15 22:32:02 UTC <luite> not at all actually :p
2011-08-15 22:32:04 UTC <d-day> hehe
2011-08-15 22:32:06 UTC <d-day> why yesod?
2011-08-15 22:32:15 UTC <d-day> what happened to happstack (for gitit) and/or snap?
2011-08-15 22:32:21 UTC <luite> oh that's what the front-end is written in
2011-08-15 22:32:32 UTC <luite> snap is still the backend, I don't use gitit anymore
2011-08-15 22:32:42 UTC <d-day> ok
2011-08-15 22:32:59 UTC <d-day> are you still using codemirror2 for the texted?
2011-08-15 22:33:11 UTC <luite> gitit is basically unmaintained, or at the very least very lightly maintained :p
2011-08-15 22:33:28 UTC <d-day> yeah, but I understand, jmac is only one man
2011-08-15 22:33:34 UTC <d-day> and he has tons of widely used projects
2011-08-15 22:33:48 UTC <luite> and it was easier to do authentication and json interface with file-store
2011-08-15 22:33:59 UTC <luite> and yesod
2011-08-15 22:34:13 UTC <d-day> one difference between our ideas of what's going on, I realized
2011-08-15 22:34:40 UTC <d-day> is I essentially see something where you have the server (say, snap) behind the public interface
2011-08-15 22:34:57 UTC <d-day> but also, if a user wants to download the server, s/he would gain his local evalulator as well
2011-08-15 22:35:53 UTC <luite> oh I also think that should eventually be possible
2011-08-15 22:35:59 UTC <d-day> sort of like a distributed IDE
2011-08-15 22:36:02 UTC <d-day> the main point
2011-08-15 22:36:10 UTC <d-day> is to show, hey, this really is 'distributed'
2011-08-15 22:36:25 UTC <d-day> if you want to download 1000 copies of it and run it on your server farm, you can :o
2011-08-15 22:36:56 UTC <d-day> but as you said earlier, I think the only secure way to do that is to have at least 2 domains built in from the start
2011-08-15 22:37:04 UTC <luite> still codemirror2 by the way, I don't know anything that's better and accessible enough
2011-08-15 22:37:24 UTC <d-day> yeah
2011-08-15 22:37:38 UTC <d-day> i plan on implementing this markdown/highlighter/indenter thing in it, eventually
2011-08-15 22:37:43 UTC <d-day> so you/we can use it
2011-08-15 22:37:47 UTC <luite> oh that would be fun
2011-08-15 22:37:57 UTC <d-day> i'm writing it using javascript code already (d3.js)
2011-08-15 22:38:04 UTC <d-day> just so I can port it easily
2011-08-15 22:41:22 UTC <luite> how do you plan on handling long lines with codemirror?
2011-08-15 22:41:32 UTC <luite> since it still doesn't support wrapping
2011-08-15 22:41:44 UTC <d-day> hehe, the whole point of this program
2011-08-15 22:41:58 UTC <d-day> is to have a document set an explicit minimum size and maximum size
2011-08-15 22:42:04 UTC <d-day> in terms of width
2011-08-15 22:42:33 UTC <d-day> like, if you want a document of code that's 81 chars wide
2011-08-15 22:42:42 UTC <d-day> then you make a document that's ~ 120 chars wide
2011-08-15 22:42:50 UTC <d-day> and you fill out the first line with 81 spaces
2011-08-15 22:44:00 UTC <d-day> then, you basically always load at least 2 documents - one for the source in question, one for the [metadata / markup / color instructions / meta-comments]
2011-08-15 22:44:13 UTC <d-day> and you zip the two together using whatever the line-comment character is (--, for haskell)
2011-08-15 22:44:51 UTC <luite> hmm, do you have an example of how you intend that zipping together to wokr?
2011-08-15 22:45:14 UTC <d-day> yeeah, from the pics above
2011-08-15 22:45:26 UTC <d-day> any markdown header with more than '###'
2011-08-15 22:46:05 UTC <d-day> must be indented (because it would fill up the 4th character column) - that is, it's implying a code block of at least 2*tabstop characters (in this case, 10)
2011-08-15 22:46:19 UTC <d-day> likewise, six comments (######)
2011-08-15 22:46:49 UTC <d-day> imply that something is taking up the entire document (as the marker itself doesn't fit in a single column, so it expands out to the entire document)
2011-08-15 22:47:03 UTC <d-day> i have a flag up
2011-08-15 22:47:05 UTC <d-day> one sec
2011-08-15 22:48:21 UTC <luite> hmm, Idon't really see it
2011-08-15 22:50:07 UTC <d-day> http://i.imgur.com/h9u5j.gif
2011-08-15 22:50:25 UTC <d-day> i'm calling it a 'flag' because that's what it actually looks like :O
2011-08-15 22:50:52 UTC <d-day> the initial section is #^6, so it's an escape from the document in question
2011-08-15 22:51:05 UTC <d-day> the indentation of the escape is taken to be the desired width of the source
2011-08-15 22:52:23 UTC <d-day> the width of the source won't trigger an alarm, but the width of the rendering (of the source) will
2011-08-15 22:52:54 UTC <d-day> so that long line (#2) is fine in the source document, because it will compress down into a width that (in a console-like font) will be < the flagpole
2011-08-15 22:55:07 UTC <luite> hmm
2011-08-15 22:55:59 UTC <d-day> it's a work in progress, though, I may change things
2011-08-15 22:56:42 UTC <d-day> the only reason I picked markdown is because github's support for it is nice (and they have already said they will be happy to include extended markdown/javascript combos in their parsers)
2011-08-16 01:12:37 UTC <d-day> hm. just today, github released the new 'cloud9' / ajax editor
2011-08-16 01:13:18 UTC <luite> did github do that?
2011-08-16 01:13:34 UTC <d-day> i don't think they made it
2011-08-16 01:13:37 UTC <d-day> but they are supporting it
2011-08-16 01:13:38 UTC <d-day> ACE
2011-08-16 01:13:47 UTC <d-day> https://github.com/ajaxorg/ace
2011-08-16 01:14:44 UTC <luite> yeah I know the editor and stuff
2011-08-16 01:14:50 UTC <d-day> yeah
2011-08-16 01:16:02 UTC <d-day> ttps://github.com/blog/905-edit-like-an-ace
2011-08-16 01:16:05 UTC <d-day> + h
2011-08-16 01:18:11 UTC <luite> hmm, ah... codemirror is much simpler, but is very much a one-man project, possibly not ideal for the longer term
2011-08-16 01:22:36 UTC <luite> on the other hand, once codemirror2 supports line wrapping, I'd be happy with it :)
2011-08-16 01:24:15 UTC <luite> probably best to try not to do too much customization so that it will be easy to switch if necessary
2011-08-16 02:09:01 UTC <d-day> luite: yeah. and the work that I'm doing is almost entirely restricted to dealing with whitespace of one sort or another (really, left whitespace (indentation) and the whitespace "underneath" comments on the left)
2011-08-16 02:09:16 UTC <d-day> s/left.*$/right/
2011-08-16 02:10:01 UTC <d-day> luite: plus, this thing that edwardk is working on seems rather powerful
2011-08-16 02:10:08 UTC <d-day> I say seems because I don't understand much of it
2011-08-16 02:12:50 UTC <luite> which of the ten million things he's working on?
2011-08-16 19:45:54 UTC <d-day> luite: trifecta
2011-08-16 19:46:07 UTC <d-day> his fancy parser/printer/diagnostic-er
2011-08-22 21:15:25 UTC <fryguybob> Progress!
2011-08-22 21:17:14 UTC <luite> hello
2011-08-22 21:23:12 UTC <fryguybob> http://imgur.com/yuWj1  -- now for clipping...
2011-08-22 21:25:43 UTC <luite> nice dots :p
2011-08-22 21:42:25 UTC <alpounet> haha
2011-08-23 00:30:59 UTC <fryguybob> more progress http://imgur.com/8AePj
2011-08-23 00:31:52 UTC <luite> very nice
2011-08-23 00:55:04 UTC <byorgey> sweet!
2011-08-23 01:01:22 UTC <fryguybob> Hummm, I wonder how hard it is to make a latex package to redirect some inline input to something else.
2011-08-23 01:01:38 UTC <fryguybob> Probably isn't too bad.
2011-08-23 01:02:26 UTC <byorgey> what do you mean, redirect some inline input to something else?
2011-08-23 01:03:04 UTC <byorgey> you mean you want to be able to redirect embedded diagrams code through diagrams?
2011-08-23 01:03:33 UTC <byorgey> I would have thought to do that with a preprocessor, but I guess making a latex package to do it makes a lot more sense
2011-08-23 01:03:54 UTC <fryguybob> Yeah
2011-08-23 01:03:56 UTC <byorgey> by the way, while we're on the subject of progress: http://www.cis.upenn.edu/~byorgey/diagrams-manual/diagrams-manual.html  <-- coming along nicely!
2011-08-23 01:04:09 UTC <fryguybob> Excellent!
2011-08-23 01:04:33 UTC <fryguybob> "diagrams vis-a-vis Kant", I can't wait!
2011-08-23 01:04:50 UTC <byorgey> with clickable module and function names, auto-generated diagrams, MathJax, ...
2011-08-23 01:05:14 UTC <byorgey> fryguybob: actually, I was hoping you could help out a bit and write that essay
2011-08-23 01:05:32 UTC <luite> hm, the mathjax menu appears at the worng place
2011-08-23 01:05:40 UTC <byorgey> menu?
2011-08-23 01:05:57 UTC <luite> if you right-click on the equation
2011-08-23 01:06:19 UTC <byorgey> oh, I didn't know about that, cool
2011-08-23 01:06:25 UTC <byorgey> where is the menu supposed to appear?
2011-08-23 01:06:37 UTC <luite> uh under your pointer, like a context menu
2011-08-23 01:06:49 UTC <byorgey> yeah I guess so
2011-08-23 01:07:26 UTC <byorgey> hmm, for me they always appear at the same x-coordinate independent of the equation
2011-08-23 01:10:58 UTC <luite> same here, somewhere in the left margin
2011-08-23 01:11:23 UTC <fryguybob> ACTION fires up the debugger...
2011-08-23 01:12:01 UTC <luite> are the filenames a sha1 of the contents?
2011-08-23 01:17:22 UTC <luite> SPJ has fixed that type families bug I mentioned by the way... well fixed, he patched it so that what I did isn't allowed anymore :)
2011-08-23 01:37:51 UTC <d-day> lol
2011-08-23 02:02:02 UTC <byorgey> luite: well, they're md5 actually (I wouldn't know the difference really), but yes, that way it only has to generate new or modified diagrams when you build
2011-08-23 02:02:26 UTC <byorgey> luite: oh, nice =)
2011-08-23 02:03:23 UTC <luite> I used something like: instance C.Cls (B a) where data C.Cd = ....
2011-08-23 02:03:37 UTC <luite> but that's not allowed anymore, only where data Cd = ....
2011-08-23 02:03:52 UTC <luite> and then you have a Cd in your exports
2011-08-23 02:08:03 UTC <luite> I'm still not sure why, and it shows as C.Cd in :browse, but SPJ says it's fixed now, so I guess I should believe him ;)
2011-08-23 02:10:07 UTC <luite> does diagrams work ok on os x?
2011-08-23 02:37:01 UTC <byorgey> luite: there's no reason it shouldn't
2011-08-23 02:37:20 UTC <byorgey> although I don't know what the status is of cairo on OS X
2011-08-23 10:57:44 UTC <fryguybob> byorgey: last night I found this: http://www.fauskes.net/nb/introducing-dot2texi/
2011-08-23 10:58:00 UTC <fryguybob> It might be a way to go about embedding in latex with a package.
2011-08-23 10:58:34 UTC <byorgey> oh, I see, nice!
2011-08-23 10:58:46 UTC <byorgey> you're going to look at the package and see how it's implemented?
2011-08-23 10:59:52 UTC <fryguybob> yeah
2011-08-23 11:00:35 UTC <fryguybob> It looks like it uses the command line tool dot2tex then embeds TikZ.
2011-08-23 11:01:04 UTC <byorgey> right, but how do you call out to a command line tool from TeX code?
2011-08-23 11:01:14 UTC <byorgey> I guess I am not surprised you can do it but I wouldn't know how
2011-08-23 11:01:20 UTC <fryguybob> The source is here: http://ctan.mackichan.com/macros/latex/contrib/dot2texi/dot2texi.sty
2011-08-23 11:03:05 UTC <byorgey> ugh I hate reading TeX =P
2011-08-23 11:03:13 UTC <fryguybob> Not that its particularly readable...
2011-08-23 11:04:31 UTC <byorgey> The TeX \write primitive instruction is used to write to different file âstreamsâ; TeX refers to each open file by number, not by name (although most of the time we hide this). Stream 18 is special: it is not a file but means that TeX asking the operative system to do something.
2011-08-23 11:04:34 UTC <fryguybob> I think the key is the shell-excape flag, I'll have to read up on that.
2011-08-23 11:04:44 UTC <byorgey> of course, stream 18!  makes perfect sense. =P
2011-08-23 11:04:46 UTC <fryguybob> ah ok
2011-08-23 11:04:50 UTC <byorgey> http://www.texdev.net/2009/10/06/what-does-write18-mean/
2011-08-23 11:05:43 UTC <fryguybob> Indeed the magic 18 shows up in the source. (No one will ever need more then 17 files!)
2011-08-23 11:06:42 UTC <byorgey> yes, that's why I knew what to google
2011-08-23 11:07:51 UTC <fryguybob> My eyes were focused on finding something sensible :D.
2011-08-23 11:29:37 UTC <fryguybob> byorgey: This little test worked  http://hpaste.org/50583  now for stealing the input.
2011-08-23 12:38:59 UTC <fryguybob> Seems the approach used in dot2texi does not work with my latex.  It successfully redirects the input and calls out to the shell, but it doesn't ignore the input in the file correctly.
2011-08-23 12:54:56 UTC <byorgey> hmm, staging TeX-as-data vs TeX-as-code is a dark art indeed
2011-08-23 13:12:28 UTC <fryguybob> Ah, found the issue.
2011-08-23 13:15:08 UTC <fryguybob> I've got to run now, but I do know it can work.
2011-08-23 13:15:44 UTC <byorgey> great!
2011-08-23 13:16:36 UTC <fryguybob> I need a little more robust command line on my program to see if it will do multiple entries in one file correctly, but I think it should be happy.
2011-08-23 13:16:53 UTC <fryguybob> It looks like some of the code is based on this: http://www.tug.org/texlive/Contents/live/texmf-dist/doc/latex/tools/verbatim.pdf
2011-08-23 13:17:33 UTC <fryguybob> And it has a comment about \verbatim@out needing to be defined.  Doing that with \newwrite\verbatim@out did the trick.
2011-09-07 19:19:53 UTC <byorgey> wheeee  http://www.cis.upenn.edu/~byorgey/Swirl.png
2011-09-07 19:20:32 UTC <luite> hehe I had that stuff when I was a kid
2011-09-07 19:20:50 UTC <luite> spirograph
2011-09-07 19:20:53 UTC <byorgey> code is here: http://hpaste.org/51061
2011-09-07 19:21:02 UTC <byorgey> yeah, me too =)
2011-09-07 19:21:09 UTC <byorgey> we should make a spirograph module
2011-09-07 19:21:24 UTC <byorgey> that image is not exactly doing the same thing as spirograph mathematically, but it sure looks like it
2011-09-07 19:22:21 UTC <byorgey> I was about to say "man, we should have something like hpaste except you can paste diagrams and it will render them for you!" and then I remembered that is what Wolfgang is =)
2011-09-07 19:22:33 UTC <byorgey> at least, ONE of the many things
2011-09-07 19:22:46 UTC <luite> you mean "get back to work you lazy ass" ;p
2011-09-07 19:23:09 UTC <byorgey> haha, no, I didn't actually mean that =)
2011-09-07 19:23:29 UTC <byorgey> I actually did just have that thought process
2011-09-07 19:23:42 UTC <luite> hehe
2011-09-07 19:24:42 UTC <byorgey> fryguybob: check it out, I am putting cubic splines to good use ;)
2011-09-07 19:25:11 UTC <fryguybob> :D
2011-09-07 19:25:13 UTC <fryguybob> I
2011-09-07 19:25:38 UTC <fryguybob> I'm going to see what it looks like with spiro :D.
2011-09-07 19:26:54 UTC <byorgey> sweet
2011-09-07 19:27:51 UTC <fryguybob> ACTION rebuilds everything...
2011-09-07 19:27:59 UTC <byorgey> it would actually be fun to make a module for spirograph emulation -- I mean to accurately model the actual paths you get using various combinations of gears
2011-09-07 19:28:52 UTC <fryguybob> Humm is there a new vector-space?
2011-09-07 19:29:02 UTC <byorgey> fryguybob: yes
2011-09-07 19:29:15 UTC <byorgey> just cabal update first
2011-09-07 19:29:47 UTC <byorgey> I needed a function to do vector projection, and decided it would be a nice general function to have in vector-space, so I sent conal a patch
2011-09-07 19:29:55 UTC <byorgey> he released a new version within about 15 minutes
2011-09-07 19:29:56 UTC <fryguybob> excellent.
2011-09-07 19:43:32 UTC <fryguybob> I've got to go.
2011-09-07 19:56:09 UTC <tgeeky> conal is -the- man
2011-09-07 23:22:09 UTC <fryguybob> byorgey: hehe.  With spiro they come out as three concentric circles.
2011-09-08 01:42:28 UTC <byorgey> fryguybob: haha, really?
2011-09-08 01:46:59 UTC <fryguybob> Yeah, it is kind of optimized to be a circle if the control points lie on a circle.
2011-09-08 02:05:49 UTC <fryguybob> byorgey: They are circles with angle > tao
2011-09-08 02:29:31 UTC <byorgey> aha, I see.
2011-09-08 21:25:39 UTC <byorgey> woohoo, user manual just passed 10K words!
2011-09-08 21:27:56 UTC <fryguybob> nice!
2011-09-08 21:28:52 UTC <luite> :)
2011-09-08 21:29:04 UTC <byorgey> about 1/4 done!
2011-09-08 21:29:09 UTC <byorgey> haha, just kidding
2011-09-08 21:29:33 UTC <byorgey> documentation for the standard library should be done soon
2011-09-08 21:29:46 UTC <byorgey> although there's still a lot to write about the internals of diagrams-core, but that can wait
2011-09-08 22:20:01 UTC <tgeeky> byorgey: Do you want me to do an editing pass?
2011-09-08 22:20:08 UTC <tgeeky> byorgey: that's one thing that I *know* I'm good at
2011-09-08 22:20:23 UTC <byorgey> tgeeky: sure, that would be great!
2011-09-08 22:20:54 UTC <tgeeky> byorgey: just point me to it in here when you think it's suitable for a pass
2011-09-08 22:21:16 UTC <byorgey> tgeeky: oh, it's suitable now
2011-09-08 22:21:53 UTC <byorgey> tgeeky: darcs get http://patch-tag.com/r/byorgey/diagrams-doc
2011-09-08 22:23:03 UTC <byorgey> tgeeky: hmm, well, to build it you will need a few things, let me write up some instructions on how to get it to build
2011-09-08 22:23:29 UTC <tgeeky> ok. I'm still on windows, so I may not be able to do that easily - but I'm about to deploy a few VMs
2011-09-08 22:23:32 UTC <tgeeky> so I can do it there
2011-09-08 22:24:10 UTC <byorgey> ok.  I just figured it would be easier for you to be able to edit and push the changes directly, rather than mailing me with changes or whatever
2011-09-08 22:24:19 UTC <tgeeky> byorgey: yeah, certainly
2011-09-08 22:43:22 UTC <byorgey> tgeeky: ok, whenever you get set up, look in the manual/ directory in that repository
2011-09-08 22:43:34 UTC <byorgey> tgeeky: I just pushed a README file with instructions on how to get it to build
2011-09-08 22:44:15 UTC <byorgey> tgeeky: I almost certainly forgot something, so ping me if you have any trouble, or if you have to do something that isn't written in the README file, so I can add it
2011-09-08 22:46:03 UTC <byorgey> tgeeky: also, do you have a patch-tag account?
2011-09-08 22:46:48 UTC <byorgey> if you don't already have one, set one up and let me know your username, and I can give you commit access to the diagrams-doc repo
2011-09-09 09:21:55 UTC <luite> will  a diagrams that works with ghc 7.2 be released soon?
2011-09-09 12:23:31 UTC <byorgey> luite: yes
2011-09-09 12:23:40 UTC <byorgey> luite: I believe the current darcs version of diagrams works with ghc 7.2, if you use the (as of yet unreleased) darcs version of cairo
2011-09-09 12:26:56 UTC <luite> ok, I'll try them
2011-09-09 12:30:56 UTC <byorgey> luite: hang on, dcoutts had some .tgzs prepared, let me find them for you
2011-09-09 12:31:13 UTC <byorgey> cabal install http://code.haskell.org/~duncan/gtk2hs/glib-0.12.1.tar.gz http://code.haskell.org/~duncan/gtk2hs/gio-0.12.1.tar.gz http://code.haskell.org/~duncan/gtk2hs/pango-0.12.1.tar.gz http://code.haskell.org/~duncan/gtk2hs/cairo-0.12.1.tar.gz http://code.haskell.org/~duncan/gtk2hs/gtk-0.12.1.tar.gz http://code.haskell.org/~duncan/gtk2hs/soegtk-0.12.0.tar.gz
2011-09-09 12:31:37 UTC <luite> oh thanks
2011-09-09 12:36:29 UTC <luite> soegtk version has changed to 0.12.1
2011-09-09 12:46:45 UTC <byorgey> ah, ok
2011-09-09 12:47:02 UTC <byorgey> hopefully they will all get released soon
2011-09-09 12:48:53 UTC <luite> I hope the transition to 7.4 will be easier
2011-09-09 12:51:23 UTC <luite> not that so much had to be changed for 7.2, but the method of contacting all individual package authors and hope that they will upload a new version is rather inefficient
2011-09-09 12:52:49 UTC <byorgey> yeah, but what other method is there?
2011-09-09 12:55:39 UTC <luite> perhaps something similar to what some port trees (gentoo portage, freebsd ports, macports) do, a repository of patches for specific versions. but that might make it even more complicated
2011-09-09 12:56:51 UTC <luite> I get this error when darcs getting diagrams-lib darcs: /Users/luite/.darcs/cache/patches/0000000456-6236e447b99ddfd81bff3ff1bea28c6f885f289a52f2120c6dd108a9741d7d73-new_6430147fa39e6875563251c6967d8157: getSymbolicLinkStatus: does not exist (No such file or directory)
2011-09-09 12:58:56 UTC <luite> looks more like a darcs problem than something with the repository though
2011-09-09 13:05:24 UTC <byorgey> weird
2011-09-09 13:05:35 UTC <byorgey> maybe try clearing out the cache?
2011-09-09 13:08:33 UTC <luite> the package still installs, so I don't think it really affects the contents (maybe some older patch)
2011-09-09 13:08:42 UTC <byorgey> ok, strange
2011-09-09 13:08:49 UTC <luite> but I can't link programs, undefined symbols
2011-09-09 13:09:06 UTC <byorgey> what?
2011-09-09 13:12:28 UTC <luite> something with iconv: http://hpaste.org/51136
2011-09-09 13:13:05 UTC <luite> not really diagrams related, maybe i installed something wrong
2011-09-09 13:13:24 UTC <byorgey> hmm, weird, guess so
2011-09-09 13:30:11 UTC <aleator> su
2011-09-09 13:30:33 UTC <byorgey> root #
2011-09-09 13:31:16 UTC <luite> hehe
2011-09-09 13:31:38 UTC <luite> byorgey: oh I might have the wrong ghc version for my operating system
2011-09-09 13:31:51 UTC <byorgey> luite: hehe, that would do it =)
2011-09-09 13:31:52 UTC <luite> but for some reason I could install/compile yesod and lots of other things
2011-09-09 13:33:43 UTC <byorgey> well don't ask me.
2011-09-09 15:39:44 UTC <tgeeky> byorgey: https://patch-tag.com/r/dday <-- me
2011-09-09 15:45:08 UTC <byorgey> tgeeky: ok, I added you to the repo, you should have push permissions now.
2011-09-09 16:37:48 UTC <luite> yay, finally a workign diagrams/ghc install
2011-09-09 16:38:24 UTC <luite> had to recompile ghc with a --with-iconv-libraries= because of two conflicting iconv libraries
2011-09-09 17:42:17 UTC <byorgey> luite: yay!
2011-09-10 23:10:27 UTC <byorgey> diagrams-lib is now mirrored on github using darcs-bridge: https://github.com/byorgey/diagrams-lib
2011-09-10 23:10:41 UTC <byorgey> I'll mirror the other ones soon
2011-09-10 23:46:00 UTC <luite> cool, now I can finally use it :p
2011-09-10 23:46:08 UTC <luite> is the bridge bidirectional?
2011-09-10 23:51:06 UTC <byorgey> it should be
2011-09-10 23:51:26 UTC <byorgey> obviously I haven't yet tested the git -> darcs direction
2011-09-11 01:39:25 UTC <tgeeky> byorgey: i'll test it to test my puppet recipie for darcs (which I haven't written yet)
2011-09-11 01:39:28 UTC <tgeeky> and let you know
2011-09-14 19:14:43 UTC <tgeeky> byorgey: you've taught about the Real Numbers in classes before right?
2011-09-14 19:21:39 UTC <tgeeky> This paper: http://arxiv.org/PS_cache/arxiv/pdf/1103/1103.4508v1.pdf  -- Theorem 1.1, 1.4, 1.5, and 5.4 -- seems (to me) like a pretty important development in general. Any thoughts?
2011-09-14 19:30:26 UTC <byorgey> tgeeky: I don't have the background to have any idea whether that is an important development.
2011-09-14 19:30:50 UTC <tgeeky> byorgey: ok. :o
2011-09-14 19:34:57 UTC <tgeeky> i need to watch the casters series on limit points
2011-10-06 21:07:01 UTC <luite> byorgey: are you going to release diagrams 0.4 soon?
2011-10-06 21:07:20 UTC <byorgey> luite: yes, I plan to
2011-10-06 21:10:05 UTC <luite> great :) that will help with ghc 7.2.1
2011-10-06 21:14:00 UTC <byorgey> luite: just now starting to come up for air after the birth of my son =)
2011-10-06 21:17:40 UTC <luite> oh yeah, I heard, but I hadn't spoken to you since. congrats! :)
2011-10-06 21:17:45 UTC <byorgey> thanks =)
2011-10-07 02:48:17 UTC <alpounet> congratulations byorgey!
2011-10-07 02:48:32 UTC <byorgey> alpounet: thanks =)
2011-10-08 01:12:36 UTC <tgeeky> byorgey: i'm back from semi-vacation, so back to work
2011-10-08 01:12:40 UTC <tgeeky> but congrats on the little rascal!
2011-10-08 01:12:51 UTC <tgeeky> best wishes to you and your missus and the health of the little one :O
2011-10-08 02:05:53 UTC <byorgey> tgeeky: thanks!
2011-10-08 02:07:00 UTC <tgeeky> byorgey: first one, right?
2011-10-08 02:07:08 UTC <byorgey> tgeeky: yep
2011-10-08 02:07:27 UTC <tgeeky> hehe. you two are both brilliant people, so remember not to overthink things :O
2011-10-08 02:07:49 UTC <byorgey> he is asleep in my right arm so I am a bit slow at typing atm =)
2011-10-08 02:08:03 UTC <tgeeky> byorgey: best feeling in the world, so I'm told :o
2011-10-08 02:08:04 UTC <byorgey> tgeeky: heh, thanks =)
2011-10-08 02:08:31 UTC <tgeeky> i'm gonna be an uncle in a few months, but no kids for me for a while :O
2011-10-08 02:09:10 UTC <byorgey> uncle is fun though, you get to have fun with them and then give them to someone else when they start crying =)
2011-10-08 02:09:51 UTC <tgeeky> sounds like a parenthood test drive
2011-10-08 02:13:50 UTC <tgeeky> byorgey: but everyone is happy/healthy? no complications or anything?
2011-10-08 02:19:21 UTC <tgeeky> my brother had to have CF genetic testing to rule it out, since his wife had several of the genes
2011-10-08 13:39:32 UTC <byorgey> tgeeky: yes, we're all doing great
2011-10-09 03:23:49 UTC <tgeeky> byorgey: that's a load off
2011-10-09 03:23:52 UTC <tgeeky> good to hear
2011-10-13 02:17:24 UTC <tgeeky> byorgey: here?
2011-10-13 11:29:55 UTC <byorgey> hi tgeeky
2011-10-13 13:26:05 UTC <cicatristeza> hi there
2011-10-13 13:26:16 UTC <cicatristeza> how do i draw some text to an svg using diagrams?
2011-10-13 13:26:46 UTC <cicatristeza> could anyone show me the docs for it? i tried looking in http://hackage.haskell.org/packages/archive/diagrams-lib/latest/doc/html/Diagrams-Prelude.html
2011-10-13 14:12:43 UTC <byorgey> hi cicatristeza, aha, sorry, it looks like there are some things I forgot to list there
2011-10-13 14:13:00 UTC <byorgey> cicatristeza: if you look here http://hackage.haskell.org/package/diagrams-lib-0.3  you can see a list of all the modules
2011-10-13 14:13:16 UTC <byorgey> cicatristeza: for text you want this module: http://hackage.haskell.org/packages/archive/diagrams-lib/0.3/doc/html/Diagrams-TwoD-Text.html
2011-10-13 14:13:57 UTC <byorgey> cicatristeza: you may also be interested in the user manual, it is not quite done but there is a preview version here: http://www.cis.upenn.edu/~byorgey/diagrams-manual/diagrams-manual.html
2011-10-13 14:14:40 UTC <cicatristeza> are you brent yorgey of the monad reader?
2011-10-13 14:14:49 UTC <byorgey> yes, that's me
2011-10-13 14:15:03 UTC <byorgey> I'm the only Brent Yorgey I know of
2011-10-13 14:15:10 UTC <cicatristeza> whens the next issue
2011-10-13 14:20:08 UTC <byorgey> should be out next week
2011-10-13 15:43:53 UTC <cicatristeza> ok
2011-10-13 16:11:35 UTC <tgeeky> byorgey: I made this using Mathematica http://i.imgur.com/JhAWS.png
2011-10-13 16:11:44 UTC <tgeeky> i'll try to make the same thing with diagrams soonish
2011-10-13 16:12:04 UTC <byorgey> tgeeky: ooh, awesome!
2011-10-13 16:12:21 UTC <tgeeky> byorgey: that's the sum of squares view
2011-10-13 16:12:33 UTC <byorgey> tgeeky: sadly, I fear making that with diagrams would take a really long time
2011-10-13 16:12:43 UTC <byorgey> but perhaps this can serve as an impetus for improving the performance.
2011-10-13 16:13:00 UTC <byorgey> it would certainly make for a nice benchmark/test case.
2011-10-13 16:13:06 UTC <tgeeky> byorgey: that's why I want to do it with Haskell / diagrams, because I know I can generate the numerics of the table *far* faster than mathematica
2011-10-13 16:13:28 UTC <tgeeky> using Bird's fast inversion algorithim
2011-10-13 16:13:45 UTC <tgeeky> byorgey: anyway, it's curious that this spherical strucutre is in there at all
2011-10-13 16:15:14 UTC <tgeeky> but yes, it would be a nice test case
2011-10-13 16:15:58 UTC <tgeeky> byorgey: (163 was chosen because it's one of the imaginary quadratic fields)
2011-10-13 16:16:17 UTC <tgeeky> byorgey: you'll notice that there are no black squares on the image (No zeros)
2011-10-13 16:23:05 UTC <tgeeky> byorgey: by the way, do you mean [writing the code] will take a really long time, or [rendering it] will?
2011-10-13 16:38:10 UTC <byorgey> tgeeky: I mean rendering it
2011-10-24 06:36:56 UTC <mgsloan> so is it already possible to play with your extension?
2011-10-24 06:37:09 UTC <byorgey> mgsloan: yes
2011-10-24 06:37:46 UTC <byorgey> mgsloan: let me find you a link
2011-10-24 06:39:52 UTC <byorgey> mgsloan: see  http://hackage.haskell.org/trac/ghc/wiki/GhcKinds  and  http://haskell.org/haskellwiki/GHC/Kinds
2011-10-24 06:40:06 UTC <byorgey> the latter has instructions on how to build the GHC branch so you can play with it
2011-10-24 06:40:46 UTC <mgsloan> great! the amount of code involved in making a quasi-quoter sufficient for simultaneously writing type-level and value-level functions is fairly insignificant
2011-10-24 06:41:11 UTC <mgsloan> pretty sweet low hanging fruit I daresay :D
2011-10-24 06:41:23 UTC <byorgey> true, be my guest!
2011-10-24 06:42:07 UTC <byorgey> only downside is that won't work with functions that already exist, e.g. (++)
2011-10-24 06:42:45 UTC <mgsloan> aye
2011-10-24 06:43:09 UTC <mgsloan> would it work for map?
2011-10-24 06:46:56 UTC <byorgey> I don't see why not
2011-10-24 20:07:53 UTC <smeltzek> hi all -- i am new to Diagrams but am interested in using it as part of a project. Unfortunately I need my graphical output to handle mouse events tied to specific graphic elements
2011-10-24 20:08:06 UTC <smeltzek> is this something that i could reasonably implement over the top of Diagrams?
2011-10-24 20:08:08 UTC <byorgey> hi smeltzek
2011-10-24 20:08:21 UTC <byorgey> yes, you can already do that.
2011-10-24 20:08:30 UTC <smeltzek> oh, really?
2011-10-24 20:08:38 UTC <smeltzek> great! i guess i should do a better job reading the documentation
2011-10-24 20:08:56 UTC <smeltzek> thanks
2011-10-24 20:09:16 UTC <byorgey> smeltzek: let me get you some links, just a sec
2011-10-24 20:09:33 UTC <byorgey> smeltzek: http://projects.haskell.org/diagrams/manual/diagrams-manual.html#using-queries
2011-10-24 20:09:49 UTC <byorgey> smeltzek: you'll want to use the Gtk backend that comes with diagrams-cairo
2011-10-24 20:10:04 UTC <byorgey> smeltzek: John Lato has been doing something like this already
2011-10-24 20:10:57 UTC <smeltzek> interesting, thanks
2011-10-24 20:11:02 UTC <smeltzek> i will see if i can dig up some information on his work
2011-10-24 20:11:30 UTC <byorgey> smeltzek: here it is, http://www.tiresiaspress.us/haskell/jaek
2011-10-24 20:11:54 UTC <byorgey> smeltzek: he doesn't hang out in here but you should email him, jwlato at gmail
2011-10-24 20:14:51 UTC <smeltzek> thanks, will do
2011-10-26 21:33:56 UTC <smeltzek> Hi again -- this is pretty basic, but is it expected behavior that I am not able to use the pre-defined shapes in Diagrams.TwoD.Shapes with gtk as a backend?
2011-10-26 21:34:12 UTC <smeltzek> i am able to render circles perfectly fine using 'defaultRender'
2011-10-26 21:34:59 UTC <smeltzek> but other shapes such as squares are not instances of PathLike (...)
2011-10-26 21:38:17 UTC <byorgey> smeltzek: no, others shapes should be fine
2011-10-26 21:38:40 UTC <byorgey> smeltzek: can you show me some sample code that is giving you the error, and the error itself, say on hpaste.org?
2011-10-26 21:38:51 UTC <smeltzek> sure, one minute
2011-10-26 21:41:02 UTC <smeltzek> hpaste.org/53175
2011-10-26 21:41:42 UTC <smeltzek> i am new to gtk2hs as well, so it's possible i'm making beginner mistakes
2011-10-26 21:53:56 UTC <byorgey> smeltzek: let me take a look
2011-10-26 21:54:40 UTC <byorgey> smeltzek: oh, I see what's going on.
2011-10-26 21:55:30 UTC <byorgey> smeltzek: the problem is that 'square' is polymorphic in its output, and defaultRender is polymorphic in its input... so GHC does not know how to choose a concrete type for the diagram being generated
2011-10-26 21:56:01 UTC <byorgey> smeltzek: the solution is to give a type signature to 'square 1'
2011-10-26 21:56:30 UTC <byorgey> smeltzek: so you could write  defaultRender da (square 1 :: Diagram Cairo R2)
2011-10-26 21:56:55 UTC <byorgey> smeltzek: or you could say  defaultRender da dia  and elsewhere declare  dia :: Diagram Cairo R2; dia = square 1
2011-10-26 21:57:42 UTC <byorgey> smeltzek: it's an annoying issue and will probably trip up a bunch of people... I should add an explanation to the user manual
2011-10-26 21:58:24 UTC <byorgey> but in general, if you see an error that says 'no instance for ...' for some type with a *type variable* (in your case notice the m0) this is probably what is going on
2011-10-26 21:58:39 UTC <smeltzek> ah, okay. that makes perfect sense
2011-10-26 21:58:46 UTC <smeltzek> thank you for looking into it
2011-10-26 21:58:49 UTC <byorgey> sure
2011-10-26 22:26:18 UTC <tgeeky> byorgey: I'm scratching my head here. I thought I myself read about Alternative from the original McBride Applicative paper
2011-10-26 22:26:21 UTC <tgeeky> but it's not in there?
2011-10-26 22:26:47 UTC <tgeeky> oh, it is, but he doesn't name it that.
2011-10-26 22:27:07 UTC <byorgey> yeah
2011-10-26 22:27:36 UTC <tgeeky> i think I'm confused about something subtle.
2011-10-26 22:28:09 UTC <byorgey> wait, is it? I don't see it either
2011-10-26 22:28:57 UTC <tgeeky> well, he shows
2011-10-26 22:29:03 UTC <tgeeky> instance Monoid o => Applicative (Accy o)
2011-10-26 22:29:50 UTC <byorgey> that's not Alternative
2011-10-26 22:30:09 UTC <tgeeky> right, but that is the starting point of defining alternative, right?
2011-10-26 22:30:12 UTC <byorgey> that's just showing that monoids are in some sense "degenerate" applicatives
2011-10-26 22:30:21 UTC <byorgey> no, it isn't
2011-10-26 22:32:27 UTC <tgeeky> byorgey: do you know what kind of structure underlies the usage of (+-, -+) in equation here? http://en.wikipedia.org/wiki/Plastic_number
2011-10-26 22:33:11 UTC <tgeeky> where the sign of the left conjugator is tied to the sign of the right one, but the other additions and subtractions remain the same?
2011-10-26 22:33:26 UTC <tgeeky> from "The plastic number is the smallest Pisot.Vijayaraghavan number. Its algebraic conjugates are:"
2011-10-26 22:34:28 UTC <tgeeky> byorgey: I'm not sure if I said so, but I played a bunch with Diagrams, and read and understood much of the source code. That is a really *fantastic* library.
2011-10-26 22:34:34 UTC <tgeeky> It's very addictive :)
2011-10-26 22:34:40 UTC <tgeeky> doh
2011-10-26 22:34:47 UTC <tgeeky> s/diagrams/species/
2011-10-26 22:34:54 UTC <tgeeky> I haven't run through diagrams yet :)
2011-10-26 22:35:05 UTC <byorgey> tgeeky: ah, I see, thanks! glad you like it
2011-10-26 22:35:16 UTC <byorgey> I have sadly let it bitrot somewhat
2011-10-26 22:35:20 UTC <tgeeky> byorgey: but I noticed your cubic equation solver in diagrams
2011-10-26 22:35:28 UTC <byorgey> but would like to get back to working on it at some point
2011-10-26 22:35:39 UTC <byorgey> tgeeky: yes?
2011-10-26 22:36:17 UTC <tgeeky> well, i was curious about the role of the plastic constant
2011-10-26 22:36:27 UTC <byorgey> oh. I have no idea.
2011-10-26 22:37:13 UTC <tgeeky> byorgey: you are familiar with it at all? I feel confident you're enough of a rec. mathemitician to have awed the golden ratio
2011-10-26 22:37:35 UTC <byorgey> no, I'm not
2011-10-26 22:37:48 UTC <tgeeky> (you're not familiar)?
2011-10-26 22:38:20 UTC <byorgey> I had never even heard of the plastic constant until just now.
2011-10-26 22:38:24 UTC <tgeeky> oh.
2011-10-26 22:38:28 UTC <tgeeky> yeah, that's a pretty weird fact
2011-10-26 22:38:34 UTC <tgeeky> very few people know about it
2011-10-26 22:48:42 UTC <tgeeky> well heck I figured something like http://hackage.haskell.org/package/action-permutations existed, but never found it until now.
2011-10-26 22:49:57 UTC <tgeeky> byorgey: how long have you been (working on) and then (writing) the 'promoting' paper?
2011-10-26 22:50:40 UTC <byorgey> tgeeky: well, we started working on it during the summer of 2010
2011-10-26 22:51:08 UTC <byorgey> tgeeky: then we all did other things for a while, then we began working on it again this past spring
2011-10-26 22:51:24 UTC <tgeeky> temporarily masking hubris and bashfulness, isn't this a pretty big deal for Haskell?
2011-10-26 22:51:45 UTC <byorgey> we started writing the paper in... August
2011-10-26 22:51:56 UTC <byorgey> yes, I think it's a pretty big deal
2011-10-26 22:52:26 UTC <tgeeky> it seems like a lot of major libraries over all kinds of mathematical structures can be greatly generalized
2011-10-26 22:52:39 UTC <tgeeky> and things like NumericPrelude could be really made much better
2011-10-26 22:53:29 UTC <byorgey> yes, I hope so
2011-10-27 19:11:48 UTC <tgeeky> byorgey: J = " "?
2011-10-27 19:13:31 UTC <tgeeky> I personally hope that you just generated random letters.
2011-10-28 17:36:53 UTC <byorgey> fryguybob: got a minute to chat about diagrams-hint ?
2011-10-28 17:41:25 UTC <fryguybob> Yeah
2011-10-28 17:41:48 UTC <fryguybob> byorgey: (If I can remember things :D)
2011-10-28 17:44:30 UTC <luite> :)
2011-10-28 17:47:00 UTC <byorgey> fryguybob: well, I'm just trying to figure out the best way forward to create a nicely packaged interface for dynamically interpreting diagrams
2011-10-28 17:47:15 UTC <byorgey> hacking on diagrams-hint? or split out some of its code into a separate package?
2011-10-28 17:47:27 UTC <byorgey> diagrams-hint also has a bunch of command-line stuff as well
2011-10-28 17:47:44 UTC <byorgey> at this point I'm not even sure what the right API would be, anyway =)
2011-10-28 17:48:17 UTC <luite> it's a bit annoying that a 7.2 compatible hint has still not been released :(
2011-10-28 17:48:37 UTC <fryguybob> byorgey: Yeah that is tricky.
2011-10-28 17:49:21 UTC <fryguybob> I think the parts of diagrams-hint that are pertinent are pretty much isolated to: http://www.patch-tag.com/r/fryguybob/diagrams-hint/snapshot/current/content/pretty/src/Diagrams/Compiler/Run.hs
2011-10-28 17:49:29 UTC <byorgey> luite: oh, boo =(
2011-10-28 17:49:37 UTC <byorgey> fryguybob: yeah
2011-10-28 17:49:58 UTC <luite> byorgey: the link to the src repo doesn't work, you have to get it from the secret repository
2011-10-28 17:50:32 UTC <byorgey> we may have to resort to GHC API directly anyway... there's no way to use hint to do type inference.  it will only give you a String representation of the type.
2011-10-28 17:51:04 UTC <fryguybob> Yeah, I'm just concating the type and doing a type check to search for diagrams.
2011-10-28 17:51:20 UTC <luite> yeah I had similar issues, have now removed hint completely from my code
2011-10-28 17:55:56 UTC <luite> btw, sorry for off-topic: does anyone have experience with monad-control exception handling for a monad transformer stack that includes an iteratee?
2011-10-31 03:42:25 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/noah-schedule.png
2011-10-31 03:42:44 UTC <byorgey> My son's sleep/eat/wake schedule for the past 3 weeks =)
2011-10-31 03:43:28 UTC <byorgey> (created using diagrams of course)
2011-10-31 03:46:46 UTC <luite> blue is sleep?
2011-10-31 04:56:22 UTC <byorgey> luite: yes, otherwise we would be in big trouble =)
2011-10-31 04:57:39 UTC <byorgey> yellow = nursing, green = awake
2011-10-31 04:58:25 UTC <luite> I guess if you gradually decrease the amount of sleep, he's well on his way to the uberman sleeping schedule ;)
2011-10-31 04:58:53 UTC <byorgey> haha, well, we don't have much control over it at the moment =)
2011-10-31 11:20:44 UTC <fryguybob> byorgey: Nice! Phase one of automated baby book complete.
2011-10-31 19:31:33 UTC <tgeeky> lol
2011-10-31 19:31:47 UTC <tgeeky> world's first polyphasic sleeping infant
2011-10-31 19:45:04 UTC <byorgey> tgeeky: uh, every infant ever does polyphasic sleep =)
2011-10-31 19:46:09 UTC <tgeeky> byorgey: true story? I've never thought about it that way, but I guess you're right :o
2011-10-31 19:46:19 UTC <tgeeky> byorgey: it's just us "adults" that can't cope :)
2011-10-31 19:46:38 UTC <byorgey> tgeeky: exactly =)
2011-10-31 19:47:03 UTC <tgeeky> nice observation, that I suppose is currently being rigoriously drummed into your brain :)
2011-10-31 19:48:50 UTC <byorgey> "polyphasic" technically just means "sleeping multiples times each day" although often has the connotation (for adults) of using it to try to sleep less in total
2011-10-31 19:49:35 UTC <byorgey> but Noah seems to use it in order to sleep *more* in total. =)  Currently about 12-14h per day.
2011-10-31 19:49:57 UTC <tgeeky> yes, I refuse to give the term technical meaning since state-of-the-art neuroscience doesn't have a good understanding of... pretty much anything ... involving sleep.
2011-10-31 19:50:11 UTC <tgeeky> I just know it as "that thing I'll never be able to do"
2011-10-31 20:00:09 UTC <tgeeky> byorgey: question: Do you know what kind of thing is "the set of all finite simple whose order contains a factor of (n)"?
2011-10-31 20:00:48 UTC <tgeeky> s/finite simple/finite simple groups/
2011-10-31 20:01:05 UTC <tgeeky> is that something which could be resonably modelled using a multiset?
2011-10-31 20:01:36 UTC <byorgey> tgeeky: well, it is infinite, for starters
2011-10-31 20:01:48 UTC <byorgey> I think
2011-10-31 20:01:59 UTC <byorgey> hmm, I forget the precise definition of "simple"
2011-10-31 20:02:12 UTC <tgeeky> well, if that is left to be infinite, then I'll use 'sporadic'
2011-10-31 20:02:16 UTC <tgeeky> which is certainly finite
2011-10-31 20:02:53 UTC <tgeeky> basically, from the ATLAS, i gleaned out all groups with a factor of (29) in them (on a hunch)
2011-10-31 20:03:39 UTC <byorgey> well, there are only 26 sporadic simple groups
2011-10-31 20:04:13 UTC <tgeeky> they are: L2 (29), L2 (58), L3 (29),  U3 (29), S4 (17), S4 (29), S4 (41), Suzuki (128), Ru, Janko4, Fischer24, and Monster
2011-10-31 20:05:42 UTC <tgeeky> I figured, for efficiency, I would store the small factors seperately -- the ones for which all of these groups have many components
2011-10-31 20:06:16 UTC <tgeeky> ie: (2^n, 3^n, 5^n, 7^n, 11^n, 13^n)
2011-10-31 20:07:29 UTC <tgeeky> and then just adjoin a list of factors specific to each group
2011-10-31 20:07:46 UTC <tgeeky> so the structure I would have is:
2011-10-31 20:09:41 UTC <tgeeky> (2^n, 3^n, 5^n, 7^n, 11^n, 13^n, ... , 29^n) ++ [59, 113, 127, 871, 271, 421, 113, 127, 37, 45)
2011-10-31 20:10:20 UTC <tgeeky> where ++ isn't the right function here :o
2011-10-31 20:10:34 UTC <tgeeky> i guess another question: do you think there is any efficiency reason to mix sets and multisets?
2011-10-31 20:13:47 UTC <tgeeky> I don't want to construct these groups, I just want to enumerate and compare them in terms of index and order
2011-10-31 20:14:55 UTC <byorgey> no, I would just use a Map from primes to ints
2011-10-31 20:15:20 UTC <byorgey> I see no reason to distinguish between the "common" small factors and the larger ones
2011-10-31 20:15:52 UTC <byorgey> or, that is, just use a multiset for the whole thing
2011-10-31 20:15:57 UTC <tgeeky> byorgey: I have an a priori reason to try to tease out such a distinction
2011-10-31 20:16:24 UTC <byorgey> tgeeky: and is the distinction more subtle than "those factors which occur more than once vs. those which occur only once"?
2011-10-31 20:17:01 UTC <tgeeky> byorgey: nope, the question is what happens when you distribute the small factors over the large factors
2011-10-31 20:17:07 UTC <tgeeky> in a structured way
2011-10-31 20:19:02 UTC <tgeeky> (the other problem is even more subtle -- assuming some of the primes are "bad primes" in the sense used in understanding the Apollonian gasket)
2011-10-31 20:20:14 UTC <tgeeky> (2) and (3) are "bad" primes in some topological sense that I don't fully understand (demonstrated by Peter Sarnak and Elena Fuchs, for some name dropping)
2011-10-31 20:21:20 UTC <tgeeky> what happens if you just drop all of the factors of 2? of 3? of both? what happens if you push all of the factors down through the singleton elements?
2011-10-31 20:25:25 UTC <tgeeky> byorgey: and so on :)
2011-10-31 20:25:46 UTC <tgeeky> byorgey: I guess i'll try both for one example (29), and then see how it goes - and decide from there
2011-10-31 20:26:04 UTC <byorgey> o
2011-10-31 20:26:08 UTC <byorgey> *ok
2011-10-31 20:26:18 UTC <tgeeky> did you mean a map to the Nats?
2011-10-31 20:26:21 UTC <tgeeky> or did you really mean Ints?
2011-10-31 20:26:29 UTC <tgeeky> i suppose it doesn't matter :/
2011-10-31 20:30:18 UTC <byorgey> I meant Nats
2011-10-31 20:30:23 UTC <byorgey> but Haskell doesn't really have a Nat type
2011-10-31 20:30:41 UTC <tgeeky> yeah, and I'm definately not doing this type-level at the first shot :)
2011-10-31 20:30:47 UTC <byorgey> i.e. the powers
2011-10-31 20:31:56 UTC <tgeeky> this is the hand-drawn diagram that made me want such a tool generally
2011-10-31 20:31:57 UTC <tgeeky> http://i.imgur.com/99iDQ.jpg
2011-10-31 20:34:57 UTC <tgeeky> it also makes me wonder exactly how the number base used to represent the orders, affects the presentation of this list
2011-11-01 02:38:43 UTC <fryguybob> byorgey: Applied and pushed.  Thanks!
2011-11-01 02:38:53 UTC <byorgey> great!
2011-11-02 02:27:05 UTC <byorgey> ACTION is considering changing the semantics of 'beside' (and hence (|||) and (===)) so that the local origin of the combined object is the local origin of the first object
2011-11-02 02:27:21 UTC <byorgey> as opposed to the current semantics of putting the combined local origin at the point of tangency
2011-11-02 02:28:05 UTC <byorgey> pros: (1) it makes 'beside v', (|||) and (===) associative
2011-11-02 02:29:14 UTC <byorgey> (2) if you want the old semantics it is easy: just do e.g.  d1 # alignR ||| d2; getting the new semantics from the current is tricky and requires naming d1 to remember its origin and then restoring it
2011-11-02 02:29:53 UTC <byorgey> (3) it matches the existing behavior of cat
2011-11-02 02:30:51 UTC <byorgey> (indeed, 'cat v' would be semantically equivalent to 'foldr (beside v)'; currently there's no easily stated relationship)
2011-11-02 02:31:18 UTC <byorgey> the only downside is that it might break a lot of examples etc.  Then again, it might not.
2011-11-02 02:32:10 UTC <byorgey> anywhere you compose two diagrams and then immediately align the result would not change
2011-11-02 02:52:46 UTC <fryguybob> byorgey: Makes sense to me.
2011-11-02 02:55:59 UTC <byorgey> well if fryguybob says it makes sense that's good enough for me.
2011-11-02 02:56:23 UTC <byorgey> We don't have enough users to get angry yet, might as well break stuff to make it better while we can ;)
2011-11-02 02:56:37 UTC <tgeeky_> let g:netrw_dirhistmax  =10
2011-11-02 02:56:37 UTC <tgeeky_> let g:netrw_dirhist_cnt =3
2011-11-02 02:56:37 UTC <tgeeky_> let g:netrw_dirhist_1='C:/msg/home/tg/d-hs/hs-HaskellForMaths-0.4.0/Math/Algebra'
2011-11-02 02:56:40 UTC <tgeeky_> let g:netrw_dirhist_2='C:/msg/home/tg/hs/factory-0.2.0.0'
2011-11-02 02:56:41 UTC <tgeeky_> apologies.
2011-11-02 02:56:43 UTC <tgeeky_> let g:netrw_dirhist_3='C:/msg/home/tg/hs/tkyprof-0.0.6.3/double-conversion/double-conversion'
2011-11-02 02:56:46 UTC <tgeeky_> spurrious paste.
2011-11-02 02:57:09 UTC <fryguybob> :D
2011-11-02 03:00:45 UTC <byorgey> note that diagrams under the new 'beside' are an interesting example of something which is a semigroup but NOT a monoid (since there is no identity)
2011-11-02 03:06:14 UTC <fryguybob> no right identity, but there is a left one right?
2011-11-02 03:06:28 UTC <fryguybob> Ooops, other way around.
2011-11-02 03:06:35 UTC <byorgey> ah, yes, you're right
2011-11-02 03:06:41 UTC <byorgey> ACTION adds that to the documentation
2011-11-02 03:06:58 UTC <byorgey> so what is that called? a hemisemigroup?
2011-11-02 03:07:07 UTC <fryguybob> somewhatmonoid
2011-11-02 03:07:19 UTC <byorgey> hehe
2011-11-02 03:07:37 UTC <fryguybob> ACTION goes to bed...
2011-11-02 03:08:49 UTC <byorgey> g'night
2011-11-02 13:30:42 UTC <luite_> byorgey: are you still working on animations?
2011-11-02 13:42:08 UTC <byorgey> luite_: I'm still thinking about it, though I haven't yet written a single line of code =)
2011-11-02 13:42:11 UTC <byorgey> why?
2011-11-02 13:42:48 UTC <luite_> oh I was wondering what kind of things you wanted to support, and what it would look like in haskell code
2011-11-02 13:49:32 UTC <byorgey> luite_: not exactly sure yet =)
2011-11-02 13:51:19 UTC <luite_> I think it would be a great feature, especially if combined with a native svg backend
2011-11-02 14:33:52 UTC <luite_> being able to use diagrams to make images like the animated quasicrystals gif in kmc's blog would be lotsa fun
2011-11-02 14:37:53 UTC <byorgey> luite_: agreed.  well, the quasicrystals thing is specifically raster-oriented
2011-11-02 14:38:03 UTC <byorgey> but yes, we'll be able to make some cool animations =)
2011-11-02 14:39:04 UTC <luite_> is it? you can probably get the same effect with some clever use of alpha channels in vector images
2011-11-02 14:41:11 UTC <luite_> but it would require gradient support
2011-11-02 14:46:53 UTC <byorgey> oh, true
2011-11-02 17:54:20 UTC <luite_> cool a new package that uses diagrams :)
2011-11-02 18:02:24 UTC <byorgey> luite_: yeah, I just saw that =D
2011-11-02 18:06:53 UTC <byorgey> ah, interesting, he made a balanced version of hcat which has better performance
2011-11-02 18:07:00 UTC <byorgey> that makes a lot of sense
2011-11-03 20:22:25 UTC <smeltzek> has anyone been successful in linking diagrams with gtk+quartz on OSX? I have it working nicely on my linux box but would like to work in a native (non-X11) environment on my laptop, too
2011-11-03 20:24:15 UTC <luite_> hmm haven't tried yet
2011-11-03 20:25:09 UTC <smeltzek> i am not entirely sure how to go about it -- the typical osx "package managers" like homebrew and macports don't seem to make GTK available with the quartz backend
2011-11-03 20:25:40 UTC <luite_> yeah I've just used the lazy method, installing it with macports
2011-11-03 20:25:46 UTC <luite_> with the x11 backend probably
2011-11-03 20:27:06 UTC <smeltzek> unfortunately i think that is all macports supports, unless it's a buried option somewhere
2011-11-03 20:41:56 UTC <smeltzek> actually, it looks like there is a macports variant for quartz. i'll give it a try
2011-11-03 20:46:12 UTC <luite_> oh tell me how to use it if it works :)
2011-11-04 03:00:18 UTC <smeltzek> sorry for the delay -- it does appear to work!
2011-11-04 03:00:36 UTC <smeltzek> you have to build gtk using macports with the flags -x11 +no_x and +quartz
2011-11-04 03:00:59 UTC <smeltzek> and i was also forced to use the 64 bit version of haskell platform installed directly from haskell.org
2011-11-04 03:01:04 UTC <smeltzek> but it works!
2011-11-04 03:53:03 UTC <byorgey> smeltzek: put it on the wiki!
2011-11-04 07:04:01 UTC <smeltzek> good idea -- i will add it soon
2011-11-04 07:04:38 UTC <smeltzek> also, i am having a little bit of conceptual difficulty with the two coordinate systems offered by defaultRender as opposed to renderToGtk
2011-11-04 07:05:14 UTC <smeltzek> is there a way to get the nice scaling of defaultRender but without breaking the query coordinate space?
2011-11-04 07:05:48 UTC <smeltzek> 'toGtkCoords' doesn't seem to solve that problem for me
2011-11-04 07:08:26 UTC <luite_> smeltzek: ah great, I'll try it if you have instructions. i already have 64 bit ghc (but not the haskell platform, using 7.2.1)
2011-11-04 07:13:25 UTC <smeltzek> luite_: i'll try to write something simple up when i have time, but in the meantime you should be able to remove any gtk/cairo/pango packages you currently have installed and issue the macports command 'port install gtk2 -x11 +no_x11 +quartz'
2011-11-04 07:14:01 UTC <smeltzek> that should be enough, i think
2011-11-04 07:14:39 UTC <luite_> hmm, I wonder if that will break dependencies, will try it later when I have time to rebuild things if it does
2011-11-04 07:23:33 UTC <smeltzek> to explain my coordinate misunderstanding, please see: http://hpaste.org/53536
2011-11-04 07:23:54 UTC <smeltzek> it detects the click in the top left corner, as if i were drawing the circle without any scaling or centering
2011-11-04 17:23:21 UTC <luite_> does anyone want to volunteer to revive ghcjs, change its codegen to something sane (hjavascript?) and write a diagrams svg backend that works with it? :p
2011-11-04 18:13:01 UTC <byorgey> luite_: well, Felipe Lessa is working on a diagrams svg backend now
2011-11-04 18:13:13 UTC <byorgey> reviving ghcjs sounds more complicated =)
2011-11-04 18:14:54 UTC <luite_> oh that's already great news
2011-11-04 18:15:22 UTC <byorgey> luite_: are you not subscribed to the mailing list?
2011-11-04 18:15:33 UTC <byorgey> not that you're required to =)
2011-11-04 18:15:48 UTC <luite_> hmm, I thought I was, but I can't remember receiving a message for a long time
2011-11-04 18:16:07 UTC <byorgey> well there has been quite a bit of traffic recently
2011-11-04 18:16:18 UTC <byorgey> (relatively speaking)
2011-11-04 18:16:34 UTC <luite_> oh I know
2011-11-04 18:17:04 UTC <luite_> I had to write a motivation letter to subscribe, but never finished that
2011-11-04 18:18:33 UTC <byorgey> what? no you don't
2011-11-04 18:18:57 UTC <byorgey> because I already know you
2011-11-04 18:19:18 UTC <byorgey> it's just to keep spambots out =P
2011-11-04 18:19:30 UTC <luite_> "Please write a sentence about yourself and why you are interested in diagrams.", everyone knows that you're never going to get accepted if you just do the bare minimum ;)
2011-11-04 18:19:40 UTC <byorgey> hehe
2011-11-04 18:20:04 UTC <byorgey> it's a CAPTCHA, not an application process =)
2011-11-04 21:01:30 UTC <smeltzek> just to elaborate on my problem from above -- i sort of see two ways of structuring simple hit detection code using the GTK backend
2011-11-04 21:01:56 UTC <smeltzek> (1) scale and transform the diagrams autoamtically and somehow bring pixel coordinates from the mouse click event into that coordinate space, which is not something that appears to be supported currently
2011-11-04 21:02:58 UTC <smeltzek> (2) don't use the automatica scaling and transforming. the problem i see here is that the queries don't seem to automatically account for transformations or use of 'position' on diagrams, so while the hit detection works, it frequently works in the wrong place
2011-11-04 21:03:12 UTC <smeltzek> any advice on the optimal way of handling this?
2011-11-04 21:07:14 UTC <smeltzek> some transformations seem to be respected, such as scale and translateX/Y, but direct positioning does not
2011-11-05 02:45:33 UTC <byorgey> smeltzek: hmm, queries should account for any transformations on diagrams
2011-11-05 02:45:48 UTC <byorgey> smeltzek: if you have an example where it doesn't please file it as a bug.
2011-11-05 02:46:37 UTC <byorgey> smeltzek: you may want to send an email to John Lato (jwlato at gmail), who has done this sort of click detection, he can probably tell you how he has done it.
2011-11-05 02:47:17 UTC <byorgey> I have no experience with it so couldn't tell you offhand what the best way is.
2011-11-05 19:16:38 UTC <smeltzek> Thanks, I will contact John before I file a bug -- it's quite possibly my mistake
2011-11-06 16:07:31 UTC <luite_> hmm
2011-11-06 17:45:25 UTC <luite_> bah I hate building websites :p
2011-11-06 17:59:52 UTC <luite_> in other news, I think I finally have the search functions for wolfgang working
2011-11-06 18:09:23 UTC <luite_> and it's really fast in my test install with 11 documents ;)
2011-11-06 18:25:01 UTC <byorgey> luite_: yay!
2011-11-06 18:28:11 UTC <byorgey> luite_: so how much is left before the release of WL 1.0?
2011-11-06 18:32:19 UTC <luite_> hmm, lots of smaller front-end stuff, I think that almost all of the server side stuff for the wiki is done, saving pages, importing/exporting lhs works, history and diffs also work, user accounts also seem to work (although I still need to test the facebook integration)
2011-11-06 18:32:36 UTC <luite_> the special pages aren't implemented yet (frontpage, showcase, pastebin)
2011-11-06 18:33:44 UTC <luite_> user pages should work from authentication point of view ( all pages in /user/username are "private", others can only edit them if you explicitly give them access), but here's no user interface for that yet, but that can probably wait
2011-11-06 18:35:54 UTC <luite_> backend has been reliable for me, but there are two big things that still need to be done: the network protocol between front-end and backend needs work, probably some attoparsec or iteratee kind of thing to efficiently transfer results like images
2011-11-06 18:36:38 UTC <luite_> and something that compiles lhs files needs to be added
2011-11-06 18:36:48 UTC <byorgey> ok
2011-11-06 18:37:08 UTC <byorgey> I just want to make sure you don't keep adding features forever =)
2011-11-06 18:37:22 UTC <luite_> but I want to do an invite-only preview before everythign is done :)
2011-11-06 18:37:23 UTC <byorgey> it will never be perfect.
2011-11-06 18:37:32 UTC <byorgey> ok =)
2011-11-06 18:37:46 UTC <luite_> hehe I haven't added features for some time... things like facebook authentication come free with yesod-auth
2011-11-06 18:37:46 UTC <byorgey> can I have an invitation pretty pleeeeze?
2011-11-06 18:38:12 UTC <luite_> yeah but I need to install it on the server first :p
2011-11-06 18:38:33 UTC <byorgey> I love the feeling of just being able to glue together stuff other people have written =)
2011-11-06 18:38:34 UTC <luite_> which needs to be upgraded from ubuntu 11.04 to 11.10
2011-11-06 18:39:23 UTC <luite_> hmm, unfortunately all these haskell web things feel really unfinished :(
2011-11-06 18:39:40 UTC <byorgey> ah, that's too bad =(
2011-11-06 18:39:51 UTC <byorgey> at least things seem to be headed in the right direction
2011-11-06 18:39:53 UTC <luite_> that's why adding the search stuff took longer than expected
2011-11-06 18:40:05 UTC <luite_> greg weber had to release two new versions of the Sphinx package for me :)
2011-11-06 18:40:10 UTC <luite_> yeah
2011-11-06 18:40:43 UTC <byorgey> oh, hehe, I noticed the latest sphinx release earlier in #haskell
2011-11-06 18:41:09 UTC <luite_> a new ghc patch, also by Greg Weber just got merged, it can now track dependencies of external files included by TH
2011-11-06 18:41:17 UTC <byorgey> nifty =)
2011-11-06 18:41:26 UTC <luite_> which is really useful for Yesod with usually includes html and css templates via TH
2011-11-06 18:41:31 UTC <byorgey> right
2011-11-06 18:41:31 UTC <luite_> which
2011-11-06 18:42:07 UTC <byorgey> well, keep up the good work =)
2011-11-06 18:42:13 UTC <byorgey> I'll work on the SVG backend soon
2011-11-06 18:42:21 UTC <byorgey> ACTION -> shower
2011-11-06 18:42:27 UTC <luite_> but some things are annoying, I don't like the exception handling in Yesod, or in any monad transformer thing actually
2011-11-06 18:43:03 UTC <luite_> the generalized exception handling packages like monad-control and MonadCatchIO lose all non-IO side effects if you throw
2011-11-06 18:45:49 UTC <luite_> and they don't work at all if you have an Iteratee in the stack
2011-11-06 18:59:24 UTC <luite_> the Yesod guys were interested in a simple hosted weblog platform for haskell users, and seemed to like the idea of wolfgang, so I might get some help from them for adding weblog-specific features like comments or pingback/reddit links
2011-11-06 19:01:28 UTC <luite_> but that's not going to be in the first version :)
2011-11-06 19:10:09 UTC <byorgey> luite_: ok =)
2011-11-06 19:10:22 UTC <byorgey> being able to use wolfgang to author blog posts does sound neat
2011-11-06 19:16:18 UTC <luite_> yeah I'm not sure if people would really want to use it, and it's going to require a lot of functionality that's not difficult to implement, but still a lot of work
2011-11-06 19:16:38 UTC <luite_> a problem might be the browser requirements, it only works in IE9 and higher
2011-11-06 19:16:44 UTC <luite_> non-IE browsers are fine
2011-11-06 19:18:48 UTC <luite_> and it's already 700kB javascript
2011-11-06 21:40:19 UTC <fryguybob> So in the SVG images discussion, is this for images embedded into SVG, or just references to an image?
2011-11-07 03:19:58 UTC <byorgey> fryguybob: not sure, but the discussion is about more than just SVG images
2011-11-07 03:20:38 UTC <byorgey> I assume embedded, since we want to be able to take the generated SVGs and send them somewhere else, where referenced images may not exist
2011-11-07 03:20:49 UTC <byorgey> but I don't know much about SVG.
2011-11-11 21:06:06 UTC <byorgey> the logging bot gets disconnected sometimes
2011-11-11 21:06:34 UTC <byorgey> I need a way to automatically reconnect it when it gets disconnected
2011-11-11 21:07:18 UTC <byorgey> Taejo: anyway, the idea is that along with the current bounding function (which tells you the distance to an enclosing line), we will *also* carry around a function which tells you the distance to the actual border of the diagram
2011-11-11 21:07:45 UTC <byorgey> Taejo: such a function is no harder to maintain than the current one
2011-11-11 21:07:59 UTC <byorgey> it's just that it's not useful for putting diagrams next to each other which is why we hadn't considered it before
2011-11-11 21:08:04 UTC <Taejo> byorgey: I was thinking about that -- I couldn't see how you do translation
2011-11-11 21:08:49 UTC <byorgey> oh! hmm, drat, you may be right
2011-11-11 21:09:59 UTC <byorgey> it could be maintained under linear transformations but not affine
2011-11-11 21:12:11 UTC <Taejo> what if instead of distanceFromCenterToBorder :: Vector -> Scalar, you had distanceToBorder :: Point -> Vector -> Scalar
2011-11-11 21:13:09 UTC <Taejo> that's closed under translation but what about linear transforms?
2011-11-11 21:13:21 UTC <byorgey> Taejo: oh, I see
2011-11-11 21:13:26 UTC <byorgey> hmm
2011-11-11 21:14:05 UTC <byorgey> yeah, linear transformations should be fine
2011-11-11 21:14:47 UTC <Taejo> is it easy to add that kind of thing or does every datatype need retooling?
2011-11-11 21:14:57 UTC <Taejo> I haven't really looked at the implementation at all
2011-11-11 21:14:58 UTC <byorgey> you map the point and vector back to the space of the original diagram using the inverse transformation, then get the scalar result, and rescale
2011-11-11 21:15:08 UTC <byorgey> hmm, nifty!
2011-11-11 21:15:26 UTC <byorgey> Taejo: it should be fairly easy to add
2011-11-11 21:16:10 UTC <byorgey> Taejo: the main 'diagram' datatype is fairly modular, it's composed of primitives and a heterogeneous collection of monoidal annotations
2011-11-11 21:16:35 UTC <byorgey> so adding some extra information to be carried around is as simple as sticking an extra thing in the list of annotations
2011-11-11 21:20:49 UTC <Taejo> I wonder if it'd be useful to track the direction of tangency too
2011-11-11 21:21:01 UTC <Taejo> although there's partiality there
2011-11-11 21:22:03 UTC <Taejo> perhaps a job for automatic differentiation
2011-11-11 21:22:15 UTC <byorgey> well, let's not get TOO fancy =)
2011-11-11 21:22:41 UTC <byorgey> we do know how to track tangency information under affine transformations though, you use the inverse transpose transformation
2011-11-11 21:23:56 UTC <byorgey> I think the partiality is OK, you can just arbitrarily replace undefined derivatives with a (one-sided) limit
2011-11-11 21:24:33 UTC <byorgey> if you try to find out the direction of tangency at the corner of a polygon, well, that's your problem =)
2011-11-11 21:32:54 UTC <Taejo> byorgey: I'm trying to see where diagrams currently tracks tangency
2011-11-11 21:33:49 UTC <Taejo> or was that "we know how to do it, but don't"?
2011-11-11 21:35:18 UTC <Taejo> just realised, "direction of tangency" isn't actually a vector, but a subspace of codimension 1
2011-11-11 21:36:17 UTC <byorgey> ah, yes, that's true
2011-11-11 21:37:24 UTC <byorgey> Taejo: we don't actually track tangency, we just need the inverse transpose trick because the current bounding function implicitly involves a perpendicular hyperplane
2011-11-11 21:38:08 UTC <byorgey> we could represent subspaces of codimension 1 by a normal vector
2011-11-11 21:38:30 UTC <byorgey> which transform as the inverse transpose.
2011-11-11 21:40:31 UTC <Taejo> diagrams: fun with linear algebra and quotients
2011-11-11 21:40:41 UTC <Taejo> diagrams: the answer to "what's math good for?"
2011-11-11 21:40:44 UTC <byorgey> =D
2011-11-11 21:52:06 UTC <luite> byorgey: tnx
2011-11-11 21:52:14 UTC <luite> sorry was away for a while
2011-11-11 21:52:35 UTC <byorgey> luite: how dare you!  I demand that you must check #diagrams every 5 minutes
2011-11-11 21:53:02 UTC <Taejo> ACTION should refresh before commenting
2011-11-11 21:53:32 UTC <luite> yes I won't let it happen again
2011-11-11 21:53:50 UTC <byorgey> good.  now, I hope you were away for a while working on Wolfgang. ;)
2011-11-11 21:54:18 UTC <luite> hehe I was helping my brother with his laptop
2011-11-11 21:55:18 UTC <byorgey> I suppose that is acceptable
2011-11-11 21:55:50 UTC <byorgey> Taejo: hehe
2011-11-11 21:56:23 UTC <byorgey> Taejo: I think your comment explains it better anyway.
2011-11-11 21:56:35 UTC <Taejo> then I guess I shouldn't have deleted it :|
2011-11-11 21:58:33 UTC <Taejo> ok, I'm off
2011-11-11 22:40:48 UTC <fryguybob> Looks like I missed the discussion :D.
2011-11-11 22:46:36 UTC <byorgey> fryguybob: you did, yes =)
2011-11-11 22:46:48 UTC <byorgey> fryguybob: I just pushed the latest logs
2011-11-11 22:46:55 UTC <byorgey> see the /topic
2011-11-11 22:53:37 UTC <fryguybob> I can't remember, did someone already do something like this in Diagrams?  http://imgur.com/7TSPA
2011-11-11 22:54:09 UTC <byorgey> oh, nice
2011-11-11 22:54:16 UTC <byorgey> I've never seen anyone do that with diagrams
2011-11-11 22:56:10 UTC <fryguybob> I adapted this: http://warp.povusers.org/MandScripts/haskell.html
2011-11-11 22:56:40 UTC <byorgey> fryguybob: oh, you made that mandelbrot image?
2011-11-11 22:57:43 UTC <fryguybob> Well I can only claim the credit for changing it from ascii putStrLn's into hcat and vcat's :D.
2011-11-11 22:57:59 UTC <byorgey> hehe, fair enough =)
2011-11-11 23:00:00 UTC <fryguybob> It makes a 3mb eps file, I should work on cutting that down :D
2011-11-11 23:00:10 UTC <byorgey> 3MB!
2011-11-11 23:04:02 UTC <fryguybob> Yeah when I was playing with getting text working for postscript I failed to notice that it now sets the current font every time it changes the transform.
2011-11-11 23:04:53 UTC <fryguybob> Source:  http://patch-tag.com/r/fryguybob/diagrams-postscript/snapshot/current/content/pretty/example/Mandelbrot.hs
2011-11-11 23:05:54 UTC <byorgey> nice
2011-11-12 16:41:43 UTC <byorgey> http://byorgey.wordpress.com/2011/11/12/generating-plane-tilings-with-diagrams/
2011-11-12 16:57:50 UTC <luite> aw you didn't include your intermediate results ;)
2011-11-12 16:58:03 UTC <Taejo> byorgey: fun! can it do Pythagorean tilings?
2011-11-12 16:59:51 UTC <tgeeky> this is exactly the kind of thing I love, though
2011-11-12 17:00:12 UTC <tgeeky> instead of doing what wikipedia does with these sorts of things (showing pictures of each tiling, where you can't be sure they are correct since one can upload an arbitrary picture)
2011-11-12 17:00:17 UTC <tgeeky> you provide code like
2011-11-12 17:00:27 UTC <tgeeky> t4 = Tiling (replicate 4 Square) (const t4)
2011-11-12 17:01:38 UTC <tgeeky> next up, Feynman Diagrams!
2011-11-12 17:35:29 UTC <byorgey> luite: oh! I forgot!
2011-11-12 17:35:46 UTC <byorgey> luite: I'll put them in another post =)
2011-11-12 17:36:43 UTC <byorgey> Taejo: not as written, no
2011-11-12 18:07:52 UTC <tgeeky> byorgey: a post entitled "this is what progress looks like" :)
2011-11-12 18:08:27 UTC <byorgey> tgeeky: how about "Modern art with diagrams: the face of progress"
2011-11-12 18:08:40 UTC <tgeeky> hehe, sure
2011-11-12 18:08:45 UTC <tgeeky> you should put a [sic] in there somewhere though :O
2011-11-12 18:08:47 UTC <tgeeky> hahaha
2011-11-12 18:09:48 UTC <tgeeky> that's really surprising that you only need to adjoin R2 and R3 to Q in order to make all tilings
2011-11-12 18:10:14 UTC <byorgey> I know! Isn't it great?
2011-11-12 18:10:33 UTC <tgeeky> pretty slick.
2011-11-12 18:11:43 UTC <tgeeky> did you discover this fact directly, or did you deduce it from something else?
2011-11-12 18:12:15 UTC <byorgey> I just discovered it directly.  I don't really remember the thought process that led me to it.
2011-11-12 18:24:17 UTC <byorgey> http://byorgey.wordpress.com/2011/11/12/modern-art-with-diagrams-the-face-of-progress/
2011-11-12 18:24:42 UTC <tgeeky> haha
2011-11-12 18:24:49 UTC <tgeeky> that better be a lot of extra credit points
2011-11-12 18:25:19 UTC <luite> haha great :) it's interesting that the lines seem to be ok, but the fills are not?
2011-11-12 18:28:27 UTC <byorgey> luite: yep
2011-11-12 18:28:58 UTC <byorgey> hence the bugs were in the polygon-drawing code as opposed to the edge-drawing code (or even the vertex-exploring code)
2011-11-12 18:30:14 UTC <byorgey> tgeeky: yes, it is worth 1356 + 2sqrt(2) + 19sqrt(3) + (497823/31)sqrt(6)  extra credit points ;)
2011-11-12 18:31:06 UTC <byorgey> luite: I was kind of joking in my post, but in actuality staring at the wrong outputs *did* help me find the bugs =)
2011-11-12 18:59:44 UTC <Taejo> I've implemented the boundary function datatype... now the hard part is actually creating them for primitives
2011-11-12 19:01:15 UTC <byorgey> Taejo: oh, nice =)
2011-11-12 19:04:31 UTC <Taejo> ACTION stares at multiple lines of maxima output trying to untangle the boundary function for a sphere
2011-11-12 19:05:30 UTC <byorgey> Taejo: basically you're doing raytracing
2011-11-12 19:05:42 UTC <byorgey> look up ray-sphere intersection testing
2011-11-12 19:05:50 UTC <Taejo> good point
2011-11-12 19:06:18 UTC <byorgey> and then un-generalize it to two dimensions for the 2D primitives ;)
2011-11-12 19:08:41 UTC <Taejo> byorgey: does this definition make sense: http://hpaste.org/53942
2011-11-12 19:10:35 UTC <byorgey> Taejo: hmm, I'm not sure about the choice re: rays pointing away from the object giving you zero instead of a negative scalar
2011-11-12 19:11:06 UTC <byorgey> I agree the empty region presents a problem but I think the obvious negative-returning semantics is way more useful
2011-11-12 19:12:01 UTC <Taejo> hmmm
2011-11-12 19:12:12 UTC <byorgey> well, it's not just the empty region, I guess any vector whose extension as a line does not intersect the region
2011-11-12 19:12:26 UTC <Taejo> yeah
2011-11-12 19:12:48 UTC <byorgey> Taejo: perhaps the right answer is to return not a scalar, but a value from the set of scalars adjoined with negative infinity
2011-11-12 19:12:55 UTC <Taejo> you can recover the negative scalar by testing in both directions
2011-11-12 19:13:01 UTC <Taejo> v and negateV
2011-11-12 19:13:09 UTC <Taejo> *negateV v
2011-11-12 19:13:38 UTC <byorgey> Taejo: ah, so you can
2011-11-12 19:13:39 UTC <byorgey> hmm
2011-11-12 19:14:23 UTC <byorgey> Taejo: actually, I think returning zero will not work once you try to do translations and so on
2011-11-12 19:14:46 UTC <Taejo> oh?
2011-11-12 19:15:34 UTC <byorgey> hmm... I'll have to think about it more
2011-11-12 19:15:41 UTC <byorgey> I have to go right now, be back later
2011-11-12 19:38:51 UTC <Taejo> byorgey: actually, you can't recover it with the negative vector: that takes you to *far* side of the diagram instead of the near side
2011-11-12 19:42:24 UTC <byorgey> Taejo: ah, indeed
2011-11-12 19:43:05 UTC <byorgey> Taejo: another problem I just thought of is that you can't tell the difference between being on top of a line segment and not intersecting the diagram at all
2011-11-12 19:43:16 UTC <Taejo> yep
2011-11-12 19:43:24 UTC <byorgey> Taejo: do you see any problems with adjoining negative infinity?
2011-11-12 19:43:25 UTC <Taejo> maybe the boundary function should return maybe?
2011-11-12 19:44:01 UTC <Taejo> I don't really see calling the "never intersects" value as negative infinity
2011-11-12 19:44:10 UTC <Taejo> why not positive infinity?
2011-11-12 19:44:15 UTC <Taejo> or just Nothing
2011-11-12 19:44:18 UTC <byorgey> because it's the smallest scalar for which etc. etc.
2011-11-12 19:44:25 UTC <byorgey> it fits perfectly
2011-11-12 19:44:25 UTC <Taejo> oh right
2011-11-12 19:44:54 UTC <byorgey> and it makes the rest of the implementation obvious
2011-11-12 19:45:05 UTC <byorgey> e.g. you don't have to think hard about how to combine Nothing and Just s
2011-11-12 19:45:08 UTC <Taejo> yeah you're right
2011-11-12 19:45:24 UTC <byorgey> e,g, under max or min
2011-11-12 19:45:44 UTC <Taejo> about adjoining infinity, Double already has one, but Haskellers seem not to like it :)
2011-11-12 19:45:54 UTC <byorgey> hehe
2011-11-12 19:46:13 UTC <byorgey> I am NOT suggesting to use Double's infinity =)
2011-11-12 19:46:22 UTC <Taejo> yeah, I realised
2011-11-12 21:01:18 UTC <tgeeky> byorgey: surely that's a whole semester worth of points
2011-11-12 21:04:58 UTC <tgeeky> byorgey: http://ianwookim.org/HROOT/gallery.html
2011-11-12 21:08:12 UTC <luite> hmm what are good hotel comparison/booking sites that also have cheaper hostels and studio appartment?
2011-11-12 21:08:26 UTC <luite> whoops I meant to ask that in #haskell-blah
2011-11-12 21:08:31 UTC <tgeeky> hehe
2011-11-12 21:13:35 UTC <byorgey> tgeeky: heh, that layout looks familiar =)
2011-11-12 21:15:05 UTC <luite> hehe yes
2011-11-13 09:09:57 UTC <tgeeky_> haha
2011-11-13 09:10:00 UTC <tgeeky_> check this one out:
2011-11-13 09:10:01 UTC <tgeeky_> http://www.wolframalpha.com/input/?i=A%28n+%2B+5%29+%3D+A%28n+-+2%29+%2B+A%28n+-+3%29
2011-11-14 03:12:52 UTC <luite> hmm
2011-11-14 03:13:28 UTC <luite> I've implemented pslq in haskell but now I need some higher precision floats...
2011-11-14 03:18:09 UTC <byorgey> what's pslq?
2011-11-14 03:18:48 UTC <luite> algorithm to find integer relations
2011-11-14 03:19:17 UTC <luite> it's what they used to discover the formula to directly calculate digits of pi
2011-11-14 03:19:23 UTC <luite> (hex digits)
2011-11-14 03:19:50 UTC <byorgey> ah, right, cool =)
2011-11-14 03:20:10 UTC <byorgey> luite: can you use CReal?
2011-11-14 03:20:33 UTC <byorgey> or is it important to have it be fast?
2011-11-14 03:23:27 UTC <luite> I think CReal would work for the input value (you supply a vector v with numbers, and it gives you back a integer vector i such that i /= 0 and v.i = 0 (approx)), CReal would probaby be extremely slow for the calculations
2011-11-14 03:27:27 UTC <luite> I think what would work is to start in low precision, and increase precision when either a solution appears to be found, or when the current precision won't do anymore (the algorithm start with simple relations (low norm) and searches increasingly complex ones, if it fails to find anything, you have a lower bound on the norm of an integer relation)
2011-11-14 03:32:50 UTC <luite> do you know a matrix package that works with arbitrary numeric types?
2011-11-14 03:35:29 UTC <tgeeky_> there are several packages which provied fixed precision stuff
2011-11-14 03:35:44 UTC <luite> yeah one for which you need to recompile ghc...
2011-11-14 03:36:31 UTC <luite> do you know another?
2011-11-14 03:36:51 UTC <tgeeky_> http://hackage.haskell.org/package/fixed-point
2011-11-14 03:37:15 UTC <tgeeky_> http://hackage.haskell.org/package/fixed-precision
2011-11-14 03:39:53 UTC <luite> oh right, but fixed size floating point would be more appropriate here I think
2011-11-14 03:40:23 UTC <tgeeky_> there's also that guy's double-conversion package
2011-11-14 03:41:05 UTC <tgeeky_> luite: I was assuming that wolfgang would use something like repr, even if it's slower internally
2011-11-14 03:41:21 UTC <luite> that guy is annoying becasue the package breaks th and ghci ;p
2011-11-14 03:41:49 UTC <tgeeky_> repr, you mean?
2011-11-14 03:41:59 UTC <tgeeky_> yeah, he's committed to unicode, that's for sure
2011-11-14 03:43:20 UTC <luite> nah I mean double-conversion
2011-11-14 03:43:33 UTC <luite> that uses a C++ lib that doesn't work with the ghci linker
2011-11-14 03:44:25 UTC <luite> but I don't know what repr does :)
2011-11-14 03:45:12 UTC <tgeeky_> what you really want I think
2011-11-14 03:45:23 UTC <tgeeky_> is a sliding or adjustable fixed precision thing
2011-11-14 03:45:32 UTC <tgeeky_> where you can just ask for arbitrarily more digits?
2011-11-14 03:47:02 UTC <luite> right, though I think the algorithm may need to be restarted for that
2011-11-14 03:49:08 UTC <tgeeky_> well
2011-11-14 03:49:15 UTC <tgeeky_> I try to watch for packages
2011-11-14 03:49:25 UTC <tgeeky_> I know there was one package that just included a lot of optimized Integer stuff
2011-11-14 03:49:40 UTC <tgeeky_> I haven't seen anything recent about floating or double
2011-11-14 03:50:06 UTC <luite> I can try to make my own impl based on Integer or something
2011-11-14 03:53:18 UTC <tgeeky_> you could work in algebraic integers
2011-11-14 03:53:27 UTC <tgeeky_> I don't even know if there is good implementation in Haskell of them
2011-11-14 03:53:59 UTC <tgeeky_> luite: there's this, relatively recent: http://hackage.haskell.org/package/yap
2011-11-14 03:54:17 UTC <tgeeky_> again, doubt it will help, just listing for completeness
2011-11-14 03:59:20 UTC <luite> ah didn't know that one
2011-11-14 03:59:30 UTC <tgeeky_> there's also simpleprelude
2011-11-14 03:59:46 UTC <tgeeky_> which is nice if you want to just discard Num but nothing else
2011-11-14 04:00:31 UTC <tgeeky_> luite: also this: http://hackage.haskell.org/packages/archive/numeric-tools/0.2.0.0/doc/html/Numeric-ApproxEq.html
2011-11-14 04:00:50 UTC <luite> I'll look into it later. the current version works with Double, but that's nott terribly useful. ideally it would work with real, complex and quaternion in variable precision
2011-11-14 04:01:30 UTC <tgeeky_> actually
2011-11-14 04:01:57 UTC <luite> (I need sqrt, matrix multiplication and triangular matrix inverse)
2011-11-14 04:11:25 UTC <luite> anyway, first some sleep :) I might upload it later after generalizing it, I think it could be fun to play with
2011-11-14 04:13:15 UTC <tgeeky_> luite: oh
2011-11-14 04:13:22 UTC <tgeeky_> and here is the new integer stuff: http://hackage.haskell.org/package/arithmoi
2011-11-14 04:13:54 UTC <tgeeky_> byorgey: here?
2011-11-14 04:15:46 UTC <luite> hmm that also looks interesting
2011-11-14 04:16:07 UTC <luite> but I think there's probably way too much fragmentation for these things
2011-11-14 04:22:20 UTC <tgeeky_> yep
2011-11-14 04:22:28 UTC <tgeeky_> good tools will cause these things to settle
2011-11-14 04:22:30 UTC <tgeeky_> and you're making good tools
2011-11-14 20:02:05 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/Apollonian.png
2011-11-14 20:02:10 UTC <byorgey> tgeeky_: ^^^ =)
2011-11-14 20:02:57 UTC <tgeeky_> the familar 223 gasket :)
2011-11-14 20:03:20 UTC <tgeeky_> noice
2011-11-14 20:04:19 UTC <tgeeky_> byorgey: how deep did you go? how long did it take to render?
2011-11-14 20:09:53 UTC <luite> cool :)
2011-11-14 20:32:37 UTC <byorgey> tgeeky_: that one stops at a radius of 1/500, takes a couple seconds to render
2011-11-14 20:35:08 UTC <byorgey> need to clean up the code a bit and write some code to generate the centers of an initial 3 circles just given their signed bends
2011-11-14 20:35:20 UTC <byorgey> then I'll throw it in diagrams-contrib and write a blog post about it =)
2011-11-14 20:36:14 UTC <byorgey> tgeeky_: that paper you linked me to was super useful, it's really awesome being able to use descartes' theorem for both bends and bends*centers
2011-11-14 20:36:26 UTC <byorgey> and because of type class polymorphism I only had to implement it once =)
2011-11-14 20:37:00 UTC <byorgey> anyway, I'm currently doing a bit of cleanup/reorganization in preparation for ANIMATION
2011-11-14 21:17:21 UTC <tgeeky_> byorgey: well, my hope is that there's actual (read: physical) meaning to that fact
2011-11-14 21:17:55 UTC <tgeeky_> but cool. I'll be happy to see the code,because then I have a starting point
2011-11-14 21:18:09 UTC <tgeeky_> I often find myself stuck in Haskell land, until someone provides a starting point for me to tinker
2011-11-15 23:40:49 UTC <luite> yay booked whistler apartment for a week in  december :)
2011-11-15 23:46:31 UTC <luite> hopefully it will keep snowing
2011-11-15 23:53:15 UTC <fryguybob> You will have to carve some lambdas on the slopes.
2011-11-15 23:54:34 UTC <luite> hmm, a C or a J would be easier to carve ;p
2011-11-16 02:42:13 UTC <tgeeky> you could do a Y, given sufficient leg strength :o
2011-11-16 02:49:40 UTC <luite> hehe, make a Y using SKI combinators? ;p
2011-11-16 02:56:46 UTC <fryguybob> haha
2011-11-16 03:40:19 UTC <tgeeky> heh
2011-11-16 03:40:28 UTC <tgeeky> i made a dude firing a lazer out of his mouth
2011-11-16 03:40:30 UTC <tgeeky> http://www.wolframalpha.com/input/?i=%28%281-z%29%5Ed+-+z+-+1%29z%5E%28d-1%29+%2B+%281-z%29%5E%28d%29+%3D+0.0001+where+d+%3D+42
2011-11-16 03:40:37 UTC <tgeeky> he even has an eye
2011-11-16 03:40:39 UTC <tgeeky> lol!
2011-11-16 07:36:12 UTC <byorgey> tgeeky: http://patch-tag.com/r/byorgey/diagrams-contrib/snapshot/current/content/pretty/src/Diagrams/TwoD/Apollonian.hs
2011-11-16 18:40:53 UTC <tgeeky> byorgey: that is amazing, isn't it :)
2011-11-16 19:13:03 UTC <byorgey> tgeeky: yep =)
2011-11-16 19:13:18 UTC <byorgey> not a single trig function in sight
2011-11-17 02:18:51 UTC <tgeeky> byorgey: do you have Bird's Functional Pearls book?
2011-11-17 02:45:32 UTC <byorgey> tgeeky: yes
2011-11-17 02:45:52 UTC <byorgey> tgeeky: not here though, it's in my office at school
2011-11-17 02:54:51 UTC <luite> that's pearls of functional algorithm design, right?
2011-11-17 02:55:06 UTC <tgeeky> yeah
2011-11-17 02:55:26 UTC <tgeeky> I wanted someone to type out the (type,class,newtype,data) stuff required for #5
2011-11-17 02:55:27 UTC <luite> yeah that's a fun book :)
2011-11-17 02:55:48 UTC <tgeeky> since I'm having trouble figuring out what to put where
2011-11-17 02:56:02 UTC <tgeeky> rather embarassingly
2011-11-17 02:56:22 UTC <tgeeky> but edwardk is gone :(
2011-11-17 03:01:14 UTC <tgeeky> http://hpaste.org/54146 <--
2011-11-17 03:01:55 UTC <tgeeky> luite: I have about 10 of these re-done so far :O
2011-11-17 03:10:03 UTC <byorgey> tgeeky: I don't understand exactly what you're asking for
2011-11-17 03:10:14 UTC <luite> me neither :)
2011-11-17 03:10:27 UTC <byorgey> tgeeky: what is A supposed to be?
2011-11-17 03:10:41 UTC <tgeeky> byorgey: a linearly ordered set
2011-11-17 03:11:49 UTC <tgeeky> this is the 'sorting pairwise sums' exercise. A is a linearly ordered set.
2011-11-17 03:12:04 UTC <tgeeky> it's supposed to have (+) and (-) and (<=)
2011-11-17 03:12:13 UTC <byorgey> tgeeky: isn't this supposed to be abstract in A?
2011-11-17 03:12:25 UTC <byorgey> i.e. as long as A is any type with such-and-such properties then we can write this algorithm...?
2011-11-17 03:12:37 UTC <tgeeky> maybe, but why did he choose uppercase A? :o
2011-11-17 03:12:44 UTC <luite> why do you have some special name for a semigroup with inverses?
2011-11-17 03:13:31 UTC <tgeeky> luite: I'm just naming things the way they are written in the book
2011-11-17 03:14:32 UTC <luite> tgeeky: you don't need a separate type a probably, just a (Group a, Ord a) =>  context for your functions...
2011-11-17 03:14:54 UTC <tgeeky> luite: edwardk specifically told me to use (Ord a, Semigroup a) =>
2011-11-17 03:15:03 UTC <tgeeky> which I wrote somewhere in that mass
2011-11-17 03:15:09 UTC <byorgey> tgeeky: he used an uppercase letter because he's using math-ish notation and uppercase letters are usually used for sets
2011-11-17 03:15:23 UTC <tgeeky> byorgey: :/
2011-11-17 03:15:23 UTC <byorgey> I just found that chapter in google books so I am looking at it now
2011-11-17 03:15:33 UTC <tgeeky> byorgey: oh ok. thank you.
2011-11-17 03:15:33 UTC <byorgey> it is definitely not a concrete type
2011-11-17 03:15:37 UTC <luite> ah url?
2011-11-17 03:15:48 UTC <tgeeky> i could have pasted the PDF excerpt, and will if you don't have enough pages
2011-11-17 03:15:53 UTC <byorgey> tgeeky: just use   sortsums :: Ord a => [a] -> [a] -> [a]
2011-11-17 03:16:33 UTC <byorgey> luite: http://books.google.com/books?id=ZQJnYoAmw6gC&lpg=PA241&dq=%22linearly%20ordered%20set%22%20pearls&pg=PA27#v=onepage&q&f=false
2011-11-17 03:17:26 UTC <byorgey> tgeeky: well, you might need additional constraints to talk about (+) and so on
2011-11-17 03:18:01 UTC <byorgey> tgeeky: oh, yes, what edwardk told you is what you want
2011-11-17 03:18:21 UTC <tgeeky> so I write the class (Ord a, Semigroup a) => O a
2011-11-17 03:18:30 UTC <tgeeky> and put: (+), (-), (<=) in there?
2011-11-17 03:18:41 UTC <luite> except that you can't define (-) with just semigroup?
2011-11-17 03:19:11 UTC <tgeeky> luite: he defines
2011-11-17 03:19:17 UTC <tgeeky> x - y = x + negate y
2011-11-17 03:19:28 UTC <tgeeky> x + y = x (-) y
2011-11-17 03:19:32 UTC <luite> yeah but where do you get negate?
2011-11-17 03:19:38 UTC <tgeeky> Num, I guess?
2011-11-17 03:19:44 UTC <byorgey> tgeeky: no, Ord a, Semigroup a  already gives you those operations
2011-11-17 03:19:54 UTC <byorgey> Ord gives you (<=)
2011-11-17 03:19:57 UTC <byorgey> oh
2011-11-17 03:20:15 UTC <byorgey> well, if you want a group you do need more than just Semigroup
2011-11-17 03:20:32 UTC <tgeeky> it's supposed to be an abelian group too
2011-11-17 03:20:40 UTC <byorgey> tgeeky: define   class Semigroup a => Group a where  inv :: a -> a
2011-11-17 03:20:59 UTC <byorgey> Semigroup gives you (<>) which you can use in place of +
2011-11-17 03:21:09 UTC <byorgey> you can give it another name if you want
2011-11-17 03:21:11 UTC <tgeeky> byorgey: I thought so, too.
2011-11-17 03:21:17 UTC <tgeeky> and then I'll have all of them.
2011-11-17 03:21:23 UTC <byorgey> yup
2011-11-17 03:21:30 UTC <tgeeky> sigh.  thanks.
2011-11-17 03:22:23 UTC <luite> byorgey: are those still allowed?
2011-11-17 03:22:46 UTC <byorgey> luite: are what still allowed?
2011-11-17 03:22:57 UTC <luite> class A a => B a  contexts
2011-11-17 03:23:09 UTC <byorgey> yes, and they always will be
2011-11-17 03:23:18 UTC <byorgey> it's  data  A a => B a   which are deprecated
2011-11-17 03:24:17 UTC <luite> ah right
2011-11-18 18:30:18 UTC <fryguybob> byorgey: You wrote " 'pure a' would have to be a structure mapping *every* key to a", wouldn't  `lookup _ (PureMap a) = Just a`  do this?
2011-11-18 18:56:57 UTC <byorgey> fryguybob: yes, but  pure has type   a -> f a
2011-11-18 18:57:07 UTC <byorgey> fryguybob: so it has to return a Map.
2011-11-18 18:57:40 UTC <fryguybob> byorgey: Right, I'm saying lift a "constant map" into the map data type.
2011-11-18 18:57:41 UTC <byorgey> fryguybob: oh, you mean if you make some type   Foo k a = PureMap a | NonPureMap (Map k a)  ?
2011-11-18 18:57:44 UTC <fryguybob> Right
2011-11-18 18:57:55 UTC <fryguybob> I guess that might be better as a Map with default.
2011-11-18 18:58:29 UTC <byorgey> fryguybob: yes, that works.  But that's the same construction I talked about in my email, where you adjoin a special Pure element to turn an Apply into an Applicative
2011-11-18 18:58:37 UTC <fryguybob> ok
2011-11-18 18:58:54 UTC <byorgey> the point is that  Map k a  by itself can't be Applicative, unless you add a special PureMap.
2011-11-18 18:59:22 UTC <byorgey> yeah, map-with-default can be Applicative too
2011-11-18 18:59:25 UTC <fryguybob> Yeah I can see that.
2011-11-18 22:04:32 UTC <ezyang> Has Diagrams grown HTML5/Canvas support?
2011-11-18 22:05:12 UTC <byorgey> ezyang: http://patch-tag.com/r/fryguybob/diagrams-canvas/home
2011-11-18 22:05:31 UTC <ezyang> ooh, fancy!
2011-11-18 22:05:32 UTC <byorgey> ezyang: I think fryguybob said it doesn't compile at the moment but shouldn't be hard to fix up
2011-11-18 22:06:40 UTC <ezyang> I'm looking at dynamically generating interactive 3-colorable graphs, and so Canvas is good for interactivity but I think diagrams might be better for actually, uh, programming the generation.
2011-11-18 22:07:00 UTC <byorgey> ezyang: sounds cool!
2011-11-18 22:07:23 UTC <byorgey> yeah, interactive diagrams via HTML5/Canvas would be awesome
2011-11-18 22:07:49 UTC <byorgey> I haven't thought about it much but it should be doable.
2011-11-18 22:08:04 UTC <ezyang> Unfortunately, I'm juggling a bazillion things so it's not obvious to me whether or not I want to make a semi-working package working.
2011-11-18 22:08:12 UTC <byorgey> fair enough =)
2011-11-18 22:08:43 UTC <byorgey> you could also bug fryguybob to fix it, although I think he's juggling a bazillion things too
2011-11-18 22:08:55 UTC <ezyang> Yeahhh :^)
2011-11-18 22:09:15 UTC <ezyang> Also my partner in crime is not well-versed in Haskell, unfortunately :-(
2011-11-18 22:09:52 UTC <byorgey> a temporary infelicity
2011-11-18 22:35:58 UTC <tgeeky_> ezyang: can you go ahead and do that for 4-colorings too, please? kthx
2011-11-18 22:46:09 UTC <ezyang> Hmm, has anyone actually coded up an algo which does this?
2011-11-18 22:49:37 UTC <ezyang> Apparently, you can do it in O(n^2)
2011-11-18 22:56:02 UTC <tgeeky_> dunno - I ask because the (mathematical) gem of mine eyes has an inverse representation - http://en.wikipedia.org/wiki/Apollonian_network apollonian networks
2011-11-18 22:56:15 UTC <tgeeky_> which serve as uniquely 4-colorable *planar* graphs
2011-11-18 22:57:39 UTC <tgeeky_> there's been all kinds of work on 4-coloring in general, though
2011-11-21 01:58:35 UTC <ClaudiusMaximus> the user manual is nice :)  just did a little thing tonight, first for ages, and it was pleasant and quick to get into again - will use it for a bigger project next
2011-11-21 01:59:34 UTC <byorgey> ClaudiusMaximus: glad to hear it!
2011-11-21 02:00:17 UTC <byorgey> ClaudiusMaximus: I am currently working on a new feature you may be interested in... a little feature I like to call "animation" =D
2011-11-21 02:00:29 UTC <ClaudiusMaximus> didn't manage to find a grid layout, so i ended up using vcat' and hcat' with a carefully picked sep value
2011-11-21 02:00:42 UTC <ClaudiusMaximus> cool!
2011-11-21 02:00:54 UTC <byorgey> yeah, a grid layout combinator is something that should be added to diagrams-lib
2011-11-21 02:01:10 UTC <ClaudiusMaximus> so many ways to do it though
2011-11-21 02:01:28 UTC <byorgey> true.
2011-11-21 02:02:03 UTC <byorgey> perhaps what we really need is a 'Diagrams.GridLayout' module in diagrams-contrib, and we just throw in there every method of grid layout we can think of =)
2011-11-21 02:02:06 UTC <ClaudiusMaximus> columns all same size or stretch to fit or percentage of whole, what about things that might span more cells (thinking like html tables..)
2011-11-21 02:02:37 UTC <byorgey> true
2011-11-21 02:02:49 UTC <byorgey> and don't forget it should all generalize to arbitrary vector spaces ;)
2011-11-21 02:03:06 UTC <ClaudiusMaximus> haha
2011-11-21 02:04:11 UTC <ClaudiusMaximus> actually, one thing i would like is (sub)pixel-perfect vector overlay on a bitmap image, is that possible yet?
2011-11-21 02:08:08 UTC <ClaudiusMaximus> i guess i should try and see
2011-11-21 02:08:13 UTC <byorgey> ClaudiusMaximus: I'm not sure I understand what that means, can you explain/give an example?
2011-11-21 02:08:54 UTC <ClaudiusMaximus> byorgey: ok, here's one i made in gimp http://claudiusmaximus.goto10.org/g/mandelbrot/angled_internal_address_diagram_1-3.png , there's a better example i made somewhere but i haven't found it yet...
2011-11-21 02:09:42 UTC <ClaudiusMaximus> byorgey: ah,a found it - http://claudiusmaximus.goto10.org/g/mandelbrot/periodic-boundary-trace.png (1.5MB)
2011-11-21 02:10:11 UTC <ClaudiusMaximus> the frizzy edges are a bitmap, overlayed with an svg, emitted as xml text
2011-11-21 02:11:09 UTC <ClaudiusMaximus> i had to do all the coordinate scaling manually to get it pixel accurate
2011-11-21 02:11:55 UTC <byorgey> ClaudiusMaximus: I see.  I don't think I understand the relevant issues well enough to know how well it would work in diagrams.
2011-11-21 02:12:05 UTC <byorgey> which probably means it doesn't =)
2011-11-21 02:12:24 UTC <byorgey> but if you try it, let me know how it goes (and if you have suggestions for how it could be better)
2011-11-21 02:13:27 UTC <fryguybob> ClaudiusMaximus: Is what you want something like SnapsToDevicePixels in Xaml?
2011-11-21 02:13:46 UTC <ClaudiusMaximus> fryguybob: never heard of that, so i don't know!
2011-11-21 02:14:59 UTC <ClaudiusMaximus> byorgey: sure, it'd probably be as simple as making sure all the vector stuff fits exactly in a box the right aspect ratio in the correct proportions, and rendering at the same size as the bitmap, then combining, or so..
2011-11-21 02:16:10 UTC <ClaudiusMaximus> oh! one newb question, how to make the cairo defaultMain render with a solid white background?  i dislike inappropriate transparency (my default browser settings are black background => invisible things sometimes...)
2011-11-21 02:16:51 UTC <fryguybob> This shows the general idea:  http://www.wpftutorial.net/DrawOnPhysicalDevicePixels.html
2011-11-21 02:18:56 UTC <ClaudiusMaximus> fryguybob: ah, that would be handy in some circumstances - i was more making sure things line up with a bitmap without extraneous padding/scaling knocking things out of alignment
2011-11-21 02:19:17 UTC <fryguybob> ClaudiusMaximus: Oh, I see.
2011-11-21 02:19:26 UTC <ClaudiusMaximus> which is probably trivial - i should really try things before asking
2011-11-21 02:20:52 UTC <byorgey> ClaudiusMaximus: there's no way built into the cairo backend to give a different background (although I suppose we could)
2011-11-21 02:21:09 UTC <byorgey> ClaudiusMaximus: but you can easily just combine your diagram with a white rectangle before rendering
2011-11-21 02:21:45 UTC <byorgey> withBackground color d = d <> rect (width d) (height d) # fc white # lw 0
2011-11-21 02:21:53 UTC <byorgey> er, s/white/color/
2011-11-21 02:22:43 UTC <byorgey> I dislike inappropriate non-transparency ;)
2011-11-21 02:23:22 UTC <ClaudiusMaximus> :)
2011-11-21 02:25:47 UTC <fryguybob> You can have any color you want as long as it is white :p
2011-11-21 02:48:48 UTC <tgeeky> byorgey: so, re: animation
2011-11-21 02:49:29 UTC <tgeeky> G. Hutton gave a nice (easy) talk about (contractive functions) and his generators for streams
2011-11-21 02:50:39 UTC <tgeeky> byorgey: http://www.reddit.com/r/haskell/comments/mj23v/new_video_lecture_how_to_be_more_productive/
2011-11-21 02:51:22 UTC <byorgey> fryguybob: hahaha
2011-11-21 02:51:31 UTC <tgeeky> anyway, he introduces a time-based perspective to streams, and a theorem about branach spaces, and stream uniquness, and such.
2011-11-21 02:51:52 UTC <byorgey> tgeeky: sounds cool
2011-11-21 02:51:58 UTC <tgeeky> byorgey: it might be worth your read.
2011-11-21 02:52:14 UTC <tgeeky> I actuall think (hope) there is a "more interesting" generalization of his time-based perspective
2011-11-21 02:52:23 UTC <tgeeky> but the rest of it is very useful
2011-11-21 02:52:32 UTC <tgeeky> he calls it a semantic correctness condition for streams
2011-11-21 02:53:32 UTC <tgeeky> byorgey: anyway, I think using his method I might be able to start peeling away at getting the (general) apollonian fractal represented as multiplate of streams
2011-11-21 02:53:54 UTC <byorgey> tgeeky: is this based on the work of N. Krishnaswami and N. Benton?
2011-11-21 02:54:11 UTC <tgeeky> byorgey: I haven't traced references yet, because I didn't have much trouble reading the paper through the first time
2011-11-21 02:54:28 UTC <byorgey> tgeeky: oh, Hutton's talk was based on a paper?
2011-11-21 02:54:37 UTC <tgeeky> yes, of his own name
2011-11-21 02:54:45 UTC <tgeeky> http://www.cs.nott.ac.uk/~gmh/contractive.pdf
2011-11-21 02:55:45 UTC <tgeeky> byorgey: I also think this might be immediately useful to me working on 'species'
2011-11-21 02:55:55 UTC <tgeeky> well, probably not
2011-11-21 02:56:06 UTC <tgeeky> but using species to make some other interesting EGFs
2011-11-21 02:56:36 UTC <tgeeky> anyway, with the line you threw me with diagrams, and with this paper, I think I will have a good week
2011-11-21 02:57:27 UTC <luite> hm cool I can view ppt files
2011-11-21 02:57:29 UTC <byorgey> hehe, great =)
2011-11-21 02:58:12 UTC <tgeeky> byorgey: the citation fo Kirishnaswami & Benton is 'trivial'
2011-11-21 02:58:34 UTC <luite> hm not very well though... apparently the -> displays as []
2011-11-21 03:00:33 UTC <byorgey> tgeeky: ok, I will have to read more carefully to see what the difference is
2011-11-21 03:00:34 UTC <tgeeky> byorgey: I presume you aren't expert enough to explain ((Krishnaswami & Benton, 2011)) 'ultrametric spaces'  to me
2011-11-21 03:00:45 UTC <tgeeky> in say, 5 sentences or less.
2011-11-21 03:00:48 UTC <tgeeky> God this paper looks indigestable.
2011-11-21 03:01:02 UTC <byorgey> haha, well I did understand it
2011-11-21 03:01:24 UTC <byorgey> but I don't remember it well enough to explain it in 5 sentences.
2011-11-21 03:02:15 UTC <byorgey> tgeeky: "A Semantic Model for Graphical User Interfaces" is easier going
2011-11-21 03:03:03 UTC <tgeeky> byorgey: it shouldn't be that bad, but when I see that huge chunk of denotational semantics all crunched up my brain wants to cry :o
2011-11-21 03:03:11 UTC <byorgey> mine too
2011-11-21 03:03:24 UTC <tgeeky> and yet, if I zoom in a whole bunch to a small section
2011-11-21 03:03:27 UTC <tgeeky> it seems perfectly reasonable
2011-11-21 03:06:04 UTC <tgeeky> but the way I see it
2011-11-21 03:06:42 UTC <tgeeky> multiplate is represented by a set of coalgebras, paramterized by an applicative functor
2011-11-21 03:06:53 UTC <tgeeky> (a possibly mutually recursive set)
2011-11-21 03:07:41 UTC <tgeeky> then, this paper gives me a method to actually check which streams make sense
2011-11-21 03:09:35 UTC <tgeeky> the 'unfold from the middle' paper gives you the opportunity to fold/unfold finite segments of infinite trees in both directions on a list -- from same-lengthed initial (centered) segments
2011-11-21 03:10:47 UTC <tgeeky> so hopefully I'll be able to introduce many of the more complicated streams (lucas, perrin and padovan, pell) that are associated with the apollonian fractal
2011-11-21 03:11:35 UTC <tgeeky> and the Haskell community can rejoice in not using 20 variations on fib for introductory tutorials
2011-11-21 05:24:43 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/cycle.mp4  =D
2011-11-21 05:26:16 UTC <tgeeky> we have liftoff!
2011-11-21 05:26:24 UTC <tgeeky> orbit, really
2011-11-21 05:26:50 UTC <byorgey> code used to generate it is here: http://hpaste.org/54359
2011-11-21 05:27:25 UTC <tgeeky> that's terse
2011-11-21 05:27:29 UTC <tgeeky> I sense magic afoot
2011-11-21 05:27:44 UTC <byorgey> I still have a bunch of cleanup/documentation to do, and we'll need to add lots more combinators for practically building animations, but it works! =D
2011-11-21 05:28:04 UTC <byorgey> tgeeky: no magic. just Haskell. =)
2011-11-21 05:28:18 UTC <tgeeky> on a Sunday, I can't tell the difference.
2011-11-21 05:28:21 UTC <luite> oh cool
2011-11-21 05:28:23 UTC <byorgey> hehe
2011-11-21 05:28:32 UTC <byorgey> it turns out that Applicative gives you a really nice interface for doing stuff with animations.
2011-11-21 05:28:36 UTC <luite> how do you output the animation?
2011-11-21 05:29:07 UTC <byorgey> luite: right now I just have a function 'animMain' defined in the cairo backend that simply outputs an image for each frame
2011-11-21 05:29:12 UTC <byorgey> then I put them together with ffmpeg
2011-11-21 05:29:39 UTC <byorgey> of course eventually I'd like to have an OpenGL backend etc.
2011-11-21 05:29:55 UTC <byorgey> I think perhaps Andy Gill & some of his students may work on that (?)
2011-11-21 05:32:42 UTC <tgeeky> byorgey: you'd probably be surprised at the quality (and data intensity) of some of the example d3.js animations
2011-11-21 05:33:10 UTC <tgeeky> http://www.jasondavies.com/toys/ <--
2011-11-21 05:33:15 UTC <byorgey> I probably would.
2011-11-21 05:33:18 UTC <tgeeky> try the bifurcations graph and crank it up
2011-11-21 05:35:08 UTC <byorgey> very cool!
2011-11-21 05:35:20 UTC <tgeeky> there are tons of others here: https://github.com/mbostock/d3/wiki
2011-11-21 05:37:05 UTC <tgeeky> byorgey: here's another simple one:
2011-11-21 05:37:06 UTC <tgeeky> http://bl.ocks.org/1353700
2011-11-21 05:37:48 UTC <tgeeky> here's an example of something that works at high speed: http://bl.ocks.org/1345853
2011-11-21 05:38:08 UTC <tgeeky> algorithimcs (merge sort): http://bl.ocks.org/1243323
2011-11-21 05:38:36 UTC <luite> ah pretty cool demo's :)
2011-11-21 05:38:49 UTC <tgeeky> yes, it's a little weird that he only puts his own demons on the "examples" page
2011-11-21 05:38:50 UTC <byorgey> all very cool!  Too bad the code is butt-ugly =)
2011-11-21 05:38:57 UTC <tgeeky> but you have to go to (documentation -> examples)
2011-11-21 05:39:21 UTC <tgeeky> byorgey: perhaps, but it might be possible to establish a mapping as a diagrams backend?
2011-11-21 05:39:40 UTC <tgeeky> s/possible/pratical/. s/practical/useful/?
2011-11-21 05:40:27 UTC <tgeeky> this here, is probably the most impressive (and most ugly) of them all:
2011-11-21 05:40:28 UTC <tgeeky> http://bl.ocks.org/1256572
2011-11-21 05:40:57 UTC <tgeeky> the transition from stick-graph to bar-graph is particular cute
2011-11-21 05:43:28 UTC <byorgey> yeah, a diagrams backend sounds possible
2011-11-21 05:43:47 UTC <tgeeky> if I'm clever enough to understand multiplate, it might even be easy
2011-11-21 05:44:29 UTC <tgeeky> I *need* web-based (and ideally, javascript-based so as to allow ipad)
2011-11-21 05:44:40 UTC <tgeeky> rendering, and animations
2011-11-21 05:44:50 UTC <luite> bah I really need some sleep, 6:44am already
2011-11-21 05:44:56 UTC <tgeeky> yipes.
2011-11-21 05:45:00 UTC <tgeeky> night luite !
2011-11-21 05:46:10 UTC <luite> dunno if I can sleep... had some trouble all week :(
2011-11-21 05:46:36 UTC <tgeeky> are you usually a fluctuating sleeper?
2011-11-21 05:46:40 UTC <luite> also really unhappy about my productivity
2011-11-21 05:47:00 UTC <tgeeky> not all of us can be edwardk-s
2011-11-21 05:47:09 UTC <luite> he's scary :(
2011-11-21 05:47:13 UTC <tgeeky> seriously
2011-11-21 05:47:24 UTC <tgeeky> not to mention perfect GPA, all kinds of other stuff
2011-11-21 05:47:38 UTC <tgeeky> i read his bio and felt inept
2011-11-21 05:48:27 UTC <tgeeky> don't get me wrong, I'd rather have 5 byorgey's for every edwardk (who refuses to document well, probably because he thinks us creatins should understand it)
2011-11-21 05:49:00 UTC <byorgey> at least he's friendly =)
2011-11-21 05:49:08 UTC <tgeeky> very
2011-11-21 05:49:27 UTC <tgeeky> byorgey: since you loaded it, which are the unfriendly FPers you've met? :o
2011-11-21 05:49:43 UTC <luite> pick me, pick me ;)
2011-11-21 05:50:13 UTC <tgeeky> too loaded, and he's a good guy
2011-11-21 05:50:22 UTC <byorgey> there are probably a few but I can't think of any at the moment =)
2011-11-21 05:50:27 UTC <tgeeky> that Euler was a real ass.
2011-11-21 05:51:05 UTC <byorgey> (also this channel is logged publicly ;)
2011-11-21 05:51:11 UTC <tgeeky> see :)
2011-11-21 05:52:05 UTC <byorgey> as for edwardk I think he doesn't document because it's all he can do to keep up with the torrent of good ideas.
2011-11-21 05:52:25 UTC <byorgey> personally I'm glad he doesn't because it means more cool stuff.
2011-11-21 05:52:28 UTC <tgeeky> perhaps. He gave trifecta the ol' college try
2011-11-21 05:52:32 UTC <tgeeky> yeah
2011-11-21 05:52:36 UTC <luite> he also says he's still experimenting
2011-11-21 05:52:50 UTC <tgeeky> I get the sense that he's on a mission to exhibit as much of category theory as he can
2011-11-21 05:53:11 UTC <byorgey> that seems to be one of his missions, yes
2011-11-21 05:53:43 UTC <tgeeky> he's paving the way for... something ... to happen
2011-11-21 06:04:00 UTC <tgeeky> that's cute. In the context of streams, it looks like Cons could stand equally well for cell Cons, and constant
2011-11-21 06:23:53 UTC <tgeeky> ACTION loves it. make a stream incorrectly? paste in OEIS. make some other stream correctly!
2011-11-21 06:26:13 UTC <luite> hm
2011-11-21 06:26:21 UTC <tgeeky> trying to get Pell
2011-11-21 06:26:25 UTC <tgeeky> got... Jacobsthal numbers
2011-11-21 06:27:31 UTC <luite> oj apparemtly im still connected
2011-11-21 06:27:41 UTC <tgeeky> indeed
2011-11-21 06:29:07 UTC <luite> it's a bit strange, a few minutes of lag
2011-11-21 06:31:06 UTC <luite> because I closed myl aopt op for a few minutes, then opened it again
2011-11-21 06:31:37 UTC <tgeeky> you're so sleep deprived, your internet connection is lagging
2011-11-21 06:32:17 UTC <luite> weefwehm
2011-11-21 06:32:25 UTC <luite> oops
2011-11-21 06:33:06 UTC <luite> made a new connection and took over the screen session, that helps
2011-11-21 06:36:10 UTC <luite> hm maybe i'll read a bit in bed
2011-11-21 17:26:08 UTC <byorgey> http://hpaste.org/54359  -- I added an annotation showing use of the SHE preprocessor to make animation code even more readable
2011-11-22 01:24:30 UTC <luite> morning
2011-11-22 01:25:17 UTC <byorgey> evening luite
2011-11-22 01:25:46 UTC <byorgey> ACTION was under the impression that luite was in a time zone where it is currently something like 1:30 or 2:30am
2011-11-22 01:25:56 UTC <luite> 2:25am yes
2011-11-22 01:26:16 UTC <byorgey> well, I'm off to watch a movie
2011-11-22 01:26:29 UTC <luite> have fun :)
2011-11-22 02:28:57 UTC <tgeeky> luite: one thing that i've noticed using Wolfram
2011-11-22 02:29:03 UTC <tgeeky> that I hope to avoid
2011-11-22 02:29:44 UTC <tgeeky> avoid a situation where the user has to copy/paste data in order to get an expected result
2011-11-22 02:30:06 UTC <tgeeky> I noticed that even though I could type in equations for cyclotomic polynomials and get graphs, and root structures.
2011-11-22 02:30:23 UTC <tgeeky> when you actually ask for that polynomial ( Cyclotomic[n,z] )
2011-11-22 02:30:41 UTC <tgeeky> it will give you the result (it translates it to a polynomial), but then it stops.
2011-11-22 02:30:52 UTC <tgeeky> and doesn't show the other stuff
2011-11-22 02:35:19 UTC <luite> everything is just haskell, so you can just give it a name and refer to it later :0
2011-11-22 03:20:29 UTC <byorgey> yeah, comparing to Wolfram is a red herring since it's basically a crippled Mathematica =P
2011-11-22 03:42:02 UTC <luite> but you can use Alpha queries directly in Mathematica 8 workbooks now, to use its "do what I mean" functionality :)
2011-11-22 04:22:28 UTC <byorgey> luite: ah, neat =)
2011-11-22 16:45:53 UTC <luite> http://hdiff.luite.com/tmp/top.png http://hdiff.luite.com/tmp/bottom.png <- I've emsmallened the top ui / header, but maed it a fixed position element so it stays in view if you scroll, do you think this would be acceptable?
2011-11-22 17:20:17 UTC <byorgey> luite: looks great to me!
2011-11-22 17:20:48 UTC <byorgey> luite: I like small fixed position headers, quite useful not to have to scroll back up to the top of the page to do something
2011-11-22 17:21:04 UTC <byorgey> wordpress.com does it too
2011-11-22 17:30:27 UTC <byorgey> luite: so I'm going to be teaching an introductory Haskell class starting in January
2011-11-22 17:30:53 UTC <byorgey> luite: all I'm saying is that if Wolfgang was live by then it would be super-awesome.
2011-11-22 17:31:00 UTC <byorgey> luite: no pressure though. =)
2011-11-22 17:31:09 UTC <byorgey> well, OK, maybe just a TINY bit of pressure
2011-11-22 17:39:48 UTC <luite> haha hmm
2011-11-22 17:40:38 UTC <luite> byorgey: it's mainly for the login / page menu's
2011-11-22 17:40:59 UTC <luite> but I think it's nice to have the other links, to encourage people to browse the site :)
2011-11-22 17:41:35 UTC <luite> I hope to have the user interface thingies that control the document itself in those tabs on the sides (that are also fixed)
2011-11-22 17:41:35 UTC <byorgey> luite: yes, agreed
2011-11-22 17:41:42 UTC <byorgey> ah, ok
2011-11-22 17:41:57 UTC <luite> but it's easy to move them around if it doesn't work
2011-11-22 17:42:13 UTC <byorgey> I think having those on the side is good
2011-11-22 17:42:21 UTC <luite> at the moment I only have a "re-evaluate all" button planned, but I'm sure there will be more in the future
2011-11-22 17:43:24 UTC <byorgey> some suggestions for other buttons: "ask Oleg", "fix errors", "format as PDF and submit to Haskell Symposium"
2011-11-22 17:43:47 UTC <luite> format as pdf will probably be in the page menu
2011-11-22 17:44:09 UTC <byorgey> nono but this button will ALSO cause the formatted PDF to be submitted to the Haskell Symposium
2011-11-22 17:44:32 UTC <luite> right, that's a strictly better button
2011-11-22 17:45:02 UTC <byorgey> haha you should totally have buttons like this but only on April 1 =)
2011-11-22 17:46:01 UTC <luite> more seriously though, some reddit, g+ buttons would be nice
2011-11-22 17:47:15 UTC <luite> hmm, 28" of new snow in whistler
2011-11-22 17:47:43 UTC <byorgey> sure, the usual bevy of "share this" buttons
2011-11-22 17:47:45 UTC <tgeeky> put an "ask wolfram alpha" button that doesn't actually translate the program to something suitable
2011-11-22 17:47:55 UTC <tgeeky> to "demonstrate" how inferior wolfram alpha is
2011-11-22 17:47:59 UTC <byorgey> hehe
2011-11-22 17:49:10 UTC <luite> byorgey: yeah I don't really like those buttons though, they're kind of ugly, but could be important to get some visitors
2011-11-22 17:49:17 UTC <luite> I'll probably hide them in a menu
2011-11-22 17:49:26 UTC <tgeeky> luite: i really don't like them, especially because I don't use any of those things
2011-11-22 17:49:58 UTC <byorgey> actually I don't think you're going to have to work very hard to get visitors
2011-11-22 17:50:25 UTC <byorgey> yeah, just add a "Share" menu in the top bar
2011-11-22 17:50:29 UTC <luite> bah I have been working on it for a long time now and if I check the logs, the only visitor is me ;)
2011-11-22 17:50:58 UTC <tgeeky> you are practicing whatever the opposite of 'agile' programming is
2011-11-22 17:51:01 UTC <byorgey> haha, well, I can assure you that is NOT because of the lack of reddit buttons.
2011-11-22 17:51:53 UTC <tgeeky> I would paste the antonyms of 'agile' but they aren't very nice
2011-11-22 17:52:21 UTC <tgeeky> haha
2011-11-22 17:52:21 UTC <luite> brittle, clumsy, stiff
2011-11-22 17:52:23 UTC <luite> sounds good
2011-11-22 17:52:29 UTC <tgeeky> the next group are worse
2011-11-22 17:52:35 UTC <tgeeky> delicate, feeble, inept, stupid, weak
2011-11-22 17:52:44 UTC <tgeeky> disintrested, idle, indifferent, lazy, quiescent, quiet
2011-11-22 17:52:45 UTC <luite> ah right, those are more appropriate
2011-11-22 17:53:00 UTC <tgeeky> inept sounds like my haskell style
2011-11-22 17:53:24 UTC <luite> no it's mine! mine is inepter than yours
2011-11-22 17:53:25 UTC <luite> !
2011-11-22 17:53:48 UTC <luite> (like the "I wrote the worst lzw decoder" discussion in -blah recently)
2011-11-22 17:54:20 UTC <tgeeky> sometimes it can take a great deal of skill to produce a solution which *works*, but does so in the worst way possible
2011-11-22 17:54:48 UTC <luite> can you prove that there are no worse ways?
2011-11-22 17:55:03 UTC <tgeeky> perhaps.
2011-11-22 17:55:25 UTC <tgeeky> the only way to make the code run slower is to insert 'wait 1000' statements in your code
2011-11-22 17:56:17 UTC <tgeeky> "We have demonstrated that it is possible to perform lzw compression in O(n^n^2n) time"
2011-11-22 18:00:14 UTC <luite> like the "Sorting the slow way" paper? :)
2011-11-24 00:39:47 UTC <luite> http://hdiff.luite.com/tmp/todo.txt
2011-11-24 03:39:51 UTC <byorgey> luite: =D
2011-11-24 03:39:57 UTC <byorgey> my favorite: "- convince people to write a full CAS in haskell"
2011-11-24 03:40:27 UTC <tgeeky> yes.
2011-11-24 03:40:52 UTC <tgeeky> that message is missing something when presented in a .txt file
2011-11-24 03:41:04 UTC <tgeeky> the differences in cost
2011-11-24 03:41:17 UTC <tgeeky> but I like it
2011-11-24 03:41:33 UTC <tgeeky> byorgey: but seriously about SPJ? any thoughts on that fact?
2011-11-24 03:41:37 UTC <tgeeky> he is one of the best speakers I've ever seen
2011-11-24 03:41:52 UTC <tgeeky> does he do that in 1-on-1 as well?
2011-11-24 03:41:56 UTC <byorgey> tgeeky: no, I don't know, he just closes his eyes when he's concentrating
2011-11-24 03:42:00 UTC <byorgey> yes, he does
2011-11-24 03:49:20 UTC <luite> tgeeky: would it be better as a slide show with comic sans?
2011-11-24 03:50:33 UTC <luite> I found a math book that uses comic sans btw, earlier this week :)
2011-11-24 03:50:45 UTC <luite> only on a few pages, sadly
2011-11-24 04:02:17 UTC <luite> that one is a 50 point exercise :)
2011-11-24 04:09:26 UTC <tgeeky> haha
2011-11-24 04:09:30 UTC <tgeeky> not in particular
2011-11-24 04:09:47 UTC <tgeeky> I think anywhere you have comic sans, you'd be better off using some sort of animated "squiggly" "wiggly" typeface
2011-11-24 04:10:21 UTC <luite> hehe that doesn't work in books, although this book is actually a pdf file, so I guess it could :)
2011-11-24 04:12:23 UTC <luite> I really hope that the new constraint solver in ghc 7.4 will speed up things a little
2011-11-24 04:12:54 UTC <luite> otherwise I can try to overclock the server
2011-11-24 04:13:38 UTC <tgeeky> i'm thinking about checking it out soon
2011-11-24 04:13:50 UTC <tgeeky> i'm still doing work with streams
2011-11-24 04:14:42 UTC <luite> I'm working on the permissions dialog for wolfgang :)
2011-11-24 04:15:11 UTC <luite> where you can lock pages (as owner or administrator) and allow others to edit your pages (or view them if they're private)
2011-11-24 04:17:22 UTC <tgeeky> are you working in Whistler?
2011-11-24 04:17:30 UTC <tgeeky> or you 'off the grid'?
2011-11-24 04:17:57 UTC <luite> (First I thought I would only do this later on, but this way, most of the core functionality can be a regular page too (for example an instance for Diagrams and other low level stuff))
2011-11-24 04:18:25 UTC <luite> they can just be locked pages, editable by admins
2011-11-24 04:18:38 UTC <luite> no special handling needed for the compile daemon etc
2011-11-24 04:19:10 UTC <luite> no not in whistler yet
2011-11-24 04:19:15 UTC <luite> from 15-22 dec
2011-11-24 04:19:58 UTC <luite> I'll try to work on it there as well
2011-11-24 04:20:13 UTC <luite> the lifts close at around 15:00
2011-11-24 04:21:18 UTC <luite> so then I can quickly grab a steak at the longhorn bar and then to the apartment for coding
2011-11-24 04:23:11 UTC <tgeeky> hehe
2011-11-24 04:23:46 UTC <luite> (not that I plan to eat there every day, I just wanted to say some more windows code names ;p )
2011-11-24 04:26:03 UTC <tgeeky> damn. I was somehow expecting that this video would introduce something new (and maybe 7.4) related
2011-11-24 04:26:27 UTC <tgeeky> and because he's so smooth, i'm 30 minute into and I realize that it's "not intended" for me
2011-11-24 04:26:54 UTC <luite> snow looks good with 131cm (51") fresh in the past week :)
2011-11-24 04:27:26 UTC <luite> with another 80cm expected this weekend
2011-11-24 04:27:27 UTC <tgeeky> excellent, I guess. The main thing I know about snow is that it rarely happens here.
2011-11-24 04:28:29 UTC <luite> hehe
2011-11-24 04:28:47 UTC <luite> it sometimes snows here, but since there are no mountains, it's not too useful
2011-11-24 04:28:59 UTC <tgeeky> indeed.
2011-11-24 04:29:08 UTC <tgeeky> fun to drive on, and fun to laugh at other people (fail) to drive on
2011-11-24 04:29:13 UTC <luite> I still like snow though, it makes everyhing so pretty :p
2011-11-24 04:29:23 UTC <tgeeky> i mainly like the silence it brings
2011-11-24 04:30:07 UTC <tgeeky> you know... it's an acoustic sink so it's really quiet and 'crisp' sounding
2011-11-24 04:30:44 UTC <luite> hmm I want to move closer to the mountains :)
2011-11-24 04:34:51 UTC <luite> in the alps the snow is terrible though, most resorts have to delay their opening
2011-11-24 04:40:26 UTC <tgeeky> if haskell adopts a mascot
2011-11-24 04:40:34 UTC <tgeeky> it should just be the reddit alien with glasses
2011-11-24 04:40:38 UTC <tgeeky> and a lambda shirt
2011-11-24 04:44:56 UTC <luite> why a reddit mascot?
2011-11-24 04:54:24 UTC <tgeeky> generic, cute, already accepted
2011-11-24 04:55:54 UTC <luite> not very creative :(
2011-11-24 04:56:24 UTC <tgeeky> well http://perl6.org/ <-- that is creative
2011-11-24 04:56:38 UTC <tgeeky> i know
2011-11-24 04:57:10 UTC <tgeeky> we can have byorgey whip up an mc-escher-like lambda tiling
2011-11-24 04:57:55 UTC <tgeeky> and put them on the side of a fish
2011-11-24 04:58:07 UTC <luite> you probably have a samsung ;p ( http://www.youtube.com/watch?v=6h5JSojJN3Y )
2011-11-24 04:58:11 UTC <tgeeky> http://upload.wikimedia.org/wikipedia/commons/e/e4/Melanogrammus_aeglefinus.jpg
2011-11-24 04:59:36 UTC <tgeeky> hehe
2011-11-24 05:01:09 UTC <tgeeky> http://i.imgur.com/Mdaof.jpg
2011-11-24 05:01:16 UTC <tgeeky> that's...
2011-11-24 06:49:11 UTC <luite> well that seems to work http://hdiff.luite.com/tmp/permissions.png
2011-11-24 06:50:40 UTC <luite> unfortunately this wasn't on my todo so I can't even remove a line :(
2011-11-24 16:29:55 UTC <byorgey> luite: add it to your todo list and then delete it
2011-11-24 16:40:02 UTC <luite> I started working on an actual todo item instead :(
2011-11-24 16:40:04 UTC <luite> err
2011-11-24 16:40:08 UTC <luite> :)
2011-11-24 16:40:54 UTC <luite> although I've already found another bug so the list is not getting smaller
2011-11-24 16:41:13 UTC <byorgey> byorgey's Law of Todo Lists: todo lists never get smaller
2011-11-24 16:41:36 UTC <luite> do they double in size every 18 months? ;)
2011-11-24 16:41:53 UTC <byorgey> no, that would be Moose's Law
2011-11-24 16:42:16 UTC <byorgey> of which byorgey's law is a simple corollary
2011-11-24 16:42:45 UTC <luite> A MÃ¸Ã¸se once bit my sister
2011-11-24 16:43:39 UTC <byorgey> hehehe
2011-11-24 16:49:09 UTC <byorgey> Mynd you, mÃ¸Ã¸se bites Kan be pretty nasti...
2011-11-24 18:27:21 UTC <tgeeky> wee
2011-11-24 18:27:37 UTC <tgeeky> ACTION using Math.OEIS to verify the correctness of stream definitions
2011-11-24 18:27:42 UTC <byorgey> =D
2011-11-24 18:48:12 UTC <tgeeky> this means I'm going to publish my first module soon!! :O
2011-11-24 18:49:20 UTC <byorgey> =O !
2011-11-24 18:51:38 UTC <tgeeky> byorgey: so, I emailed Hutton (and he forwarded it to his grad student)
2011-11-24 18:51:42 UTC <tgeeky> about his streams paper
2011-11-24 18:52:11 UTC <tgeeky> i brought up two examples which don't fit with his scheme of contractive schemes
2011-11-24 18:52:16 UTC <tgeeky> but nonetheless seem like streams of some type to me
2011-11-24 18:52:48 UTC <byorgey> nice
2011-11-24 18:52:57 UTC <tgeeky> I will post them and ask what you think
2011-11-24 18:53:00 UTC <tgeeky> hpaste, I guess
2011-11-24 18:53:02 UTC <tgeeky> one sec :)
2011-11-24 18:58:11 UTC <tgeeky> oh yeah, just saw this ad
2011-11-24 18:58:38 UTC <tgeeky> There is a *live* TV show for 1 hour where totally unprotected divers are going to dive and swim with great white sharks
2011-11-24 18:58:43 UTC <tgeeky> to demonstrate that they aren't killing monsters
2011-11-24 18:58:48 UTC <tgeeky> this Friday
2011-11-24 18:58:56 UTC <byorgey> and they are all going to die.
2011-11-24 18:58:59 UTC <tgeeky> hhaha
2011-11-24 18:59:09 UTC <tgeeky> you wouldn't even find me on that boat above the divers
2011-11-24 19:00:13 UTC <tgeeky> byorgey: http://hpaste.org/54462
2011-11-24 19:00:31 UTC <tgeeky> note take 30 $ fromOEIS ".."
2011-11-24 19:00:47 UTC <tgeeky> but then, for the apollonian one
2011-11-24 19:01:07 UTC <tgeeky> well
2011-11-24 19:01:12 UTC <tgeeky> clearly I've altered (and messed up) the definition
2011-11-24 19:01:41 UTC <tgeeky> it's off-by-one. but clearly, there are two options for the number after 3
2011-11-24 19:01:47 UTC <tgeeky> (-1, and 15)
2011-11-24 19:02:20 UTC <tgeeky> but the whole premise of his paper is that if you know the first (n) elements of two streams, then the (n+1) element will be the same.
2011-11-24 19:02:38 UTC <tgeeky> so either the apollonian gaskets are "bi-streams"? or they aren't streams at all?
2011-11-24 19:05:48 UTC <byorgey> tgeeky: they are not streams, they are binary trees
2011-11-24 19:06:07 UTC <byorgey> oh wait, not really
2011-11-24 19:06:09 UTC <tgeeky> the one with a cycle in it is a binary tree?
2011-11-24 19:06:22 UTC <tgeeky> fundamentally, they are orbits in a group
2011-11-24 19:06:51 UTC <byorgey> yeah, you could arrange it as a binary tree but you'd get lots of duplicates
2011-11-24 19:06:52 UTC <tgeeky> byorgey: the real difficult case is the family of "near-D3 gaskets"
2011-11-24 19:07:06 UTC <byorgey> it is... well, it's an Apollonian graph =)
2011-11-24 19:09:21 UTC <tgeeky> byorgey: at the bottom is my best (but still failed) attempt
2011-11-24 19:09:22 UTC <tgeeky> http://hpaste.org/54462
2011-11-24 19:09:29 UTC <tgeeky> of defining the near-D3 table
2011-11-24 19:10:22 UTC <tgeeky> which was trying to (again, evidently incorrectly) think of length-8 stream pairs
2011-11-24 19:10:26 UTC <tgeeky> because coding it this way worked in mathematica
2011-11-24 19:10:33 UTC <tgeeky> but it should be:
2011-11-24 19:11:16 UTC <tgeeky> ([-1, 2, 2, 3, ...] ++ [-4, 8, 9, 9, ...])  <|| ([-15,32,32,33] ++ [-56, 120, 121, 121])
2011-11-24 19:13:11 UTC <tgeeky> byorgey: anyway, enough of that nonsense. If I have, say, 4 functions that "should" generate the same stream, and I want to test them all in one statement, I could use zipWithN (==), right?
2011-11-24 19:13:28 UTC <tgeeky> and try to reduce it to True
2011-11-24 19:14:12 UTC <byorgey> tgeeky: no, because (==) only takes two arguments
2011-11-24 19:14:57 UTC <tgeeky> oh. of course.
2011-11-24 19:15:18 UTC <tgeeky> it doesn't even typecheck!
2011-11-24 19:15:24 UTC <byorgey> nope =)
2011-11-24 19:15:39 UTC <tgeeky> i could write a custom 4-way (==) function
2011-11-24 19:16:02 UTC <byorgey> or you could write a function allEqual :: Eq a => [a] -> Bool
2011-11-24 19:16:06 UTC <tgeeky> i could use tuple sections
2011-11-24 19:16:31 UTC <byorgey> and then first combine the strams into one stream of lists with  foldr (zipWith (:)) (repeat [])
2011-11-24 19:16:39 UTC <byorgey> then  map allEqual
2011-11-24 19:57:16 UTC <luite> hmm gmail has been terrible here lately, lots of timeouts and connection errors, does anyone else have problems?
2011-11-24 20:13:31 UTC <tgeeky> nope
2011-11-24 20:13:45 UTC <tgeeky> my internet connection has been problematic, but not gmail specifically
2011-11-24 20:20:36 UTC <luite> hmm my internet connection is mostly ok, although my isp had some problems with one of their routers recently
2011-11-25 04:43:52 UTC <luite> morning tgeeky :)
2011-11-25 05:07:05 UTC <tgeeky> ello
2011-11-25 05:20:20 UTC <luite> bah annoying javascript exceptions, why am I using undocumented unreleased scripts
2011-11-25 05:50:04 UTC <luite> hmm 46 included javascripts :)
2011-11-25 07:11:21 UTC <tgeeky> oh that's cute
2011-11-25 07:12:17 UTC <tgeeky> luite: check out this goofy function
2011-11-25 07:12:18 UTC <tgeeky> http://tinyurl.com/d7p2x2f
2011-11-25 07:12:47 UTC <tgeeky> the middle coefficients of the polymonial have an interesting convergage
2011-11-25 07:12:49 UTC <tgeeky> convergance*
2011-11-25 07:12:52 UTC <luite> err, what kind of redirect is that?
2011-11-25 07:12:57 UTC <tgeeky> wolfram alpha
2011-11-25 07:13:20 UTC <tgeeky> but the real trick on what's happening
2011-11-25 07:13:25 UTC <tgeeky> is the asymtopic behavior of the real solutions
2011-11-25 07:13:42 UTC <luite> doesn't seem to work, wrong url?
2011-11-25 07:13:47 UTC <tgeeky> it's converging (slowly) to roots at (1/2) and (2/1)
2011-11-25 07:13:57 UTC <tgeeky> oh
2011-11-25 07:13:58 UTC <tgeeky> lol
2011-11-25 07:14:18 UTC <tgeeky> http://tinyurl.com/7vrhcx2
2011-11-25 07:14:19 UTC <tgeeky> there we go
2011-11-25 07:14:39 UTC <tgeeky> the equation comes from solving electrostatics on unit n-spheres
2011-11-25 07:15:24 UTC <tgeeky> try smaller d (=2), (=4)
2011-11-25 07:16:03 UTC <tgeeky> (=2) is the fibionacci convergants
2011-11-25 07:16:16 UTC <tgeeky> (=4) is the padovan sequence
2011-11-25 07:19:52 UTC <luite> hmm, where's the fibonacci for d=2?
2011-11-25 07:20:12 UTC <tgeeky> (1/2)*(3-sqrt(5))
2011-11-25 07:21:15 UTC <tgeeky> well that's not right.
2011-11-25 07:21:16 UTC <tgeeky> what am i missing
2011-11-25 07:21:32 UTC <luite> hm right it's shifted
2011-11-25 07:21:37 UTC <tgeeky> oh yeah
2011-11-25 07:21:43 UTC <tgeeky> it's approaching from 2
2011-11-25 07:22:38 UTC <tgeeky> (4) has the 'plastic constant'
2011-11-25 07:23:03 UTC <tgeeky> also shifted
2011-11-25 07:23:33 UTC <tgeeky> the really bizzare thing (to me) is the coeffs of the inner terms of the large polynomials
2011-11-25 07:25:49 UTC <luite> why? is it a generating series for something, or a known sequence?
2011-11-25 07:26:16 UTC <tgeeky> no, it's a geometric thing
2011-11-25 07:26:21 UTC <tgeeky> i mean, if it is - i'm not aware
2011-11-25 07:26:39 UTC <tgeeky> luite: http://www.google.com/url?sa=t&rct=j&q=a%20fascinating%20polynomial%20sequence%20arising&source=web&cd=1&ved=0CCAQFjAA&url=http%3A%2F%2Farxiv.org%2Fabs%2F1103.3086&ei=KUPPTsLbK4bZgQeq26TVDQ&usg=AFQjCNFrdPAJDqbpsxgDaIjrGiPUdf0aAw
2011-11-25 07:26:45 UTC <tgeeky> http://arxiv.org/abs/1103.3086
2011-11-25 07:28:41 UTC <luite> ah there's that zero's picture again :)
2011-11-25 07:29:09 UTC <tgeeky> yeah
2011-11-25 07:29:18 UTC <tgeeky> i'm guessing the fine structure that shows up
2011-11-25 07:29:21 UTC <tgeeky> comes from the inversion (in d)
2011-11-25 07:29:24 UTC <tgeeky> try d = -30, -42
2011-11-25 07:29:33 UTC <tgeeky> or something smaller
2011-11-25 07:32:22 UTC <tgeeky> anyway, that's my mathematical curiousity treat for this evening :)
2011-11-25 07:32:33 UTC <luite> hehe tnx, morning tough
2011-11-25 07:32:36 UTC <luite> +h
2011-11-25 07:32:38 UTC <luite> 8:32am
2011-11-25 07:32:46 UTC <tgeeky> yeah :)
2011-11-25 07:32:49 UTC <tgeeky> the d = 8 case
2011-11-25 07:32:59 UTC <tgeeky> is actually the "projector" for lack of a better term
2011-11-25 07:33:10 UTC <tgeeky> that is, there are roots with identical angles but different moduli
2011-11-25 07:33:28 UTC <tgeeky> actually
2011-11-25 07:33:46 UTC <tgeeky> every single root (except the really shallow angle one)
2011-11-25 07:34:02 UTC <tgeeky> has three points on it
2011-11-25 07:36:24 UTC <luite> hm cute, is 8 the only one for which it almost works? :p
2011-11-25 07:36:45 UTC <tgeeky> 18 is the other "exception"
2011-11-25 07:36:52 UTC <luite> papers should really include wolfram alpha links :p
2011-11-25 07:37:02 UTC <tgeeky> screw that. wolfgang haskell links!
2011-11-25 07:37:21 UTC <tgeeky> harder to tell with 12, but it looks like it
2011-11-25 07:37:43 UTC <luite> yeah once someone writes a proper symbolic manipulation lib for haskell :)
2011-11-25 07:42:00 UTC <tgeeky> luite: now
2011-11-25 07:42:02 UTC <tgeeky> for the big finish
2011-11-25 07:42:15 UTC <tgeeky> ([(z-1)^d - z - 1]*z^(d-1) + (z - 1)^d)=0 where d = 12, z = phi^2 - phi - 1
2011-11-25 07:42:16 UTC <tgeeky> try that
2011-11-25 07:42:35 UTC <tgeeky> (where the last term is the supertrace of the generators of the apollonian group)
2011-11-25 07:42:46 UTC <luite> lol
2011-11-25 07:42:56 UTC <tgeeky> as well as just some number in the phi number system
2011-11-25 07:43:17 UTC <luite> there has already been a discussion on implementing mathematica in haskell
2011-11-25 07:43:25 UTC <tgeeky> and?
2011-11-25 07:43:39 UTC <tgeeky> I just want/need it to explore number systems that aren't the Reals/Complexes
2011-11-25 07:43:48 UTC <tgeeky> as well as fractal systems in general
2011-11-25 07:44:14 UTC <luite> with jon d harrop claiming to have written a "mathematica implementation" in 4 days in ocaml, as one of his first ocaml programs, which he sold to wolfram for $4500 and a few free mathematica copies
2011-11-25 07:44:31 UTC <tgeeky> pics or didn't happen?
2011-11-25 07:45:03 UTC <luite> he's a well-known troll
2011-11-25 07:45:28 UTC <tgeeky> if you could do that
2011-11-25 07:45:33 UTC <tgeeky> you wouldn't get a check, you'd get a job
2011-11-25 07:46:43 UTC <tgeeky> Wolfram would say something like: How much are you making? We'll give you (wolframalpha.com - random number between 5 and 10) times that much.
2011-11-25 07:46:52 UTC <luite> probably better to go immediately for venture capital
2011-11-25 07:47:27 UTC <tgeeky> perhaps. if you were in it for the science (and not the money), that wouldn't seem like the surest route
2011-11-25 07:49:12 UTC <tgeeky> but what do I know
2011-11-25 07:49:20 UTC <luite> dunno, if you write mathematica in 4 days, then write alpha in 2 more, all matlab and R features in a week, and sell everything ;p
2011-11-25 07:51:54 UTC <tgeeky> hehe. I'm so terrible awed about people who are *so clearly* not bullshitting (Oleg...) that I find it hard to even pay attention to bullshitters
2011-11-25 07:52:00 UTC <luite> "NDA, although I did most of the reverse engineering independently beforehand.
2011-11-25 07:52:03 UTC <luite> They use lots of nifty tricks (basically any trick that you can do easily in
2011-11-25 07:52:05 UTC <luite> C) but there were plenty of other tricks they didn't try because they are far
2011-11-25 07:52:08 UTC <luite> from obvious in C."
2011-11-25 07:52:17 UTC <luite> hehe he reverse engineered all mathematica term rewriting tricks beforehand...
2011-11-25 07:52:40 UTC <luite> but he can't show, because of an NDA :)
2011-11-25 07:55:16 UTC <tgeeky> hehe. bedtime.
2011-11-25 07:55:21 UTC <luite> nifhr
2011-11-25 07:55:22 UTC <luite> night
2011-11-25 07:55:26 UTC <tgeeky> you better not make me sign an NDA to use wolfgang
2011-11-25 07:55:44 UTC <luite> no I'm going to sell it to Wolfram before anyone can use it
2011-11-25 07:55:57 UTC <tgeeky> but.. but.. then..
2011-11-25 07:56:01 UTC <tgeeky> *head explodes*
2011-11-25 15:57:57 UTC <ClaudiusMaximus> some nice diagrams in this thread, want to do something similar.. http://new-supercollider-mailing-lists-forums-use-these.2681727.n2.nabble.com/plotting-patterns-td7029715.html
2011-11-25 16:03:53 UTC <byorgey> nice
2011-11-25 16:04:47 UTC <ClaudiusMaximus> but so many projects, so little time...
2011-11-25 16:05:00 UTC <byorgey> hehe
2011-11-25 16:27:36 UTC <luite> hmm, how do you guys think I should handle package versions for wolfgang? obviously many will become outdated pretty quickly... but it's not good to break people's pages
2011-11-25 16:28:05 UTC <byorgey> oh, very interesting question
2011-11-25 16:31:09 UTC <byorgey> I don't know that there's really anything reasonable you can do other than just break people's pages
2011-11-25 16:31:15 UTC <luite> it's been bugging me for a while now, and I don't really know a good solution. it might affect the next thing i need to write, the daemon that compiles the pages in the background
2011-11-25 16:31:49 UTC <byorgey> at first I thought of allowing pages to have an associated list of dependencies
2011-11-25 16:32:03 UTC <byorgey> but then you'd have to maintain a separate cabal-dev sandbox for every page or something like that
2011-11-25 16:32:17 UTC <luite> yeah that's not efficient enough
2011-11-25 16:32:21 UTC <byorgey> right
2011-11-25 16:32:43 UTC <byorgey> but trying to maintain a bunch of different versions of everything in one package DB will just lead to conflicts
2011-11-25 16:34:02 UTC <luite> I can have a few standard configs, where a page will user the latest config when first saved. when a page is updated later, and there's a newer config available, the user will be prompted to use that one
2011-11-25 16:34:31 UTC <luite> where one config is just one set of installed pacakge versions, minor upgrades and package additions can be possible within one config
2011-11-25 16:35:40 UTC <luite> problem is though that there can be dependencies between pages, if your version runs, say, api 12.0, and the other still 11.1, then itm ight not load correctly
2011-11-25 16:36:11 UTC <luite> or worse: if some lower level page gets updated to 12
2011-11-25 16:36:20 UTC <fryguybob> This is a problem I would like to explore in general, some sort of automated or assisted code changes for API changes that gives some sort of correctness guarantee in situations where it can.
2011-11-25 16:37:02 UTC <luite> (problem is that every config takes a large amount of RAM, the current wolfgang server has 8GB, but with a few configs active it might need 16 or 24GB
2011-11-25 16:38:47 UTC <luite> going to eat now, but tell me if you have any suggestions :)
2011-11-25 17:36:49 UTC <tgeeky_> luite: well, the only thing I can think of
2011-11-25 17:36:56 UTC <tgeeky_> is preforming the "brainless" attempts at un-breaking something
2011-11-25 17:37:10 UTC <tgeeky_> that is, auto-incrementing package versions in cabal files
2011-11-25 17:41:11 UTC <luite> but how will that help for wiki pages?
2011-11-25 17:42:07 UTC <tgeeky_> I'm not sure.
2011-11-25 17:42:41 UTC <luite> say wolfgang starts with diagrams 0.4 and in a few months version 0.5 with awesome new features, but some api incompatibilities, is released, most users will want to upgrade
2011-11-25 17:42:42 UTC <tgeeky_> 'standard config' includes what?
2011-11-25 17:43:12 UTC <luite> complete set of packages
2011-11-25 17:43:30 UTC <luite> a single version of each
2011-11-25 17:44:02 UTC <tgeeky_> including a specific version of ghc?
2011-11-25 17:45:07 UTC <luite> yes
2011-11-25 17:45:25 UTC <tgeeky_> anyway, if one must manually "add" the configs (that is, a user must specify the config), then just run a computer program to "try" and upgrade enough to generate a new config
2011-11-25 17:45:42 UTC <tgeeky_> that is, ignore if diagrams has API inconsistencies
2011-11-25 17:45:47 UTC <tgeeky_> and just try to get it to compile automatically
2011-11-25 17:45:57 UTC <tgeeky_> then, label the configuration as 'exerminetal' or something
2011-11-25 17:46:05 UTC <luite> hmm
2011-11-25 17:46:36 UTC <luite> exerimental
2011-11-25 17:46:40 UTC <luite> err
2011-11-25 17:46:42 UTC <tgeeky_> hehe
2011-11-25 17:46:43 UTC <tgeeky_> experimental
2011-11-25 17:46:44 UTC <luite> exermineal
2011-11-25 17:46:49 UTC <luite> :p
2011-11-25 17:47:12 UTC <byorgey> exterminatal
2011-11-25 17:47:32 UTC <tgeeky_> i presumed (incorecctly) that you had already shot the moon and got the ability to let users interactively ask for a hackage package to be exposed to them
2011-11-25 17:47:35 UTC <luite> well I thought this: if a page is created with config 11, and any of its dependencies is updated to config 12, then bump it and mark it experimental
2011-11-25 17:48:20 UTC <byorgey> ACTION thinks version 1 should just punt on the issu
2011-11-25 17:48:31 UTC <tgeeky_> me too
2011-11-25 17:48:43 UTC <tgeeky_> but I think that about everything he's doing, because I'm foaming at the mouth to see it/hack it
2011-11-25 17:48:51 UTC <luite> tgeeky_: unfortunately no, for two reasons
2011-11-25 17:49:04 UTC <luite> one is that for efficiency all packages need to be prelinked in memory
2011-11-25 17:49:14 UTC <byorgey> then a later version can include some configuration stuff etc. once you get som experience seeing how much of a problem it is, what people want, etc.
2011-11-25 17:49:50 UTC <luite> byorgey: yeah I'm certainly not going to write a lot of config/versioning code for the first version
2011-11-25 17:49:59 UTC <luite> but I do want to think about it a bit :)
2011-11-25 17:50:17 UTC <byorgey> fair enough =)
2011-11-25 17:52:11 UTC <tgeeky_> byorgey: re: supercollider
2011-11-25 17:52:21 UTC <tgeeky_> that is nice to want to have
2011-11-25 17:52:32 UTC <byorgey> tgeeky_: eh?
2011-11-25 17:52:41 UTC <luite> tgeeky_: some other alternative would be to disambiguate packages, let them export something like Diagrams.Zero.Four.Diagrams.TwoD
2011-11-25 17:53:18 UTC <tgeeky_> I will observe, even if it's unhelpful, that the graphing functionality for pretty complex (scientific) graphs is provied by the HROOT package (with ROOT backend)
2011-11-25 17:53:25 UTC <tgeeky_> byorgey: the supercollider link above
2011-11-25 17:54:54 UTC <luite> although that might not be better than just package imports
2011-11-25 17:54:59 UTC <byorgey> ah
2011-11-25 17:55:27 UTC <byorgey> tgeeky_: yeah, I'm not focusing on data visualization with diagrams
2011-11-25 17:55:53 UTC <byorgey> for that there is already HROOT, Chart, and hieroglyph
2011-11-25 18:00:50 UTC <luite> tgeeky_: hmm, I'm going to think about it, maybe it could automatically collect dependencies for every page and let the user choose some of the installed package versions with some dialog
2011-11-25 18:02:19 UTC <tgeeky_> byorgey: yeah. that said, ROOT is a pretty darn big library to pull in, but it is one of the foremost in the world
2011-11-25 18:05:27 UTC <byorgey> tgeeky_: indeed
2011-11-25 18:07:27 UTC <luite> ok I think I have something figured out that will not need extra code now and is probably reasonably upgrade proof :)
2011-11-25 18:07:52 UTC <byorgey> =O
2011-11-25 18:07:53 UTC <byorgey> nice
2011-11-25 18:08:32 UTC <luite> byorgey: well it would require lots of user interface work to actually manage versions
2011-11-25 18:08:48 UTC <byorgey> agreed. which is part of why I don't think you should bother. =)
2011-11-25 18:09:11 UTC <luite> yeah that's something for later
2011-11-25 18:09:35 UTC <luite> but the basic idea is just to compile each wiki page, with all its dependencies, in its own dir
2011-11-25 18:09:57 UTC <luite> and when package version management is required, to set -package flags at runtime
2011-11-25 18:10:47 UTC <luite> will require extra disk space, and more cpu power for recompilation, but that won't really be an issue unless people start to update thousands of pages every hour
2011-11-25 18:11:23 UTC <byorgey> makes sense
2011-11-25 18:11:24 UTC <luite> and otherwise I'll get jimmy wales to ask for donations for more servers
2011-11-25 18:11:29 UTC <byorgey> haha
2011-11-25 18:16:34 UTC <luite> "all its dependencies" just means other wiki pages btw, new cabal packages are not automatically installed or compiled
2011-11-25 18:16:53 UTC <luite> that would be too much trouble, at least for nwo
2011-11-25 18:16:54 UTC <luite> now
2011-11-26 06:49:15 UTC <luite> hmm
2011-11-26 06:53:19 UTC <tgeeky> hmm indeed
2011-11-26 06:53:52 UTC <tgeeky> byorgey: or luite: do you know any papers about Streams (or sequences in Stream form that are interesting) other than: Hinze Unique Fixed Point paper, Hinze Streams paper ...
2011-11-26 06:58:37 UTC <luite> nope I don't know anything about streams
2011-11-26 07:55:52 UTC <byorgey> tgeeky: J.J.M.M. Rutten, Behavioural Differential Equations: A Coinductive Calculus of Streams, Automata, and Power Series (2000)
2011-11-26 07:56:06 UTC <byorgey> tgeeky: also Rutten, Elements of Stream Calculus: (An Extensive Exercise in Coinduction)
2011-11-26 07:56:40 UTC <tgeeky> byorgey: thanks.
2011-11-26 07:57:02 UTC <tgeeky> I suppose this is turning into a merge and exemplification of the universe of streams
2011-11-26 07:57:22 UTC <tgeeky> I've got every example from the papers I listed, and the new G. Hutton one
2011-11-26 07:57:51 UTC <tgeeky> as well as some diffs and sums
2011-11-26 07:57:59 UTC <tgeeky> and OEIS references (and verification) for everything!
2011-11-26 08:00:27 UTC <tgeeky> ooh, this paper looks much richer
2011-11-26 08:06:07 UTC <tgeeky> and this one even more so lol
2011-11-26 08:16:00 UTC <luite> hmm
2011-11-26 18:51:55 UTC <tgeeky> luite: hmmmmmm
2011-11-26 18:54:03 UTC <luite> hmmmmmmmmmmmmmmmmmmmmmm
2011-11-26 22:19:52 UTC <tgeeky> ok, so for releasing my first hackage package
2011-11-26 22:20:12 UTC <tgeeky> i should run my code through what things to test: doctest (done), hlint (not done), ... ?
2011-11-27 02:44:22 UTC <tgeeky> byorgey: I hope you don't mind putting you 'in the loop' on that email
2011-11-27 02:44:27 UTC <tgeeky> I sent a few hours ago
2011-11-27 03:02:43 UTC <byorgey> tgeeky: no, I don't mind
2011-11-27 03:03:01 UTC <byorgey> tgeeky: though I don't really think I have anything to contribute to the discussion =)
2011-11-27 03:03:27 UTC <byorgey> tgeeky: re: releasing Hackage package, run it through  cabal check  and  cabal upload -c
2011-11-27 03:04:12 UTC <byorgey> tgeeky: also, do 'cabal sdist', copy the generated .tgz file somewhere else, unpack, and do 'cabal-dev install'  to make sure it builds properly
2011-11-27 03:04:28 UTC <byorgey> (if you don't have cabal-dev just cabal install it)
2011-11-27 03:04:45 UTC <byorgey> I mean, if you don't have cabal-dev you should 'cabal install cabal-dev'
2011-11-27 03:10:58 UTC <tgeeky> yes, I have it
2011-11-27 03:11:01 UTC <tgeeky> and thanks
2011-11-27 05:40:16 UTC <luite> bah
2011-11-27 05:40:25 UTC <luite> building websites is boring and tedious :(
2011-11-27 05:59:32 UTC <luite> http://hdiff.luite.com/tmp/resources1.png <- working on this, half done
2011-11-27 06:01:54 UTC <luite> needs some inputs to filter resources (show only resources that I have uploaded, where name contains xxx), and the part where you can preview the file, set attributes (locked/public) and view history, upload a new revision, and more cowbell
2011-11-27 15:10:05 UTC <byorgey> more cowbell haha =)
2011-11-27 17:18:20 UTC <luite> byorgey: what's your email address?
2011-11-27 17:21:44 UTC <byorgey> luite: byorgey at cis.upenn.edu
2011-11-27 17:22:34 UTC <luite> what's the cifference between cis and seas?
2011-11-27 17:22:39 UTC <luite> difference
2011-11-27 17:23:17 UTC <byorgey> luite: oh, they both go the same place
2011-11-27 17:23:37 UTC <byorgey> luite: SEAS = School of Engineering and Applied Science, CIS = Computer and Information Science
2011-11-27 17:23:44 UTC <luite> ah ok :)
2011-11-27 17:23:58 UTC <byorgey> CIS \subset SEAS
2011-11-27 17:24:00 UTC <luite> hmm, I hope I have the right addresses now for everyone
2011-11-27 17:24:34 UTC <byorgey> ACTION goes to stare at his inbox while repeatedly hitting 'refresh'
2011-11-27 17:29:13 UTC <luite> hehe I'm still typing a few things :p
2011-11-27 17:34:08 UTC <byorgey> refresh refresh refresh refresh
2011-11-27 17:34:20 UTC <byorgey> hehe, just kidding, I am patient
2011-11-27 17:35:00 UTC <luite> you may refresh now
2011-11-27 17:36:54 UTC <byorgey> oh! didn't realize it was for the Haskell committee. you know you can just email committee@haskell.org?
2011-11-27 17:37:06 UTC <luite> oh I didn't :(
2011-11-27 17:37:58 UTC <luite> ah I see it now on the wiki page, I would've seen it if it was a real link instead of committee [AT] haskel.org ;)
2011-11-27 17:40:58 UTC <byorgey> heh
2011-11-27 17:41:56 UTC <luite> http://haskellorg.wordpress.com/ I looked at this page instead of the wiki
2011-11-27 17:42:22 UTC <luite> although it's also mentioned there, at the bottom
2011-11-27 17:45:20 UTC <luite> they will of course deny my request now, for not properly following procedures
2011-11-27 17:46:47 UTC <byorgey> of course, that's pretty standard policy
2011-11-27 17:47:49 UTC <byorgey> luite: is this better? http://haskell.org/haskellwiki/Haskell.org_committee
2011-11-27 17:49:14 UTC <luite> hehe
2011-11-27 17:49:45 UTC <luite> I probably would've seen it already if I had opened the wiki page
2011-11-27 17:50:01 UTC <luite> since it's close to the list of members
2011-11-27 17:50:15 UTC <luite> but when I sent the mail, I only had the haskellorg.wordpress.com page open
2011-11-27 21:54:29 UTC <fryguybob> Ah, my diagram has no dashed lines in it because I haven't implemented dashed lines in diagrams-postscript yet.
2011-11-27 21:55:00 UTC <luite> hehe
2011-11-27 21:55:26 UTC <luite> does postscript have built-in dashing?
2011-11-27 21:56:18 UTC <fryguybob> I think so, I think it is basically identical to the interface Cairo gives.
2011-11-28 15:01:34 UTC <fryguybob> ACTION quietly pushes an update to diagrams-postscript that allows for more colors then just primary and secondary.
2011-11-28 15:16:05 UTC <byorgey> =)
2011-11-28 17:27:50 UTC <fryguybob> Now that I have more colors: http://i.imgur.com/Wz12W.png
2011-11-28 17:30:01 UTC <tgeeky> I'm colorblind, all I see is a mongoose.
2011-11-28 23:18:14 UTC <byorgey> fryguybob: cool, what's that?
2011-11-28 23:33:06 UTC <fryguybob> byorgey: Showing that 3-SAT is reducible to 3-colorable.
2011-11-29 00:50:32 UTC <fryguybob> byorgey: I also discovered that text encoding in postscript is quite weird.  I wanted to use Â¬ but that doesn't map to the expected symbol.
2011-11-29 02:25:43 UTC <byorgey> fryguybob: oh, boo
2011-11-29 02:30:38 UTC <fryguybob> byorgey: I'll have to sort it all out at some point, but it might be the case that anything beyond ASCII needs the glyph embedded.
2011-11-29 02:35:39 UTC <byorgey> I guess postscript was invented back in a time when the world of computers was more Anglo-centric
2011-11-29 02:48:09 UTC <fryguybob> Ah, ISOLatin1Encoding might help.
2011-11-29 03:09:50 UTC <fryguybob> I like how Adobe uses "Standard" when it means "non-standard"
2011-11-29 03:10:59 UTC <byorgey> hehehe
2011-11-29 03:11:33 UTC <byorgey> fryguybob: so are you using diagrams to illustrate your theory of computation HW or something?
2011-11-29 03:11:48 UTC <fryguybob> ISOLatin1Encoding does get me Â¬.
2011-11-29 03:11:54 UTC <fryguybob> byorgey: Indeed.
2011-11-29 03:13:12 UTC <byorgey> nice =)
2011-11-29 05:07:05 UTC <fryguybob> byorgey: My diagrams: http://hpaste.org/54637
2011-11-29 05:22:29 UTC <byorgey> oh drat, I can't try building it myself because I have diagrams-lib in pieces on the floor adding animation
2011-11-29 05:22:42 UTC <byorgey> this is why I really ought to use cabal-dev for development
2011-11-29 05:45:41 UTC <tgeeky> it's right in the name!
2011-11-29 05:46:02 UTC <tgeeky> though now that there's cabal-src, that argument is confusing
2011-11-29 08:24:39 UTC <luite> hmm
2011-11-29 08:25:17 UTC <luite> byorgey: you can still use cabal-dev for just the postscript backend, installing from hackage?
2011-11-29 12:23:18 UTC <fryguybob> luite: The postscript backend isn't on hackage yet.
2011-11-29 12:24:26 UTC <luite> fryguybob: oh I meant cabal-dev install the postscript backend (From the darcs or git repository) with cabal-dev, downloading all dependencies from hackage
2011-11-29 12:28:02 UTC <fryguybob> ah
2011-11-29 13:40:30 UTC <byorgey> luite: no, diagrams-postscript depends on the darcs versions of diagrams-core and diagrams-lib
2011-11-29 13:43:35 UTC <luite> oh right, but then you can just darcs checkout that branch, cabal-dev add-source ../path/to/checked/out/branch  followed by cabal-dev install
2011-11-29 18:33:47 UTC <luite> http://hdiff.luite.com/tmp/fp-mockup.png <- hmm, I've updated a mockup for a possible design of the wolfgang frontpage, to match the new fixed-position top-bar. not sure if I like it or not, comments?
2011-11-29 18:38:16 UTC <tgeeky> quite elegant
2011-11-29 18:38:28 UTC <tgeeky> pretty beautiful, in fact
2011-11-29 18:38:29 UTC <tgeeky> good job
2011-11-29 18:39:18 UTC <luite> oh sorry I forgot to add some pastes/edits by you :p
2011-11-29 18:39:38 UTC <tgeeky> hm?
2011-11-29 18:39:51 UTC <luite> oh I used byorgeys and fryguybobs names for some
2011-11-29 18:40:03 UTC <tgeeky> oh, I see
2011-11-29 18:40:21 UTC <tgeeky> using my username as a lorum ipsum :)
2011-11-29 18:40:33 UTC <luite> something like that
2011-11-29 18:40:37 UTC <tgeeky> really, it's very nice. I'm impressed.
2011-11-29 18:40:56 UTC <tgeeky> however, the positioning of the 'profile' part
2011-11-29 18:41:04 UTC <tgeeky> could probably be improved
2011-11-29 18:41:29 UTC <tgeeky> perhaps -- put an icon in the top bar, which has a pointer directly downward (to a profile bar)
2011-11-29 18:41:41 UTC <luite> the "page" menu is on the left of it in other pages
2011-11-29 18:42:38 UTC <luite> and the "search" placeholder is still the wrong color
2011-11-29 18:42:51 UTC <luite> because I didn't know how to change it in html
2011-11-29 18:43:27 UTC <luite> tgeeky: would you want another profile bar somewhere?
2011-11-29 18:43:37 UTC <tgeeky> yeah i'm drawing a mspaint mockup right now
2011-11-29 18:46:43 UTC <luite> hehe my weapon of choice is photoshops, need to have layers :)
2011-11-29 18:47:29 UTC <luite> I'm a bit worried about how it will look on windows though, thin fonts are risky, linux and mac usually render them ok
2011-11-29 18:52:10 UTC <tgeeky> luite: http://i.imgur.com/q5jKS.png
2011-11-29 18:52:28 UTC <luite> lol
2011-11-29 18:52:47 UTC <luite> perfectly executed ;p
2011-11-29 18:52:51 UTC <tgeeky> mspaint ftw
2011-11-29 18:53:02 UTC <tgeeky> something along those lines :o
2011-11-29 18:53:29 UTC <luite> hehe actully profile opens a (modal) popup that shows those things
2011-11-29 18:53:59 UTC <tgeeky> ok, but either way, you want people who (aren't) logged in, to do so - because it's a huge advantage for them in terms of functionality, I presume
2011-11-29 18:54:24 UTC <tgeeky> anyway
2011-11-29 18:54:26 UTC <luite> yeah they need it to edit pages (everyone can make pastes) :)
2011-11-29 18:54:29 UTC <tgeeky> i have to restart my computer to swap out some hard drives
2011-11-29 18:54:32 UTC <luite> ok
2011-11-29 18:54:38 UTC <tgeeky> bbiaf
2011-11-29 19:33:32 UTC <byorgey> luite: hahahahaha I love the "news" items =)
2011-11-29 19:34:11 UTC <luite> trying to mimic the wolfram|alpha launch news ;p
2011-11-29 19:37:14 UTC <luite> unfortunately I haven't yet reinvented science by writing a book
2011-11-29 19:38:34 UTC <luite> ugh it says crows instead of crowds
2011-11-29 19:38:41 UTC <byorgey> hehe
2011-11-29 19:38:55 UTC <byorgey> hah, I didn't notice that
2011-11-29 19:38:58 UTC <byorgey> I like it though
2011-11-29 19:39:02 UTC <byorgey> those crazy crows!
2011-11-29 19:39:10 UTC <byorgey> CAW CAW CAW
2011-11-29 19:43:56 UTC <byorgey> luite: perhaps you ought to include a bit on the front page stating what Wolfgang actually is
2011-11-29 19:44:04 UTC <luite> hmm, from other channels: it's not clear what's important in the right (grey) columns, change "get started" to a button
2011-11-29 19:44:29 UTC <byorgey> If I didn't already know it would be hard to figure it out just from looking at that page
2011-11-29 19:44:47 UTC <byorgey> something about pastes? or about image hosting perhaps?
2011-11-29 19:45:01 UTC <luite> yeah that's true, good point
2011-11-29 19:46:10 UTC <luite> I was hoping to do the really important things at the "Get started" and "Updates" locations, maybe that could/should go there
2011-11-29 19:47:48 UTC <byorgey> I am not going to click "Get started" until I at least have a vague idea what it is I'm getting started with
2011-11-29 19:48:05 UTC <luite> all those "click to read ..." can be replaced by "more..." links, leaving more space for actually saying something
2011-11-29 19:49:20 UTC <byorgey> indeed
2011-11-29 19:52:49 UTC <luite> k noted :) it's a bit annoying that everyone thinks I should change a few things, but those things are never the same ;p
2011-11-29 19:53:38 UTC <tgeeky> hehe. I note that, if you release, they might change a few things for you :)
2011-11-29 19:54:01 UTC <tgeeky> but I appreciate that one needs a nice v0.0.1 to be happy with it
2011-11-29 19:54:32 UTC <luite> hehe yeah I really shouldn't spend much more time stressing all little design details
2011-11-29 19:54:49 UTC <luite> but it's more fun to work on something if you know that it's going to look ok
2011-11-29 19:54:58 UTC <tgeeky> yes
2011-11-29 19:55:38 UTC <luite> I'm not quite happy with the footer in this page btw
2011-11-29 19:56:05 UTC <luite> it worked somewhat ok in the regular wiki document view, but with the two gray tones here, dunno
2011-11-29 19:59:05 UTC <luite> byorgey: btw I don't think a second subdomain is necessary after all if I load the risky stuff from an entirely different domain (I can use luite.com for that)
2011-11-29 19:59:27 UTC <byorgey> luite: ok
2011-11-29 19:59:39 UTC <luite> it would even be more secure, since it doesn't expose cookies that are (inadvertently?) set for the whole domain
2011-11-29 19:59:47 UTC <luite> dunno if loading from another domain is ok with the policy
2011-11-29 20:01:24 UTC <byorgey> I'm sure it would be fine.
2011-11-29 20:02:12 UTC <byorgey> As far as I can see the point of the policy is just to distinguish between projects that just want some web space and things that are actually provding a service, not to be picky about what exactly counts as content.
2011-11-29 20:05:27 UTC <luite> is there also a policy for email addresses at subdomains? could moderators@subdomain.haskell.org for example be used for an address for warning people about objectionable content?
2011-11-29 20:06:59 UTC <byorgey> I don't know.
2011-11-29 22:28:08 UTC <luite> woohoo, codemirror has support for line wrapping now!
2011-11-29 22:28:21 UTC <luite> (the editor I use for wolfgang)
2011-11-29 22:32:37 UTC <fryguybob> ACTION misreads wrapping as rapping.
2011-11-29 22:36:11 UTC <luite> oh great feature suggestion
2011-11-29 22:36:24 UTC <luite> should be possible with one of those free text-to-speech webservices
2011-11-29 22:37:59 UTC <luite> fryguybob: do you have suggestions for my frontpage design :)
2011-11-29 22:39:29 UTC <fryguybob> I think it looks nice.  There are always lots of people who say you *must* do X.  Then the innovative websites of the year are innovative by not doing X.
2011-11-29 22:39:58 UTC <luite> hehe
2011-11-29 22:40:30 UTC <fryguybob> I think the ability to tweak and refresh a look over time is more important then a static "best" look.
2011-11-29 22:41:10 UTC <fryguybob> That said there are certainly things that can look really bad.  I did not see any of those things in your front page :D.
2011-11-29 22:41:18 UTC <luite> hehe I've already found out that it's impossible to make a best look
2011-11-29 22:42:35 UTC <luite> it's really easy to make a very clean and stylish look as long as you don't add any content or functionality :)
2011-11-29 22:43:19 UTC <fryguybob> Ha, yeah.
2011-11-29 22:44:05 UTC <luite> hmm the new codemirror still has some bugs on my page, guess fixing those is more important than the design :)
2011-11-30 04:54:49 UTC <luite> javascript javascript javascript javascript javascript javascript
2011-11-30 18:06:01 UTC <fryguybob> byorgey: Is the minimal bounds stuff implemented somewhere?
2011-11-30 21:25:52 UTC <byorgey> fryguybob: I think Taejo might have been working on it but I don't know the status.
2011-12-01 04:56:38 UTC <byorgey> > 2 + 3
2011-12-01 04:56:38 UTC <diabot>  Terminated
2011-12-01 04:56:59 UTC <byorgey> @src map
2011-12-01 04:56:59 UTC <diabot> map _ []     = []
2011-12-01 04:56:59 UTC <diabot> map f (x:xs) = f x : map f xs
2011-12-01 04:59:21 UTC <byorgey> > 2 + 3
2011-12-01 04:59:21 UTC <diabot>   mueval: Most RTS options are disabled. Link with -rtsopts to enable them.
2011-12-01 05:01:04 UTC <luite> hehe
2011-12-01 05:01:13 UTC <luite> map (,1) [1..10]
2011-12-01 05:01:16 UTC <luite> oops
2011-12-01 05:01:20 UTC <luite> > map (,1) [1..10]
2011-12-01 05:01:21 UTC <diabot>   Could not find module `ShowIO'
2011-12-01 05:01:21 UTC <diabot>  Perhaps you meant ShowQ (from show-0.4.1.1....
2011-12-01 05:01:28 UTC <byorgey> > 2 + 3
2011-12-01 05:01:28 UTC <diabot>   Could not find module `ShowIO'
2011-12-01 05:01:28 UTC <diabot>  Perhaps you meant ShowQ (from show-0.4.1.1....
2011-12-01 05:01:37 UTC <byorgey> hmm
2011-12-01 05:01:40 UTC <byorgey> progress!
2011-12-01 05:02:22 UTC <luite> I don't remember seeing that error
2011-12-01 05:02:22 UTC <byorgey> This is just lambdabot I've got running
2011-12-01 05:02:36 UTC <luite> I've run lambdabot on another network for a while
2011-12-01 05:03:01 UTC <byorgey> but I plan to customize it with diagrams-specific stuff like extensions to @src for diagrams combinators, and a way to generate diagrams
2011-12-01 05:04:16 UTC <byorgey> ah, the 'show' package used to export ShowIO prio to version 0.4
2011-12-01 05:04:29 UTC <byorgey> now to figure out what exactly is expecting to find ShowIO
2011-12-01 05:05:29 UTC <luite> mueval probably :)
2011-12-01 05:05:40 UTC <byorgey> actually, turns out it's lambdabot, not mueval
2011-12-01 05:05:42 UTC <luite> I think you can debug most of it by trying mueval on the command line
2011-12-01 05:05:44 UTC <luite> oh really?
2011-12-01 05:06:00 UTC <luite> hmm
2011-12-01 05:06:20 UTC <luite> how do you want to generate diagrams with it? make a clickable web url?
2011-12-01 05:06:44 UTC <byorgey> yeah, have it upload the generated diagram to some image hosting site and print a short url in the channel
2011-12-01 05:07:06 UTC <byorgey> dunno how useful it will actually be but it sounds fun =)
2011-12-01 05:07:31 UTC <byorgey> for a really good time, someone should write an aalib backend, and it can paste the diagram directly into the channel ;)
2011-12-01 05:08:13 UTC <byorgey> > 2 + 3
2011-12-01 05:08:14 UTC <diabot>   Could not find module `Control.Parallel.Strategies'
2011-12-01 05:08:14 UTC <diabot>  Use -v to see a list o...
2011-12-01 05:08:21 UTC <byorgey> blarg
2011-12-01 05:08:32 UTC <byorgey> ok, I see what needs to be done
2011-12-01 05:08:48 UTC <byorgey> L.hs doesn't get compiled with lambdabot, it only gets evaluated by mueval
2011-12-01 05:09:00 UTC <luite> yeah I remember that problem :)
2011-12-01 05:09:06 UTC <luite> having to install all those packages by hand
2011-12-01 05:09:25 UTC <byorgey> well, or just delete some imports from L.hs =)
2011-12-01 05:09:46 UTC <byorgey> I really don't care whether people get to use parallel strategies for defining diagrams or not
2011-12-01 05:10:57 UTC <byorgey> > 2 + 3
2011-12-01 05:10:58 UTC <diabot>   5
2011-12-01 05:11:03 UTC <luite> yay
2011-12-01 05:11:03 UTC <byorgey> \o/
2011-12-01 05:11:09 UTC <luite> > map (,1) [1..10]
2011-12-01 05:11:10 UTC <diabot>   Illegal tuple section: use -XTupleSections
2011-12-01 05:11:12 UTC <luite> aw
2011-12-01 05:11:38 UTC <byorgey> hmm, how would I turn that on?
2011-12-01 05:11:45 UTC <byorgey> I guess it's a mueval thing
2011-12-01 05:12:22 UTC <luite> yeah, but I don't know :)
2011-12-01 05:13:16 UTC <byorgey> well, I've got better things to do at this point =)
2011-12-01 05:13:52 UTC <byorgey> luite: by the way, you're an admin for diabot
2011-12-01 05:13:59 UTC <byorgey> dunno what that lets you do
2011-12-01 05:14:27 UTC <luite> cool! don't know either :p
2011-12-01 05:14:48 UTC <luite> guess I'll have to make you a Wolfgang admin in return now
2011-12-01 05:16:19 UTC <byorgey> heh, not necessary =)
2011-12-01 05:16:51 UTC <byorgey> > map (,1) [1..10]
2011-12-01 05:16:52 UTC <diabot>   [(1,1),(2,1),(3,1),(4,1),(5,1),(6,1),(7,1),(8,1),(9,1),(10,1)]
2011-12-01 05:16:58 UTC <byorgey> turns out it was easy =)
2011-12-01 05:17:36 UTC <byorgey> Plugin/Eval.hs just passes a list of extensions to mueval on the command line
2011-12-01 05:17:51 UTC <luite> ah
2011-12-01 05:18:19 UTC <luite> do you want to use unsafePerformIO to write a file for diagrams?
2011-12-01 05:19:35 UTC <byorgey> luite: hmm... I hadn't really thought through it that carefully
2011-12-01 05:20:40 UTC <byorgey> maybe I should just wait until Wolfgang is fully operational, then diabot can just create a temporary Wolfgang page and let Wolfgang deal with all the icky sandboxing etc. =)
2011-12-01 05:21:14 UTC <luite> hehe it will get a pastebin for those
2011-12-01 05:21:31 UTC <byorgey> exactly =)
2011-12-01 05:21:50 UTC <byorgey> but a pastebin that will still do things like show you diagrams, right?
2011-12-01 05:21:53 UTC <luite> but a simple unsafePerformIO wrapper would also work
2011-12-01 05:21:55 UTC <luite> yeah
2011-12-01 05:22:30 UTC <byorgey> well, but what if someone submits a diagram that eats up all the memory on my system while generating the output file?
2011-12-01 05:23:04 UTC <luite> mueval uses some memory limits and lambdabot kills it after a few seconds
2011-12-01 05:23:39 UTC <byorgey> hmm, I guess what I'd have to do is hack mueval so it can generate diagrams as well as just give textual output
2011-12-01 05:23:47 UTC <luite> you can still make lambdabot eat all memory though, I think it was with @type or something
2011-12-01 05:24:00 UTC <byorgey> oh, sure
2011-12-01 05:24:13 UTC <byorgey> ask for the type of  f . f . f . f . f . f . f . f . f  where f x = (x,x)
2011-12-01 05:24:50 UTC <luite> hehe I think someone already did that last year and Cale got warning mails from linode that his vps was swapping too much
2011-12-01 05:24:57 UTC <byorgey> hehehe
2011-12-01 05:25:22 UTC <byorgey> typechecking as DOS attack
2011-12-01 05:26:51 UTC <luite> I'm working on file uploads for wolfgang at the moment, it's annoying :(
2011-12-01 05:27:05 UTC <byorgey> ah, I bet
2011-12-01 05:28:45 UTC <luite> but most of it works now, I think, some javascript still required to let people upload their .lhs :)
2011-12-01 05:29:41 UTC <byorgey> nice =)
2011-12-01 05:30:04 UTC <byorgey> I am impressed by your perseverence
2011-12-01 05:30:59 UTC <luite> I'm actually quite sick of working on it now =)
2011-12-01 05:31:53 UTC <luite> the code is also really messy
2011-12-01 05:32:42 UTC <byorgey> so why don't you try to get some other people to help you work on it?
2011-12-01 05:34:43 UTC <byorgey> OK, I think I can see how to hack diagram generation into mueval, so that it also falls under the same resource limits
2011-12-01 05:34:53 UTC <byorgey> but I don't feel like doing it tonight =P
2011-12-01 05:35:17 UTC <luite> uh I'd have to do a lot of odcumentation for that, don't really feel like that at the moment :) it's relatively difficult to install and there are a lot of small things that don't really work properly yet, which would require a lot of time to explain
2011-12-01 05:37:29 UTC <byorgey> well, fair enough, but the time spent documenting/cleaning up etc. is usually well worth it anyway
2011-12-01 05:38:45 UTC <luite> yeah that's true, I will do that, but maybe after launch
2011-12-01 05:38:47 UTC <byorgey> although I know quite well it's not the most fun thing in the world to do
2011-12-01 05:39:09 UTC <luite> there will also be much funner things to hack on then, for other contributors
2011-12-01 05:39:36 UTC <luite> like adding more response type handlers, they can bind javascript libs etc
2011-12-01 05:52:38 UTC <luite> and since I'll be in canada for 2 weeks in dec and don't know how often I'll be online there it might not be the right time to ask people to help :)
2011-12-01 05:52:46 UTC <luite> oh it already is dec
2011-12-01 05:52:59 UTC <luite> here at least :p
2011-12-01 05:55:28 UTC <byorgey> it is here too
2011-12-01 05:55:42 UTC <byorgey> happy December!
2011-12-01 05:57:00 UTC <byorgey> woah, something else that depends on diagrams: http://hackage.haskell.org/package/tidal
2011-12-01 05:58:08 UTC <luite> cool! but the homepage doesn't work :(
2011-12-01 05:59:05 UTC <byorgey> I know =(
2011-12-01 06:01:36 UTC <byorgey> hmm, the source code doesn't seem to actually use diagrams at all!
2011-12-01 06:01:55 UTC <byorgey> it's just listed as a dependency
2011-12-01 06:15:47 UTC <luite> hehe that's a fun way to make library authors all excited ;)
2011-12-01 06:16:05 UTC <byorgey> I know, right?
2011-12-01 06:32:21 UTC <luite> wget http://localhost/wikidata/tmp/0000000000000000ffff00000100007f-9c749058c157aa872148292e35992b7d2b05f5355879e1bdb8bde00b2469d89d.png
2011-12-01 06:32:31 UTC <luite> hmm that doesn't work here
2011-12-01 11:31:20 UTC <fryguybob> @tell byorgey Messages are working.
2011-12-01 11:31:20 UTC <diabot> Consider it noted.
2011-12-01 11:31:29 UTC <luite> hehe
2011-12-01 11:31:42 UTC <luite> uploads are also working \o/
2011-12-01 11:37:19 UTC <luite> http://hdiff.luite.com/tmp/upload.png
2011-12-01 13:44:41 UTC <byorgey> luite: yay!
2011-12-01 13:44:41 UTC <diabot> byorgey: You have 2 new messages. '/msg diabot @messages' to read them.
2011-12-01 13:44:52 UTC <byorgey> @messages
2011-12-01 13:44:52 UTC <diabot> edwardk said 1y 7m 4d 21h 56m 23s ago: i may wind up adopting your functional convex hull trick for some generalized taylor models
2011-12-01 13:44:52 UTC <diabot> fryguybob said 2h 13m 32s ago: Messages are working.
2011-12-01 13:45:33 UTC <fryguybob> haha, 1y
2011-12-01 13:45:39 UTC <byorgey> hahahaha, looks like I didn't clear out the @messages database that comes with lambdabot =)
2011-12-01 13:49:16 UTC <byorgey> @add-repo http://patch-tag.com/r/byorgey/diagrams-core
2011-12-01 13:49:16 UTC <diabot> Unknown command, try @list
2011-12-01 13:50:59 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-core
2011-12-01 13:50:59 UTC <diabot> Unknown command, try @list
2011-12-01 13:53:40 UTC <byorgey> @flush
2011-12-01 13:54:15 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-core
2011-12-01 13:54:15 UTC <diabot> Plugin `darcspatchwatch' failed with: http://patch-tag.com/r/byorgey/diagrams-core/_darcs/inventory: fileAccess: does not exist (No such file or directory)
2011-12-01 13:58:32 UTC <byorgey> oh, it only works on local repos, eh?
2011-12-01 13:58:45 UTC <byorgey> sad
2011-12-01 13:59:25 UTC <fryguybob> Humm, does patch-tag pick the content to serve based based on user agent or something?
2011-12-01 14:12:07 UTC <byorgey> fryguybob: no, the darcspatchwatch plugin was literally trying to look on the filesystem
2011-12-01 14:12:16 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-core
2011-12-01 14:12:16 UTC <diabot> repository {Repository "http://patch-tag.com/r/byorgey/diagrams-core", last announcement: unknown} added
2011-12-01 14:12:37 UTC <fryguybob> Ah, yeah.  I tried following the link and got 500.
2011-12-01 14:13:08 UTC <fryguybob> @repos
2011-12-01 14:13:08 UTC <diabot> {{Repository "http://patch-tag.com/r/byorgey/diagrams-core", last announcement: Thu Dec  1 09:12:55 EST 2011}}
2011-12-01 14:14:47 UTC <byorgey> hum, now it thinks it's made an announcement?
2011-12-01 14:16:04 UTC <fryguybob> Well I guess it announced that it was added :D
2011-12-01 14:17:17 UTC <byorgey> heh
2011-12-01 14:17:32 UTC <byorgey> I just tried pushing a test change
2011-12-01 14:18:26 UTC <fryguybob> ACTION waits patiently for an announcement.
2011-12-01 14:18:40 UTC <byorgey> ACTION waits not-so-patiently for an announcement
2011-12-01 14:20:23 UTC <byorgey> OH
2011-12-01 14:21:01 UTC <byorgey> it checks the number of *lines* returned by 'darcs changes', but I initialized it with the number of *characters* =P
2011-12-01 14:39:28 UTC <byorgey> @repos
2011-12-01 14:39:28 UTC <diabot> {{Repository "http://patch-tag.com/r/byorgey/diagrams-core", last announcement: Thu Dec  1 09:39:14 EST 2011}}
2011-12-01 14:40:15 UTC <diabot> [diagrams-core:1 09:39:44 EST 2011  Brent Yorgey <byorgey] yet another test commit
2011-12-01 14:40:25 UTC <byorgey> \o/
2011-12-01 14:44:42 UTC <fryguybob> woohoo
2011-12-01 14:46:58 UTC <byorgey> as you can see, the included changelog parser is rather dumb
2011-12-01 14:47:03 UTC <byorgey> but I'll work on it later
2011-12-01 14:47:27 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-lib
2011-12-01 14:47:40 UTC <diabot> repository {Repository "http://patch-tag.com/r/byorgey/diagrams-lib", last announcement: unknown} added
2011-12-01 14:47:55 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-cairo
2011-12-01 14:47:56 UTC <diabot> repository {Repository "http://patch-tag.com/r/byorgey/diagrams-cairo", last announcement: unknown} added
2011-12-01 14:48:09 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/active
2011-12-01 14:48:09 UTC <diabot> repository {Repository "http://patch-tag.com/r/byorgey/active", last announcement: unknown} added
2011-12-01 14:48:28 UTC <byorgey> @repo-add http://patch-tag.com/r/fryguybob/diagrams-postscript
2011-12-01 14:48:28 UTC <diabot> repository {Repository "http://patch-tag.com/r/fryguybob/diagrams-postscript", last announcement: unknown} added
2011-12-01 14:48:55 UTC <byorgey> @repo-add http://patch-tag.com/r/byorgey/diagrams-contrib
2011-12-01 14:48:55 UTC <diabot> repository {Repository "http://patch-tag.com/r/byorgey/diagrams-contrib", last announcement: unknown} added
2011-12-01 14:49:31 UTC <byorgey> any others I should add?
2011-12-01 14:50:13 UTC <fryguybob> Looks good to me.
2011-12-01 15:09:34 UTC <tgeeky_> ACTION surreptitiously makes diabot track linux repos
2011-12-01 15:10:45 UTC <tgeeky_> hm. So I watched a 4x1-hour BBC documentary about Symphony(s).
2011-12-01 15:10:53 UTC <tgeeky_> And I can't help but feeling the original ones were the best.
2011-12-01 16:15:43 UTC <luite> @vixen asl
2011-12-01 16:15:43 UTC <diabot> They're not like us. They smell different, they look different, they act different.  The trouble is, you can't find one that's honest.
2011-12-01 16:15:50 UTC <luite> lol
2011-12-01 16:20:51 UTC <byorgey> Oh, I should remove @nixon too =P
2011-12-01 16:21:27 UTC <tgeeky_> @nixon what do you think about china?
2011-12-01 16:21:27 UTC <diabot> Certainly in the next 50 years we shall see a woman president, perhaps sooner than you think. A woman can and should be able to do any political job that a man can do.
2011-12-01 17:17:55 UTC <byorgey> @nixon
2011-12-01 17:17:55 UTC <diabot> Unknown command, try @list
2011-12-01 17:17:59 UTC <byorgey> much better
2011-12-01 17:18:18 UTC <byorgey> if you want inane Nixon quotes you can always ask lambdabot =P
2011-12-01 18:03:08 UTC <tgeeky_> hehe
2011-12-01 18:03:19 UTC <tgeeky_> insane is almost redundant in that sentence
2011-12-01 18:09:53 UTC <luite> I don't think byorgey wrote that ;p
2011-12-01 18:11:16 UTC <tgeeky> oh
2011-12-01 18:11:23 UTC <tgeeky> inane also perfectly describes Nixon
2011-12-01 18:11:40 UTC <tgeeky> that man could talk down to you for 2 hours about any subject whatsoever
2011-12-01 20:07:29 UTC <luite> hackage is down, change hackage.haskell.org to hdiff.luite.com in your cabal config if you want to use my mirror, it has all packages (including older versions), but no haddock
2011-12-01 20:19:02 UTC <luite> and it's up again :p
2011-12-02 05:48:35 UTC <byorgey> > let fibs = 0 : 1 : zipWith (+) fibs (tail fibs) in map (^2) fibs
2011-12-02 05:48:38 UTC <diabot>   [0,1,1,4,9,25,64,169,441,1156,3025,7921,20736,54289,142129,372100,974169,25...
2011-12-02 05:48:50 UTC <byorgey> =D
2011-12-02 05:49:15 UTC <byorgey> having my very own robot makes me happy ;)
2011-12-02 05:51:51 UTC <luite> hehe
2011-12-02 06:24:01 UTC <luite> can it query oeis for eval results?
2011-12-02 06:29:30 UTC <luite> are you good with image editors? I need to change an animated gif from orange to blue without destroying the animatedness
2011-12-02 07:24:14 UTC <byorgey> @oeis 2,3,5,7,11
2011-12-02 07:24:55 UTC <byorgey> luite: I don't know, I could try
2011-12-02 07:25:02 UTC <diabot>  The prime numbers.
2011-12-02 07:25:02 UTC <diabot>  [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,...
2011-12-02 07:25:11 UTC <byorgey> I've used GIMP a fair deal, but not for animations
2011-12-02 07:27:27 UTC <luite> oh I just did it in photoshop, the hard way
2011-12-02 07:27:35 UTC <luite> changing the colors frame by frame
2011-12-02 07:30:19 UTC <byorgey> ugh I'm sorry =(
2011-12-02 07:32:18 UTC <luite> hehe np :)
2011-12-02 07:32:47 UTC <luite> it means the upload dialog is now done, I think, http://hdiff.luite.com/tmp/upload-step1.png http://hdiff.luite.com/tmp/upload-step2.png
2011-12-02 07:33:12 UTC <luite> the animated gif was an upload progress bar
2011-12-02 07:38:55 UTC <byorgey> luite: nice
2011-12-02 07:39:23 UTC <luite> hopefully I can reuse most of this dialog for the Save as.. dialog for pages
2011-12-02 07:40:18 UTC <byorgey> luite: if you need more animated gifs I can also make them for you with diagrams =D
2011-12-02 07:40:48 UTC <luite> hehe, yeah, that would probably be more fun than changing everything by hand in photoshop :)
2011-12-02 07:41:39 UTC <luite> but I don't really use animated gifs myself, the file upload javascript library that I use has one
2011-12-02 07:41:58 UTC <byorgey> right
2011-12-02 07:42:33 UTC <luite> I have some loader animation, but that's also just a standard gif
2011-12-02 07:47:10 UTC <luite> ah cool, that animation code, hadn't seen it before :)
2011-12-02 07:47:16 UTC <luite> from your status update
2011-12-02 07:47:40 UTC <byorgey> yep =)
2011-12-02 08:05:41 UTC <luite> diagrams-cairo works fine here btw
2011-12-02 08:09:55 UTC <byorgey> luite: on a Mac?
2011-12-02 08:10:13 UTC <luite> yeah, OS X 10.7.2 with GHC 7.2.1 64 bit
2011-12-02 08:10:22 UTC <luite> Cairo+GTK installed with macports
2011-12-02 08:10:41 UTC <byorgey> luite: good to know. Andy Gill was having trouble getting it installed and I know of others who had trouble as well
2011-12-02 08:11:31 UTC <luite> hmm, I've only tried -o x.png and x.pdf, is there something that might be more tricky, like opening a window with the diagram?
2011-12-02 08:11:44 UTC <byorgey> luite: also, I like "Introduction yes".  Perhaps I will make that the actual heading for the introduction ;)
2011-12-02 08:11:51 UTC <luite> hehe
2011-12-02 08:11:59 UTC <byorgey> luite: no, I mean he couldn't even get cairo installed at all
2011-12-02 08:12:51 UTC <byorgey> I've not yet heard of a situation where some aspects of diagrams-cairo work but others don't
2011-12-02 08:13:10 UTC <luite> I changed that line because I was testing overwriting and diffing files :)
2011-12-02 08:14:08 UTC <byorgey> yes, I figured =)
2011-12-02 08:14:29 UTC <luite> I could've changed something further odwn, but then I'd have to scroll more
2011-12-02 08:14:47 UTC <luite> the diff viewer is still not ideal, a bit slow, will probably be changed later
2011-12-02 08:24:32 UTC <luite> hopefully I can find a good existing javascript lib for diffing that supports 3-way merging
2011-12-02 17:36:29 UTC <fryguybob> byorgey: I just went to a great talk by HÃ©lÃ¨ne Martin about CS education: http://www.helenemartin.com/  Thought you might be interested.
2011-12-02 19:32:14 UTC <ClaudiusMaximus> luite: i know you've figured it out already, but gifsicle is a nice cli tool for manipulating animgifs - not sure if it supports arbitrary colour remapping, though
2011-12-02 21:03:01 UTC <ClaudiusMaximus> so, i made this y'day with some home-brew code http://claudiusmaximus.goto10.org/g/mandelbrot/gruff-labels-and-rays.png
2011-12-02 21:03:29 UTC <ClaudiusMaximus> but before i end up re-implementing an inferior version of diagrams, i'm going to try using it directly
2011-12-02 21:05:03 UTC <ClaudiusMaximus> so, a couple of questions: is there a way to serialize diagrams?  can i build a diagram with coordinates using Rational and then convert to Double at the last possible moment to avoid losing precision?
2011-12-02 21:06:42 UTC <ClaudiusMaximus> first question is because what i have at the moment is pretty much ./diagram-generating-code | ./fractal-rendering-and-display-overlay-code
2011-12-02 21:07:07 UTC <ClaudiusMaximus> second question is because Double is not precise enough for some of the things i want to do
2011-12-02 21:08:07 UTC <ClaudiusMaximus> maybe i should just have the diagram generating code save an arbitrary image
2011-12-02 21:08:51 UTC <ClaudiusMaximus> because i don't really see myself writing an interactive diagram editor any time soon
2011-12-02 21:38:42 UTC <byorgey> ClaudiusMaximus: well, diagrams can work over arbitrary vector spaces
2011-12-02 21:38:59 UTC <byorgey> ClaudiusMaximus: so instead of working over R2 = (Double, Double)  you could try working over Q2 = (Rational, Rational)
2011-12-02 21:39:34 UTC <byorgey> ClaudiusMaximus: the only thing you might have trouble with is that in Q2 you can't compute the magnitude of vectors, only the magnitude squared
2011-12-02 21:40:02 UTC <byorgey> and I think there are a few things in diagrams which rely on magnitude.  But if so I'd be interested in figuring out ways to work around them.
2011-12-02 21:41:05 UTC <ClaudiusMaximus> byorgey: ok, so no need for sin/cos when rotating?
2011-12-02 21:41:22 UTC <byorgey> ClaudiusMaximus: that's a really cool diagram by the way =)
2011-12-02 21:41:38 UTC <byorgey> ClaudiusMaximus: oh, well, obviously you can't do arbitrary rotations in Q2 either =P
2011-12-02 21:41:58 UTC <ClaudiusMaximus> byorgey: thanks! bit too many overlapping labels for my taste, but it's getting there :)
2011-12-02 21:42:26 UTC <ClaudiusMaximus> true
2011-12-02 21:43:22 UTC <byorgey> one problem is that all the stuff in Diagrams.TwoD.* is defined in terms of R2
2011-12-02 21:43:27 UTC <byorgey> probably a lot of it could be generalized
2011-12-02 21:43:35 UTC <ClaudiusMaximus> about serialization, it also takes a long time to 'read' a 3MB String...
2011-12-02 21:43:37 UTC <byorgey> but not rotation as you point out
2011-12-02 21:43:58 UTC <byorgey> ClaudiusMaximus: what do you mean by serialize diagrams?
2011-12-02 21:45:17 UTC <ClaudiusMaximus> like sending a diagram down a wire to another program that can reconstruct it - but i think it'd be too complicated so i'll stick with "built-in simple stuff like text and lines" and add an "overlay a png/svg/whatever" option
2011-12-02 21:46:06 UTC <ClaudiusMaximus> the advantage of the first approach is that it works ok with zoom/rotation, the advantage of the second is flexibility of content
2011-12-02 21:46:13 UTC <byorgey> ClaudiusMaximus: oh, OK, I see. Well, since diagrams contain functions there's no way to serialize them and get back something exactly the same.
2011-12-02 21:46:23 UTC <ClaudiusMaximus> ahh, ok
2011-12-02 21:46:35 UTC <byorgey> in principle you could serialize a "compiled" version which just gave you the locations of all the primitives etc.
2011-12-02 21:46:44 UTC <byorgey> but there's not support for that at the moment
2011-12-02 21:46:44 UTC <ClaudiusMaximus> yeah, but then you might as well use svg output
2011-12-02 21:46:47 UTC <byorgey> right.
2011-12-02 21:47:44 UTC <ClaudiusMaximus> it took 5mins to render that diagram, and only 12 seconds to emit it - i think the bulk of the 5mins is in 'read'
2011-12-02 21:48:41 UTC <ClaudiusMaximus> and possibly the rational -> screen coordinates transformation, doesn't help that i'm using integer-simple there :(
2011-12-02 21:53:06 UTC <byorgey> heh
2011-12-02 21:53:17 UTC <byorgey> yeah, reading a 3MB String sounds fun
2011-12-02 21:53:26 UTC <byorgey> were you actually using a String?
2011-12-02 21:53:52 UTC <byorgey> I think there are much faster ways to read in a big chunk of data, although I couldn't tell you what they are.
2011-12-02 21:53:58 UTC <ClaudiusMaximus> yeah, didn't bother writing a wire protocol, so just used Show/Read
2011-12-02 21:54:05 UTC <ClaudiusMaximus> *deriving
2011-12-02 21:54:10 UTC <ClaudiusMaximus> definitely
2011-12-02 21:55:38 UTC <ClaudiusMaximus> attoparsec is fast for parsing, and floatshow is fast for printing floats (especially if you don't need all the digits)
2011-12-02 22:03:41 UTC <luite> I'd probably use something liek Cereal, you can do lots of things automatically if you derive Data and Typeable
2011-12-03 05:08:27 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add more comments to D.TwoD.Apollonian (and 7 more)
2011-12-03 05:09:00 UTC <byorgey> eh?
2011-12-03 05:09:15 UTC <byorgey> that's odd, I haven't touched anything in a week
2011-12-03 05:09:44 UTC <byorgey> I think the DarcsPatchWatch plugin needs some love
2011-12-03 05:09:46 UTC <luite> hmm
2011-12-03 05:56:23 UTC <tgeeky> ACTION sends a (very early, or *very* late) valentine
2011-12-03 20:37:31 UTC <diabot> [diagrams-cairo:Brent Yorgey <byorgey] rename AnnDiagram -> QDiagram (and 227 more)
2011-12-04 02:13:52 UTC <tgeeky> 1st package release! :o
2011-12-04 02:14:13 UTC <tgeeky> http://hackage.haskell.org/packages/archive/recent.html
2011-12-04 02:14:15 UTC <tgeeky> woohoo!
2011-12-04 02:14:25 UTC <fryguybob> \o/
2011-12-04 02:16:30 UTC <luite> :)
2011-12-04 02:21:50 UTC <luite> cool user icon ;p
2011-12-04 02:43:18 UTC <tgeeky> why thank you
2011-12-04 02:43:19 UTC <tgeeky> he's my favorite
2011-12-04 02:45:39 UTC <tgeeky> wait lol
2011-12-04 02:45:48 UTC <tgeeky> that's not my personal account, so you're joking
2011-12-04 02:46:07 UTC <tgeeky> oh, no
2011-12-04 02:46:09 UTC <tgeeky> that's so strange
2011-12-04 02:46:21 UTC <tgeeky> i uploaded it using my d-rive account, but it still shows as 'technogeeky'
2011-12-04 02:49:48 UTC <luite> hehe I meant your technogeeky icon
2011-12-04 04:40:43 UTC <tgeeky> luite: is hdiff open source?
2011-12-04 04:40:59 UTC <luite> yes
2011-12-04 04:41:54 UTC <luite> but 99% is done by cgit, a web viewer for git repositories
2011-12-04 04:43:31 UTC <luite> I've converted it into a full hackage mirror, so you can download/install from hdiff if you change the host name hackage.haskell.org to hdiff.luite.com in your cabal config :)
2011-12-04 04:43:57 UTC <tgeeky> ACTION wonders how this will go on windows
2011-12-04 04:44:00 UTC <luite> but I stil don't have the scripts to build haddock :p
2011-12-04 04:44:15 UTC <tgeeky> i have (some) of those
2011-12-04 04:44:17 UTC <luite> you need to get bash 4.x from cygwin probably
2011-12-04 04:44:24 UTC <tgeeky> yeah, I can't do that (mingw)
2011-12-04 04:44:33 UTC <luite> then you can get one from msys
2011-12-04 04:44:57 UTC <luite> I use the msys shell all the time to build 3rd party libs for haskell stuff
2011-12-04 04:45:49 UTC <tgeeky> i'm guessing bash-4 isn't stable.
2011-12-04 04:45:54 UTC <tgeeky> it's -3.1 right now as far as I know
2011-12-04 04:45:56 UTC <luite> although I haven't been running windows very often lately, since my new laptop is almost as fast as my desktop, and it has most developmentt hings I need installed (including wolfgang)
2011-12-04 04:46:11 UTC <luite> why do you want your own hdiff?
2011-12-04 04:46:21 UTC <luite> it takes a lot of disk space, huge number of files
2011-12-04 04:46:25 UTC <tgeeky> hehe
2011-12-04 04:46:37 UTC <tgeeky> i want hdiff `filter` [ ... packages i want ... ]
2011-12-04 04:46:52 UTC <tgeeky> and just use it to manage my local cabal repository
2011-12-04 04:47:06 UTC <luite> ah right
2011-12-04 04:47:16 UTC <tgeeky> it's the best approach, because everything is already in git
2011-12-04 04:47:54 UTC <tgeeky> is it just those two bash scripts in your git repo?
2011-12-04 04:47:58 UTC <luite> yeah
2011-12-04 04:47:58 UTC <tgeeky> can you update it, if not? :o
2011-12-04 04:48:01 UTC <tgeeky> ok
2011-12-04 04:48:54 UTC <luite> the frontpage is a php script that just shows the entries from the latestupdates file
2011-12-04 04:50:00 UTC <tgeeky> luite: do you know what in particular is bash-4, out of curiosity?
2011-12-04 04:50:10 UTC <tgeeky> is it all of these ([ ]*) ... things?
2011-12-04 04:50:17 UTC <tgeeky> i'm assuming those are regexes of one sort or another
2011-12-04 04:50:42 UTC <luite> I think it's the associative arrarys, not 100% sure
2011-12-04 04:52:13 UTC <tgeeky> i'm guessing my package didn't build or something
2011-12-04 05:36:01 UTC <luite> hmm, should I choose vim or emacs keybindings for the editors in wolfgang? ;p
2011-12-04 05:52:19 UTC <luite> hm I hope no one uses opera
2011-12-04 06:08:17 UTC <luite> I chose emacs btw
2011-12-05 05:07:14 UTC <tgeeky> hehe
2011-12-05 05:07:51 UTC <tgeeky> it appears that we'll have a 95% answer (which is not sufficient for physics) on the 13th of December
2011-12-05 16:14:09 UTC <byorgey> man, with a 7.5 billion euro piece of equipment, you'd think they would be able to afford better-looking graphs =P
2011-12-05 16:31:01 UTC <tgeeky> byorgey: hehe
2011-12-05 16:31:34 UTC <tgeeky> that was the 'alpha' version of luminosity statistics
2011-12-05 16:31:36 UTC <tgeeky> here is the 'beta' http://lhc-statistics.web.cern.ch/LHC-Statistics/
2011-12-05 16:31:42 UTC <tgeeky> somewhat better
2011-12-05 17:24:36 UTC <byorgey> ugh, no, that's worse!!
2011-12-05 17:25:09 UTC <byorgey> http://en.wikipedia.org/wiki/Chartjunk
2011-12-05 19:27:15 UTC <luite> oh cool plot style, the one with the green bricks
2011-12-06 00:38:09 UTC <byorgey> @join #haskell
2011-12-06 01:59:45 UTC <luite> @part #haskell
2011-12-06 02:00:58 UTC <luite> cool it worked :)
2011-12-06 02:02:45 UTC <luite> oh Cale already disconnected lambdabot again since it still has problems :(
2011-12-06 04:07:46 UTC <tgeeky> @kick tgeeky
2011-12-06 04:07:47 UTC <diabot> Maybe you meant: dice dict kind
2011-12-06 04:07:53 UTC <tgeeky> no, i didn't
2011-12-06 04:08:04 UTC <byorgey> perhaps you meant @slap?
2011-12-06 04:08:12 UTC <tgeeky> @slap tgeeky
2011-12-06 04:08:13 UTC <diabot> ACTION slaps tgeeky
2011-12-06 04:08:16 UTC <tgeeky> i was hoping that it would kick me
2011-12-06 04:08:51 UTC <byorgey> kick you metaphorically? or kick you out of the channel?
2011-12-06 04:08:58 UTC <tgeeky> the second
2011-12-06 04:09:25 UTC <byorgey> heh, I don't think diabot has admin privileges in #diagrams
2011-12-06 04:09:34 UTC <tgeeky> byorgey: few quick category-theoretic questions, if I may:
2011-12-06 04:09:39 UTC <byorgey> sure
2011-12-06 04:09:56 UTC <tgeeky> data Nu f = OutI { out :: f (Nu f) }
2011-12-06 04:09:56 UTC <tgeeky> data Mu f = Innn { inI :: f (Mu f) }
2011-12-06 04:10:08 UTC <tgeeky> this is supposed to be (final co-algebra, initial algebra) resp.
2011-12-06 04:10:11 UTC <byorgey> yep
2011-12-06 04:10:29 UTC <tgeeky> what is the I in inI supposed to stand for / mean?
2011-12-06 04:10:39 UTC <byorgey> I'm guessing Inverse
2011-12-06 04:10:39 UTC <tgeeky> and similarly with the outI that's in the definition of unfold
2011-12-06 04:11:08 UTC <byorgey> also I have no idea what's with the three n's in  INNN
2011-12-06 04:11:12 UTC <byorgey> Innn  I mean
2011-12-06 04:11:22 UTC <tgeeky> that's me being cute and making the definition the same width
2011-12-06 04:11:25 UTC <tgeeky> so i can line it up in source code
2011-12-06 04:11:26 UTC <byorgey> ahh =)
2011-12-06 04:11:43 UTC <tgeeky> so, there must exist the concept of
2011-12-06 04:11:49 UTC <tgeeky> (initial co-algebra, final algebra) yes?
2011-12-06 04:11:58 UTC <tgeeky> or are those nonsensical ideas?
2011-12-06 04:12:11 UTC <byorgey> not necessarily
2011-12-06 04:12:31 UTC <byorgey> the question is whether the category of F-algebras (for some algebra F) has a final object
2011-12-06 04:12:41 UTC <byorgey> (resp. dually)
2011-12-06 04:12:59 UTC <byorgey> the category of F-algebras always has an initial object, but I don't know whether it has a final object
2011-12-06 04:13:21 UTC <byorgey> I suspect not.
2011-12-06 04:14:49 UTC <tgeeky> byorgey: if you were working with some thing with a closed limit set, or with sup/inf, would that change the picture?
2011-12-06 04:15:23 UTC <tgeeky> that is, if <initial F-alg> captures induction, then it "captures" the induction isomorphic to the natural numbers
2011-12-06 04:15:23 UTC <byorgey> tgeeky: I'm not sure I understand the question.  Can you give an example?
2011-12-06 04:16:12 UTC <tgeeky> then might a <final F-alg) "capture" the concept of the maximum of some finite thing (like the largest element in a finite field)?
2011-12-06 04:18:26 UTC <byorgey> Actually, now that I work out the definition, final algebras do exist but they are uninteresting
2011-12-06 04:18:42 UTC <byorgey> in particular the final algebra is always given by an arrow  F () -> ()
2011-12-06 04:18:46 UTC <byorgey> just a minute
2011-12-06 04:19:00 UTC <tgeeky> hm.
2011-12-06 04:20:16 UTC <tgeeky> the initial co-algebra could be interesting though?
2011-12-06 04:20:52 UTC <byorgey> no, dually it must be  0 -> F 0
2011-12-06 04:21:21 UTC <tgeeky> byorgey: I don't mean to be a pedant here, but I asked a similar question before and was confused by why it's a silly idea
2011-12-06 04:21:25 UTC <tgeeky> with F () -> ()
2011-12-06 04:21:33 UTC <tgeeky> or even
2011-12-06 04:21:35 UTC <tgeeky> 0 -> F 0
2011-12-06 04:22:07 UTC <tgeeky> what if the underlying (space? category? what is the right word here?) thing was already a product of some sort
2011-12-06 04:22:12 UTC <tgeeky> is it possible to see
2011-12-06 04:22:20 UTC <byorgey> there is only one arrow F () -> (), i.e. const ().  so it's uninteresting
2011-12-06 04:22:23 UTC <tgeeky> F () -> ()()()
2011-12-06 04:22:40 UTC <byorgey> that would still carry no information.
2011-12-06 04:22:54 UTC <tgeeky> byorgey: that's what I'm confused by
2011-12-06 04:23:02 UTC <tgeeky> byorgey: I remember the first place i saw it
2011-12-06 04:23:20 UTC <tgeeky> byorgey: was in LYAH, with mapping things  with a postfix _ or not
2011-12-06 04:23:32 UTC <tgeeky> and I would get the result of some computation, and it would be ()()()...() many times
2011-12-06 04:23:42 UTC <tgeeky> why doesn't that count as information?
2011-12-06 04:23:53 UTC <byorgey> that's different
2011-12-06 04:23:56 UTC <tgeeky> if you got different numbers of ()s, isn't that telling you something?
2011-12-06 04:24:15 UTC <byorgey> but we'll have to continue later, sorry, my son is crying
2011-12-06 04:24:22 UTC <tgeeky> byorgey: np, thanks so far
2011-12-06 04:35:06 UTC <byorgey> tgeeky: still there?
2011-12-06 04:35:55 UTC <tgeeky> yep
2011-12-06 04:36:02 UTC <tgeeky> that was fast. good daddy!
2011-12-06 04:36:08 UTC <byorgey> he's asleep (for now)
2011-12-06 04:36:40 UTC <tgeeky> byorgey: as you can tell, I'm working off intuition here, and it's not that great.
2011-12-06 04:36:55 UTC <byorgey> yes, I can tell =)
2011-12-06 04:37:08 UTC <byorgey> maybe I can help put some of it on a slightly firmer footing =)
2011-12-06 04:37:38 UTC <tgeeky> so as a simple (stupid) example
2011-12-06 04:37:41 UTC <byorgey> tgeeky: first, I completely agree that getting a list of () (with any number of copies) is telling you something.
2011-12-06 04:37:47 UTC <tgeeky> ok
2011-12-06 04:37:56 UTC <byorgey> tgeeky: second: do you know the definition of a terminal object?
2011-12-06 04:38:05 UTC <byorgey> aka final object?
2011-12-06 04:38:16 UTC <tgeeky> i could look it up, but I'll type:
2011-12-06 04:38:26 UTC <tgeeky> I felt like it was the greatest fixed point?
2011-12-06 04:38:28 UTC <tgeeky> err
2011-12-06 04:38:46 UTC <tgeeky> ACTION looks it up
2011-12-06 04:38:58 UTC <byorgey> tgeeky: I can just tell you, the definition is quite simple =)
2011-12-06 04:39:11 UTC <tgeeky> oh right
2011-12-06 04:39:30 UTC <tgeeky> it's *the* place that the universal morphism takes you
2011-12-06 04:39:32 UTC <byorgey> a terminal object is an object T such that for any other object in the category, there is one and only one arrow from the other object to T
2011-12-06 04:39:57 UTC <tgeeky> yeah, so it's like the "handle" of the category
2011-12-06 04:40:04 UTC <tgeeky> the endpoint or something
2011-12-06 04:40:13 UTC <byorgey> yes, an endpoint is a good way to think of it
2011-12-06 04:40:21 UTC <byorgey> but the part about *only one* arrow is also important
2011-12-06 04:40:50 UTC <tgeeky> yes
2011-12-06 04:40:58 UTC <byorgey> so, when I wrote () above, what I really meant was "the terminal object"
2011-12-06 04:41:17 UTC <tgeeky> and 0 was the initial?
2011-12-06 04:41:21 UTC <byorgey> right
2011-12-06 04:42:01 UTC <byorgey> so what we should really say is that a category of F-algebras has a terminal object whenever the underlying category has a terminal object
2011-12-06 04:42:19 UTC <byorgey> and the terminal F-algebra is the unique F-algebra of type  F () -> ()
2011-12-06 04:42:48 UTC <byorgey> because given any other F-algebra  F A -> A  there is only one way to map it into  F () -> ()  -- by definition, there is a unique arrow from  A -> ()
2011-12-06 04:43:04 UTC <tgeeky> yeah, I remember this in more detail now from Casters
2011-12-06 04:43:06 UTC <byorgey> and it's easy to check that makes the required square commute
2011-12-06 04:43:30 UTC <byorgey> now, you were talking about, say, mapM_
2011-12-06 04:43:32 UTC <luite> is that an arrow in your pants or am I just a universal attractive object?
2011-12-06 04:43:41 UTC <byorgey> hehehe
2011-12-06 04:43:50 UTC <tgeeky> that is just because you're mapping over IO () things
2011-12-06 04:43:54 UTC <tgeeky> and accumulating the () units?
2011-12-06 04:43:58 UTC <luite> (another name for terminal object)
2011-12-06 04:44:13 UTC <byorgey> tgeeky: hmm?
2011-12-06 04:44:28 UTC <tgeeky> isn't () "unit" in Haskell?
2011-12-06 04:44:34 UTC <tgeeky> byorgey: nevermind, go on :)
2011-12-06 04:44:52 UTC <byorgey> tgeeky: yes, () is "unit", the terminal object in the category Hask
2011-12-06 04:45:05 UTC <tgeeky> ohhhhh
2011-12-06 04:45:12 UTC <tgeeky> I was never told that last part.
2011-12-06 04:45:27 UTC <byorgey> really I should have been writing 1 above for the terminal object, I was trying to use your intuition for the unit type
2011-12-06 04:45:37 UTC <tgeeky> yes, I am happy to use 1 or 0
2011-12-06 04:45:42 UTC <byorgey> sorry for the confusion =)
2011-12-06 04:45:44 UTC <byorgey> ok
2011-12-06 04:46:09 UTC <tgeeky> so
2011-12-06 04:46:12 UTC <tgeeky> this fact is surprising to me:
2011-12-06 04:46:17 UTC <tgeeky> In the category of fields, there are no initial or terminal objects. However, in the subcategory of fields of characteristic p, the prime field of characteristic p forms an initial object.
2011-12-06 04:46:48 UTC <tgeeky> (from wikipedia, so may not be a fact)
2011-12-06 04:46:56 UTC <byorgey> why is that surprising to you?
2011-12-06 04:47:34 UTC <tgeeky> ACTION thinks about it.
2011-12-06 04:47:43 UTC <byorgey> (it's an honest question, didn't mean for it to sound judgmental)
2011-12-06 04:47:52 UTC <tgeeky> I would have thought something gave you an initial element (like a vector, but that's a vector space over a field)
2011-12-06 04:47:57 UTC <tgeeky> like a zero vector or something
2011-12-06 04:48:58 UTC <luite> the objects must be fields here
2011-12-06 04:49:08 UTC <byorgey> so if the prime field of characteristic p is initial, that means there is a unique field homomorphism from it to any other field of characteristic p
2011-12-06 04:49:09 UTC <tgeeky> yeah, which is why I'm obviously wrong
2011-12-06 04:49:30 UTC <tgeeky> byorgey: but that is a trivial fact, isn't it?
2011-12-06 04:49:38 UTC <tgeeky> there is only one field for every prime p?
2011-12-06 04:49:45 UTC <byorgey> which is basically saying that all fields of characteristic p have the prime field as a subfield
2011-12-06 04:50:06 UTC <byorgey> there is only one field with p elements for prime p
2011-12-06 04:50:14 UTC <byorgey> but there are lots of fields with characteristic p, right?
2011-12-06 04:50:22 UTC <tgeeky> yes
2011-12-06 04:51:25 UTC <byorgey> back in a bit
2011-12-06 05:06:59 UTC <byorgey> back
2011-12-06 05:57:29 UTC <luite> anyone with some html knowledge here? I'm trying to do a multicolumn layout but the body element box won't scale with the contents div, even though it's not absolutely positioned
2011-12-06 05:57:55 UTC <tgeeky> pass
2011-12-06 06:09:11 UTC <luite> hm fixed it
2011-12-06 06:09:17 UTC <luite> html is annoying
2011-12-06 06:11:22 UTC <luite> apparently the way to make columns is using floats (those have the same meaning as in latex)
2011-12-06 06:12:18 UTC <luite> +only
2011-12-06 06:17:13 UTC <luite> and then you have to carefully place empty elements after the columns to make sure that they get enough space
2011-12-06 06:21:29 UTC <ClaudiusMaximus> <div style="clear: both;"></div>, or something
2011-12-06 06:21:55 UTC <ClaudiusMaximus> after the floats, before the end tag of the container
2011-12-06 06:25:39 UTC <luite> that yes
2011-12-06 06:26:30 UTC <ClaudiusMaximus> (ot rant)  glewinfo is rubbish - it reports OK for all the fun things, but when i go to use them it segfaults with a jump to 0
2011-12-06 06:27:41 UTC <luite> hehe everything sucks ;p
2011-12-06 06:29:58 UTC <ClaudiusMaximus> couldn't sleep, so i thought i'd try and write some fractals in glsl using transform feedback, old laptop only goes to opengl 2, desktop supports it but the other room is warmer..
2011-12-06 06:35:17 UTC <luite> couldn't sleep either, so i thought i'd try and convert my wolfgang photoshop frontpage mockup to html
2011-12-06 12:09:51 UTC <ClaudiusMaximus> got it working
2011-12-06 12:30:56 UTC <luite> any pics to prove it? :p
2011-12-06 12:38:01 UTC <ClaudiusMaximus> looks like the mandelbrot set to me :)
2011-12-06 12:38:12 UTC <ClaudiusMaximus> just about to push the code...
2011-12-06 12:41:20 UTC <ClaudiusMaximus> https://gitorious.org/ruff/ruff-render-gl
2011-12-06 12:48:31 UTC <luite> is that easy to build?
2011-12-06 12:49:43 UTC <luite> hmm, errors here
2011-12-06 12:54:52 UTC <ClaudiusMaximus> probably not - i'm on debian stable with libglew pulled from testing
2011-12-06 12:55:12 UTC <ClaudiusMaximus> and i've got quite a beefy gpu here
2011-12-06 12:55:16 UTC <luite> right, os x here, with a very old gcc (4.2 llvm)
2011-12-06 12:55:59 UTC <luite> a recent gpu, though not a particularly fast one
2011-12-06 12:56:01 UTC <ClaudiusMaximus> gonna try it on my laptop, maybe that can provide an insight into build issues
2011-12-06 12:56:11 UTC <luite> forgot the model, lemme check
2011-12-06 12:57:20 UTC <luite> radeon 6490m
2011-12-06 12:57:33 UTC <luite> opengl 4.1
2011-12-06 12:58:22 UTC <ClaudiusMaximus> there are build instructions in the README, it's a bit hacky
2011-12-06 12:58:49 UTC <ClaudiusMaximus> i based it on some opengl sample code, which has its own framework that isn't distributed sensibly
2011-12-06 12:58:53 UTC <luite> yeah I don't think I have ogl-samples :)
2011-12-06 12:59:18 UTC <ClaudiusMaximus> it's quite huge..
2011-12-06 13:03:32 UTC <ClaudiusMaximus> segfaults on my laptop... heh
2011-12-06 13:09:25 UTC <ClaudiusMaximus> fixed, laptop doesn't support glDrawArraysInstanced, but glDrawArrays works just as well for my 1 instance
2011-12-06 23:30:58 UTC <luite> byorgey: has there been any progress in the discussion of my subdomain request? are the issues security related, or is the haskell.org domain maybe not the right place for such a site?
2011-12-06 23:31:59 UTC <fryguybob> Perhaps they are stalled waiting to see if they can have a domain with the wolf face character.
2011-12-06 23:32:59 UTC <luite> hehe yeah :)
2011-12-07 00:41:33 UTC <luite> http://hdiff.luite.com/tmp/frontpage-screenshot.png <- yay, a bit boring maybe since you've already seen this, but now it's a screenshot instead of a photoshopped mockup :)
2011-12-07 00:44:07 UTC <fryguybob> Nice!
2011-12-07 00:45:06 UTC <luite> it even automatically changes the image every 15 seconds for added annoyingivity
2011-12-07 01:14:23 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add more comments to D.TwoD.Apollonian (and 7 more)
2011-12-07 01:14:48 UTC <fryguybob> @more
2011-12-07 04:38:10 UTC <byorgey> luite: nice!
2011-12-07 04:38:36 UTC <byorgey> fryguybob: the darcs-repo-watching plugin seems broken
2011-12-07 04:39:12 UTC <byorgey> it was apparently written in 2005, I'm amazed it still compiles.
2011-12-07 04:40:10 UTC <tgeeky> byorgey: so I thought (and searched some) about "Does the Kleisi category for [] have a terminal object?"
2011-12-07 04:40:21 UTC <tgeeky> and I am essentially guessing
2011-12-07 04:40:37 UTC <tgeeky> either (yes), and their terminial and initial object are the same
2011-12-07 04:42:39 UTC <tgeeky> or (no), because the Kleisi triple is made up with two natural transformations
2011-12-07 04:42:49 UTC <tgeeky> and I'm hoping that I'm wrong twice!
2011-12-07 04:43:21 UTC <byorgey> tgeeky: you're right once and wrong once =)
2011-12-07 04:43:22 UTC <tgeeky> I also wondered if _|_ is the terminal object
2011-12-07 04:43:47 UTC <tgeeky> byorgey: well, I meant, I was hoping for the situation that my answer (yes or no) was mapped to the wrong reason
2011-12-07 04:44:03 UTC <byorgey> tgeeky: well, this whole time I have been sort of assuming that we're talking about a variant of Haskell without _|_
2011-12-07 04:44:25 UTC <byorgey> tgeeky: at any rate _|_ is a *value*, not a type, so it can't be a terminal object
2011-12-07 04:44:50 UTC <byorgey> tgeeky: the initial object (0) of the underlying category is both the initial and terminal object in the Kleisli category for []
2011-12-07 04:45:19 UTC <byorgey> it's the initial object in K_[] for the same reason that it's the initial object in the underlying category.
2011-12-07 04:45:38 UTC <tgeeky> because K_[] just subsumes all of the objects
2011-12-07 04:46:04 UTC <byorgey> tgeeky: that, and because arrows in K_[] are arrows of the form A -> [B] in the underlying category
2011-12-07 04:46:25 UTC <tgeeky> ok.
2011-12-07 04:46:34 UTC <byorgey> so arrows from A in K_[] are also arrows from A in the underlying category (which I will henceforth call C)
2011-12-07 04:47:05 UTC <byorgey> however, arrows from A to 0 in K_[]  are  arrows from A to [0] in C
2011-12-07 04:47:22 UTC <byorgey> but [0] has only one element, namely the empty list
2011-12-07 04:47:37 UTC <byorgey> because 0 corresponds to the 'Void' type with no values
2011-12-07 04:48:03 UTC <byorgey> so there is always exactly one function from anything to [0], namely, const []
2011-12-07 04:48:21 UTC <byorgey> I don't know if that made sense.  It's not really that important =P
2011-12-07 04:48:52 UTC <tgeeky> byorgey: hehe :)
2011-12-07 04:48:58 UTC <tgeeky> yes,
2011-12-07 04:49:09 UTC <tgeeky> "const []" was on my list
2011-12-07 04:49:26 UTC <tgeeky> i'm a little happy about that
2011-12-07 04:51:15 UTC <byorgey> =)
2011-12-07 08:26:11 UTC <luite> hmm
2011-12-07 15:09:46 UTC <luite> oh noes, diabot has the same problems as lambdabot
2011-12-07 15:33:54 UTC <byorgey> luite: unsurprising since diabot basically *is* lambdabot with a few minor modifications
2011-12-07 15:34:10 UTC <byorgey> > 2^50
2011-12-07 15:34:15 UTC <diabot>   mueval-core: Time limit exceeded
2011-12-07 15:34:18 UTC <byorgey> > 2^50
2011-12-07 15:34:21 UTC <diabot>   1125899906842624
2011-12-07 15:37:06 UTC <luite> byorgey: someone in #haskell patched lambdabot to automatically reconnect
2011-12-07 15:37:19 UTC <byorgey> oh, nice
2011-12-07 15:37:30 UTC <luite> dunno if it's in the darcs repository :)
2011-12-07 15:37:45 UTC <byorgey> well, once it is I will merge it =)
2011-12-07 15:38:12 UTC <byorgey> correction: once it is and once I am done writing this grant proposal, whichever comes later
2011-12-07 15:38:25 UTC <luite> hehe
2011-12-07 17:43:59 UTC <diabot> [diagrams-postscript:fryguybob] Fixed colors updated for core 0.5. (and 8 more)
2011-12-07 18:22:21 UTC <byorgey> ACTION writes a force-based tree layout algorithm using a tree zipper!
2011-12-07 18:59:56 UTC <ClaudiusMaximus> i wrote a tree layouter once, wasn't very good though
2011-12-07 19:00:11 UTC <ClaudiusMaximus> everything was too wide and flat
2011-12-07 19:28:24 UTC <byorgey> ClaudiusMaximus: that's exactly why I'm using an iterative force-based method
2011-12-07 19:33:14 UTC <byorgey> you start by computing a simple layout which is too wide and flat, then model it as a bunch of point charges connected by springs
2011-12-07 19:33:23 UTC <byorgey> optionally constraining the nodes to only move horizontally.
2011-12-07 19:43:23 UTC <ClaudiusMaximus> cool
2011-12-07 21:24:43 UTC <tgeeky> ugh! cabal build all 140 modules in darcs (twice!) and then complained at the end that the path for libcurl didn't make sense!
2011-12-07 21:26:13 UTC <tgeeky> byorgey: if I eventually give up on compiling darcs (I might use the precompiled version) -- are your git repositories quickly sycned?
2011-12-07 21:48:28 UTC <luite> i believe they aren't synched at all due to a bug in the darcs-git bridge
2011-12-07 21:52:51 UTC <tgeeky> ok. i gave up and downloaded precompiled
2011-12-07 22:03:32 UTC <luite> you're on windows right?
2011-12-08 02:50:11 UTC <tgeeky> luite: yeppers
2011-12-08 02:51:40 UTC <luite> yeeesh
2011-12-08 02:52:09 UTC <tgeeky> as far as I know, it's still a necessity
2011-12-08 02:52:32 UTC <tgeeky> there's a bug in the nvidia drivers for linux that causes problems with multi-card multi-gpu setups
2011-12-08 07:11:32 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/tree.mp4  =)
2011-12-08 07:17:26 UTC <luite> hehe very springy
2011-12-08 07:18:21 UTC <luite> one of my first haskell programs was a force directed graph layouter :)
2011-12-08 07:20:28 UTC <byorgey> nice =)
2011-12-08 07:21:31 UTC <byorgey> I've written something like it before, but it was pretty ad-hoc.  This time around I actually did research (Hooke's law, Coloumb's law, etc...)
2011-12-08 07:23:51 UTC <byorgey> another one: http://www.cis.upenn.edu/~byorgey/fulltree.mp4
2011-12-08 07:26:44 UTC <luite> did you use the diagrams animation things for this?
2011-12-08 07:27:36 UTC <byorgey> luite: yep
2011-12-08 07:32:23 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/tree2d.mp4   -- removing the y-coordinate restriction on nodes
2011-12-08 07:40:45 UTC <luite> hmm, are there trees that it draws with intersecting edges?
2011-12-08 07:45:11 UTC <byorgey> luite: I don't think so
2011-12-08 07:45:53 UTC <byorgey> well, perhaps if you thre some massive tree at it you could cause some glitches
2011-12-08 07:46:09 UTC <byorgey> but in principle I think if you make the simulation fine-grained enough you won't end up with crossing edges
2011-12-08 07:50:32 UTC <luite> hmm, I think that the global optimum doesn't have them, but maybe you can push it towards some other state with the right initial conditions
2011-12-08 07:51:12 UTC <byorgey> yes, the initial conditions are important
2011-12-08 07:51:29 UTC <byorgey> I'm pretty sure you could end up with crossing edges with the right initial conditions.
2011-12-08 07:51:44 UTC <luite> I mean conditions that don't have crossing edges, that look like what you start with :)
2011-12-08 07:52:12 UTC <luite> would be too easy otherwise :)
2011-12-08 07:52:21 UTC <byorgey> ok, in that case, intuitively it seems to me that if you don't have crossing edges to start, you won't get any
2011-12-08 07:52:26 UTC <byorgey> but I don't have a proof =)
2011-12-08 07:55:34 UTC <luite> hmm, do your vertices have inertia?
2011-12-08 08:00:17 UTC <byorgey> luite: yes, assuming I understand your question correctly
2011-12-08 08:01:23 UTC <byorgey> each node has a velocity which is tracked
2011-12-08 08:01:38 UTC <byorgey> at each step all the forces acting on a node are used to update the velocity
2011-12-08 08:01:52 UTC <byorgey> then the velocity is used to update the position.
2011-12-08 08:02:06 UTC <luite> yeah that's what I mean. the alternative is to "freeze" the system each step, just taking the acceleration into account
2011-12-08 08:02:14 UTC <byorgey> there's also a damping factor so velocities decay over time even with no forces acting.
2011-12-08 08:02:43 UTC <luite> I think it should be possible to get crossing edges then :p
2011-12-08 08:02:49 UTC <luite> at least, it sounds like a challenge
2011-12-08 08:03:04 UTC <byorgey> hmm, maybe you're right
2011-12-08 08:03:20 UTC <byorgey> well, once I release it feel free to make crossing edges =)
2011-12-08 08:04:24 UTC <byorgey> anyway, I'm off to bed, g'night
2011-12-08 08:04:35 UTC <luite> night :)
2011-12-08 08:52:43 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add more comments to D.TwoD.Apollonian (and 7 more)
2011-12-08 08:52:56 UTC <luite> again?
2011-12-08 14:12:47 UTC <tgeeky> lol
2011-12-08 14:12:57 UTC <tgeeky> keeps teasing me
2011-12-08 14:14:45 UTC <luite> must be a whole lotta comments
2011-12-08 14:15:33 UTC <tgeeky> luite: do you use hdiff to manage all of your cabal packages?
2011-12-08 14:15:53 UTC <tgeeky> luite: what tools do you use to manage different versions of ghc, and different cabal package universes
2011-12-08 14:16:26 UTC <luite> uh I have a simple script that sets up symlinks to the right ghc and cabal-install version, that's it
2011-12-08 14:19:59 UTC <tgeeky> what the hell. http://science.slashdot.org/story/11/12/08/041253/supreme-court-legitimizing-medical-patents <-- more rediculiousness
2011-12-08 16:09:35 UTC <tgeeky> byorgey: hey, very specific competition: http://jerseyshots.com/viz/newborn.html
2011-12-08 16:14:36 UTC <byorgey> tgeeky: hah, nice
2011-12-08 16:14:58 UTC <tgeeky> that chart makes me think babies are a ton of work
2011-12-08 16:15:00 UTC <byorgey> tgeeky: they obviously kept much more accurate data than we did!
2011-12-08 16:15:13 UTC <tgeeky> byorgey: yeah, I am thinking maybe there is false accuracy in there :)
2011-12-08 16:15:28 UTC <byorgey> Breast feeding (right side): 11 mins 35 secs
2011-12-08 16:15:47 UTC <byorgey> tgeeky: hehe, that's because babies ARE a ton of work =)
2011-12-08 16:16:03 UTC <tgeeky> he must have been waiting after his kid's birth with a bag full of stopwatches
2011-12-08 16:16:36 UTC <byorgey> apparently so
2011-12-08 16:18:33 UTC <tgeeky> byorgey: I'm looking for docs to help me get diagrams working
2011-12-08 16:19:05 UTC <tgeeky> i found it. nevermind.
2011-12-08 16:19:31 UTC <byorgey> heh, ok =)
2011-12-08 16:33:24 UTC <tgeeky> hmm... installing gtk is "stuck" at 'preprocessing library gtk-0.12.2' .. or at least, it's taking a long time
2011-12-08 16:34:16 UTC <ClaudiusMaximus> it does take long time
2011-12-08 16:34:36 UTC <tgeeky> yep. finally just started. 207 modules, wow!
2011-12-08 16:34:51 UTC <ClaudiusMaximus> and if TMPDIR isn't big enough, build fails (eg, with profiling enabled, 100MB tmpfs isn't enough)
2011-12-08 16:35:12 UTC <tgeeky> ClaudiusMaximus: ah. I'm on windows, so I have no such problems.
2011-12-08 16:35:15 UTC <ClaudiusMaximus> :)
2011-12-08 16:35:47 UTC <ClaudiusMaximus> luckily cabal install respects the TMPDIR env var on linux, i just have to remember to set it when installing gtk
2011-12-08 16:57:21 UTC <tgeeky> ok, I've got it installed. And I have the Apollonian.lhs in diagrams-contrib, and Apollonius.lhs in diagrams-doc/examples.
2011-12-08 16:57:31 UTC <tgeeky> How can I can has pretty pictures?
2011-12-08 17:00:03 UTC <tgeeky> ah. build.hs.
2011-12-08 17:12:15 UTC <tgeeky> hm. that renders the Apollonius in examples. How do I get a picture out of diagrams-contrib/src/Diagrams/TowD/Apollonian.hs ?
2011-12-08 17:16:48 UTC <byorgey> tgeeky: IIRC the Apollonius.lhs in diagrams-doc/examples was just some early code and doesn't really do anything
2011-12-08 17:17:03 UTC <tgeeky> byorgey: yes, it just makes one generation of one gasket
2011-12-08 17:17:29 UTC <tgeeky> though it does prove that i have diagrams installed on windows. (and it was less hassle then your warning on google code wiki suggests)
2011-12-08 17:17:40 UTC <byorgey> tgeeky: I should add some documentation to the one in diagrams-contrib explaining how to use it
2011-12-08 17:17:53 UTC <byorgey> but for the moment I'm trying to find the .hs file I used to generate the pictures in my blog post
2011-12-08 17:18:03 UTC <byorgey> tgeeky: yay!
2011-12-08 17:19:03 UTC <byorgey> tgeeky: well, I've got to go now, I'll have to look for it later
2011-12-08 17:19:09 UTC <tgeeky> byorgey: I don't know if it's ghc7.2.1, or what, but the install process was simply: install gtk-all-in-one; add to $PATH; cabal install gtk; build diagrams
2011-12-08 17:19:17 UTC <tgeeky> byorgey: ok, thanks, i have to go too
2011-12-08 17:19:31 UTC <byorgey> tgeeky: in the meantime, the short answer is, if you have something of type  Diagram Cairo R2,  just pass it as an arugment to 'defaultMain' from diagrams-cairo
2011-12-08 17:20:04 UTC <byorgey> so  import Diagrams.TwoD.Apollonian; use it to make something of type Diagram,   main = defaultMain yourDiagram
2011-12-08 18:07:08 UTC <ClaudiusMaximus> is this anything like http://claudiusmaximus.goto10.org/g/pack/circles.svg (javascript-powered)?
2011-12-08 18:15:32 UTC <byorgey> ClaudiusMaximus: yes, it's exactly the same
2011-12-08 18:16:00 UTC <ClaudiusMaximus> cool :)
2011-12-08 18:17:12 UTC <byorgey> ClaudiusMaximus: ah, that's a clever way to keep track of the colors, I hadn't thought of that =)
2011-12-08 18:17:20 UTC <byorgey> 6 - a - b - c
2011-12-08 18:18:41 UTC <byorgey> ACTION will have to add that to the version in diagrams-contrib
2011-12-08 18:19:23 UTC <ClaudiusMaximus> i don't remember how i came up with that, i barely remember writing it long time ago
2011-12-08 18:20:02 UTC <byorgey> hehe
2011-12-08 18:20:54 UTC <byorgey> you appear to be using the generalized version of Descartes' Theorem in terms of the products of signed bends and center coordinates as complex numbers
2011-12-08 18:21:06 UTC <byorgey> if you came up with that on your own I would be super-impressed =)
2011-12-08 18:21:29 UTC <ClaudiusMaximus> i mostly copy/pasted equations from wikipedia from what i remember
2011-12-08 18:21:45 UTC <byorgey> tgeeky pointed me to http://arxiv.org/PS_cache/math/pdf/0101/0101066v1.pdf  which is how I found out about it
2011-12-08 18:22:18 UTC <byorgey> I don't recall wikipedia talking about the generalized form of Descartes' Theorem. But maybe I wasn't looking in the right place.
2011-12-08 18:24:12 UTC <ClaudiusMaximus> http://en.wikipedia.org/wiki/Descartes%27_theorem#Complex_Descartes_theorem
2011-12-08 18:25:06 UTC <ClaudiusMaximus> nice paper from initial glance, disappointing lack of nD graphics!
2011-12-08 18:25:33 UTC <ClaudiusMaximus> and woohoo, if arxiv.org now gives sensible filenames with .pdf suffix in general
2011-12-08 18:26:07 UTC <ClaudiusMaximus> got fed up with renaming all the files to add the extension so tab completion would work
2011-12-08 18:26:11 UTC <byorgey> hehe
2011-12-08 18:26:20 UTC <byorgey> what do you know, it is on wikipedia
2011-12-08 18:26:35 UTC <ClaudiusMaximus> and also fed up with 100s of pdfs with cryptic filenames and not knowing which one i want
2011-12-08 18:26:56 UTC <ClaudiusMaximus> locate thesis.pdf | wc -l -> some large number
2011-12-08 18:27:03 UTC <byorgey> hah
2011-12-08 18:28:03 UTC <ClaudiusMaximus> i once accidentally did evince * in my pdf dir, had to ssh in to kill it...
2011-12-08 18:28:16 UTC <byorgey> hehehe, whoops
2011-12-08 18:46:23 UTC <tgeeky> ACTION is back
2011-12-08 18:46:35 UTC <tgeeky> there is a suite of ~ 8 papers from Lagarais et al
2011-12-08 18:47:07 UTC <tgeeky> and the apollonian fractal (and the apollonian network) are related to the 4-coloring theorem
2011-12-08 18:47:19 UTC <tgeeky> and the D3 gaskets are related to the (2-n) coloring problem
2011-12-08 18:58:23 UTC <tgeeky> ClaudiusMaximus: I have some papers about the 3D (sphere) fractal if you'd like
2011-12-08 18:58:28 UTC <tgeeky> that include pictures and generation methods
2011-12-08 18:59:36 UTC <ClaudiusMaximus> tgeeky: not sure i'd have time to do them justice, too many other things...
2011-12-08 18:59:45 UTC <ClaudiusMaximus> tgeeky: but thanks!
2011-12-08 19:00:04 UTC <tgeeky> ClaudiusMaximus: you and your mandlebrot love
2011-12-08 19:00:08 UTC <ClaudiusMaximus> yeah...
2011-12-08 19:00:36 UTC <tgeeky> the circle fractals are like the orphan annie of the fractal world
2011-12-08 19:23:29 UTC <byorgey> hahaha
2011-12-08 20:39:55 UTC <tgeeky> they are!
2011-12-08 20:40:37 UTC <tgeeky> everyone is so fascinated with the much more complex, and much more arbitrary fractals (like mandlebrot, julia, etc)
2011-12-08 20:42:37 UTC <tgeeky> http://en.wikipedia.org/wiki/List_of_fractals_by_Hausdorff_dimension
2011-12-08 20:43:06 UTC <tgeeky> there are only three fractals with circles -- and they are all the same fractal :O
2011-12-08 20:49:55 UTC <ClaudiusMaximus> the Mandelbrot Set has 1 circle in it..
2011-12-08 22:08:11 UTC <tgeeky> ClaudiusMaximus: the initial circle?
2011-12-08 22:08:30 UTC <ClaudiusMaximus> the one to the left of the cardioid
2011-12-08 22:08:37 UTC <tgeeky> yeah, that's what i meant
2011-12-08 22:08:51 UTC <tgeeky> none of the other objects deeper are circular?
2011-12-08 22:09:06 UTC <ClaudiusMaximus> apparently not (though very close to circular)
2011-12-09 02:05:20 UTC <luite> hmm what's the relation?
2011-12-09 02:05:54 UTC <luite> (between 4-coloring andthe apollonian fractal)
2011-12-09 02:09:48 UTC <tgeeky> luite: it's trivially 4-colorable
2011-12-09 02:10:11 UTC <tgeeky> (and so is its inverse, apollonian networks) -- I think
2011-12-09 02:10:39 UTC <tgeeky> luite: I don't know what this 2*n color business is about
2011-12-09 02:10:39 UTC <luite> yeah but is that really an interesting relation? I can think of more things that are trivially 4-colorable :p
2011-12-09 02:10:52 UTC <tgeeky> luite: yes, because the property holds in higher dimensions too
2011-12-09 02:11:38 UTC <luite> ah, hmm, still with 4 colors, or does the number increase?
2011-12-09 02:11:44 UTC <tgeeky> luite: still 4
2011-12-09 02:12:00 UTC <tgeeky> that said, i'm cheaing in dimensions > 4, because the fractal starts to overlap
2011-12-09 02:12:12 UTC <tgeeky> I'm not really well versed in the 4-color theorem
2011-12-09 02:12:58 UTC <luite> I only know it for planar graphs, is there a more general version
2011-12-09 02:12:59 UTC <luite> ?
2011-12-09 02:13:23 UTC <tgeeky> luite: I think attempting to prove 4-coloring for nonplanar graphs is always a hard thing
2011-12-09 02:13:35 UTC <tgeeky> I thought the 4 color theorem was proved in our lifetime ,no?
2011-12-09 02:13:53 UTC <luite> yes, it's a famous computer assisted proof
2011-12-09 02:13:55 UTC <tgeeky> luite: I learned about this "n-color compositions of 2n" just recently
2011-12-09 02:14:00 UTC <tgeeky> http://oeis.org/A001353
2011-12-09 02:14:08 UTC <tgeeky> see the Guo link
2011-12-09 02:14:16 UTC <tgeeky> http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&ved=0CB4QFjAA&url=http%3A%2F%2Fwww.ias.ac.in%2Fmathsci%2Fvol120%2Ffeb2010%2FPM00051.PDF&ei=9G7hTtTxGdGXtweWjdHxAw&usg=AFQjCNGORDm_3Z4DUfKyDdYGtmnwMjVpLw
2011-12-09 02:14:20 UTC <tgeeky> http://www.ias.ac.in/mathsci/vol120/feb2010/PM00051.PDF
2011-12-09 02:14:29 UTC <tgeeky> i wish someone could explain that to me :O
2011-12-09 02:15:02 UTC <luite> oh the first proof was apparently already in 1976
2011-12-09 02:15:37 UTC <tgeeky> luite: and "obviously" (I say), the vast majority of fractals have no chance at 4-coloring
2011-12-09 02:15:49 UTC <luite> I heard that some people were trying to re-do the proof with coq or something
2011-12-09 02:15:57 UTC <tgeeky> that sounds really difficult
2011-12-09 02:16:58 UTC <tgeeky> Additionally in 2005, the theorem was proven by Georges Gonthier with general purpose theorem proving software.
2011-12-09 02:17:18 UTC <tgeeky> in Coq
2011-12-09 02:17:19 UTC <tgeeky> http://research.microsoft.com/en-us/people/gonthier/4colproof.pdf
2011-12-09 02:18:23 UTC <tgeeky> is byorgey sufficiently clever to do all kinds of stuff in coq, or does he just get by?
2011-12-09 02:18:25 UTC <luite> ah right that must be what I had heard of, I didn't recall it being already done, though now that I see it, I vaguely remember reading some of that paper :)
2011-12-09 02:18:46 UTC <luite> I have no idea how much coq byorgey knows
2011-12-09 02:18:48 UTC <tgeeky> SPJ made it sound like theorem proving experts are rare
2011-12-09 02:19:24 UTC <luite> it takes a lot of time to get productive in them :(
2011-12-09 02:20:09 UTC <tgeeky> luite: anyway, if you look at the sequences underlying the apollonian fractal
2011-12-09 02:20:33 UTC <tgeeky> it's pretty plain that the fractal is connected with Pisot Numbers (and hence Salem numbers)
2011-12-09 02:20:37 UTC <tgeeky> which might not be surprising
2011-12-09 02:20:47 UTC <tgeeky> http://en.wikipedia.org/wiki/Pisot%E2%80%93Vijayaraghavan_number
2011-12-09 02:21:13 UTC <tgeeky> I find it surprising, and hard to understand.
2011-12-09 02:22:41 UTC <tgeeky> luite: figure out what this 2*n color stuff is all about for me :)
2011-12-09 02:22:59 UTC <luite> oh I didn't know these Pisot-Vijayaraghavan numbers
2011-12-09 02:23:08 UTC <tgeeky> luite: yeah
2011-12-09 02:23:38 UTC <tgeeky> (they are, among other things, what the golden ratio (widely known), silver ratio (less widely known, though A5 paper...), and plastic constant) are minimal examples of
2011-12-09 02:23:42 UTC <luite> not now, I still have to pack all my stuff and get to the airport in a few hours :p
2011-12-09 02:23:50 UTC <tgeeky> luite: whistler!?
2011-12-09 02:23:56 UTC <luite> first vancouver
2011-12-09 02:24:04 UTC <tgeeky> luite: fun times. have fun. be safe!
2011-12-09 02:24:24 UTC <tgeeky> you'll still be checking in, I presume. You're hooked on the tubes!
2011-12-09 02:24:25 UTC <luite> still have to do a lot of work on my presentation (wednesday)
2011-12-09 02:24:36 UTC <tgeeky> luite: presenting what, where?
2011-12-09 02:24:41 UTC <luite> paper at icdm2011
2011-12-09 02:25:20 UTC <luite> yeal all appartments/hotels have wifi these days, and I bring my laptop and ipad :)
2011-12-09 02:26:22 UTC <tgeeky> luite: well knock em dead.
2011-12-09 02:26:43 UTC <tgeeky> is this your first paper?
2011-12-09 02:26:49 UTC <luite> no
2011-12-09 02:27:01 UTC <tgeeky> ACTION doesn't even know who you are affiliated with
2011-12-09 02:27:11 UTC <luite> utrecht univ.
2011-12-09 02:27:36 UTC <tgeeky> On Generating all Optimal Monotone Classifications
2011-12-09 02:28:32 UTC <tgeeky> ACTION reads the abstract, learns next to nothing
2011-12-09 02:28:33 UTC <luite> yeah I don't know much about data mining, but the other guy had an idea but it involved some graph algorithm stuff so he asked me to come up with an algorithm
2011-12-09 02:28:55 UTC <tgeeky> luite: monotonicity comes up a lot in the circle fractal too :O
2011-12-09 02:29:06 UTC <tgeeky> i don't even know if it's the same sense though
2011-12-09 02:29:13 UTC <luite> in data mining it really means that your output variable has some order
2011-12-09 02:29:21 UTC <luite> total order
2011-12-09 02:29:23 UTC <tgeeky> yeah, I figured
2011-12-09 02:29:37 UTC <luite> and that your samples are partially ordered somehow
2011-12-09 02:29:40 UTC <tgeeky> yeah, I think it's the same thing
2011-12-09 02:29:54 UTC <tgeeky> luite: yeah, that a (provable) total ordering emerges from partial orderings?
2011-12-09 02:30:05 UTC <tgeeky> or something like that?
2011-12-09 02:30:38 UTC <luite> well the partial ordering says that if a `pred` b then f(a) =< f(b)
2011-12-09 02:30:47 UTC <luite> where pred is the partial order on the input
2011-12-09 02:30:51 UTC <luite> and =< the total order on the output
2011-12-09 02:31:18 UTC <luite> now if you sample real data, those things are often ot true
2011-12-09 02:31:30 UTC <tgeeky> but probably not in general?
2011-12-09 02:32:32 UTC <luite> uh not sure waht you mean, and I'm sure I'm explaining it incorrectly
2011-12-09 02:32:47 UTC <tgeeky> that last statement was obvious (and not relevant)
2011-12-09 02:32:52 UTC <tgeeky> of course not all data is montone :O
2011-12-09 02:32:55 UTC <tgeeky> monotone
2011-12-09 02:33:18 UTC <tgeeky> luite: I think this is the closest thing to what I found in the apollonian papers (for all integral apollonian gaskets)
2011-12-09 02:33:21 UTC <tgeeky> http://en.wikipedia.org/wiki/Monotonic_function
2011-12-09 02:33:25 UTC <tgeeky> the definition under "in computer science"
2011-12-09 02:34:08 UTC <tgeeky> the guarantee with the circle fractal is, that if you have four numbers (or eight, in complex) numbers which satisfy the descartes equation
2011-12-09 02:35:04 UTC <tgeeky> that you have termination gurantees all the way back down to that gasket's root quadruple
2011-12-09 02:35:41 UTC <luite> an example is this: say you want to estimate house prices, and you have two attributes, lot size and distance to prime location. then both attributes have a monotone relation to the output (price category)
2011-12-09 02:36:03 UTC <tgeeky> that makes very much more sense
2011-12-09 02:36:33 UTC <tgeeky> yeah, there is no world in which you'll find lots of hidden bargains on (large lots, prime locations)
2011-12-09 02:36:40 UTC <luite> now you still have a monotone relation, but now with a partial order if you combine the two attributes (product order actually)
2011-12-09 02:37:00 UTC <luite> so if you have a house that is as close to prime as another, but wiht a bigger lot size, then it can't get a lower cost estimate
2011-12-09 02:37:11 UTC <tgeeky> luite: i see. it's partial simply because it could flatten out as you trade off in the two attributes.
2011-12-09 02:37:17 UTC <luite> but since it's a partial order, there is no such restriction if the bigger one ws further away
2011-12-09 02:37:39 UTC <tgeeky> but nevertheless, the pair of them retains its smoothness
2011-12-09 02:37:47 UTC <luite> yeah the usual order for data mining applications is just the product order for all attributes
2011-12-09 02:37:56 UTC <tgeeky> ACTION did not know that
2011-12-09 02:38:14 UTC <tgeeky> that continues up to n-tuples? (n products, i guess?)
2011-12-09 02:38:29 UTC <tgeeky> so for (large lots, prime locations, not near sexual offenders)
2011-12-09 02:38:44 UTC <luite> the algoritm works for arbitrary partial orders
2011-12-09 02:39:00 UTC <tgeeky> that seems particularly clever. is it?
2011-12-09 02:39:35 UTC <luite> anway since the actual sampled data usualy has some violations of this order, the goal is to change some samples so that they can be used as input for a monotone classifier
2011-12-09 02:40:11 UTC <luite> so you have noisy input, you output new samples, but now with all the monotone relations satisifed
2011-12-09 02:40:38 UTC <luite> but there are often multiple ways to change stuff
2011-12-09 02:40:55 UTC <luite> for example do you upgrade one house that seems to be valued too low in the sample data
2011-12-09 02:41:06 UTC <luite> or do you downgrade another one
2011-12-09 02:41:38 UTC <tgeeky> and there's an optimal way to do this?
2011-12-09 02:42:31 UTC <luite> yes, you define a loss function, say the number of categories you need to move a house is the loss for that sample
2011-12-09 02:42:38 UTC <luite> the total loss is the sum of all of those
2011-12-09 02:43:02 UTC <luite> you can also use the square
2011-12-09 02:43:57 UTC <luite> anyway, with discrete output vars, you often have multiple ways to relabel stuff
2011-12-09 02:44:38 UTC <luite> for example house a and b might be both category 3 or category 4, but which one doesn't change your loss
2011-12-09 02:45:26 UTC <luite> this is the typical pattern: house a needs to be valued as least as high as house b, but it was lower in the sample data. the only optimal solutions are where they have the same category
2011-12-09 02:46:29 UTC <luite> the usual, existing algorithms would find a single relabeling
2011-12-09 02:47:03 UTC <luite> the new algorithm from this paper outputs a new partial order, describing all possible optimal ways to do this
2011-12-09 02:47:45 UTC <tgeeky> luite: that sounds like it involves a complexity jump?
2011-12-09 02:48:02 UTC <tgeeky> or are you just taking advantage of processing you've already done (ie, to find the single relabelling)
2011-12-09 02:48:03 UTC <luite> nope it actually doesn't increase complexity at all
2011-12-09 02:48:38 UTC <luite> but you need a few extra steps
2011-12-09 02:49:14 UTC <luite> it depends on the loss function how you do it
2011-12-09 02:49:26 UTC <luite> L2 loss, quadratic distance, is the easiest
2011-12-09 02:49:32 UTC <luite> you only need one pass
2011-12-09 02:50:01 UTC <luite> you can also do it for L_1 loss, absolute distance, but you need more passes.
2011-12-09 02:50:23 UTC <tgeeky> hm. i'll have to ask for a copy of the paper sometime :)
2011-12-09 02:50:40 UTC <luite> unfortunately that isn't in the paper at all, it required some fun tweaks, modifying an algorithm, amortized complexity analysis
2011-12-09 02:51:00 UTC <luite> and all proofs are scrappeds ince data miners rather see examples and test data results :(
2011-12-09 02:51:11 UTC <luite> oh well
2011-12-09 02:51:24 UTC <tgeeky> scrappeds ince ?
2011-12-09 02:51:41 UTC <luite> my original unpublished tech report
2011-12-09 02:51:53 UTC <tgeeky> ok
2011-12-09 02:51:58 UTC <tgeeky> well it sounds interesting
2011-12-09 02:52:06 UTC <luite> I'm not sure how useful it is
2011-12-09 02:52:09 UTC <tgeeky> and hopefully it goes over well in Vancouver
2011-12-09 02:52:18 UTC <tgeeky> if not, free ski vacation
2011-12-09 02:52:22 UTC <luite> but I'm only the guy who came up with the algorithms
2011-12-09 02:52:25 UTC <tgeeky> (almost free)
2011-12-09 02:52:32 UTC <tgeeky> luite: that's the important part
2011-12-09 02:52:54 UTC <luite> hehe the lift pass and whistler apartment are still far from almost free ;p
2011-12-09 02:53:48 UTC <luite> I came up with the algorithm on another ski vacation in zermatt :)
2011-12-09 02:54:48 UTC <luite> maybe I'll find something interesting in whistler as well
2011-12-09 02:55:07 UTC <luite> the apartment is close to the library
2011-12-09 02:58:29 UTC <luite> my return flight is at the 26th
2011-12-09 02:58:44 UTC <luite> I hope to have lots of room in the airplane then :)
2011-12-09 02:59:53 UTC <tgeeky> luite: read apollonian fractal stuff and help me out then :)
2011-12-09 03:02:41 UTC <tgeeky> hehe
2011-12-09 03:02:45 UTC <tgeeky> ah, have a good time though
2011-12-09 03:02:51 UTC <tgeeky> i'll see ya around
2011-12-09 03:03:45 UTC <luite> yeah I'll be online there probably, the lifts close rather early, 2:30pm is the latest upload
2011-12-09 03:06:57 UTC <luite> and no one (i know) is joining me at whistler so unless i meet some hot ski babes or awesome ski dudes on the slopes, I won't have anything to do other than sadly returning to the apartment, silently weeping until the lifts open again ;)
2011-12-09 03:18:51 UTC <luite> hmm I really hope that the rumors of a samsung tablet with 11.6" 2560x1600 screen for 2012 are true, that would be so great for reading papers
2011-12-09 03:19:40 UTC <tgeeky> that sounds really pixel dense
2011-12-09 03:20:15 UTC <luite> yeah well over 200dpi
2011-12-09 03:20:32 UTC <tgeeky> that's almost good enough for viewing CT scans and other medical data
2011-12-09 03:20:44 UTC <luite> the extra inch and the added resolution would really make papers, including two-column ones and those with small math symbols, much mor readable
2011-12-09 03:21:12 UTC <tgeeky> the extra inch always helps, man. always
2011-12-09 03:21:18 UTC <tgeeky> ACTION walks out slowly
2011-12-09 03:21:24 UTC <luite> I use an ipad now, 1024x768 is just a bit too low
2011-12-09 03:21:53 UTC <tgeeky> I don't own an ipad, but the one I use has started to get slow, and the browser just dumps out (crashes) several times a day
2011-12-09 03:22:17 UTC <luite> reboot it
2011-12-09 03:22:23 UTC <tgeeky> yeah, didn't help :(
2011-12-09 03:22:38 UTC <luite> hmm, is it updated to 5.01?
2011-12-09 03:22:55 UTC <luite> and is it an ipad 1?
2011-12-09 03:22:57 UTC <tgeeky> i think so. I think that's when things started going wrong (three weeks ago)
2011-12-09 03:22:59 UTC <tgeeky> yes, ipad1
2011-12-09 03:23:13 UTC <luite> yeah those have limited memory, only 256MB is not really enough
2011-12-09 03:23:25 UTC <luite> mine also quits apps sometimes
2011-12-09 03:23:33 UTC <tgeeky> ah that's what it is.
2011-12-09 03:23:52 UTC <luite> new tablets in 2012 should have at least 1GB
2011-12-09 03:24:09 UTC <luite> the recent ones already do, for example the asus transformer prime
2011-12-09 03:24:34 UTC <tgeeky> hehe. ok. I need to run, and you need to get ready for flight.
2011-12-09 03:24:58 UTC <luite> tnx, I still have a few mor hours, and I've ollected most of the stuff I need
2011-12-09 03:25:15 UTC <tgeeky> ok. i have some chores to do, and then some coding. and then some sleep!
2011-12-09 03:25:22 UTC <tgeeky> ttyl. safe travels brother.
2011-12-09 03:25:23 UTC <luite> except the boot drier, I need to find that thing
2011-12-09 04:16:56 UTC <tgeeky> man who owns boot drier
2011-12-09 04:16:59 UTC <tgeeky> is serious about skiing
2011-12-09 04:17:08 UTC <luite> hehe it's a very small portable one
2011-12-09 04:17:50 UTC <tgeeky> yeah? i have a small portable one too. it's a hair dryer :O
2011-12-09 04:18:16 UTC <luite> hehe, nah this one has some sort of tubes that go down the boot
2011-12-09 04:18:46 UTC <luite> and it blows only a little amount of air, only slightly warm, but the circulation really dries them quickly
2011-12-09 04:18:59 UTC <tgeeky> cool
2011-12-09 04:19:15 UTC <tgeeky> that reminds me of NASA astronaut suits (interiors) which i've worn
2011-12-09 04:19:36 UTC <luite> oh have you been to the moon? ;p
2011-12-09 04:19:39 UTC <tgeeky> the most bizzare thing.. they run cold water through it, you are instantly freezing, warm water, instantly warm again
2011-12-09 04:19:46 UTC <tgeeky> only in my head
2011-12-09 04:20:16 UTC <tgeeky> i've also been to 5g
2011-12-09 04:20:18 UTC <tgeeky> which I do not recommend
2011-12-09 04:23:30 UTC <luite> I want to try new liners there, made in vancouver I think, some guys at ski forums rave about them
2011-12-09 04:24:35 UTC <luite> http://www.intuitionliners.com/hd_race_page.htm
2011-12-09 04:26:08 UTC <tgeeky> wow that's expensive
2011-12-09 04:26:52 UTC <luite> well the boots were 500 euro (~670 usd)
2011-12-09 04:28:27 UTC <tgeeky> wow that's expensive.
2011-12-09 04:29:41 UTC <luite> more expensive than my ski's :)
2011-12-09 04:30:42 UTC <luite> I got those from ebay (new, from a german store)
2011-12-09 04:34:24 UTC <luite> but boots are quite a bit more important than anything else probably
2011-12-09 04:34:43 UTC <luite> as long as your clothes are warm enough and your ski's are somewhat appropriate for the conditions
2011-12-09 04:47:34 UTC <luite> I hope my flight won't be delayed too much, storm is expected, flood barriers are already closing...
2011-12-09 16:25:40 UTC <ClaudiusMaximus> is there any turing machine example for diagrams?  slowly started writing one..
2011-12-09 16:26:47 UTC <fryguybob> ClaudiusMaximus: I thought about making one, but that is about it.
2011-12-09 16:27:41 UTC <ClaudiusMaximus> ok, then i'll carry on - is there a turing machine package i could re-use for the machine definition?  happy to roll my own, as i want esoteric features (different tape topology, etc)
2011-12-09 16:28:22 UTC <fryguybob> I have one that I used for some homework.  I'll paste it.
2011-12-09 16:30:14 UTC <fryguybob> ClaudiusMaximus: http://hpaste.org/55051
2011-12-09 16:32:06 UTC <ClaudiusMaximus> fryguybob: thanks
2011-12-09 16:35:01 UTC <ClaudiusMaximus> i started on a more generic design, with a 'Tape' MTPC + FunDeps to associate possible tape shifts with the tape itself; and i have Ix constraints for type Transitions state symbol shift = Array (state, symbol) (state, symbol, shift)
2011-12-09 16:35:48 UTC <ClaudiusMaximus> my Symbol class adds "symbolRange :: (symbol, symbol)" to the HasBlank stuff
2011-12-09 16:37:00 UTC <ClaudiusMaximus> and Tape class has empty, shift, read, write operations
2011-12-09 16:38:10 UTC <ClaudiusMaximus> possibly over-generic, but i'll see how it goes
2011-12-09 16:40:17 UTC <fryguybob> I was just happy to get move for  Tape e  to work on  f (Tape e) :D
2011-12-09 16:45:37 UTC <ClaudiusMaximus> hm, so you can't write blanks to the tape
2011-12-09 16:47:01 UTC <ClaudiusMaximus> ah, i see why
2011-12-09 16:48:32 UTC <ClaudiusMaximus> anyway, i think i'll carry on rolling my own - learning experience, plus the desire for bizarro tapes...
2011-12-09 16:48:46 UTC <ClaudiusMaximus> thanks :)
2011-12-09 16:48:56 UTC <fryguybob> ClaudiusMaximus: Excellent!  I look forward to TM diagrams :D.
2011-12-09 16:49:12 UTC <ClaudiusMaximus> ACTION wanders off to the laptop in the warmer room to carry on working
2011-12-09 19:14:33 UTC <byorgey> ClaudiusMaximus: fun, I've thought about making TM diagrams too, I'll look forward to seeing what you come up with =)
2011-12-09 19:15:44 UTC <ClaudiusMaximus> early days - just needed i need turing machines that also support input and output, so, hacking on adding that at the moment - not made any diagrams yet! heh
2011-12-09 19:16:02 UTC <ClaudiusMaximus> s/needed/realized/
2011-12-09 19:16:16 UTC <byorgey> fair enough, no rush =)
2011-12-09 19:55:44 UTC <ClaudiusMaximus> my boof->turingmachinewithio compiler and turingmachinewithio interpreter works (at least, rot13 . rot13 outputs correctly),
2011-12-09 19:57:06 UTC <ClaudiusMaximus> now to learn the graphviz bindings to layout the state transition diagram, and make it pretty with diagrams
2011-12-09 20:29:11 UTC <byorgey> boof?
2011-12-09 20:34:16 UTC <ClaudiusMaximus> boolfuck
2011-12-09 20:43:35 UTC <byorgey> hahaha, nice  "The '-' command has been removed from the language, since it performs the same operation as '+'."
2011-12-09 21:55:09 UTC <ClaudiusMaximus> graphviz is still installing after almost 2 hours (machine has only 512MB ram)
2011-12-09 22:07:50 UTC <byorgey> yikes
2011-12-09 22:58:58 UTC <ClaudiusMaximus> with --disable-optimization it installed in about 30 seconds..
2011-12-09 23:04:10 UTC <byorgey> hahaha
2011-12-09 23:34:37 UTC <ClaudiusMaximus> fun never stops... dot segfaults (stack overflow i guess..) rendering my 4MB graphviz file with 30k nodes and 60k edges;  neato currently using 3.5GB and seems to be taking its time
2011-12-09 23:35:55 UTC <ClaudiusMaximus> maybe i should try something simpler...
2011-12-10 00:14:27 UTC <tgeeky> hmm... simpler than 30k nodes and 60k edges...
2011-12-10 00:14:29 UTC <tgeeky> may I suggest, smiley face?
2011-12-10 00:17:27 UTC <ClaudiusMaximus> sfdp coped ok, http://claudiusmaximus.goto10.org/g/misc/rot13-boof-sfdp.png
2011-12-10 00:17:59 UTC <tgeeky> ClaudiusMaximus: can you link me to the code for your apollonian gasket?
2011-12-10 00:18:04 UTC <tgeeky> ClaudiusMaximus: that is rather cool looking.
2011-12-10 00:18:10 UTC <tgeeky> it looks like a tree of centipedes
2011-12-10 00:18:34 UTC <ClaudiusMaximus> tgeeky: view source in browser: http://claudiusmaximus.goto10.org/g/pack/circles.svg
2011-12-10 00:18:59 UTC <ClaudiusMaximus> tgeeky: yeah, quite scarily organic
2011-12-10 00:19:11 UTC <tgeeky> ClaudiusMaximus: yes, indeed. It's a little unsettling.
2011-12-10 01:32:38 UTC <luite> greetings from vancouver
2011-12-10 01:39:44 UTC <fryguybob> greetings!
2011-12-10 01:39:48 UTC <luite> hmm this internet connection is glitchy
2011-12-10 01:41:55 UTC <luite> doesn't help that i'm borrowing the internet connection from the neighbouring hotel since this one has a password
2011-12-10 02:21:52 UTC <byorgey> greetings luite
2011-12-10 02:24:56 UTC <luite> :)
2011-12-10 02:25:02 UTC <luite> actually my first time in north america
2011-12-10 02:25:24 UTC <luite> and my debit card doesn't seem to work in the atms here
2011-12-10 02:26:19 UTC <luite> which is not ideal if I want to ead and stuff
2011-12-10 02:26:22 UTC <luite> eat
2011-12-10 02:26:30 UTC <byorgey> yes, eating is recommended
2011-12-10 02:26:44 UTC <byorgey> even in north america
2011-12-10 02:27:53 UTC <fryguybob> ACTION misses the north west.
2011-12-10 02:29:05 UTC <luite> where did you live?
2011-12-10 02:32:15 UTC <fryguybob> Missoula Montana
2011-12-10 02:33:49 UTC <luite> ah I had to look that up :)
2011-12-10 05:18:59 UTC <luite> back
2011-12-10 05:57:07 UTC <diabot> [diagrams-lib:Brent Yorgey <byorgey] export new 'view' function for restricting the bounding function to a rectangular region (and 416 more)
2011-12-10 15:02:58 UTC <byorgey> sigh
2011-12-10 17:22:08 UTC <tgeeky> byorgey: hey, at least it makes you look busy
2011-12-10 17:22:41 UTC <byorgey> hehe, true =)
2011-12-10 17:22:57 UTC <byorgey> hey guys! I just pushed 416 patches to diagrams-lib!!
2011-12-10 17:23:06 UTC <tgeeky> man that guy is productive.
2011-12-10 17:23:10 UTC <byorgey> just a little hacking I was doing last night in my spare time, you know
2011-12-10 17:23:25 UTC <tgeeky> tomorrow night, world hunger!
2011-12-10 17:23:38 UTC <byorgey> oh, diagrams-lib already solves world hunger
2011-12-10 17:23:43 UTC <byorgey> tomorrow is cancer
2011-12-10 17:23:59 UTC <tgeeky> oh you're good. you're good.
2011-12-10 17:24:25 UTC <byorgey> =)
2011-12-10 19:41:24 UTC <tgeeky> great diagrams target: http://www-d0.fnal.gov/Run2Physics/top/top_public_web_pages/top_feynman_diagrams.html
2011-12-10 20:25:51 UTC <byorgey> fun
2011-12-10 20:26:06 UTC <byorgey> ACTION knows nothing about quantum physics, but if someone wants to make a diagrams module for producing Feynman diagrams that would be awesome
2011-12-10 20:26:26 UTC <byorgey> the drop shadows are annoying
2011-12-10 23:58:52 UTC <tgeeky> byorgey: indeed.
2011-12-10 23:59:02 UTC <tgeeky> and yes, I hope I can take that to task
2011-12-10 23:59:45 UTC <tgeeky> especially because, if my understanding of the design of diagrams is correct, one can describe the set of particles and interactions to get a diagram
2011-12-10 23:59:59 UTC <tgeeky> instead of describing the QM behind it, and instead of describing how to draw the picture
2011-12-11 00:00:18 UTC <tgeeky> someone is already doing feynman diagrams in Haskell
2011-12-11 02:25:23 UTC <luite> bah fire alarm in library, just when I had found some interesting books (one with pretty pictures of circle packings!), everyone had to leave, when it opened again my books were gone
2011-12-11 02:34:58 UTC <tgeeky> luite: what the !
2011-12-11 02:35:04 UTC <tgeeky> luite: it's a trap
2011-12-11 02:35:25 UTC <tgeeky> http://www.wolframalpha.com/input/?i=21+billion+*+mass+of+the+sun <-- hehe
2011-12-11 02:35:56 UTC <tgeeky> I would say that the (recent) observation of a black hole of that mass, means we have a bad idea about black hole mass upper limits.
2011-12-11 02:39:02 UTC <luite> hmm hmm
2011-12-11 02:39:35 UTC <tgeeky> http://www.time.com/time/health/article/0,8599,2101916,00.html
2011-12-11 03:33:12 UTC <luite> tgeeky: this  is a review of that circle packing book http://www.springerlink.com/content/9412664078511201/fulltext.pdf
2011-12-11 03:35:32 UTC <tgeeky> luite: hmm. circle packing in general is very interesting, but for me, I had to choose to focus on fractal packing in order to have a chance at understanding the state of the art
2011-12-11 03:36:16 UTC <tgeeky> luite: that said, for a given *integer* dimension, circle packing and lattice theory are almost the same thing, I think
2011-12-11 03:36:27 UTC <tgeeky> I know Leech and friends all sit at 24
2011-12-11 03:37:37 UTC <tgeeky> luite: I wish I had that book, though.
2011-12-11 18:23:33 UTC <luite> tgeeky: please buy it and scan it for me ;p
2011-12-11 21:23:42 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add more comments to D.TwoD.Apollonian (and 7 more)
2011-12-11 21:24:04 UTC <fryguybob> @botsnack
2011-12-11 21:24:04 UTC <diabot> :)
2011-12-24 03:30:05 UTC <diabot> [active:Brent Yorgey <byorgey] add activeEra and clamp functions
2011-12-24 05:51:13 UTC <diabot> [active:Brent Yorgey <byorgey] new 'toTime' function
2011-12-24 05:52:53 UTC <diabot> [diagrams-lib:Brent Yorgey <byorgey] a bit more documentation for animation-related stuff
2011-12-24 05:53:26 UTC <diabot> [diagrams-cairo:Brent Yorgey <byorgey] improve animation handling
2011-12-24 05:58:31 UTC <byorgey> I think it's time for an 0.5 release soon
2011-12-24 20:12:37 UTC <tgeeky> join #haskell-blah
2011-12-24 21:08:50 UTC <diabot> [active:Brent Yorgey <byorgey] a bunch of work: better implementations, more documentation, many new combinators (and 2 more)
2011-12-25 00:02:10 UTC <luite> hmm
2011-12-25 00:02:40 UTC <luite> back from great day, with new snow!
2011-12-25 00:05:32 UTC <luite> but I noticed something, I ski alone, so I usually get in the singles line, where you're supposed to "fill up" chairs if there are groups of 2 or 3 ppl in the line (all chairs here are 4 seaters)
2011-12-25 00:07:10 UTC <luite> now I usually ask if they are a group of 2 or 3, and if I can join them. now if there's a mother with a child then they nod, but on more than one occasion, at the last moment they decide not to take the chair, so I'm alone... (and there's a long line behind them waiting)
2011-12-25 00:08:08 UTC <luite> are people here more afraid of strangers near their children? in europe I've often been asked to watch a small kid, make sure that they get off the lift ok, not here
2011-12-25 00:08:30 UTC <luite> might just be a coincidence of course
2011-12-25 03:56:28 UTC <byorgey> luite: maybe so
2011-12-25 03:57:23 UTC <byorgey> luite: I think asking a stranger to watch a small kid on a ski lift would happen very rarely in the US, don't know about Canada but it might be similar
2011-12-25 03:57:32 UTC <byorgey> luite: glad you had a good day skiing =)
2011-12-25 04:56:26 UTC <tgeeky> luite: yes, people are afraid of strangers near children
2011-12-25 04:56:30 UTC <tgeeky> and strangers (men) are afraid of it too
2011-12-25 04:57:02 UTC <tgeeky> we have a lot of crime / sex crime/ etc shows on TV here
2011-12-25 04:57:09 UTC <tgeeky> I get the impression byorgey isn't the TV type :o
2011-12-25 05:00:06 UTC <byorgey> your impression is correct
2011-12-25 05:03:22 UTC <tgeeky> I think that could be better stated that: byorgey (and family) are probably the anti-TV type
2011-12-25 05:03:30 UTC <tgeeky> which is how one would want to raise a sensible child :o
2011-12-25 05:04:06 UTC <tgeeky> (ie, I plan on doing that when/if I have children)
2011-12-25 05:04:32 UTC <tgeeky> byorgey: happy christmas!
2011-12-25 05:04:36 UTC <tgeeky> merry holidays!
2011-12-25 05:04:44 UTC <byorgey> I wouldn't say I'm anti-TV.  I'm just pro-things-that-are-not-TV.
2011-12-25 05:04:54 UTC <byorgey> merry christmas tgeeky =)
2011-12-25 05:05:23 UTC <tgeeky> first one with your child
2011-12-25 05:05:25 UTC <tgeeky> very special :)P
2011-12-25 05:06:18 UTC <byorgey> yeah =)
2011-12-25 05:43:45 UTC <tgeeky> i have birds eat out of my hand all of the time
2011-12-25 05:44:03 UTC <tgeeky> but it might have something to do with the fact that my dad keeps like 50 birdfeeders around his property :o
2011-12-25 05:45:07 UTC <luite> hehe yeah that helps
2011-12-25 05:46:19 UTC <luite> these birds know that they can often find pieces of bread and other food near lift lines
2011-12-25 05:52:31 UTC <mgsloan> `Merry christmas 'n all that!
2011-12-25 05:53:55 UTC <mgsloan> byorgey - does it seem reasonable to move everything in Diagrams.Backends.Cairo except "OutputType" and all the instances into an "Internal" module?
2011-12-25 05:54:09 UTC <byorgey> merry christmas mgsloan!
2011-12-25 05:54:59 UTC <mgsloan> hope your festivities 'n such are swell! It's your baby's first Christmas! As I'm sure you're quite aware
2011-12-25 05:55:16 UTC <fryguybob> Merry Christmas to the Yorgey family!
2011-12-25 05:55:25 UTC <byorgey> indeed, although it's pretty much lost on him =)
2011-12-25 05:55:34 UTC <byorgey> thanks! Merry Christmas to the Yates family too!
2011-12-25 05:55:50 UTC <mgsloan> yup, but babies are absorbing soooo much information
2011-12-25 05:56:04 UTC <byorgey> mgsloan: sure, sounds reasonable
2011-12-25 05:56:21 UTC <byorgey> mgsloan: true!
2011-12-25 05:56:25 UTC <mgsloan> the main reason is so that Unsafe can call cairoMiscStyle
2011-12-25 05:56:40 UTC <fryguybob> Due to scheduling concerns we opened some presents "early" and I'm now the proud owner of TAPL.
2011-12-25 05:56:44 UTC <byorgey> mgsloan: right, that's a good reasons
2011-12-25 05:56:45 UTC <mgsloan> but it also makes the code real clean
2011-12-25 05:56:50 UTC <byorgey> fryguybob: haha, nice!
2011-12-25 05:57:02 UTC <byorgey> mgsloan: also a good reason.
2011-12-25 05:57:07 UTC <fryguybob> Now I can return the copy in my office back to the library :D
2011-12-25 05:57:11 UTC <byorgey> hehe
2011-12-25 05:57:12 UTC <mgsloan> fryguybob: congrats! Pierce signed mine :)
2011-12-25 05:57:21 UTC <fryguybob> mgsloan: Nice!
2011-12-25 05:57:51 UTC <mgsloan> yeah, he's a really good guy
2011-12-25 05:58:02 UTC <mgsloan> I asked for ATAPL this year
2011-12-25 05:58:28 UTC <mgsloan> attapl I mean
2011-12-25 05:58:32 UTC <luite> hmm
2011-12-25 06:00:46 UTC <mgsloan> ACTION crosses fingers
2011-12-25 06:00:52 UTC <tgeeky> luite: you know Garret Lisi, the surfer physicist behind the E8 theory?
2011-12-25 06:01:58 UTC <tgeeky> i saw someone on the History channel wearing an E8 shirt... sure enough.. Lisi himself now has a TV show where he and some invester guy go around evaluating people's garage inventions
2011-12-25 06:04:58 UTC <luite> oh right, I've seen some talk about that paper, haven't read it myself though
2011-12-25 06:05:41 UTC <diabot> [active:Brent Yorgey <byorgey] new 'progression' combinator (and 1 more)
2011-12-25 10:12:34 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2011-12-25 17:46:22 UTC <diabot> [active:Brent Yorgey <byorgey] import diagram generation code
2011-12-25 23:34:50 UTC <luite> hmm, back!
2011-12-25 23:35:20 UTC <luite> that was quite a snowstormy day
2011-12-25 23:40:39 UTC <luite> and I loved the ski's I had today :)
2011-12-26 00:02:17 UTC <luite> interestingly the "skip chair at the last moment" trick for mothers with children didn't work today, since it wasn't allowed to ride the chair on your own, due to the high winds
2011-12-26 00:03:24 UTC <luite> which made it even more annoying when they pulled it (one time only today), since I had to quickly step aside to let the chair pass and then take the next one
2011-12-26 00:13:22 UTC <luite> hmm 650 euro with bindings, bah, that's a lot more expensive than my other ski's :)
2011-12-26 00:30:17 UTC <luite> no jays today though :(
2011-12-26 01:14:07 UTC <tgeeky> happy happy merry merry
2011-12-26 01:41:21 UTC <luite> :)
2011-12-26 01:45:46 UTC <luite> I want new ski's for christmas!
2011-12-26 02:11:04 UTC <luite> though I'd also settle for a cute skier girl who doesn't want to spend christmas alone and doesn't think computer programming and math are extremely boring ;)
2011-12-26 04:24:23 UTC <tgeeky> lol
2011-12-26 04:26:02 UTC <tgeeky> ACTION calls an escort service with skype
2011-12-26 04:32:48 UTC <luite> ugh the pepper steak from the supermarket here is great, but almost a pound is a bit much for one person :)
2011-12-26 05:25:56 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2011-12-26 06:36:13 UTC <diabot> [active:Brent Yorgey <byorgey] start creating test suite
2011-12-26 06:48:16 UTC <diabot> [active:Brent Yorgey <byorgey] more tests, and fix a bug uncovered by one of them
2011-12-26 06:53:30 UTC <diabot> [active:Brent Yorgey <byorgey] add isConstant and isDynamic functions
2011-12-26 07:01:20 UTC <diabot> [active:Brent Yorgey <byorgey] add QC test re: stretchTo duration (currently failing) (and 1 more)
2011-12-26 17:14:20 UTC <tgeeky> ok, shutdown time
2011-12-26 17:14:30 UTC <tgeeky> gotta move to another hotel for this week :o
2011-12-26 21:17:48 UTC <mgsloan> hello! what's the best way to get scale / move the origin of one diagram to correspond to another's origin and bounds?
2011-12-26 21:18:18 UTC <mgsloan> I know how to do it with align, but that will mutate both origins
2011-12-26 21:24:04 UTC <byorgey> mgsloan: well, simply composing two diagrams with <> will superimpose their origins, so there's no moving required
2011-12-26 21:24:36 UTC <byorgey> mgsloan: wait, I am confused.  What exactly are you trying to do?
2011-12-26 21:24:48 UTC <mgsloan> right!  I should indeed just say what I'm trying to do
2011-12-26 21:25:04 UTC <mgsloan> I want to get a rect behind a chunk of text that I know the bounds of
2011-12-26 21:25:32 UTC <mgsloan> so (uncurry rect) (size2D textChunk) <> textChunk
2011-12-26 21:25:58 UTC <mgsloan> but rect's origin is in the center, whereas textChunk has a baseline origin that I want to maintain
2011-12-26 21:26:04 UTC <byorgey> aha
2011-12-26 21:26:06 UTC <byorgey> let me think
2011-12-26 21:27:28 UTC <mgsloan> also, my feature request of a week ago regarding being able to mutate bounds in an easier fashion isn't necessary - I just hadn't seen strutX / strutY
2011-12-26 21:27:35 UTC <byorgey> ah, ok =)
2011-12-26 21:28:45 UTC <mgsloan> it /might/ be cleverer to do struts using (rect (20, 30) # invisible)
2011-12-26 21:29:06 UTC <byorgey> you can do that too
2011-12-26 21:29:19 UTC <byorgey> except it's called 'phantom' rather than 'invisible'
2011-12-26 21:29:25 UTC <mgsloan> ooh! cool!
2011-12-26 21:30:10 UTC <byorgey> to use it you need to give a type annotation like   ((rect (20,30) :: D R2) # phantom)
2011-12-26 21:30:53 UTC <byorgey> mgsloan: well, re: aligning text + rectangles, instead of using size2D you want to use extentX and extentY
2011-12-26 21:31:19 UTC <mgsloan> ahh
2011-12-26 21:31:44 UTC <byorgey> shouldn't be too hard to wite a little utility to make a properly sized and translated rectangle in order to have the edges at particular coordinates
2011-12-26 21:33:22 UTC <byorgey> mgsloan: of course, struts have zero width so they are different than phantom rectangles (scaling by zero is not allowed).
2011-12-26 21:33:28 UTC <byorgey> but both have their uses.
2011-12-26 21:36:35 UTC <mgsloan> certainly!  So, boundingBox is essentially equivalent to doing an "extents" query, which does both extentsX and extentsY.  So we'd want
2011-12-26 21:36:36 UTC <mgsloan> adjustExtents :: (Boundable a) => BoundingBox -> a -> a
2011-12-26 21:36:45 UTC <mgsloan> orso
2011-12-26 21:36:52 UTC <mgsloan> I guess there'd be a Transformable a too
2011-12-26 21:39:47 UTC <mgsloan> on that note, is there a reason that BoundingBox doesn't export its constructor?
2011-12-26 22:11:08 UTC <mgsloan> Maybe I don't understand 'linear map', but why store the linear map, its inverse, the transpose of the map, and the transpose of the inverse?
2011-12-26 22:11:35 UTC <mgsloan> seems to me like just the map and its inverse should be enough
2011-12-26 22:12:26 UTC <byorgey> mgsloan: the inverse transpose is needed for transforming bounding functions
2011-12-26 22:12:41 UTC <byorgey> I think BoundingBox is supposed to be abstract
2011-12-26 22:13:55 UTC <mgsloan> hmm, in that case the only operations to extract information from it are containment queries
2011-12-26 22:15:20 UTC <byorgey> mgsloan: well, if you need other operations on it I'm open to patches!  I'm also open to an argument that the constructor ought to be exported, I haven't thought about it in a while
2011-12-26 22:16:34 UTC <mgsloan> One useful operation might be boundingExtents :: (AdditiveGroup v) => BoundingBox v -> v
2011-12-26 22:17:11 UTC <mgsloan> also working on "fitBox" or "fitBoundingBox"
2011-12-26 22:20:05 UTC <mgsloan> centeredBounds :: BoundingBox v -> LocatedBounds v
2011-12-27 04:15:25 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2011-12-27 04:32:54 UTC <mgsloan> this is probably a stupid question, but where does "C" come from in Diagrams.Backend.Cairo ?
2011-12-27 04:33:09 UTC <mgsloan> the C that isn't the qualified namespace name - the RenderM constructor
2011-12-27 04:34:11 UTC <mgsloan> well not the Render constructor.  The cairo specific data family type / constructor
2011-12-27 04:34:46 UTC <mgsloan> ohhhh
2011-12-27 04:34:49 UTC <mgsloan> yeah stupid question
2011-12-27 04:34:51 UTC <mgsloan> its right there
2011-12-27 05:32:20 UTC <byorgey> ACTION learns more than he ever wanted to know about embedding video in web pages
2011-12-27 05:32:47 UTC <byorgey> but it's important for embedding autogenerated example animations in the diagrams user manual.
2011-12-27 05:41:09 UTC <mgsloan> awesome :D
2011-12-27 05:46:51 UTC <mgsloan> I definitely look forward to eventual interactive docs, ala ActiveHs
2011-12-27 06:00:00 UTC <byorgey> mgsloan: well, that will come as soon as luite releases Wolfgang =)
2011-12-27 06:00:20 UTC <mgsloan> aye!
2011-12-27 06:01:15 UTC <mgsloan> my college education has seriously been getting in the way of the progress of haskell interactive development environments... hah
2011-12-27 06:02:56 UTC <mgsloan> probably for the best, let the infrastructure improve a bit more
2011-12-27 06:47:20 UTC <mgsloan> woohoo! finally ready to send out some more patches
2011-12-27 13:15:51 UTC <luite> i tried to work on wolfgang in the airplane but it really drains the battery fast, I had to quit after two hours or so
2011-12-27 13:18:49 UTC <luite> I had a great seat, more than a meter of legroom :p
2011-12-27 13:21:15 UTC <luite> and the guy sitting next to me had a windows phone 7 phone, I was amazed, didn't know that people actually bought those things, but then I found out that he was a microsoft employee and got it for free
2011-12-27 13:23:55 UTC <mgsloan> hahah. too / from seattle?  I've probably sat next to microsoft employees on half the flights I've been on
2011-12-27 13:24:03 UTC <mgsloan> (also, I really should not be up still..)
2011-12-27 13:25:08 UTC <luite> flew from vancouver to amsterdam
2011-12-27 13:25:16 UTC <mgsloan> gotcha
2011-12-27 13:25:52 UTC <luite> so yeah, probably lots of seattle guys who found a cheaper flight at yvr
2011-12-27 13:28:34 UTC <mgsloan> yup, are you spending the new year in amsterdam?
2011-12-27 13:28:53 UTC <luite> no :p but in holland, since I live there :p
2011-12-27 13:29:05 UTC <luite> well maybe amsterdam, but I don't really have plans yet
2011-12-27 13:32:43 UTC <luite> no more skiing though :'(
2011-12-27 17:19:36 UTC <byorgey> @botsnack
2011-12-27 17:19:36 UTC <diabot> :)
2011-12-27 17:50:01 UTC <luite> :)
2011-12-27 17:50:25 UTC <byorgey> luite: made it home safely?
2011-12-27 19:31:53 UTC <luite> yes
2011-12-27 19:33:18 UTC <tgeeky_> indeed
2011-12-27 19:33:53 UTC <luite> i had an emergency exit seat so the flight wasn't even that bad
2011-12-27 20:42:42 UTC <mgsloan> ACTION might go snowboarding today :)
2011-12-27 21:40:39 UTC <mgsloan> byorgey - feel free to only partially apply those patches.  I'm not sure about the showOrigin changes and some of the bbox stuf
2011-12-27 23:02:35 UTC <byorgey> mgsloan: OK.  I haven't had a chance to look at them yet but hope to get to them soon.
2011-12-27 23:40:38 UTC <luite> mgsloan: cool, where? :)
2011-12-28 00:20:25 UTC <mgsloan> luite - snoqualmie, looks like the conditions aren't so great, so more haskelling time :)
2011-12-28 00:21:37 UTC <mgsloan> I snowboarded a lot in highschool, might get back into it once time is less constrained.  The folks that I know that go usually go to stevens
2011-12-28 00:34:55 UTC <luite> ah cool, didn't know it, just checking the maps now :)
2011-12-28 05:26:48 UTC <tgeeky> hm. that's unfortunate
2011-12-28 05:27:36 UTC <tgeeky> byorgey: I assume that fc-kind-poly.pdf 3.4 first sentence "There is one other major restriction on promoted types: we do pro-
2011-12-28 05:27:39 UTC <tgeeky> mote GADTs
2011-12-28 05:28:01 UTC <tgeeky> should have a "no" in there?
2011-12-28 05:28:08 UTC <tgeeky> or "not", even
2011-12-28 06:34:54 UTC <diabot> [active:Brent Yorgey <byorgey] more tests, and better Arbitrary instances (and 3 more)
2011-12-28 19:42:22 UTC <byorgey> tgeeky: you should grab a newer version of that paper
2011-12-28 19:42:50 UTC <byorgey> you can get the latest version from http://www.cis.upenn.edu/~byorgey/publications.html
2011-12-28 19:49:23 UTC <diabot> [active:Brent Yorgey <byorgey] a few more tests
2011-12-28 20:36:26 UTC <tgeeky> byorgey: kk
2011-12-29 05:32:40 UTC <tgeeky> byorgey: surely you're asleep?
2011-12-29 05:48:59 UTC <byorgey> tgeeky: nope
2011-12-29 05:58:32 UTC <tgeeky> byorgey: I asked in #haskell
2011-12-29 05:58:53 UTC <tgeeky> can one of you conduct a thought experiment: what advantages or disadvantages by erasing and re-writing Prelude with the kinds (promotion, constraints) in 7.4?
2011-12-30 15:53:31 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2011-12-30 21:06:01 UTC <luite> of all the "computer people" I spoke to in whistler/vancouver (mostly software engineers, some db engineer, sap consultant, network engineer), only one had heard about haskell :(  (a network engineer at microsoft how mainly rememberd it for being so difficult to install on their distributed computing system)
2011-12-30 21:06:31 UTC <byorgey> heh
2011-12-30 21:06:36 UTC <byorgey> avoid success at all costs!
2011-12-30 21:07:28 UTC <luite> yeah if you read reddit etc, apparently it's easy to fool yourself into thinking that everyone talks about, or at least heard about haskell
2011-12-30 21:10:26 UTC <luite> but some were quite interested, though I still find it hard to answer the "where is it used" question
2011-12-30 21:11:46 UTC <byorgey> that's because it's the wrong question
2011-12-30 21:16:28 UTC <luite> is it? there are some general purpose languages that owe much of their success to being used in one specific niche, with lots of good libraries, documentation etc for this type of application. ruby maybe the best known example
2011-12-30 21:17:44 UTC <byorgey> true, but I think that is the exception rather than the rule
2011-12-30 21:18:51 UTC <luite> hehe Greg Weber made a blog post on yesodweb to argue the contrary, that libraries, or "frameworks" in particular, drive language adoption these days
2011-12-30 21:19:49 UTC <byorgey> that may be true, but if I want to learn about a new language I haven't heard of before, I don't ask "where is it used", I ask "what is it like".
2011-12-30 21:20:14 UTC <byorgey> but then again, I am a PhD student in programming languages ;)
2011-12-30 21:21:20 UTC <luite> yeah, the "where is it used" question is more natural, I think, for people who have used language like Java, C, Python, JavaScript, and think that all language are "like that", with some minor type system variations etc
2011-12-30 21:24:21 UTC <luite> the "what it's like" question might be equally hard to explain in such cases
2011-12-30 21:24:34 UTC <luite> err, to answer
2011-12-30 21:28:29 UTC <luite> next time I should prepare better :p
2011-12-30 21:30:18 UTC <byorgey> yeah, I suppose that's true
2011-12-30 21:33:10 UTC <luite> but there were lots of engineers there, probably many from the seattle/redmond area
2011-12-30 21:37:15 UTC <luite> some boeing engineer who said that I should've chosen a different airline because mine was using Airbus A330 on my flight :)
2011-12-30 21:40:53 UTC <byorgey> hahaha
2011-12-30 21:42:06 UTC <luite> maybe she was right, this type of airplane did some unexpected nose dives, injuring a few dozen people, due to a software error a few years ago
2011-12-30 21:46:10 UTC <byorgey> yikes
2011-12-30 21:48:13 UTC <luite> (on the other hand, boeing 737 seem to have lots of problems with their radio altimeters, but I don't think those are used on long range flights)
2011-12-30 21:54:11 UTC <luite> it's probably best not to read too much about airplane failures and problems ;)
2011-12-30 21:54:30 UTC <byorgey> probably so.
2011-12-31 00:29:31 UTC <ClaudiusMaximus> hm, Mandelbrot set escape count n computes in O(n) time - but computing escape count n seems to be O(m^n) for an iterated function system with m (invertible) functions - maybe i'm missing some obvious trick to speed it up?
2011-12-31 00:31:37 UTC <ClaudiusMaximus> referring to http://scholar.google.co.uk/scholar?cluster=8311340961741668080&hl=en&as_sdt=0,5&as_vis=1 (horribly lo-fi scanned copy)
2011-12-31 00:35:35 UTC <luite> hmm, OCR helps but it still doesn't look terribly good :)
2011-12-31 00:40:37 UTC <luite> hmm, but I can't immediately think of optimizations, at least not without assuming more about the functions
2011-12-31 00:50:06 UTC <luite> since in the paper all transformations are affine, you could probably work with bounding sets, at least if your attractor set is convex
2011-12-31 00:55:59 UTC <ClaudiusMaximus> i should probably work the other way, start with a sufficiently large raster and iteratively shrink it through the transformations, combining them as layers with some cunning blending method (instead of this way that computes backwards per pixel)
2011-12-31 06:15:48 UTC <mgsloan> some stuff I've been working on: https://github.com/mgsloan/gtk-toy/blob/master/src/Graphics/UI/Gtk/Toy.hs
2011-12-31 06:16:23 UTC <mgsloan> https://github.com/mgsloan/gtk-toy-diagrams/blob/master/src/examples/Test.hs , based on https://github.com/mgsloan/gtk-toy-diagrams/blob/master/src/Graphics/UI/Gtk/Toy/Text.hs
2011-12-31 06:16:54 UTC <mgsloan> err https://github.com/mgsloan/gtk-toy-diagrams/blob/master/examples/Test.hs
2011-12-31 18:17:37 UTC <ClaudiusMaximus> so i did the O(m*n) large raster / shrinking thing with shaders, seemed to work ok though it's way less sharp as the O(m^n) per-pixel recursion - will do a blog post soon..
2011-12-31 18:20:55 UTC <ClaudiusMaximus> http://img846.imageshack.us/img846/3107/spiral.png
2011-12-31 18:38:50 UTC <luite> cool pic bro
2011-12-31 18:40:04 UTC <luite> argh why does the web torture me with all those Whistler ads :'(
2011-12-31 20:36:24 UTC <ClaudiusMaximus> luite: thanks :)  wrote it up a bit here http://claudiusmaximus.goto10.org/cm/2011-12-31_the_sky_cracked_open.html
2011-12-31 20:42:13 UTC <luite> ah the video is evenb etter :)
2011-12-31 20:42:28 UTC <ClaudiusMaximus> :)
2011-12-31 20:43:13 UTC <ClaudiusMaximus> i didn't increase the dimension beyond 1.75 because my GPU was starting to get a bit toasty (80C with fan speed at 92%)
2011-12-31 20:43:44 UTC <ClaudiusMaximus> plus it didn't look as nice as i'd hoped - not enough fine detail
2011-12-31 20:43:48 UTC <luite> oh mine gets similarly hot, up to 95, doesn't appear to hurt it much
2011-12-31 20:44:12 UTC <ClaudiusMaximus> yeah i don't know the safe limit, but i hope it would throttle itself :)
2011-12-31 20:44:34 UTC <ClaudiusMaximus> it's more the noise actually, can't think with the fans on full
2011-12-31 20:44:47 UTC <luite> hehe
2011-12-31 20:47:04 UTC <byorgey> ClaudiusMaximus: very cool! =)
2011-12-31 20:47:51 UTC <luite> are those void main() things GLSL?
2011-12-31 20:47:58 UTC <ClaudiusMaximus> yep
2011-12-31 20:48:02 UTC <ClaudiusMaximus> thanks byorgey !
2011-12-31 20:48:14 UTC <ClaudiusMaximus> fragment shaders
2011-12-31 20:49:08 UTC <ClaudiusMaximus> main gets called once for each output fragment (usually a fragment is a pixel, unless you do multi-sampling stuff)
2011-12-31 20:49:41 UTC <luite> hmm, I've used fragment shaders for very simple effects a long time ago, is it easy to call them from a haskell program?
2011-12-31 20:49:44 UTC <ClaudiusMaximus> all pixels in parallel (conceptually)
2011-12-31 20:50:14 UTC <ClaudiusMaximus> yeah it's not too bad - except that I needed to use unsafeCoerce because the OpenGL high-level bindings don't expose enough...
2011-12-31 20:50:50 UTC <ClaudiusMaximus> ...like no support for uniform matrix, and the UniformLocation newtype has hidden constructor
2011-12-31 20:51:45 UTC <ClaudiusMaximus> i can put the full code for this thing online somewhere if you're curious (though unless you have a beefy GPU, probably decrease the texture size from 8192)
2011-12-31 20:52:14 UTC <luite> hmm, would be interesting to play with. my gpu is fairly slow though, radeon 6490m
2011-12-31 20:52:51 UTC <ClaudiusMaximus> ok, i'll get on it - but expecting a guest in about 10mins, so, might not be til tomorrow..
2011-12-31 20:53:08 UTC <luite> oh no hurries :)
2011-12-31 20:53:27 UTC <byorgey> hurry! You still have 10 minutes!!!
2011-12-31 20:53:37 UTC <byorgey> kidding ;)
2011-12-31 20:53:40 UTC <luite> oh yeah, that's what I meant ;p
2011-12-31 20:56:23 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/code/the-sky-cracked-open.tgz
2011-12-31 21:09:18 UTC <luite> aw it does not work
2011-12-31 21:09:39 UTC <luite> GLUT: Warning in main: GL error: invalid framebuffer operation
2011-12-31 21:11:05 UTC <luite> ah apparently the gpu is locked to intel integrated since vmware doesn't like gpu switching, do you use features that might not be supported by those?
2011-12-31 22:14:27 UTC <ClaudiusMaximus> no clue - possibly texture too big?  try reducing 8192 to 2048 or other smaller power of two
2012-01-01 00:05:33 UTC <luite> hmm 2048 doesn't work either
2012-01-01 05:23:45 UTC <diabot> [diagrams-core:Brent Yorgey <byorgey] bump vector-space lower bound (and 339 more)
2012-01-01 06:54:14 UTC <ClaudiusMaximus> brain hurts - got a parametric 2-plane (P(u,v) = U u + V v + W) in 4d space, want to find the u,v for the nearest point in that plane to another point not in that plane...
2012-01-01 06:56:46 UTC <ClaudiusMaximus> luite: btw, i found a bad performance bug in that demo - i should be activating the shader and setting uniforms outside the multi-pass loop, as they are constant for all passes
2012-01-01 06:57:08 UTC <byorgey> that sounds like one of those things that actually has a nice elegant formula, but you have to do horrendous amounts of algebra to re-derive yourself
2012-01-01 06:57:43 UTC <ClaudiusMaximus> byorgey: i know - at the moment i even gave up on the algebra and used hmatrix/gsl minimize
2012-01-01 06:58:18 UTC <ClaudiusMaximus> but it's very slow.. and i want a closed form that i can run on my GPU (doing this per pixel..)
2012-01-01 07:23:11 UTC <ClaudiusMaximus> i think i got it (by a symmetry argument...):  given Q, nearest in P is  u = U `dot` (Q - W) / U `dot` U   (and similarly for v)
2012-01-01 07:23:31 UTC <ClaudiusMaximus> better run some tests
2012-01-01 07:29:55 UTC <byorgey> ah, essentially projecting (Q - W) onto U... yeah, I think that makes sense
2012-01-01 07:30:36 UTC <byorgey> if you normalize U and V first then you can even skip the division
2012-01-01 07:33:40 UTC <ClaudiusMaximus> true
2012-01-01 07:33:58 UTC <ClaudiusMaximus> anyway, it's 10x faster than the gsl minimize function!
2012-01-01 07:34:37 UTC <ClaudiusMaximus> well, just that change made my program 10x faster - didn't profile
2012-01-01 09:00:38 UTC <ClaudiusMaximus> got it working http://claudiusmaximus.goto10.org/g/hyperspherics/0.png (also 1.png, 2.png, ..., 9.png)
2012-01-02 03:31:59 UTC <diabot> [diagrams-lib:1 22:29:24 EST 2012  Brent Yorgey <byorgey] fix warnings in D.BoundingBox (and 6 more)
2012-01-02 18:50:11 UTC <tgeeky> ClaudiusMaximus: what is the numeric paramter there?
2012-01-02 18:50:25 UTC <tgeeky> just a number it seems
2012-01-02 20:20:56 UTC <ClaudiusMaximus> tgeeky: i explained in a blog post http://claudiusmaximus.goto10.org/cm/2012-01-01_disco_balls.html
2012-01-02 20:33:49 UTC <byorgey> ClaudiusMaximus: does your blog have an rss feed?
2012-01-02 20:34:39 UTC <luite> funky video :)
2012-01-02 20:34:57 UTC <byorgey> dancing 4d spheres, I like it =)
2012-01-02 20:40:19 UTC <ClaudiusMaximus> byorgey: yep
2012-01-02 20:40:43 UTC <ClaudiusMaximus> byorgey: http://claudiusmaximus.goto10.org/cm/index.rss
2012-01-02 20:40:50 UTC <byorgey> ClaudiusMaximus: thanks!
2012-01-02 20:41:15 UTC <ClaudiusMaximus> (maybe i should add a link on the pages, even though it's linked via metadata)
2012-01-02 20:50:23 UTC <ClaudiusMaximus> another new thing: http://claudiusmaximus.goto10.org/v/ifsnobuts/2012-01-02_snowglobe_v1.ogv (20MB)  -- need to write another blog post to explain it, but dinner time now
2012-01-02 21:07:31 UTC <luite> oh i like snow :p
2012-01-02 21:08:10 UTC <fryguybob> We just got some.
2012-01-02 21:08:23 UTC <fryguybob> I hope it stops snowing so I can drive to Boston tomorrow though.
2012-01-02 21:08:48 UTC <luite> I'd have to drive 9 hours for some real snow, I think
2012-01-02 21:13:54 UTC <byorgey> fryguybob: that's quite a drive.
2012-01-02 21:20:02 UTC <fryguybob> Yeah around 8 hours.
2012-01-02 21:23:43 UTC <byorgey> fryguybob: what's in Boston?
2012-01-02 21:24:45 UTC <fryguybob> The largest annual mathematics meeting in the world!  http://jointmathematicsmeetings.org/jmm
2012-01-02 21:26:23 UTC <byorgey> oh! right, of course =)
2012-01-02 21:26:40 UTC <byorgey> sounds fun, I hope to go someday
2012-01-02 21:27:33 UTC <fryguybob> It is fun.
2012-01-02 21:28:08 UTC <fryguybob> We discovered over Christmas that one of Rebekah's cousin's is living in not far from you.
2012-01-02 21:28:22 UTC <byorgey> oh, really? where?
2012-01-02 21:29:16 UTC <fryguybob> 44th and locust I think.
2012-01-02 21:29:27 UTC <byorgey> yep, that's pretty close
2012-01-02 21:32:27 UTC <luite> oh that sounds fun
2012-01-02 21:32:34 UTC <luite> the jmm
2012-01-03 00:37:58 UTC <mgsloan> byorgey - the reason there's a "TODO: is this right?" for boxTransform is that I don't understand the linear transpose stuff
2012-01-03 00:38:24 UTC <mgsloan> so, the ordinary part of the transformation is right, but I'm not sure if the transpose is
2012-01-03 04:26:49 UTC <diabot> [diagrams-lib:2 23:12:16 EST 2012  Brent Yorgey <byorgey] after more careful review, boxTransform seems correct as is.
2012-01-03 04:26:50 UTC <diabot> [diagrams-core:2 23:25:47 EST 2012  Brent Yorgey <byorgey] add more documentation explaining about linear map transposes
2012-01-03 04:27:19 UTC <byorgey> hah, oh man, the darcs plugin for diabot has such a terrible parser
2012-01-03 05:47:41 UTC <diabot> [diagrams-cairo:2 22:05:30 EST 2012  mgsloan] Haddock fixes (and 3 more)
2012-01-03 13:32:39 UTC <diabot> [diagrams-cairo:2 22:05:30 EST 2012  mgsloan] Haddock fixes (and 238 more)
2012-01-03 17:35:27 UTC <tgeeky> 44th and locust? sounds like armageddeon predictions
2012-01-03 17:39:16 UTC <byorgey> tgeeky: I believe Locust St. is named for the *tree* rather than the apocalyptic insect scourge. ;)
2012-01-03 17:41:02 UTC <tgeeky> awh.
2012-01-03 17:41:18 UTC <tgeeky> http://i.imgur.com/8ihAm.jpg <-- Sam Harris
2012-01-03 17:41:23 UTC <tgeeky> never thought of that :o
2012-01-04 00:30:28 UTC <diabot> [diagrams-core:2 23:25:47 EST 2012  Brent Yorgey <byorgey] add more documentation explaining about linear map transposes (and 340 more)
2012-01-04 02:20:16 UTC <luite> 340 more? impressive
2012-01-04 02:37:24 UTC <tgeeky> hm
2012-01-04 02:37:29 UTC <tgeeky> interesting article: http://www.npr.org/2012/01/01/144550920/physicists-seek-to-lose-the-lecture-as-teaching-tool
2012-01-04 02:37:35 UTC <tgeeky> Hestenes is the geometric algebra guy
2012-01-05 00:12:49 UTC <mekeor> so, diagrams is a library/module for haskell for making diagrams
2012-01-05 00:13:13 UTC <byorgey> mekeor: yep
2012-01-05 00:13:26 UTC <mekeor> byorgey: ? lol =) nice to meet you :)
2012-01-05 00:14:02 UTC <byorgey> =)
2012-01-05 00:14:08 UTC <mekeor> byorgey: can diagrams be used for plotting functions, too?
2012-01-05 00:14:29 UTC <byorgey> mekeor: sure
2012-01-05 00:14:55 UTC <byorgey> you can just generate as many points lying on a function curve as you want, and then draw a cubic spline through them
2012-01-05 00:15:08 UTC <mekeor> does diagrams generate images? in which format?
2012-01-05 00:15:20 UTC <mekeor> ic
2012-01-05 00:15:39 UTC <byorgey> mekeor: in theory, any format for which you want to write a diagrams backend.
2012-01-05 00:16:01 UTC <mekeor> so, which formats are currently supported?
2012-01-05 00:16:02 UTC <byorgey> in practice the currently best supported backend uses cairo, which can generate .png, .svg, .ps, and .pdf
2012-01-05 00:16:14 UTC <mekeor> ah, nice; WOW
2012-01-05 00:16:28 UTC <byorgey> there are also separate (native) .ps and .svg backends being worked on
2012-01-05 00:16:37 UTC <mekeor> cool
2012-01-05 00:16:46 UTC <byorgey> someone is also working on an HTML5 canvas backend
2012-01-05 00:16:49 UTC <mekeor> wow, that project is really cool! O_O
2012-01-05 00:16:54 UTC <mekeor> O_O
2012-01-05 00:17:07 UTC <mekeor> byorgey: are you a developer or a user (of diagrams)?
2012-01-05 00:17:16 UTC <byorgey> I am the primary developer
2012-01-05 00:18:02 UTC <mekeor> WOW. =)
2012-01-05 00:18:06 UTC <byorgey> mekeor: got to run, but I will be back later to answer other questions if you have them
2012-01-05 00:18:16 UTC <mekeor> ok
2012-01-05 00:18:23 UTC <byorgey> other people hang around here who might be able to answer questions too
2012-01-05 00:18:34 UTC <byorgey> mekeor: give diagrams a try, I think you will like it =)
2012-01-05 00:18:35 UTC <mekeor> ok
2012-01-05 00:18:37 UTC <mekeor> ok
2012-01-05 00:18:40 UTC <mekeor> =)
2012-01-05 00:18:41 UTC <byorgey> there is a tutorial and a user manual, etc.
2012-01-05 00:18:46 UTC <mekeor> ok =)
2012-01-05 00:18:55 UTC <byorgey> http://projects.haskell.org/diagrams/
2012-01-05 00:18:58 UTC <mekeor> yea
2012-01-05 00:19:03 UTC <mekeor> the homepage uses hakyll
2012-01-05 00:19:14 UTC <mekeor> that's why i came across diagrams actually
2012-01-05 00:56:11 UTC <byorgey> mekeor: ah, I see
2012-01-05 00:58:17 UTC <mekeor> wow. diagrams seems to be structured very well.
2012-01-05 00:58:25 UTC <mekeor> ACTION is reading the tutorialâ¦
2012-01-05 01:00:44 UTC <mekeor> ACTION is fascinated. diagrams is ingenious!
2012-01-05 01:01:22 UTC <mekeor> ACTION didn't see such an intuitive, simple but powerful library so far
2012-01-05 01:02:03 UTC <mekeor> byorgey: may i ask you where you are actually from?
2012-01-05 01:03:02 UTC <byorgey> mekeor: thanks, glad you like it!
2012-01-05 01:03:11 UTC <byorgey> mekeor: Philadelphia, Pennsylvania, USA
2012-01-05 01:03:32 UTC <mekeor> (Pennsylvania was a private colony, did you know this?)
2012-01-05 01:05:38 UTC <byorgey> yes, I did =)
2012-01-05 01:05:54 UTC <mekeor> i am from germany, btw.
2012-01-05 01:06:01 UTC <byorgey> cool, where in Germany?
2012-01-05 01:06:13 UTC <mekeor> south west
2012-01-05 01:06:22 UTC <mekeor> "baden-wÃ¼rttemberg"
2012-01-05 01:06:33 UTC <mekeor> near ulm, where einstein was born
2012-01-05 01:06:57 UTC <mekeor> it's already 2:14 (night) hereâ¦
2012-01-05 01:35:46 UTC <mekeor> ACTION considers donating byorgey for such a great lib :)
2012-01-05 01:55:16 UTC <mekeor> how'd you draw a (right-angled) triangle ?  (byorgey)
2012-01-05 02:11:52 UTC <luite> aw /me jealous, mekeor lives closer to the alps than me ;)
2012-01-05 02:14:57 UTC <mekeor> luite: where are you from?
2012-01-05 02:15:09 UTC <mekeor> :)
2012-01-05 02:15:11 UTC <luite> netherlands, near utrecht
2012-01-05 02:15:20 UTC <mekeor> :Ã
2012-01-05 02:17:02 UTC <luite> I don't think i've ever been to ulm, only on the autobahn, when driving to st. anton, ischgl etc :)
2012-01-05 02:17:13 UTC <mekeor> for a right-angled triangle, should i use PolySides or PolyPolar ?
2012-01-05 02:17:37 UTC <mekeor> :)
2012-01-05 02:29:17 UTC <byorgey> mekeor: for a right triangle I would just use 'fromOffsets' and 'close' to make a closed path
2012-01-05 02:29:38 UTC <byorgey> close $ fromOffsets [(0,-3), (4,0)]
2012-01-05 02:30:54 UTC <mekeor> i myself, was trying something like: polygon with { polyType=PolyPolar [ fromCircleFrac(CircleFrac(45::Double)) , fromCircleFrac(CircleFrac(90::Double)) ] [1,1,1]}
2012-01-05 02:31:19 UTC <mekeor> but that didnt work.
2012-01-05 02:31:21 UTC <mekeor> idk why...
2012-01-05 02:31:28 UTC <luite> you can also use Deg 90
2012-01-05 02:31:35 UTC <mekeor> a
2012-01-05 02:33:18 UTC <mekeor> luite: nice, ty :)
2012-01-05 02:35:38 UTC <luite> isn't it rather late in your time zone btw? ;)
2012-01-05 02:35:56 UTC <mekeor> luite: what about your time zone?
2012-01-05 02:35:59 UTC <mekeor> :D
2012-01-05 02:36:02 UTC <luite> :p
2012-01-05 02:46:41 UTC <byorgey> mekeor: CircleFrac 45 means "45 circles", i.e. 45*360 degrees
2012-01-05 02:46:49 UTC <byorgey> probably not what you had in mind =)
2012-01-05 02:47:12 UTC <byorgey> you can just write   90 :: Deg
2012-01-05 02:47:38 UTC <luite> ah I didn't know that one, tnx :)
2012-01-05 02:47:54 UTC <mekeor> should "Deg 90" work, too?
2012-01-05 02:48:01 UTC <mekeor> (it seems so, at least)
2012-01-05 02:48:45 UTC <byorgey> mekeor: yes, that works too
2012-01-05 03:19:12 UTC <mekeor> i go to sleep, bye. see you tomorrow...
2012-01-06 20:04:37 UTC <tgeeky> byorgey: if I see your email address on a GHC ticket, then you added it yourself, right?
2012-01-06 20:04:50 UTC <byorgey> yes
2012-01-06 20:04:59 UTC <byorgey> uh... probably
2012-01-06 20:05:11 UTC <tgeeky> byorgey: presuming that means you're interested in the topic, do you know what's involved in getting TH to reify modules?
2012-01-06 20:05:24 UTC <byorgey> I guess there is technically nothing preventing anyone from adding arbitrary email addresses to tickets
2012-01-06 20:05:41 UTC <byorgey> tgeeky: can you paste a link to the ticket in question?
2012-01-06 20:05:44 UTC <tgeeky> byorgey: yeah, I was just trying to rule out you being automatically added by some system
2012-01-06 20:05:51 UTC <byorgey> that doesn't immediately ring a bell, I'll have to refresh my memory
2012-01-06 20:06:09 UTC <tgeeky> http://hackage.haskell.org/trac/ghc/ticket/1480
2012-01-06 20:06:58 UTC <tgeeky> I was wondering if this potential strategy would work:
2012-01-06 20:07:03 UTC <byorgey> oh, if you read the description you'll see why I was interested in it
2012-01-06 20:07:07 UTC <byorgey> but that was four years ago
2012-01-06 20:07:11 UTC <byorgey> I have no idea what would be involved
2012-01-06 20:07:22 UTC <tgeeky> ok
2012-01-06 20:10:23 UTC <byorgey> presumably it is not theoretically difficult but there may be lots of practical implementation issues to be worked out, I don't know
2012-01-07 20:59:11 UTC <peterjoel> hi I'm looking for a haskell project to get involved with. Are some areas in diagrams that would be suitable for a relative novice?
2012-01-07 20:59:36 UTC <mekeor> peterjoel: byorgey is the maintainer/founder of diagrams.
2012-01-07 21:00:13 UTC <mekeor> ACTION is just a nooby wanna-be-user of diagrams (yet).
2012-01-07 21:00:49 UTC <peterjoel> ok thanks I'll message him directly
2012-01-07 21:00:56 UTC <mekeor> nono.
2012-01-07 21:01:02 UTC <mekeor> peterjoel: ask him inhere.
2012-01-07 21:01:07 UTC <mekeor> i wanna read that, too.
2012-01-07 21:01:14 UTC <peterjoel> oh, I thought I just did :)
2012-01-07 21:01:37 UTC <mekeor> (because i'd also like to get involved in a haskell-project...)
2012-01-07 21:01:43 UTC <byorgey> peterjoel: yes!
2012-01-07 21:01:47 UTC <mekeor> =)
2012-01-07 21:01:49 UTC <peterjoel> oh hi
2012-01-07 21:01:49 UTC <byorgey> at least I hope so
2012-01-07 21:02:01 UTC <byorgey> hi =)
2012-01-07 21:02:10 UTC <peterjoel> yeah I followed links via the hac boston page
2012-01-07 21:02:28 UTC <byorgey> ah, yeah, sadly I won't be at hac boston after all
2012-01-07 21:02:57 UTC <byorgey> but you are still welcome to get involved with diagrams =)
2012-01-07 21:03:16 UTC <peterjoel> ok
2012-01-07 21:03:28 UTC <peterjoel> so can you suggest where I should start, to get a grip on it?
2012-01-07 21:03:50 UTC <peterjoel> and what are the areas that are in need of work
2012-01-07 21:04:43 UTC <byorgey> peterjoel: to start, I would suggest first working through the tutorial, and just playing around with it a bit
2012-01-07 21:04:58 UTC <peterjoel> ok, yes I haven't done that yet
2012-01-07 21:05:11 UTC <byorgey> peterjoel: during that process you may think of things that could be improved etc.
2012-01-07 21:05:26 UTC <byorgey> peterjoel: there is also a list of open tickets here: http://code.google.com/p/diagrams/issues/list
2012-01-07 21:05:48 UTC <byorgey> right now there aren't a whole lot marked 'Easy' but you could look through that for potential projects
2012-01-07 21:06:02 UTC <mekeor> may i ask why diagrams is on google-code and not on github? (i prefer git...)
2012-01-07 21:06:37 UTC <byorgey> peterjoel: in the meantime I will be on the lookout for easy improvements/projects I can add as tickets for you (or others) to tackle
2012-01-07 21:06:53 UTC <peterjoel> ok that would be great
2012-01-07 21:07:08 UTC <byorgey> mekeor: actually only the bug tracker is on google-code, not the source
2012-01-07 21:07:23 UTC <mekeor> ah, cool.
2012-01-07 21:07:42 UTC <byorgey> mekeor: the source is hosted on patch-tag.com, using darcs
2012-01-07 21:08:05 UTC <peterjoel> I never used darcs
2012-01-07 21:08:09 UTC <mekeor> me, too.
2012-01-07 21:08:12 UTC <peterjoel> what is it most similar too?
2012-01-07 21:08:25 UTC <byorgey> mekeor: we used to have it mirrored on github but there are some bugs being fixed in the darcs-git bridge
2012-01-07 21:08:34 UTC <peterjoel> right ok
2012-01-07 21:08:41 UTC <mekeor> i see.
2012-01-07 21:10:24 UTC <byorgey> it's similar in some ways to git, but much more elegant (e.g. cherrypicking actually works) and with a much better command-line interface.
2012-01-07 21:10:40 UTC <byorgey> from my point of view the only things git has going for it are (1) lots of people use it and (2) github is awesome.
2012-01-07 21:10:59 UTC <byorgey> of course, those are pretty strong reasons to use a distributed version control system.
2012-01-07 21:11:00 UTC <peterjoel> ah nice. I hate git cherrypicking
2012-01-07 21:11:43 UTC <peterjoel> ok so I'll get that working as my first step then :)
2012-01-07 21:12:12 UTC <byorgey> peterjoel: I wouldn't do that as the first step.
2012-01-07 21:12:58 UTC <byorgey> peterjoel: you won't want to work through the tutorial while using the latest darcs version of the source, since there may be things that have changed
2012-01-07 21:13:20 UTC <byorgey> I'd recommend working through the tutorial with the latest released version of diagrams (i.e. just install it with cabal-install)
2012-01-07 21:14:36 UTC <peterjoel> ok
2012-01-07 21:14:44 UTC <peterjoel> sounds vaguely sensible :)
2012-01-07 21:15:11 UTC <byorgey> then later you can get the latest source
2012-01-07 21:15:54 UTC <byorgey> anyway, I am just trying to steer you to the most interesting parts first
2012-01-07 21:16:10 UTC <byorgey> but if getting a new version control system installed sounds interesting to you, then by all means =)
2012-01-07 21:16:36 UTC <peterjoel> yeah, not exactly :)
2012-01-08 01:01:05 UTC <peterjoel> I'm having trouble installing diagrams with cabal
2012-01-08 01:01:09 UTC <peterjoel> setup: The pkg-config package pango version <1.26.0 || >1.26.2 is required but it could not be found.
2012-01-08 01:01:18 UTC <peterjoel> any ideas how I should proceed from here?
2012-01-08 02:06:46 UTC <byorgey> peterjoel: you need to install the external pango library via your OS's package manager
2012-01-08 02:06:53 UTC <byorgey> peterjoel: what OS are you using?
2012-01-08 02:07:39 UTC <byorgey> peterjoel: well, you probably just need to install cairo, which will pull in pango as a dependency
2012-01-08 02:20:56 UTC <peterjoel> oh, I have cairo installed already
2012-01-08 02:21:18 UTC <peterjoel> I'm using OS X
2012-01-08 02:22:00 UTC <byorgey> peterjoel: ok, then I guess you need to install pango too
2012-01-08 02:22:08 UTC <byorgey> peterjoel: I'm not very familiar with OS X
2012-01-08 02:22:31 UTC <peterjoel> ok np, it doesn't look like it's going to be a huge problem
2012-01-08 02:22:55 UTC <luite> easiest is to use macports or homebrew to install stuff like this
2012-01-08 02:23:05 UTC <luite> sudo port install cairo
2012-01-08 02:24:54 UTC <byorgey> peterjoel: yes, luite is our resident OS X expert
2012-01-08 02:25:06 UTC <byorgey> where I define "expert" to mean "knows more than anyone else"
2012-01-08 02:25:15 UTC <luite> hehe not expert, I've only been using it for a few months :)
2012-01-08 02:25:23 UTC <luite> but that definition might do
2012-01-08 02:26:40 UTC <peterjoel> you only have to know more about it than 7 other people ;)
2012-01-08 03:05:53 UTC <peterjoel> ok I'm there! Just had to install a couple of things via macports instead
2012-01-08 03:05:57 UTC <peterjoel> thanks for your help
2012-01-08 03:07:36 UTC <byorgey> yay!
2012-01-08 03:37:28 UTC <tgeeky> byorgey: when I'm changing a package to compile on 7.4, and the solution is (mostly) peppering Eq constraints around.. is there a faster way to do this other than adding them by hand (or, by regex or something)
2012-01-08 04:54:00 UTC <tgeeky> > filter (liftA3 (&&) even (<3) (>5)) [1,2,3,4,5]
2012-01-08 04:54:03 UTC <tgeeky> derp
2012-01-08 04:54:05 UTC <diabot>   mueval: ExitFailure 1
2012-01-08 04:54:05 UTC <diabot>  mueval: Prelude.undefined
2012-01-08 14:05:55 UTC <peterjoel> Getting error running the tutorial
2012-01-08 14:05:57 UTC <peterjoel> $ ghc --make src/DiagramsTutorial.lhs -o circle.pdf
2012-01-08 14:06:05 UTC <peterjoel> Linking circle.pdf ...
2012-01-08 14:06:06 UTC <peterjoel> ld: warning: in /opt/local/lib/libgtk-x11-2.0.dylib, file was built for unsupported file format which is not the architecture being linked (i386)
2012-01-08 14:06:15 UTC <peterjoel> that's the first error
2012-01-08 14:08:58 UTC <peterjoel> I expect this is more of an issue with macports and gtk?
2012-01-08 14:27:47 UTC <byorgey> peterjoel: does it work if you make a .png or .ps or .svg ?
2012-01-08 14:29:30 UTC <peterjoel> trying now
2012-01-08 14:29:54 UTC <peterjoel> it's quite slow even to fail
2012-01-08 14:31:15 UTC <byorgey> sigh
2012-01-08 14:31:42 UTC <byorgey> it seems every single person who tries cairo + OS X runs into a different problem =(
2012-01-08 14:34:27 UTC <peterjoel> ok, same error
2012-01-08 14:34:54 UTC <peterjoel> I'm going to try and reinstall gtk again later on today
2012-01-08 14:35:36 UTC <peterjoel> maybe try and build from source manually instead of using macports
2012-01-08 17:03:51 UTC <byorgey> tgeeky: I don't know of a faster way to do it, sadly
2012-01-08 17:30:56 UTC <luite> hmm, I
2012-01-08 17:31:47 UTC <luite> 'm using a 64 bit ghc, I think you need to tell macports to build 32 bit libs if you need those. don't know if that's peterjoels problem
2012-01-09 00:31:17 UTC <byorgey> peterjoel: any luck?
2012-01-09 00:31:27 UTC <byorgey> (12:31) <     luite> 'm using a 64 bit ghc, I think you need to tell macports to build 32 bit libs if you need those. don't know if that's peterjoels problem
2012-01-09 00:31:47 UTC <byorgey> peterjoel: note luite's comment above
2012-01-09 00:36:15 UTC <peterjoel> could be the problem
2012-01-09 00:36:29 UTC <peterjoel> I'd assume it would get it right though. should be able to detect
2012-01-09 11:50:30 UTC <diabot> [active:Brent Yorgey <byorgey] a few more tests (and 38 more)
2012-01-09 13:08:10 UTC <diabot> [active:Brent Yorgey <byorgey] a few more tests (and 38 more)
2012-01-11 01:20:37 UTC <tgeeky> woohoo!
2012-01-11 01:20:40 UTC <tgeeky> ACTION is back home, finally!
2012-01-11 01:20:47 UTC <tgeeky> sleeping in his own bead
2012-01-11 01:29:07 UTC <luite> :)
2012-01-11 02:10:52 UTC <tgeeky> and hooray, you made it back too!
2012-01-11 02:11:11 UTC <luite> I'm back already for a while :(
2012-01-11 17:02:40 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2012-01-11 19:22:01 UTC <diabot> [diagrams-contrib:Brent Yorgey <byorgey] add Eq and Show constraints needed under ghc 7.4.1 (and 13 more)
2012-01-14 20:41:26 UTC <peterjoel> hi, I was having problems last week with installing diagrams. which was due to some libs not being compiled by macports for 64bit or 32bit resp. in the universal binaries.
2012-01-14 20:41:43 UTC <peterjoel> I've solved that (!!) but I now have this problem, which I'm hoping will be easier
2012-01-14 20:42:00 UTC <peterjoel> $ cabal install diagrams
2012-01-14 20:42:00 UTC <peterjoel> Resolving dependencies...
2012-01-14 20:42:00 UTC <peterjoel> cabal: cannot configure diagrams-cairo-0.4. It requires base >=4.2 && <4.5
2012-01-14 20:42:00 UTC <peterjoel> For the dependency on base >=4.2 && <4.5 there are these packages:
2012-01-14 20:42:00 UTC <peterjoel> base-4.2.0.0, base-4.2.0.1, base-4.2.0.2, base-4.3.0.0, base-4.3.1.0,
2012-01-14 20:42:01 UTC <peterjoel> base-4.4.0.0 and base-4.4.1.0. However none of them are available.
2012-01-14 20:42:01 UTC <peterjoel> base-4.2.0.0 was excludedâ¦. etcâ¦.
2012-01-14 20:43:02 UTC <peterjoel> oh, I truncated the log too soon. There are 7 lines similar to this:
2012-01-14 20:43:03 UTC <peterjoel> base-4.2.0.0 was excluded because of the top level dependency base -any
2012-01-14 20:43:13 UTC <peterjoel> various versions between 4.2 and 4.5
2012-01-14 20:55:13 UTC <byorgey> peterjoel: what version of GHC do you have?
2012-01-14 20:57:46 UTC <peterjoel> from the latest HP
2012-01-14 20:57:57 UTC <peterjoel> one sec
2012-01-14 20:58:48 UTC <peterjoel> that's weird. According to cabal it's 6.10.4
2012-01-14 20:59:01 UTC <peterjoel> or isn't that the same thing?
2012-01-14 20:59:31 UTC <peterjoel> hmm I thought I previously had 7.0.4 or thereabouts
2012-01-14 20:59:39 UTC <byorgey> 6.10.4 is very old
2012-01-14 20:59:47 UTC <byorgey> I doubt diagrams builds on it.
2012-01-14 20:59:57 UTC <byorgey> 7.0.4 should work fine.
2012-01-14 21:00:30 UTC <byorgey> yes, and 7.0.4 is the version that comes with the platform.
2012-01-14 21:00:50 UTC <peterjoel> I'm a bit confused how I'm in this position then!
2012-01-14 21:00:55 UTC <byorgey> heh, me too!
2012-01-14 21:00:59 UTC <peterjoel> ok thanks for the help
2012-01-14 21:01:02 UTC <byorgey> peterjoel: what is the output of  ghc --version ?
2012-01-14 21:01:08 UTC <peterjoel> 6.10.4
2012-01-14 21:01:18 UTC <peterjoel> so obviously something has gone wrong!
2012-01-14 21:01:20 UTC <byorgey> yeah, weird, I wonder how you got that
2012-01-14 21:02:10 UTC <peterjoel> I only ever installed via the HP installer, and the first time I did that was August/September
2012-01-14 21:02:19 UTC <peterjoel> well anyway, I can fix it :)
2012-01-14 21:02:22 UTC <byorgey> ok =)
2012-01-14 21:02:30 UTC <peterjoel> thanks
2012-01-14 21:02:50 UTC <byorgey> sure
2012-01-14 21:02:54 UTC <byorgey> hope you can get it to work!
2012-01-14 21:03:48 UTC <byorgey> looks like GHC 6.10.4 came with the very first version of the platform, 2009.2
2012-01-14 21:21:06 UTC <luite> what does which ghc say?
2012-01-15 00:23:17 UTC <peterjoel1> I've now managed to get my ghc all reinstalled, and (I think) all the dependencies. Butâ¦ I still can't compile the tutorial
2012-01-15 00:23:19 UTC <peterjoel1> $ ghc --make DiagramsTutorial.lhs
2012-01-15 00:23:19 UTC <peterjoel1> [1 of 1] Compiling Main             ( DiagramsTutorial.lhs, DiagramsTutorial.o )
2012-01-15 00:23:19 UTC <peterjoel1> Linking DiagramsTutorial ...
2012-01-15 00:23:19 UTC <peterjoel1> Undefined symbols:
2012-01-15 00:23:19 UTC <peterjoel1>   "_iconv_open", referenced from:
2012-01-15 00:23:19 UTC <peterjoel1>       _hs_iconv_open in libHSbase-4.3.1.0.a(iconv.o)
2012-01-15 00:23:19 UTC <peterjoel1>      (maybe you meant: _hs_iconv_open)
2012-01-15 00:23:20 UTC <peterjoel1>   "_locale_charset", referenced from:
2012-01-15 00:23:20 UTC <peterjoel1>       _localeEncoding in libHSbase-4.3.1.0.a(PrelIOUtils.o)
2012-01-15 00:23:21 UTC <peterjoel1>   "_iconv", referenced from:
2012-01-15 00:23:21 UTC <peterjoel1>       _hs_iconv in libHSbase-4.3.1.0.a(iconv.o)
2012-01-15 00:23:22 UTC <peterjoel1>      (maybe you meant: _hs_iconv_open, _hs_iconv , _hs_iconv_close )
2012-01-15 00:24:00 UTC <peterjoel1> $ ghc --make DiagramsTutorial.lhs
2012-01-15 00:24:00 UTC <peterjoel1> [1 of 1] Compiling Main Â  Â  Â  Â  Â  Â  ( DiagramsTutorial.lhs, DiagramsTutorial.o )
2012-01-15 00:24:00 UTC <peterjoel1> Linking DiagramsTutorial ...
2012-01-15 00:24:00 UTC <peterjoel1> Undefined symbols:
2012-01-15 00:24:14 UTC <peterjoel1> Â "_iconv_open", referenced from:
2012-01-15 00:24:14 UTC <peterjoel1> Â  Â  Â _hs_iconv_open in libHSbase-4.3.1.0.a(iconv.o)
2012-01-15 00:24:14 UTC <peterjoel1> Â  Â  (maybe you meant: _hs_iconv_open)
2012-01-15 00:24:14 UTC <peterjoel1> Â "_locale_charset", referenced from:
2012-01-15 00:24:14 UTC <peterjoel1> Â  Â  Â _localeEncoding in libHSbase-4.3.1.0.a(PrelIOUtils.o)
2012-01-15 00:24:14 UTC <peterjoel1> Â "_iconv", referenced from:
2012-01-15 00:24:25 UTC <peterjoel1> _hs_iconv in libHSbase-4.3.1.0.a(iconv.o)
2012-01-15 00:24:25 UTC <peterjoel1> Â  Â  (maybe you meant: _hs_iconv_open, _hs_iconv , _hs_iconv_close )
2012-01-15 00:24:25 UTC <peterjoel1> Â "_iconv_close", referenced from:
2012-01-15 00:24:25 UTC <peterjoel1> Â  Â  Â _hs_iconv_close in libHSbase-4.3.1.0.a(iconv.o)
2012-01-15 00:24:25 UTC <peterjoel1> Â  Â  (maybe you meant: _hs_iconv_close)
2012-01-15 00:24:26 UTC <peterjoel1> ld: symbol(s) not found
2012-01-15 00:24:26 UTC <peterjoel1> collect2: ld returned 1 exit status
2012-01-15 00:24:56 UTC <peterjoel1> (sorry if I posted that all twice - I got a notice that it had been throttled, so I wasn't sure)
2012-01-15 00:28:42 UTC <fryguybob> I don't know if any of the advice here applies or not:  http://comments.gmane.org/gmane.comp.lang.haskell.cafe/80521
2012-01-15 00:43:00 UTC <peterjoel1> seems to. But it didn't work
2012-01-15 00:43:26 UTC <peterjoel1> does this look correct to you?
2012-01-15 00:43:30 UTC <peterjoel1> $ cabal install --reinstall --extra-include-dirs=/opt/local/include --extra-lib-dirs=/opt/local/lib diagrams
2012-01-15 00:43:49 UTC <byorgey> peterjoel1: what do you mean by "it" when you say "it didn't work"?
2012-01-15 00:44:24 UTC <byorgey> peterjoel1: that looks reasonable, I've no idea whether it is "correct"
2012-01-15 00:44:29 UTC <peterjoel1> :) ok
2012-01-15 00:44:50 UTC <peterjoel1> I mean I still get the same errors when trying to compile diagramsTutorial
2012-01-15 00:45:17 UTC <byorgey> peterjoel1: yes, but after doing what?  That thread that fryguybob linked seems to suggest many possible solutions.
2012-01-15 00:46:00 UTC <peterjoel1> oh I see. I've jumped into the first answer and missed the rest. I'll read on. Apologies
2012-01-15 00:46:58 UTC <byorgey> no worries!
2012-01-15 00:59:40 UTC <peterjoel1> in case you are interested, I got it working. I needed to add -L/usr/lib as a GHC arg
2012-01-15 01:01:43 UTC <fryguybob> excellent!
2012-01-15 01:03:15 UTC <byorgey> yay!
2012-01-15 01:05:21 UTC <peterjoel1> it's the end of my day now.. but I should be back tomorrow with actual questions about diagrams :)
2012-01-15 01:05:39 UTC <byorgey> peterjoel1: great =)
2012-01-15 01:05:42 UTC <peterjoel1> thanks for your patience
2012-01-15 01:05:49 UTC <byorgey> peterjoel1: I may not be on much tomorrow
2012-01-15 01:06:22 UTC <byorgey> peterjoel1: thanks for *your* patience!  getting diagrams to work on non-linux OSes is currently way too difficult =(
2012-01-15 01:06:29 UTC <peterjoel1> no worries. I'm hoping the hard part is over :)
2012-01-15 01:07:03 UTC <peterjoel1> I wish I knew exactly what I did, so I could write it down somewhere
2012-01-15 01:07:23 UTC <peterjoel1> backtracked so many times, I'm not really sure what were the steps that made the difference
2012-01-15 01:18:21 UTC <peterjoel1> byorgey: nearly forgot to ask. Did you think of any suitable tasks that wouldn't be too challenging for a newbie?
2012-01-15 01:18:53 UTC <byorgey> peterjoel1: ah, sorry, haven't gotten around to thinking about it yet
2012-01-15 01:19:14 UTC <byorgey> peterjoel1: I'll try to think about it in the next couple days
2012-01-15 01:19:55 UTC <peterjoel1> ok thanks. I can fill a couple of days just playing with it anyway.
2012-01-15 03:39:41 UTC <tgeeky> byorgey: when you are working with affine spaces, vector spaces, etc ... things that are more complicated than types like monoid, applicative, stream, monoid, etc -- do you think of these things at the category theory level? at the traditional mathematics level? both?
2012-01-15 03:40:19 UTC <byorgey> uh... I think of them at whatever level makes sense for whatever I am doing
2012-01-15 03:40:26 UTC <tgeeky> I was going to add that third option
2012-01-15 03:40:30 UTC <tgeeky> "just work with the code in front of you"
2012-01-15 03:41:16 UTC <tgeeky> byorgey: are you uhh... proficient with *all* of the concepts in the Casters (or the vast majority?)
2012-01-15 03:41:24 UTC <tgeeky> (this is a lot of things)
2012-01-15 03:41:33 UTC <byorgey> no, I'm not
2012-01-15 03:41:57 UTC <tgeeky> is your advisor?
2012-01-15 03:42:07 UTC <byorgey> no! she hates category theory =)
2012-01-15 03:42:08 UTC <tgeeky> ACTION forgets his name. Pierce?
2012-01-15 03:42:17 UTC <tgeeky> oh. right. that's her.
2012-01-15 03:43:02 UTC <byorgey> Stephanie Weirich
2012-01-15 03:43:07 UTC <tgeeky> right.
2012-01-15 03:43:15 UTC <tgeeky> I always associate you with Pierce. I think.
2012-01-15 03:43:33 UTC <byorgey> I've worked with him on various things as well.
2012-01-15 03:45:19 UTC <tgeeky> byorgey: Uh, as far as I know despite the ~ 30 or so papers about the circle fractal, only one of them is a dissertation. Elena Fuchs, under Peter Sarnak, from Princeton. She spent a year at Princeton IAS and now she's at Berkley.
2012-01-15 03:46:35 UTC <tgeeky> Anyway, she has two short (20 min) lectures where she presents some interesting mathematics and a few open questions. I figure they might interest you, and might make interesting material for the species project
2012-01-15 03:47:13 UTC <tgeeky> This one: http://video.ias.edu/math/stpm2010/fuchs STPM - Local to Global Phenomena in Deficient Groups
2012-01-15 03:47:33 UTC <tgeeky> And this one: http://video.ias.edu/conversations/fuchs STPM - Local to Global Phenomena in Deficient Groups
2012-01-15 03:47:36 UTC <tgeeky> err
2012-01-15 03:47:54 UTC <tgeeky> This one: http://video.ias.edu/conversations/fuchs - Expander Graphs: Why Number Theorists Might Care About Network Optimization
2012-01-15 03:48:13 UTC <tgeeky> byorgey: let me know if and when you watch and/or enjoy them
2012-01-15 03:49:14 UTC <byorgey> tgeeky: thanks
2012-01-15 03:50:03 UTC <tgeeky> byorgey: I am a little miffed. It looks like the term "deficient groups" is something she is introducing (in the context of the c.f. group)
2012-01-15 03:50:26 UTC <tgeeky> i like that group, damn it! It's not difficient. Come here. There there. It's ok.
2012-01-15 03:51:58 UTC <byorgey> hehe
2012-01-15 04:54:14 UTC <tgeeky> byorgey: wow: http://flare.prefuse.org/demo
2012-01-15 20:04:02 UTC <fryguybob> ACTION considers gluing together ajax.org's Ace, pdf.js, pdflatex, darcs, and diagrams.
2012-01-15 20:12:43 UTC <byorgey> fryguybob: I don't know what those first two are, but it sounds awesome =)
2012-01-15 20:13:51 UTC <fryguybob> Ace is a javascript text editor and pdf.js is a javascript pdf viewer.
2012-01-15 20:14:14 UTC <byorgey> oh I see, nice
2012-01-15 20:14:57 UTC <fryguybob> I'm considering options for a better setup for LaTeX for Rebekah.
2012-01-16 06:58:33 UTC <mgsloan> 'lo! Byorgey - I've got a force layout gtk-toy
2012-01-16 07:00:15 UTC <luite> cool :)
2012-01-16 07:01:22 UTC <mgsloan> check out the code! https://github.com/mgsloan/gtk-toy-diagrams/blob/master/src/TestPhysics.hs
2012-01-16 07:06:31 UTC <mgsloan> ACTION thinks it's pretty clean
2012-01-31 20:24:18 UTC <fryguybob> We are being logged now, stop talking about snakes!
2012-01-31 20:24:34 UTC <byorgey> ok, no more snakes
2012-01-31 20:24:40 UTC <byorgey> I will not say anything about snakes.
2012-01-31 20:31:31 UTC <tgeeky> Hey Brent! What's the name of that bar with all the weird stuff on the walls? (http://www.snakerivergrill.com/)
2012-01-31 20:31:38 UTC <tgeeky> Snakes!
2012-01-31 20:31:49 UTC <tgeeky> ACTION desperately hopes he's seen super troopers
2012-01-31 20:42:11 UTC <byorgey> ACTION hasn't
2012-01-31 20:42:41 UTC <tgeeky> byorgey: http://www.funnyordie.com/videos/0e65e16c1c/super-troopersshenanigans-from-dirttron
2012-01-31 21:11:55 UTC <byorgey> so. shall we do a new diagrams release soon?
2012-01-31 21:12:43 UTC <tgeeky> byorgey: indeed
2012-01-31 21:13:00 UTC <tgeeky> i was going to mention it the other day, but since I've done nil to help you I figured that would be rude
2012-01-31 21:13:06 UTC <byorgey> hehe
2012-01-31 21:14:03 UTC <byorgey> I need to write documentation for animation stuff first
2012-01-31 21:14:22 UTC <byorgey> I mean, I guess technically I don't, but I don't want to make a big announcement about the release until I do
2012-01-31 21:27:34 UTC <fryguybob> byorgey: Do you have more animation examples?
2012-01-31 21:45:15 UTC <fryguybob> The silence clearly means I should be making animation examples myself.  Animated snakes of course.
2012-01-31 21:45:41 UTC <fryguybob> ACTION disappears in a cloud of matlab...
2012-01-31 22:58:41 UTC <fryguybob> my kingdom for a MatLab let expression...
2012-02-01 01:23:53 UTC <byorgey> fryguybob: I only have a couple examples, I will be making more as part of the documentation
2012-02-01 01:24:12 UTC <fryguybob> :D
2012-02-01 01:29:20 UTC <luite> what are the supported output formats for animations?
2012-02-01 01:33:20 UTC <fryguybob> NTSC or PAL, 1.0 will have digital :P
2012-02-01 01:38:15 UTC <byorgey> luite: right now, the only supported output formats are PNG, PS, PDF, or SVG
2012-02-01 01:38:26 UTC <byorgey> a whole directory full of them ;)
2012-02-01 01:49:03 UTC <tgeeky> no amiga image format, no care!
2012-02-01 01:50:11 UTC <byorgey> eventually of course, I hope we'll have an OpenGL backend for animation
2012-02-01 01:54:04 UTC <tgeeky> to have an OpenGL framework that's abstract to the same level as diagrams is seems both beautiful and difficult to make work
2012-02-01 02:07:39 UTC <luite> hm why?
2012-02-01 02:08:08 UTC <luite> shouldn't be extremely difficult if you just use it for output
2012-02-01 02:23:07 UTC <tgeeky> luite: link to wolfgang ss?
2012-02-01 02:23:30 UTC <tgeeky> ss=screenshot
2012-02-01 02:24:11 UTC <luite> oh I thought you meant schutzstaffel ;p
2012-02-01 02:24:40 UTC <tgeeky> I often like schutzstaffels, dipped in butter sauce, on the rocks, with a twist.
2012-02-01 02:24:47 UTC <tgeeky> but *this* time, I meant screenshot.
2012-02-01 02:24:59 UTC <luite> http://hdiff.luite.com/tmp/
2012-02-01 02:25:00 UTC <tgeeky> god I really hope that isn't a terribly embarassing sentence.
2012-02-01 02:25:59 UTC <tgeeky> oh. schutzstaffels aren't foodstuff at all.
2012-02-01 02:26:06 UTC <luite> not exactly :)
2012-02-01 02:26:06 UTC <fryguybob> luite: Your todo list is too long
2012-02-01 02:26:14 UTC <luite> fryguybob: it's outdated
2012-02-01 02:26:20 UTC <luite> some stuff has already been done
2012-02-01 02:26:31 UTC <fryguybob> Woohoo!
2012-02-01 02:28:09 UTC <fryguybob> Humm, when the form says "salary expectation" is $1,000,000 is too much?
2012-02-01 02:28:20 UTC <luite> permissions, resources, older revisions, authentication and dialog improvements are already done
2012-02-01 02:28:31 UTC <luite> fryguybob: depends on the position
2012-02-01 02:29:12 UTC <luite> and some points from 2. are also done
2012-02-01 02:29:30 UTC <tgeeky> fryguybob: does your job involve hamburger meat?
2012-02-01 02:30:35 UTC <fryguybob> Summer grad student internship.  I guess only if I'm the meat.
2012-02-01 02:31:07 UTC <luite> in particular, from 2, sarch engine with autocomplete, special pages, improved ws ui, discussions, lhs upload are done
2012-02-01 02:31:30 UTC <tgeeky> fryguybob: yes, I think I can unequivocally say that $1e6 is too much.
2012-02-01 02:31:44 UTC <fryguybob> drat
2012-02-01 02:32:00 UTC <tgeeky> indeed, it might be $1e6 too much.
2012-02-01 02:32:20 UTC <fryguybob> haha
2012-02-01 02:46:45 UTC <tgeeky> luite: hmm. Pretty much all searches run over the whole 5fb^-1 dataset have been null or negative. :/
2012-02-01 02:47:33 UTC <tgeeky> luite: going through the slides from this week has been very, very tedious
2012-02-01 02:51:46 UTC <luite> hmm
2012-02-01 02:52:00 UTC <luite> slides where>
2012-02-01 02:52:01 UTC <luite> ?
2012-02-01 02:53:24 UTC <tgeeky> luite: there are several sets
2012-02-01 02:53:27 UTC <tgeeky> here's todays
2012-02-01 02:53:29 UTC <tgeeky> https://indico.cern.ch/getFile.py/access?resId=0&materialId=slides&confId=174936
2012-02-01 02:53:32 UTC <tgeeky> from CMS
2012-02-03 01:08:42 UTC <luite> wooh new ghc!
2012-02-03 01:25:31 UTC <tgeeky> woohoo where?
2012-02-03 01:27:06 UTC <tgeeky> reddit, evidently
2012-02-03 01:27:17 UTC <tgeeky> cool. i was about to install 7.4.1-rc2, but I suppose i'll not
2012-02-03 01:42:35 UTC <luite> oh I saw it on the ghc mailing list
2012-02-03 01:55:26 UTC <tgeeky> luite: it's probably almost identical to rc2, but there are release notes \o/
2012-02-03 01:56:03 UTC <luite> I got some build failures :(
2012-02-03 01:56:42 UTC <tgeeky> things that didn't fail on rc1 or 2?
2012-02-03 01:57:53 UTC <luite> possibly
2012-02-03 04:04:25 UTC <tgeeky> byorgey: Data.Monoid now exports <> as an infix synonym for mappend It associates to the right, and has precedence 6. <-- yay?
2012-02-03 04:08:26 UTC <luite> yeah <> was only added in rc2
2012-02-03 04:09:09 UTC <tgeeky> luite: how did you know that it was added in rc2?
2012-02-03 04:09:13 UTC <tgeeky> luite: hdiff?
2012-02-03 04:09:23 UTC <tgeeky> no.. hmm there aren't release notes for rcs, are there?
2012-02-03 04:10:10 UTC <luite> no, because I reported that some package did not build with 7.4.1 (rc2), then the package author downloaded rc1, tested, built fine, and then thought my bug report was incorrect :'(
2012-02-03 04:10:19 UTC <tgeeky> doh!
2012-02-03 04:48:19 UTC <luite> tgeeky: bytestring probably came with ghc
2012-02-03 04:49:11 UTC <tgeeky> luite: yeah, but what are the odds with that version being different than what's on hackage?
2012-02-03 04:49:14 UTC <tgeeky> if they have the same version#
2012-02-03 04:51:23 UTC <luite> hmm, dunno, more strange things happen
2012-02-03 04:51:45 UTC <luite> it's a bit annoying that the version that comes with ghc is sometimes not uplaoded to haskell
2012-02-03 14:35:43 UTC <byorgey> tgeeky: oh, nice!
2012-02-03 14:37:32 UTC <byorgey> although right now diagrams uses the <> from semigroups
2012-02-03 14:37:41 UTC <byorgey> we'll have to see what edwardk ends up doing with semigroups
2012-02-03 21:19:44 UTC <fryguybob> ACTION is one background check away from internship.
2012-02-03 21:20:55 UTC <tgeeky> fryguybob: ooh, tough going. I already told them you enjoy smoking lambdas, huffing on "essence of algebraic proof", and the occasional extramarital affair with Mrs. Lambdabot.
2012-02-03 21:22:16 UTC <fryguybob> Drat.
2012-02-03 21:22:18 UTC <fryguybob>  :D
2012-02-03 21:22:47 UTC <tgeeky> then again, it's an internship, so they'll probably overlook those things as long as they can pay you in communion wafers
2012-02-03 22:34:16 UTC <luite> hmm, looks like the ghc 7.4 upgrade is easier than expected :)
2012-02-03 22:35:03 UTC <luite> hmm, ice skating tomorrow, skiing monday and tuesday :)
2012-02-03 23:02:05 UTC <luite> hmm, combinatorics+haskell :)
2012-02-03 23:38:04 UTC <luite> hm when is a ghc 7.4 compatible diagrams going to be released?
2012-02-03 23:54:18 UTC <luite> hmm apparently cairo also doesn't work with 7.4.1 yet
2012-02-04 00:37:31 UTC <byorgey> luite: the darcs version of diagrams-core, -lib, and -cairo are all already compatible with 7.4
2012-02-04 00:37:41 UTC <byorgey> I plan to release a new version soon
2012-02-04 00:37:55 UTC <byorgey> along with instructions on how to build gtk/cairo under 7.4
2012-02-04 00:38:49 UTC <luite> yeah I've already installed it, needed some minor patches
2012-02-04 00:38:58 UTC <luite> in dependencies
2012-02-04 00:39:05 UTC <luite> semigroupoids didn't compile
2012-02-04 00:39:45 UTC <byorgey> oh really?
2012-02-04 00:40:33 UTC <luite> yeah <> conflict
2012-02-04 00:40:40 UTC <byorgey> ahhhh
2012-02-04 00:40:49 UTC <byorgey> apparently that only got added in rc2
2012-02-04 00:40:52 UTC <luite> yep
2012-02-04 00:41:01 UTC <byorgey> which is why I didn't notice it when testing with rc1
2012-02-04 00:41:29 UTC <byorgey> I'm sure edwardk will fix that soon
2012-02-04 00:41:55 UTC <luite> wolfgang: /home/wolfgang/.cabal/lib/cairo-0.12.2/ghc-7.4.1/HScairo-0.12.2.o: unknown symbol `cairo_get_target' <- is this the reason for the gtk/cairo instructions?
2012-02-04 00:42:29 UTC <byorgey> eek, I don't know
2012-02-04 00:43:32 UTC <luite> gtk2hs did install without errors (from darcs), but doesn't seem to work
2012-02-04 00:43:39 UTC <byorgey> hrm
2012-02-04 00:44:56 UTC <luite> is another backend already usable? (should generate output suitable for web, svg or png preferably)
2012-02-04 00:45:27 UTC <byorgey> no
2012-02-04 00:45:48 UTC <byorgey> there is a working postscript backend, and an HTML5 canvas backend is being worked on
2012-02-04 00:46:27 UTC <byorgey> SVG backend is a bit stalled at the moment, but I saw Robin Morrisset (who wrote an SVG backend and then never released it) at POPL last week and begged him to send me the code
2012-02-04 00:46:28 UTC <luite> hmok, I'll try to find out what;s wrong with cairo then :)
2012-02-04 00:54:25 UTC <luite> hm the examples do run, so i must be doing something wrong
2012-02-04 01:09:49 UTC <luite> byorgey: oh it was a permissions problem, apparently the new ghc's linker needs self:fifo_file { write getattr } permissions
2012-02-04 01:18:31 UTC <byorgey> ah
2012-02-04 01:18:48 UTC <byorgey> so it's just an SELinux problem?
2012-02-04 01:22:02 UTC <luite> yeah, I ran the usual examples as an unrestricted user, then ran wolfgang, the daemon runs as root but has some SELinux restrictions, forgot about that :)
2012-02-04 01:23:41 UTC <byorgey> ok =)
2012-02-04 01:44:10 UTC <tgeeky> are we releasing wolfgang!? :O
2012-02-04 01:44:12 UTC <tgeeky> closed beta?
2012-02-04 01:44:36 UTC <byorgey> eventually!
2012-02-04 01:44:50 UTC <byorgey> but not right this minute, I don't think
2012-02-04 01:48:44 UTC <luite> tgeeky: I'm just trying to get it running on what will hopefully be more or less the same environment as the final one, ubuntu 11.10 and ghc 7.4.1
2012-02-04 01:50:11 UTC <tgeeky> luite: me wonders, for in the far future, if there is anything like what you're using SELinux for in Windows
2012-02-04 01:50:51 UTC <luite> dunno
2012-02-04 01:51:28 UTC <luite> http://hdiff.luite.com/cgit/binary-generic/tree/src/Data/Binary/Generic.hs#n74 <- does anyone know what he's doing on line 74 and why?
2012-02-04 01:52:55 UTC <byorgey> luite: I think so
2012-02-04 01:53:04 UTC <byorgey> luite: I don't know what 'dataTypeOf' does
2012-02-04 01:53:29 UTC <byorgey> luite: but presumably the idea is that you pass 'dataTypeOf' a value which is ignored, and the only important thing is its type
2012-02-04 01:53:48 UTC <byorgey> luite: so you have a value of type  'Get a', and you want to call 'dataTypeOf' on the type 'a'
2012-02-04 01:54:15 UTC <byorgey> so you need to construct a value of type 'a', but it's OK if that value is _|_
2012-02-04 01:54:35 UTC <byorgey> so one way to do that is to apply a function of type  Get b -> b
2012-02-04 01:54:55 UTC <byorgey> the other way to do it would be using -XScopedTypeVariables, and bring the 'a' into scope and then write  (undefined :: a)
2012-02-04 01:55:11 UTC <luite> yes that's what I did to fix it, because I thought that was what he meant
2012-02-04 01:55:20 UTC <byorgey> did that answer your question?
2012-02-04 01:55:32 UTC <byorgey> 'fix it'? oh, was it broken?
2012-02-04 01:55:48 UTC <luite> yes, ghc 7.4 thinks this is ambiguous
2012-02-04 01:56:00 UTC <luite> while older ghc apparently thing it's fine
2012-02-04 01:56:02 UTC <byorgey> hrm, interesting
2012-02-04 01:56:26 UTC <byorgey> I don't see why it would be ambiguous
2012-02-04 01:57:10 UTC <luite> oh right, I see now what he's doing, thanks
2012-02-04 02:11:58 UTC <luite> did you switch to TypeFamilies for CairoOptions?
2012-02-04 02:12:16 UTC <luite> or has that always been an associated data thingie
2012-02-04 02:17:41 UTC <byorgey> it's always been one
2012-02-04 02:17:56 UTC <byorgey> but recent versions of GHC have some weirdnesses with exporting it
2012-02-04 02:18:26 UTC <luite> hm that's odd, with 7.2 it worked without importing .Internal
2012-02-04 02:18:32 UTC <luite> but with 7.4 it doesn't
2012-02-04 02:19:18 UTC <byorgey> indeed
2012-02-04 02:19:21 UTC <byorgey> weird, isn't it?
2012-02-04 02:23:52 UTC <tgeeky> byorgey: hm. this kind of thing has a new flavor to me: http://www.typesandotherdistractions.com/2012/02/fun-with-xpolykinds-polykinded-folds.html
2012-02-04 02:24:07 UTC <byorgey> this "kind" of thing hehe ;)
2012-02-04 02:24:25 UTC <tgeeky> I can't put my finger on it, but I think it's just awe at the generality of the code that's just in a blog post
2012-02-04 02:24:34 UTC <byorgey> yeah, it's pretty sweet =)
2012-02-04 02:24:53 UTC <tgeeky> I'd suspect to convert this into a paper would take a while, but I'd much prefer this, thank you.
2012-02-04 02:25:40 UTC <luite> ah edwardk is a fast releaser :)
2012-02-04 02:26:30 UTC <byorgey> see, I told you he would fix it soon =)
2012-02-04 03:06:07 UTC <luite> whoaht it worky with 7.4 and diagrams 0.5 from darcs
2012-02-04 03:06:57 UTC <luite> and yesod 0.10
2012-02-04 03:20:26 UTC <tgeeky> woohoo!
2012-02-04 03:28:33 UTC <byorgey> yaaaay! \o/
2012-02-05 03:56:33 UTC <cheater_> :o
2012-02-05 03:58:15 UTC <cheater_> ACTION likes the description on the page in the topic
2012-02-05 14:06:11 UTC <byorgey> cheater: =)
2012-02-05 14:06:20 UTC <cheater> :)
2012-02-06 20:54:54 UTC <tgeeky> byorgey: did you get any news on funding of your proposal?
2012-02-06 20:57:13 UTC <byorgey> tgeeky: which one? the species one?
2012-02-06 20:57:21 UTC <tgeeky> byorgey: yessir
2012-02-06 20:57:49 UTC <byorgey> tgeeky: remember, this is the United States Government we are talking about here
2012-02-06 20:58:09 UTC <tgeeky> byorgey: oh. I forgot to add in 3 month delays
2012-02-06 20:58:16 UTC <byorgey> tgeeky: try 6.
2012-02-06 20:58:20 UTC <tgeeky> lolol
2012-02-06 20:58:26 UTC <byorgey> tgeeky: seriously, we are supposed to hear back in June
2012-02-06 20:58:32 UTC <tgeeky> lol?
2012-02-06 20:58:35 UTC <tgeeky> that's absurd.
2012-02-06 20:58:41 UTC <byorgey> yep
2012-02-06 20:58:53 UTC <tgeeky> half a year for a 10 page grant proposal?
2012-02-06 20:59:03 UTC <tgeeky> evidently the read those things more closely than the legislation Congress passes
2012-02-06 20:59:16 UTC <byorgey> tgeeky: to be fair, they didn't just get ONE grant proposal.
2012-02-06 20:59:39 UTC <tgeeky> byorgey: yeah, but 6 months is an awfully long time on the scale of a PhD student.
2012-02-06 20:59:49 UTC <byorgey> I know. oh well.
2012-02-06 20:59:58 UTC <tgeeky> I guess that means in order to cover bases, one must file several of these and just hope for the best
2012-02-06 21:00:32 UTC <tgeeky> please tell me they allow multiple submissions by individuals?
2012-02-06 21:00:57 UTC <byorgey> yes, I think so, although in practice putting together several of these would be way too much work
2012-02-06 21:01:20 UTC <byorgey> I mean, putting together several at the same time
2012-02-06 21:02:04 UTC <byorgey> one does, in practice, file multiple grant proposals and hope for the best, but not all at once
2012-02-06 21:02:40 UTC <tgeeky> does your group have an overarching grant that funds you guys?
2012-02-06 21:03:45 UTC <byorgey> no, generally speaking each faculty member has a few active grants at any given time
2012-02-07 01:10:47 UTC <byorgey> ACTION works on a backend-agnostic builder service thingy
2012-02-07 01:10:53 UTC <byorgey> dunno if it will actually work yet
2012-02-07 01:14:12 UTC <fryguybob> Nice!
2012-02-07 04:39:31 UTC <tgeeky> byorgey: what are the goals or key features or whatever?
2012-02-07 04:49:27 UTC <byorgey> tgeeky: the goal is to be able to pass a piece of diagrams code in, and dynamically get a diagram out
2012-02-07 04:49:45 UTC <byorgey> tgeeky: useful for e.g. embedding diagrams in other document formats
2012-02-07 04:53:09 UTC <tgeeky> hm.
2012-02-07 04:53:26 UTC <tgeeky> when I played with diagrams, I noticed some options like that which already appeared in the executables made by diagrams
2012-02-07 04:53:36 UTC <tgeeky> but didn't get them to work (but didn't care, because pretty pictures)
2012-02-07 04:55:12 UTC <byorgey> hmm, not sure what you're referring to
2012-02-07 04:56:28 UTC <tgeeky>  ./apollo --help shows --loop and some related options
2012-02-07 04:57:38 UTC <byorgey> yeah, that's not really the same thing
2012-02-07 04:58:38 UTC <tgeeky> byorgey: I can understand that. Though I'm not sure how I would elaborate on the differences?
2012-02-07 04:58:54 UTC <byorgey> --loop auto-re-compiles the diagram while you are editing it
2012-02-07 04:59:26 UTC <tgeeky> you're working on something that does this for a set of files?
2012-02-07 04:59:32 UTC <byorgey> the thing I'm making now is something where you can just pass it a snippet of diagrams code and get back an image, dynamically, in the middle of another program.
2012-02-07 04:59:46 UTC <tgeeky> oh. that is cool. and different.
2012-02-07 05:00:02 UTC <tgeeky> so it has type String -> SVG or something along those lines?
2012-02-07 05:01:17 UTC <byorgey> more like  String -> lots of other arguments -> IO ()
2012-02-07 05:01:35 UTC <byorgey> but yes, that's the basic idea =)
2012-02-07 05:01:44 UTC <tgeeky> does it create the files on disk or something?
2012-02-07 05:02:16 UTC <byorgey> well, OK, I lied, it's actually  String -> ... -> IO (Result b v)   -- so what you get out depends on the backend
2012-02-07 05:02:46 UTC <byorgey> for an SVG backend you could just get out an SVG.  For the cairo backend you get out an IO () which creates the file on disk.
2012-02-07 05:05:26 UTC <tgeeky> well, sounds cool for sure.
2012-02-07 05:27:13 UTC <byorgey> https://patch-tag.com/r/byorgey/diagrams-builder/home   it works!!
2012-02-07 14:26:22 UTC <fryguybob> byorgey: Let me know when things are working enough with your builder thing and you want me to write a little LaTeX style for it.
2012-02-07 14:26:28 UTC <fryguybob> Oh, email...
2012-02-07 16:08:11 UTC <byorgey> fryguybob: yeah, go right ahead, it should be ready
2012-02-07 16:10:19 UTC <byorgey> installing pandoc under GHC 7.4.1, woo!
2012-02-07 16:23:32 UTC <alpounet> byorgey, do all packages build fine with ghc 7.4.1 ?
2012-02-07 16:23:41 UTC <alpounet> well i mean, common packages
2012-02-07 16:23:53 UTC <alpounet> like, is it usable for day-to-day dev now?
2012-02-07 16:24:13 UTC <tgeeky> alpounet: it should be. I'm about to upgrade to it.
2012-02-07 16:24:36 UTC <tgeeky> alpounet: the most common problem will be the (Eq a, Ord a) => Num a that you'll need to repair
2012-02-07 16:25:13 UTC <alpounet> oh god
2012-02-07 16:25:22 UTC <alpounet> all those packages that just won't build
2012-02-07 16:25:39 UTC <tgeeky> alpounet: you can probably use a regex to fix that problem
2012-02-07 16:26:07 UTC <alpounet> yeah sure but fixing every single dependency that has this problem... wow :P
2012-02-07 16:26:11 UTC <byorgey> alpounet: a bunch of packages are already upgraded.  but you'll probably still run into some issues now and then.
2012-02-07 16:26:42 UTC <byorgey> a regex!? =P
2012-02-07 16:27:25 UTC <tgeeky> byorgey: hehe. Mayyyyyyybee.
2012-02-07 16:27:38 UTC <alpounet> however, i'm really glad GHC devs decided to make this move
2012-02-07 16:29:41 UTC <tgeeky> alpounet: the best feature I've noticed in 7.4 (besides all of the kind stuff, which is much more than a 'feature'), is that all syntax works properly in ghci
2012-02-07 16:29:54 UTC <alpounet> yeah
2012-02-07 16:30:04 UTC <alpounet> that reaaaaaaaally handy
2012-02-07 16:30:18 UTC <alpounet> like when you write some "generic" framework, e.g some typeclasses
2012-02-07 16:30:31 UTC <tgeeky> and you can just copy/paste it from somewhere
2012-02-07 16:30:35 UTC <alpounet> yeah
2012-02-07 16:30:41 UTC <alpounet> and then write some data type and some instance
2012-02-07 16:30:54 UTC <alpounet> bam, you're done.
2012-02-07 16:31:10 UTC <tgeeky> well, for me, you get an error message, and you try again. and again. and then it works
2012-02-07 16:32:07 UTC <alpounet> yeah
2012-02-07 16:32:12 UTC <alpounet> much handier than editing a file and reloading it
2012-02-07 20:41:42 UTC <fryguybob> Humm, I don't think hint builds with 7.4.1
2012-02-07 20:42:52 UTC <luite> it's not really actively maintained i think
2012-02-07 20:43:40 UTC <luite> hehe interesting logo for diagrams :)
2012-02-07 20:44:33 UTC <byorgey> fryguybob: oh, phooey
2012-02-07 20:45:02 UTC <fryguybob> I'm not sure why either... It wants old-time, but I'm not sure where that is coming from.
2012-02-07 20:46:12 UTC <luite> good old-time
2012-02-07 20:48:52 UTC <byorgey> fryguybob: I'm trying now...
2012-02-07 20:49:03 UTC <byorgey> I don't see anything about old-time
2012-02-07 20:49:41 UTC <byorgey> I just get compile errors
2012-02-07 20:51:24 UTC <byorgey> let's see if it works on 7.2
2012-02-07 20:51:45 UTC <fryguybob> Sorry, I dropped out there, did 7.4.1 work?
2012-02-07 20:52:51 UTC <byorgey> no, I get compile errors for hint
2012-02-07 20:53:05 UTC <byorgey> it didn't say anything about old-time though.
2012-02-07 20:53:17 UTC <fryguybob> ah, ok
2012-02-07 20:54:57 UTC <byorgey> ok, it works under 7.2
2012-02-07 20:55:50 UTC <byorgey> awake hungry baby alert, back later
2012-02-07 21:36:46 UTC <tgeeky> byorgey: i'm gonna be an uncle on Feb 22nd! :O
2012-02-07 21:36:53 UTC <tgeeky> i'll have to get a quick parenting rundown from you :o
2012-02-07 22:11:10 UTC <byorgey> tgeeky: congrats!
2012-02-07 22:11:28 UTC <byorgey> tgeeky: incling is much easier than parenting
2012-02-07 22:11:34 UTC <byorgey> *uncling
2012-02-07 22:12:01 UTC <tgeeky> yes, I bet
2012-02-07 22:12:12 UTC <tgeeky> how long have you been an uncle? :O
2012-02-07 22:12:18 UTC <byorgey> (1) don't drop the kid  (2) get them awesome gifts  (3) when they start crying hand them back to parents
2012-02-07 22:12:37 UTC <tgeeky> here you go, crying thing over here! out of the way!
2012-02-07 22:12:46 UTC <byorgey> exactly =)
2012-02-07 22:57:22 UTC <byorgey> ACTION starts writing a generic tool for managing multi-package/repo Haskell projects
2012-02-07 22:57:45 UTC <byorgey> i.e. yak shaving, but I think many people will appreciate this particular naked yak
2012-02-07 22:59:56 UTC <mgsloan> yes!!
2012-02-07 23:00:26 UTC <byorgey> such as mgsloan =)
2012-02-07 23:00:29 UTC <fryguybob> soon we will know what color yak skin really is.
2012-02-07 23:00:51 UTC <mgsloan> ACTION has an "oss" directory with a bunch of repositories - tired of recompiling everything on ghc updates
2012-02-07 23:01:00 UTC <mgsloan> not that that happens that often
2012-02-07 23:01:04 UTC <mgsloan> it was kinda fun to rebuild the world
2012-02-07 23:01:09 UTC <byorgey> hehe
2012-02-07 23:01:39 UTC <fryguybob> fg
2012-02-07 23:01:49 UTC <byorgey> I will put up a repo for it soon, in case anyone wants to help
2012-02-07 23:01:51 UTC <mgsloan> but still, installing ghcdi is pretty terrifying: https://github.com/mgsloan/diagrams-ghci/blob/master/README
2012-02-07 23:01:59 UTC <fryguybob> hehe, multiple monitors is throwing me off.
2012-02-07 23:02:43 UTC <byorgey> mgsloan: yeah, exactly.
2012-02-07 23:03:02 UTC <byorgey> mgsloan: oh, hey, I didn't know about that project, nice =)
2012-02-07 23:04:00 UTC <byorgey> hmm, what's the proper platform-independent way to invoke (say) darcs?
2012-02-07 23:04:59 UTC <byorgey> ah, the 'process' package
2012-02-07 23:11:04 UTC <tgeeky> byorgey: max bolingbroke has a nice platform-independent way to get temporary files (which you'll surely need a facility for)
2012-02-07 23:12:57 UTC <byorgey> tgeeky: oh? what's wrong with openTempFile from System.IO?
2012-02-07 23:13:02 UTC <byorgey> I use that in diagrams-builder
2012-02-07 23:13:29 UTC <byorgey> tgeeky: well, in any case, I'd love a link
2012-02-07 23:13:35 UTC <tgeeky> https://github.com/batterseapower/temporary
2012-02-07 23:14:02 UTC <tgeeky> byorgey: You get temp directories and files
2012-02-07 23:14:06 UTC <tgeeky> that's the main thing that I wanted.
2012-02-07 23:14:21 UTC <byorgey> there's a getTempDirectory in System.Directory I was using
2012-02-07 23:14:47 UTC <byorgey> but yeah, looks like that package has much nicer, higher-level functions for that sort of thing
2012-02-07 23:14:48 UTC <tgeeky> byorgey: and lastly, his version ignores errors? :O
2012-02-07 23:17:24 UTC <luite> openTempFile use a rather bad algorithm to find available filenames
2012-02-07 23:17:40 UTC <tgeeky> luite: doesn't matter
2012-02-07 23:17:55 UTC <tgeeky> does it?
2012-02-07 23:18:28 UTC <luite> if you open a lot of temp files it can get really slow
2012-02-07 23:18:54 UTC <tgeeky> luite: if you open up a lot of temp files, you should be opening up directories
2012-02-07 23:19:00 UTC <tgeeky> and temp files in them
2012-02-07 23:19:01 UTC <tgeeky> 15:54 < byorgey> ok, it works under 7.2
2012-02-07 23:19:05 UTC <tgeeky> whoops, spurrious paste
2012-02-07 23:20:03 UTC <luite> if you ask for foo.ext, then it gets the pid of your program, and tries food[pid].ext, if it exists foo[pid+1].ext, foo[pid+2].ext, and for every new file it must check all of those
2012-02-07 23:22:46 UTC <luite> byorgey: did you ever get an unprotected copy of that maa book shy the way?
2012-02-07 23:23:07 UTC <byorgey> luite: no, I still haven't heard back from them
2012-02-07 23:23:11 UTC <byorgey> I have now emailed them twice
2012-02-07 23:23:36 UTC <byorgey> looks like I have a reminder scheduled to email them again on... Thursday
2012-02-07 23:23:37 UTC <luite> oh :(
2012-02-07 23:23:54 UTC <byorgey> maybe I need to find the home phone # of the president of the MAA or something
2012-02-07 23:28:49 UTC <tgeeky> Paul Manthey Zorn, MAA President
2012-02-07 23:29:10 UTC <tgeeky> Phone: 507-786-3414
2012-02-07 23:29:14 UTC <tgeeky> Email: zorn@stolaf.edu
2012-02-07 23:30:13 UTC <tgeeky> what book is it, anyway, that one is seeking an unprotected copy of?
2012-02-07 23:30:34 UTC <luite> http://www.maa.org/ebooks/spectrum/BTM.html
2012-02-07 23:30:48 UTC <mgsloan> www.mgsloan.com/panopti.png  <- gratuitously unfiltered / not yet well structured type information
2012-02-07 23:31:09 UTC <tgeeky> mgsloan: that is wonderful!!
2012-02-07 23:31:13 UTC <mgsloan> :)
2012-02-07 23:31:17 UTC <tgeeky> seriously nice
2012-02-07 23:31:27 UTC <mgsloan> thanks!!
2012-02-07 23:31:44 UTC <mgsloan> it does this live :D
2012-02-07 23:31:46 UTC <tgeeky> hopefully you hereby relinquish all copyright
2012-02-07 23:31:51 UTC <tgeeky> because I want to see this thing :o
2012-02-07 23:32:06 UTC <mgsloan> yup, the code is up, albeit a little messy and super WIP
2012-02-07 23:32:32 UTC <mgsloan> hoping to get some collaborators once it's decent (maybe 3 months out still - sunk in 6 months or more sofar)
2012-02-07 23:32:50 UTC <mgsloan> (of course, very very part time - school 'n all)
2012-02-07 23:33:10 UTC <mgsloan> https://github.com/mgsloan/panopti
2012-02-07 23:33:33 UTC <byorgey> mgsloan: woah, sweet
2012-02-07 23:33:43 UTC <tgeeky> byorgey: i know, right?
2012-02-07 23:33:49 UTC <tgeeky> it's like he's seen inside my head
2012-02-07 23:33:56 UTC <tgeeky> better than I did
2012-02-07 23:34:04 UTC <luite> hm
2012-02-07 23:34:11 UTC <tgeeky> luite: I don't have that book.
2012-02-07 23:34:27 UTC <tgeeky> luite: I do have "A Student's Guide to the study, practice, and tools of modern mathematics"
2012-02-07 23:34:54 UTC <tgeeky> by Erickson
2012-02-07 23:35:10 UTC <luite> byorgey already has it, although it's encrypted and not terribly usable if you don't run windows or os x
2012-02-07 23:35:23 UTC <tgeeky> luite: can I convert it out of that format for you?
2012-02-07 23:35:28 UTC <tgeeky> i have windows
2012-02-07 23:36:23 UTC <luite> uh, well I'm not really looking for that book, although it looks interesting :)
2012-02-07 23:36:39 UTC <mgsloan> byorgey - once I finish typing up the method used to get these types, mind checking that it's reasonable?
2012-02-07 23:36:49 UTC <byorgey> mgsloan: sure
2012-02-07 23:36:57 UTC <byorgey> I mean, I don't mind =)
2012-02-07 23:37:19 UTC <luite> tgeeky: but if the only way to have it is an encrpyted pdf, then i definitely wouldn't buy it
2012-02-07 23:37:49 UTC <mgsloan> yup, yup.  I have a feeling that something more involved with GHC's API could do a better job, but *might* be prohibitively complicated
2012-02-07 23:37:57 UTC <byorgey> tgeeky: no, the point is, not only is it encrypted, it's DRM'ed, and you can only read it on the computer on which you first run it
2012-02-07 23:38:31 UTC <mgsloan> the idea here is to waste gratuitous amounts of cycles, driving the typechecker like a search predicate
2012-02-07 23:38:49 UTC <byorgey> sounds good
2012-02-07 23:39:15 UTC <mgsloan> buut, I'll lay it out more formally / structured document, as I need to do that anyway
2012-02-07 23:44:42 UTC <tgeeky> byorgey: wow. that's draconian even for Draco.
2012-02-07 23:44:56 UTC <byorgey> tgeeky: I know, right?
2012-02-07 23:45:17 UTC <luite> I thought you could activate 3 computers?
2012-02-07 23:47:26 UTC <byorgey> nope, only one.
2012-02-07 23:47:38 UTC <byorgey> oh, hmm, maybe you're right
2012-02-07 23:47:43 UTC <tgeeky> that's not even fit to be called a book.
2012-02-07 23:47:55 UTC <byorgey> but in any case it doesn't matter, because I can't activate it on MY computer.
2012-02-07 23:48:00 UTC <mgsloan> though, if y'all are sparing a couple cycles, I'm verrry open to collaborators on panopti
2012-02-07 23:48:04 UTC <tgeeky> byorgey: lol
2012-02-07 23:48:18 UTC <mgsloan> even open to name suggestions, I just changed the name from "sinuhask"
2012-02-07 23:48:33 UTC <byorgey> I like panopti better than sinuhask
2012-02-07 23:48:40 UTC <mgsloan> definitely
2012-02-07 23:48:45 UTC <byorgey> panopti sounds nice
2012-02-07 23:48:48 UTC <tgeeky> mgsloan: I might be willing to part with my name that I had planned for this
2012-02-07 23:48:50 UTC <mgsloan> sinuhask is clunky and nerdy. panopti is friendly
2012-02-07 23:48:54 UTC <tgeeky> which is: d-rive
2012-02-07 23:49:00 UTC <tgeeky> (I own www.d-rive.org and www.d-rive.info
2012-02-07 23:49:01 UTC <tgeeky> )
2012-02-07 23:49:16 UTC <mgsloan> haha, nice!
2012-02-07 23:49:27 UTC <mgsloan> what was the main thrust of d-rive?
2012-02-07 23:49:43 UTC <tgeeky> mgsloan: basically exactly what you showed me with this one picture
2012-02-07 23:49:46 UTC <byorgey> mgsloan: I might be willing to donate some cycles toward panopti, but not in the immediate future
2012-02-07 23:49:49 UTC <mgsloan> awesome
2012-02-07 23:50:00 UTC <byorgey> basically not until we get a new release of diagrams out
2012-02-07 23:50:15 UTC <mgsloan> sounds reasonable - work on diagrams helps panopti as well!
2012-02-07 23:50:25 UTC <byorgey> yep
2012-02-07 23:50:28 UTC <tgeeky> mgsloan: I viewed it as a haskell / mathematical object investigator which shows you what I called "visual isomorphisms" -- making the structure of code manifest through diagrams
2012-02-07 23:50:40 UTC <mgsloan> yup!
2012-02-07 23:50:46 UTC <mgsloan> I'm calling them projections
2012-02-07 23:50:53 UTC <mgsloan> because they can be lossy
2012-02-07 23:51:17 UTC <tgeeky> mgsloan: either way, I'll be devouring your code soon. It's as close as anything I've seen anywhere
2012-02-07 23:52:07 UTC <mgsloan> So, the first step is being able to depict information about the code.  That's a big step! and doing that well would be very satisfying
2012-02-07 23:52:25 UTC <mgsloan> but the next step is to use that information to inform code manipulation / refactoring 'n such
2012-02-07 23:52:32 UTC <mgsloan> type directed autocomplete
2012-02-07 23:53:07 UTC <tgeeky> mgsloan: yes. That bit is going to be hard as it will be useful (autocomplete)
2012-02-07 23:54:03 UTC <mgsloan> tgeeky - some of the code is... quite messy.. but let me know when / if you have questions about portions, and that'll help cleaning / commenting.  More eyes is great!
2012-02-07 23:54:11 UTC <tgeeky> mgsloan: ok.
2012-02-07 23:54:55 UTC <mgsloan> I'm fairly proud of the conciseness, though, at least of everything apart from Utils.hs (which could probably use some reduction in size)
2012-02-07 23:55:18 UTC <mgsloan> ACTION is planning on being free for the summer, so that'll be a good 3 months of Haskelling ontop of travelling
2012-02-07 23:55:40 UTC <tgeeky> mgsloan: d-rive was supposed to be a "multiple meaning" phrase... like those things you did in elementary school, where you list a word's letters (D R I V E) downwards and then turn each of them into words
2012-02-07 23:56:14 UTC <tgeeky> mgsloan: with the helpful rule that R expands into RIVE
2012-02-07 23:56:56 UTC <tgeeky> mgsloan: but the original intent was *both* deriving (as in, getting something back from a mathematical object, or in the Haskell sense) but also "drive", as in, having the intuitive feel of operating a vehicle
2012-02-07 23:57:16 UTC <tgeeky> where one can settle in and navigate the mathematical universe, etc, etc
2012-02-07 23:57:30 UTC <tgeeky> but naming can be done later, I'm not going to get rid of the domains anytime soon
2012-02-07 23:58:48 UTC <mgsloan> ahhh, very cool!  panopti comes from the prefix of panopticon / an old project I called panopticode.  pan-opti = universally optimizing of your coding experience, hah
2012-02-07 23:59:21 UTC <tgeeky> ;)
2012-02-07 23:59:27 UTC <tgeeky> i figured panopticon was related
2012-02-07 23:59:38 UTC <tgeeky> that's a proper noun, though, no?
2012-02-07 23:59:49 UTC <mgsloan> but yeah, that's definitely in line with my vision - reading / writing code, and working through type errors should definitely be much more intuitive / flow inducing
2012-02-08 00:00:34 UTC <mgsloan> There's a part of my brain constantly doing type inference on Haskell.  It's good that I've trained that part well, but it would often be very beneficial for the computer to offload that task
2012-02-08 00:00:35 UTC <tgeeky> mgsloan: well, I should admit, I'm actually in this for a purpose, even if it doesn't seem like it most days. I'm *really* interested in physics, and group theory, and the category theory of physics, and etc.
2012-02-08 00:01:07 UTC <mgsloan> me too!  I definitely want to get this to string-diagrams-in-hask kind of level
2012-02-08 00:01:29 UTC <mgsloan> my main purpose is making programming kick ass
2012-02-08 00:02:34 UTC <mgsloan> but I also see this having very significant applications towards teaching / explaining Haskell
2012-02-08 00:03:14 UTC <mgsloan> Ideally refined to the extent that you can eventually push this kind of tool into high school and earlier
2012-02-08 00:03:22 UTC <tgeeky> well, I tacitly assumed that if the tool is good enough, it will become adopted as a standard for using Haskell
2012-02-08 00:03:54 UTC <tgeeky> I think back then I didn't realize that one could just plant the seed (write the code) and let it do it's own evolution
2012-02-08 00:03:58 UTC <mgsloan> right.  I think the "gateway usage", before it's a proper editor, will be as a code reader, and type resolver
2012-02-08 00:04:16 UTC <mgsloan> so you have your main editor, but when you go into get-it-typechecking mode, you're in this thing
2012-02-08 00:04:38 UTC <tgeeky> be back in a few
2012-02-08 00:04:53 UTC <tgeeky> luite: Higgs updates: https://cdsweb.cern.ch/record/1421964/files/hcomb.pdf?version=2  .. https://cdsweb.cern.ch/record/1421964/files/hcomb.pdf?version=2 ..
2012-02-08 00:05:05 UTC <tgeeky> Combined signal is ~ 4.3 sigma at ~ 126 GeV.
2012-02-08 01:34:23 UTC <byorgey> https://patch-tag.com/r/byorgey/hproj/home
2012-02-08 01:34:50 UTC <byorgey> so far it can download the repo for a given package, which is kinda useful
2012-02-08 01:35:32 UTC <byorgey> like 'hproj fetch gtk-toy' figures out where the gtk-toy head repo is (based on the listing in the .cabal file) and clones it
2012-02-08 01:40:19 UTC <fryguybob> nice
2012-02-08 01:43:08 UTC <byorgey> the goal is so that in the instructions for people who want to contribute we can say something like "first  cabal install hproj; then   hproj fetch diagrams-core diagrams-lib diagrams-cairo ..."
2012-02-08 18:39:17 UTC <tgeeky> cabal install hproj; hproj fetch --everything-by byorgey --everything-by edwardk
2012-02-08 19:06:50 UTC <byorgey> tgeeky: hehe, good idea! =)
2012-02-08 19:16:34 UTC <byorgey> hproj fetch --everything  would also be a fun way to spend a few days
2012-02-08 19:17:04 UTC <tgeeky> byorgey: see, here's the thing
2012-02-08 19:17:10 UTC <tgeeky> you're a dedicated darcs user and lover
2012-02-08 19:17:22 UTC <byorgey> yes?
2012-02-08 19:17:36 UTC <tgeeky> but the tools, packages (haskell packages too), and framework that GitHub (in particular) provides
2012-02-08 19:17:48 UTC <tgeeky> for looking up users's info, their "gists", bugs, etc
2012-02-08 19:17:59 UTC <byorgey> yep, github is awesome
2012-02-08 19:18:35 UTC <tgeeky> would make a serious backend which says "f*** it, we're doing it with github" as a first attempt for... something like hproj or cabal
2012-02-08 19:18:42 UTC <tgeeky> quite an attractive thing
2012-02-08 19:19:18 UTC <byorgey> I really don't understand what you mean.  hproj and github have very different purposes.
2012-02-08 19:20:01 UTC <tgeeky> indeed. I mean more as a competitor/upgrade to cabal
2012-02-08 19:20:07 UTC <byorgey> tgeeky: you will at least be happy to note that hproj fetch can get git repos just as easily as darcs.
2012-02-08 19:20:30 UTC <tgeeky> byorgey: yes, and I think that's "true" of cabal? at least, they can reference either just as easily
2012-02-08 19:20:57 UTC <byorgey> tgeeky: yes, in fact that's why hproj can too.  It just reads the repo information encoded in the Hackage index
2012-02-08 19:21:11 UTC <byorgey> so as long as people specify the repo in their .cabal file it will work
2012-02-08 19:21:20 UTC <byorgey> (which most people do now)
2012-02-08 19:21:46 UTC <tgeeky> byorgey: essentially, what I'm discussing is layering on features on top of cabal/hackage:  1) automatic handling of versioning, 2) automatic inclusion of changelog / docs, 3) automatic listing of collaborators, 4) automatic listing of bugs and issues, 5) automatic linking of gists that use a package...
2012-02-08 19:22:50 UTC <byorgey> tgeeky: yeah, those kinds of features would be awesome.  Some of those definitely may make their way into hproj down the road, though not for the initial release.
2012-02-08 19:23:09 UTC <tgeeky> byorgey: sounds like something I could even accomplish.
2012-02-08 19:23:38 UTC <byorgey> sure, help hacking on hproj would be great
2012-02-08 19:24:05 UTC <tgeeky> byorgey: so you view hproj as a way to short circuit hackage packages, by doing the legwork to get their sources built?
2012-02-08 19:24:21 UTC <byorgey> no
2012-02-08 19:24:44 UTC <byorgey> primarily, I view it as a tool for managing projects involving multiple packages/repositories
2012-02-08 19:24:50 UTC <byorgey> such as diagrams
2012-02-08 19:25:11 UTC <tgeeky> or yesod, or agda, or any one of those serious projects
2012-02-08 19:25:32 UTC <byorgey> right
2012-02-08 19:25:53 UTC <tgeeky> and long term, this kind of thing would "logically" be merged with cabal itself?
2012-02-08 19:26:13 UTC <byorgey> good question.  I'm not really sure.  possible.
2012-02-08 19:26:27 UTC <tgeeky> byorgey: stating it another way:
2012-02-08 19:27:06 UTC <tgeeky> One reason I want something like hproj conceptually (not in terms of implementation) is very simple and stupid: I don't want people like Snoyberg or Kmett to wipe out the hackage recent updates list, just because they bumped all of their versions
2012-02-08 19:27:38 UTC <byorgey> that seems like a completely orthogonal concern
2012-02-08 19:27:56 UTC <byorgey> hproj is actually going to make it *easier* for that to happen =)
2012-02-08 19:28:12 UTC <byorgey> because it will let you do things like "test everything and then upload all these packages at once"
2012-02-08 19:28:42 UTC <byorgey> I guess you want something like meta-packages
2012-02-08 19:28:45 UTC <tgeeky> byorgey: yeah, but if cabal (or hackage) had native support for understanding meta-packages, then it might make me superfically happier :O
2012-02-08 19:28:50 UTC <byorgey> sure
2012-02-08 19:28:51 UTC <tgeeky> hehe :)
2012-02-08 19:29:24 UTC <byorgey> at any rate, I'm not really thinking that far ahead right now.  I'm just trying to make something useful for me, and hopefully others will find it useful too
2012-02-08 19:30:23 UTC <byorgey> also, if you have any better name suggestions than 'hproj' I'd love to hear them =)
2012-02-08 19:31:26 UTC <tgeeky> byorgey: yeah, something turns me off about that name, but I blanked on better ones
2012-02-08 19:31:36 UTC <tgeeky> cabal-spider? :O
2012-02-08 19:31:40 UTC <byorgey> I don't really like the name either =)
2012-02-08 19:31:53 UTC <byorgey> cabal-spider is too long, this is something I'm going to be typing frequently
2012-02-08 19:32:14 UTC <tgeeky> hackon? :O
2012-02-08 19:32:34 UTC <tgeeky> that's what one wants to do, when one hproj get diagrams*
2012-02-08 19:32:37 UTC <tgeeky> hackon diagrams :O
2012-02-08 19:32:40 UTC <byorgey> hehe
2012-02-08 19:33:30 UTC <tgeeky> plus I can picture Jeff Bridges saying "Hack on, dude!"
2012-02-08 19:39:25 UTC <tgeeky> ACTION guesses byorgey hasn't seen The Big Lebowski
2012-02-08 19:42:35 UTC <byorgey> no
2012-02-08 19:43:46 UTC <tgeeky> byorgey: you ever play video games of any sort? when you were a little lad?
2012-02-08 19:43:52 UTC <byorgey> yep
2012-02-08 19:43:58 UTC <tgeeky> any favorites?
2012-02-08 19:44:47 UTC <byorgey> the super mario and sonic series come to mind
2012-02-08 19:45:03 UTC <tgeeky> ahh, the sega and snes classics :O
2012-02-08 19:45:05 UTC <byorgey> Contra
2012-02-08 19:45:10 UTC <byorgey> indeed =)
2012-02-08 19:45:24 UTC <tgeeky> i got hooked on computer games early :O
2012-02-08 19:45:27 UTC <tgeeky> quake, and UO
2012-02-08 19:46:33 UTC <tgeeky> I've played some Skyrim over the last few weeks, and it's reminded me what sorts of amazing, visceral things one can do with computers these days
2012-02-08 22:02:32 UTC <luite> what is UO?
2012-02-08 22:02:51 UTC <tgeeky> luite: Ultima Online
2012-02-08 22:02:58 UTC <tgeeky> the "first" MMO
2012-02-08 22:03:22 UTC <luite> ah right
2012-02-08 22:03:40 UTC <luite> that still exists, doesn't it?
2012-02-08 22:03:44 UTC <tgeeky> yep
2012-02-08 22:03:48 UTC <tgeeky> public and private servers
2012-02-08 22:04:07 UTC <tgeeky> there once was a time when the game was more "simulator" and less MMO
2012-02-08 22:04:34 UTC <tgeeky> the general idea was to have an open world, where danger existed (murders), and where PvP was the balance against this
2012-02-08 22:04:44 UTC <luite> hmm
2012-02-08 22:04:47 UTC <tgeeky> instead of arbitrary rules about who could attack who, where
2012-02-08 22:04:52 UTC <luite> I've never played an MMO
2012-02-08 22:05:25 UTC <luite> have played portal/portal 2 recently, but not much else
2012-02-08 22:05:49 UTC <tgeeky> those are great (portal 1 was, at least)
2012-02-08 22:05:54 UTC <tgeeky> never played p2
2012-02-08 22:06:34 UTC <luite> 2 was fun too, they added a few new game elements and the story is much longer, but it's not quite as new and original as 1
2012-02-08 22:06:49 UTC <tgeeky> that game was beautiful in its simplicity
2012-02-08 22:07:00 UTC <tgeeky> how so much of a game can be derived from a "simple" game mechanic
2012-02-08 22:08:17 UTC <luite> I think that's still the same, though with the new things ("gels", some kind of paint that make you jump higher, run faster etc, and transporter tubes) you can make things a lot more complex
2012-02-08 22:09:14 UTC <luite> oh there are other new things that I forgot, laser beams and mirrors were not in 1, right?
2012-02-08 22:09:32 UTC <luite> but I think they removed the energy balls
2012-02-08 22:09:32 UTC <tgeeky> luite: I havne't played 2
2012-02-08 22:10:52 UTC <tgeeky> luite: I actually had some conversations last year with a physicist about the conceptual idea of quantum mechanics being like little spheres that project out portals a little ahead and a little behind of them as propogators
2012-02-08 22:10:54 UTC <luite> anyway, even though the levels can be potentially much more complex, they always seem to be solvable by mere humans, I think they do a lot of play testing, puzzles always contain lots of little hints, recurring elements, to point to the (or a) solution
2012-02-08 22:12:02 UTC <luite> and 2 has a lot more background story on aperture science and cave johnson
2012-02-08 22:12:25 UTC <tgeeky> cave johnson?
2012-02-08 22:12:31 UTC <luite> I want an aperture science coffee mug now :p
2012-02-08 22:13:16 UTC <luite> the founder of aperter science
2012-02-08 22:13:19 UTC <luite> aperture
2012-02-09 15:42:24 UTC <tgeeky> byorgey: rut roh. \family -> family + 1
2012-02-09 15:42:25 UTC <tgeeky> time!
2012-02-09 16:02:13 UTC <luite> hmm
2012-02-09 16:02:24 UTC <luite> byorgey: I don't quite agree with your QotW :(
2012-02-09 16:07:05 UTC <luite> inserting print statements isn't hard because they are bad, or because it has to be hard (Debug.Trace is pretty easy), but because it's really difficult to get packages working again if you just add one debug print somewhere deep.
2012-02-09 16:08:27 UTC <luite> combine that with the total lack of debugging/breakpoints support and you (or at least I) have a much harder time pinpointing bugs in haskell programs than in similar imperative ones in say, C# or Java
2012-02-09 18:06:00 UTC <byorgey> luite: you're right, the particular issue of inserting print statements isn't a very good example of my general statement.
2012-02-09 18:06:08 UTC <byorgey> tgeeky: ?
2012-02-09 18:08:24 UTC <luite> byorgey: yeah in general I do agree though, but this lack of debugging tool support has been bugging me for a while now... the usual response is something like "just test the pure parts separately" or something, really annoying in yesod
2012-02-09 18:08:42 UTC <byorgey> yeah, it can be a pain, I agree
2012-02-09 18:09:11 UTC <luite> i still need to check out the new stack trace support, maybe it will help a lot
2012-02-09 18:24:57 UTC <byorgey> yeah, is that in 7.4?
2012-02-09 18:27:27 UTC <luite> yeah there's traceStack in Debug.Trace, but it doesn't always work, and you need to compile your program with -prof
2012-02-09 18:44:47 UTC <byorgey> fryguybob: I've written to the MAA twice over the past month re: my useless DRM'ed PDF and still haven't heard back at all.  Any ideas/thoughts on what I should do?
2012-02-09 18:45:16 UTC <byorgey> fryguybob: I realize you may have no idea, you just have the most connection to the MAA of anyone I know so I thought it's worth asking
2012-02-09 18:46:56 UTC <fryguybob_> Connection always dies at the worst time.
2012-02-09 18:46:57 UTC <luite> post it on reddit and have 2000 angry redditors spam them!
2012-02-09 18:47:09 UTC <byorgey> luite: hehe, that sounds a bit drastic =)
2012-02-09 18:47:27 UTC <byorgey> fryguybob_: did you get my two messages just now or should I resend them?
2012-02-09 18:48:08 UTC <fryguybob_> I got them
2012-02-09 18:48:13 UTC <byorgey> fryguybob_: also, you should find a server somewhere on which you can run an IRC client in a 'screen' session =)
2012-02-09 18:48:19 UTC <fryguybob_> Yeah
2012-02-09 18:48:21 UTC <luite> I hope you get your undrmed pdf, the book looks interesting but I'd only want if if I could read it on my ipad
2012-02-09 18:48:46 UTC <fryguybob_> luite: The book is interesting, I looked at the printed version and my reaction was "Hey it's all CS!"
2012-02-09 18:49:01 UTC <fryguybob_> byorgey: There is a phone number you could try (800) 331-1622
2012-02-09 18:49:11 UTC <byorgey> fryguybob_: ah, cool, thanks
2012-02-09 18:49:23 UTC <fryguybob_> Personally I like to live under the illusion that the phone was never invented.
2012-02-09 18:49:26 UTC <luite> fryguybob_: oh it's an on demand printed book isn't it?
2012-02-09 18:49:31 UTC <fryguybob_> luite: Yeah
2012-02-09 18:50:09 UTC <luite> lots of the material covered looks relatively well known though, from other recreational math books, gardners columns etc, but it still looks interesting
2012-02-09 18:51:46 UTC <luite> btw I had lumps of ice freeze to the base of my skis earlier this week, what does this mean? should I buy lower temperature wax?
2012-02-09 18:51:47 UTC <fryguybob> luite: Yeah, I don't think much of it would be new, but it is in a nice convenient (or inconvenient in byorgey's case) package.
2012-02-09 18:52:17 UTC <fryguybob> luite: I call that "bad snow" :D.  That's about as technical as I get.
2012-02-09 18:52:34 UTC <fryguybob> I've never waxed skis, though I know many who have.
2012-02-09 18:52:38 UTC <byorgey> luite: you should buy warmer skis
2012-02-09 18:53:13 UTC <luite> hehe, at any rate it was annoying, had to scrape them off before I could ski again, those lumps really increase drag :)
2012-02-09 18:53:21 UTC <byorgey> I bet =)
2012-02-09 18:53:25 UTC <fryguybob> luite: Yes they do!
2012-02-09 18:54:06 UTC <fryguybob> I have noticed a difference in some cases between if the skis are in the car on the drive to ski, vs outside (at same temp as outside).
2012-02-09 18:54:16 UTC <fryguybob> I don't remember which was better though :(
2012-02-09 18:54:33 UTC <byorgey> next time put one ski in the car and one outside
2012-02-09 18:54:38 UTC <byorgey> and then compare
2012-02-09 18:54:42 UTC <fryguybob> Oh, good idea.
2012-02-09 18:54:45 UTC <luite> hehe
2012-02-09 18:54:55 UTC <fryguybob> Then I can ski in tight circles.
2012-02-09 18:55:10 UTC <byorgey> yep, and which direction the circle goes will tell you which is better.
2012-02-09 18:57:30 UTC <fryguybob> Humm, someone on the cafe want's a haskell STM expert... should I say, ask again in a year?  By then I should be expert in both STM and Haswell.
2012-02-09 18:57:56 UTC <luite> oh cool, are you going to implement STM with the new instructions?
2012-02-09 18:58:47 UTC <fryguybob> I'm working my way towards something like that.
2012-02-09 19:25:06 UTC <byorgey> luite: did you see the message on -cafe asking about a 'fancy REPL' with something like  class Demonstratable a where  demo :: a -> IO ()  ?
2012-02-09 19:25:32 UTC <byorgey> luite: I don't know if you want to mention anything about Wolfgang or keep it quiet for now
2012-02-09 19:26:02 UTC <byorgey> but it sounds like Wolfgang will be exactly the kind of thing apfelmus is asking about
2012-02-09 19:46:45 UTC <luite> oh haven't seen it
2012-02-09 21:25:00 UTC <luite> but yeah, I guess he'd run into the same ambiguity problems as I had with Wolfgang
2012-02-09 21:25:34 UTC <mgsloan> luite - ??
2012-02-09 21:26:27 UTC <luite> 20:25 < byorgey> luite: did you see the message on -cafe asking about a 'fancy REPL' with  something like  class Demonstratable a where  demo :: a -> IO ()  ?
2012-02-09 21:27:03 UTC <mgsloan> ACTION needs to get a persistent IRC thingy so he doesn't spam with disconnect/reconnect and have extensive logs
2012-02-09 21:27:43 UTC <mgsloan> ah, sounds like what I was working on here: https://github.com/mgsloan/gtk-toy-diagrams/blob/master/src/Graphics/UI/Gtk/Toy/Demo.hs
2012-02-09 21:27:50 UTC <mgsloan> (untested, WIP, etc, etc)
2012-02-09 21:28:13 UTC <mgsloan> but intended to let you REPL-ize functions as things with manipulable, defaulting inputs
2012-02-09 21:29:19 UTC <mgsloan> the real solution to the fancy REPL is to get the type first, and then modify the input to the interpreter to perform your specialization
2012-02-09 21:29:52 UTC <luite> that's more or less what I do
2012-02-09 21:30:06 UTC <mgsloan> https://github.com/divipp/ActiveHs/blob/master/Specialize.hs
2012-02-09 21:30:06 UTC <mgsloan> https://github.com/divipp/ActiveHs/blob/master/Smart.hs
2012-02-09 21:30:56 UTC <mgsloan> we should probably all get together and write a smart repl library
2012-02-09 21:31:08 UTC <luite> for example my thing can specialize some Diagram backend R2 type to Diagram Cairo R2 if it knows how to Demonstrate a Cairo diagram
2012-02-09 21:31:17 UTC <mgsloan> but separate sandboxes will do for now
2012-02-09 21:31:23 UTC <mgsloan> gotcha
2012-02-09 21:32:23 UTC <luite> (it does this by enumerating the instances that are in scope and typechecking them, then constructs a GHC AST with the correct type specializations)
2012-02-09 21:34:26 UTC <luite> unfortunately this is rather low level, since you cannot always be sure that type names are in scope and how they are imported)
2012-02-09 21:37:50 UTC <luite> but I wouldn't be surprised if your method is much smarter
2012-02-09 21:50:51 UTC <mgsloan> my approach isn't yet very smart.  One thing that is pretty smart is parseing type errors, but I don't do that yet for specialization (and haven't really worked hard on specialization yet)
2012-02-09 21:51:42 UTC <mgsloan> the way I handle the type names problem is by forcing a particular prelude to be loaded
2012-02-09 21:51:51 UTC <mgsloan> not really the best general solution
2012-02-09 22:46:58 UTC <tgeeky> it's a girl!
2012-02-09 22:47:15 UTC <tgeeky> Addison Marie <3
2012-02-09 22:48:19 UTC <luite> better than Addison Wesley ;p
2012-02-09 22:48:39 UTC <tgeeky> luite: hehe ;)
2012-02-09 22:48:50 UTC <tgeeky> she's rather beautiful for a baby
2012-02-09 22:48:59 UTC <tgeeky> and everyone is healthy :o
2012-02-09 22:49:20 UTC <luite> but kittens are much purrtier than babies
2012-02-09 22:49:33 UTC <tgeeky> purrhaps
2012-02-09 22:59:35 UTC <luite> mgsloan: oh I use the GHC api to import some extra required modules, but only for the tipes directly related to the showable stuff
2012-02-09 22:59:38 UTC <luite> types
2012-02-09 22:59:54 UTC <mgsloan> gotcha!
2012-02-09 23:00:17 UTC <mgsloan> I think GHC allows importing things twice, so you could import things to a qualified namespace
2012-02-09 23:01:42 UTC <luite> yeah, but still I don't know whether all types are in scope, I enumerate instances of my 'Eval' and 'EvalIO' typeclasses, something might typecheck without all types being in scope even though the instance is
2012-02-09 23:04:10 UTC <mgsloan> ah, gotchaa
2012-02-09 23:04:30 UTC <mgsloan> and it's tough to do the query "where did this type come from?"
2012-02-09 23:04:41 UTC <mgsloan> if it's not in scope shouldn't it be fully qualified in its prettyPrint?
2012-02-09 23:05:26 UTC <luite> dunno, but I never prettyprint them
2012-02-09 23:09:09 UTC <mgsloan> hmm, you don't do something like "interpret (expr ++ " :: " ++ prettyPrint mySpecialType)" or similar?
2012-02-09 23:09:39 UTC <mgsloan> (for cases where the type is too polymorphic to display)
2012-02-09 23:11:59 UTC <luite> (GHC's AST lets you use types even though they might not be in scope with the HsCoreTy constructor
2012-02-09 23:12:02 UTC <luite> )
2012-02-09 23:12:14 UTC <luite> I only prettyprint the polymorphic type
2012-02-09 23:13:57 UTC <mgsloan> gotcha
2012-02-09 23:14:55 UTC <luite> but you're right, I do something like that, but I can't express the type annotation in haskell source since I don't know the types, but directly constructing the AST does work
2012-02-09 23:16:29 UTC <mgsloan> I definitely think that some super-repl / hint library might be in order.  It might not even be too big, but it'd be cool to have a standard format for expressing these specializations, particularly having a convention for expressing them in library code
2012-02-09 23:17:51 UTC <luite> yeah, that could be useful, my code is extremely ugly though, and needs lots of updates for each new ghc releae
2012-02-09 23:18:05 UTC <mgsloan> yup.  I have my own copy of Hint in my source tree
2012-02-09 23:18:23 UTC <luite> hehe I used to have hint, but it was giving me too many problems
2012-02-09 23:18:46 UTC <mgsloan> I just see three or more people working on similar things :D
2012-02-09 23:18:49 UTC <luite> hint uses an old-fashioned way to import extra modules qualified
2012-02-09 23:18:53 UTC <luite> with temp files
2012-02-09 23:19:05 UTC <mgsloan> I'm just using Hint for the promise of some hope of supporting multiple GHC versions
2012-02-09 23:19:10 UTC <luite> and that goes wrong in my setup, since I chroot the interpreter after loading the files
2012-02-09 23:19:15 UTC <mgsloan> gotcha
2012-02-09 23:19:34 UTC <luite> and ghc 7 supports the same thing directly through the api, no temp files required
2012-02-09 23:19:36 UTC <mgsloan> Yeah, that is pretty annoying
2012-02-09 23:19:58 UTC <mgsloan> I might have to do the switch :D
2012-02-09 23:20:17 UTC <luite> hehe, I went from hint -> hacked hint -> ghc
2012-02-09 23:20:38 UTC <luite> where hacked hint just exposed the whole monad stack so that I could call ghc api functions directly
2012-02-09 23:20:49 UTC <mgsloan> yeah, I did that too
2012-02-09 23:21:15 UTC <mgsloan> I think actually based on talking to you about it back then
2012-02-09 23:21:29 UTC <luite> oh :(
2012-02-09 23:21:46 UTC <mgsloan> hah, no worries!
2012-02-09 23:23:05 UTC <luite> I'm reasonably happy about the defaulting, but I'm still not sure how to nicely handle the 'interact' thing
2012-02-09 23:23:26 UTC <luite> how to automatically choose gui stuffs to manipulate parameters
2012-02-09 23:23:40 UTC <mgsloan> I think I'll start a super-repl project soon, after midterms tomorrow
2012-02-09 23:25:30 UTC <mgsloan> Shouldn't type class tricks handle that?  One tricky part is building up a type representation of the manipulator state, but it seems doable
2012-02-09 23:25:56 UTC <luite> maybe, I'll believe it when I see it ;p
2012-02-09 23:26:47 UTC <luite> I'm hacking on yesod first, since 0.10 is out now, all api changes should be committed before 1.0 is released in a few months
2012-02-09 23:28:01 UTC <mgsloan> instance Manipulable a => Manipulable (Double -> a) where { type ManipulatorState = (Slider Double, ManipulatorState a); type ManipulatorResult = ManipulatorResult a;
2012-02-09 23:28:25 UTC <mgsloan> err (Double -> a) as a parameter to each of those type families
2012-02-09 23:29:15 UTC <mgsloan> getResult :: ManipulatorState (Double -> a) -> ManipulatorResult (Double -> a)
2012-02-09 23:29:27 UTC <luite> yeah something like that, but will that work with polymorphic stuff?
2012-02-09 23:29:41 UTC <mgsloan> anyway, this is on my near-term todo lists, I'll give it a try soon!
2012-02-09 23:29:47 UTC <mgsloan> hmm
2012-02-09 23:30:19 UTC <mgsloan> no, it won't.  This would depend on some polymorphic --> monomorphic specialization necessarily
2012-02-09 23:30:32 UTC <luite> fortunately those instances could in my project easily be user-editable (just wiki pages)
2012-02-09 23:30:54 UTC <luite> but low level stuff like specialization can't, and I'm not sure how to handle that
2012-02-10 00:21:42 UTC <mgsloan> I'm planning on panopti to kinda be like xmonad - in that it's kind of a Haskell repl / IDE construction kit, but maybe a bit more focus on plugin architecture
2012-02-10 00:22:43 UTC <mgsloan> so that cabal projects can specify a module to be used as a plugin with specializations / refactorings / rendering schemes / etc for the exported types / functions
2012-02-10 00:22:51 UTC <luite> hmm
2012-02-10 00:24:43 UTC <mgsloan> dealing with this kind of meta-project code in a standard way, and better yet, handling some of these particular tasks in a non-tool specific fashion, would be one of the purposes of the super-repl library
2012-02-10 00:26:51 UTC <mgsloan1> doh! if you said anything since "hmm", I missed it
2012-02-10 00:30:49 UTC <tgeeky> mgsloan1: nope
2012-02-10 00:30:52 UTC <tgeeky> mgsloan1: nothing was said
2012-02-10 00:34:49 UTC <mgsloan1> hehe, koo
2012-02-10 00:46:12 UTC <luite> yeah sorry I'm working one some yesod stuff so I may respond a bit slower :)
2012-02-10 01:00:57 UTC <tgeeky> luite: FYI, the 4.3 sigma figure I gave you is overstated. The combined should be 3.8 sigma.
2012-02-10 01:01:30 UTC <luite> what was that about again?
2012-02-10 01:07:44 UTC <tgeeky> luite: higgs discovery
2012-02-10 01:07:51 UTC <tgeeky> 5.0 sigma = discovery
2012-02-10 01:07:56 UTC <tgeeky> 2.0 sigma = fluke
2012-02-10 01:08:00 UTC <tgeeky> 3.0 sigma = ehhhhhhhh
2012-02-10 01:12:00 UTC <fryguybob> -1.0 sigma = lab equipment run by program written in VB
2012-02-11 15:57:02 UTC <luite> yay for ice skating, tomorrow 55km :) (depends on the weather, if there's no heavy snow)
2012-02-11 16:10:00 UTC <byorgey> luite: nice =)
2012-02-11 16:10:45 UTC <byorgey> luite: what's the latest news on the Elfstedentocht?
2012-02-11 16:11:25 UTC <luite> it won't go on ('oan' in the local frysian language)
2012-02-11 16:13:58 UTC <luite> since daytime temperatures will rise above freezing starting monday, they need to turn on the pumping stations again, which will quickly reduce the amount and quality of the ice
2012-02-11 16:15:02 UTC <luite> after a few days of that, it would need to freeze again for a few weeks to get enough ice, unlikely that that will happen this season
2012-02-11 16:19:26 UTC <luite> "it giet net oan" = "it goes not on"
2012-02-11 16:20:17 UTC <luite> frysian is actually closer to english than dutch
2012-02-11 16:20:50 UTC <luite> err
2012-02-11 16:21:12 UTC <luite> frysian is closer than dutch, to english
2012-02-11 16:21:19 UTC <luite> that's what I meant :)
2012-02-11 17:13:27 UTC <byorgey> luite: ah, too bad
2012-02-11 18:15:35 UTC <luite> you can still skate the whole route if you want, the ice just isn't thick enough for the official tour (which is a race first, and then 16000 recreational riders, lots of spectators)
2012-02-11 20:10:16 UTC <byorgey> yay, I figured out how to get Haddock to generate working 'source' links!
2012-02-11 20:10:37 UTC <byorgey> now to figure out the right incantations to run haddock on multiple packages at once so that they all link to one another properly...
2012-02-11 20:10:58 UTC <fryguybob> Nice
2012-02-11 20:11:06 UTC <byorgey> (the context is that I want to include the haddock output for all the diagrams packages on the diagrams website, so it doesn't matter if things don't build on Hackage for whatever reason)
2012-02-11 20:13:18 UTC <byorgey> woah
2012-02-11 20:13:49 UTC <byorgey> from the Haddock documentation: --comments-base, --comments-module, --comments-entity: Include links to pages where readers may comment on the documentation.
2012-02-11 20:14:16 UTC <byorgey> ACTION gets an awesome idea
2012-02-11 20:15:05 UTC <byorgey> we can have each thing link to a page on the diagrams wiki with an auto-generated name
2012-02-11 20:15:23 UTC <fryguybob> Ooooh
2012-02-11 20:15:55 UTC <byorgey> ACTION tries it
2012-02-11 20:15:56 UTC <fryguybob> Do those fields work in the pre-hackage 2.0 world?
2012-02-11 20:18:57 UTC <byorgey> I mean, obviously Hackage itself does not pass those flags to haddock when building documentation
2012-02-11 20:19:14 UTC <byorgey> hmmm, 'unrecognized option'
2012-02-11 20:19:26 UTC <byorgey> but I have haddock 2.10 and the documentation I was reading is for 2.8 !
2012-02-11 20:19:56 UTC <byorgey> oh, wait, I'm dumb
2012-02-11 20:20:14 UTC <byorgey> I did cabal haddock --comments-base  instead of  cabal haddock --haddock-option=--comments-base
2012-02-11 20:21:25 UTC <byorgey> sweet, it works!
2012-02-11 20:21:53 UTC <fryguybob> Nice!
2012-02-11 20:21:55 UTC <byorgey> up in the corner of the page next to the usual 'Contents | Index | Frames' links there's a 'User Comments' link
2012-02-11 21:59:21 UTC <fryguybob> Humm, this can't be good: -rw------- 1 ryates people 129773568 Feb 11 16:57 circuits.eps
2012-02-11 22:00:00 UTC <byorgey> ACTION squints and counts digits by 3s
2012-02-11 22:00:23 UTC <byorgey> ACTION wonders if fryguybob knows about the -h option to ls
2012-02-11 22:00:25 UTC <luite> humm
2012-02-11 22:00:27 UTC <luite> :)
2012-02-11 22:01:21 UTC <fryguybob> byorgey: There are sooo many things wrong with the way they have these workstations set up and so little time...
2012-02-11 22:01:28 UTC <byorgey> hehe
2012-02-11 22:02:04 UTC <byorgey> well, anyway, yes, 129M seems rather large for an .eps file
2012-02-11 22:02:46 UTC <byorgey> fryguybob: do you have any sense as to why it is so big?
2012-02-11 22:03:01 UTC <fryguybob> byorgey: probably this:  circuits = hcat (zipWith number cs [1..])
2012-02-11 22:03:22 UTC <byorgey> uh, and how long is cs?
2012-02-11 22:04:00 UTC <fryguybob> I didn't think it was big, humm
2012-02-11 22:04:26 UTC <fryguybob> ACTION was so excited that it compiled...
2012-02-11 22:06:29 UTC <byorgey> so you're drawing circuit diagrams?
2012-02-11 22:07:05 UTC <fryguybob> hahahaha
2012-02-11 22:07:24 UTC <fryguybob> I looked at the file and found this:
2012-02-11 22:07:26 UTC <fryguybob> (\("\(\"\(\\\"\(\\\\\\\"\(\\\\\\\\\\\\\\\"\(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"
2012-02-11 22:07:35 UTC <byorgey> lol!
2012-02-11 22:07:47 UTC <byorgey> that looks familiar
2012-02-11 22:07:57 UTC <fryguybob>   where t = concat ["(", show t, ")"]
2012-02-11 22:08:09 UTC <byorgey> yep
2012-02-11 22:08:11 UTC <fryguybob> fixes the fix with an n instead of a t
2012-02-11 22:08:30 UTC <byorgey> fixes the fix, hehe
2012-02-11 22:08:32 UTC <fryguybob> ACTION waits for agda diagrams
2012-02-11 22:08:50 UTC <byorgey> this bug requires taking a fix *out* instead of putting one in
2012-02-11 22:11:09 UTC <byorgey> Agda diagrams: if it compiles, your diagram is proven correct, so there's no need to actually draw it!
2012-02-11 22:11:44 UTC <fryguybob> I'm making some diagrams to illustrate Euler circuits for Rebekah's "Math for liberal arts" class.
2012-02-11 22:11:52 UTC <byorgey> ah, cool
2012-02-11 22:59:49 UTC <fryguybob> byorgey: Does your fancy map lists thing give a nice way to do grid layout?
2012-02-11 23:00:29 UTC <byorgey> fryguybob: ah, excellent question, let me think
2012-02-11 23:01:04 UTC <byorgey> hmm, not really
2012-02-11 23:01:42 UTC <byorgey> you just have to find maximum 'width' and 'height' for stuff and then use that to decide how to position things
2012-02-11 23:01:58 UTC <byorgey> we really should add some grid layout combinators to diagrams-lib
2012-02-11 23:02:08 UTC <fryguybob> I just did   ds # chunck 3 # map hcat # vcat  but it is alittle disapppointing.
2012-02-11 23:02:32 UTC <byorgey> yeah, that won't look nice if ds are all different sizes
2012-02-11 23:02:47 UTC <byorgey> anyway, I'm off
2012-02-11 23:02:54 UTC <fryguybob> later
2012-02-11 23:19:42 UTC <fryguybob> This is what I ended up using:  http://hpaste.org/63504
2012-02-11 23:36:05 UTC <fryguybob> And the finished product (i.e. good enough :D)  http://www.cs.rochester.edu/u/ryates/temp/circuits.pdf
2012-02-11 23:47:12 UTC <fryguybob> code is here: https://patch-tag.com/r/fryguybob/diagrams-postscript/snapshot/current/content/pretty/example/circuits.hs
2012-02-12 00:11:14 UTC <alpounet> nice
2012-02-12 04:24:57 UTC <byorgey> fryguybob: ah, yeah, that's a nice way to do it
2012-02-12 16:17:45 UTC <byorgey> I think I have finally figured out the correct magic incantations to haddock to build the diagrams documentation all together in order to stick it on the website.
2012-02-12 16:17:55 UTC <byorgey> now to automate it.
2012-02-12 16:19:17 UTC <byorgey> since it involves passing lots of options like --haddock-option='--read-interface=http://hackage.haskell.org/packages/archive/base/4.5.0.0/doc/html,/home/brent/local/stow/ghc-7.4.1/share/doc/ghc/html/libraries/base-4.5.0.0/base.haddock'
2012-02-12 16:19:25 UTC <byorgey> ugh
2012-02-12 16:50:47 UTC <luite> hmm, tnx, I think my own local haddock could use those as well
2012-02-12 19:43:43 UTC <fryguybob> We finally had enought snow to ski on.
2012-02-12 21:35:21 UTC <vyom> has the CairoOptions type changed in the latest code on github, from the one in Hackage?
2012-02-12 21:35:42 UTC <vyom> I am getting a compile error when I try to call renderDia directly
2012-02-12 21:37:11 UTC <fryguybob> vyom: Changed since when?
2012-02-12 21:37:21 UTC <fryguybob> (the answer is probably yes)
2012-02-12 21:39:02 UTC <vyom> i am looking at the source on Github, but the version installed is the latest on hackage (I think)
2012-02-12 21:39:33 UTC <fryguybob> Ah, I think github is behind with respect to the darcs repo.
2012-02-12 21:39:52 UTC <fryguybob> But I think it is newer then hackage.
2012-02-12 21:40:25 UTC <vyom> ok.. i will look at the one in darcs and compare
2012-02-12 21:41:54 UTC <vyom> I cannot click through the documentation here : http://hackage.haskell.org/package/diagrams-cairo but the version of Hackage seems to be from Oct 2011
2012-02-12 21:43:36 UTC <fryguybob> vyom: Yeah we are working towards 0.5 release.
2012-02-12 21:44:33 UTC <vyom> fryguybob: cool.. for now I am just using a hack in my code to call defaultMain with the 'withArgs' method to get to the cairo backend
2012-02-12 21:44:37 UTC <vyom> https://github.com/deepakjois/hs-logo/blob/master/Logo.hs#L50
2012-02-12 21:44:47 UTC <vyom> it should work for now
2012-02-12 21:45:35 UTC <vyom> but if I add more complicated arg parsing for my app, it will get a bit messy. But that can wait.. I can always dive into the code if I really need it
2012-02-12 21:45:48 UTC <vyom> thanks anyway
2012-02-12 23:44:14 UTC <byorgey> vyom: yeah, I am currently figuring out how to put the Haddock documentation on the diagrams website for exactly this reason
2012-02-12 23:44:23 UTC <byorgey> (since it doesn't build on Hackage)
2012-02-12 23:47:21 UTC <fryguybob> I had another diagram to make for Rebekah.  I'm not completely happy with the code :(
2012-02-12 23:47:32 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/rooms.pdf
2012-02-12 23:48:16 UTC <fryguybob> I didn't really take the sensable approach:  http://www.patch-tag.com/r/fryguybob/diagrams-postscript/snapshot/current/content/pretty/example/rooms.hs
2012-02-12 23:49:12 UTC <byorgey> you can tell it is a sad program because of all the sad faces in the comments
2012-02-12 23:49:47 UTC <fryguybob> yup
2012-02-12 23:49:57 UTC <byorgey> vyom: if you look on Hackage you can click 'Source' to see the definition of CairoOptions
2012-02-12 23:50:11 UTC <vyom> byorgey: thanks, will look
2012-02-12 23:59:54 UTC <vyom> updated the README for my logo interpreter project. Couldnt have done it without diagrams : https://github.com/deepakjois/hs-logo
2012-02-13 00:00:01 UTC <vyom> it is awesome
2012-02-13 00:00:50 UTC <vyom> also borrowed some snippets for the turtle from the diagrams-contrib package
2012-02-13 00:02:51 UTC <byorgey> vyom: very cool!!
2012-02-13 00:03:08 UTC <byorgey> ACTION adds hs-logo to the list of projects on the diagrams wiki
2012-02-13 00:04:25 UTC <fryguybob> vyom: Fun!
2012-02-13 00:04:30 UTC <vyom> byorgey: one thing is a bit strange though.. if you look at the images in the README.. I have kept the same line width.. but the snowflake is much thinner than the other design
2012-02-13 00:05:06 UTC <vyom> i am guessing that is because I am using "Absolute" for the image size spec
2012-02-13 00:05:07 UTC <vyom> ?
2012-02-13 00:05:09 UTC <byorgey> vyom: probably because the snowflake is bigger
2012-02-13 00:05:42 UTC <byorgey> the line width is relative to the diagram's vector space, not to the output size
2012-02-13 00:06:08 UTC <vyom> byorgey: is there a good way to ensure a consistent line width regardless of the size?
2012-02-13 00:06:26 UTC <byorgey> that way you can make a 100x100 or 300x300 or 3000x3000 render of your diagram and they will all look the same
2012-02-13 00:06:42 UTC <byorgey> I guess the problem is that there are multiple possible ideas of "consistency", and they all conflict =)
2012-02-13 00:06:54 UTC <luite> at least they're consistent in that
2012-02-13 00:07:17 UTC <byorgey> vyom: let me think about it and get back to you
2012-02-13 00:07:19 UTC <fryguybob> luite: They aren't though, lw 0, same everywhere!
2012-02-13 00:09:01 UTC <luite> hmm :(
2012-02-13 00:12:29 UTC <byorgey> hehe
2012-02-13 00:13:24 UTC <byorgey> vyom: I guess the thing to do is to compute the width and/or height of your diagram using the 'width' or 'height' functions, and then set the line width to some fixed fraction of that
2012-02-13 00:13:55 UTC <byorgey> i.e.   d # lw (0.005 * width d)   or something like that
2012-02-13 00:13:55 UTC <vyom> byorgey: yes.. will have to try that
2012-02-13 00:14:30 UTC <byorgey> note you may have to do   d # lw (0.005 * width (d :: D R2))  if you get an error about an ambiguous type variable or something like that
2012-02-13 00:24:38 UTC <vyom> byorgey: works for now : https://github.com/deepakjois/hs-logo/commit/e154fd250fafb8d92e7197dbbff43b99a4b4ce51
2012-02-13 00:24:41 UTC <vyom> will cleanup later
2012-02-13 00:24:52 UTC <vyom> thanks
2012-02-13 00:39:24 UTC <byorgey> vyom: great!
2012-02-13 01:06:37 UTC <luite> 5
2012-02-13 01:08:38 UTC <fryguybob> 4
2012-02-13 01:09:44 UTC <luite> hm typo, or something, dunno what i was trying to type
2012-02-13 01:13:30 UTC <fryguybob> ACTION is relieved as he wasn't sure what he was counting down to.
2012-02-13 02:02:13 UTC <mgsloan> vyom - cool! Have you seen my turtle code? the state is very similar! (for logical reasons)
2012-02-13 02:09:00 UTC <mgsloan> https://patch-tag.com/r/byorgey/diagrams-contrib/snapshot/current/content/pretty/src/Diagrams/TwoD/Path/Turtle.hs
2012-02-13 02:24:22 UTC <vyom> mgsloan: As I said earlier.. I borrowed snippets of code from diagrams-contrib so it is not a co-incidence :)
2012-02-13 02:24:41 UTC <mgsloan> ahh, cool :) you did mention that!
2012-02-13 02:24:48 UTC <mgsloan> glad my code was a good reference!
2012-02-13 02:24:50 UTC <vyom> mgsloan: byorgey had pointed me to that a few days ago
2012-02-13 02:25:47 UTC <mgsloan> I'm thinking about extending the turtle in the contrib to cover more types of state mutation
2012-02-13 02:26:40 UTC <vyom> mgsloan: I had initially thought I would re-use your Turtle code.. but then the "State" that I am tracking contains more things
2012-02-13 02:26:49 UTC <vyom> like the interpreter context
2012-02-13 02:27:06 UTC <vyom> so I just decided to borrow your path manipulation operations and use my own state type
2012-02-13 02:28:08 UTC <vyom> i will keep an eye on your changes.. Ideally I would love to reuse a turtle type that already exists in diagrams-contrib
2012-02-13 02:29:04 UTC <mgsloan> so have the path turtle, but then have a diagrams turtle layered on top of that, for things like line width and color state.  So, the diagrams turtle would create a new path turtle each time those attributes change
2012-02-13 02:30:23 UTC <vyom> mgsloan: thats cool.. because I realised that if I have to expose a greater subset of the Logo language and allow color manipulations, I would need something like that
2012-02-13 02:33:34 UTC <vyom> mgsloan: another interesting idea I had was to some day have a mode where a Logo turtle program compiles to a Haskell DSL instead of generating an image output
2012-02-13 02:34:27 UTC <vyom> not sure what you could do with that.. but maybe something like animation support if and when it comes into diagrams
2012-02-13 02:34:32 UTC <mgsloan> yup!  And it can be pretty easy to convert the Logo interpreter implemented in terms of the DSL into a compiler outputting DSL code
2012-02-13 02:48:43 UTC <mgsloan> doh, lost internet
2012-02-13 02:57:22 UTC <mgsloan> but yeah, I also know someone who is interested in implementing http://www.contextfreeart.org/ on top of diagrams
2012-02-13 02:57:32 UTC <mgsloan> possibly in terms of something similar to turtle state
2012-02-13 02:58:22 UTC <mgsloan> it seems a little weird to layer state abstractions on top of the pure / compositional layer over stateful drawing APIs...
2012-02-13 02:59:05 UTC <mgsloan> but definitely good to have a way to do those types of things :D
2012-02-13 17:49:38 UTC <tgeeky> byorgey: by the way, being in the hospital for the last few days, I observed that newborns are like burritos... which by transitivity of bad analogy means that monads are like newborns.
2012-02-13 17:49:56 UTC <tgeeky> the nurses certainly wrap them up like they are burritos.
2012-02-13 17:51:09 UTC <fryguybob> tgeeky: My niece was born on easter and the had special chick hats for easter babies so she looked like a chicken burrito.
2012-02-13 17:51:39 UTC <tgeeky> lolol
2012-02-13 17:55:28 UTC <tgeeky> monads are like like newborns: they should be left wrapped as much as possible, they seem initially useless and high maintnence, but they grow on you fast!
2012-02-13 18:38:37 UTC <luite> hm
2012-02-13 19:07:42 UTC <byorgey> hehehe
2012-02-13 19:08:19 UTC <byorgey> tgeeky: sorry to hear you have been in the hospital, are you OK?
2012-02-13 19:08:31 UTC <tgeeky> byorgey: haha, I'm fine! I was visiting
2012-02-13 19:08:42 UTC <byorgey> ah, is whoever you were visiting OK?
2012-02-13 19:08:43 UTC <tgeeky> i became an uncle early - on Friday
2012-02-13 19:08:49 UTC <tgeeky> yes, all is well
2012-02-13 19:08:52 UTC <byorgey> oh! right, yay =)
2012-02-13 19:09:06 UTC <byorgey> hence observing newborns
2012-02-13 19:09:06 UTC <tgeeky> really pretty baby girl -- Addison Marie Day
2012-02-13 19:09:12 UTC <byorgey> =D
2012-02-13 19:09:44 UTC <byorgey> yeah, I guess if you were in the hospital for some non-newborn-related reason they probably would not let you observe any newborns
2012-02-13 19:10:08 UTC <tgeeky> yeah man
2012-02-13 19:10:11 UTC <luite> why not?
2012-02-13 19:10:27 UTC <luite> doesn't have to be contagious :)
2012-02-13 19:10:28 UTC <byorgey> security, hygiene, etc.
2012-02-13 19:10:47 UTC <tgeeky> FYI, in the USA, babies come born with: - a barcode wristband, a gender-appropriate-colored hat, and a baby lojack!
2012-02-13 19:11:00 UTC <byorgey> yep yep
2012-02-13 19:11:04 UTC <tgeeky> (that's how they know if it's a boy or a girl, pink or red hat!)
2012-02-13 19:11:11 UTC <tgeeky> err pink or blue
2012-02-13 19:11:12 UTC <luite> or a chicken, apparently
2012-02-13 19:11:25 UTC <byorgey> you have to have some way to tell the chicken babies apart too
2012-02-13 19:11:44 UTC <luite> my grandpa did that for a while, chicken sexing
2012-02-13 19:12:14 UTC <luite> the males wouldn't live long since their egg production tends to be lower
2012-02-13 19:12:56 UTC <byorgey> hehehe
2012-02-13 19:30:38 UTC <tgeeky> that's a very diplomatic way of putting it
2012-02-13 19:52:09 UTC <luite> hmm, I think even for meat, female chickens are better. my father had to select the hens while working on a kibbutz in israel, that were to be sold on the market for meat, working in the dark to avoid waking them up, apparently you can feel the difference
2012-02-13 19:52:45 UTC <luite> that means I'm the first in 3 generations that can't properly 'sex' chickens ;p
2012-02-13 20:48:03 UTC <byorgey> luite: what! you have dishonored your heritage!
2012-02-13 20:48:19 UTC <byorgey> young people these days grmbl grmbl
2012-02-13 20:48:24 UTC <luite> hehe
2012-02-13 23:08:21 UTC <mgsloan> http://www.mgsloan.com/panopti2.png
2012-02-13 23:09:12 UTC <mgsloan> still some bugs / doesn't descend into the lambda
2012-02-13 23:09:50 UTC <luite> hmm
2012-02-13 23:10:16 UTC <mgsloan> and the "mkDummyInstance" info obviously needs to be prettified
2012-02-13 23:10:57 UTC <mgsloan> the current reason it's confusing is that each function has a number of types associated with it
2012-02-13 23:11:08 UTC <mgsloan> the type of the function
2012-02-13 23:11:17 UTC <mgsloan> and the type of the function applied to its arguments
2012-02-13 23:11:39 UTC <mgsloan> when you have infix ops involved, you currently end up with a bunch of "result" types stacked vertically
2012-02-13 23:12:25 UTC <mgsloan> soon it'll have a representation that reflects the visual optimizations guaranteed by unification
2012-02-13 23:13:03 UTC <mgsloan> (function types sharing the types of their arguments)
2012-02-14 00:59:16 UTC <byorgey> mgsloan: nice =)
2012-02-14 01:00:07 UTC <luite> hmm, I don't understand the circles
2012-02-14 01:03:25 UTC <byorgey> circles are always misunderstood
2012-02-14 01:05:19 UTC <byorgey> luite: I think the circles are just the actual value of the expression being shown
2012-02-14 01:10:40 UTC <mgsloan> yup
2012-02-14 01:10:55 UTC <mgsloan> and the colored circles are awful placeholders for polymorphic types
2012-02-14 01:11:13 UTC <luite> ah ok
2012-02-14 01:11:29 UTC <mgsloan> probably to be replaced with greek characters or something
2012-02-14 03:33:59 UTC <tgeeky> byorgey: circles! nobody gets them! their parents don't understand, they were elippses
2012-02-14 03:50:51 UTC <luite> https://github.com/yesodweb/yesod/issues/268 <- I've made a toy impl, do you think it's better dan one based on TypeRep?
2012-02-14 05:42:44 UTC <vyom> mgsloan: I modified my code to use the Turtle type from diagrams-contrib. But I had to copy the file and make a small change to it (Line 31) https://github.com/deepakjois/hs-logo/blob/e22979219a4401f683bca92d9ed9199fe92f8e37/Diagrams/TwoD/Path/Turtle.hs
2012-02-14 05:43:24 UTC <vyom> I could send a patch, but I dont want to setup a git to darcs bridge for a single character delete :)
2012-02-14 05:44:19 UTC <mgsloan> awesome! Thanks!
2012-02-14 05:44:47 UTC <vyom> make that a 2 character delete..
2012-02-14 05:45:20 UTC <mgsloan> I'll update the diagrams-contrib version
2012-02-14 05:45:21 UTC <vyom> would you to patch that code?
2012-02-14 05:45:24 UTC <vyom> ok
2012-02-14 05:45:43 UTC <vyom> let me know once you do, and I will just use diagrams-contrib directly
2012-02-14 05:48:43 UTC <mgsloan> pushed! https://patch-tag.com/r/byorgey/diagrams-contrib/snapshot/current/content/pretty/src/Diagrams/TwoD/Path/Turtle.hs
2012-02-14 05:53:56 UTC <vyom> mgsloan: is there a planned release for diagrams-contrib ?
2012-02-14 05:57:16 UTC <mgsloan> I think it's planned to release synchronized with diagrams
2012-02-14 05:57:43 UTC <mgsloan> which has been soon for a while :D
2012-02-14 06:01:18 UTC <vyom> ya been hearing about the 0.5 release..
2012-02-14 06:01:33 UTC <vyom> i can wait until then i guess
2012-02-14 06:02:04 UTC <vyom> i have a few bits parts of the Logo language to implement to get some basic functionality out
2012-02-14 06:02:17 UTC <vyom> after that I can think of fancy things like colors
2012-02-14 06:02:33 UTC <vyom> which might involve making changes to the Turtle
2012-02-14 18:34:55 UTC <luite> http://apfelmus.nfshost.com/blog/2012/02/14-summer-of-code-proposal.html <- hey interesting proposal
2012-02-14 18:39:22 UTC <tgeeky> luite: can anyone do the proposals?
2012-02-14 18:39:39 UTC <luite> apparently
2012-02-14 18:40:14 UTC <tgeeky> can teams of people do these?
2012-02-14 18:40:35 UTC <luite> hmm, I think it's for single student<->mentor pairs, not sure though
2012-02-14 19:16:57 UTC <luite> wtf someone has been using my email for posting disqus comments like "Miley Cyrus is a totally outstanding performer. I adore all of her albums."
2012-02-14 19:17:52 UTC <luite> and my name is "uggs outlet"
2012-02-14 19:19:15 UTC <tgeeky> sure sure.
2012-02-14 19:22:32 UTC <tgeeky> http://blogs.discovery.com/.a/6a00d8341bf67c53ef0168e7496d97970c-pi
2012-02-14 19:22:35 UTC <tgeeky> wow what a beautiful picture
2012-02-14 19:23:29 UTC <luite> hmm, batman?
2012-02-14 19:33:25 UTC <byorgey> hmmm the #diagrams log file is now up to 830K.  I wonder if I am stressing out darcs.
2012-02-14 19:49:00 UTC <luite> tgeeky: hmm, apfelmus doesn't seem terribly enthusiastic about the stuff i've already done with wolfgang
2012-02-14 19:50:50 UTC <byorgey> luite: so what?
2012-02-14 19:51:18 UTC <byorgey> I think a few different projects in this space could be good anyway.  competition, cross-fertilization, etc. etc.
2012-02-14 19:51:52 UTC <byorgey> luite: also, it seems clear to me that his complaints are specific to sagemath and don't have to apply to Wolfgang.
2012-02-14 19:52:09 UTC <byorgey> (1) just because sagemath public wiki is unresponsive doesn't mean... etc.
2012-02-14 19:52:31 UTC <luite> possibly, something working might finally get released if someone else does the work
2012-02-14 19:52:41 UTC <byorgey> (2) Wolfgang could have a way to work with local files that isn't a pain
2012-02-14 19:58:49 UTC <luite> byorgey: I think it's more the tone of his reaction in general, he only picks things of my approach that he doesn't like, and then that my defaulting stuff is wrong.
2012-02-14 19:59:02 UTC <byorgey> yeah, I was surprised at his tone as well.
2012-02-14 20:04:52 UTC <luite> tnx for the clarification :)
2012-02-14 20:05:59 UTC <byorgey> sure =)
2012-02-14 20:07:17 UTC <luite> I started typing a slightly less friendly comment, but decided not to post it :)
2012-02-14 20:09:44 UTC <byorgey> hehe
2012-02-14 20:09:46 UTC <byorgey> probably wise
2012-02-14 20:10:35 UTC <luite> hehe nah it wasn't that bad
2012-02-14 20:14:27 UTC <tgeeky> could have a way to work with local files that isn't a pain
2012-02-14 20:14:30 UTC <tgeeky> oops :?
2012-02-14 20:15:12 UTC <tgeeky> luite: the easiest solution is to publish the code (at some point), and say: if you don't like it, change it!
2012-02-14 20:18:28 UTC <luite> even easier is not publishing and letting them build their own ;p
2012-02-14 20:23:57 UTC <byorgey> hehe, but that would be sad
2012-02-14 22:47:47 UTC <tgeeky> luite: that is not easier. You've allowed evidence of your toils to escape into the wild. Thus, (Human a) forall a. -- using your existing work would make it easier for them
2012-02-14 22:48:03 UTC <tgeeky> with a => thrown in for good measure
2012-02-15 02:19:26 UTC <vyom> mgsloan: I had this use case for the Turtle, where I needed to stack it up on top of the IO monad. This is for Logo language operations like printing to a screen etc
2012-02-15 02:20:37 UTC <vyom> i am wondering if it is possible to do it using the existing Turtle type.. but i cant think of a good way
2012-02-15 02:20:55 UTC <vyom> normally, what I would need is a monad transformer
2012-02-15 02:23:40 UTC <vyom> i am wondering if it makes sense to make a TurtleT type
2012-02-15 02:43:12 UTC <mgsloan> hmm, interesting problem, definitely seems like an occasion for monad transformers
2012-02-15 02:44:14 UTC <vyom> actually it is not just printing.. but even things like generating random values require the IO Monad
2012-02-15 02:45:11 UTC <mgsloan> "StateT TState IO" ? would need to export TState from the turtle, though
2012-02-15 02:45:42 UTC <mgsloan> the other option is to have a function that yields "IO Turtle"
2012-02-15 02:46:04 UTC <vyom> given the state monad is just StateT Identity.. I wonder if all that is required in the Turtle code is to just expose TurtleT (StateT TState) and Turtle as (TurtleT Identity)
2012-02-15 02:46:26 UTC <vyom> kind of like how parsec3 does it
2012-02-15 02:46:29 UTC <mgsloan> which performs all of the IO functions and yields a turtle, that when run using "runTurtle", yields the path
2012-02-15 02:48:09 UTC <vyom> ya that sounds like an alternative.. let me think about it
2012-02-15 02:48:34 UTC <mgsloan> I'd be open to changing the API, though
2012-02-15 02:48:55 UTC <vyom> i can always prototype changes in my copy and then send a patch
2012-02-15 02:49:13 UTC <vyom> hope to get to it after getting some other core features out of the way though
2012-02-15 02:49:17 UTC <vyom> hopefully sometime next week
2012-02-15 02:49:35 UTC <mgsloan> very cool!
2012-02-15 02:50:14 UTC <mgsloan> I'd definitely be willing to help with writing Diagrams.TwoD.Turtle (notice not Path.Turtle)
2012-02-15 02:51:28 UTC <vyom> cool!
2012-02-15 12:05:38 UTC <mgsloan> http://vimeo.com/36579366 <-- this is one side of exactly what I've been working on
2012-02-15 12:05:59 UTC <mgsloan> arrrgh, it kinda sucks to see it done right around when I'm working on the same thing
2012-02-15 12:06:25 UTC <mgsloan> validating, but happens so frequently.  These are all obvious ideas, imho
2012-02-15 12:15:39 UTC <mgsloan> this guy's site is awesome http://worrydream.com/#!/MagicInk
2012-02-15 12:15:53 UTC <mgsloan> but wow what a presentation
2012-02-15 12:16:09 UTC <mgsloan> glad someone made such a compelling demo for this
2012-02-15 15:20:13 UTC <tgeeky> that's a very loooooooong page
2012-02-16 13:23:13 UTC <fryguybob> ACTION adds a ticket for what av's question made me think of.
2012-02-16 13:25:15 UTC <byorgey> fryguybob: oh, getting smoothness between segments, I think I get what you were saying now
2012-02-16 13:25:42 UTC <byorgey> ACTION intends to implement the Metapost algorithms at some point
2012-02-16 13:25:47 UTC <byorgey> which would let you do that
2012-02-16 13:26:09 UTC <fryguybob> byorgey: indeed.
2012-02-16 13:26:30 UTC <fryguybob> Nurbs also allow for that quite easily.
2012-02-16 13:26:51 UTC <byorgey> nurbs
2012-02-16 13:26:57 UTC <byorgey> nurbs
2012-02-16 13:26:58 UTC <fryguybob> Expressing these conditions isn't always the easiest though.
2012-02-16 13:27:10 UTC <byorgey> ACTION just likes how it sounds
2012-02-16 13:27:14 UTC <fryguybob> :D
2012-02-16 13:27:39 UTC <fryguybob> In my machine learning class this semester I'm constainly having flashbacks to learning about nurbs.
2012-02-16 13:27:51 UTC <byorgey> hehe
2012-02-16 14:04:18 UTC <luite> fryguybob: why?
2012-02-16 14:06:32 UTC <fryguybob> luite: Regression and splines are closely related.  One is kind of about removing the noise and the other is about assuming there is no noise.
2012-02-16 14:07:21 UTC <fryguybob> Nurbs work by building up distribution curves from simple declative data.
2012-02-16 14:07:43 UTC <fryguybob> Regression works towards finding the distribution of noisy data.
2012-02-16 14:12:05 UTC <fryguybob> luite: If you look at the basis function pictures here: http://en.wikipedia.org/wiki/Nurbs  you should get the idea.
2012-02-16 14:46:33 UTC <luite> hm right
2012-02-17 03:59:27 UTC <vyom> byorgey: what do you think of this change https://github.com/deepakjois/hs-logo/commit/69fd730a15ee16f40f511196e7ee1d418c320c59
2012-02-17 03:59:55 UTC <vyom> i would have asked mgsloan but he does not seem to be around.
2012-02-17 04:04:35 UTC <byorgey> vyom: looks good to me
2012-02-17 04:42:59 UTC <vyom> byorgey: I am trying to draw the "Bullring" shown here : http://www.mathcats.com/gallery/15wordcontest.html#bullring and am running into some issues.
2012-02-17 04:43:31 UTC <vyom> Would be able to tell me how the rotate function https://github.com/deepakjois/hs-logo/blob/master/Diagrams/TwoD/Path/Turtle.hs#L58 if i give it a value like..
2012-02-17 04:43:57 UTC <vyom> 360 * (1002.0 ** 3) / 1002
2012-02-17 04:45:32 UTC <vyom> which is a pretty high value 3.6144144e8
2012-02-17 04:45:35 UTC <byorgey> that's a pretty big number
2012-02-17 04:45:36 UTC <byorgey> yeah
2012-02-17 04:45:46 UTC <byorgey> so what's the problem?
2012-02-17 04:46:53 UTC <byorgey> The rotate function still ought to work I think.
2012-02-17 04:47:16 UTC <byorgey> but I guess due to precision issues you might get slightly different results, I'm not sure
2012-02-17 04:47:42 UTC <vyom> i get a really weird output.. it is like this one straight line
2012-02-17 04:47:54 UTC <byorgey> hmm
2012-02-17 04:48:00 UTC <vyom> still trying to troubleshoot
2012-02-17 04:48:32 UTC <vyom> when i evaluate it on the ghci prompt.. i get a different value from when I evaluate it inside my logo interpreter.. so it is possible i am doing something wrong
2012-02-17 04:49:06 UTC <byorgey> hmmm
2012-02-17 04:50:21 UTC <vyom> it could be something to do with order of evaluation or something
2012-02-17 04:51:05 UTC <byorgey> well, I'm going to bed, but if you still haven't figured it out by tomorrow send me some code, or a link to the code, and I could take a look
2012-02-17 04:52:30 UTC <vyom> i might have figured it out. Thanks for the offer though
2012-02-17 04:52:33 UTC <vyom> good night!
2012-02-17 04:54:59 UTC <byorgey> night!
2012-02-17 22:21:03 UTC <luite> hmm, apfelmus says he's warming up to the ideas of a notebook interface and remote eval :)
2012-02-17 23:24:27 UTC <byorgey> luite: nice =)
2012-02-18 00:43:20 UTC <fryguybob> ACTION really needs to make an illustrated version of this with diagrams: http://ebiquity.umbc.edu/blogger/2008/01/19/how-dr-suess-would-prove-the-halting-problem-undecidable/
2012-02-18 00:49:43 UTC <byorgey> hah, that would be awesome =)
2012-02-18 01:13:03 UTC <luite> hmm
2012-02-18 04:50:37 UTC <vyom> mgsloan:  https://github.com/deepakjois/hs-logo/commit/69fd730a15ee16f40f511196e7ee1d418c320c59
2012-02-18 18:28:57 UTC <vyom> my logo interpreter can generate all these images now https://github.com/deepakjois/hs-logo/tree/master/examples/images
2012-02-18 18:29:14 UTC <vyom> https://github.com/deepakjois/hs-logo/blob/master/examples/images/jaggy_star.png
2012-02-18 18:29:24 UTC <vyom> thats my favorite
2012-02-18 21:47:37 UTC <vyom> here is a first cut at a hs-logo site as I prepare for release: http://deepakjois.github.com/hs-logo/
2012-02-19 20:20:04 UTC <vyom> i am having problems trying to install diagrams-cairo in a cabal-dev sandbox: http://pastebin.com/AV5Cmes6
2012-02-19 20:20:28 UTC <vyom> any hints on how i can get around this
2012-02-19 20:54:34 UTC <byorgey> hi vyom, let me take a look
2012-02-19 20:54:51 UTC <byorgey> vyom: by the way, the hs-logo examples look really awesome =)
2012-02-19 20:55:18 UTC <byorgey> vyom: ah, looks like you have GHC 7.4.1, right?
2012-02-19 20:56:07 UTC <byorgey> vyom: diagrams-cairo-0.4 doesn't work under 7.4.1
2012-02-19 20:56:47 UTC <vyom> byorgey:  does that mean i shouldnt be using 7.4.1 for now?
2012-02-19 20:57:07 UTC <byorgey> vyom: you have two options: (1) downgrade GHC; or (2) install the latest darcs version of diagrams, but note that you need the darcs version of gtk2hs under GHC 7.4.1
2012-02-19 20:57:33 UTC <byorgey> but there will soon be a new release of gtk2hs and also of diagrams
2012-02-19 20:58:23 UTC <vyom> byorgey: I was having problems with ghc 7.2, because cabal sdist wasnt working. So I decided to upgrade to 7.4 and try my luck instead
2012-02-19 20:58:33 UTC <byorgey> cabal sdist wasn't working?
2012-02-19 20:58:36 UTC <vyom> without cabal sdist I cannot make a release
2012-02-19 20:58:44 UTC <byorgey> wasn't working in what sense?
2012-02-19 20:59:15 UTC <byorgey> cabal sdist doesn't really depend on the version of GHC at all
2012-02-19 20:59:22 UTC <byorgey> at least I wouldn't think it does.
2012-02-19 20:59:54 UTC <byorgey> vyom: well, if you want to make a release now, then you ought to depend on diagrams 0.4, in which case you won't be able to support GHC 7.4 anyway
2012-02-19 21:00:23 UTC <byorgey> the other option would be to wait for diagrams 0.5 to be released, but I can't tell you exactly when that will be, other than to say I'm working hard on it
2012-02-19 21:00:55 UTC <vyom> byorgey: yes.. you are right.. I should have probably just focused on getting cabal sdist to work for me. I do have ghc 7.2 on my filesystem so i can downgrade
2012-02-19 21:01:07 UTC <vyom> i cant remember what cabal sdist was complaining yesterday
2012-02-19 21:03:03 UTC <vyom> byorgey: anyway.. let me see how far i can get with 7.4.. i will try option 2 above just for fun
2012-02-19 21:03:12 UTC <byorgey> ok =)
2012-02-19 21:03:42 UTC <vyom> i can always do a release sometime later.. maybe after 0.5 is released
2012-02-19 21:03:55 UTC <byorgey> sure
2012-02-19 21:04:11 UTC <byorgey> I hope it will be sometime in the next couple weeks
2012-02-19 21:04:43 UTC <vyom> byorgey: cool.. thanks
2012-02-20 02:19:35 UTC <vyom> i just spent a lot of time download the latest versions of gtkhs and diagrams-* and installing them inside a sandbox for hs-logo
2012-02-20 02:19:54 UTC <byorgey> cool, did you get it to work?
2012-02-20 02:19:55 UTC <vyom> looks like everything is configured correctly.. but my output has changed from the previous version
2012-02-20 02:20:03 UTC <byorgey> oh =(
2012-02-20 02:20:05 UTC <vyom> the default image size is 252 x 252
2012-02-20 02:20:25 UTC <vyom> i believe the default in the previous version was 400 x 400
2012-02-20 02:21:00 UTC <byorgey> ah, yes, previously 400x400 was the default, now if you do not specify a size it will default to whatever the actual size of the diagram is
2012-02-20 02:21:06 UTC <byorgey> you can just specify an output size
2012-02-20 02:21:11 UTC <vyom> ah.. ok
2012-02-20 02:22:03 UTC <vyom> how do I specify size? https://github.com/deepakjois/hs-logo/blob/master/Logo.hs#L51
2012-02-20 02:22:18 UTC <vyom> on that line -w 400 and -h 400 ?
2012-02-20 02:22:57 UTC <byorgey> yep
2012-02-20 02:24:04 UTC <byorgey> hey, neat, I didn't know about withArgs =)
2012-02-20 02:24:27 UTC <vyom> i love cabal-dev.. took a bit of time setup the dependencies correctly.. but after that it went smoothly
2012-02-20 02:24:56 UTC <byorgey> yeah, cabal-dev is nice
2012-02-20 02:26:01 UTC <vyom> i realised that there is a package called active which you will probably release along with diagrams 0.5
2012-02-20 02:26:18 UTC <byorgey> yes
2012-02-20 02:26:38 UTC <byorgey> sorry, I should have mentioned that, glad you figured it out =)
2012-02-20 02:27:18 UTC <vyom> i went hunting in your patch-tag repos, so glad I found it :)
2012-02-20 02:27:59 UTC <byorgey> =)
2012-02-20 02:28:30 UTC <vyom> so is there any other backend that is a serious contender for Cairo?
2012-02-20 02:29:10 UTC <byorgey> vyom: diagrams-postscript works pretty well I think, but it's not released yet
2012-02-20 02:29:19 UTC <vyom> i would like to help out on any backend that doesnt make me depend on gtk.. i dread writing the installation guide for it :)
2012-02-20 02:29:24 UTC <byorgey> after the 0.5 release I plan to put some work into an SVG backend
2012-02-20 02:29:41 UTC <byorgey> yeah, I would love to get away from cairo too
2012-02-20 02:29:48 UTC <vyom> i will check out postscript
2012-02-20 02:29:59 UTC <byorgey> patch-tag.com/r/fryguybob/diagrams-postscript
2012-02-20 02:30:10 UTC <vyom> but SVG would be perfect.. i would love to help out there..
2012-02-20 02:30:16 UTC <vyom> is there a repo somewhere?
2012-02-20 02:30:47 UTC <vyom> i meant for SVG.. but ya thanks for the pointer to postscript
2012-02-20 02:30:49 UTC <byorgey> patch-tag.com/r/felipe/diagrams-svg
2012-02-20 02:31:09 UTC <byorgey> although someone else wrote an SVG backend a year ago and I am still trying to get him to send me his code
2012-02-20 02:31:12 UTC <byorgey> =P
2012-02-20 02:31:19 UTC <vyom> :)
2012-02-20 02:31:36 UTC <byorgey> help on the SVG backend would be appreciated!
2012-02-20 02:32:19 UTC <vyom> a tangential question.. I am getting warnings in my code that my import of Control.Applicative is redundant.. is that something to do with GHC 7.4 ?
2012-02-20 02:32:51 UTC <vyom> i did change my dependency to "base  >= 4.2      && <  4.6"
2012-02-20 02:33:07 UTC <byorgey> ah, no, I think diagrams now re-exports a few things from Applicative for convenience
2012-02-20 02:33:16 UTC <fryguybob> What!!! why have I never noticed  withArgs  before!
2012-02-20 02:33:18 UTC <vyom> earlier is had it as "base        >= 4.2      && <  4.5" and it wasnt playing well with diagrams so i just changed it to match that
2012-02-20 02:33:34 UTC <vyom> oh ok
2012-02-20 02:33:35 UTC <vyom> cool
2012-02-20 02:33:35 UTC <byorgey> vyom: base-4.5 comes with GHC 7.4
2012-02-20 02:33:50 UTC <byorgey> so in order to build under GHC 7.4,  < 4.5  would not work
2012-02-20 02:34:03 UTC <byorgey> has nothing in particular to do with diagrams
2012-02-20 02:34:13 UTC <byorgey> fryguybob: I know, right?
2012-02-20 02:34:25 UTC <vyom> byorgey: i dont understand, doesnt it mean *less* than 4.5?
2012-02-20 02:34:43 UTC <fryguybob> byorgey: I've considered inventing it many times... sigh.
2012-02-20 02:34:47 UTC <byorgey> < 4.5  means the version of base must be less than 4.5, yes.
2012-02-20 02:34:53 UTC <luite> I'd change it to base < 6.2832 or something to avoid problems with every next version of ghc
2012-02-20 02:34:56 UTC <byorgey> but GHC 7.4 comes with base-4.5 .
2012-02-20 02:34:58 UTC <vyom> u mean if i have ghc 7.4 i dont have anything else other than 4.5?
2012-02-20 02:35:05 UTC <byorgey> correct.
2012-02-20 02:35:24 UTC <byorgey> fryguybob: hehe
2012-02-20 02:35:46 UTC <luite> ah I learned about that recently :)
2012-02-20 02:35:52 UTC <fryguybob> ACTION goes to look at what sort of evil it has to resort to.
2012-02-20 02:36:53 UTC <luite> hmm, c_setProgArgv
2012-02-20 02:36:56 UTC <vyom> i love the combinators in the System.FilePath library.. i was writing code for my hs-logo Hakyll site.. and I wanted to automate the rendering of example code and images
2012-02-20 02:37:10 UTC <vyom> every use case to modify pathnames and there is a function in there
2012-02-20 02:37:29 UTC <byorgey> yes, System.FilePath is nice
2012-02-20 02:37:43 UTC <vyom> https://github.com/deepakjois/hs-logo/blob/master/site/Site.hs#L63
2012-02-20 02:56:25 UTC <Axman6> hmm, getting this when trying to install diagrams-contrib from darcs: http://hpaste.org/64017
2012-02-20 03:00:57 UTC <byorgey> Axman6: ah, are you on GHC 7.4.1?
2012-02-20 03:02:30 UTC <fryguybob> Axman6: Same here on 7.4.1
2012-02-20 03:03:14 UTC <byorgey> ok, do a darcs pull and try again
2012-02-20 03:03:49 UTC <byorgey> 7.4.1 added (<>) to Data.Monoid, I hadn't realized Data.Monoid gets re-exported through Control.Monad.Writer
2012-02-20 03:04:39 UTC <Axman6> works now, thanks :)
2012-02-20 03:05:14 UTC <byorgey> great =)
2012-02-20 03:06:34 UTC <Axman6> bleh, now i can't install cairo >_<
2012-02-20 03:06:47 UTC <Axman6> Graphics/Rendering/Cairo/Types.chs:364:12: Could not deduce (Eq a) arising from a use of `toBool' from the context (Num a)
2012-02-20 03:07:43 UTC <byorgey> Axman6: oh, under GHC 7.4.1 you need darcs gtk2hs
2012-02-20 03:07:52 UTC <Axman6> ah, ok
2012-02-20 03:08:15 UTC <Axman6> i might get on that once i've gone and had some lunch
2012-02-20 03:08:20 UTC <byorgey> ok =)
2012-02-20 03:08:27 UTC <Axman6> will you be around in an hour or so?
2012-02-20 03:08:27 UTC <byorgey> ACTION approves of lunch
2012-02-20 03:08:46 UTC <luite> me too
2012-02-20 03:08:46 UTC <byorgey> Axman6: I'll probably be in bed
2012-02-20 03:09:09 UTC <Axman6> well, i'm sure i'll be able to find help somewhere anyway. thanks =)
2012-02-20 03:09:15 UTC <Axman6> ACTION -> noms
2012-02-20 03:11:09 UTC <byorgey> oh, drat, my fix re: Control.Monad.Writer for 7.4.1 just broke diagrams-contrib for all *earlier* versions =(
2012-02-20 03:11:36 UTC <byorgey> it seems we will have to resort to CPP =(
2012-02-20 03:11:52 UTC <vyom> Axman6: I wrote some bootstrap instructions if you want to be on the cutting edge https://github.com/deepakjois/hs-logo/blob/master/bootstrap_dev.sh
2012-02-20 03:44:17 UTC <Axman6> vyom: giving it a go now, thanks for the link
2012-02-20 14:13:31 UTC <av> hello chaps
2012-02-20 14:13:48 UTC <av> here's a problem of mine, I'm sure you can help:
2012-02-20 14:14:09 UTC <av> I do this -- withArgs [ "-o", "test.png", "-w", "800", "-h", "800" ] $ defaultMain $ ((text "ABCDEFGHabcdefgh" # fontSize 2 # translate (8,0) <> rect 10 1 # lw 0.1) # translate (-5,0)) <> rect 12 12 # lw 0.2
2012-02-20 14:14:20 UTC <av> which gives me roughly what I want
2012-02-20 14:14:51 UTC <av> now I do the same with a different output size -- withArgs [ "-o", "test.png", "-w", "400", "-h", "400" ] $ defaultMain $ ((text "ABCDEFGHabcdefgh" # fontSize 2 # translate (8,0) <> rect 10 1 # lw 0.1) # translate (-5,0)) <> rect 12 12 # lw 0.2
2012-02-20 14:15:06 UTC <av> and the output is quite different -- the text is shifted
2012-02-20 14:15:12 UTC <av> why is that?
2012-02-20 14:41:46 UTC <byorgey> av: hmm, if so that's a bug
2012-02-20 14:41:55 UTC <byorgey> av: are you using 0.4 (from Hackage) or darcs?
2012-02-20 14:48:20 UTC <byorgey> av: I tried your example with the latest darcs version of diagrams and the outputs I get are slightly different but not by much, just a tiny shift
2012-02-20 14:48:34 UTC <byorgey> av: how much of a difference are you talking about?
2012-02-20 14:49:08 UTC <av> byorgey: I tried 0.4 via cabal
2012-02-20 14:49:14 UTC <byorgey> av: OK.
2012-02-20 14:49:20 UTC <av> byorgey: the shift isn't very much, but enough to be noticed
2012-02-20 14:50:14 UTC <av> byorgey: in my example, you can clearly see the blank triangle between the 'A' and the rectangles change quite a bit
2012-02-20 14:50:34 UTC <byorgey> yes, OK, I see that too.
2012-02-20 14:51:17 UTC <mgsloan> uh-oh. this is probably a text thing.
2012-02-20 14:51:19 UTC <byorgey> I think the problem is simply that we try to pretend that text is scale-invariant when in fact it is not.
2012-02-20 14:51:32 UTC <byorgey> fonts render differently at different sizes.
2012-02-20 14:51:49 UTC <byorgey> i.e. rendering something at font size X and then scaling by two is NOT the same as rendering at font size 2X.
2012-02-20 14:52:13 UTC <byorgey> still, it's worth thinking about whether we can do better.
2012-02-20 14:52:28 UTC <byorgey> av: could you please file a bug for this, with your example attached, on the bug tracker?
2012-02-20 14:52:43 UTC <byorgey> http://code.google.com/p/diagrams/issues/list
2012-02-20 14:53:49 UTC <av> byorgey: thanks -- will do
2012-02-20 14:54:26 UTC <av> byorgey: I quite like TeX's font handling, maybe we can learn from that
2012-02-20 14:54:40 UTC <byorgey> yes, I'm sure we have a lot to learn from TeX!
2012-02-20 15:13:42 UTC <mgsloan> av - it's likely because now it uses the font's descent and ascent when computing the center of the text
2012-02-20 15:14:25 UTC <mgsloan> https://patch-tag.com/r/byorgey/diagrams-cairo/snapshot/hash/20111224013227-57657-9b40845a3aaa990c46a1a4839201e7e29a0af121/patch
2012-02-20 15:14:59 UTC <byorgey> mgsloan: no, av encountered this with the released 0.4 version, which doesn't include that patch
2012-02-20 15:15:10 UTC <mgsloan> ah
2012-02-20 15:15:58 UTC <mgsloan> ACTION joined too late to see that.  Are there realtime logs, btw?
2012-02-20 15:16:50 UTC <byorgey> mgsloan: no, there aren't, but if someone wants to set some up it would be great
2012-02-20 15:18:13 UTC <mgsloan> could be convenient on occasion
2012-02-20 15:18:18 UTC <byorgey> agreed
2012-02-20 15:19:54 UTC <av> byorgey: issue #67 it is
2012-02-20 15:20:04 UTC <mgsloan> I just need to set up my desktop with a persistent irc client.  As-is I broadcast to the world every time I lose wireless or go to sleep
2012-02-20 15:20:27 UTC <mgsloan> which can be interesting for future self-data-mining, sure
2012-02-20 15:20:33 UTC <byorgey> hehe
2012-02-20 15:20:50 UTC <byorgey> mgsloan: what OS is your desktop?
2012-02-20 15:21:02 UTC <mgsloan> everything's linux
2012-02-20 15:21:05 UTC <mgsloan> ubuntu
2012-02-20 15:21:18 UTC <byorgey> in that case it's pretty easy, just run an IRC client inside 'screen'
2012-02-20 15:21:22 UTC <mgsloan> yup
2012-02-20 15:21:30 UTC <byorgey> that's what I do
2012-02-20 15:22:15 UTC <mgsloan> I know what all ye 1337 irc haxxors do, I saw all your irssi at OPLSS
2012-02-20 15:22:36 UTC <mgsloan> I might try to go to that again!
2012-02-20 15:22:49 UTC <byorgey> yeah, I use irssi
2012-02-20 15:23:34 UTC <byorgey> can be a bit annoying figuring out how to get it set up the way you like at first, but works pretty well once you do
2012-02-20 15:25:04 UTC <mgsloan> looks like they're keeping on the really stand-out good lecturers, and adding Awodey (!) .  It'd be interesting to have all the best lecturers from last time, but taking 2x the time
2012-02-20 15:25:24 UTC <mgsloan> I kinda want to make an irc client that does conversation-threading / folding
2012-02-20 15:35:48 UTC <fryguybob> ACTION recently made the switch to irssi and screen.
2012-02-20 15:37:52 UTC <tgeeky> i use irssi too
2012-02-20 15:37:57 UTC <tgeeky> but I am not tooooo fond of it.
2012-02-20 15:43:32 UTC <fryguybob> It appears that I didn't build it with perl support so I don't have any scripts for fancy things like nick coloring :(
2012-02-20 15:43:50 UTC <mgsloan> I switched for a while, but ended up back on pidgin
2012-02-20 15:44:02 UTC <mgsloan> for no real reason
2012-02-20 15:47:48 UTC <luite> http://hdiff.luite.com/tmp/err1.png http://hdiff.luite.com/tmp/err2.png http://hdiff.luite.com/tmp/err3.png
2012-02-20 15:49:30 UTC <mgsloan> :O That's beautiful!
2012-02-20 15:50:01 UTC <fryguybob> defaul = id; tMain = defaultMain -- Fixed that for you
2012-02-20 15:52:11 UTC <luite> fryguybob: thanks it worked: http://hdiff.luite.com/tmp/err4.png
2012-02-20 15:53:36 UTC <luite> mgsloan: the green thing should turn red if there are errors
2012-02-20 15:53:50 UTC <luite> going to fix that later :)
2012-02-20 15:54:23 UTC <mgsloan> yup, all in good time
2012-02-20 15:55:19 UTC <luite> I'm going to move around some UI elements first, probably everything to the left, and remove the sideways text, it's causing some problems
2012-02-20 15:55:48 UTC <luite> for some reason if you rotate a 100x10 pixels thing 90 degrees, then it becomes a 100x100 thing
2012-02-20 15:56:01 UTC <mgsloan> since I'm using diagrams for my type explanations stuff, once that's figured out (going to take a long while still!), by that time we'll have an SVG backend, and so could totally be a wolfgang plugin
2012-02-20 15:56:17 UTC <luite> yeah that would be great
2012-02-20 15:56:44 UTC <mgsloan> the rise of the rich haskell repls / workbenches!
2012-02-20 15:56:58 UTC <fryguybob> ACTION wonders if you could get warnings: "Your diagram is not pretty enough."
2012-02-20 15:57:03 UTC <mgsloan> lol
2012-02-20 15:57:42 UTC <mgsloan> ACTION wants "here are 12 ways the computer thinks your diagram might look prettier.  try one?"
2012-02-20 15:57:45 UTC <luite> I still get an occasional error `x is not in scope' sometimes, need to fix that, but have no idea where it comes from
2012-02-20 15:58:32 UTC <mgsloan> does it have to do with how you're driving the interpreter?
2012-02-20 15:58:50 UTC <fryguybob> luite: Always have x in scope.
2012-02-20 15:58:55 UTC <luite> dunno, the interpreter says that it has loaded the module, but apparently it hasn't
2012-02-20 15:59:20 UTC <luite> or my check is wrong, or something :)
2012-02-20 16:02:59 UTC <luite> and the page menu (which contains save, upload resource, permissions, that kind of stuff) is going to move away from the top bar as well
2012-02-20 16:03:56 UTC <tgeeky> "It looks like you're trying to make a diagram of a paperclip. I am Clippy, prepare to die!"
2012-02-20 16:04:23 UTC <luite> oh and it needs a source code view, since merge markers don't really mix well with the notebook view
2012-02-20 16:04:58 UTC <tgeeky> nooo, you just need to perfect the vertical-zipping of documents idea I came up with :)
2012-02-20 16:05:09 UTC <luite> vertical whatting? :p
2012-02-20 16:05:30 UTC <tgeeky> luite: you know those editors which use visual tabstops and such?
2012-02-20 16:05:47 UTC <tgeeky> where the document ends up being a collection of empty and non-empty blocks
2012-02-20 16:06:17 UTC <luite> hmm, dunno
2012-02-20 16:06:24 UTC <tgeeky> http://visualstudiogallery.msdn.microsoft.com/site/view/file/56477/1/columnblocks_coloured.gif
2012-02-20 16:06:27 UTC <tgeeky> something like that
2012-02-20 16:07:05 UTC <luite> hm, ok, and what was your idea?
2012-02-20 16:07:44 UTC <tgeeky> write a zipper that vertically zips together: source, comments, git/diff annotations, compile errors, user comments
2012-02-20 16:08:25 UTC <tgeeky> and allow the user to enable/disable each
2012-02-20 16:08:30 UTC <luite> uh how would you zip in the errors? visually?
2012-02-20 16:09:02 UTC <tgeeky> yeah, my original idea (I don't know how to do this) is that errors would have the effect of "darkening" the relevant code block
2012-02-20 16:09:13 UTC <luite> the problem with merge markers is if you edit a page and someone else saves a copy before you save yours, you get the choice to overwrite, discard your own changes and merge
2012-02-20 16:09:31 UTC <tgeeky> luite: I would just save both in that case
2012-02-20 16:09:43 UTC <tgeeky> and let explicit mergers take care of it later
2012-02-20 16:09:44 UTC <luite> oh you can always cancel and save as...
2012-02-20 16:10:17 UTC <tgeeky> either way, that is actually a seprate issue I think
2012-02-20 16:10:24 UTC <luite> yeah I think it is
2012-02-20 16:10:36 UTC <tgeeky> my idea doesn't handle multiple copies of the same document at all
2012-02-20 16:10:43 UTC <tgeeky> which also makes me think it's useless
2012-02-20 16:10:45 UTC <mgsloan> I don't have a zipper for it,  but for panopti, I plan on having something that sounds similar to that: Marks.  Intervals of the text that are annotated with some additional information.
2012-02-20 16:10:54 UTC <luite> it's not really fully implemented yet, I just call diff or merge or something to get a merged output
2012-02-20 16:11:40 UTC <luite> and give that back to the user, but it's not always a valid notebook of course, if it has merge markers, but a user could easily fix those with a plain text editor
2012-02-20 16:12:12 UTC <tgeeky> which are the merge markers in your picture(s)?
2012-02-20 16:12:18 UTC <luite> there aren't any
2012-02-20 16:12:35 UTC <luite> it's another issue, this was just to test the ghc api error reporting stuff
2012-02-20 16:12:57 UTC <tgeeky> looks nice
2012-02-20 16:12:57 UTC <mgsloan> Currently I have ast, types, type-subset-contexts, compile error, user cursors, and parse resolutions stored as marks
2012-02-20 16:13:03 UTC <luite> i had to fix some stuff to make it properly report source code spans where it finds the error
2012-02-20 16:13:18 UTC <luite> had only line numbers first, this is a bit nicer
2012-02-20 16:13:22 UTC <tgeeky> that said, the box is green and it has errors :O
2012-02-20 16:13:33 UTC <luite> yes as I said, i still need to fix the box :)
2012-02-20 16:14:05 UTC <luite> but since the rotated text is a bit problematic, I want to fix the gui first
2012-02-20 16:14:32 UTC <tgeeky> luite: do you show any indicator if you have a module that is compiled (not interpreted) and with -O2?
2012-02-20 16:14:40 UTC <luite> no
2012-02-20 16:14:50 UTC <tgeeky> everything with this is interpreted?
2012-02-20 16:15:29 UTC <luite> well, in the current version yes, but that's one of the things remaining on the todo list before launch
2012-02-20 16:18:04 UTC <luite> I think it will basicaly be this: all saved pages will be compiled once in a while, so if you import, say, Wolfgang.User.Tgeegky.MyModule, you can assume that it will be compiled. Perhaps some import statement tooltip thing could give exact info on the imported module
2012-02-20 16:18:30 UTC <luite> package if it's a non-wiki module, revision date/time, compilation time, for a wiki module
2012-02-20 16:18:44 UTC <luite> good idea btw, tnx
2012-02-20 16:38:52 UTC <tgeeky> I did this?
2012-02-20 16:39:04 UTC <tgeeky> sweet
2012-02-20 16:39:24 UTC <tgeeky> luite: that sounds like exactly what 'shake' would be useful for
2012-02-20 16:41:33 UTC <tgeeky> anyway, i'm going to be configuring a router on here, so I'll probably get dropped a hundred times
2012-02-20 16:41:35 UTC <tgeeky> bbiaf
2012-02-20 17:42:55 UTC <luite> what's shake?
2012-02-20 18:02:06 UTC <luite> tgeeky_: what's shake?
2012-02-20 18:15:57 UTC <fryguybob> luite: http://community.haskell.org/~ndm/shake/ perhaps?
2012-02-20 18:18:22 UTC <luite> ah right
2012-02-20 18:18:29 UTC <luite> hm maybe
2012-02-20 22:05:02 UTC <vyom> added an installation guide to hs-logo http://deepakjois.github.com/hs-logo/installation.html Now waiting for the day that section goes down to one line :)
2012-02-20 22:13:47 UTC <byorgey> vyom: nice =)
2012-02-20 22:14:01 UTC <byorgey> vyom: typo: "cabal instal hs-logo"
2012-02-20 22:14:50 UTC <luite> vyom: does brew have ghc 7.4.1?
2012-02-20 22:15:41 UTC <byorgey> vyom: nice website =)
2012-02-20 22:18:36 UTC <luite> aw, thought that i had diagrams 0.5 installed :(
2012-02-20 22:20:46 UTC <vyom> luite: let me check.. i dont know
2012-02-20 22:22:59 UTC <vyom> luite: It looks like brew has GHC 7.4.1 can be installed using brew install --64bit --devel
2012-02-20 22:24:20 UTC <luite> oh they're fast :) macports still has 6.10.4
2012-02-20 22:26:31 UTC <vyom> I havent tried it myself. I installed GHC 7.4 and cabal by hand. I am updating the instructions now to use brew with --devel flags
2012-02-20 22:26:36 UTC <vyom> byorgey: thanks!
2012-02-20 22:26:45 UTC <vyom> will fix the typo
2012-02-20 22:27:36 UTC <luite> vyom: yeah me too :) i already have gtk2hs installed because someone in #haskell asked me to test something, so if byorgey just uploads 0.5 to hackage i can test hs-logo easily ;)
2012-02-20 22:28:53 UTC <byorgey> I'm working on it!
2012-02-20 22:29:00 UTC <byorgey> I want to wait for the gtk2hs release though
2012-02-20 22:30:06 UTC <luite> hehe no hurries, I'm busy relayouting wolfgang :)
2012-02-20 22:33:59 UTC <luite> since the rotated text buttons caused some annoying problems (they stoled focus from other buttons)
2012-02-20 23:05:51 UTC <vyom> now that this initial release is out of the way, i wanna start implementing more logo features..
2012-02-20 23:06:11 UTC <vyom> i really want robust error handling
2012-02-20 23:06:23 UTC <vyom> any good references or tips on that?
2012-02-20 23:06:58 UTC <vyom> right now my code is littered with "error" all over
2012-02-20 23:07:07 UTC <vyom> not sure if that is the right way to go about it
2012-02-20 23:07:15 UTC <byorgey> probably not =)
2012-02-20 23:07:27 UTC <vyom> :)
2012-02-20 23:08:20 UTC <byorgey> "error" is OK for things where the only way that case could be reached is because of a bug/broken invariant etc.
2012-02-20 23:08:32 UTC <byorgey> but not really appropriate for e.g. errors that could be caused by bad user input.
2012-02-20 23:09:20 UTC <byorgey> so, e.g. if you "know" a particular list will not be empty you can write   foo [] = error "Empty list in foo, please report this as a bug!"; foo (x:xs) = ...
2012-02-20 23:10:33 UTC <byorgey> vyom: for more robust error handling, it depends on the exact use case, but generally I would recommend the Error monad
2012-02-20 23:11:14 UTC <byorgey> vyom: you create a custom type to represent all possible errors, then within code using the Error monad you can throw and catch your custom errors
2012-02-20 23:12:08 UTC <byorgey> but they are not real exceptions, and cannot cause your program to crash
2012-02-20 23:14:09 UTC <byorgey> so e.g.   data MyErrors = EmptyList String | ...;  instance Error MyErrors ...;  foo :: [Int] -> Error MyErrors  Int; foo [] = throw (EmptyList "foo"); foo (x:xs) = ...
2012-02-20 23:22:42 UTC <byorgey> vyom: in the implementation of 'towards',  setHeading . uncurry atan2 $ pt ^-^ p   isn't this a bug (which is also present in the diagrams-contrib version)?
2012-02-20 23:23:06 UTC <byorgey> setHeading takes an angle in degrees but atan2 computes an angle in radians
2012-02-20 23:43:01 UTC <vyom> byorgey: I dont believe any primitive i have in the interpreter exercises it.. so it might very well be the case..
2012-02-20 23:44:05 UTC <vyom> and thanks for the input on the errors.. I believe I saw that pattern in this Scheme interpreter in Haskell called Husk
2012-02-20 23:44:14 UTC <vyom> i will investigate further
2012-02-20 23:50:19 UTC <vyom> byorgey: and yes.. I intend to send a patch to diagrams-contrib with the changes I made to the turtle. If you dont get to it.. I will submit a fix to this bug you mentioned as well
2012-02-21 00:24:43 UTC <luite> http://hdiff.luite.com/tmp/err5.png <- moved some stuff around, thoughts?
2012-02-21 00:26:07 UTC <vyom> luite: what is wolfgang?
2012-02-21 00:27:48 UTC <alpounet> luite, that looks great!
2012-02-21 00:28:00 UTC <alpounet> haven't seen what wolfgang looks like in months
2012-02-21 00:28:14 UTC <luite> volfgang is a top-secret prozject for to ze evaluation of ze haskell in ze browzer
2012-02-21 00:28:37 UTC <vyom> luite: I assume there is no URL i can visit to learn more about it then :)
2012-02-21 00:31:50 UTC <luite> not yet, working towards a release :)
2012-02-21 00:35:02 UTC <luite> alpounet: there are more images, many are a bit outdated now
2012-02-21 00:35:40 UTC <alpounet> luite, something along the lines of what apfelmus suggested?
2012-02-21 00:35:57 UTC <luite> yes, but I was first! ;p
2012-02-21 00:37:01 UTC <luite> I started with a wiki version, which probably is a bit more work, but I really like the idea of sharing code
2012-02-21 00:37:20 UTC <luite> a local version will be made later, I already made some changes earlier to make that easier
2012-02-21 00:40:25 UTC <luite> alpounet: the latest change made the content column variable width
2012-02-21 00:40:42 UTC <luite> I hope that's agood choice
2012-02-21 00:41:12 UTC <alpounet> hmm
2012-02-21 00:41:20 UTC <alpounet> does it have a max-width thoughh?
2012-02-21 00:41:58 UTC <luite> yeah for text
2012-02-21 00:42:23 UTC <luite> but code lines can be longer, and images (and other interactive stuff) wider
2012-02-21 00:45:56 UTC <luite> http://hdiff.luite.com/tmp/err6.png <- it still looks a bit odd with a wide window, since I don't yet properly centrate content that fits in the content column
2012-02-21 00:50:58 UTC <alpounet> well
2012-02-21 00:51:16 UTC <alpounet> as long as you don't have to scroll (horizontally) during ten seconds to read the end of a line
2012-02-21 00:51:18 UTC <alpounet> it's fine :p
2012-02-21 00:52:40 UTC <luite> hehe no even in the editor, long lines are properly line broken
2012-02-21 00:53:06 UTC <luite> they don't get wider than the browser window, unless you type something like aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
2012-02-21 00:54:19 UTC <alpounet> so do not put wolfgang in the hands of a newborn, or a cat, and it should be fine
2012-02-21 00:59:58 UTC <mgsloan> luite: Good change! It's red now!
2012-02-21 01:01:23 UTC <luite> yeah, sometimes it's red when it shouldn't be :(
2012-02-21 01:01:35 UTC <luite> the backend sometimes loses the file it's loaded
2012-02-21 01:05:38 UTC <luite> http://hdiff.luite.com/tmp/pagemenu.png <- last screenshot :)
2012-02-21 01:06:17 UTC <alpounet> cool
2012-02-21 01:10:23 UTC <mgsloan> are you going to (only eventually - I think earlier release is better) support propagating changes between offline and online asynchronously?  I suppose normal version control would probably work, but I've recently been tinkering with implementing "commutative replicated data types" in Haskell
2012-02-21 01:11:16 UTC <luite> online will be the first priority
2012-02-21 01:12:27 UTC <luite> there is really not much elegance in the code, but since saving a page is relatively simple for a client (log in, get id of latest revision, POST new version and say that parent id is the latest one)
2012-02-21 01:14:00 UTC <mgsloan> the concept of crdts is very simple - make the data you want to synchronize across hosts be stored in such a way that synchronization is commutative - which implies everyone will eventually end up in the same state
2012-02-21 01:14:45 UTC <luite> hmm, that sounds like not really easy to do with this
2012-02-21 01:16:07 UTC <mgsloan> if you make the online version centralized, then the javascript likely wouldn't need to know about it
2012-02-21 01:17:04 UTC <luite> hmm, what about multiple users writing to a file?
2012-02-21 01:17:10 UTC <luite> overlapping patches
2012-02-21 01:17:47 UTC <luite> you could make them commutative somehow, but probably not preserve everything you want
2012-02-21 03:40:11 UTC <Axman6> byorgey: you about? I'm wondering how one runs the fibCall example you gave me. it either complains bout not output file given, or tells me it didn't expect an argument...
2012-02-21 03:41:03 UTC <Axman6> hmmm, ok -o foo.png makes it not complain, but it's not terminating either (even with ^C)
2012-02-21 03:42:35 UTC <Axman6> ACTION must head to a lecture now
2012-02-21 07:02:59 UTC <Axman6> hmm, this channel has really been dead since 2? :\
2012-02-21 07:19:11 UTC <shachaf> There's a channel for diagrams?
2012-02-21 07:19:30 UTC <Axman6> yes
2012-02-21 10:47:28 UTC <byorgey> Axman6: yeah, you specify an output file with -o (you can see all the options with --help)
2012-02-21 10:47:37 UTC <byorgey> Axman6: the nontermination is strange though
2012-02-21 10:54:03 UTC <byorgey> Axman6: note you probably want to specify an output size too, e.g.  ./fibCall -o foo.png -w 400
2012-02-21 10:54:28 UTC <byorgey> but leaving off the size shouldn't cause nontermination
2012-02-21 12:48:34 UTC <luite> meh I had to unfix the wolfgang top bar because the cursor could get stuck under it :(
2012-02-21 13:19:31 UTC <luite> (in better news, jump to error works now)
2012-02-21 13:52:26 UTC <fryguybob> luite: You are going to make having errors so nice we will want to write them into our programs.
2012-02-21 13:58:53 UTC <byorgey> "aw, dang, no errors!"
2012-02-21 13:59:02 UTC <byorgey> ACTION inserts random space in the middle of a keyword
2012-02-21 14:03:24 UTC <fryguybob> One more reason not to write Ruby
2012-02-21 15:14:02 UTC <luite> http://hdiff.luite.com/tmp/err7.png <- without fixed top bar it looks like this now
2012-02-21 15:19:11 UTC <fryguybob> luite: Looks nice.
2012-02-21 15:20:06 UTC <luite> yeah I'm reasonably happy with it, the blue bar is still there if you load the page, it just scrolls out of view with the contents
2012-02-21 15:21:44 UTC <fryguybob> luite: I was about to ask that :D
2012-02-21 15:23:39 UTC <luite> oh and notice that I've now properly centrated the images!
2012-02-21 15:24:25 UTC <luite> they can be bigger and will remain centrated until they are around 50 pixels wider than the text at both sides, after that they grow to the right
2012-02-21 15:24:54 UTC <byorgey> luite: looks awesome!
2012-02-21 15:33:12 UTC <luite> can you choose prettier examples for the next version of your diagrams tutorial by the way? ;)
2012-02-21 15:33:25 UTC <byorgey> patches welcome ;)
2012-02-21 15:34:20 UTC <luite> hehe nah it's not that important
2012-02-21 15:40:25 UTC <byorgey> luite: although if there are any examples you think are *particularly* ugly I can improve a few =)
2012-02-21 15:42:12 UTC <luite> no no, that's such an ad hoc solution, you should encode prettiness in their types so that each backend can choose which ones to render
2012-02-21 15:44:45 UTC <byorgey> ah, good idea
2012-02-21 15:45:33 UTC <byorgey> guess we'd better port diagrams to Agda
2012-02-21 15:46:01 UTC <luite> hehe i'd better add an agda interpreter
2012-02-21 15:46:54 UTC <byorgey> nah, there's no need to *run* Agda code
2012-02-21 15:47:24 UTC <byorgey> if your diagram typechecks it will constitute a proof that it is sufficiently pretty and illustrates whatever you were trying to illustrate (we can put that in the type too)
2012-02-21 15:47:35 UTC <byorgey> in which case there's no need to actually render it.
2012-02-21 15:47:58 UTC <luite> ah good point
2012-02-22 15:19:14 UTC <luite> hmm, I've moved the "insert cell" + from within a cell to more inbetween cells: http://hdiff.luite.com/tmp/insert.png , is it better? ( compare: http://hdiff.luite.com/tmp/err4.png , larger + buttons here)
2012-02-22 15:39:58 UTC <luite> http://hdiff.luite.com/tmp/insertmenu.png <- the menu (still) looks like this, but I want to add some gray placeholder to indicate the position where the cell would be inserted
2012-02-22 16:18:36 UTC <fryguybob> luite: I like the new insert cell, it seems clear to me what it does.
2012-02-22 16:22:52 UTC <luite> ok, I'm probably going to add some keyboard shortcut for it, but i'll keep the menu for new users
2012-02-22 16:23:55 UTC <luite> I'm not very happy with the x and + icons so close to each other, but, meh, can change that later
2012-02-22 16:35:10 UTC <fryguybob> How would the keyboard shortcuts work? Is there a focus on the section you are at?
2012-02-22 17:06:57 UTC <luite> http://hdiff.luite.com/tmp/err4.png <- the active line, where the cursor is, is highlighted in yellow, a shortcut, say Command+e for inserting an expression, could make a new cell after the current
2012-02-22 17:08:39 UTC <luite> text cells can't have focus if their editor is closed
2012-02-22 17:12:49 UTC <luite> hmm, that "waveform" on google looks more like circle and elliptic sections than proper sine waves
2012-02-22 17:43:03 UTC <luite> http://hdiff.luite.com/tmp/source.png <- anyone want to write a codemirror highlighter for this format? :)
2012-02-22 18:46:12 UTC <luite> http://codemirror.net/demo/activeline.html <- does cursor movement with the arrow keys work for anyone with firefox here?
2012-02-22 19:01:12 UTC <ClaudiusMaximus> luite: works for me (but no key-repeat is not very comfortable)
2012-02-22 19:01:50 UTC <ClaudiusMaximus> luite: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.1.16) Gecko/20120131 Iceweasel/3.5.16 (like Firefox/3.5.16)
2012-02-22 19:02:04 UTC <luite> linux, right?
2012-02-22 19:02:08 UTC <ClaudiusMaximus> yeah
2012-02-22 19:02:56 UTC <luite> k, at least that's better than on OS X where it doesn't move at all
2012-02-22 19:22:40 UTC <luite> k opened a githib ticket
2012-02-22 19:22:41 UTC <luite> github
2012-02-22 20:55:28 UTC <byorgey> luite: works for me, even with key-repeat
2012-02-22 20:56:00 UTC <byorgey> (also linux, )
2012-02-22 20:56:06 UTC <byorgey> s/, //
2012-02-22 21:03:47 UTC <luite> hmm, looks like an OS X only problem then
2012-02-22 21:09:31 UTC <luite> hmm my university has an haskell-related phd student position available
2012-02-23 04:44:01 UTC <tgeeky_> hmm
2012-02-23 04:44:04 UTC <tgeeky_> who is awake
2012-02-23 04:48:04 UTC <mgsloan> luite - oh?
2012-02-23 04:54:24 UTC <tgeeky_> mgsloan: and byorgey: it occured to me tonight (in the shower, as it were) that a extremely concisely phrased goal for us is:  to enable practical inspection/exhaustion of visual proofs
2012-02-23 04:55:20 UTC <mgsloan> yup! That's occurred to me as well before.  The beyond-Haskell goal would be to provide better interfaces for the application of proof tactics
2012-02-23 04:56:30 UTC <tgeeky_> well, I think there is something distinct about visual proofs. You don't necessarily need to know how to attack the problem (and hence choose among proof tactics), but if you know how to visualize something in several ways, you could just -do- that and forget the tactics
2012-02-23 04:56:54 UTC <tgeeky_> I do think they are used less often in general, and probably less often than they should be
2012-02-23 05:00:37 UTC <mgsloan> (I'm thinking a more visual / speculative version of COQ.  Programming for proof assistants is probably one of the more paintstaking, meticulous programming things you can do.  A lot of trial-and-error and staring at transformed terms.  It's where the lack of informative IDEs / visualization really hurts, imho )
2012-02-23 05:01:18 UTC <tgeeky_> sure, but it's not like there is anybody to blame. this is hard stuff, it's hard to be general
2012-02-23 05:01:25 UTC <mgsloan> but that's also a really lofty goal, one I only really know a bit about.  For now it's all about making Haskell kickass
2012-02-23 05:01:34 UTC <mgsloan> oh definitely
2012-02-23 05:03:32 UTC <mgsloan> no one's to blame, though people are to blame for not encouraging ($$$) development of better solutions for these problems, and really address our most foundational technologies well
2012-02-23 15:44:44 UTC <luite> byorgey: did you ever get a reply from MAA?
2012-02-23 16:05:47 UTC <tgeeky> still going on huh
2012-02-23 16:06:35 UTC <luite> hehe I think it's ethical to break DRM protection if they treat customers like this ;p
2012-02-23 16:10:57 UTC <tgeeky> hopefully it's possible
2012-02-23 16:11:02 UTC <tgeeky> I think it's ethical to break DRM all the time
2012-02-23 16:11:27 UTC <tgeeky> You don't own my bits, man.
2012-02-23 16:12:55 UTC <luite> I do tell my father to buy his ebooks in stores that use adobe drm, and not in the ibooks store with apple drm, since the latter is much more difficult (impossible?) to remove
2012-02-23 17:11:19 UTC <byorgey> luite: nope, not yet
2012-02-23 17:11:23 UTC <byorgey> I'm going to try calling them
2012-02-23 20:31:46 UTC <luite> mgsloan: dunno if this is what you said 'oh' about, but: "The topic of the project is to further investigate the notion of higher-ranked polyvariance within the context of type based static analysis of higher-order (functional) languages."
2012-02-23 20:33:13 UTC <luite> oh
2012-02-23 23:41:34 UTC <fryguybob> byorgey: patch to postscript pushed with some changes.
2012-02-24 01:09:18 UTC <byorgey> fryguybob: great!
2012-02-24 01:33:23 UTC <luite> http://hdiff.luite.com/tmp/interactive.png <- now with ADT construction (for ex Either Int String would give you an Int input if Left is selected, a String input field for Right)
2012-02-24 01:38:17 UTC <byorgey> oooOOOOoooo
2012-02-24 01:42:07 UTC <fryguybob> testBottom = Interactive "test" (repeat $ intSlider "a" 0 10 5)
2012-02-24 01:42:39 UTC <luite> hehe that will give you a timeout or a read error because of too much data produced
2012-02-24 01:43:21 UTC <luite> this is just the low-level code of course, I'll let people come up with ideas to automatically generate gui's from types
2012-02-24 01:43:53 UTC <luite> and I found some bugs with the wiki where I couldn't overwrite pages, so had to make new pages instead
2012-02-24 01:44:04 UTC <luite> that's why this is itest10 :)
2012-02-24 01:46:52 UTC <luite> kept getting 'merge required' even though I was editing the latest version
2012-02-24 01:56:25 UTC <byorgey> luite: hmm, you might know the answer to this.  How can I make a list of HTML blocks that will be laid out L-R but "wrap" at the edge, just like text?
2012-02-24 01:57:04 UTC <byorgey> i.e. I want to make a gallery of images with captions but not have them laid out just in a vertical column
2012-02-24 01:58:13 UTC <luite> hmm, doesn't it work if you just use regular images? otherwise if you need to add a caption, you could wrapt them in a div and set display: inline-block for that div
2012-02-24 01:58:32 UTC <luite> I believe inline-block doesn't work for old IE versions
2012-02-24 01:58:37 UTC <byorgey> ah, inline-block, excellent
2012-02-24 01:58:47 UTC <byorgey> ACTION really couldn't care less about old IE versions
2012-02-24 01:59:05 UTC <byorgey> luite: thanks
2012-02-24 02:00:16 UTC <luite> if something doesn't work, please give a sample, I'll hack on it till it does :)
2012-02-24 02:00:29 UTC <byorgey> awesome, thanks =)
2012-02-24 02:44:34 UTC <vyom> http://hpaste.org/64260
2012-02-24 02:44:44 UTC <vyom> byorgey: getting a error in diagrams-lib
2012-02-24 02:45:10 UTC <byorgey> vyom: did you do a darcs pull in all the repos?
2012-02-24 02:45:17 UTC <vyom> yup
2012-02-24 02:45:35 UTC <vyom> let me verify
2012-02-24 02:46:36 UTC <byorgey> vyom: so you did a darcs pull in diagrams-core and rebuilt that first?
2012-02-24 02:47:16 UTC <byorgey> you have to be careful to rebuild them in the right order: core, lib, cairo
2012-02-24 02:47:40 UTC <vyom> byorgey: i think it was some sort of cabal-dev wonkiness.. i managed to build diagrams-lib now.. trying to build hs-logo now after unregistering packages using cabal-dev hs-logo
2012-02-24 02:47:50 UTC <byorgey> ok
2012-02-24 02:50:24 UTC <vyom> ok looks like i am getting a build failure as expected.. now merging change
2012-02-24 02:51:54 UTC <vyom> cool..
2012-02-24 02:52:02 UTC <vyom> merge successful
2012-02-24 02:52:04 UTC <vyom> thanks
2012-02-24 02:52:06 UTC <byorgey> yay!
2012-02-24 02:52:09 UTC <byorgey> you're welcome
2012-02-24 03:57:05 UTC <luite> http://hdiff.luite.com/tmp/interactive2.png <- it worky!
2012-02-24 03:57:30 UTC <luite> (it also ugly)
2012-02-24 03:58:41 UTC <byorgey> yay!
2012-02-24 03:59:05 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-gallery.png  -- screenshot of redesigned diagrams gallery
2012-02-24 03:59:30 UTC <luite> this means that i almost have most of the features from the preview implemented
2012-02-24 03:59:55 UTC <byorgey> luite: nice!  so what's left before beta release?
2012-02-24 04:00:43 UTC <luite> uh lots of bugs fixing, apparently you can save every page only twice for example
2012-02-24 04:01:28 UTC <luite> and you get logged out after evaluating an expression
2012-02-24 04:01:35 UTC <byorgey> haha
2012-02-24 04:03:46 UTC <luite> but real new functionality? main thing is background compiler and making importing other wolfgang modules work
2012-02-24 04:04:25 UTC <byorgey> cool
2012-02-24 04:04:35 UTC <byorgey> ok, I'm off to bed
2012-02-24 04:05:22 UTC <luite> oh and a diagrams native svg backend is absolutely required for the beta ;p
2012-02-24 04:59:50 UTC <mgsloan> luite - no way, awesome!
2012-02-24 05:11:06 UTC <vyom_> luite: are you saying you are working on an SVG backend :)
2012-02-24 13:51:15 UTC <fryguybob> luite: diagrams-postscript then ps2svg :P
2012-02-24 13:57:37 UTC <luite> fryguybob: nah the point is to get javascript in diagrams (which is necessary for things like the tic-tac-toe game in the demo)
2012-02-24 14:41:41 UTC <fryguybob> luite: Yeah, I should play with that when I have time.
2012-02-24 14:46:15 UTC <luite> yeah, if you could go ahead and make something that allows events to be handled for svg nodes, that would be great, yeah
2012-02-25 01:37:31 UTC <luite> http://hdiff.luite.com/tmp/interactive7.png <- I need some way to indicate that some field belongs to another one, for example if in the last field, the Nothing constructor was selected, the text field would not be shown. any suggestions how to improve this?
2012-02-25 01:44:11 UTC <fryguybob> 2011 was sooo last year
2012-02-25 01:44:49 UTC <luite> i know, but the year is part of an image and i couldn't find the psd :(
2012-02-25 01:45:39 UTC <luite> probably going to change that message anyway once i start accepting pull reqs and patches :)
2012-02-25 01:48:14 UTC <fryguybob> I'm not sure there is anything bad about having the text box just disapear on Nothing.
2012-02-25 01:48:43 UTC <luite> fryguybob: oh that's not the problem, the problem is how to indicate that the text box belongs to the Nothing/Just buttonset
2012-02-25 01:52:01 UTC <fryguybob> Ah, so the arc on the left is not effective?
2012-02-25 01:53:08 UTC <luite> hm, maybe it's good enough
2012-02-25 01:53:23 UTC <luite> at least it's better than the older interactiveX.png :)
2012-02-25 01:54:12 UTC <fryguybob> ACTION goes back to X = 3 and agrees.
2012-02-25 01:57:00 UTC <luite> hmm, i'll keep this for now then
2012-02-25 01:57:14 UTC <luite> probably need to adjust the spacing between the elements a bit later
2012-02-25 01:59:35 UTC <byorgey> looks OK to me
2012-02-25 02:00:42 UTC <byorgey> fryguybob: I'm about to push some major improvements to diagrams-builder
2012-02-25 02:01:36 UTC <fryguybob> byorgey: Ok, I try to build again.
2012-02-25 02:03:36 UTC <byorgey> it now uses haskell-src-exts to parse the code, so it can do things like stick in additional pragmas and imports in a robust way
2012-02-25 02:03:46 UTC <byorgey> i.e. it doesn't add them if they're already there, etc.
2012-02-25 02:04:38 UTC <byorgey> so you could just have  'foo = square 2' and it will work, but you could also have  '{-# LANGUAGE TupleSections #-} import Diagrams.Prelude hiding (frozz)  example = circle 3' and that will work too
2012-02-25 02:07:08 UTC <byorgey> fryguybob: oh, I guess for the LaTeX package we are going to want diagrams-builder to come with an executable too, eh?
2012-02-25 02:07:24 UTC <byorgey> (changes pushed)
2012-02-25 02:15:11 UTC <fryguybob> byorgey: Yeah we need something to call out to.  The other interesting question is how the blocks of diagrams code interact with eachother.
2012-02-25 02:17:45 UTC <byorgey> fryguybob: I thought about that a bit.  The easiest approach would be that it's up to clients of diagrams-builder to assemble together all the relevant snippets of code for each call
2012-02-25 02:18:34 UTC <byorgey> i.e. a document format could define two types of blocks: one that lets you define diagrams code that gets collected up and is available to all future blocks, and one that actually generates an image
2012-02-25 02:18:37 UTC <fryguybob> byorgey: Right, in my LaTeXGrapher thing each block was independent so I can generate all the images in one pass.
2012-02-25 02:19:29 UTC <fryguybob> byorgey: Humm, ok.  And the supporting block is hidden.
2012-02-25 02:19:35 UTC <byorgey> something like that
2012-02-25 02:20:34 UTC <byorgey> ideally there would be an option to specify whether you want it hidden or typeset.  But that's a separate issue.
2012-02-25 02:20:36 UTC <fryguybob> I think it will make sense but I guess the danger is it will "look" like literate haskell, but behave a bit differently.
2012-02-25 02:20:50 UTC <byorgey> true.
2012-02-25 02:21:01 UTC <byorgey> well, I'm certainly open to other ideas.
2012-02-25 02:21:09 UTC <fryguybob> byorgey: Yeah, that could just be an optional flag and we could emit a diagram, have it be hidden or emit both code and diagram.
2012-02-25 02:21:14 UTC <byorgey> right.
2012-02-25 02:21:38 UTC <byorgey> but again that doesn't really affect diagrams-builder.
2012-02-25 02:22:09 UTC <byorgey> e.g. I have the user manual doing that, it runs the code both through pandoc and diagrams-builder
2012-02-25 02:22:18 UTC <fryguybob> byorgey: No not at all. With the TeX that I do know it will work out nicely for single pass if you do not expect definitions from future blocks to be usable in passed blocks.
2012-02-25 02:22:53 UTC <byorgey> fryguybob: yeah, I think that's sensible (even though, as you note, that's not how literate Haskell would work)
2012-02-25 02:23:39 UTC <fryguybob> It appears that hint is still a problem for 7.4.
2012-02-25 02:28:11 UTC <luite> byorgey: do you prettyprint the haskell-src-exts parsed source back to text?
2012-02-25 02:28:43 UTC <byorgey> luite: yes
2012-02-25 02:28:49 UTC <byorgey> luite: is that bad?
2012-02-25 02:29:15 UTC <byorgey> fryguybob: oh, really?
2012-02-25 02:29:35 UTC <byorgey> I haven't been doing much with diagrams on 7.4 recently since I'm waiting for the new gtk2hs release
2012-02-25 02:29:49 UTC <luite> byorgey: uh not necessarily, but I found it quite difficult to do properly with wolfgang
2012-02-25 02:30:27 UTC <fryguybob> byorgey: It wants  ghc-mtl  which isn't in my ghc-pkg list.
2012-02-25 02:30:38 UTC <byorgey> luite: note in this case I don't care whether it preserves space or comments or whatever, because all I'm going to do with the resulting code is interpret it in order to generate a diagram
2012-02-25 02:30:58 UTC <byorgey> fryguybob: http://hackage.haskell.org/package/ghc%2Dmtl ?
2012-02-25 02:30:59 UTC <luite> yeah that does help a lot, but how about reporting errors?
2012-02-25 02:31:23 UTC <byorgey> luite: yeah, errors might be a problem I suppose.
2012-02-25 02:31:44 UTC <byorgey> I haven't looked too hard at the quality of error output.
2012-02-25 02:32:03 UTC <fryguybob> Ah, ok so that shouldn't be a problem
2012-02-25 02:32:53 UTC <luite> the space-preserving prettyprinter prints {-#LANGUAGE TupleSections #-} back as {-# LANGUAGETupleSections #-} btw
2012-02-25 02:33:32 UTC <byorgey> hehe, ugh
2012-02-25 02:34:20 UTC <byorgey> I thought I wasn't going to be able to use haskell-src-exts because it used to choke on # used as an operator, but I was happily surprised to see that has appraently been fixed
2012-02-25 02:35:49 UTC <luite> does ghc 7.4 still choke on # in .lhs files?
2012-02-25 02:35:55 UTC <luite> as first character of a line
2012-02-25 02:36:16 UTC <byorgey> not sure
2012-02-25 02:37:05 UTC <byorgey> ok, I'm off, more hacking tomorrow =)
2012-02-25 02:37:22 UTC <luite> good night, or something
2012-02-25 02:37:25 UTC <fryguybob> byorgey: It did build!
2012-02-25 02:37:31 UTC <byorgey> yay!
2012-02-25 02:38:17 UTC <fryguybob> I'll get to some TeX hacking soon, I have some Java projects to grade tomorrow though :(
2012-02-25 02:39:51 UTC <luite> cool! java projects!
2012-02-25 02:40:11 UTC <byorgey> fryguybob: wheee
2012-02-25 02:58:18 UTC <mgsloan> oooh, diagrams- builder!!  very nice.  not stuff my stuff doesn't already do, but very well documented / structured!
2012-02-25 02:58:47 UTC <luite> hehe
2012-02-25 03:00:45 UTC <mgsloan> luite - cool pic! my thought on the whole interactive-data thing would be to have those buttons instead be tabs on panes
2012-02-25 03:01:18 UTC <mgsloan> so that field state isn't lost when you switch between different constructors
2012-02-25 03:04:32 UTC <luite> it isn't kost
2012-02-25 03:04:34 UTC <luite> lost
2012-02-25 03:07:55 UTC <luite> and with tabs you have more or less the same problem, you need to indicate which fields belong to some pane
2012-02-25 03:09:48 UTC <fryguybob> byorgey: It works :D.  This was from ghci: http://www.cs.rochester.edu/u/ryates/temp/test.pdf
2012-02-25 03:10:10 UTC <mgsloan> fryguybob: have you seen my diagrams-ghci?
2012-02-25 03:11:36 UTC <luite> fryguybob: impresive!
2012-02-25 03:31:08 UTC <mgsloan> not that that's much of a solution - I look forward to a proper ghcid!
2012-02-25 03:39:29 UTC <luite> ghcid?
2012-02-25 04:23:10 UTC <luite> buh...
2012-02-25 04:23:27 UTC <luite> boring boring boring boring
2012-02-25 04:38:15 UTC <luite> http://hdiff.luite.com/tmp/fp2.png <- actual real data under 'Activity!'
2012-02-25 04:55:43 UTC <luite> yay I have 10 followers again on github!
2012-02-25 04:56:05 UTC <luite> someone unfollowed me last week, went from 10 to 9
2012-02-25 04:56:16 UTC <luite> felt so sad for a few days :'(
2012-02-25 05:03:42 UTC <mgsloan> ACTION follows
2012-02-25 05:07:08 UTC <mgsloan> luite - ghcid is this https://github.com/mgsloan/diagrams-ghci
2012-02-25 05:07:38 UTC <mgsloan> it looks like this except no confusing type diagrams http://www.mgsloan.com/panopti2.png
2012-02-25 05:08:10 UTC <mgsloan> does surprisingly snappy live diagram updates (as I'm sure you've found with wolfgang)
2012-02-25 05:22:50 UTC <luite> whoah 11 followers!
2012-02-25 05:23:53 UTC <luite> ah interesting
2012-02-25 05:24:05 UTC <luite> didn't know you had inline diagrams
2012-02-25 05:25:17 UTC <mgsloan> yup.  It's not a big thing though
2012-02-25 05:26:03 UTC <mgsloan> this is the entire source code https://github.com/mgsloan/diagrams-ghci/blob/master/src/Main.hs
2012-02-25 05:26:15 UTC <mgsloan> (albeit relying heavily on gtk-toy-diagrams)
2012-02-25 05:26:45 UTC <luite> meh I feel inadequate, needing so many lines for the same thing :(
2012-02-25 05:27:02 UTC <mgsloan> hah, but yours is pretty!
2012-02-25 05:27:10 UTC <mgsloan> whereas mine is only pretty code
2012-02-25 05:27:19 UTC <mgsloan> which doesn't amount to much
2012-02-25 05:28:14 UTC <luite> mine is ugly code
2012-02-25 05:28:32 UTC <mgsloan> ahh the glories of web-dev
2012-02-25 05:28:55 UTC <luite> I've been in "need to finish this, clean code comes later" mode for a while now :)
2012-02-25 05:29:01 UTC <mgsloan> re: fp2.png - awesome!!
2012-02-25 05:29:17 UTC <mgsloan> yeah, please do that until the first release!
2012-02-25 05:29:30 UTC <mgsloan> community seriously needs this
2012-02-25 05:29:40 UTC <mgsloan> even if they don't know it yet ;)
2012-02-25 05:29:56 UTC <luite> hehe we'll see
2012-02-25 05:30:28 UTC <mgsloan> fp2 is looking suuuuper clean
2012-02-25 05:30:59 UTC <luite> oh you mean the design? that's been the same for a while now :)
2012-02-25 05:31:00 UTC <mgsloan> screenshots from a couple days ago did some pretty heavy blur, is that still around? I kinda like the cripser edges
2012-02-25 05:31:23 UTC <mgsloan> softness is nice, especially for hovering things
2012-02-25 05:31:35 UTC <luite> blur what?
2012-02-25 05:31:45 UTC <mgsloan> but the drop shadow next to the sidemenu was too much
2012-02-25 05:31:52 UTC <mgsloan> I meant drop shadows
2012-02-25 05:32:19 UTC <luite> http://hdiff.luite.com/tmp/interactive7.png <- this is how it looks atm
2012-02-25 05:32:27 UTC <mgsloan> I'm no web/visual designer, though, you clearly have more talent there!
2012-02-25 05:32:47 UTC <luite> i switched from a fixed width layout to variable width
2012-02-25 05:32:54 UTC <luite> haven't adjusted the shadow yet
2012-02-25 05:33:09 UTC <luite> nah it's not talent, it's countless hours of tinkering :(
2012-02-25 05:33:30 UTC <mgsloan> looks fantastic! seriously, I'd barely change a thing, but I still get this desire to shift that drop shadow about 15-20px to the right
2012-02-25 05:33:44 UTC <mgsloan> gotcha :)
2012-02-25 05:34:04 UTC <luite> lemme see if i can do that
2012-02-25 05:35:43 UTC <luite> of course I forgot which element has that shadow
2012-02-25 05:40:35 UTC <luite> http://hdiff.luite.com/tmp/ws3.png <- slightly lessified shadow
2012-02-25 05:41:23 UTC <luite> http://hdiff.luite.com/tmp/ws.png <- what the same page looked like last october :)
2012-02-25 05:47:45 UTC <luite> oops i overwrote ws2.png with ws3 :(
2012-02-25 05:50:24 UTC <luite> wanted to show the difference, lots of little tweaks, mainly to make it look more like an actual document, no more full with horizontal lines between cells, all ui elements moved to the left margin
2012-02-25 05:50:36 UTC <luite> full width
2012-02-25 05:59:31 UTC <tgeeky_> luite: now, just generalize over both designs, make a "templating" system with two examples, and you're done!
2012-02-25 06:00:13 UTC <luite> nah i want a system that only accepts pages with a design i like
2012-02-25 06:00:36 UTC <tgeeky_> hopefully this "liking" of which you speak won't require facebook!
2012-02-25 06:01:08 UTC <tgeeky_> my god. truecrypt formatting a USB2.0 2TB drive is horrendous
2012-02-25 06:01:34 UTC <luite> mgsloan: the smaller top bar was meant to be a fixed position element but I had to change that last week because of cursor positioning issues :( the black/white W logo at the top left is more or less an emergency measure to fill up the space there
2012-02-25 06:02:07 UTC <luite> (clicking it still leads you to the frontpage, just like clicking on the full logo)
2012-02-25 06:02:32 UTC <tgeeky_> 00:32 < luite> http://hdiff.luite.com/tmp/interactive7.png <- this is how it looks atm
2012-02-25 06:02:38 UTC <tgeeky_> ^^ -- | bravo!
2012-02-25 06:02:48 UTC <luite> http://hdiff.luite.com/tmp/interactive4.png <- here with top bar scrolled out of view
2012-02-25 06:03:12 UTC <tgeeky_> luite: hum.
2012-02-25 06:03:20 UTC <tgeeky_> be sure and take up as little space as necessary there, on the left
2012-02-25 06:04:04 UTC <luite> tgeeky_: actually I wanted it to take more space there, not less
2012-02-25 06:04:20 UTC <luite> so everything has been laid out pretty loosely
2012-02-25 06:05:05 UTC <luite> dunno which left you mean, did you mean left of the page, or left of the inputs for the interact thingies?
2012-02-25 06:05:44 UTC <tgeeky_> luite: the leftmost (gray) bar
2012-02-25 06:06:17 UTC <luite> oh right, well the problem is that the whole user interface pretty much dictates that it's a one column document
2012-02-25 06:06:34 UTC <luite> and most screens are much too wide for a single column, unless you have huge text
2012-02-25 06:07:14 UTC <tgeeky_> luite: uhh, one column, sure, but metainformation on the left (line number, indent information, thread information)
2012-02-25 06:07:23 UTC <tgeeky_> that's "in the document" (and not in the gray area)
2012-02-25 06:08:08 UTC <luite> so i limited the text column width to something (I think is) sensible ( http://hdiff.luite.com/tmp/insertmenu.png for example )
2012-02-25 06:09:16 UTC <luite> but I made both the "menu bar" and the left margin pretty wide, the latter to make it look a bit more like a paper document, the former to make sure that the text column isn't too far to the left on most screens
2012-02-25 06:10:06 UTC <luite> (I actually decreased the margin size a bit when switching from fixed to variable width)
2012-02-25 06:13:27 UTC <tgeeky_> i have not yet read what you typed
2012-02-25 06:13:31 UTC <tgeeky_> here is the suggestion I'm making:
2012-02-25 06:13:34 UTC <tgeeky_> http://i.imgur.com/v34w4.png
2012-02-25 06:14:10 UTC <tgeeky_> make that thing thinner ... try finding some way to get rid of the gradient, and recover that space (on both sides, if possible)
2012-02-25 06:14:25 UTC <tgeeky_> and then maybe you can add a right column as well as a left one
2012-02-25 06:14:30 UTC <tgeeky_> with the space you get back
2012-02-25 06:14:41 UTC <mgsloan> I like the lessened shadow! and tgeeky's suggestion as well
2012-02-25 06:14:41 UTC <luite> what would you do with the right column?
2012-02-25 06:14:51 UTC <tgeeky_> luite: I don't know. something sharp
2012-02-25 06:15:04 UTC <tgeeky_> emphasize the outline that springs from "worksheet"
2012-02-25 06:15:27 UTC <mgsloan> maybe no gradient, and pretend the light has flipped about the x-axis?
2012-02-25 06:15:45 UTC <mgsloan> I like how the worksheet overlaps on the bottom
2012-02-25 06:15:51 UTC <tgeeky_> luite: I don't know how to make it look good, but I think it would be awesome to consider the whitespace as having more than one column
2012-02-25 06:16:10 UTC <luite> mgsloan: the gradient/shadow is there to increase the contrast with the lest column, while keeping it light in general
2012-02-25 06:17:08 UTC <mgsloan> gotcha, it's certainly not a bad idea
2012-02-25 06:17:37 UTC <tgeeky_> luite: that said, you've got the touch
2012-02-25 06:17:38 UTC <luite> mgsloan: admittedly the left column used to be empty
2012-02-25 06:17:40 UTC <tgeeky_> nice work
2012-02-25 06:17:42 UTC <mgsloan> in interactive it definitely gives a "this is a piece of paper floating over less important UI" sort of feel
2012-02-25 06:18:00 UTC <luite> had to change it to a menu becasue of the cursor issues
2012-02-25 06:18:02 UTC <tgeeky_> mgsloan: maybe. I had typed out something that I wanted it to be the other way
2012-02-25 06:18:15 UTC <mgsloan> yeah, agreed.  This is gorgeous, it's hard to find stuff to criticize :P
2012-02-25 06:18:21 UTC <tgeeky_> that is, I would like for it to feel like you have a ruler sitting on the left hand side of the page, on top of a stack of documents
2012-02-25 06:18:54 UTC <tgeeky_> luite: actually, that might even work visually
2012-02-25 06:19:05 UTC <mgsloan> s/in interactive it/in interactive 7 it
2012-02-25 06:19:06 UTC <tgeeky_> it would certalin be sharp :o
2012-02-25 06:19:12 UTC <luite> tgeeky_: I'm kind of hesitant adding stuff to the right again (I've moved away everything from there in the last 6 months or so), because it tends to be a bit distracting when reading
2012-02-25 06:19:36 UTC <tgeeky_> luite: yeah, you're going to need to adopt a richer color scheme at some point, and use it
2012-02-25 06:19:48 UTC <tgeeky_> I would suggest solarize, only because it has *some* sort of forethought involved
2012-02-25 06:19:54 UTC <tgeeky_> solarized*
2012-02-25 06:20:23 UTC <tgeeky_> with the right color scheme, you can have a column layout like:  [dark]  [lighter]  [lightest]
2012-02-25 06:20:33 UTC <tgeeky_> or  [inverted] [normal] [lighter]
2012-02-25 06:20:44 UTC <tgeeky_> or, in your case, [popout box] [normal] [lighter]
2012-02-25 06:21:00 UTC <tgeeky_> but that really can be done later
2012-02-25 06:21:03 UTC <tgeeky_> right now it looks great
2012-02-25 06:21:13 UTC <luite> hmm dunno, I don't really like it. haven't put much thought into the editor color scheme btw, just use the 'elegant' theme from codemirror
2012-02-25 06:21:16 UTC <tgeeky_> what browsers are you testing
2012-02-25 06:22:06 UTC <luite> as for the site itself, I want to use some color (for some reason haskellers tend to find grayscale or b/w sites really pretty, "whoah really clean, not distracting" etc)
2012-02-25 06:22:08 UTC <mgsloan> bbl!
2012-02-25 06:22:43 UTC <luite> but since users can make graphics and stuff, I didn't want my color to clash with whjat they choose to generate
2012-02-25 06:23:06 UTC <luite> so I settled for a really neutral low saturation blue in various luminosities
2012-02-25 06:23:13 UTC <tgeeky_> luite: perhaps. My "holy grail" app is more of an in-the-browser IDE than your is, I think
2012-02-25 06:23:39 UTC <luite> right I still see it much more as a wiki, where the important thing is documents for users to read/play with
2012-02-25 06:24:12 UTC <tgeeky_> luite: a wiki document is just a kind of document you'll be interesting in editing :o
2012-02-25 06:24:13 UTC <luite> but that doesn't have to stand in the way of it being a good ide as well
2012-02-25 06:24:40 UTC <luite> dunno, I don't think everyone should be interested in that
2012-02-25 06:24:55 UTC <luite> after all, how often do you edit a wikipedia page?
2012-02-25 06:27:28 UTC <luite> oh and I promised myself not to use gradients and shadows for this site :(
2012-02-25 06:29:35 UTC <tgeeky_> luite: I want to mirror (to local) and then edit (or highlight) a wikipedia page ... all the time
2012-02-25 06:30:25 UTC <luite> hmm
2012-02-25 06:30:49 UTC <tgeeky_> of course, I want to (and do) these things to PDFs all the time
2012-02-25 06:31:04 UTC <luite> wikipedia pdfs?
2012-02-25 06:31:12 UTC <tgeeky_> ebook and arxiv PDFs
2012-02-25 06:37:12 UTC <luite> hm right
2012-02-25 06:37:30 UTC <luite> I don't annotate them very often since i don't really have good tools for that
2012-02-25 06:37:47 UTC <tgeeky_> i use a windows tool, pdf x-change, works wonderfully
2012-02-25 06:38:03 UTC <luite> hmm, i usually read ebooks on my tablet
2012-02-25 06:38:38 UTC <tgeeky_> i haven't one. Anyway, with haskell documents (like pearls) it's *especially* useful
2012-02-25 06:39:08 UTC <tgeeky_> highlight in diff colors: theorems, proof blocks, code blocks, type blocks, code I've entered and typechecked
2012-02-25 06:39:23 UTC <tgeeky_> and since I'm on a computer (typing it in) I'm not on an ipad
2012-02-25 06:39:37 UTC <luite> hehe
2012-02-25 06:39:53 UTC <luite> well I like it for reading
2012-02-25 06:39:55 UTC <tgeeky_> i suppose that I have several (4, until recenetly with 3)
2012-02-25 06:40:08 UTC <tgeeky_> monitors changes things a lot
2012-02-25 06:40:12 UTC <luite> especially in bed or similar
2012-02-25 06:40:18 UTC <tgeeky_> I'm missing a lot of typing, so it must be bedtime for me.
2012-02-25 06:40:26 UTC <tgeeky_> luite: yeah, there I'd love a tablet. alas, not now.
2012-02-25 06:40:36 UTC <luite> but the ipad's screen is a bit too low res for many books with thin fonts
2012-02-25 06:40:46 UTC <luite> err
2012-02-25 06:41:03 UTC <luite> without the ' I guess :p
2012-02-25 06:41:10 UTC <luite> or not?
2012-02-25 06:41:11 UTC <luite> arhg
2012-02-25 06:42:04 UTC <tgeeky_> iPad is a proper noun, so you can treat it like a person, like Luite's, so that's fine
2012-02-25 06:42:15 UTC <tgeeky_> (that's how I remember the rule)
2012-02-25 06:43:19 UTC <tgeeky_> hopefully I'm right, but then, what do those people who write books about such things know, anyway? Nothing -- I, say! . Nothing at-all!
2012-02-25 06:44:21 UTC <luite> I'll just type my book's on my ipad and it will autocorrect all error's ;p
2012-02-25 06:44:46 UTC <tgeeky_> lol
2012-02-25 06:44:57 UTC <tgeeky_> that would have been perfect if you had typed "Ill"
2012-02-25 06:45:33 UTC <luite> meh it's too late to be perfect
2012-02-25 06:45:55 UTC <tgeeky_> I agree with that.
2012-02-25 06:45:57 UTC <luite> hmm, 7:45am actually
2012-02-25 06:45:59 UTC <tgeeky_> It's also friday.
2012-02-25 06:46:06 UTC <tgeeky_> holy heck. You are a night owl.
2012-02-25 06:47:52 UTC <luite> usually I'm not this late, was doing boring coding
2012-02-25 06:48:03 UTC <luite> making an admin interface for wolfgang
2012-02-25 06:48:07 UTC <tgeeky_> ok, really going to sleep now though
2012-02-25 06:48:10 UTC <tgeeky_> night!
2012-02-25 07:13:49 UTC <tgeeky> luite: still here
2012-02-25 07:13:50 UTC <tgeeky> ?
2012-02-25 07:15:16 UTC <tgeeky> luite: wolframalpha.com has the circle fractal in the bkg of the frontpage right now.
2012-02-25 07:15:19 UTC <tgeeky> happysad.
2012-02-25 14:30:26 UTC <fryguybob> mgsloan: diagrams-ghci looks fun, I haven't had a working Cairo for a while now so I haven't played with anything lately in that direction.
2012-02-25 14:31:02 UTC <mgsloan> gotcha.  Due to the haskell package or the OS package?
2012-02-25 14:32:43 UTC <fryguybob> Both :D.  There was an issue with rendering text on Windows and I built from source and tried to track down the problem.  Basically the API that gtk2hs uses gets little love and is quite broken.
2012-02-25 14:33:38 UTC <fryguybob> On linux I have to work much harder then I should to get these things working due to missing dev packages and not being root.
2012-02-25 14:34:15 UTC <fryguybob> Once 7.4 is supported I'll probably work on geting it up and running.
2012-02-25 14:34:57 UTC <mgsloan> :/ strange, I was under the impression pango / cairo are used quite a lot, but I can see pango not working quite as well under windows
2012-02-25 14:35:30 UTC <fryguybob> mgsloan: It is fine if you use the right API.
2012-02-25 14:37:33 UTC <fryguybob> http://code.google.com/p/diagrams/issues/detail?id=36  is the bug report.
2012-02-25 17:09:08 UTC <vyom> so i have a couple of tasks to finish for hs-logo https://github.com/deepakjois/hs-logo/issues?milestone=3&sort=created&direction=desc&state=open
2012-02-25 17:09:26 UTC <vyom> after that i realy want to contribute to a native SVG backend
2012-02-25 17:10:23 UTC <vyom> what is the best way to get started? Dive deeper into diagrams-{core,lib,cairo} I presume
2012-02-25 17:10:57 UTC <vyom> how far along is the current diagrams-svg backend
2012-02-25 17:11:23 UTC <vyom> and how complex is the task of writing a backend
2012-02-25 17:17:02 UTC <luite> yes, write an svg backend!
2012-02-25 18:10:13 UTC <byorgey> vyom: yeah, take a look at diagrams-cairo and then dig into the parts of diagrams-core you need in order to understand it
2012-02-25 18:10:30 UTC <byorgey> vyom: the current diagrams-svg backend is not that far along.
2012-02-25 18:11:10 UTC <byorgey> vyom: the nice thing about writing a backend though is that it is fairly incremental.  i.e. you can get things working bit by bit and be able to render more and more diagrams
2012-02-25 18:11:26 UTC <byorgey> it's not just a monolothic thing that you have to write all upfront.
2012-02-25 18:11:39 UTC <byorgey> in fact, it's not even a monolithic thing.
2012-02-25 18:12:07 UTC <vyom> byorgey: when you say incremental.. what kind of units of work are you talking about?
2012-02-25 18:13:02 UTC <byorgey> vyom: I mean things like "get path rendering working", "get text working badly", "get text working a bit better", etc.
2012-02-25 18:13:43 UTC <byorgey> also with attributes. you can start off not supporting color or line width but still have diagrams render in B&W, color will just be ignored
2012-02-25 18:13:52 UTC <byorgey> then you can add color handling, etc.
2012-02-25 18:13:59 UTC <vyom> cool.. sounds good. I think i will use hs-logo to drive the things I need to implement ;)
2012-02-25 18:14:13 UTC <byorgey> yes, sound like a great idea =)
2012-02-25 18:14:38 UTC <byorgey> after I get diagrams-0.5 released I can work in the SVG backend too, we can work on it together
2012-02-25 18:15:29 UTC <vyom> cool.. let me dive into it a bit.. and given the diagrams-svg will have wider applicability.. i would much appreciate code reviews and such from anybody who has the time
2012-02-25 18:15:57 UTC <vyom> Github makes it pretty easy.. by providing the ability to comment on lines in a commit
2012-02-25 18:16:37 UTC <byorgey> yeah, diagrams-svg is currently in a darcs repository, but if you want to stick it on github I'm fine with that
2012-02-25 19:09:56 UTC <vyom> My first thought was whether it is possible to use an existing library that provides primitives to generate SVGs. Is there such a library? Based on some research I did.. there is no well know library for Haskell that provides a way to render SVGs
2012-02-25 19:10:41 UTC <vyom> there is this thing called Wumpus : http://hackage.haskell.org/packages/archive/wumpus-core/0.52.0/doc/html/src/Wumpus-Core-OutputSVG.html#writeSVG
2012-02-25 19:24:14 UTC <vyom> oh well.. nvm i am now looking at diagrams-discuss archives which has better context
2012-02-25 19:35:13 UTC <luite> it's XML so anything that generates XML could be useful, perhaps something like blaze-buidler for xml? does that exist?
2012-02-25 19:43:21 UTC <ClaudiusMaximus> it's XML with a load of embedded string languages like for paths etc
2012-02-25 19:44:10 UTC <ClaudiusMaximus> <path d="M 10,10 L 15,15 Z" /> (and don't get me started about the trial and error involved in getting the flags right for elliptical arcs)
2012-02-25 19:53:21 UTC <vyom> luite: diagrams-svg already uses blaze-builder so that is good
2012-02-25 19:54:15 UTC <vyom> ideally.. a combinator library for generating SVG should be separate from a diagrams-svg backend
2012-02-25 19:54:45 UTC <vyom> and diagrams-svg should consume such a library
2012-02-25 19:54:52 UTC <luite> hmm, dunno, that would mean you need some non-diagrams path data type?
2012-02-25 19:55:31 UTC <vyom> luite: hmm.. that is a good point an approach like that could lead to duplication
2012-02-25 19:56:06 UTC <vyom> but a general SVG combinator library would still be useful outside of diagrams
2012-02-25 19:56:26 UTC <luite> I'd probably start with some utilities to convert a diagrams path to an svg string one, and see if the code is significant enough
2012-02-25 19:57:29 UTC <vyom> luite: diagrams-svg is doing that already.. i dunno how far along it is.. I still need to understand more of the diagrams-core internals  which i am doing right now
2012-02-25 19:58:09 UTC <luite> vyom: what might be useful is somsething that outputs the XML Tree instead of some bytestring, so you can easily postprocess it. does diagrams-svg do that already?
2012-02-25 19:59:18 UTC <vyom> nope.. diagrams-svg just takes the diagrams type and uses blaze-builder to generate XML https://patch-tag.com/r/felipe/diagrams-svg/snapshot/current/content/pretty/src/Graphics/Rendering/SVG.hs
2012-02-25 20:00:59 UTC <luite> hm ok
2012-02-25 20:01:38 UTC <vyom> there is http://hackage.haskell.org/package/xmlhtml which uses blaze-builder
2012-02-25 20:01:44 UTC <luite> anyway can you please add stuff that lets you add javascript, id's, and onSomething attributes? :p
2012-02-25 20:02:26 UTC <vyom> luite: i am not sure what you mean.. I really have no idea at the moment what the SVG format contains.. except that it is some XML :)
2012-02-25 20:02:36 UTC <vyom> hopefully that will change soon once i start reading docs
2012-02-25 20:03:04 UTC <luite> vyom: you can add script tags, or <g onclick='callsomejavascript()' id='blah'>
2012-02-25 20:04:19 UTC <luite> I really really really really really really want that :p
2012-02-25 20:04:32 UTC <vyom> so it looks like you would like a diagrams-svg that generates a an XML document tree
2012-02-25 20:05:26 UTC <vyom> so that you can perform additional transformations like adding these onclick attributes
2012-02-25 20:05:49 UTC <vyom> and then eventually use somethign like blaze-builder to output the actual XML text
2012-02-25 20:08:01 UTC <fryguybob> luite: humm, I played with adding an id attribute to diagrams-svg.
2012-02-25 20:09:01 UTC <luite> that would be very useful, especially in combination with script tags
2012-02-25 20:09:06 UTC <vyom> again.. ideally.. i would build these in layers.. 1. An SVG combinator library that outputs an XML document 2. A backend that uses blaze-builder to output the XML as a bytestring, and 3. A diagrams-svg backend that consumes 1 and 2 and provides an API to get either the XML document or the bytestring representation
2012-02-25 20:09:15 UTC <luite> the onclick stuff is actually old-fashioned event handling, so it's not really necessary
2012-02-25 20:09:47 UTC <luite> as long as you can add unique id's and a script that can select those id's you can do everything
2012-02-25 20:09:59 UTC <luite> the script can set up the new-fashioned event handling
2012-02-25 20:10:55 UTC <luite> I'd like to re-add the tic-tac-toe exampel before relaunch, but now with diagrams instead of wumpus :)
2012-02-25 20:10:56 UTC <vyom> luite: I dunno, bu does diagrams support associating metadata with documents
2012-02-25 20:11:13 UTC <fryguybob> luite: The problem I encountered was not having an element at the where the attribute was applied.
2012-02-25 20:11:35 UTC <vyom> we can use that as a mechanism to generate IDs
2012-02-25 20:12:05 UTC <vyom> s/documents/diagrams/
2012-02-25 20:13:02 UTC <luite> fryguybob: hmm, but in general you will eventually get an element, right? otherwise you might insert extra <g> elements if you need something to hang your id on
2012-02-25 20:13:37 UTC <fryguybob> luite: Right, here is an example: http://www.cs.rochester.edu/u/ryates/temp/hslogo.hs
2012-02-25 20:13:40 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/hslogo.svg
2012-02-25 20:14:16 UTC <fryguybob> rangle and lambda both get emitted once because they are one path, but equals gets emitted twice.
2012-02-25 20:15:24 UTC <luite> right
2012-02-25 20:16:55 UTC <fryguybob> Adding that was just a few lines of code:  http://hpaste.org/64330
2012-02-25 20:17:32 UTC <luite> interesting highlighting
2012-02-25 20:18:32 UTC <tgeeky_> hm.
2012-02-25 20:18:32 UTC <fryguybob> So one solution would be to do two passes, once to gather up all the paths all tagged with id's, then at the end group things with the same id.  But that could change the layering order.
2012-02-25 20:18:36 UTC <tgeeky_> ACTION wonders if I should read all of this
2012-02-25 20:21:06 UTC <luite> hm, can't you limit the things that you can give an id to, and make it an error to have two things with the same id in a diagram?
2012-02-25 20:22:38 UTC <luite> I'd rather have something generate errors than have attributes modify the meaning of diagrams
2012-02-25 20:23:50 UTC <fryguybob> luite: Me too :D
2012-02-25 20:25:35 UTC <fryguybob> ACTION wonders if we could get by with name monoid's...
2012-02-25 20:26:33 UTC <vyom> fryguybob: from your code sample it looks like diagrams provides a way to attach metadata using AttributeClass typeclass
2012-02-25 20:26:35 UTC <vyom> is that right?
2012-02-25 20:26:40 UTC <fryguybob> You could in one pass ensure that all id's emitted are unique.
2012-02-25 20:26:42 UTC <tgeeky_> luite: lol @ ^^
2012-02-25 20:26:44 UTC <fryguybob> vyom: Yes
2012-02-25 20:26:54 UTC <luite> tgeeky_: why lol?
2012-02-25 20:27:02 UTC <tgeeky_> luite: monoid's
2012-02-25 20:27:12 UTC <tgeeky_> and our goofing around last night
2012-02-25 20:27:43 UTC <luite> haha right
2012-02-25 20:28:19 UTC <luite> haven't had enough sleep last 'night' :(
2012-02-25 20:29:07 UTC <fryguybob> luite: Would you be happy with "equals1" "equals2"?
2012-02-25 20:32:31 UTC <luite> fryguybob: if you add them with svgID "equals", then no, since the point is to be able to use getElementById('equals') in a script
2012-02-25 20:33:02 UTC <luite> otherwise you'd have to walk the whole tree to find your id's
2012-02-25 20:33:04 UTC <fryguybob> luite: getElementByIdPrefix(...)
2012-02-25 20:33:18 UTC <fryguybob> not that that is a thing.
2012-02-25 20:33:31 UTC <luite> hehe it has 2530 hits on google :)
2012-02-25 20:33:35 UTC <fryguybob> ha
2012-02-25 20:33:50 UTC <luite> fewer than 100000 hits on google means that it doesn't exist ;p
2012-02-25 20:35:21 UTC <luite> but the browsers internal representaiton is probanly optimized for fast getElementById lookups
2012-02-25 20:35:31 UTC <luite> browser's now
2012-02-25 20:35:36 UTC <luite> sorry tgeeky_
2012-02-25 20:36:01 UTC <fryguybob> I can't think of any other ways to get around the problem that do not involve changing the way rendering happens, but the issue that is in the way for this is also the cause of some of the output size explosion in diagrams-postscript.
2012-02-25 20:37:55 UTC <luite> hmm
2012-02-25 20:38:35 UTC <fryguybob> What we want ideally to know is when an attribute appears and when it disappears to match the grouping.  Maybe that is just keeping state of when you saw the attribute.  Humm.
2012-02-25 20:39:41 UTC <fryguybob> Well then we have the problem that we need to add the id after we have seen the node in question, but that can be dealt with in one pass.
2012-02-25 20:40:53 UTC <fryguybob> ACTION goes back to grading java...
2012-02-25 20:41:03 UTC <luite> that's surely more fun that this :p
2012-02-25 20:41:55 UTC <fryguybob> it appears only four students out of 65 or so followed the directions :D.
2012-02-25 20:42:05 UTC <luite> not pad
2012-02-25 20:42:07 UTC <luite> err, bad
2012-02-25 20:43:06 UTC <luite> is it a general java programming course or something like data structures?
2012-02-25 20:43:15 UTC <fryguybob> Data structures
2012-02-25 20:44:05 UTC <luite> oh I remember a red/black tree assignment there, where 90% of the solutions worked only for the test cases that were in the assignment :)
2012-02-25 20:44:15 UTC <fryguybob> haha
2012-02-25 20:44:44 UTC <fryguybob> Probably a good thing no explicit test cases were given here then.
2012-02-25 20:45:21 UTC <luite> another university in the netherlands has a quickcheck-like system, that automatically tests solutions when you submit them
2012-02-25 20:48:31 UTC <fryguybob> I'm kind of building that as I go.  But only four students wrote their code against an interface correctly (it appears).
2012-02-25 20:49:15 UTC <luite> do they have to do it in java?
2012-02-25 20:49:58 UTC <fryguybob> yeah
2012-02-25 20:51:28 UTC <luite> hmm, do JVMs still have a sandbox, like they had for applets in browsers?
2012-02-25 20:52:41 UTC <vyom> byorgey: do you have any recommendations for resources to learn more about the core math around the diagrams.. things like VectorSpace, AffineSpace and AdditiveGroup
2012-02-25 20:53:04 UTC <vyom> at some point I would really like to grok them
2012-02-25 20:53:29 UTC <luite> linear algebra textbooks probably
2012-02-25 20:53:48 UTC <vyom> luite: got a recommendation :) ?
2012-02-25 20:54:32 UTC <fryguybob> There are some good things about Strang's book.
2012-02-25 20:54:55 UTC <fryguybob> Lectures on http://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/video-lectures/
2012-02-25 20:55:25 UTC <luite> oh that looks ok
2012-02-25 20:55:40 UTC <luite> I learned it from handouts/notes, so don't have a proper textbook :)
2012-02-25 20:56:37 UTC <fryguybob> My wife teaches out of Anton: http://www.wiley.com/WileyCDA/WileyTitle/productCd-EHEP000551.html
2012-02-25 20:57:41 UTC <luite> vyom: other things like monoid an group are more abstract algebra, you won't need a textbook to understand them
2012-02-25 20:58:26 UTC <byorgey> fryguybob: I am very interested in fixing the attributes issue the "right" way, i.e. changing how rendering happens
2012-02-25 20:58:30 UTC <fryguybob> I learned from http://www.laylinalgebra.com/ which, I'm not sure I would recommend, but the author is really nice.
2012-02-25 20:58:33 UTC <byorgey> so you don't just get a list of primitives with attributes
2012-02-25 20:58:40 UTC <fryguybob> byorgey: Yeah
2012-02-25 20:58:46 UTC <fryguybob> byorgey: Me too.
2012-02-25 20:59:26 UTC <luite> hmm that name rings a bell
2012-02-25 20:59:51 UTC <fryguybob> seems like his site has a lot of broken links.
2012-02-25 21:00:24 UTC <byorgey> so I think after the 0.5 release I am going to dive into the internals of UDTree and the rendering interface again.
2012-02-25 21:00:32 UTC <byorgey> can't say I'm excited about that but I want to get it right =)
2012-02-25 21:00:37 UTC <luite> hehe
2012-02-25 21:01:19 UTC <luite> great, just remember that I won't release wolfgang until there's an svg backend that gets it right ;p
2012-02-25 21:01:31 UTC <byorgey> blackmail!!
2012-02-25 21:02:02 UTC <fryguybob> luite: Give us a test case as a target and we will be ready by tonight ;P
2012-02-25 21:02:11 UTC <luite> hehe
2012-02-25 21:02:31 UTC <luite> it will take at least a day to install it on the server :(
2012-02-25 21:03:35 UTC <luite> but I'm getting closer, the frontpage will hopefully be done later today
2012-02-25 21:07:00 UTC <luite> hm I wonder why the full-text search engine doesn't update :(
2012-02-25 21:14:54 UTC <vyom> the number of language extensions in diagrams-core is staggering :).. it is actually pretty daunting to understand everything in one go.. so for now i am just doing an initial pass glossing over a lot of stuff
2012-02-25 21:16:04 UTC <byorgey> vyom: well, that's probably the best way to learn things in general =)
2012-02-25 21:16:24 UTC <byorgey> vyom: of course, feel free to ask me questions
2012-02-25 21:16:44 UTC <byorgey> vyom: you also probably don't need to understand everything in diagrams-core in order to write a backend
2012-02-25 21:17:00 UTC <byorgey> at least, you can certainly get started without understanding everything
2012-02-25 21:17:23 UTC <byorgey> so an initial skim just to get an idea of what is there is probably good
2012-02-25 21:17:33 UTC <vyom> byorgey: yes, i get that.. it would be great to undestand all of it someday though
2012-02-25 21:17:41 UTC <byorgey> sure =)
2012-02-25 21:17:57 UTC <byorgey> I'd like to understand all of it someday too ;)
2012-02-25 21:17:59 UTC <vyom> i am just noting that the number of esoteric stuff is still a lot more than going through some other codebases iave been through, like Pandoc, Hakyll or blaze-html
2012-02-25 21:18:26 UTC <vyom> :)
2012-02-25 21:18:34 UTC <fryguybob> ACTION usually learns by fixing bugs.
2012-02-25 21:19:23 UTC <vyom> fryguybob: i usually learn by building on top of the stuff i am trying to learn.. like I am attempting to do now
2012-02-25 21:21:49 UTC <fryguybob> vyom: That usually works well.  It can be a problem when GHC is so helpful though, follow the types and it writes itself :D
2012-02-25 21:23:08 UTC <luite> ACTION usually learns by shouting blatantly wrong things on reddit and getting corrected ;)
2012-02-25 21:24:17 UTC <vyom> lol
2012-02-25 21:24:30 UTC <mekeor> hehe :D
2012-02-25 21:29:22 UTC <luite> whoah 12 github followers! hmm, who is this 'byorgey' guy.....
2012-02-25 21:29:36 UTC <byorgey> dunno, some weirdo probably
2012-02-25 21:31:10 UTC <luite> hmm, should I report him for stalking me?
2012-02-25 21:31:23 UTC <vyom> byorgey: I dont quite understand the purpose of the IsName typeclass
2012-02-25 21:31:28 UTC <vyom> what do you use it for?
2012-02-25 21:32:12 UTC <byorgey> vyom: you don't understand the purpose of names, or you don't understand the purpose of the type class?  (or both?)
2012-02-25 21:32:36 UTC <tgeeky_> ^^^^: that's the purpose of names
2012-02-25 21:32:38 UTC <vyom> i dont understand the purpose of names
2012-02-25 21:33:46 UTC <vyom> or rather.. what are they used for in diagrams
2012-02-25 21:34:38 UTC <vyom> let me put it differently..
2012-02-25 21:34:52 UTC <byorgey> vyom: for the purpose of names see  http://projects.haskell.org/diagrams/manual/diagrams-manual.html#named-subdiagrams
2012-02-25 21:34:54 UTC <vyom> i see that Bools and Ints are instances of IsName typeclass
2012-02-25 21:35:06 UTC <vyom> how does that help?
2012-02-25 21:35:18 UTC <vyom> ah ok
2012-02-25 21:35:20 UTC <byorgey> vyom: it means you can use Bools or Ints to label subdiagrams.
2012-02-25 21:36:12 UTC <byorgey> because of the IsName class you can use whatever type you want to label things.  Sometimes String makes the most sense but often something else makes more sense.
2012-02-25 21:36:32 UTC <vyom> i now remember reading this in the manual long itme ago.. will read it again
2012-02-25 21:36:48 UTC <byorgey> that's a bit out of date but the ideas are still the same.
2012-02-25 21:36:59 UTC <byorgey> it's updated in darcs but getting the user manual to build is finicky.
2012-02-25 21:38:15 UTC <tgeeky_> byorgey: did you see these rough benches: http://www.reddit.com/r/haskell/comments/q5ghi/adventures_in_parsec_making_it_go_faster_with/
2012-02-25 21:38:40 UTC <tgeeky_> is that the kind of speedup you'd expect there?
2012-02-25 21:39:08 UTC <luite> yeah
2012-02-25 21:39:33 UTC <tgeeky_> but that's a strict bytestring, right?
2012-02-25 21:39:54 UTC <byorgey> i.e. attoparsec gives you about an order of magnitude over parsec?  sure, sounds reasonable
2012-02-25 21:39:57 UTC <luite> yes, attoparsec does its own chucking
2012-02-25 21:40:04 UTC <luite> chunking
2012-02-25 21:40:17 UTC <luite> you just keep feeding it strict bytestrings
2012-02-25 21:40:35 UTC <tgeeky_> ACTION wonders how this would go with trifecta
2012-02-25 21:47:57 UTC <vyom> http://ekmett.github.com/trifecta/ doesnt seem to exist
2012-02-25 21:49:28 UTC <luite> https://github.com/ekmett/trifecta/ does
2012-02-25 21:51:21 UTC <vyom> thats just the source.. is there a site i can read more about it :)
2012-02-25 21:51:43 UTC <byorgey> vyom: nope =)
2012-02-25 21:51:52 UTC <byorgey> ekmett's projects are notoriously undocumented
2012-02-25 21:52:11 UTC <fryguybob> and notoriously interesting
2012-02-25 21:52:13 UTC <byorgey> because he can barely keep up just turning the torrent of good ideas coming out of his brain into code
2012-02-26 00:13:16 UTC <byorgey> fryguybob: oops, did I send you a patch with unv2 everywhere instead of unr2?
2012-02-26 00:13:44 UTC <byorgey> I did, didn't I =P
2012-02-26 00:15:34 UTC <byorgey> sorry. I had unv2 at first and then decided it was inconsistent to have  P2/p2/unp2  but R2/v2/unv2.  So I went back through and changed it but I guess I missed diagrams-postscript.
2012-02-26 00:15:47 UTC <byorgey> anyway, glad to see you figured it out anyway =)
2012-02-26 00:28:29 UTC <fryguybob> byorgey: No problem
2012-02-26 00:56:32 UTC <vyom> byorgey: what is an elegant way to transform a function like `renderSeg (Linear (x,0)) = chr 'h' <> double x` to cope with the changes to the TwoD types
2012-02-26 00:57:15 UTC <byorgey> vyom: renderSeg (Linear (unr2 -> (x,0))) = chr 'h' ...
2012-02-26 00:57:25 UTC <byorgey> vyom: and you have to enable the  ViewPatterns extension
2012-02-26 00:57:39 UTC <vyom> yet another extension ;)
2012-02-26 00:57:43 UTC <byorgey> of course =)
2012-02-26 00:57:47 UTC <vyom> sounds good!
2012-02-26 00:57:50 UTC <vyom> let me try that
2012-02-26 00:58:02 UTC <byorgey> ViewPatterns is fairly benign as extensions go.
2012-02-26 00:58:33 UTC <byorgey> basically you can now have patterns of the form  (f -> p)  where f is a function and p is a pattern
2012-02-26 00:59:01 UTC <byorgey> to match the pattern (f -> p) against a value v, you match the pattern p against the value (f v)
2012-02-26 00:59:16 UTC <byorgey> i.e. (f -> p) means 'run function f and then match the output against p'
2012-02-26 00:59:53 UTC <vyom> yup makes sense
2012-02-26 01:05:54 UTC <vyom> how do I get something like (x,y) from a Point R2 ?
2012-02-26 01:07:29 UTC <vyom> unpack?
2012-02-26 01:09:17 UTC <fryguybob> Oh, vyom my wife reminded me of another book for linear algebra: http://linear.axler.net/
2012-02-26 01:09:44 UTC <fryguybob> "Altogether, the text is a didactic masterpiece." is an accurate review.
2012-02-26 01:09:49 UTC <vyom> fryguybob: thanks.. bookmarked :)
2012-02-26 01:11:24 UTC <byorgey> vyom: unp2
2012-02-26 01:11:31 UTC <vyom> byorgey: ya just saw that :)
2012-02-26 01:11:35 UTC <byorgey> ok =)
2012-02-26 01:12:24 UTC <luite> has something changed in the handling of forms recently? I'm getting type errors inserting the widget of a form (with runFormPost), using whamlet
2012-02-26 01:13:03 UTC <byorgey> no idea
2012-02-26 01:13:14 UTC <luite> yeah i meant to ask #yesod sorry :)
2012-02-26 01:14:20 UTC <byorgey> hehe, was wondering why you asked in here =)
2012-02-26 01:18:00 UTC <vyom> what module re-exports (<>) I think I might be running into some compile error. The compiler is complaining "No instance for (Semigroup Render) arising from a use of `<>'"
2012-02-26 01:18:52 UTC <luite> there are different <>'s now
2012-02-26 01:18:59 UTC <luite> minus the '
2012-02-26 01:19:10 UTC <luite> Data.Monoid exports it in ghc 7.4
2012-02-26 01:19:28 UTC <vyom> so i believe i need the Data.Monoid one
2012-02-26 01:19:28 UTC <luite> but the 'old' one was for the semigroup package
2012-02-26 01:19:41 UTC <vyom> and i need to hide the semigroup one
2012-02-26 01:20:55 UTC <vyom> ok i hid the <> exported by Diagrams.Prelude
2012-02-26 01:21:02 UTC <vyom> and it doesnt complain
2012-02-26 01:21:45 UTC <byorgey> yeah, I haven't quite figured out what the 'right' thing to do about that is
2012-02-26 01:22:02 UTC <byorgey> I should talk to edwardk and see what he is going to do with semigroups
2012-02-26 01:33:53 UTC <vyom> byorgey: it looks like the adjustDia2D call has changed its signature since the time diagrams-svg was implemented..
2012-02-26 01:34:04 UTC <byorgey> vyom: that's quite possible
2012-02-26 01:34:50 UTC <vyom> not sure what an appropriate replacement could be : adjustDia c opts d = adjustDia2D size c opts d
2012-02-26 01:36:21 UTC <vyom> i need something for the argument setSize
2012-02-26 01:36:27 UTC <byorgey> vyom: I think after the 'size' argument you need to pass it a function that knows how to replace the size specification in opts
2012-02-26 01:37:02 UTC <byorgey> vyom: the point is that the size may be incompletely specified (e.g. just a width) and adjustDia2D will not only do the adjustments but decide what the height should be
2012-02-26 01:37:10 UTC <byorgey> and we want to remember that information
2012-02-26 01:37:13 UTC <vyom> ok
2012-02-26 01:37:32 UTC <byorgey> vyom: you could take a look at how diagrams-cairo or diagrams-postscript do it
2012-02-26 01:37:44 UTC <vyom> byorgey: ok will do
2012-02-26 01:37:55 UTC <fryguybob> vyom: then follow the types :D
2012-02-26 01:37:56 UTC <byorgey> as I recall diagrams-cairo has a bit of extra complication due to the fact that some modes cause the sizing stuff to be bypassed
2012-02-26 01:38:18 UTC <byorgey> yeah, if you just follow the types there's only so many things you can do =)
2012-02-26 01:39:36 UTC <byorgey> like  setSize sz o = o { size = sz }  probably
2012-02-26 01:39:44 UTC <vyom> ya i guess.. i need a function of type.. a -> b -> b which ignores a and returns b
2012-02-26 01:39:58 UTC <vyom> as a placeholder for now that is
2012-02-26 01:40:15 UTC <byorgey> no, use what I wrote above =)
2012-02-26 01:40:35 UTC <vyom> ok
2012-02-26 01:40:38 UTC <vyom> :)
2012-02-26 01:44:50 UTC <byorgey> anyone have any fun example diagrams they want me to stick in the web gallery?
2012-02-26 01:46:44 UTC <vyom> byorgey: i only have logo examples :)
2012-02-26 01:47:23 UTC <byorgey> =)
2012-02-26 01:48:56 UTC <fryguybob> ACTION checks his pockets.
2012-02-26 01:49:18 UTC <vyom> another question.. I am trying to simplify the diagrams-svg backend to just render paths for now.. just so that I fully understand it..
2012-02-26 01:49:37 UTC <vyom> do I need to provide an implementation of withStyle
2012-02-26 01:50:00 UTC <vyom> or is there some magic happening by which it wont get called if I dont have an implementation for it :)
2012-02-26 01:50:38 UTC <byorgey> vyom: yes, you have to provide an implementation, but the implementation can be  withStyle _ _ _ r = r
2012-02-26 01:57:33 UTC <fryguybob> byorgey: I do not have any particularly fun diagrams at this time.
2012-02-26 01:58:06 UTC <byorgey> awww
2012-02-26 01:59:41 UTC <fryguybob> unless you want my sad diagram
2012-02-26 02:00:01 UTC <fryguybob> There is also http://cs.rochester.edu/u/ryates/temp/circuits.pdf
2012-02-26 02:00:09 UTC <byorgey> no sad diagrams in the happy example gallery!
2012-02-26 02:00:14 UTC <fryguybob> Which is more functional then interesting
2012-02-26 02:00:35 UTC <byorgey> yeah
2012-02-26 02:01:14 UTC <fryguybob> And there is http://cs.rochester.edu/u/ryates/temp/man.pdf
2012-02-26 02:01:58 UTC <byorgey> oh, that one's fun
2012-02-26 02:03:12 UTC <fryguybob> Just don't look at the size of the eps file :D
2012-02-26 02:03:23 UTC <luite> needs more color :)
2012-02-26 02:03:45 UTC <fryguybob> http://cs.rochester.edu/u/ryates/temp/step2.pdf -- built with diagrams technology :D
2012-02-26 02:04:06 UTC <fryguybob> Oh, I had that homework from last semester...
2012-02-26 02:04:26 UTC <vyom> ok does anybody have any examples of using diagrams-svg ? I was able to compile... now need to try it out
2012-02-26 02:05:08 UTC <vyom> basically i need to do something with the output of the renderDia function.. which I believe is a Builder type of some kind
2012-02-26 02:05:22 UTC <vyom> i should be able to write to a file or something
2012-02-26 02:05:34 UTC <fryguybob> vyom: yeah the one I posted earlier if you remove the id stuff.
2012-02-26 02:05:57 UTC <fryguybob>  http://www.cs.rochester.edu/u/ryates/temp/hslogo.hs
2012-02-26 02:06:18 UTC <byorgey> fryguybob: yeah, I already have that one
2012-02-26 02:06:30 UTC <fryguybob> That was for vyom
2012-02-26 02:06:35 UTC <byorgey> oh! ok =)
2012-02-26 02:06:59 UTC <vyom> i dont see the Diagrams.Backend.SVG.CmdLine anywhere in the code i am looking at
2012-02-26 02:07:08 UTC <vyom> https://patch-tag.com/r/felipe/diagrams-svg/
2012-02-26 02:07:14 UTC <fryguybob> Humm
2012-02-26 02:07:44 UTC <vyom> can you paste the code somewhere.. i can just adapt it for my purpose here
2012-02-26 02:08:38 UTC <byorgey> hmm, we really ought to abstract out that CmdLine stuff into its own package that can be shared across backends somehow
2012-02-26 02:08:53 UTC <fryguybob> byorgey: yeah
2012-02-26 02:09:03 UTC <fryguybob> byorgey: they are all identical.
2012-02-26 02:09:15 UTC <byorgey> indeed.
2012-02-26 02:09:33 UTC <byorgey> "gee, we have six identical copies of this code, you think maybe we should abstract it out?"
2012-02-26 02:11:06 UTC <fryguybob> strange, how do I have a newer version then what is on patch-tag?
2012-02-26 02:11:06 UTC <luite> better write an emacs script to make it easier to insert that code in the future
2012-02-26 02:11:30 UTC <vyom> :)
2012-02-26 02:11:43 UTC <vyom> the code wrote itself! :)
2012-02-26 02:12:38 UTC <fryguybob> Ah, it seems I wrote it.  Darcs was giving me mixed signals.
2012-02-26 02:13:19 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/CmdLine.hs
2012-02-26 02:14:08 UTC <byorgey> fryguybob: if you send me a patch I can push it to patch-tag
2012-02-26 02:15:11 UTC <vyom> thanks
2012-02-26 02:15:32 UTC <fryguybob> byorgey: Should I make it build first?
2012-02-26 02:16:01 UTC <byorgey> fryguybob: nah, don't bother
2012-02-26 02:16:09 UTC <byorgey> I doubt the version on patch-tag builds right now either.
2012-02-26 02:16:16 UTC <byorgey> I mean, unless you really want to.
2012-02-26 02:16:41 UTC <byorgey> but getting it to compile is vyom's job ;)
2012-02-26 02:17:06 UTC <fryguybob> ACTION builds a patch.
2012-02-26 02:18:38 UTC <vyom> yes.. the version in patch-tag does not build..
2012-02-26 02:18:54 UTC <vyom> i have changes in my workspace that make it build.. but i removed a lot of code.. just to move forward :)
2012-02-26 02:19:39 UTC <vyom> should be able to bring those changes back easily.. once I have a handle on what is going on exactly
2012-02-26 02:20:32 UTC <byorgey> yep, sounds like a good plan
2012-02-26 02:23:21 UTC <fryguybob> oops
2012-02-26 02:23:52 UTC <fryguybob> I didn't think darcs send was going to actually send an email.
2012-02-26 02:25:32 UTC <byorgey> oh, it got sent to felipe?
2012-02-26 02:25:36 UTC <fryguybob> yeah
2012-02-26 02:25:48 UTC <byorgey> fryguybob: darcs send -O  sends to a file with an auto-generated name
2012-02-26 02:25:52 UTC <fryguybob> I did it again --to you.
2012-02-26 02:25:56 UTC <byorgey> ok.
2012-02-26 02:26:15 UTC <byorgey> fryguybob: to my gmail or cis.upenn address?
2012-02-26 02:26:19 UTC <fryguybob> I'm used to darcs on windows where it doesn't even try to email and defaults to -O
2012-02-26 02:26:25 UTC <byorgey> hehe, I see
2012-02-26 02:26:27 UTC <fryguybob> seas
2012-02-26 02:26:30 UTC <byorgey> ok
2012-02-26 02:27:56 UTC <byorgey> hmm, Mandelbrot takes quite a while to build!
2012-02-26 02:28:04 UTC <vyom> http://dl.dropbox.com/u/953/logo/logo.svg
2012-02-26 02:28:11 UTC <fryguybob> yeah, it is a stress test.
2012-02-26 02:28:27 UTC <vyom> that snowflake was uilt using hs-logo with diagrams-svg :)
2012-02-26 02:29:01 UTC <byorgey> vyom: nice =)
2012-02-26 02:29:11 UTC <byorgey> \o/
2012-02-26 02:29:29 UTC <vyom> well.. that was good.. now i have started to understand the pieces..
2012-02-26 02:29:54 UTC <vyom> so what do you think of building an SVG combinator API like blaze-html
2012-02-26 02:29:59 UTC <vyom> something like blaze-svg
2012-02-26 02:30:16 UTC <vyom> which we can the use with diagrams-svg
2012-02-26 02:30:41 UTC <byorgey> sounds like a good idea
2012-02-26 02:30:48 UTC <vyom> i think that would make it a reusable library that anybody could use to build SVG documents
2012-02-26 02:31:00 UTC <byorgey> although it means you are going to have to support all of SVG, not just the parts needed by diagrams-svg
2012-02-26 02:31:19 UTC <byorgey> but it's probably the "right" thing to do!
2012-02-26 02:31:28 UTC <vyom> erm.. well i dont really mind that.. ofcourse it will be incremental
2012-02-26 02:31:39 UTC <byorgey> and of course you can just start with the parts... right =)
2012-02-26 02:31:41 UTC <fryguybob> Another possibly interesting diagram: http://www.cs.rochester.edu/u/ryates/temp/at.pdf
2012-02-26 02:31:55 UTC <ClaudiusMaximus> bonus points if it supports writing xhtml with inline embedded svg using xml namespaces :)
2012-02-26 02:31:57 UTC <luite> cool, it has color
2012-02-26 02:32:02 UTC <fryguybob> and http://www.cs.rochester.edu/u/ryates/temp/fullfalse.pdf http://www.cs.rochester.edu/u/ryates/temp/fulltrue.pdf
2012-02-26 02:32:03 UTC <vyom> and if i create a separate blaze-svg package.. i am guessing people would be willing to contribute to it independent of their interest in diagrams
2012-02-26 02:32:14 UTC <luite> fryguybob: that was some SAT reduction thing, right?
2012-02-26 02:32:42 UTC <fryguybob> luite: yeah
2012-02-26 02:33:03 UTC <byorgey> fryguybob: ah, yeah, those are fun, do you have a link to the source?
2012-02-26 02:33:15 UTC <byorgey> vyom: yes, I think you're right
2012-02-26 02:33:19 UTC <byorgey> sounds great
2012-02-26 02:33:44 UTC <byorgey> < fryguybob> byorgey: I do not have any particularly fun diagrams at this time.   <--- liar
2012-02-26 02:33:59 UTC <luite> hehe
2012-02-26 02:33:59 UTC <fryguybob> All I could think of was my sad diagram
2012-02-26 02:34:45 UTC <byorgey> in order to fly, you need to think of a happy diagram.
2012-02-26 02:35:22 UTC <vyom> cool then.. now I am going to take a break by watching a documentary on Ayrton Senna documentary..
2012-02-26 02:35:27 UTC <vyom> more hacking later :)
2012-02-26 02:35:30 UTC <vyom> thanks all!
2012-02-26 02:35:34 UTC <byorgey> cool, enjoy
2012-02-26 02:36:21 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/Homework9.hs
2012-02-26 02:48:27 UTC <byorgey> vyom: I pushed fryguybob's changes to diagrams-svg
2012-02-26 02:55:30 UTC <byorgey> latest diagrams gallery: http://www.cis.upenn.edu/~byorgey/hosted/diagrams-gallery.png
2012-02-26 02:55:53 UTC <byorgey> (just a screenshot)
2012-02-26 02:56:12 UTC <byorgey> done working on the gallery now, going to move on to other pre-release tasks =)
2012-02-26 03:02:53 UTC <luite> wery cool
2012-02-26 03:03:02 UTC <luite> hadn't seen the bottom center one yet
2012-02-26 03:04:20 UTC <byorgey> luite: http://mathlesstraveled.com/2011/04/14/triangular-number-equations-via-pictures-solutions/
2012-02-26 03:07:35 UTC <luite> ah very pretty :)
2012-02-26 03:14:27 UTC <luite> haven't read your blog for some time :(
2012-02-26 03:15:34 UTC <ClaudiusMaximus> i rediscovered a diagram i made and had forgotten about (in svg + js) http://claudiusmaximus.goto10.org/g/mandelbrot/exponential_strip.svg
2012-02-26 03:16:00 UTC <byorgey> luite: oh, you should! I'm just getting to the good stuff!  ;)
2012-02-26 03:16:11 UTC <luite> ClaudiusMaximus: ah i remember that one
2012-02-26 03:16:15 UTC <byorgey> ClaudiusMaximus: ah, cool, I remember that one too
2012-02-26 03:16:28 UTC <luite> byorgey: hehe looks like there's already a lot of good stuff there
2012-02-26 03:16:32 UTC <ClaudiusMaximus> haha, my memory must suck
2012-02-26 03:17:23 UTC <byorgey> luite: I'm just in the middle of a series of posts involving lots of pretty pictures (made with diagrams, of course =)
2012-02-26 03:18:35 UTC <luite> yeah I saw that you already had almost lured some readers into learning haskell for diagrams :)
2012-02-26 03:19:35 UTC <byorgey> luite: once I can just point them at an interactive tutorial they won't stand a chance!
2012-02-26 03:21:21 UTC <luite> you need a native svg backend for that ;p
2012-02-26 03:22:13 UTC <byorgey> hehehe
2012-02-26 03:23:19 UTC <luite> you're teaching a haskell class, right? are you using (or going to use) some of those subjects as exercises or assignments?
2012-02-26 03:24:25 UTC <byorgey> luite: what subjects?
2012-02-26 03:24:34 UTC <byorgey> yes, I am teaching a haskell class
2012-02-26 03:24:47 UTC <byorgey> luite: you mean subjects from my math blog?
2012-02-26 03:25:15 UTC <luite> yeah, for example the decadic numbers
2012-02-26 03:26:18 UTC <ClaudiusMaximus> byorgey: wow, i never seen your blog before - my reading list just exploded
2012-02-26 03:26:24 UTC <byorgey> hehe
2012-02-26 03:26:34 UTC <byorgey> enjoy! =)
2012-02-26 03:27:17 UTC <byorgey> luite: well, I did just give them an assignment involving doing generating function arithmetic on streams of Integers, and using it to compute the Fibonacci numbers =)
2012-02-26 03:27:39 UTC <byorgey> but that part was extra credit
2012-02-26 03:28:01 UTC <luite> I'm only writing wolfgang because i wanted to start such a blog, but then had nothing to say, and needed an excuse for not (yet) writing blog posts
2012-02-26 03:28:02 UTC <byorgey> in general I don't want to require any particular math background to do the assignments, since that just gets in the way of people learning Haskell
2012-02-26 03:28:34 UTC <byorgey> wow, well, in that case I'm very glad you had nothing to say =)
2012-02-26 03:29:09 UTC <luite> hehe it was meant as a joke, but it actually did start this way...
2012-02-26 03:29:47 UTC <luite> i started modding wordpress to allow easy inclusion of haskell evaluation results
2012-02-26 03:29:54 UTC <byorgey> ah, hehe, I see
2012-02-26 03:30:12 UTC <luite> but modding wordpress makes you sad
2012-02-26 03:30:15 UTC <ClaudiusMaximus> if i start a new blog the first post will be (
2012-02-26 03:30:28 UTC <byorgey> luite: well, you may as well know that I started writing diagrams in order to generate pictures for my blog =)
2012-02-26 03:30:53 UTC <luite> byorgey: yeah but at least you're blogging
2012-02-26 03:30:54 UTC <ClaudiusMaximus> think my first blog i just dived straight in without preamble as it was sad seeing so many blogs with excited first post and petering out after 3
2012-02-26 03:31:45 UTC <byorgey> luite: there was actually a certain post I had promised to write, and I delayed writing it for a year and a half because diagrams wasn't yet good enough to make the picture I wanted to make
2012-02-26 03:31:53 UTC <byorgey> eventually I just wrote it without the picture =P
2012-02-26 03:32:10 UTC <luite> aw :(
2012-02-26 03:32:22 UTC <byorgey> I don't even remember what it was anymore, I bet diagrams could make it now though =)
2012-02-26 03:32:32 UTC <luite> do you keep a list of subjects you're going to write about?
2012-02-26 03:32:40 UTC <byorgey> yes
2012-02-26 03:32:48 UTC <byorgey> it's quite long
2012-02-26 03:34:14 UTC <luite> i started a list, i think i lost it
2012-02-26 03:34:56 UTC <byorgey> heh, oops
2012-02-26 03:57:11 UTC <ClaudiusMaximus> hmm, something annoying about your blog and the magic "new stuff appears when you scroll down" thing - if you click on something and click back then it seems to take an age reloading all the goodies
2012-02-26 03:57:19 UTC <ClaudiusMaximus> byorgey: ^^
2012-02-26 03:58:30 UTC <byorgey> oh, I didn't know it did the "new stuff appears when you scroll down" thing
2012-02-26 03:58:33 UTC <byorgey> that must be new
2012-02-26 03:58:55 UTC <byorgey> ClaudiusMaximus: it's just hosted on wordpress.com so I don't have a lot of control over it
2012-02-26 04:00:56 UTC <luite> better spend two years writing better blog software ;)
2012-02-26 04:01:54 UTC <byorgey> hah =)
2012-02-26 04:03:07 UTC <luite> switching to mathjax would make it look a lot better though
2012-02-26 04:04:10 UTC <byorgey> agreed
2012-02-26 04:04:21 UTC <luite> but it's a bit slow for large pages, people used to complain about it on mathoverflow, dunno if they still do
2012-02-26 04:05:32 UTC <byorgey> there is a mathjax plugin for wordpress, but it's not supported on wordpress.com
2012-02-26 04:05:55 UTC <byorgey> essentially they don't want to allow any javascript for security
2012-02-26 04:06:01 UTC <byorgey> or something like that
2012-02-26 04:06:02 UTC <luite> hm, right
2012-02-26 04:06:02 UTC <tgeeky_> it's way, way, too slow for even reasonably sized documents
2012-02-26 04:06:58 UTC <ClaudiusMaximus> ah, yeah i had that "security" on my old old blogs (2002-2005), couldn't embed videos either
2012-02-26 04:07:31 UTC <tgeeky_> is wordpress.com a hosting site?
2012-02-26 04:08:05 UTC <byorgey> tgeeky_: yeah, free hosting for wordpress blogs
2012-02-26 04:08:28 UTC <byorgey> at least wordpress.com does allow embedding videos
2012-02-26 04:08:51 UTC <tgeeky_> yeah, they would get killed if they didn't
2012-02-26 04:08:57 UTC <byorgey> it's pretty nice actually.  I just try not to think about the code it is all running on top of.
2012-02-26 04:08:59 UTC <tgeeky_> but god forbid someone communicates a little mathematics on their watch
2012-02-26 04:09:29 UTC <tgeeky_> as long as lady gaga videos can propogate unimpeded then everyone will be happy, amirite
2012-02-26 04:09:41 UTC <byorgey> well, at least they have basic LaTeX support.
2012-02-26 04:09:51 UTC <byorgey> not as pretty as it could be, but it works OK.
2012-02-26 04:09:57 UTC <tgeeky_> i've never got around to learning latex
2012-02-26 04:10:08 UTC <tgeeky_> I like to think that latex has just taken over the lambda namespace
2012-02-26 04:10:20 UTC <tgeeky_> so that all the \thingslikethis are just function calls to the universe that Knuth occupies
2012-02-26 04:10:47 UTC <tgeeky_> I did take a peek at Knuth's book on 'literate programming' and was shocked to learn that it's mostly written by other people!
2012-02-26 04:13:01 UTC <byorgey> ugh, back to figuring out how to generate the right magic Haddock incantations to build integrated API docs for all the diagrams packages, so they can be included on the website
2012-02-26 04:13:10 UTC <byorgey> this calls for some whisky
2012-02-26 04:14:08 UTC <tgeeky_> http://i.imgur.com/cg489.jpg <-- bask in that picture for a few moments after your first
2012-02-26 04:14:29 UTC <tgeeky_> This moment brought to you by NASA.
2012-02-26 04:14:50 UTC <byorgey> nice.
2012-02-26 04:14:56 UTC <byorgey> tgeeky_: did you take that photo? ;)
2012-02-26 04:15:08 UTC <tgeeky_> byorgey: yes! Unfortunately, I didn't survive.
2012-02-26 04:15:15 UTC <byorgey> oh. too bad.
2012-02-26 04:15:29 UTC <tgeeky_> Indeed. It's a bit nippy up there.
2012-02-26 04:15:49 UTC <tgeeky_> byorgey: some other fun facts.
2012-02-26 04:16:19 UTC <tgeeky_> If I hurtled you toward the sun, despite the ~ 7000*C temperature, you'd freeze to death first.
2012-02-26 04:17:22 UTC <byorgey> hurtled me from where?
2012-02-26 04:17:45 UTC <tgeeky_> byorgey: I anticipated that question. It doesn't matter, really.
2012-02-26 04:17:58 UTC <byorgey> I see!
2012-02-26 04:18:03 UTC <byorgey> well, please don't
2012-02-26 04:18:15 UTC <tgeeky_> certainly from Earth. But even if you were stationkeeping right outside the corona, and you went in... the scale is so large that you'd still freeze to death
2012-02-26 04:18:29 UTC <byorgey> I am rather fond of my current temperature
2012-02-26 04:18:31 UTC <tgeeky_> this is my favorite way to explain the size of the universe
2012-02-26 04:18:34 UTC <tgeeky_> http://laughingsquid.com/amazingly-detailed-photo-of-the-surface-of-the-sun/
2012-02-26 04:18:48 UTC <tgeeky_> http://www.avertedimagination.com/images/sun030311.jpg
2012-02-26 04:18:50 UTC <tgeeky_> so that picture
2012-02-26 04:19:03 UTC <tgeeky_> that is obviously on a part (probably a 1/10th) of the sun
2012-02-26 04:19:51 UTC <tgeeky_> On the Earth, you can think of severe weather events that spawn (relatively large, powerful) things like tornados which will happily throw you and the house you occupy around like so many overly-ordered heaps of wooden scrap.
2012-02-26 04:20:11 UTC <byorgey> sure
2012-02-26 04:20:11 UTC <tgeeky_> so the earth has some rather large size, and our weather will throw around your house.
2012-02-26 04:20:43 UTC <tgeeky_> On the scale of that picture, the entire Earth is smaller than the small wisps of clouds in the vortex on the left
2012-02-26 04:21:00 UTC <byorgey> hehe, awesome =)
2012-02-26 04:21:22 UTC <tgeeky_> so by analogy, the Sun is so large that its normal weather systems would hurtle our entire planet around
2012-02-26 04:22:05 UTC <tgeeky_> you can even do this once (or twice) more, using supermassive stars or black holes, but that's much less approachable.
2012-02-26 04:22:58 UTC <tgeeky_> http://en.wikipedia.org/wiki/File:Galactic_centre_orbits.svg
2012-02-26 04:23:14 UTC <tgeeky_> there's a quick picture of the "black hole" at the center of our galaxy
2012-02-26 04:23:35 UTC <tgeeky_> or, at least, of the objects it throws around
2012-02-26 04:25:59 UTC <byorgey> tgeeky_: those scales don't quite match up, the Sun's diameter is only about 100 times that of Earth
2012-02-26 04:26:24 UTC <byorgey> something 1/100th the diameter of earth would be 127km across, which Earth weather definitely can't toss around
2012-02-26 04:27:30 UTC <tgeeky_> byorgey: I think you'll find the mass comparisons more accomidating
2012-02-26 04:28:13 UTC <byorgey> but mass just goes as the cube of diameter.
2012-02-26 04:28:16 UTC <tgeeky_> byorgey: you may very well be right. to be clear, the analogy I was making is, tornado tosses house, solar vortex tosses earth
2012-02-26 04:28:25 UTC <byorgey> oh, but the sun is much denser than the earth
2012-02-26 04:28:43 UTC <fryguybob> ACTION encounters for loops nested 10 deep...
2012-02-26 04:28:49 UTC <byorgey> tgeeky_: yes, I know you were making that analogy, and it may be true, but it doesn't follow from the relative sizes =)
2012-02-26 04:29:03 UTC <byorgey> wat
2012-02-26 04:31:12 UTC <byorgey> fryguybob: I can't even comprehend how that could possibly happen.
2012-02-26 04:31:36 UTC <tgeeky_> an iteration of fermionic string theory?
2012-02-26 04:31:40 UTC <tgeeky_> 10 dimensions :o
2012-02-26 04:31:45 UTC <byorgey> ACTION wonders what the highest value of k is for a "legitimate" algorithm which is O(n^k)
2012-02-26 04:32:17 UTC <byorgey> pretty sure I've heard of k = 6
2012-02-26 04:32:25 UTC <byorgey> though I don't remember what the algorithm was
2012-02-26 04:32:39 UTC <fryguybob> byorgey: Well they stopped at the case of N = 10.  Before that they had 9 nested for loops.
2012-02-26 04:33:10 UTC <byorgey> oh, I see, of course.
2012-02-26 04:33:45 UTC <fryguybob> 200 lines of code should be less then 5, even in java.
2012-02-26 04:34:46 UTC <byorgey> ouch.
2012-02-26 04:36:23 UTC <tgeeky_> byorgey: here is a picture for scale: http://blogs.discovermagazine.com/badastronomy/2010/10/28/the-boiling-erupting-sun/
2012-02-26 04:36:37 UTC <ClaudiusMaximus> reminds me of the time i did a computation competition in school in Acorn BBC Basic and had no clue what the while loop syntax was and couldn't find the manual and ended up using if/goto and got docked marks
2012-02-26 04:37:08 UTC <tgeeky_> byorgey: I think the confusion stems from the fact that we're talking about weather on the "surfaces" of these bodies
2012-02-26 04:37:48 UTC <tgeeky_> byorgey: but your original objection still seems correct, to me. (I mean, I know it's mathematically correct, but it also seems intuitively correct.. I don't see any weather system moving a large island around)
2012-02-26 04:38:19 UTC <byorgey> tgeeky_: hah, awesome
2012-02-26 04:38:48 UTC <tgeeky_> it really is on the verge of being totally unappreciable
2012-02-26 04:38:57 UTC <byorgey> tgeeky_: from those pictures it also seems to me that the Sun's "weather" is on a much, much larger scale (relatively) than Earth's
2012-02-26 04:39:36 UTC <byorgey> Earth does not have massive plumes of hot gas 100s of kilometers across erupting from it.
2012-02-26 04:40:02 UTC <tgeeky_> byorgey: not anymore, at least :)
2012-02-26 04:40:06 UTC <byorgey> hehe
2012-02-26 04:40:14 UTC <byorgey> earth is all boring and stuff
2012-02-26 04:40:31 UTC <tgeeky_> though the republican candidates might fit the bill.
2012-02-26 04:40:38 UTC <tgeeky_> certainly filled with hot gas
2012-02-26 04:40:43 UTC <ClaudiusMaximus> i like the moon being the same apparent size as the sun from the earth's surface
2012-02-26 04:41:04 UTC <tgeeky_> ClaudiusMaximus: yeah. pretty handy observational tool.
2012-02-26 04:41:19 UTC <tgeeky_> plus, supposedly a breathtakingly beautiful sight to see
2012-02-26 04:42:05 UTC <ClaudiusMaximus> i saw an eclipse in france a few years ago, the main thing i remember was how cold it got so quickly
2012-02-26 04:42:13 UTC <tgeeky_> really?
2012-02-26 04:42:19 UTC <tgeeky_> i hadn't heard of that
2012-02-26 04:43:28 UTC <tgeeky_> wow. a reduction comparable to 1/2 to 3/4ths of the diff between daily max and daily min
2012-02-26 04:43:31 UTC <tgeeky_> that's nuts!
2012-02-26 04:44:14 UTC <tgeeky_> ClaudiusMaximus: I saw a Space Shuttle launch. That's my favorite moment in my life so far :O
2012-02-26 04:47:00 UTC <byorgey> ACTION is already planning to go see the total solar eclipse on August 21, 2017
2012-02-26 04:47:37 UTC <byorgey> it's going to pass just a short drive north of my wife's parents' house in Kansas
2012-02-26 04:48:10 UTC <tgeeky_> i might have to come out and join you.
2012-02-26 04:48:16 UTC <tgeeky_> that's a pretty far way in the future though :o
2012-02-26 04:48:54 UTC <byorgey> I know
2012-02-26 04:49:54 UTC <luite> http://hdiff.luite.com/tmp/fp3.png  - now with 50% less artificial data!  ( http://hdiff.luite.com/tmp/admin1.png )
2012-02-26 04:50:27 UTC <tgeeky_> byorgey: by then, we might both be zillionaires. We'll pay the Sun to eclipse when we want it to!
2012-02-26 04:50:34 UTC <byorgey> http://en.wikipedia.org/wiki/Solar_eclipse_of_August_21,_2017
2012-02-26 04:50:52 UTC <tgeeky_> wolfgang finally launched
2012-02-26 04:50:54 UTC <byorgey> tgeeky_: nice!
2012-02-26 04:51:14 UTC <fryguybob> tgeeky_: I was resisting that :D
2012-02-26 04:51:41 UTC <luite> tgeeky_: yes, the news items are still fake, but at least it's loading them from the database now, instead of them being hardcoded in the template
2012-02-26 04:51:48 UTC <byorgey> "Gray favorite puzzle/paradox of Gray based on Fibonacci numbers"?
2012-02-26 04:51:52 UTC <luite> that's why it's only 50% less fake
2012-02-26 04:51:55 UTC <tgeeky_> byorgey: man. to see that, *and* to finally see one of these stars go supernova (beatlejuice, eta carine)
2012-02-26 04:52:01 UTC <tgeeky_> in our lifetime
2012-02-26 04:52:58 UTC <luite> byorgey: oh I think I randomly changed some words from the previous item, to make it easier to see that that text had actually been updated
2012-02-26 04:53:07 UTC <byorgey> hehe
2012-02-26 04:53:30 UTC <luite> but the gallery data is still hardcoded
2012-02-26 04:53:43 UTC <luite> that's the last thing that needs to be fixed for the frontpage
2012-02-26 04:54:04 UTC <luite> I'll probably pull it from some wiki page in some special format
2012-02-26 04:56:43 UTC <luite> still need to make the admin interface for deleting pages/revisions and users
2012-02-26 04:57:57 UTC <tgeeky_> i'm a little peeved and embarassed that wolframalpha.com is using an apollonian fractal (with some congruences applied) as their background image :o
2012-02-26 04:59:10 UTC <ClaudiusMaximus> looks like this to me http://www.wolframcdn.com/homepage/orange-gears-back-new2.jpg
2012-02-26 04:59:11 UTC <luite> why embarassed
2012-02-26 04:59:12 UTC <luite> ?
2012-02-26 04:59:40 UTC <luite> oh I get a green background
2012-02-26 04:59:58 UTC <tgeeky_> luite: because, it's "my thing" and I haven't had the skill/time/motivation to get much more done fast enough :o
2012-02-26 05:00:02 UTC <byorgey> oh, I got the gears earlier but just now I got the Apollonian fractal
2012-02-26 05:00:37 UTC <tgeeky_> http://www.wolframcdn.com/homepage/green-back2.jpg
2012-02-26 05:01:00 UTC <ClaudiusMaximus> which is spooky because the last non-silly thing i did was http://claudiusmaximus.goto10.org/v/gears/2012-01-14_gear_chain_v1.ogv
2012-02-26 05:01:12 UTC <byorgey> that's a pretty cool background image
2012-02-26 05:01:17 UTC <ClaudiusMaximus> and i got quite obsessed by seeing gears everywhere
2012-02-26 05:01:25 UTC <luite> oh that's a big file
2012-02-26 05:01:37 UTC <tgeeky_> byorgey: I like it. It's not really in the fractal, though
2012-02-26 05:01:50 UTC <luite> meh enough boring programming for today...
2012-02-26 05:01:55 UTC <tgeeky_> I think it's probably reflected 4 times
2012-02-26 05:01:56 UTC <ClaudiusMaximus> oops, mine is 36MB - shoulda warned
2012-02-26 05:02:06 UTC <byorgey> tgeeky_: sure
2012-02-26 05:02:37 UTC <tgeeky_> byorgey: and it's reduced, modulo something. I'd have to compare it to other people's renderings to figure it out :o
2012-02-26 05:05:31 UTC <tgeeky_> weird. now I can't unsee the image of a demonic, howling mickey mouse in these inner parts
2012-02-26 05:05:45 UTC <tgeeky_> or maybe mickey with bifocals on
2012-02-26 05:24:56 UTC <byorgey> ACTION -> bed
2012-02-26 05:24:58 UTC <byorgey> night all
2012-02-26 17:42:14 UTC <luite> aw, removing tau from diagrams? :(
2012-02-26 17:42:33 UTC <byorgey> luite: yeah, I know, sad =(
2012-02-26 17:43:10 UTC <byorgey> Note, I'm not removing tau itself from diagrams, only the dependence on the tau package
2012-02-26 17:45:29 UTC <luite> yes but you're still removing the one true authoritative tau
2012-02-26 17:45:49 UTC <luite> i suspect this is all part of some evil piist plot
2012-02-26 17:45:58 UTC <byorgey> hehe
2012-02-26 18:26:08 UTC <vyom> byorgey: I have been having an email conversation with jaspervdj, who wrote blaze-html to see if could reuse his stuff. I also wrote up this initial note by way of "design" :)
2012-02-26 18:26:10 UTC <vyom> any thoughts?
2012-02-26 18:26:16 UTC <vyom> feel free to put it in a comment
2012-02-26 18:26:25 UTC <vyom> so that it is documented
2012-02-26 18:26:33 UTC <vyom> i am gonna send it out to jasper as well
2012-02-26 18:27:38 UTC <byorgey> vyom: uh, any thoughts on what?
2012-02-26 18:27:45 UTC <byorgey> what initial note?
2012-02-26 18:27:57 UTC <vyom> https://gist.github.com/1918104
2012-02-26 18:27:58 UTC <vyom> sorry :)
2012-02-26 18:28:10 UTC <byorgey> ACTION cannot read minds quite yet =)
2012-02-26 18:29:12 UTC <vyom> lol! my thoughts were racing faster than my typing abilities
2012-02-26 18:31:45 UTC <byorgey> vyom: I added a comment
2012-02-26 18:32:15 UTC <byorgey> vyom: anyway, in general it looks good to me
2012-02-26 18:32:35 UTC <byorgey> I don't have very strong opinions about generating SVG, as long as diagrams-svg works I don't really care how you do it ;)
2012-02-26 18:35:39 UTC <vyom> byorgey: ok.. sounds good. I believe the goal of blaze-html is to make valid HTML docs.. but that validation is not part of the core monad used to generate the documents. The core monad which I believe is called HtmlM can actually handle any XMLish tree structure
2012-02-26 18:35:56 UTC <byorgey> ok, makes sense.
2012-02-26 18:36:35 UTC <vyom> in my initial conversation, jasper was in favor of reusing those internal classes
2012-02-26 18:38:08 UTC <vyom> s/reusing/letting me reuse/
2012-02-26 18:39:28 UTC <vyom> this might take a bit of co-ordination.. but in the end it would be valuable
2012-02-26 19:08:39 UTC <byorgey-test> testing
2012-02-26 19:09:56 UTC <luite> hmm
2012-02-26 19:11:46 UTC <byorgey> I'm embedding a chat client in the diagrams web page
2012-02-26 19:13:45 UTC <vyom> interesting idea.. what for though? So people can post to #diagrams directly and share cool stuff?
2012-02-26 19:13:47 UTC <vyom> :)
2012-02-26 19:14:22 UTC <byorgey> vyom: mostly to lower the barriers to getting help.
2012-02-26 19:14:39 UTC <byorgey> so if someone is interested in diagrams but has never used IRC before they don't have to figure out how to install an IRC client first.
2012-02-26 19:15:09 UTC <luite> you should also add a diagrams facebook page, so people can 'like' it
2012-02-26 19:15:37 UTC <byorgey> hah, I totally should, and a Google+ page while we're at it
2012-02-26 19:15:50 UTC <luite> and promise them some special status in the irc channel if they like it
2012-02-26 19:16:18 UTC <byorgey> "Just 'Like' diagrams to get your first three diagrams free!"
2012-02-26 19:17:02 UTC <luite> that's almost as much as a premium domain name!
2012-02-26 19:20:30 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-community.png   -- here's what it looks like
2012-02-26 19:20:46 UTC <byorgey> feedback from actual wed designers welcome =P
2012-02-26 19:20:49 UTC <byorgey> *web
2012-02-26 19:23:31 UTC <luite> hmm I would've chosen a simpler logo, but it looks fun
2012-02-26 19:23:50 UTC <byorgey> luite: oh, I agree, we do need a simpler logo
2012-02-26 19:24:25 UTC <byorgey> unfortunately I am not much of a graphic designer either.
2012-02-26 19:25:45 UTC <luite> me neither, although I sometimes like to think i am... and then spend a week tinkering with logo designs that i'm unhappy about, finally throwing away everything
2012-02-26 19:26:32 UTC <byorgey> hehe
2012-02-26 19:26:58 UTC <byorgey> I was just trying to spell the name "diagrams" in ways that showed off stuff you can do with it
2012-02-26 19:27:09 UTC <byorgey> which is fun, but in retrospect does not actually make a very good logo.
2012-02-26 19:27:44 UTC <luite> yesod also needs a new logo, and I don't like the designs that people have currently sent in, but must resist the temptation to make one myself
2012-02-26 19:28:05 UTC <byorgey> hehe
2012-02-26 19:28:14 UTC <byorgey> both of us have bigger fish to fry =)
2012-02-26 19:28:47 UTC <luite> I still like Cale's haskell logo entry, but just replacin the word Haskell with Yesod there doesn't really work
2012-02-26 19:29:22 UTC <luite> (plus it has a bit of an odd shape)
2012-02-26 19:34:47 UTC <byorgey> luite: which one is that?
2012-02-26 19:34:59 UTC <luite> the mountain
2012-02-26 19:52:13 UTC <vyom> i am having trouble getting this line to compile under diagrams-0.5.. and not sure what to do to fix it
2012-02-26 19:52:14 UTC <vyom> https://github.com/deepakjois/diagrams-svg/blob/master/src/Graphics/Rendering/SVG.hs#L217
2012-02-26 19:53:38 UTC <byorgey> vyom: well, things like (1,0) are not vectors anymore
2012-02-26 19:54:06 UTC <byorgey> so instead of  apply t (1,0) you can write  apply t (r2 (1,0)), or even better,  apply t unitX
2012-02-26 19:54:27 UTC <byorgey> also the output of apply is not a pair, so you want  case (unr2 (apply t unitX), ... )
2012-02-26 19:54:43 UTC <vyom> so (1,0) is unitX (0,1) is unitY and (0,0) is origin?
2012-02-26 19:54:55 UTC <byorgey> yep
2012-02-26 20:01:20 UTC <tgeeky__> byorgey: if the animated stuff is working, you could do something like this: http://activetuts.s3.amazonaws.com/tuts/121_countdown/Preview/Countdown.html (train-station ticker style, or something similar), start with old diagrams logo (permutations of diagrams for letters) and end up with your simpler logo at the end :o
2012-02-26 20:01:53 UTC <tgeeky__> that's not quite the one I wanted
2012-02-26 20:02:08 UTC <tgeeky_> but close enough
2012-02-26 20:06:19 UTC <luite> hm, they removed all mechanical flap displays at train stations in the netherlands :(
2012-02-26 20:07:20 UTC <tgeeky_> luite: :(
2012-02-26 20:07:22 UTC <luite> the largest one, the large 'departures' board at the meeting point in utrecht central station was replaced recently
2012-02-26 20:07:56 UTC <tgeeky_> probably with a Windows machine
2012-02-26 20:07:59 UTC <luite> they did make an ipad version of the old one, for people that had grown attached to it :)
2012-02-26 20:08:24 UTC <luite> hehe, yeah I think it's a LED display now
2012-02-26 20:08:42 UTC <tgeeky_> :(
2012-02-26 20:10:10 UTC <luite> it was a national news item
2012-02-26 20:16:20 UTC <vyom> fryguybob: did you push all the changes for CmdLine.hs to the diagrams-svg repo
2012-02-26 20:16:30 UTC <vyom> i had trouble building it and so had to remove a couple of things
2012-02-26 20:16:50 UTC <vyom> anyway..diagrams-svg works under 0.5 now
2012-02-26 20:16:53 UTC <vyom> https://github.com/deepakjois/diagrams-svg/commit/00bfd3397ac6ef5817b163de50bc8e6cfdb23b70
2012-02-26 20:17:22 UTC <vyom> anybody have any thoughts on the old-time, process and directory dependencies, the way it is specified in the cabal file ?
2012-02-26 20:18:04 UTC <vyom> i was having trouble building with the way the deps were specified originally
2012-02-26 20:18:47 UTC <luite> those are all included with ghc, aren't they?
2012-02-26 20:19:02 UTC <vyom> luite: i dont know.. i could not get it to build w/o specifying them
2012-02-26 20:19:23 UTC <luite> yeah, having an upper bound for included libs is often a bad idea, since it can break your install
2012-02-26 20:19:45 UTC <vyom> i suppose i should specify them like "old-time      >= 1.0   && < 1.2" instead?
2012-02-26 20:19:59 UTC <vyom> but i am not sure what the best practise is
2012-02-26 20:20:22 UTC <vyom> but those deps seem fairly stable
2012-02-26 20:20:28 UTC <vyom> so may not be a big deal
2012-02-26 20:21:30 UTC <fryguybob> vyom: I sent the patches to byorgey and Felipe and they both said they pushed them.
2012-02-26 20:21:59 UTC <fryguybob> vyom: I would just match the bounds that are set in the cabal file for diagrams-cairo
2012-02-26 20:22:32 UTC <vyom> fryguybob: until yesterday there wasnt even a CmdLine.hs file in the darcs repo
2012-02-26 20:22:51 UTC <vyom> so this patch u sent got applied yesterday
2012-02-26 20:23:01 UTC <fryguybob> Yes
2012-02-26 20:23:31 UTC <vyom> check the diff above.. i believe the patch may be missing a couple of things you have exported.. it is strange
2012-02-26 20:27:51 UTC <fryguybob> I did not include the svgID stuff in the patches that were pushed to patch-tag.  Is that what you are refering too?
2012-02-26 20:28:51 UTC <vyom> fryguybob: yes looks like you did not.. but the module exports include them which causes the build to fail
2012-02-26 20:28:57 UTC <vyom> so i had to delete them
2012-02-26 20:29:23 UTC <fryguybob> vyom: Ah, yes.  I see that.
2012-02-26 20:30:26 UTC <vyom> fryguybob: how do i export the patches now, in case anybody wants to apply them to the patch-tag darcs repo.. u know the command?
2012-02-26 20:31:30 UTC <fryguybob> For git? No :D.
2012-02-26 20:32:13 UTC <vyom> i have darcs-bridge setup
2012-02-26 20:32:25 UTC <vyom> so i did push the changes in git to a darcs bridge repo
2012-02-26 20:32:32 UTC <fryguybob> For darcs it is darcs send.  byorgey might know how to work the bridge.
2012-02-26 20:32:50 UTC <vyom> what does darcs send do.. does it require email?
2012-02-26 20:33:02 UTC <fryguybob> So darcs send -O will ask which patches to bundle into a file.
2012-02-26 20:33:17 UTC <fryguybob> Then you just send that file to someone by email or whatever.
2012-02-26 20:33:54 UTC <fryguybob> darcs send --to=blah@...  will send to that email address (if your system can send email like that).
2012-02-26 20:34:01 UTC <fryguybob> bbl
2012-02-26 20:39:36 UTC <vyom> http://wiki.darcs.net/DarcsBridgeUsage#i-want-to-create-a-bridge-that-allows-incremental-updates-and-use-both-git-and-darcs
2012-02-26 20:39:50 UTC <vyom> that section needs to be re-written because i have no clue what it is saying :)
2012-02-26 21:13:44 UTC <vyom> byorgey: http://db.tt/EyzaW75u These are the patches for the two changes that I made here  https://github.com/deepakjois/diagrams-svg/
2012-02-26 22:30:25 UTC <tgeeky_> hm. This was amusing and interesting: http://color.method.ac/
2012-02-26 22:51:04 UTC <luite> buh
2012-02-26 22:51:12 UTC <luite> making admin interfaces is boring
2012-02-27 00:02:27 UTC <byorgey> vyom: don't use darcs-bridge.  there are bugs in the git->darcs direction
2012-02-27 00:03:17 UTC <byorgey> vyom: unfortunately until those bugs are fixed you just have to do  git format-patch  and then apply the patch to a darcs repo with the 'patch' utility
2012-02-27 00:03:51 UTC <vyom> are you saying the patch above wont apply cleanly?
2012-02-27 00:04:54 UTC <vyom> i was able to import the two patches in the git -> darcs direction.. although it did report a mysterious "user error"..
2012-02-27 00:05:16 UTC <vyom> i am not sure if there will be some adverse impact the next time i try to do something
2012-02-27 00:17:47 UTC <byorgey> vyom: they applied cleanly, I just pushed them
2012-02-27 00:18:27 UTC <byorgey> vyom: my understanding is that the bugs show up when dealing with merges in the git repo
2012-02-27 00:19:34 UTC <vyom> byorgey: ok.. will see when I have deal with that
2012-02-27 00:55:42 UTC <vyom> oh well that went faster than expected.. I have a pretty comprehensive SVG combinator library ready to be used.. https://github.com/deepakjois/blaze-svg
2012-02-27 00:56:16 UTC <vyom> most of the heavy lifting is done by blaze-html
2012-02-27 00:59:24 UTC <fryguybob> vyom: Earlier you asked about dependencies upper-bounds.  My perspective is that they are useful because it signals to the consumer of the library that it is untested when they try to run with a newer dependency.
2012-02-27 01:00:01 UTC <vyom> fryguybob: sure.. I updated the diagrams-svg deps to match diagrams-cairo like you suggested
2012-02-27 01:00:15 UTC <fryguybob> Without it, if the newer dep is incompatible, but is not a compile error, then *your* library gets the bad reputation.
2012-02-27 01:00:28 UTC <vyom> :)
2012-02-27 01:01:15 UTC <fryguybob> In practice I  cabal unpack  and bump up the dependencies all the time, but I know that there may be consequences (i.e. I don't blame the library when it all goes wrong).
2012-02-27 01:05:00 UTC <luite> yay admin done: http://hdiff.luite.com/tmp/admin2.png http://hdiff.luite.com/tmp/admin3.png http://hdiff.luite.com/tmp/admin4.png http://hdiff.luite.com/tmp/admin5.png http://hdiff.luite.com/tmp/admin6.png http://hdiff.luite.com/tmp/admin7.png
2012-02-27 01:06:21 UTC <fryguybob> hehe 03:53:37.578839
2012-02-27 01:07:12 UTC <luite> yeah I'm a bit lazy rendering UTCTime, it looks better in the public part of the site
2012-02-27 01:09:36 UTC <luite> the interface looks a bit spartan, but you can quickly find users/pages that you might want to redact (matches list has realtime update as you type)
2012-02-27 01:09:44 UTC <fryguybob> luite: They all look functional.
2012-02-27 01:09:54 UTC <luite> and I think it has everything I promised te haskell.org committee :)
2012-02-27 01:11:58 UTC <fryguybob> Having email addresses in url might be a potential problem.
2012-02-27 01:13:16 UTC <luite> fryguybob: i encodeURIComponent that string with javascript
2012-02-27 01:13:26 UTC <luite> looks like the @ doesn't need to be escaped
2012-02-27 01:14:08 UTC <fryguybob> Well from an information leak side of things.
2012-02-27 01:16:39 UTC <luite> oh, admins can see all email addresses anyway
2012-02-27 01:33:05 UTC <byorgey> luite: nice
2012-02-27 01:35:44 UTC <fryguybob> luite: I guess I was thinking of something like some page probing the history with email addresses, but that it not a very exciting attack :p.
2012-02-27 01:36:53 UTC <luite> hmm, is it even possible? even if you know an email address?
2012-02-27 01:38:13 UTC <fryguybob> Yeah, at least at some point with some browsers you could probing link color to find links in the browser history.
2012-02-27 01:38:23 UTC <fryguybob> probe*
2012-02-27 01:38:49 UTC <luite> hmm, yeah you're right, but that was patched
2012-02-27 01:39:38 UTC <fryguybob> Right, I only react because urls are treated differently then page content when it comes to browsers.  Not that that always leads to anything interesting.
2012-02-27 01:40:40 UTC <luite> yeah you have a point
2012-02-27 01:40:53 UTC <fryguybob> Also might be treated differently when it comes other parts of the system that handle packets.
2012-02-27 01:40:56 UTC <luite> I did make sure that GET requests never modify anything :)
2012-02-27 01:41:22 UTC <fryguybob> Is that RESTful?
2012-02-27 01:43:30 UTC <luite> something like that, but I sometimesused POST to delete,modify and create things
2012-02-27 01:44:37 UTC <luite> at least clients can only do cross-domain GET requests unless you explicitly allow others
2012-02-27 02:43:34 UTC <luite> hmm, annoying coffeescript [0..-1] is not an empty list
2012-02-27 02:43:46 UTC <luite> I have 10000 bugs or so because of this
2012-02-27 02:45:55 UTC <fryguybob> luite: What is it?
2012-02-27 02:46:32 UTC <luite> [0,-1]
2012-02-27 02:47:47 UTC <fryguybob> I see
2012-02-27 02:48:05 UTC <luite> I have a lot of loops over item indices, for i = [0..numberOfCells()-1]  doSomething(i)
2012-02-27 03:01:59 UTC <byorgey> doh
2012-02-27 03:02:37 UTC <byorgey> oh man, there are so many changes from diagrams-lib 0.4 to 0.5
2012-02-27 03:02:49 UTC <byorgey> editing the release notes is taking forever =P
2012-02-27 03:27:15 UTC <luite> better revert most of the changes then
2012-02-27 03:28:55 UTC <byorgey> I should.  It's so rude, all these people submitting 'changes' and 'patches' as if there were something wrong
2012-02-27 03:31:03 UTC <luite> you're so right, it's downright insulting, you're giving away things for free, and people still want you to change things all the time
2012-02-27 03:33:56 UTC <luite> are you also preparing a weblog post that shows off some of the new features?
2012-02-27 03:38:11 UTC <byorgey> I plan to, yes
2012-02-27 03:48:31 UTC <tgeeky> sounds like you two are discussing a right bunch of wankers!
2012-02-27 03:54:57 UTC <vyom> so blaze-svg is *almost* ready for business: https://github.com/deepakjois/blaze-svg/blob/master/README.md
2012-02-27 03:56:28 UTC <vyom> now i need to start the good stuff, i.e. using it in diagrams-svg
2012-02-27 03:56:42 UTC <vyom> quite excited to use it
2012-02-27 03:56:44 UTC <byorgey> vyom: wow, you are fast =)
2012-02-27 03:58:45 UTC <vyom> after seeing the Ayrton Senna documentary yesterday, I was inspired to name this package senna, but then good sense prevailed and I decided to use blaze-svg for consistency
2012-02-27 03:58:56 UTC <vyom> now i need a project which i can call "senna" :)
2012-02-27 03:59:36 UTC <vyom> sigh.. senna : a blazing fast SVG combinator library had a nice ring to it :)
2012-02-27 04:00:41 UTC <vyom> byorgey: most of the heavy lifting is being done by blaze-html.. I just had to write some autogeneration scripts
2012-02-27 04:01:08 UTC <byorgey> cool
2012-02-27 04:01:15 UTC <byorgey> I love code reuse =)
2012-02-27 04:01:55 UTC <vyom> byorgey: yes.. I still have an open thread with jaspervdj to make things even cleaner.. but this should be enough to start hacking on diagrams-svg
2012-02-27 04:02:18 UTC <byorgey> sounds good
2012-02-27 04:18:04 UTC <luite> http://hdiff.luite.com/tmp/showcase1.png http://hdiff.luite.com/tmp/showcase2.png http://hdiff.luite.com/tmp/showcase3.png http://hdiff.luite.com/tmp/showcase4.png
2012-02-27 04:22:39 UTC <byorgey> luite: cool =)
2012-02-27 04:22:58 UTC <byorgey> ACTION needs to start sharing screenshots of his emacs buffer
2012-02-27 04:24:25 UTC <luite> there must be scripts that can take one and automatically upload it to an image sharing site
2012-02-27 04:32:28 UTC <vyom> my irc client lets me preview these pictures inline.. :)
2012-02-27 04:35:10 UTC <byorgey> woah, nifty
2012-02-27 05:19:26 UTC <luite> http://hdiff.luite.com/tmp/searchres.png <- hadn't shown this menu yet, right? ;p
2012-02-27 05:20:52 UTC <byorgey> cool, pretty sure I hadn't seen that
2012-02-27 05:21:32 UTC <luite> I guess I'll stop spamming then, because I'm out of screenshots now :(
2012-02-27 05:31:02 UTC <byorgey> wrong. the correct answer is "make more screenshots"
2012-03-01 03:48:09 UTC <vyom> Any feedback in this pattern I have used in blaze-svg to generate SVG paths?
2012-03-01 03:48:12 UTC <vyom> https://github.com/deepakjois/blaze-svg/commit/e4312b5815d0b5ef3a5f1e0b60a18865a661d890#L3R18
2012-03-01 03:48:19 UTC <vyom> See the whole commit for more context..
2012-03-01 03:48:56 UTC <vyom> I wrote a few combinators for each kind of SVG path.. and then used a State Monad to accumulate it
2012-03-01 03:50:47 UTC <vyom> Feel free to leave a comment on the commit itself if you feel so inclined
2012-03-02 20:16:55 UTC <byorgey> whew! the week is finally over!
2012-03-02 20:17:04 UTC <byorgey> now I can get back to working on the diagrams release.
2012-03-02 20:17:11 UTC <byorgey> It is so close I can taste it.
2012-03-02 20:17:38 UTC <byorgey> it tastes like those orange creamsicles.
2012-03-02 20:57:50 UTC <byorgey> doing build testing now.  7.0.4: check.  6.12.3: in progress.
2012-03-02 21:13:08 UTC <alpounet> ACTION feels urged to work on his buildbot project
2012-03-02 21:14:51 UTC <byorgey> alpounet: what's that?
2012-03-02 21:15:42 UTC <alpounet> byorgey, well, i'm actually not alone on that project
2012-03-02 21:15:47 UTC <alpounet> anyway, it's there: http://patch-tag.com/r/alpmestan/scoutess/wiki/
2012-03-02 21:16:08 UTC <byorgey> alpounet: ooh, neat
2012-03-02 21:16:48 UTC <byorgey> alpounet: that would be super useful for me!
2012-03-02 21:18:48 UTC <alpounet> heh
2012-03-02 21:19:38 UTC <alpounet> we've already been talking to dcoutts who's interested in somehow making this and hackage-server v2 interact
2012-03-02 21:19:56 UTC <byorgey> yeah, that sounds great
2012-03-02 21:20:41 UTC <alpounet> but... the project is not even 2 weeks old
2012-03-02 21:20:46 UTC <alpounet> it's not there yet, at all :p
2012-03-02 21:21:25 UTC <byorgey> don't worry, I am patient =)
2012-03-02 21:22:32 UTC <alpounet> haha
2012-03-02 21:26:26 UTC <alpounet> there really is a lot of work there
2012-03-02 21:27:49 UTC <byorgey> there, tested on 6.12.3, 7.0.4, and 7.2.1.
2012-03-02 21:28:16 UTC <byorgey> waiting for the new gtk2hs release so I can test it under 7.4.1 as well...
2012-03-02 21:30:33 UTC <alpounet> i haven't installed 7.4.1 yet
2012-03-02 21:31:20 UTC <byorgey> it has some nice features but there's no need to rush out and get it.
2012-03-02 21:31:54 UTC <alpounet> yeah i've read quite a lot about a few of these features of course
2012-03-02 21:32:09 UTC <alpounet> but i'm waiting for the ecosystem to be 7.4.1-proof
2012-03-02 21:32:10 UTC <fryguybob> Mmmmm creamsicles.
2012-03-02 22:33:00 UTC <tgeeky> ACTION loves reading GHC release notes
2012-03-03 01:39:51 UTC <byorgey> check it out: http://www.cis.upenn.edu/~byorgey/diagrams-api/
2012-03-03 01:40:34 UTC <vyom> nice
2012-03-03 01:40:58 UTC <vyom> i am kinda out of touch.. is it released yet :) ?
2012-03-03 01:41:35 UTC <vyom> probably not.. given diagrams-discuss doesnt have anything
2012-03-03 01:42:43 UTC <fryguybob> ACTION finds the inline images.
2012-03-03 01:43:05 UTC <vyom> where where
2012-03-03 01:43:53 UTC <fryguybob> http://www.cis.upenn.edu/~byorgey/diagrams-api/Data-Active.html
2012-03-03 01:45:28 UTC <vyom> neat!
2012-03-03 01:47:22 UTC <byorgey> no, not released yet
2012-03-03 01:48:02 UTC <byorgey> I'm just proud that I finally got all the documentation to build together, with highlighted source, and proper links to other things on Hackage
2012-03-03 01:48:11 UTC <fryguybob> ACTION should do a diagram a day on the release week.
2012-03-03 01:48:21 UTC <byorgey> that would be awesome =)
2012-03-03 01:58:59 UTC <vyom> byorgey: indeed.. what kind of problems did u encounter?
2012-03-03 01:59:20 UTC <byorgey> oh man, don't get me started
2012-03-03 01:59:36 UTC <byorgey> I have been working on this on and off for two weeks
2012-03-03 01:59:43 UTC <vyom> ok gtg :( but  will read the log later..
2012-03-03 01:59:57 UTC <byorgey> I'll probably write a blog post about it or something.
2012-03-03 02:34:48 UTC <tgeeky_> byorgey: be sure to complain a lot
2012-03-03 02:35:01 UTC <byorgey> tgeeky_: you bet
2012-03-03 02:35:21 UTC <tgeeky_> i am down here dodging tornados
2012-03-03 02:35:21 UTC <byorgey> "why hasn't someone else already made this easy!? wah wah wah."
2012-03-03 02:35:26 UTC <byorgey> yikes
2012-03-03 02:35:43 UTC <tgeeky_> luckily I *just* moved my computer to the safest part of the basement, so I'm happy until we lose power
2012-03-03 02:36:02 UTC <tgeeky_> i accidentially installed a new 8 port switch that I forgot to battery backup
2012-03-03 02:36:23 UTC <tgeeky_> unluckily, this will be going on for the next ~ 5 hours
2012-03-03 02:37:29 UTC <tgeeky_> http://www.wunderground.com/radar/radblast.asp?zoommode=zoom&num=10&delay=15&scale=0.750&noclutter=0&ID=ATL&type=TR0&lat=0&lon=0&label=you&showstorms=0&map.x=403&map.y=192&centerx=445&centery=317&lightning=0&smooth=0&showlabels=1&rainsnow=0
2012-03-03 02:37:36 UTC <tgeeky_> we're just south of the R in Roswell
2012-03-03 02:37:53 UTC <tgeeky_> and you can literally see the tornadic storm develop, spin, and then spin out (disappate rotationally)
2012-03-03 02:55:38 UTC <byorgey> tgeeky_: well, I hope the storm has less of an effect on your house than solar weather would have on the earth, if you know what I'm saying
2012-03-03 03:27:10 UTC <tgeeky_> byorgey: indeed :)
2012-03-03 03:27:21 UTC <tgeeky_> 110 mile high tornados
2012-03-03 03:29:24 UTC <tgeeky_> byorgey: actually, one of the ideas I've been floating around is somewhat related to the discussion about earth vs. solar weather
2012-03-03 03:36:17 UTC <tgeeky_> the goal is to understand how to mathematically construct a (geometry|topology|whatever is appropriate) in which the (manifest) scale differences in the universe are counted when you're dimension counting (as in string theory, or others)...
2012-03-03 03:39:33 UTC <tgeeky_> actually, let me make a calculation :o
2012-03-03 03:42:18 UTC <tgeeky_> byorgey:
2012-03-03 03:43:29 UTC <tgeeky_> http://tinyurl.com/6skt6er <--
2012-03-03 03:45:53 UTC <tgeeky_> by homogeniety, isotropy, (and soon, actual data from Kepler et al), you might assume that the answer is =~ 1 forall. starsystems
2012-03-03 03:47:04 UTC <tgeeky_> how could you argue that the above "fact" (if it's true, of course) constitutes a "dimension"
2012-03-03 23:15:54 UTC <mgsloan> cool!
2012-03-03 23:16:25 UTC <mgsloan> ACTION is responding to the scoutess project
2012-03-05 23:02:35 UTC <tgeeky> byorgey: ok, what does one do in the case that we're using cabal-dev, but need to modify a package ...
2012-03-05 23:02:42 UTC <tgeeky> byorgey: do you specify a location with cabal-dev?
2012-03-05 23:02:52 UTC <tgeeky> or do you use the default (which is=pwd)
2012-03-05 23:04:18 UTC <tgeeky> I think I'm going to have to.
2012-03-06 00:05:40 UTC <byorgey> tgeeky: in the dir of the package you are ultimately trying to build, do  cabal-dev add-source path/to/modified/package
2012-03-06 00:06:01 UTC <byorgey> tgeeky: assuming I understood your question correctly
2012-03-06 00:06:47 UTC <byorgey> tgeeky: see the README.md here: https://github.com/creswick/cabal-dev
2012-03-06 00:09:16 UTC <tgeeky> byorgey: yep, that was roughly it. I just used a sandbox external to both, this time
2012-03-06 00:10:01 UTC <byorgey> tgeeky: ah, that works too.  yeah, when building diagrams with cabal-dev I always do something like   cabal-dev install core/ active/ lib/ cairo/ blah/ blah/  in the parent directory of all the diagrams-related repos
2012-03-06 00:49:31 UTC <tgeeky> byorgey: this is a little strange. using cabal-dev, I'm building git-annex. The cabal file has 'hslogger' in the build-depends list, but because git-annex uses Make to actually build some things (through Setup.hs), that ghc invocation doesn't know about these libraries :/
2012-03-06 00:49:43 UTC <tgeeky> i guess there "should be" a cabal-dev ghc (there is a cabal-dev ghci)
2012-03-06 00:49:56 UTC <byorgey> tgeeky: oh, I see, boo =(
2012-03-06 00:50:07 UTC <tgeeky> maybe I'll write that patch and try it that way
2012-03-06 00:50:26 UTC <byorgey> cabal package using make to build things --> bad dog!
2012-03-06 02:37:22 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/announce-0.5.html   feedback welcome
2012-03-06 02:38:04 UTC <byorgey> we are pretty much poised for the 0.5 release now.  At this point I'm just waiting for the new gtk2hs release to happen first.
2012-03-06 03:24:40 UTC <tgeeky> byorgey: how formal is your 'tested with 6.12, 7.0, 7.2, and 7.4'
2012-03-06 03:24:51 UTC <tgeeky> are you doing this on one OS or on VMs?
2012-03-06 03:25:13 UTC <byorgey> tgeeky: ah, good point.  I only tested it on Linux.
2012-03-06 03:25:34 UTC <byorgey> maybe I should just put "support for GHC 7.4"
2012-03-06 09:42:15 UTC <cheater__> byorgey: that's freaking amazing. there's one thing though. In your lhs pages you don't seem to describe enough.
2012-03-06 09:42:35 UTC <cheater__> for example, take the first example (the star). You describe how all the parts fit together, but not how to arrive at the result.
2012-03-06 09:43:02 UTC <cheater__> I understand how the star works is you have some geometrical shapes, and then you transform them and make multiple copies
2012-03-06 09:43:33 UTC <cheater__> it would be nice to have code that i could copypaste to see each step.
2012-03-06 09:46:27 UTC <cheater__> you know, kinda more like a tutorial.
2012-03-06 18:00:48 UTC <byorgey> cheater: oh, note that's still the old version of the website.  I have a snazzy new version that will be pushed out along with the 0.5 release.
2012-03-06 18:01:07 UTC <byorgey> cheater: however, your criticism still applies.  I agree we ought to have more tutorialish stuff.
2012-03-06 18:42:00 UTC <cheater> byorgey: it's less about having more examples - it's more about making one or two examples that are really thorough.
2012-03-06 18:42:34 UTC <cheater> byorgey: also, you start out with fairly complex things. try posting a few "hello world" things
2012-03-06 18:42:47 UTC <cheater> like, "how to display a single circle" or a single line
2012-03-06 19:58:51 UTC <byorgey> cheater: note there IS a tutorial which does start out with displaying a circle.
2012-03-06 19:59:02 UTC <byorgey> just not in the gallery.
2012-03-06 20:17:27 UTC <cheater> ahh, i thought that was all there is.
2012-03-06 20:17:41 UTC <cheater> maybe have a link to the tutorials from the gallery or something.
2012-03-06 20:18:43 UTC <byorgey> cheater: well, in the new website there will always be a menu on the left side which lists (among other things) the tutorial, under the documentation heading
2012-03-06 20:19:27 UTC <byorgey> cheater: the tutorial is also linked from the release announcement, under "try it out"
2012-03-06 20:21:24 UTC <tgeeky> byorgey: can you put that up for us to inspect somewhere?
2012-03-06 20:21:34 UTC <tgeeky> byorgey: for testing pourposes
2012-03-06 20:22:20 UTC <byorgey> tgeeky: put what up?
2012-03-06 20:24:22 UTC <tgeeky> byorgey: the new website
2012-03-06 20:25:12 UTC <byorgey> tgeeky: ah, sure, fair enough
2012-03-06 20:33:21 UTC <cheater> oh ok nice
2012-03-06 21:07:14 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/_site/
2012-03-06 21:07:16 UTC <byorgey> tgeeky: ^^^
2012-03-06 21:29:40 UTC <fryguybob> byorgey: Is that dependency graph up to date?
2012-03-06 21:29:57 UTC <byorgey> fryguybob: heh, probably not
2012-03-06 21:30:05 UTC <byorgey> fryguybob: Andy Gill made that and sent it to me
2012-03-06 21:30:12 UTC <fryguybob> ah ok.
2012-03-06 21:30:17 UTC <byorgey> but there's clearly lots of stuff it doesn't include
2012-03-06 21:30:18 UTC <fryguybob> That's why canvas is on it.
2012-03-06 21:30:38 UTC <fryguybob> Also, I don't think it was made in diagrams :D.
2012-03-06 21:30:47 UTC <byorgey> heh, indeed =)
2012-03-06 21:31:06 UTC <byorgey> do you think I should remove it?  is it more confusing than helpful?
2012-03-06 21:32:29 UTC <fryguybob> Well, perhaps it is only confusing to me.
2012-03-06 21:32:46 UTC <fryguybob> I like the site layout.  Looks nice :D
2012-03-06 21:33:15 UTC <byorgey> thanks =)
2012-03-06 21:37:21 UTC <tgeeky> SECOND!
2012-03-06 21:37:29 UTC <tgeeky> oh. </roberts rules>
2012-03-07 05:05:34 UTC <tgeeky> byorgey: here?
2012-03-07 17:15:06 UTC <byorgey> tgeeky: I wasn't
2012-03-07 17:15:10 UTC <byorgey> but now I am
2012-03-07 17:15:19 UTC <tgeeky> ok. I forgot what I was going to ask anyway :O
2012-03-07 17:15:24 UTC <byorgey> hehe
2012-03-07 17:18:02 UTC <tgeeky> byorgey: it was probably related to my questions that I posed in #ghc
2012-03-07 17:18:23 UTC <tgeeky> byorgey: starting at 00:07 last night, if you care to review
2012-03-07 17:18:45 UTC <byorgey> tgeeky: what was the general topic?
2012-03-07 17:19:56 UTC <tgeeky> byorgey: WWJD with big-Oh information for every function in the Haskelleverse
2012-03-07 17:20:11 UTC <byorgey> ah, I see
2012-03-07 17:20:43 UTC <tgeeky> (I secretly think Jesus already knows the Big-oh information for them)
2012-03-07 17:20:59 UTC <tgeeky> well it's not so secret anymore
2012-03-07 17:21:14 UTC <byorgey> hehe
2012-03-07 17:21:40 UTC <fryguybob> In that case, he could know the constant factors too and not have any problem applying that information.
2012-03-07 17:22:10 UTC <tgeeky> fryguybob: well, my main question was, could you detect liars automatically
2012-03-07 17:22:33 UTC <tgeeky> if someone says their algorithim is (n/p + log p) where p = # processors
2012-03-07 17:22:50 UTC <byorgey> from reading that discussion, I agree the answer is is no
2012-03-07 17:23:26 UTC <tgeeky> byorgey: I think they convinced me in the case of distinguisng constant factors and whatnot
2012-03-07 17:23:27 UTC <fryguybob> Well when you start talking processors it is no for whole other reasons.
2012-03-07 17:24:02 UTC <tgeeky> byorgey: i'm still wondering about the parallel case :O
2012-03-07 17:24:07 UTC <byorgey> tgeeky: tangentially, you may be interested to know there is work on type systems which guarantee polynomial time
2012-03-07 17:25:13 UTC <byorgey> tgeeky: it's the same argument.  An algorithm which does some arbitrary thing for p < 10000 but after that is ~ n/p + log p  could still be O(n/p + log p)
2012-03-07 17:25:55 UTC <tgeeky> byorgey: even if you could never build a computer large enough to confirm it :O
2012-03-07 17:25:58 UTC <byorgey> and also the constant factor on the log p could be really really small so you can't even detect the difference between log p and p  for p < 10000, say
2012-03-07 17:26:46 UTC <byorgey> basically big-Oh notation doesn't give you strong enough guarantees
2012-03-07 18:51:33 UTC <fryguybob> *sigh*, I spent the last two hours of matlabbing to find a single type error.
2012-03-07 19:05:01 UTC <byorgey> oh no =(
2012-03-07 19:49:49 UTC <fryguybob> At least it is working now :D  http://www.cs.rochester.edu/u/ryates/temp/final4-crop.pdf
2012-03-07 20:06:48 UTC <byorgey> ooh, nice =)
2012-03-07 20:07:01 UTC <byorgey> you made that with diagrams, right? ;)
2012-03-07 20:08:16 UTC <fryguybob> byorgey: I wish.
2012-03-07 20:47:02 UTC <tgeeky> fryguybob: k-means clustering?
2012-03-07 20:48:54 UTC <alpounet> i had to use an awful gnuplot script + some hand-crafted export function to visualize the result of my kmeans library... :(
2012-03-07 20:50:06 UTC <alpounet> http://alpmestan.files.wordpress.com/2011/10/example.png ...
2012-03-07 20:52:06 UTC <tgeeky> eww
2012-03-07 20:52:44 UTC <alpounet> i know...
2012-03-07 20:52:51 UTC <alpounet> was the easiest solution though
2012-03-07 20:52:59 UTC <tgeeky> looks like a far-infrared shot of a strangely heated and zoomed in chessboard
2012-03-07 20:53:34 UTC <alpounet> that's not what comes to my mind immediately, but that could be it, yes!
2012-03-07 20:53:41 UTC <tgeeky> alpounet: a parallel solution in haskell is explained in the tutorial http://community.haskell.org/~simonmar/par-tutorial.pdf
2012-03-07 20:53:58 UTC <alpounet> yup i read about that a bit after i published my lib
2012-03-07 20:57:04 UTC <fryguybob> tgeeky: EM on Gaussian mixture model.
2012-03-07 20:57:57 UTC <tgeeky> fryguybob: by EM you mean electrostatics?
2012-03-07 21:00:18 UTC <fryguybob> tgeeky: No Expectation Maximization algorithm.
2012-03-07 21:00:37 UTC <byorgey> ACTION used to know what that meant when I took machine learning
2012-03-07 21:00:46 UTC <byorgey> then I promptly forgot.
2012-03-07 21:00:57 UTC <tgeeky> fryguybob: oh.
2012-03-07 21:01:38 UTC <tgeeky> EM would be electromagentism for me (because my *real* interest is physics), but I guessed that the picture could only be representing a static system somehow
2012-03-07 21:01:47 UTC <tgeeky> I would never have guessed that
2012-03-07 21:02:13 UTC <byorgey> EM = electron microscopy
2012-03-07 21:02:22 UTC <alpounet> tgeeky, you're a physicist?
2012-03-07 21:02:39 UTC <tgeeky> alpounet: yes, that's what I tell myself.
2012-03-07 21:02:43 UTC <byorgey> EM = elephant mimicry
2012-03-07 21:02:54 UTC <alpounet> tgeeky, then, what do you tell others?
2012-03-07 21:02:54 UTC <alpounet> :p
2012-03-07 21:03:41 UTC <tgeeky> alpounet: 1-physics/2-mathematics/3-computer science -est, which happens to be in ascending skill :(
2012-03-07 21:04:18 UTC <tgeeky> s/est/ist/
2012-03-07 21:04:41 UTC <alpounet> hah ok
2012-03-07 21:16:42 UTC <byorgey> mathematicsist?
2012-03-07 21:17:05 UTC <tgeeky> yes, why not. I like the sound if it.
2012-03-07 21:18:13 UTC <tgeeky> alpounet: Let's put it this way. I'm good enough to do some of the mathematics for #1 (quantum physics, string theory, etc), but bad enough that I don't trust myself to innovate beyond using other people's tools.
2012-03-07 21:18:49 UTC <tgeeky> I realize that (3), in which I have reasonably good formal training, is the best means by which I can be sure I'm not fooling myself.
2012-03-07 21:20:23 UTC <tgeeky> I'd guess that we're all of a similar mind, but it surprises the hell out of laypeople when you say to them, that the three (physics<->mathematics<->computer science) are much more deeply related than we think
2012-03-07 21:21:44 UTC <alpounet> yeah
2012-03-07 21:21:50 UTC <alpounet> i've been talking about that with many people
2012-03-07 21:23:20 UTC <alpounet> and i'm actually studying maths (algebraic topology, algebra, geometry, that kind of stuffs) but am also trying to develop strong skills in C-S
2012-03-07 21:23:35 UTC <tgeeky> I'm trying to get some really smart CS people (like byorgey, edwardk, etc, etc) to have more domain specific interest in physics in the near future
2012-03-07 21:24:17 UTC <tgeeky> byorgey: do you track your work hours like you do your infant hours?
2012-03-07 21:24:24 UTC <byorgey> tgeeky: hehe, no
2012-03-07 21:24:33 UTC <byorgey> I don't track infant hours anymore either
2012-03-07 21:25:02 UTC <alpounet> you've got some sort of project? i know someone who is trying to teach / make work some young minds in order to lead them to the understanding of modern physics theories together with strong maths and C-S skills
2012-03-07 21:25:19 UTC <tgeeky> alpounet: I have a project for a project.
2012-03-07 21:25:33 UTC <byorgey> ACTION is sorry to break it to tgeeky that he is unlikely to have much interest in physics anytime soon, beyond a vague general interest
2012-03-07 21:25:56 UTC <byorgey> ugh, this hold music is terrible.
2012-03-07 21:26:16 UTC <tgeeky> yeah, I know. But you do have an interest in diagrams, and I can *very* subtly manipulate you through future shared development.
2012-03-07 21:26:23 UTC <byorgey> haha, good point
2012-03-07 21:26:24 UTC <alpounet> tgeeky, uh? that is?
2012-03-07 21:26:39 UTC <alpounet> diagrams is the basis for the next best physical model of the universe, man!
2012-03-07 21:26:47 UTC <alpounet> how awesome is that
2012-03-07 21:26:55 UTC <tgeeky> alpounet: :)
2012-03-07 21:27:23 UTC <alpounet> tgeeky, so, what kind of stuffs do you have in mind? (if you're willing to talk about it)
2012-03-07 21:27:53 UTC <tgeeky> alpounet: I am certain that I'm more willing to talk about it than you are to listen. :)
2012-03-07 21:28:16 UTC <alpounet> i *highly* doubt it
2012-03-07 21:28:25 UTC <tgeeky> hehehe.
2012-03-07 21:29:25 UTC <tgeeky> The idea is to be able to publish documents (scientific papers, notes, e-books, etc) which, in addition to the information and lessons contained within, carry evidence or even proof of the veracity of the material.
2012-03-07 21:30:58 UTC <tgeeky> The obvious way to do this is to be able to construct sensory (visual, mostly) evidence of the concepts you're discussing, and evidence (or proof) of its correctness.
2012-03-07 21:32:28 UTC <tgeeky> So, in a nutshell, I want a physics book with interactive, animated, pretty pictures -- and editable source code so you can inspect it and see that you're not being fooled
2012-03-07 21:33:26 UTC <alpounet> hah that would be pretty awesome
2012-03-07 21:33:34 UTC <tgeeky> alpounet: do you know what a Feynman diagram is?
2012-03-07 21:33:36 UTC <byorgey> along with machine-checked proofs?
2012-03-07 21:33:45 UTC <alpounet> but what kind of "visual proof" would you stick there for e.g QFT?
2012-03-07 21:33:53 UTC <alpounet> tgeeky, yes
2012-03-07 21:33:54 UTC <tgeeky> byorgey: that part I don't know about, but Haskell is almost certainly the best place to start... I doubt it.
2012-03-07 21:33:56 UTC <byorgey> ACTION does not trust his ability to verify that he is not being fooled just by reading some source code
2012-03-07 21:34:33 UTC <tgeeky> byorgey: I don't either, so it's partially a mis-statement.
2012-03-07 21:35:52 UTC <tgeeky> alpounet: re: feynman diagrams.
2012-03-07 21:39:17 UTC <tgeeky> an acquitence of mine (http://visualphysics.org/) convinced me after several long arguments and discussions, that it's very easy to demonstrate a case where animated diagrams (not necessarily interactive) are *necessary* to see some kind of structure
2012-03-07 21:39:50 UTC <tgeeky> even in a simple case (like the doing physics with quaternions)
2012-03-07 21:40:43 UTC <alpounet> i agree with that
2012-03-07 21:40:51 UTC <alpounet> have kind of the same issue in maths
2012-03-07 21:41:28 UTC <tgeeky> alpounet: so the hope (or bet) is, that there's a shift of similar importance by going from (no visual intuition of QM mathematics) to (feynman diagrams), by going from (physics presented in journals -- necessarily static formats) to animated formats
2012-03-07 21:42:38 UTC <alpounet> i'd tend to agree yes
2012-03-07 21:44:13 UTC <tgeeky> byorgey: re: your objection earlier... The point is, I would expect a college educated person to be able to figure out the veracity of a chapter's worth of pictures (figures) if they are all coded in diagrams, versus all coded in... tex? python? mathematica? ... etc.
2012-03-07 21:44:42 UTC <tgeeky> more easily, that is
2012-03-07 21:46:14 UTC <alpounet> tgeeky, one day, when i'll have some free time in my life again, i might ping you to get good references to learn and actually understand modern physics theories
2012-03-07 21:46:37 UTC <alpounet> instead of just grasping some bits here and there by reading some stuffs on the internet
2012-03-07 21:46:37 UTC <tgeeky> alpounet: the best resource for a layperson I know, handsdown, is the Susskind lectures.
2012-03-07 21:47:04 UTC <tgeeky> alpounet: http://en.wikipedia.org/wiki/Leonard_Susskind#Lectures
2012-03-07 21:47:23 UTC <alpounet> video?!
2012-03-07 21:47:25 UTC <alpounet> awesome
2012-03-07 21:47:52 UTC <tgeeky> alpounet: taken in order, though, be prepared to spend ~ 10 days on it.
2012-03-07 21:48:02 UTC <tgeeky> (i mean days in hours)
2012-03-07 21:48:31 UTC <tgeeky> (13 lecture series) * (avg of 10 lectures each) * (avg of 1 hour 45 minutes each) = ~ 10 days in hours
2012-03-07 21:49:02 UTC <alpounet> i'm not in a hurry at all
2012-03-07 21:49:25 UTC <tgeeky> byorgey: speaking of electron microscopy: http://www.shef.ac.uk/mediacentre/2012/electron-microscope-ptychography-revolution.html
2012-03-07 21:50:29 UTC <tgeeky> what a silly tease that site is, with the tiny pretty little pictures.
2012-03-07 21:53:20 UTC <alpounet> tgeeky, guessing from the lectures title, i guess Susskind starts back from the beginning of mechanics
2012-03-07 21:53:41 UTC <alpounet> 'cause i forgot a bit about relativity since i studied it a bit a few years ago, for example
2012-03-07 21:55:31 UTC <tgeeky> alpounet: yeah. The lectures are supposed to form, from start to finish, the "theoretical minimum" needed to understand the modern subject (string, m-, brane, loop, AdS/CFT)
2012-03-07 21:56:12 UTC <alpounet> awesome
2012-03-07 21:56:55 UTC <alpounet> hm, so which of the 3 fields did you actually study?
2012-03-07 21:57:19 UTC <tgeeky> my undergrad is in CS, and I got a minor in physics.
2012-03-07 21:57:39 UTC <tgeeky> I took a dozen or so graduate classes in physics and CS too
2012-03-07 21:58:02 UTC <tgeeky> and learned a lot of the modern physics from lectures (incl. susskind), papers, journals
2012-03-07 21:58:41 UTC <alpounet> ok
2012-03-07 21:58:49 UTC <alpounet> and you're now working in which of these? :P
2012-03-07 21:58:56 UTC <tgeeky> none of the above
2012-03-07 21:59:16 UTC <tgeeky> last job was IT/CS support for a College
2012-03-07 21:59:26 UTC <alpounet> yeah, makes sense hah
2012-03-07 22:06:45 UTC <tgeeky> byorgey: woo, got an e-mail from github. some good action!
2012-03-09 04:46:56 UTC <tgeeky> byorgey: I presume that dmwit's updating and fixing of GTK-related libs is a highly welcomed step along to 0.5 release
2012-03-09 12:11:01 UTC <alpounet> yeah, byorgey was saying he was waiting for that to release diagrams 0.5
2012-03-09 18:09:07 UTC <byorgey> tgeeky, alpounet: yep, going to do the release right now!
2012-03-09 18:10:37 UTC <alpounet> yay!
2012-03-09 18:10:41 UTC <alpounet> ACTION holds his breath
2012-03-09 18:21:08 UTC <fryguybob> ACTION hits refresh...
2012-03-09 18:35:50 UTC <byorgey> new website is up now
2012-03-09 18:36:16 UTC <byorgey> doing final checks on packages before upload
2012-03-09 18:44:18 UTC <byorgey> uploaded!
2012-03-09 18:44:28 UTC <byorgey> now to send out the announcement
2012-03-09 18:47:36 UTC <fryguybob> byorgey: I'm on "break" this next week so I should be able to find some time to work on some stuff.  One thing I will be sure to do is get gtk2hs on Windows going again.
2012-03-09 18:48:07 UTC <byorgey> fryguybob: awesome!
2012-03-09 18:53:38 UTC <byorgey> diagrams 0.5 is now officially released!  let the party begin!
2012-03-09 19:53:26 UTC <tgeeky> ACTION lites the bender-shaped cigars
2012-03-09 19:54:16 UTC <tgeeky> --> is this still right? NOTE: the most recent release of gtk2hs does not build under GHC 7.4.1. To get diagrams-cairo to work under GHC 7.4.1 you'll have to install the latest development version of gtk2hs
2012-03-09 19:54:54 UTC <ClaudiusMaximus> gallery does seem not to show images here (thumbnails seem to appear for a fraction of a second then vanish)
2012-03-09 19:55:23 UTC <ClaudiusMaximus> Iceweasel/3.5.16 (like Firefox/3.5.16) on debian stable
2012-03-09 19:57:12 UTC <ClaudiusMaximus> works fine in Iceweasel 10.0.2 on debian testing
2012-03-09 20:53:44 UTC <ClaudiusMaximus> ACTION starts working on a ridiculously overengineered Mandelbrot2.lhs
2012-03-09 20:54:53 UTC <tgeeky> boooo
2012-03-09 20:55:29 UTC <ClaudiusMaximus> hm?
2012-03-09 20:56:17 UTC <tgeeky> ClaudiusMaximus: The mandlebrot fractal makes me unhappy :o
2012-03-09 20:57:51 UTC <ClaudiusMaximus> tgeeky: why?
2012-03-09 20:58:30 UTC <ClaudiusMaximus> (my latest version, using fixed point, 4MB animgif: http://claudiusmaximus.goto10.org/g/mandelbrot/ansibrot.gif )
2012-03-09 20:59:42 UTC <tgeeky> ClaudiusMaximus: because it's the posterchild for all fractals these days, and I like my fractals with more structure and less reliance on Real/Complex magic :O
2012-03-09 21:00:21 UTC <tgeeky> that animgif is pretty trippy
2012-03-09 21:01:09 UTC <ClaudiusMaximus> more structure?
2012-03-09 21:01:41 UTC <tgeeky> ClaudiusMaximus: yeah, like the circle fractal has a discrete symmetry group behind it, and can be coded in the Integers :o
2012-03-09 21:02:53 UTC <tgeeky> ClaudiusMaximus: just stumbled across this: http://blog.hvidtfeldts.net/
2012-03-09 21:02:56 UTC <tgeeky> that's quite beautiful
2012-03-09 21:04:09 UTC <ClaudiusMaximus> ah yeah, seen that blog before - really nice
2012-03-09 21:51:13 UTC <byorgey> tgeeky: oops, where is that?
2012-03-09 22:07:14 UTC <byorgey> ClaudiusMaximus: very strange (re: gallery images). they are just SVG images inside <a> and <div> tags
2012-03-09 22:07:44 UTC <byorgey> seems pretty straightforward for a browser.  but then again browsers are never straightforward, are they
2012-03-09 22:09:03 UTC <byorgey> tgeeky: thanks, fixed (the diagrams-cairo package description)
2012-03-09 22:12:08 UTC <ClaudiusMaximus> wild guess might be multple nodes with the same id ? or a browser bug...
2012-03-09 22:12:33 UTC <ClaudiusMaximus> but it seems to work with non-ancient browser, so i wouldn't worry
2012-03-09 22:16:43 UTC <byorgey> oh, there are multiple nodes with the same id
2012-03-09 22:17:00 UTC <byorgey> I guess I am supposed to use "class" instead of "id"
2012-03-09 23:00:25 UTC <mgsloan> awesome to see the release go out!
2012-03-09 23:02:02 UTC <byorgey> =D
2012-03-09 23:02:38 UTC <byorgey> now I can finally stop thinking about infrastructure and get back to adding awesome features =)
2012-03-09 23:02:55 UTC <alpounet> like?
2012-03-09 23:03:04 UTC <alpounet> ACTION is curious
2012-03-09 23:04:30 UTC <byorgey> off the top of my head: SVG backend; better tools for manipulating paths; grid layout; more tree layout algorithms
2012-03-09 23:04:48 UTC <byorgey> Andy Gill and I are hopefully also going to think more carefully about how to support animation + interactivity well
2012-03-09 23:06:04 UTC <mgsloan> cool!  I hope my toy framework is a good first step
2012-03-09 23:06:44 UTC <mgsloan> I realized when writing gtk-toy-diagrams that once you had composable interactivity to diagrams, it becomes a GUI framework
2012-03-09 23:07:00 UTC <byorgey> sure, why not? =)
2012-03-09 23:07:28 UTC <byorgey> though I don't think I really want to support everything that comes with an actual GUI framework.
2012-03-09 23:07:35 UTC <mgsloan> oh totally
2012-03-09 23:08:27 UTC <mgsloan> but stuff like sliders and buttons are really short after you extract all of the stuff related to managing some 2D thing
2012-03-09 23:09:08 UTC <alpounet> haha that's awesome
2012-03-09 23:09:45 UTC <mgsloan> other stuff to work on would be maths on splines.  Lots of cool diagrams will be possible then
2012-03-09 23:10:01 UTC <fryguybob> mgsloan: What's missing?
2012-03-09 23:10:04 UTC <mgsloan> and more spline representations (with approximate conversions to bezier)
2012-03-09 23:10:13 UTC <alpounet> byorgey, hopefully you'll be able to use scoutess as a buildbot for, at most, diagrams 1.0 :P
2012-03-09 23:10:15 UTC <byorgey> you mean like e.g. curve offset?
2012-03-09 23:10:21 UTC <mgsloan> byorgey - bingo
2012-03-09 23:10:27 UTC <byorgey> alpounet: sounds great
2012-03-09 23:10:27 UTC <mgsloan> boolean operations too
2012-03-09 23:10:56 UTC <byorgey> mgsloan: yeah, I definitely want to support all of that eventually
2012-03-09 23:11:05 UTC <mgsloan> I have a lot of stuff to work on, but I'm hoping to take a swing at some of these things in a year orso
2012-03-09 23:11:10 UTC <mgsloan> (within a year)
2012-03-09 23:11:23 UTC <byorgey> mgsloan: great, I'll quote you on that ;)
2012-03-09 23:11:29 UTC <mgsloan> haha, cool!
2012-03-09 23:13:15 UTC <mgsloan> It's definitely not an easy problem, but something that I've worked on before.  Might be able to convince some of my old lib2geom collaborators to help out, too.  They know a decent amount of Haskell.
2012-03-09 23:14:28 UTC <mgsloan> also, functions from R2 -> Double, and R2 -> R2 are useful for 2d diagrams.  These are things like NURB patches, for example.
2012-03-09 23:15:02 UTC <mgsloan> if you can get a control-point representation of deformations, then you can compose them with a Double -> R2 curve, and get out a deformed Double -> R2 curve
2012-03-09 23:15:07 UTC <byorgey> what's R2 -> R@ ?
2012-03-09 23:15:16 UTC <byorgey> R2
2012-03-09 23:15:38 UTC <byorgey> sounds neat!
2012-03-09 23:16:07 UTC <mgsloan> lemme take a screenshot of some of the lib2geom toys..
2012-03-09 23:18:44 UTC <fryguybob> mgsloan: So a projection of a path on a NURBS patch?
2012-03-09 23:18:51 UTC <mgsloan> yup
2012-03-09 23:27:36 UTC <mgsloan> www.mgsloan.com/lib2geom.png
2012-03-09 23:29:07 UTC <mgsloan> brb!
2012-03-09 23:38:03 UTC <fryguybob> mgsloan: For offsets what uses are you interested in?
2012-03-09 23:59:33 UTC <mgsloan> well, byorgey's mentioned using that for bounding stroked paths properly
2012-03-09 23:59:46 UTC <mgsloan> of course, computing the full offset path would be overkill for that
2012-03-10 00:00:11 UTC <mgsloan> one toy I didn't show is that something like offset-path can be used for path-repeated-along-path
2012-03-10 00:00:14 UTC <byorgey> mgsloan: really? what would you do instead?
2012-03-10 00:00:54 UTC <byorgey> path-repeated-along-path, you mean, e.g. I could have a wibbly square?
2012-03-10 00:01:50 UTC <mgsloan> instead I'd look for all of the points of discontinuous derivative / turning points.  Then take the most extreme of these, and add the offset, with the sign / direction of the extremeness of the point.
2012-03-10 00:01:56 UTC <mgsloan> byorgey - bingo
2012-03-10 00:02:17 UTC <mgsloan> or if you have a path that looks like a chunk of rope, instant rope.
2012-03-10 00:02:49 UTC <byorgey> awesome =)
2012-03-10 00:03:04 UTC <byorgey> mgsloan: oh, for just doing bounding, I agree
2012-03-10 00:03:21 UTC <mgsloan> http://inkscape.org/screenshots/gallery/inkscape-0.45-patternalongpath.png
2012-03-10 00:03:25 UTC <byorgey> mgsloan: but what about actually taking a path and turning it into a path which traces the outline of its stroked version?
2012-03-10 00:03:28 UTC <mgsloan> (lib2geom is the library inside inkscape)
2012-03-10 00:03:39 UTC <ClaudiusMaximus> ACTION waits for his mandelbrot set to render...
2012-03-10 00:03:47 UTC <alpounet> that would be so awesome mgsloan !
2012-03-10 00:04:24 UTC <byorgey> mgsloan: yeah, looks awesome
2012-03-10 00:04:24 UTC <fryguybob> sorry, I'm back reading.
2012-03-10 00:04:38 UTC <byorgey> can we make lib2geom bindings?
2012-03-10 00:04:55 UTC <byorgey> although ultimately of course it would be nicer to have some of this stuff in pure Haskell.
2012-03-10 00:04:57 UTC <mgsloan> we could, it's heavily C++ though
2012-03-10 00:05:02 UTC <mgsloan> there are swig python bindings
2012-03-10 00:05:34 UTC <mgsloan> yeah, the core lib2geom team got kinda fed up with C++ and haven't worked on it in a while.  and we all like haskell
2012-03-10 00:05:40 UTC <alpounet> hmm
2012-03-10 00:05:49 UTC <alpounet> there's a project for binding to C++
2012-03-10 00:05:51 UTC <alpounet> libraries
2012-03-10 00:06:05 UTC <alpounet> a guy mentionned it on #haskell a week or two ago
2012-03-10 00:06:07 UTC <byorgey> mgsloan: I see =)
2012-03-10 00:06:24 UTC <mgsloan> but bindings could be a good stopgap!
2012-03-10 00:27:28 UTC <fryguybob> Interesting. So many design decisions to make :D.
2012-03-10 00:30:16 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/mandelbrot/diagrams_Mandelbrot2_2e-3.png (3m15s, the one with 1e-3 size threshold is still calculating after 27m...)
2012-03-10 00:31:12 UTC <byorgey> ClaudiusMaximus: nice =)
2012-03-10 00:33:06 UTC <fryguybob> Excellent.
2012-03-10 00:54:01 UTC <mgsloan> byorgey - mind skimming an exceptionally pointless blog post?
2012-03-10 00:54:15 UTC <mgsloan> (pre-postage)
2012-03-10 00:57:38 UTC <mgsloan> http://www.mgsloan.com/Pointless_Plumbers_WIP.html
2012-03-10 00:58:08 UTC <mgsloan> (anyone curious about making pointfree style ^ 2, check this out)
2012-03-10 00:58:33 UTC <mgsloan> mostly I'm looking for any criticisms of the blog post style itself rather than the library
2012-03-10 00:58:44 UTC <mgsloan> although criticisms of the symbol choices would be good too
2012-03-10 01:10:19 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/mandelbrot/diagrams_Mandelbrot2_1e-3.png (took just over an hour in the end..)
2012-03-10 01:15:51 UTC <byorgey> mgsloan: "The function definitions are exactly the same as in the pair plumber, except with ($) instead of (,)"  -- you mean "instead of (*)" ?
2012-03-10 01:20:21 UTC <byorgey> mgsloan: nice, I like it
2012-03-10 02:25:28 UTC <tgeeky> lol. Rock _|_. lol!
2012-03-10 03:33:33 UTC <mgsloan> byorgey - cool! good to hear.  No, I mean (,), because the composition plumbers combine the results with ($) whereas product plumbers combine their results with (,)
2012-03-10 03:33:52 UTC <mgsloan> did anyone else have comments (I got disconnected about 3 min after byorgey's comments)
2012-03-10 03:36:05 UTC <byorgey> mgsloan: oh, I see, but the operator symbol for composition plumbers is also $ wheras for products it's *
2012-03-10 03:36:22 UTC <byorgey> mgsloan: no, no one else had any comments
2012-03-10 03:36:24 UTC <mgsloan> yup
2012-03-10 03:36:32 UTC <byorgey> none that they shared in #diagrams at least =)
2012-03-10 03:36:40 UTC <mgsloan> I'll make that bit clearer, thanks!
2012-03-10 03:36:53 UTC <byorgey> hiya vyom
2012-03-10 03:37:02 UTC <vyom> byorgey: hi
2012-03-10 03:37:22 UTC <vyom> thanks for the investigation on the stack overflow issue
2012-03-10 03:37:34 UTC <byorgey> vyom: sure
2012-03-10 03:37:48 UTC <mgsloan> I'm not too sure about plumbers - either people won't use them, or people will eventually overuse them and everyone will be like "If only mgsloan didn't invent plumbers!  We wouldn't have these symbol soups!"
2012-03-10 03:38:01 UTC <byorgey> hehehe
2012-03-10 03:38:17 UTC <byorgey> I could see myself using them sparingly
2012-03-10 03:38:21 UTC <mgsloan> me too
2012-03-10 03:38:34 UTC <byorgey> but not to do things quite as dense as the examples you give in the blog post
2012-03-10 03:38:36 UTC <vyom> been slow on the hacking lately.. my sister is in town :).. but i have today evening and tomorrow to  work on diagrams-svg
2012-03-10 03:38:50 UTC <mgsloan> yeah, only one plumber at a time
2012-03-10 03:38:51 UTC <byorgey> vyom: oh, excellent!
2012-03-10 03:39:12 UTC <byorgey> vyom: let me know how I can help
2012-03-10 03:39:17 UTC <byorgey> now that the 0.5 release is done
2012-03-10 03:39:50 UTC <byorgey> oh, in particular I will take a look at a way to expose more of the tree structure to the rendering interface, so you don't have to replicate transformations at each leaf etc.
2012-03-10 03:39:58 UTC <vyom> i had a question about the way you go about writing a backend..
2012-03-10 03:40:00 UTC <vyom> https://github.com/deepakjois/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L62
2012-03-10 03:40:15 UTC <vyom> i am not too sure what is going in those 4 lines..
2012-03-10 03:40:41 UTC <vyom> esp the first two..
2012-03-10 03:41:06 UTC <vyom> what does "data Render  SVG R2 = R (R.Render)" really do
2012-03-10 03:41:53 UTC <byorgey> vyom: sorry, I need to go, and I think if I tried to give a quick answer I would just confuse you =)
2012-03-10 03:41:59 UTC <vyom> np
2012-03-10 03:42:03 UTC <byorgey> I will write up an explanation tomorrow
2012-03-10 03:42:05 UTC <vyom> ok
2012-03-10 03:42:07 UTC <vyom> thanks
2012-03-10 03:42:11 UTC <byorgey> sure
2012-03-10 03:42:16 UTC <vyom> i will dig in anyway..
2012-03-10 03:43:12 UTC <byorgey> vyom: google "associated types", and read the source of Graphics.Rendering.Diagrams.Core from diagrams-core
2012-03-10 03:43:26 UTC <vyom> byorgey: will do thanks
2012-03-10 04:15:45 UTC <fryguybob> vyom: Is it making sense?
2012-03-10 04:16:52 UTC <vyom> fryguybob: yes.. kinda. At least I have an intuitive grasp of it. I read some code for the Show backend in diagrams-lib
2012-03-10 04:18:31 UTC <vyom> i am still a bit puzzled about the need for a "render" type and a "result" type
2012-03-10 04:19:22 UTC <vyom> trying to figure out for an SVG backend.. what would be the corresponding equivalents
2012-03-10 04:21:05 UTC <vyom> it seems possible that the "render" type and "result" *could* be the same
2012-03-10 04:22:25 UTC <fryguybob> Well the Render is a data type.
2012-03-10 04:23:50 UTC <fryguybob> I suppose you could say   type Result SVG R2 = Render SVG R2
2012-03-10 04:25:28 UTC <vyom> ya.. in the way i am thnking about it.. it could work that way since the "Svg" data type i am using to represent an SVG document can work for both
2012-03-10 04:26:24 UTC <vyom> i could also say Render SVG R2 = Svg Result SVG R2 = Svg
2012-03-10 04:26:40 UTC <vyom> i mean "Render SVG R2 = Svg" and
2012-03-10 04:26:55 UTC <vyom> "Result SVG R2 = Svg"
2012-03-10 04:28:19 UTC <vyom> or maybe not.. would it be a syntax error to say "data Render SVG R2 = Svg" ?
2012-03-10 04:28:22 UTC <fryguybob> vyom: You would need a constructor name for the data type
2012-03-10 04:28:40 UTC <vyom> fryguybob: ya ok.. got it..
2012-03-10 04:28:41 UTC <fryguybob> data Render SVG R2 = R Svg
2012-03-10 04:30:04 UTC <fryguybob> doRender takes options and the Rendered data spits out a result.
2012-03-10 04:30:41 UTC <vyom> yup makes sense..
2012-03-10 04:32:10 UTC <vyom> fryguybob: i guess i was just a bit confused by the way the Render data type in Graphics.Rendering.SVG module was modeled
2012-03-10 04:33:05 UTC <fryguybob> newtype Render = R { unR :: T2 -> B.Builder } -- That one?
2012-03-10 04:33:10 UTC <vyom> yes
2012-03-10 04:33:48 UTC <vyom> i dont quite understand why it need to be modelled as a function that takes a T2 and then spits out a Builder.. is that indirection necessary
2012-03-10 04:34:26 UTC <fryguybob> Humm what is T2 there again?
2012-03-10 04:34:58 UTC <vyom> i am guessing it is a diagrams data type
2012-03-10 04:35:17 UTC <vyom> not sure exactly what
2012-03-10 04:35:52 UTC <fryguybob> http://projects.haskell.org/diagrams/doc/Diagrams-TwoD-Types.html#t:T2
2012-03-10 04:36:56 UTC <vyom> ok..
2012-03-10 04:39:24 UTC <fryguybob> So I think that is the first argument to the render in the Renderable class.
2012-03-10 04:41:05 UTC <mgsloan> T2 is a transformation
2012-03-10 04:41:36 UTC <vyom> hmm interesting.. so I guess the doRender "ShowBackend" doesnt care about the transformation
2012-03-10 04:41:46 UTC <vyom> doRender in "ShowBackend"
2012-03-10 04:43:10 UTC <vyom> but the SVG backend needs to take that into account.. and the Cairo backend uses a State monad to track it
2012-03-10 04:43:18 UTC <vyom> so it kinda makes sense
2012-03-10 04:44:54 UTC <fryguybob> right in the Cairo backend that happens in withStyle
2012-03-10 04:47:31 UTC <vyom> fryguybob: ya.. i guess it is not the state monad.. but there is a transformation happening on the C.Render class that is being used
2012-03-10 04:47:48 UTC <vyom> cool.. makes sense now
2012-03-10 04:49:14 UTC <fryguybob> vyom: Well it is the state of calling out to Cairo :D.  In diagrams-postscript I follow how Cairo does it and write out the postscript transformations at that point.
2012-03-10 04:50:20 UTC <vyom> hmm.. i havent looked at that code.. will look it.. i might end up using that approach
2012-03-10 04:50:53 UTC <fryguybob> This is also why there is a lot of redundency in the output.  Which is what byorgey was refering to with "exposing tree structure"
2012-03-10 04:52:02 UTC <fryguybob> I started to address this by using a State monad, but that isn't quite enough without building up an AST as you go.
2012-03-10 04:52:26 UTC <fryguybob> So we need some middle ground.
2012-03-10 04:52:52 UTC <fryguybob> ACTION turns in for the night.
2012-03-10 04:52:58 UTC <vyom> hmm.. on a tangential note.. diagrams-postscript query in Google does not return me the darcs repo on the first page :)
2012-03-10 04:53:53 UTC <fryguybob> :D
2012-03-10 04:54:13 UTC <fryguybob> http://patch-tag.com/r/fryguybob/diagrams-postscript/
2012-03-10 04:55:28 UTC <vyom> ya found it .. just thought it was strange :)
2012-03-10 19:26:41 UTC <byorgey> ClaudiusMaximus: does the gallery work now in Iceweasel/3.5.16 ?
2012-03-10 19:34:54 UTC <byorgey> vyom: Render is for building up compositional rendering operations; it has to be a monoid, and by default you just need to be able to map primitives into the Render type and then they get combined by mappend.
2012-03-10 19:35:12 UTC <byorgey> Result is for the final output of the rendering.  It might not be compositional at all.
2012-03-10 19:35:32 UTC <byorgey> vyom: it's perfectly legitimate for Render and Result to be the same type.
2012-03-10 19:36:18 UTC <byorgey> however, Render annoyingly needs to come with its own constructor, which is just for technical reasons to help type inference (it makes Render injective).
2012-03-10 19:36:32 UTC <byorgey> ACTION should write about all this in the user manual
2012-03-10 19:37:24 UTC <vyom> byorgey: yes.. i figured that one out
2012-03-10 19:38:32 UTC <vyom> i am converting diagrams-svg to use blaze-svg now.. before i move on to making it more complete
2012-03-10 19:38:41 UTC <byorgey> great, sounds good
2012-03-10 19:39:35 UTC <vyom> it does not help that this arrived yesterday https://plus.google.com/111205473717837061873/posts
2012-03-10 19:40:18 UTC <vyom> coding and improving my muscle memory at the same time is not a good idea.. :)
2012-03-10 19:41:55 UTC <byorgey> vyom: wait, what arrived yesterday?
2012-03-10 19:42:16 UTC <vyom> the keyboard with no inscriptions on it :)
2012-03-10 19:42:32 UTC <byorgey> haha, awesome =)
2012-03-10 19:42:43 UTC <byorgey> I don't see that when I follow that link though
2012-03-10 19:43:02 UTC <vyom> https://lh3.googleusercontent.com/-SOtIfnCGfmw/T1ut3-rYXVI/AAAAAAAAD8I/lMSQ_vtTW_c/s903/20120310_095447.jpg
2012-03-10 19:43:35 UTC <byorgey> ahh, nice
2012-03-10 19:43:41 UTC <byorgey> that is very... zen
2012-03-10 19:49:11 UTC <ClaudiusMaximus> byorgey: sadly not :(
2012-03-10 19:49:56 UTC <ClaudiusMaximus> byorgey: still the same behaviour - thumbnail broken image icons appear at the right size, but vanish down to tiny nothingness when the images load (or at least that's what it feels like)
2012-03-10 19:50:08 UTC <byorgey> ClaudiusMaximus: hmm, well, I fixed it so the images etc. all use class=... instead of id=...
2012-03-10 19:50:15 UTC <byorgey> so I guess there is something else wrong
2012-03-10 19:51:44 UTC <ClaudiusMaximus> i'm guessing a browser bug
2012-03-10 19:53:40 UTC <ClaudiusMaximus> seeing as it worked fine in iceweasel 10
2012-03-10 19:53:53 UTC <ClaudiusMaximus> but, in case you're feeling adventurous... http://validator.w3.org/check?verbose=1&uri=http%3A%2F%2Fprojects.haskell.org%2Fdiagrams%2Fgallery.html
2012-03-10 19:55:03 UTC <ClaudiusMaximus> i can try some tests after dinner perhaps, a simple test page locally...  time to cook now
2012-03-10 20:07:40 UTC <byorgey> ClaudiusMaximus: thanks, I'll take a look
2012-03-10 20:19:19 UTC <tgeeky> byorgey: hehe. empty your mind. empty your keyboard.
2012-03-10 20:20:51 UTC <luite> oh looks like I missed the diagrams 0.5 release
2012-03-10 20:21:15 UTC <byorgey> luite: you didn't miss it, it's still there =)
2012-03-10 20:21:26 UTC <luite> hehe
2012-03-10 20:22:17 UTC <luite> I didn't have a working internet connection in switzerland :(
2012-03-10 20:25:21 UTC <byorgey> well that wasn't very nice of it
2012-03-10 20:26:37 UTC <luite> at least they still had snow and cheese
2012-03-10 20:27:30 UTC <byorgey> hmm, that ALMOST makes up for it
2012-03-10 20:30:48 UTC <byorgey> ACTION goes on an HTML validating rampage
2012-03-10 20:32:04 UTC <luite> don't add meaningless alt tags to all images, unless you want to annoy people with screenreaders :)
2012-03-10 20:32:46 UTC <tgeeky> Hello, ALT ALT ALT ALT ALT Brent ALT ALT ALT ALT ALT.
2012-03-10 20:34:58 UTC <byorgey> oh, ok =)
2012-03-10 20:44:01 UTC <fryguybob> ACTION visits the gallery with links.
2012-03-10 22:20:57 UTC <byorgey> ACTION is realizing that all the HTML he knows is actually from like 1995 and totally invalid now
2012-03-10 22:21:25 UTC <byorgey> there's no <center> tag anymore! or <font>! or border attributes on <img> tags!
2012-03-10 22:33:53 UTC <byorgey> ClaudiusMaximus: I just pushed out a bunch of updates, as far as I know the only validation errors now are missing alt tags
2012-03-10 22:56:48 UTC <fryguybob> ACTION checks links again and sees the alt tags.
2012-03-10 22:58:22 UTC <fryguybob> byorgey: BTW the svg file for Mandelbrot is rather ... large.
2012-03-10 23:00:09 UTC <byorgey> oh! so it is.
2012-03-10 23:00:14 UTC <byorgey> I wonder why.
2012-03-10 23:00:26 UTC <fryguybob> Was it from cairo?
2012-03-10 23:00:30 UTC <byorgey> yeah
2012-03-10 23:01:14 UTC <fryguybob> ACTION looks at the svg source
2012-03-10 23:01:23 UTC <byorgey> all the other gallery examples are between 30k-300k
2012-03-10 23:01:29 UTC <byorgey> mandelbrot is 3M.
2012-03-10 23:02:44 UTC <byorgey> hmm. it looks like it's just full of paths.
2012-03-10 23:02:49 UTC <fryguybob> byorgey: each circle is four beziers and a transform.
2012-03-10 23:02:56 UTC <byorgey> which I presume are segments of Bezier approximations to... right.
2012-03-10 23:03:21 UTC <fryguybob> and a style
2012-03-10 23:03:36 UTC <byorgey> so how do we make the output smaller?
2012-03-10 23:04:16 UTC <fryguybob> Share all the styles.  Name basic shapes and reference those names?
2012-03-10 23:04:24 UTC <byorgey> another question is whether the gallery should use SVG or PNG.
2012-03-10 23:04:29 UTC <fryguybob> Not sure what SVG allows.
2012-03-10 23:04:56 UTC <byorgey> fryguybob: right, sharing the styles would help, which is what I intend to work on next
2012-03-10 23:05:14 UTC <fryguybob> I know postscript is just as bad right now, but if I pass it through eps2eps I think it gets much smaller. (I'll check)
2012-03-10 23:06:51 UTC <fryguybob> Yeah eps2eps goes from 4.8M to 601k
2012-03-10 23:07:26 UTC <fryguybob> epstopdf goes to 181k.
2012-03-10 23:09:12 UTC <fryguybob> eps2eps is just applying all the transformations so it still has N*4 segments, the pdf is a compressed version of that.
2012-03-10 23:12:41 UTC <byorgey> I also wonder if there is a way we could "remember" that a certain shape is actually a (transformed) circle and allow backends to make use of that information if they have a better native way to draw circles.
2012-03-10 23:13:10 UTC <byorgey> we used to have circles as primitives but replaced them with paths for consistency.
2012-03-10 23:13:33 UTC <byorgey> so basically I want to have our cake and eat it too.
2012-03-10 23:13:44 UTC <fryguybob> byorgey: Yeah, I'm not sure with SVG how you reference id'ed elements (can you do it without JS?)
2012-03-10 23:13:45 UTC <ClaudiusMaximus> byorgey: now i get tiny things i can click on (but no images)
2012-03-10 23:14:06 UTC <byorgey> ClaudiusMaximus: bizarre
2012-03-10 23:14:16 UTC <ClaudiusMaximus> byorgey: no images visible on the pages i get to when clicking (with iceweasel 3.5 - i guess it doesn't do svg)
2012-03-10 23:14:21 UTC <byorgey> ClaudiusMaximus: how about the logo at the top of the page? can you see an image there?
2012-03-10 23:14:29 UTC <byorgey> yeah, I was just going to ask if it supports SVG
2012-03-10 23:14:30 UTC <ClaudiusMaximus> yep, the funky letters
2012-03-10 23:14:36 UTC <byorgey> ok, that one is PNG
2012-03-10 23:14:56 UTC <byorgey> fryguybob: I know approximately zero about SVG
2012-03-10 23:15:29 UTC <fryguybob> In postscript it should be pretty easy.
2012-03-10 23:15:41 UTC <ClaudiusMaximus> fryguybob: there's <defs> and xlink:href and <use> stuff, it's fiddly
2012-03-10 23:15:48 UTC <fryguybob> ok
2012-03-10 23:16:19 UTC <fryguybob> For postscript you just wrap what you want to save in a proc and call it later.
2012-03-10 23:17:43 UTC <ClaudiusMaximus> there's also xml entities (like macros) that you can define for repeated elements
2012-03-10 23:19:38 UTC <ClaudiusMaximus> byorgey: it does support SVG (eg: http://claudiusmaximus.goto10.org/games/hearteroids.svg works here in the same iceweasel version), so i guess it seems there's something off about embedded in pages...
2012-03-10 23:20:03 UTC <fryguybob> I saw something about wrapping in <object> tags.
2012-03-10 23:20:51 UTC <ClaudiusMaximus> gotta sleep, been awake almost 30 hours... - zzz
2012-03-10 23:21:39 UTC <fryguybob> http://e.metaclarity.org/52/cross-browser-svg-issues/
2012-03-10 23:21:55 UTC <byorgey> ClaudiusMaximus: hmm, strange.  goodnight!
2012-03-10 23:23:20 UTC <byorgey> fryguybob: yikes
2012-03-10 23:23:54 UTC <fryguybob> I was hoping ClaudiusMaximus could view that and say which ones showed up for him.
2012-03-10 23:23:56 UTC <byorgey> oh, now I remember why I used SVG, because they look better when scaled down on the main gallery page
2012-03-10 23:24:33 UTC <byorgey> I suspect to get the same nice-looking thumbnails as PNGs I would have to actually generate the images at two different scales in the first place
2012-03-10 23:25:12 UTC <byorgey> anyway, I guess I'll take down the Mandelbrot one for the moment
2012-03-10 23:25:25 UTC <fryguybob> byorgey: So if we can know that we are at a subdiagram for the first time we could emit a proc and when we get to the same subdiagram (with some different transform or style) we would call the proc.
2012-03-10 23:25:59 UTC <byorgey> fryguybob: oh, now you are getting really fancy!
2012-03-10 23:26:20 UTC <fryguybob> :D
2012-03-10 23:26:21 UTC <byorgey> that would require observable sharing
2012-03-10 23:26:34 UTC <byorgey> but I guess we could just try using Andy Gill's package for that
2012-03-10 23:27:02 UTC <ClaudiusMaximus> fryguybob: <img src="test.svg" alt="sum_{i=1}^{100}i^3" /> failes; <object type="image/svg+xml" data="test.svg"></object> workes
2012-03-10 23:27:19 UTC <ClaudiusMaximus> (and the object + img version workes too)
2012-03-10 23:27:23 UTC <ClaudiusMaximus> ACTION goes bed
2012-03-10 23:27:36 UTC <fryguybob> ClaudiusMaximus: Thanks!
2012-03-10 23:28:04 UTC <fryguybob> byorgey: We could compare postscript values.  So if something renders as  0 0 1 1 C  every time we know it is the same.
2012-03-10 23:28:39 UTC <byorgey> fryguybob: true
2012-03-10 23:28:46 UTC <byorgey> seems a bit roundabout
2012-03-10 23:29:02 UTC <byorgey> but that way you can even recover sharing that was never there in the first place =D
2012-03-10 23:29:08 UTC <fryguybob> byorgey: indeed
2012-03-10 23:30:11 UTC <byorgey> so while generating postscript, maintain a hash set of postscript snippets... ?
2012-03-10 23:30:13 UTC <fryguybob> Another way would be to leverage attributes like id tags and share at that level (assume id's are unique)
2012-03-10 23:30:20 UTC <fryguybob> byorgey: yeah
2012-03-10 23:31:02 UTC <byorgey> fryguybob: I don't think relying on id tags is a good idea. it puts too much burden on the user, and it would be too easy to accidentally have the same id tags on things that are not the same
2012-03-10 23:31:48 UTC <fryguybob> Yeah, agda-diagrams and prove id's unique.
2012-03-10 23:32:06 UTC <byorgey> hehe
2012-03-10 23:32:35 UTC <byorgey> but in agda-diagrams you never actually generate graphics so it doesn't matter. ;)
2012-03-10 23:35:21 UTC <fryguybob> I think I can play around and see if I can get value level sharing to work.  But for now I have to continue working on my homework (doing SSA in a C compiler written in Ruby D:)
2012-03-10 23:35:51 UTC <byorgey> OK, good luck
2012-03-10 23:36:18 UTC <fryguybob> Right now my variables are named "val_SSA__SSA__SSA_" I think something is wrong.
2012-03-10 23:36:36 UTC <fryguybob> Oh right, Ruby is wrong.
2012-03-10 23:38:30 UTC <byorgey> wat
2012-03-10 23:40:44 UTC <fryguybob> One too many monkey patch.
2012-03-10 23:41:11 UTC <byorgey> ACTION forks diagrams-core
2012-03-10 23:44:37 UTC <byorgey> ugh all this stuff about transformations affecting attributes, freeze, etc. hurts my brain
2012-03-11 00:16:07 UTC <byorgey> if this actually works I am going to eat my hat
2012-03-11 00:22:59 UTC <byorgey> well, so far it seems to produce correct output but it made Mandelbrot.svg *bigger*
2012-03-11 00:37:21 UTC <fryguybob> hehe
2012-03-11 01:03:35 UTC <byorgey> whoops, I take back the part about correct output
2012-03-11 01:07:35 UTC <fryguybob> Your hat is safe for now.
2012-03-11 01:32:46 UTC <vyom> I managed to translate the old diagrams-svg code (https://github.com/deepakjois/diagrams-svg/blob/master/src/Graphics/Rendering/SVG.hs ) to use blaze-svg (https://github.com/deepakjois/diagrams-svg/blob/blaze-svg/src/Graphics/Rendering/SVG.hs )
2012-03-11 01:33:11 UTC <vyom> it is not a full translation.. some code is stubbed out for now..
2012-03-11 01:33:45 UTC <vyom> i am trying to understand some logic related to transforms in the older code..
2012-03-11 01:35:23 UTC <vyom> in the older diagrams-svg code.. there is this to render a path "renderPath p = R $ \t -> unR (renderPath' $ transform (inv t) p) t"
2012-03-11 01:36:04 UTC <vyom> why is there an inverse (which is what inv is, presumably) tranfrom on the path before rendering it
2012-03-11 01:37:06 UTC <vyom> i guess i need to better understand the way the diagrams internals code calls out to the backend.. which will help me understand the SVG i should be outputting
2012-03-11 01:41:53 UTC <vyom> i am a bit confused by why the  "render" function takes one argument in some cases and 2 in others.. https://github.com/deepakjois/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L102
2012-03-11 01:50:02 UTC <fryguybob> vyom: The ones with one argment are functions on the rhs.
2012-03-11 01:53:57 UTC <vyom> yes.. i saw that afterwards..
2012-03-11 01:54:45 UTC <vyom> i just drew a simple square using the current diagrams-svg backend and the one that i am using..
2012-03-11 01:55:25 UTC <fryguybob> woohoo!
2012-03-11 01:55:46 UTC <vyom> comparing the output.. it looks like the current backend is doing transformation that I am not doing..
2012-03-11 01:56:32 UTC <vyom> so the values in the Svg path are different..
2012-03-11 01:59:19 UTC <vyom> https://github.com/deepakjois/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L71
2012-03-11 02:00:20 UTC <vyom> the third argument to the withStyle method .. what is that exactly?
2012-03-11 02:00:46 UTC <vyom> is it a transformation on the style.. or a transformation on the diagram
2012-03-11 02:00:48 UTC <vyom> ?
2012-03-11 02:03:37 UTC <fryguybob> vyom: Humm, looking.
2012-03-11 02:09:13 UTC <fryguybob> vyom: I believe it is the transform that should be applied to the style, so the actual linewidth value should be transformed by that.
2012-03-11 02:10:43 UTC <vyom> ok.. thanks
2012-03-11 02:34:29 UTC <byorgey> ugh, the whole style transformation thing is super confusing
2012-03-11 02:34:38 UTC <byorgey> it's all so we can implement "freeze"
2012-03-11 02:34:45 UTC <byorgey> I hate it
2012-03-11 02:35:23 UTC <mgsloan> It'll pay off once we can use "freeze" to also be a rendering cache
2012-03-11 02:35:41 UTC <byorgey> hmm, maybe
2012-03-11 02:36:03 UTC <mgsloan> (something to think about when doing animation / interactivity "properly"
2012-03-11 02:36:16 UTC <byorgey> yeah
2012-03-11 02:37:48 UTC <mgsloan> tricky, too, of course.  I think it'd be sweet to be able to handle editors that mutate a chunk of spline, and only re-render effected regions, but being this advanced could really hurt general usability
2012-03-11 02:38:15 UTC <mgsloan> (editors in the semantic editor combinator type sense)
2012-03-11 02:39:16 UTC <mgsloan> course, in the case of diagrams, localized edits to a spline shift stuff
2012-03-11 02:39:32 UTC <mgsloan> so, not the best idea :D
2012-03-11 02:40:41 UTC <byorgey> vyom: I'm not sure exactly how the old diagrams-svg worked, but the inv apparently has something to do with the fact that the Render type is a *function* from transformations.
2012-03-11 02:40:52 UTC <byorgey> vyom: but I don't know why that would be.  It seems unnecessary.
2012-03-11 02:41:04 UTC <byorgey> i.e. maybe there are changes we can make to the core which would make it unnecessary.
2012-03-11 02:43:52 UTC <fryguybob> ACTION tries to remember how we came to the style transforms the way they are.
2012-03-11 02:45:44 UTC <fryguybob> Something like freeze a circle with a thick linewidth, then scale to an ellipse.  I'm not sure how easy it is to express what happens with that in SVG.
2012-03-11 02:46:18 UTC <byorgey> yes, that's it
2012-03-11 02:46:29 UTC <byorgey> it mya be impossible to express in SVG.
2012-03-11 02:46:32 UTC <byorgey> *may
2012-03-11 02:46:37 UTC <fryguybob> Ah, yes it is in the manual
2012-03-11 02:46:40 UTC <mgsloan> Inkscape does that, but I think it's also an approximation
2012-03-11 02:47:01 UTC <mgsloan> so, it'll take the distance of the amount you scale something, and use that as a factor on the stroke width
2012-03-11 02:47:18 UTC <mgsloan> (so, (2, 1) scaling is sqrt (5)
2012-03-11 02:47:20 UTC <byorgey> mgsloan: no, that's not what it does
2012-03-11 02:47:46 UTC <byorgey> at least that's not what the cairo backend does.
2012-03-11 02:47:53 UTC <byorgey> though you could imagine it working that way.
2012-03-11 02:47:53 UTC <mgsloan> there are 4 toggles in the top right of the inkscape UI
2012-03-11 02:48:06 UTC <byorgey> oh, or were you describing what inkscape does?
2012-03-11 02:48:35 UTC <mgsloan> scale stroke width / scale rounding / move gradient with obj / move pattern with object
2012-03-11 02:48:44 UTC <byorgey> the problem with the current semantics of 'freeze' is that it is very cairo-specific
2012-03-11 02:48:49 UTC <mgsloan> yeah, describing inkscape
2012-03-11 02:48:52 UTC <byorgey> ok.
2012-03-11 02:49:04 UTC <mgsloan> I agree that SVG doesn't have a way to handle this
2012-03-11 02:49:06 UTC <byorgey> I'm of a mind to rip it out and replace it with something more sane.
2012-03-11 02:49:14 UTC <fryguybob> byorgey: :D
2012-03-11 02:50:00 UTC <byorgey> we'll need to think carefully about what that more sane thing is.
2012-03-11 02:51:08 UTC <byorgey> anyway, the good news is that modulo freezing insanity, I think a few tweaks to diagrams-core will trivially result in shared transformations+attributes, i.e. not having to apply them separately to each primitive
2012-03-11 02:51:24 UTC <fryguybob> Excellent
2012-03-11 02:51:37 UTC <byorgey> we already have a tree and do a fold over it to flatten it... so instead we can just do the rendering while folding.
2012-03-11 02:51:59 UTC <byorgey> anyway, I'm off for tonight, talk to you all later
2012-03-11 02:52:47 UTC <mgsloan> ahhh, it actually is in SVG
2012-03-11 02:52:48 UTC <fryguybob> byorgey: I don't know if we really explored what freeze could be used for in practice much, but I remember the idea being that we get image transformation semantics.
2012-03-11 02:52:56 UTC <mgsloan> just none of the implementations do it :/
2012-03-11 02:53:07 UTC <mgsloan> ACTION just asked his SVG expert friend
2012-03-11 02:54:34 UTC <fryguybob> Which you can do if you convert stroke to filled outline.
2012-03-11 02:54:49 UTC <mgsloan> that'd be the appropriate workaround
2012-03-11 02:55:38 UTC <fryguybob> I don't remember if we thought though thaw or what it would even mean.
2012-03-11 02:56:42 UTC <mgsloan> the question is, do we target SVG spec or implemented SVG
2012-03-11 02:56:49 UTC <mgsloan> my vote would be implemented SVG
2012-03-11 02:57:01 UTC <mgsloan> so that would require doing our own stroking
2012-03-11 02:57:39 UTC <mgsloan> So, my vote would also be to keep it around.  They're useful ops, even if it takes a little while to support them right
2012-03-11 02:57:56 UTC <mgsloan> and for now punt on them with approximations for some backends
2012-03-11 03:01:31 UTC <fryguybob> It seems postscript handles it: http://www.cs.rochester.edu/u/ryates/temp/freeze.pdf
2012-03-11 03:02:58 UTC <fryguybob> ACTION wonders if they just apply the transform to the stroke "brush" at render time.
2012-03-11 03:04:24 UTC <vyom> byorgey: thanks.. I think I have enough of the backend implemented that I dont need to care about the way things are done in the old diagrams-svg.. just gonna forge ahead
2012-03-11 04:15:43 UTC <vyom> does anybody mind if I do a release of diagrams-svg sometime next week. I dont have all the functionality yet, but it is enough for the use cases that hs-logo has.. and it would be nice to drop the diagrams-cairo dependency
2012-03-11 04:16:05 UTC <vyom> i intend to keep hacking on it, since i need support for colors and other attributes as well
2012-03-11 04:16:45 UTC <vyom> but i feel like getting a release out
2012-03-11 04:24:00 UTC <mgsloan> vyom: seems reasonable!  How are you handling parsing path data?
2012-03-11 04:24:16 UTC <mgsloan> err, nvm, backend, not parser!
2012-03-11 04:26:38 UTC <vyom> mgsloan: https://github.com/deepakjois/diagrams-svg/blob/blaze-svg/src/Graphics/Rendering/SVG.hs this is how the SVG generation code looks like now
2012-03-11 04:27:04 UTC <vyom> it uses blaze-svg for SVG rendering
2012-03-11 04:27:17 UTC <vyom> which provides some helpers to generate paths
2012-03-11 04:28:12 UTC <mgsloan> very pretty!
2012-03-11 04:38:17 UTC <byorgey> vyom: by all means, make a release!
2012-03-11 04:48:42 UTC <byorgey> hmm, anyone with Lion and GHC 7.0.4 that can try to reproduce rpglover's bug report? http://code.google.com/p/diagrams/issues/detail?id=71
2012-03-11 04:48:55 UTC <byorgey> or anyone with ideas why it might be happening
2012-03-11 04:51:04 UTC <tgeeky> ouch. it does look like a showstopper.
2012-03-11 04:54:39 UTC <tgeeky> I also can't imagine how it's your fault :o
2012-03-11 04:55:06 UTC <byorgey> I can't either.  But that's not how these things work =)
2012-03-11 04:55:23 UTC <tgeeky> byorgey: hehe :)
2012-03-11 04:55:45 UTC <tgeeky> byorgey: I *can* imagine using a Mac, but unfortunately that doesn't put one in front of me. :o
2012-03-11 04:58:47 UTC <byorgey> why is OS X such a pain in the butt?
2012-03-11 05:01:28 UTC <tgeeky> I use Windows. I am disqualified from answering.
2012-03-11 05:02:10 UTC <byorgey> why are operating systems such a pain in the butt?
2012-03-11 05:05:33 UTC <tgeeky> byorgey: I wish I knew the answer to that.
2012-03-11 05:05:56 UTC <tgeeky> byorgey: you use arch, right?
2012-03-11 05:06:12 UTC <byorgey> tgeeky: yes
2012-03-11 05:06:37 UTC <byorgey> sometimes it's a pain in the butt too.
2012-03-11 05:07:56 UTC <tgeeky> yeah, I'm guessing in a predictable kind of way, though :o
2012-03-11 05:09:05 UTC <byorgey> it does tend to be a bit more predictable.  e.g. when I upgrade my packages.
2012-03-11 05:09:46 UTC <tgeeky> byorgey: well, the fatal flaw with Windows (and OSX, for that matter, I guess) is that they never bought into packaging systems
2012-03-11 05:10:04 UTC <byorgey> yeah, that is a big problem.
2012-03-11 05:10:07 UTC <tgeeky> and the fatal flaw with everything else, is their packaging systems suck.
2012-03-11 05:10:11 UTC <byorgey> hehe
2012-03-11 05:10:22 UTC <mgsloan> Î»> (print <<& putStrLn) "hello"  -- yields { hello; "hello" }
2012-03-11 05:10:22 UTC <mgsloan> Î»> (print >>& putStrLn) "hello"  -- yields { "hello"; hello }
2012-03-11 05:10:53 UTC <byorgey> mgsloan: nice, monadic plumbers?
2012-03-11 05:10:58 UTC <mgsloan> yup
2012-03-11 05:11:08 UTC <byorgey> are there >>= variants?
2012-03-11 05:11:18 UTC <mgsloan> yeah, they use >= and <= prefixes
2012-03-11 05:11:18 UTC <byorgey> not sure how useful that would be
2012-03-11 05:11:21 UTC <byorgey> ok
2012-03-11 05:11:41 UTC <byorgey> I think I would just get confused with the extra argument
2012-03-11 05:11:49 UTC <mgsloan> me neither, but it's an excuse to have some rediculous yet reasonably understandable operators
2012-03-11 05:11:58 UTC <byorgey> sure =)
2012-03-11 05:12:07 UTC <tgeeky> hm. I think I'm going to make a proposal to remove (||, &&, >=, <=, /=) from the prelude :O
2012-03-11 05:12:17 UTC <tgeeky> I know nobody will go with it, but to hell with them
2012-03-11 05:12:18 UTC <byorgey> haha what
2012-03-11 05:12:30 UTC <byorgey> tgeeky: why those?
2012-03-11 05:12:54 UTC <tgeeky> byorgey: well, realistically, all non-word functions, but the main one I 'want back' is ||
2012-03-11 05:13:10 UTC <tgeeky> beacuse of letting you think about code with things like >> and <<
2012-03-11 05:13:16 UTC <tgeeky> and 'straigtening out' them to become ||
2012-03-11 05:13:46 UTC <byorgey> tgeeky: no one's stopping you from doing   import Prelude hiding ((||))
2012-03-11 05:14:01 UTC <byorgey> and then defining it yourself
2012-03-11 05:14:23 UTC <tgeeky> yeah. I have a few toy Preludes where I've done things like that.
2012-03-11 05:14:57 UTC <byorgey> actually removing them from the Prelude is just a tiny bit drastic.
2012-03-11 05:14:59 UTC <mgsloan> IMHO there should be an extension to support adopting a new prelude.  The point of the extension would be to provide a compatibility layer between code targetting the two preludes (ideally there'd be a rewriting equivalence between code using the two)
2012-03-11 05:15:13 UTC <byorgey> mgsloan: that would be nifty.
2012-03-11 05:15:18 UTC <tgeeky> byorgey: the main idea, I think, is actually that a very general and abstract symbol (two vertical lines) shouldn't be wasted on something so specific (and in haskell more than other places, less often required) as boolean OR
2012-03-11 05:15:40 UTC <tgeeky> mgsloan: yeah. I call that package d-Prelude (for differential Prelude)
2012-03-11 05:16:56 UTC <tgeeky> byorgey: and I would get rid of && because it's so ugly and asymmetric
2012-03-11 05:17:01 UTC <byorgey> tgeeky: I have some sympathy with that point of view, but practically speaking such a proposal will never fly
2012-03-11 05:17:10 UTC <tgeeky> byorgey: yeah. that's why I said it, and not did it :)
2012-03-11 05:17:18 UTC <byorgey> hehe, fair enough =)
2012-03-11 05:19:08 UTC <tgeeky> the wonderful power of Haskell, is that I can (easily) do these things for myself.
2012-03-11 05:19:54 UTC <mgsloan> Actually, don't constraint synonyms give the capability to write a standards-compliant Prelude in terms of some more complicated underlying Prelude (like the numeric one / other one) ?
2012-03-11 05:20:06 UTC <tgeeky> mgsloan: don't know
2012-03-11 05:20:12 UTC <tgeeky> mgsloan: btw, are you a student?
2012-03-11 05:20:41 UTC <mgsloan> would you frequently get very qualified types in errors? That'd be a downside.  It'd be good to prefer the synonyms
2012-03-11 05:20:54 UTC <mgsloan> tgeeky - yup, undergrad at UW for another quarter orso
2012-03-11 05:20:56 UTC <byorgey> mgsloan: why would constraint synonyms help? (not disagreeing, just wondering what you mean)
2012-03-11 05:21:25 UTC <tgeeky> mgsloan: you have some clever and imaganitive code. keep it up :)
2012-03-11 05:22:12 UTC <mgsloan> tgeeky: Thanks! I try :D
2012-03-11 05:28:03 UTC <tgeeky> which W? Washington? Wisconsin? Waterloo?
2012-03-11 05:28:10 UTC <byorgey> mgsloan: oh, didn't realize you were graduating so soon.  what are you thinking of doing afterwards?
2012-03-11 05:28:24 UTC <byorgey> mgsloan: (no need to answer that if it is a stressful question =)
2012-03-11 05:29:01 UTC <vyom> byorgey: regarding the bug report.. i had the exact problem on Snow Leopard when I first started using diagrams
2012-03-11 05:29:23 UTC <tgeeky> ACTION grabs the dentist-grade superlight in the room (for some reason) and shines it at mgsloan.
2012-03-11 05:29:35 UTC <byorgey> vyom: ah, good to know.  did you ever figure out what the problem was? and/or how did you solve it?
2012-03-11 05:30:10 UTC <vyom> turns out that it was related to ghc being 32-bit and the GTK related stuff being 64-bit
2012-03-11 05:30:17 UTC <mgsloan> byorgey - I just realized why it doesn't work - you can't introduce instances of type synonyms!  There's no real issue otherwise.  The idea is to define synonyms that refer to all of the appropriate typeclasses.  So Monad would point to Applicative / Functor / Monad / etc in the new prelude
2012-03-11 05:30:53 UTC <mgsloan> vyom - Washington!  hell, I was born adjacent to a microsoft building practically
2012-03-11 05:31:09 UTC <mgsloan> byorgey - I do know what I'm up to! http://intentsoft.com/
2012-03-11 05:31:56 UTC <mgsloan> I considered for a bit going the grad-school route, but this is really closer to my research interests than any professors specialties that I see
2012-03-11 05:32:19 UTC <byorgey> vyom: ah, I see.  can you add a comment to the bug tracker?
2012-03-11 05:32:53 UTC <byorgey> mgsloan: cool!
2012-03-11 05:33:05 UTC <byorgey> mgsloan: and they are based in Philadelphia, right? ;)
2012-03-11 05:33:41 UTC <vyom> byorgey: sure
2012-03-11 05:33:48 UTC <byorgey> thanks
2012-03-11 05:34:23 UTC <byorgey> oh, Bellevue
2012-03-11 05:35:00 UTC <mgsloan> byorgey - hehe, Bellevue, actually!  Means I won't be able to bike to work from seattle, but bussing is decent too
2012-03-11 05:35:09 UTC <mgsloan> yeah
2012-03-11 05:38:13 UTC <vyom> mgsloan: did not realise you were in Seattle.. me too :)
2012-03-11 05:39:12 UTC <mgsloan> no way! awesome!
2012-03-11 05:39:22 UTC <mgsloan> we'll have to do some diagrams hacking soon
2012-03-11 05:39:37 UTC <vyom> ya that is a great idea! :)
2012-03-11 05:39:55 UTC <byorgey> =D
2012-03-11 05:40:23 UTC <byorgey> ACTION recommends hanging out with mgsloan
2012-03-11 05:41:48 UTC <vyom> cool.. :).. i live up in Capitol Hill..
2012-03-11 05:43:18 UTC <mgsloan> :D cool! I'm in the u-district of course.  Currently finishing off the quarter, but after that's over with we should definitely hack on logo / svg
2012-03-11 06:39:24 UTC <alpounet> haha that's a pretty funny coincidence
2012-03-11 06:39:38 UTC <alpounet> nobody from Marseille or even France here I guess though? :P
2012-03-11 09:15:49 UTC <fury_> I want  to render to SVG output to stdout
2012-03-11 09:16:45 UTC <fury_> can I use renderDia, and with way parameters to achieve this ?
2012-03-11 09:23:16 UTC <mgsloan> I think you can only output to an SVG file with Cairo for now
2012-03-11 09:23:28 UTC <mgsloan> read the file back in, and output to stdout
2012-03-11 09:33:40 UTC <fury_> than you, that will do my job!
2012-03-11 09:33:46 UTC <fury_> thank you
2012-03-11 15:38:28 UTC <byorgey> gah OS X, seriously, what is UP.  http://code.google.com/p/diagrams/issues/detail?id=72
2012-03-11 15:39:01 UTC <byorgey> hmm, I think I remember someone else having the same issue...
2012-03-11 15:39:23 UTC <byorgey> maybe it was carter
2012-03-11 15:39:48 UTC <luite> hmm, the OS X preview thing is kind of limited, but I guess the Cairo pdfs should be fairly simple
2012-03-11 15:40:39 UTC <ClaudiusMaximus> i vaguely recall some 'reserved/pad/etc' byte in .mov format changing value at some point causing chaos for Free mov creation software and Apple ecosystem interoperability
2012-03-11 15:40:50 UTC <ClaudiusMaximus> but i doubt that's related...
2012-03-11 15:41:38 UTC <byorgey> ClaudiusMaximus: heh, probably not.
2012-03-11 15:50:58 UTC <luite> hehe at least the pdf format isn't owned by apple
2012-03-11 16:00:54 UTC <byorgey> vyom: was it you who had trouble with cairo-generated PDFs (see http://code.google.com/p/diagrams/issues/detail?id=72)? or was it carter?
2012-03-11 16:09:38 UTC <luite> can't reproduce the problem here btw, the pdf shows up fine in Preview
2012-03-11 16:09:59 UTC <luite> although the scale seems off, I have to zoom in a lot before it gets bigger than a few pixels
2012-03-11 16:10:34 UTC <byorgey> luite: did you pass -w or -h options?
2012-03-11 16:10:48 UTC <luite> nope, just -o test.pdf
2012-03-11 16:11:48 UTC <byorgey> luite: well that would explain why it is tiny
2012-03-11 16:12:15 UTC <luite> ok :)
2012-03-11 16:12:31 UTC <byorgey> if you don't specify a width or height it will default to just using the absolute scale of the diagram... which in this case would be 2x2 px since it is just a radius-1 circle
2012-03-11 16:12:59 UTC <alpounet> fwiw, i can't open the pdf file linked in the bug report neither
2012-03-11 16:13:05 UTC <byorgey> neither can I
2012-03-11 16:13:31 UTC <luite> mine is bigger
2012-03-11 16:13:54 UTC <luite> 973 bytes
2012-03-11 16:14:10 UTC <ClaudiusMaximus> evince tells me "the document contains no pages"
2012-03-11 16:15:03 UTC <ClaudiusMaximus> xpdf reports no errors but also displays nothing
2012-03-11 16:15:10 UTC <byorgey> ClaudiusMaximus: yeah, that's the same thing I get
2012-03-11 16:15:14 UTC <luite> I'm using GHC 7.4.1, 64bit, with macports cairo
2012-03-11 16:26:11 UTC <vyom> byorgey: never tried generating PDFs with Cairo.. so probably not me
2012-03-11 16:49:36 UTC <byorgey> vyom: ok
2012-03-11 18:05:41 UTC <tgeeky> not me either, and I am pretty sure I have generated PDFs with diagrams in linux and windows, both successfully
2012-03-11 22:18:45 UTC <fryguybob> In case any more data is needed the pdf file does not have any graphic data in it and it is cairo 1.10.2.
2012-03-12 14:21:05 UTC <fryguybob> Humm this could make an interesting diagram: http://www.maltekoeditz.com/index.php/2011/07/22/golden-section-in-the-apple/
2012-03-12 14:41:17 UTC <luite> hmm, there should be a golden ratio finder diagrams module to find golden ratio's in everything ;)
2012-03-12 14:41:34 UTC <luite> (and if it doesn't find one, just distort the input slightly until it does)
2012-03-12 14:52:18 UTC <fryguybob> Or a golden ratio diagram types where it is a type error if you diagram is not pleasing.
2012-03-12 20:51:29 UTC <luite> grmblz stupid ghc
2012-03-12 20:54:37 UTC <fryguybob> :(
2012-03-12 20:57:29 UTC <luite> it won't load my .hi/.o because it says that the flags have changed... but it only gives me a hash of the flags...
2012-03-12 20:57:38 UTC <luite> it's like cracking passwords from a shadow file
2012-03-12 20:58:33 UTC <byorgey> sounds like fun =(
2012-03-12 22:58:46 UTC <tgeeky> luite: I hope not. that's pretty difficult.
2012-03-12 23:11:35 UTC <luite> I'm recompiling ghc now to print some debug output when compiling
2012-03-12 23:11:51 UTC <luite> about the data used to calculate the hash
2012-03-13 00:29:24 UTC <luite> yay
2012-03-13 00:29:34 UTC <luite> wolfgang loads binaries now
2012-03-13 00:29:51 UTC <byorgey> yay!
2012-03-13 00:30:14 UTC <luite> it was a missing ExplicitForall flag...
2012-03-13 00:30:32 UTC <byorgey> ah, that one gets me every time
2012-03-13 00:31:30 UTC <luite> apparently if you -XScopedTypeVariables it's implifed, but not if you just enable dynflags
2012-03-13 00:31:33 UTC <luite> implied
2012-03-13 00:40:58 UTC <byorgey> oh, tgeeky will like the gallery example apfelmus just sent me
2012-03-13 00:41:43 UTC <luite> circle fractals? :)
2012-03-13 00:41:54 UTC <byorgey> it does seem to relate, yes =)
2012-03-13 01:30:59 UTC <byorgey> tgeeky: http://projects.haskell.org/diagrams/gallery.html
2012-03-13 01:40:38 UTC <luite> hm, I get a not in scope r2
2012-03-13 01:41:54 UTC <luite> has that been added recently?
2012-03-13 01:46:22 UTC <byorgey> luite: yes
2012-03-13 01:46:32 UTC <byorgey> it's in 0.5
2012-03-13 01:48:45 UTC <luite> yeah I'm running 0.5, but some not-quite-released version
2012-03-13 01:49:17 UTC <byorgey> yeah, that was added fairly close to the release
2012-03-13 01:49:46 UTC <byorgey> I had a few breaking changes I wanted to make and decided to shove them in before the release since it was already going to include some breaking changes anyway.
2012-03-13 01:50:54 UTC <luite> ok, upgrading :)
2012-03-13 01:58:22 UTC <luite> http://hdiff.luite.com/tmp/q1.png <- of course I'm doing this :)
2012-03-13 02:04:07 UTC <byorgey> luite: ah, nice =)
2012-03-13 02:05:09 UTC <mgsloan> :D yeah, awesome!! Considering the presence of imports, does that mean the rest of the file is in the same module?  If so, would it be good to have the line numbers reflect that?  I guess local numbering is pretty nice too
2012-03-13 02:05:33 UTC <mgsloan> (and it's just the clash of my expectations derived from using inferior tools :P)
2012-03-13 02:05:45 UTC <mgsloan> s/of/with
2012-03-13 02:19:10 UTC <luite> http://hdiff.luite.com/tmp/q2.png
2012-03-13 02:19:59 UTC <luite> I'm not sure how to do line numbering yet, line numbers are less important since lines with errors are highlighted directly
2012-03-13 02:20:16 UTC <luite> and the module sent to the server has different line numbers anyway (all text is stripped)
2012-03-13 02:21:27 UTC <byorgey> luite: oh, sweet!
2012-03-13 02:21:42 UTC <byorgey> luite: you should show that screenshot to apfelmus =)
2012-03-13 02:23:00 UTC <byorgey> luite: I guess the line numbers are mostly useful for being able to refer to them in the text.  in which case local numbering is probably fine.
2012-03-13 02:23:59 UTC <byorgey> luite: how fast does it update when you drag the sliders?
2012-03-13 02:25:06 UTC <luite> uh it often says "time limit exceeded" because it uses too much memory :(
2012-03-13 02:25:24 UTC <luite> otherwise half a second or so
2012-03-13 02:27:20 UTC <byorgey> heh
2012-03-13 02:27:47 UTC <byorgey> there may be things we can do to improve the memory usage, I'm not sure
2012-03-13 02:29:21 UTC <luite> the current page is not optimized, just interpreted, but imported pages (here Wolfgang.Diagrams and Wolfgang.Interactive) are
2012-03-13 02:29:31 UTC <byorgey> ah, ok
2012-03-13 02:31:49 UTC <luite> but it looks like there's also some bugs on my side, once the interpreter is killed, it isn't always restarted properly
2012-03-13 02:37:40 UTC <luite>  [11883,65001] 2012-03-05 13:41:56.169651000000 - done evaluating expression (diagram 0.00991 2.5 2.5) service time: 0.182036s
2012-03-13 02:37:58 UTC <luite> it's a bit faster tan half a second, the only problem is memory
2012-03-13 02:44:23 UTC <luite> is there a standard way in markdown or latex to refer to source code line numbers?
2012-03-13 02:46:37 UTC <luite> http://hdiff.luite.com/tmp/disclaimer.txt <- I've also uploaded a disclaimer :p
2012-03-13 03:37:38 UTC <tgeeky> byorgey: yes, he is very much interested
2012-03-13 03:42:04 UTC <tgeeky> luite: sexyyyyyyy
2012-03-13 03:44:12 UTC <tgeeky> luite: Creative Commons Netherlands (CC-NL)
2012-03-13 06:58:32 UTC <ClaudiusMaximus> minor feature request:  clipTo a b = a # clipBy b # withEnvelope b
2012-03-13 06:59:57 UTC <ClaudiusMaximus> (avoids some ambiguity that require type annotations)
2012-03-13 09:02:00 UTC <luite> tgeeky: hehe, I used a disclamer generator and google translate :p
2012-03-13 09:23:29 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/misc/period-7-real-quadratic-spiders.png
2012-03-13 09:24:28 UTC <ClaudiusMaximus> ref: http://www.maths.liv.ac.uk/~mathsclub/Topics/Iteration/iteration.html
2012-03-13 16:44:50 UTC <byorgey> ClaudiusMaximus: clipTo a b = a # clipBy b # withEnvelope b  seems to me like it would have unexpected behavior
2012-03-13 16:45:40 UTC <byorgey> ClaudiusMaximus: e.g. consider  square 1 # clipBy (square 1 # rotateBy (1/8))
2012-03-13 16:46:01 UTC <byorgey> oops, I mean  square 1 # clipTo (square 1 # rotateBy (1/8))
2012-03-13 16:46:20 UTC <byorgey> with your definition the envelope of that would now be the same as a rotated square.  But I would expect it to be an octagon.
2012-03-13 17:33:41 UTC <ClaudiusMaximus> ah, ok
2012-03-13 17:34:02 UTC <ClaudiusMaximus> didn't consider that
2012-03-13 17:36:43 UTC <byorgey> ClaudiusMaximus: in Diagrams.TwoD.Path there is a 'todo' note saying we ought to add clipTo, but it requires a bit more thought about how to implement it.
2012-03-13 17:36:53 UTC <byorgey> it might not actually be too hard, I haven't really thought it through
2012-03-13 17:37:51 UTC <byorgey> I'll add it as a ticket on the bug tracker
2012-03-13 17:57:01 UTC <ClaudiusMaximus> is there a nice easy way to lay out subdiagrams with labels attaching them to fixed points in space?
2012-03-13 17:57:23 UTC <ClaudiusMaximus> (avoiding overlap)
2012-03-13 17:57:43 UTC <byorgey> ClaudiusMaximus: I don't understand the question
2012-03-13 17:59:49 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/misc/period-7-real-quadratic-spiders.png i want to have arrows from each graph pointing to the exact location on the real line
2012-03-13 18:06:28 UTC <byorgey> ClaudiusMaximus: hmm, well, it's not too hard to leave those graphs laid out the way they are, and add arrows pointing from each graph to a corresponding location on a representation of the real line
2012-03-13 18:07:11 UTC <byorgey> ClaudiusMaximus: if you mean you want the layout of the graphs to be somehow automatically determined by which points on the real line they correspond to, there's not really a good way to do that
2012-03-13 18:07:26 UTC <ClaudiusMaximus> yeah that later part...
2012-03-13 18:07:39 UTC <byorgey> you'd have to write some higher-level modules to do heuristic layout, i.e. give 'target locations' and then have it figure out where to put them so they are close to the target location but don't overlap
2012-03-13 18:08:01 UTC <byorgey> it should certainly be possible to implement that but there's nothing like it in diagrams currently.
2012-03-13 18:08:02 UTC <ClaudiusMaximus> ok, was just wondering if someone had already done that work for me
2012-03-13 18:08:07 UTC <ClaudiusMaximus> :)
2012-03-13 18:08:10 UTC <byorgey> right, sadly no =)
2012-03-13 18:08:33 UTC <byorgey> that would be a cool module though
2012-03-13 18:09:04 UTC <ClaudiusMaximus> currently trying to debug a stack overflow crash :(  (the heap profile showed a solid rectangle of ARR_WORDS and nothing else)
2012-03-13 18:10:06 UTC <ClaudiusMaximus> feeling like i might be doing something stupid like rendering a bitmap with a zillion squares
2012-03-13 18:14:20 UTC <byorgey> boo =(
2012-03-13 18:15:37 UTC <ClaudiusMaximus> is there a way to embed bitmaps in diagrams?
2012-03-13 18:15:51 UTC <ClaudiusMaximus> might make more sense to do it that way...
2012-03-13 18:16:09 UTC <byorgey> ClaudiusMaximus: well, there is a way to embed images (which are stored in a file on disk)
2012-03-13 18:16:20 UTC <byorgey> ClaudiusMaximus: but we certainly ought to have a way to directly construct a bitmap and embed it
2012-03-13 18:16:38 UTC <ClaudiusMaximus> that'd be good enough for me at this point i think
2012-03-13 18:16:44 UTC <byorgey> I've wondered about making some sort of interface with http://hackage.haskell.org/package/JuicyPixels
2012-03-13 18:16:58 UTC <byorgey> ClaudiusMaximus: right now the cairo backend only supports .PNG files
2012-03-13 18:17:02 UTC <ClaudiusMaximus> just realized i'm trying to render 1024x65536 squares
2012-03-13 18:17:08 UTC <byorgey> hehe, that's a lot =)
2012-03-13 18:17:11 UTC <ClaudiusMaximus> no wonder it's taking long time
2012-03-13 18:17:16 UTC <byorgey> it should be possible to add support for more image types
2012-03-13 18:17:33 UTC <byorgey> anyway, feel free to add feature requests on the bug tracker =)
2012-03-13 18:17:38 UTC <ClaudiusMaximus> :)
2012-03-13 18:17:58 UTC <ClaudiusMaximus> ACTION goes read manual about embedding image files
2012-03-13 19:20:54 UTC <ClaudiusMaximus> more work in progress on this idea http://claudiusmaximus.goto10.org/g/misc/bifurcation-spiders.png (1.8MB)
2012-03-13 19:21:37 UTC <ClaudiusMaximus> (writing a temporary pgm and calling rawSystem "convert" to get a png to load seems to work ok for now)
2012-03-13 19:22:31 UTC <byorgey> ClaudiusMaximus: woah, nice
2012-03-13 19:23:13 UTC <byorgey> ClaudiusMaximus: how did you generate the bifurcation map at the top?  was that using diagrams too?
2012-03-13 19:23:57 UTC <ClaudiusMaximus> byorgey: no - STUArray calculations
2012-03-13 19:24:19 UTC <byorgey> oh, I see, that's the part you were generating a bitmap for
2012-03-13 19:24:22 UTC <ClaudiusMaximus> yep
2012-03-13 19:24:53 UTC <byorgey> I was just talking with my officemate about a nice way to speed up diagrams' handling of big arrays of diagrams
2012-03-13 19:25:01 UTC <byorgey> but I think yours would still be much too large =)
2012-03-13 19:25:16 UTC <ClaudiusMaximus> i downscaled it horizontally, so the bitmap is 4096x1024 instead of 65536x1024 (the high resolution was to find the islands of stability)
2012-03-13 19:25:54 UTC <byorgey> I see
2012-03-13 19:26:16 UTC <ClaudiusMaximus> want to have each graph pointing at the corresponding stable place :)
2012-03-13 19:26:28 UTC <byorgey> I see, cool =)
2012-03-13 19:26:32 UTC <ClaudiusMaximus> but i think i'd need to have fewer or make them smaller
2012-03-13 19:27:11 UTC <byorgey> hmm, you know, back to your original question about layout, you might be able to use the force-layout package to do it
2012-03-13 19:27:45 UTC <byorgey> oh, hmm, but that only works currently with point charges, you wouldn't be able to guarantee that the diagrams didn't overlap
2012-03-13 19:27:50 UTC <byorgey> still, it could be a good place to start
2012-03-13 19:28:06 UTC <ClaudiusMaximus> i shall investigate later in the week
2012-03-13 19:28:13 UTC <byorgey> i.e. assign each graph a repulsive charge and attach them by springs to the places you want them to point
2012-03-13 19:28:27 UTC <byorgey> and then run it a few thousand steps
2012-03-13 19:28:30 UTC <luite> bah i think I lost my cellphone in switzerland :(
2012-03-13 19:28:32 UTC <ClaudiusMaximus> yep, vaguely familar with mass-spring-damper things
2012-03-13 19:28:56 UTC <byorgey> luite: boo =(
2012-03-13 19:28:58 UTC <ClaudiusMaximus> woe
2012-03-13 19:29:23 UTC <byorgey> luite: call it, and if someone answers ask them if they are in switzerland
2012-03-13 19:29:37 UTC <ClaudiusMaximus> charging in the hotel? -- had a friend misplace their phone like that, but it was recovered
2012-03-13 19:29:45 UTC <luite> hehe nah the battery is certainly empty now, since I haven't charged it for at least a week
2012-03-13 19:29:53 UTC <byorgey> aww
2012-03-13 19:30:19 UTC <luite> but it was a really cheap one, 50 euro or so, and already a few years old
2012-03-13 19:33:57 UTC <fryguybob> byorgey: Do we have diagram sampling implemented?  As in ask a point what color it is?
2012-03-13 19:35:07 UTC <byorgey> fryguybob: no, and I don't think there's a good way to do it in general.
2012-03-13 19:35:39 UTC <byorgey> but you could certainly already do it in limited cases.
2012-03-13 19:37:10 UTC <byorgey> e.g. make a function  setColor :: Color -> QDiagram b v Any -> QDiagram b v (First Color)  implemented like   setColor c d = d # fc c # value c
2012-03-13 19:37:35 UTC <byorgey> but that doesn't take into account the color of stroked paths on the edges of diagrams, etc.
2012-03-13 19:38:10 UTC <fryguybob> Ok, I was thinking about that the other day when I played with juicy pixel.
2012-03-13 19:38:19 UTC <byorgey> hmm, that might be a nice example to add to the user manual.
2012-03-13 19:41:50 UTC <fryguybob> byorgey: Interesting example, so you could fill a space with some diagrams then set colors taken from an image.
2012-03-13 19:43:16 UTC <byorgey> fryguybob: I'm not sure what you mean... I don't see what that has to do with my example?
2012-03-13 19:44:29 UTC <fryguybob> byorgey: Oh, I read that backwards.
2012-03-13 19:44:59 UTC <fryguybob> setColor is a replacement for fc.
2012-03-13 19:45:20 UTC <byorgey> right
2012-03-13 19:47:09 UTC <fryguybob> I was thinking of it as a lens selecting on a point and allowing the setting of the color of the diagram found at that point.
2012-03-13 19:47:37 UTC <byorgey> ah. that would be neat.  off the top of my head I'm not sure how to do that.
2012-03-13 19:48:53 UTC <byorgey> I think if you wanted to do that you'd have to pull the trick with delayed composition using lists or maps of diagrams
2012-03-13 19:49:13 UTC <byorgey> i.e. lay them out without composing them, then decide on their colors based on their positions, then compose them
2012-03-13 19:51:13 UTC <fryguybob> Humm  QDiagram b v (QDiagram b v a) -> (QDiagram b v a, QDiagram b v a -> QDiagram b v (QDiagram b v a))
2012-03-13 19:51:35 UTC <fryguybob> ACTION has an occurs check in his head.
2012-03-13 19:52:09 UTC <byorgey> ACTION mind -> blown
2012-03-13 19:55:16 UTC <byorgey> the idea of annotating each point in a diagram with *another diagram* had never occurred to me
2012-03-13 19:55:51 UTC <byorgey> note, however, that transformations don't have any action on the query monoid
2012-03-13 19:56:03 UTC <byorgey> I don't know whether that matters
2012-03-13 20:09:39 UTC <fryguybob> ACTION takes it a step too far and considers diagrams that are their own vector space.
2012-03-13 20:10:13 UTC <byorgey> woaahhh
2012-03-13 20:10:47 UTC <byorgey> pretty sure diagrams don't form a vector space =)
2012-03-13 20:10:56 UTC <ClaudiusMaximus> Diagram (Diagram ...) (Diagram ...) (Diagram ...) ?
2012-03-13 20:11:10 UTC <fryguybob> Clearly diagrams are their own backend though.
2012-03-13 20:11:17 UTC <byorgey> right, right
2012-03-13 20:11:31 UTC <fryguybob> Just don't expect it to finish rendering.
2012-03-14 03:26:44 UTC <byorgey> woah, the one-year anniversary of this channel is in about two weeks!
2012-03-14 03:29:01 UTC <byorgey> more than 10k lines/1M characters of awesome chat, according to the logs
2012-03-14 03:38:51 UTC <tgeeky> hehe. do an s/tgeeky(.*)//; and re-measure awesomeness, let me know the results
2012-03-14 03:41:10 UTC <byorgey> hmm, let me see
2012-03-14 03:42:08 UTC <byorgey> it appears to be 1728 lines less awesome
2012-03-14 03:43:18 UTC <tgeeky> that's a serious awesome deficit. We might need to form a commitee.
2012-03-14 03:44:52 UTC <byorgey> committees are never awesome though.
2012-03-14 03:44:59 UTC <byorgey> excepting the Haskell committee of course.
2012-03-14 03:45:38 UTC <tgeeky> that is true
2012-03-14 10:29:35 UTC <luite> http://hdiff.luite.com/tmp/q3.png
2012-03-14 10:37:07 UTC <mgsloan1> wow! that's amazing.
2012-03-14 10:38:00 UTC <mgsloan1> we're gonna have to make our "Interactive" stuff have the same API :D
2012-03-14 10:38:37 UTC <mgsloan1> (probably canonicalizing on yours, it's looking much further along)
2012-03-14 10:41:38 UTC <luite> this is just a low level thing that's basically a haskell presentation of the JSON data that describes the interface
2012-03-14 10:42:00 UTC <luite> if you have suggestions I'd like to hear them :)
2012-03-14 10:45:07 UTC <luite> http://hdiff.luite.com/tmp/interactive.png <- part of the implementation
2012-03-14 10:48:04 UTC <luite> http://hdiff.luite.com/tmp/interactive2.png and perhaps a more interesting part
2012-03-14 10:50:21 UTC <luite> http://hdiff.luite.com/tmp/share.png had I already shown this? :)
2012-03-14 11:31:04 UTC <mgsloan1> wow!!
2012-03-14 11:31:13 UTC <mgsloan1> I didn't see that
2012-03-14 11:32:30 UTC <mgsloan1> for the interactive stuff, I've been thinking that having instances to give default widget-ization to types could be interesting
2012-03-14 11:33:20 UTC <mgsloan1> and then, there'd be a set of instances of another class, to do variable number-argument overloading of the ability to turn a function into a manipulable object
2012-03-14 11:34:03 UTC <mgsloan1> I started work on that, but got distracted implementing slider / text / etc etc and never got around to getting that done
2012-03-14 11:34:33 UTC <mgsloan1> the share stuff is rad.  You had better be publishing this soon!  So many good features already!!
2012-03-14 11:35:06 UTC <mgsloan1> ACTION hopes for code so he can use this as the platform for his schemes
2012-03-14 11:37:01 UTC <mgsloan1> anyway, gnight!
2012-03-14 11:37:21 UTC <mgsloan1> keep up the good work!
2012-03-14 11:38:16 UTC <luite> yeah I'm planing to fix mostly bugs in the coming weeks and then release :)
2012-03-14 11:38:27 UTC <mgsloan1> wooot!
2012-03-14 11:38:50 UTC <luite> if you come up with some cool way to do the instances, variabel number thing, please let me know!
2012-03-14 11:39:21 UTC <luite> the only thing the implementation would have to do is spitting out some Interactive value :)
2012-03-14 11:39:23 UTC <mgsloan1> willdo!  it'd be cool to have a diagrams thing that ships with it that worked in both gtk and web
2012-03-14 11:39:42 UTC <mgsloan1> err that sentence is pretty malformed
2012-03-14 11:40:02 UTC <mgsloan1> only somewhat
2012-03-14 11:40:10 UTC <luite> hehe
2012-03-14 11:40:51 UTC <luite> one limitation of my Interactive is btw that every "callback" must be a String value
2012-03-14 11:40:54 UTC <luite> expression
2012-03-14 11:41:24 UTC <mgsloan1> makes sense.  Do you package up all the sliders?
2012-03-14 11:41:39 UTC <luite> hm, what do you mean?
2012-03-14 11:42:30 UTC <mgsloan1> (it's 4:40 am here) all of the slider position values
2012-03-14 11:42:48 UTC <mgsloan1> in other words, you are sending back the expression to invoke, with all of the slider values as arguments
2012-03-14 11:43:01 UTC <luite> oh right, well it just constructs an expression (String) with the function name and all slider values
2012-03-14 11:43:03 UTC <mgsloan1> rather than sending delta values and having some serverside state representation
2012-03-14 11:43:08 UTC <mgsloan1> yeah
2012-03-14 11:43:14 UTC <mgsloan1> serverside state would be complex
2012-03-14 11:43:18 UTC <luite> rather primitive... the server is stateless, to make it "webscale"
2012-03-14 11:43:37 UTC <luite> (so you can stop/restart interpreters, loadbalance evaluation between servers etc)
2012-03-14 11:44:07 UTC <luite> that's a rather big limitation and might need to be rethought for the future locally installable version of this
2012-03-14 11:44:10 UTC <mgsloan1> well, the function that's named can be compiled, right?
2012-03-14 11:44:32 UTC <luite> yes
2012-03-14 11:44:36 UTC <mgsloan1> awesome
2012-03-14 11:44:49 UTC <mgsloan1> so, I imagine the diagrams are rather snappy
2012-03-14 11:44:53 UTC <luite> but I'm not sure how that would help :)
2012-03-14 11:44:55 UTC <luite> oh
2012-03-14 11:45:15 UTC <mgsloan1> well, if you had to recompile all the code in the workbook every slider change orso
2012-03-14 11:45:20 UTC <luite> well, the current page is never compiled, to speeden up reloads and code checking
2012-03-14 11:45:38 UTC <luite> but if you need something really fast, write it on another page and import it
2012-03-14 11:45:50 UTC <mgsloan1> ah, interesting!
2012-03-14 11:45:53 UTC <luite> will be compiled with -O2 within 5 minutes
2012-03-14 11:46:00 UTC <luite> oh reloading is never done unless really required
2012-03-14 11:47:00 UTC <luite> when you change the code on the page, it reloads it in the interpreter on the server (which has pakages like gtk and diagrams preloaded to speed up linking), and keeps the interpreter alive
2012-03-14 11:47:55 UTC <luite> but that's only operationally stateful, semantically it's just stateless: every request is a module name + expression
2012-03-14 11:48:56 UTC <mgsloan1> cool!  Definitely seems like a good strategy, at least for the time being!
2012-03-14 11:48:57 UTC <luite> idle interpreters are killed after 2 minutes, every client (IP address) can get at most two interpeters, if an idle interpreter is available with the correct module already loaded it prefers that to loading the code in another one
2012-03-14 11:50:11 UTC <luite> yeah real interactivity is tricky with server side eval, so far I think this is the best i can do
2012-03-14 11:50:23 UTC <luite> but I'd be happy to hear suggestions :)
2012-03-14 11:51:11 UTC <luite> for a local version, I think real interactivity could be done through websockets, with a "stop eval" button for all pending expressions
2012-03-14 11:52:10 UTC <luite> would be nice to have that, diagrams+interactivity with no tricky dependencies at all :)
2012-03-14 11:53:49 UTC <mgsloan1> Somewhat off the topic of server side eval, I've got a somewhat unconventional idea:  be able to reference a version id / diff, and build a worksheet around that diff, explaining the parts, and justifying the changes, potentially with examples.  These examples of course would need to be run against the modified version of the package - an interesting problem
2012-03-14 11:54:24 UTC <luite> hmm
2012-03-14 11:54:33 UTC <mgsloan1> kindofa messy idea, granted
2012-03-14 11:55:22 UTC <mgsloan1> but the reason behind it is that haskell is a great language to write libraries in.  If there's going to be a good place to construct a set of really well done, consistent libraries, it's here
2012-03-14 11:55:28 UTC <luite> in my current impl, you can only import the most recent version of other Wolfgang.* modules
2012-03-14 11:55:37 UTC <luite> but the current page can be any revision
2012-03-14 11:56:04 UTC <luite> you can load older versions from the history and diff them, but I'm not sure how to integrate comments on diffs
2012-03-14 11:56:06 UTC <mgsloan1> but first we need to have a good way to propose alternatives, and demonstrate how those decisions play out
2012-03-14 11:57:03 UTC <luite> but atm I'm trying to implement the remaining features (pastebin, lots of bug fixes) and then trying it out on the server :)
2012-03-14 11:57:07 UTC <mgsloan1> ah, very cool!  So in a way it's very close.  You just need to have meta-pages for hackage modules :P  I guess that's not very "safe"
2012-03-14 11:57:46 UTC <luite> atm I have an 8GB RAM server, I hope that's enough otherwise I'll need to replace it with a 32GB RAM one
2012-03-14 11:59:18 UTC <mgsloan1> schweet, I'm afraid by the looks of it, you may indeed be in for quite the deluge
2012-03-14 11:59:43 UTC <luite> ghc is quite the memory hog, and all those preloaded packages also take a lot of ram
2012-03-14 12:00:01 UTC <luite> fortunately most ram is shared between processes, but still...
2012-03-14 12:00:21 UTC <luite> 32GB is going to increase the monthly costs by 10 euro though, so I'd like to try it with 8GB first :)
2012-03-14 12:00:51 UTC <mgsloan1> definitely!
2012-03-14 12:03:04 UTC <luite> btw do you know a package similar to stringsearch that can quickly find strings in files, but supports case insensitive matching?
2012-03-14 12:03:35 UTC <luite> (I'm using it to highlight search engine matches)
2012-03-14 12:05:53 UTC <luite> http://hdiff.luite.com/tmp/search.png <- you can see that the word "Interactive" is not highlighted here
2012-03-14 12:07:09 UTC <mgsloan1> hmm, couldn't you just lower case before indexing + lower case query?
2012-03-14 12:08:25 UTC <luite> oh it already case folds when querying (sphinx does that automatically), only problem is highlighting the matches (sphinx gives a list of document id's), the matches should be highlighted in the original case
2012-03-14 12:09:34 UTC <mgsloan1> oh, I see
2012-03-14 12:17:48 UTC <mgsloan1> *yawn* well I really should be going to bed, good luck!
2012-03-14 15:49:37 UTC <luite> http://hdiff.luite.com/tmp/plot.png
2012-03-14 15:52:53 UTC <luite> the plot is rendered with WebGL, you can rotate it by dragging (and zoom with shift+drag)
2012-03-14 16:07:07 UTC <fryguybob> ooooOOOOooo
2012-03-14 16:08:59 UTC <luite> unfortunately the result is much uglier in non-webgl browsers
2012-03-14 16:43:34 UTC <byorgey> luite: sexy!
2012-03-14 18:36:44 UTC <luite> http://hdiff.luite.com/tmp/plot2.png <- still needs some styling to match the rest of the design
2012-03-14 18:39:20 UTC <byorgey> luite: awesome =D
2012-03-14 18:51:02 UTC <luite> trying to add google viz api stuff later today... it's fun that it's so easy to add these things now :)
2012-03-14 19:09:47 UTC <byorgey> luite: yeah, I love that stage in a project where all the pieces are in place and adding new features is almost embarrassingly easy
2012-03-14 19:16:57 UTC <luite> it also gives me a chance to really test how it works, I'm doing most of this in the wolfgang interface, just editing wiki pages (with some page reloads for the javascript support code)
2012-03-14 19:17:18 UTC <byorgey> hah, nice =)
2012-03-14 19:17:37 UTC <luite> the realtime error highlighting helps a lot :)
2012-03-14 19:18:16 UTC <byorgey> yeah, I'll bet it does
2012-03-14 19:58:45 UTC <luite> http://hdiff.luite.com/tmp/plot3.png <- better
2012-03-14 19:59:04 UTC <luite> (zoomed in btw, select/drag to zoom in, dblclick to reset zoom)
2012-03-14 20:16:39 UTC <byorgey> luite: cool =)
2012-03-14 22:46:15 UTC <luite> http://hdiff.luite.com/tmp/plot4.png
2012-03-14 23:01:35 UTC <luite> does anyone here know other javascript libs that would be interesting/cool for haskell data visualization?
2012-03-14 23:43:29 UTC <byorgey> luite: why doesn't Brussels show up on that map?
2012-03-15 01:34:36 UTC <tgeeky> byorgey: must be a radial nuclear casualty map
2012-03-15 10:11:17 UTC <astor> is there an example of getting a diagram in a gtk window.  similar to Graphics.Rendering.Chart.Gtk.renderableToWindow?
2012-03-15 10:14:11 UTC <ClaudiusMaximus> http://hackage.haskell.org/packages/archive/diagrams-cairo/0.5.0.1/doc/html/Diagrams-Backend-Cairo-Gtk.html
2012-03-15 10:14:39 UTC <ClaudiusMaximus> don't know if there is a full runnable example though
2012-03-15 10:15:03 UTC <astor> yes I've seen that.  I wanted to avoid nitty-gritty gtk internals.
2012-03-15 10:16:04 UTC <alpounet> astor, maybe in the examples dir or something
2012-03-15 14:45:55 UTC <fryguybob> astor: Is this what you are looking for?  http://groups.google.com/group/diagrams-discuss/browse_thread/thread/216486c8dfbe0253
2012-03-15 16:28:24 UTC <luite_> http://hdiff.luite.com/tmp/html.png <- not terribly sexy, but yay it works
2012-03-15 16:30:45 UTC <Claudius1aximus> seems... risky ...to allow arbitrary javascript without sandboxing (thinking of some page that replicates itself on viewing...)
2012-03-15 16:32:02 UTC <byorgey> luite_: hah, neat
2012-03-15 16:35:30 UTC <byorgey> luite_: stop adding features and release already ;)
2012-03-15 16:36:07 UTC <luite_> hehe this is the last result type that I wasnted to add
2012-03-15 16:36:31 UTC <luite_> also the trickiest, since it runs user generated html code
2012-03-15 16:36:52 UTC <luite_> so we'll see if it's a keeper
2012-03-15 16:37:15 UTC <luite_> it should be more or less safe, running the code in an iframe from a different domain
2012-03-15 18:33:58 UTC <luite_> is there already some native SVG code ready, that supports javascript annotations?
2012-03-15 18:40:17 UTC <tgeeky__> if he doesn't release soon, we're going to have to create an organiation to deal with Violence Against Open Source Programmers
2012-03-15 18:46:42 UTC <luite_> Claudius1aximus: yeah it's one of the things that I'm not sure about... it loads html from a different domain in an iframe
2012-03-15 18:46:55 UTC <luite_> Claudius1aximus: so it's subject to cross-domain restrictions
2012-03-15 18:47:30 UTC <luite_> but it's the only way I know to have real interactive diagrams (= svg with embedded javascript) without severe restrictions
2012-03-15 18:47:34 UTC <Claudius1aximus> should be ok i guess..
2012-03-15 18:48:35 UTC <luite_> if you upload malicious content, you can only make it visible to other users through the wiki, which means you have to be logged in, and your ip address is logged when saving the page
2012-03-15 18:48:46 UTC <luite_> hopefully that's enough
2012-03-15 18:49:22 UTC <Claudius1aximus> :)
2012-03-15 18:49:42 UTC <luite_> but is there already some svg backend to play with?
2012-03-15 20:18:08 UTC <byorgey> luite_: no, not yet
2012-03-15 20:18:45 UTC <byorgey> we're getting there.  One of the things I'm currently looking into is some changes to diagrams-core which are a prerequisite
2012-03-15 20:20:32 UTC <luite_> good, I still have enough other things to to on the site atm, but it would be great if I could recreate the tic-tac-toe example with the new svg backend, for launch :)
2012-03-15 20:21:02 UTC <luite_> the html result type works now, so it should be easy to build
2012-03-15 20:27:49 UTC <byorgey> luite_: well, I really can't give any promises about how soon the SVG backend will support javascript annotations.  It may not be for a while.
2012-03-15 20:28:16 UTC <luite_> I really can't give any promises when I'm going to release Wolfgang then ;p
2012-03-15 20:28:32 UTC <byorgey> hehe, fair enough!
2012-03-15 20:28:39 UTC <luite_> although I kind of just promised to Greg Weber that I'd release it when the Yesod website looks better than the Snap website
2012-03-15 20:38:56 UTC <byorgey> well, does it?
2012-03-15 20:39:23 UTC <byorgey> hmm, nope
2012-03-15 20:43:11 UTC <luite_> hehe now, and the recent developments haven't been an improvement
2012-03-15 20:43:16 UTC <luite_> no
2012-03-15 20:49:10 UTC <tgeeky__> plus, who names their web frameworks after Kabbalistic sephirots!
2012-03-15 20:49:54 UTC <tgeeky__> http://en.wikipedia.org/wiki/Yesod_(Kabbalah)
2012-03-15 20:50:17 UTC <tgeeky__> I wonder if Judaism is the most productive religion for graph theory.
2012-03-15 21:23:13 UTC <alpounet> that's... an interesting question.
2012-03-15 21:24:27 UTC <luite_> ErdÅs was jewish, who else? :p
2012-03-15 23:49:57 UTC <tgeeky__> alpounet: I hope, for good values of interesting.
2012-03-15 23:50:21 UTC <tgeeky__> alpounet: I meant, I have never seen anything in other religions which is so structured as an n-connected graph :o
2012-03-15 23:52:11 UTC <alpounet> hah
2012-03-15 23:53:02 UTC <tgeeky__> byorgey: most important is the first error
2012-03-15 23:53:07 UTC <tgeeky__> http://validator.w3.org/checklink?uri=http%3A%2F%2Fhackage.haskell.org%2Fpackages%2Farchive%2Funbound%2F0.3.1%2Fdoc%2Fhtml%2FUnbound-LocallyNameless.html&summary=on&hide_type=all&depth=&check=Check
2012-03-16 02:47:26 UTC <byorgey> tgeeky__: ah, thanks, I'll fix that
2012-03-16 05:14:09 UTC <vyom> feels good to reduce the installation instructions to one line http://deepakjois.github.com/hs-logo/installation.html after moving to diagrams-svg
2012-03-16 13:56:43 UTC <luite_> yay diagrams-svg on hackage
2012-03-16 18:19:26 UTC <byorgey> vyom: oh, nice!
2012-03-16 19:07:29 UTC <byorgey> vyom: perhaps you should add yourself to the 'author' and 'maintainer' fields in diagrams-svg.cabal
2012-03-16 19:08:15 UTC <luite_> does felipe not work on it anymore?
2012-03-16 19:08:54 UTC <byorgey> well, he hasn't in a while
2012-03-16 19:08:59 UTC <byorgey> but notice I said "add" not "replace"
2012-03-16 19:11:27 UTC <luite_> yeah I know, I hadn't heard him talk about it for some time, that's why i asked :)
2012-03-16 21:27:48 UTC <vyom> luite_: i had mailed felipe and he said it was not a priority for him at the moment
2012-03-16 21:28:59 UTC <vyom> byorgey: i will probably add myself to the authors
2012-03-16 21:29:20 UTC <byorgey> OK
2012-03-16 21:29:37 UTC <byorgey> vyom: so what is diagrams-svg like at the moment in terms of features supported?
2012-03-16 21:29:47 UTC <byorgey> haven't had a chance to try out the release yet
2012-03-16 21:31:02 UTC <vyom> only paths and trails at the moment... no style attributes, text or images
2012-03-16 21:31:27 UTC <vyom> basically the bare minimum needed to render diagrams on this page http://deepakjois.github.com/hs-logo/examples.html
2012-03-16 21:31:43 UTC <byorgey> ah, ok, cool
2012-03-16 21:32:14 UTC <vyom> working on text and some style attributes like colors
2012-03-16 21:32:32 UTC <vyom> since i will need that next in hs-logo
2012-03-16 21:33:13 UTC <byorgey> ok, sounds great
2012-03-16 21:34:28 UTC <vyom> i am still wondering about the canonical place to host it..
2012-03-16 21:35:07 UTC <vyom> i have yet to take commits in git and submit them to the darcs
2012-03-16 21:35:17 UTC <luite_> vyom: please add something to annotate stuffs with javascript
2012-03-16 21:35:24 UTC <luite_> oh and move your stuff to github please ;p
2012-03-16 21:35:35 UTC <vyom> the latest stuff is on github
2012-03-16 21:35:39 UTC <luite_> oh great
2012-03-16 21:35:50 UTC <luite_> since I'm too stupid to darcs
2012-03-16 21:35:55 UTC <vyom> https://github.com/deepakjois/diagrams-svg
2012-03-16 21:36:21 UTC <byorgey> luite_: javascript annotations is not really possible until I finish working out some changes to diagrams-core
2012-03-16 21:36:49 UTC <byorgey> ACTION finds darcs much easier to use than git.
2012-03-16 21:38:12 UTC <luite_> element id's would be fine too
2012-03-16 21:38:23 UTC <luite_> but I guess that's just as difficult :)
2012-03-16 21:45:39 UTC <byorgey> yes, that's exactly the problem =)
2012-03-16 21:45:47 UTC <vyom> ok i tried to import some git commits through the darcs bridge.. and it did not work
2012-03-16 21:46:09 UTC <byorgey> vyom: sorry, I thought I told you that before
2012-03-16 21:46:13 UTC <vyom> so for now the canonical repo is github
2012-03-16 21:46:25 UTC <vyom> byorgey: yes you did
2012-03-16 21:46:41 UTC <byorgey> vyom: OK, that's fine
2012-03-16 21:46:42 UTC <vyom> it kinda worked last time
2012-03-16 21:47:01 UTC <byorgey> hehe, yeah, when I was using it for the other diagrams packages it kinda worked for a while too
2012-03-16 21:47:15 UTC <byorgey> and then it didn't.
2012-03-16 21:48:01 UTC <vyom> ya :)
2012-03-16 21:50:26 UTC <vyom> i really dont mind darcs being the canonical repo as long as i can work in git :)
2012-03-16 21:51:07 UTC <vyom> hopefully sometime in the future
2012-03-16 21:51:22 UTC <byorgey> yeah
2012-03-16 21:51:28 UTC <byorgey> likewise, except vice versa ;)
2012-03-16 21:52:01 UTC <byorgey> I will poke owst again to see how darcs-bridge is coming
2012-03-16 21:52:31 UTC <vyom> made a double point release to update the cabal metadata http://hackage.haskell.org/package/diagrams-svg-0.3.1
2012-03-16 21:53:07 UTC <byorgey> great
2012-03-16 21:53:09 UTC <vyom> now off for a bit.. hopefully can get some hacking done this weekend... fingers crossed! :)
2012-03-16 21:53:13 UTC <vyom> later
2012-03-16 21:53:26 UTC <byorgey> vyom: oh, also, the 'home page' says code.haskell.org/diagrams which is old, it should be  projects.haskell.org/diagrams
2012-03-16 21:53:29 UTC <byorgey> ok, later
2012-03-16 21:53:50 UTC <vyom> ah missed it!
2012-03-16 21:53:57 UTC <vyom> will fix later
2012-03-16 21:54:13 UTC <byorgey> yeah, no worries, it's not urgent
2012-03-16 21:55:08 UTC <luite_> buh I have a huge security hole in wolfgang
2012-03-16 22:00:25 UTC <byorgey> exploit it, quick!
2012-03-16 22:00:31 UTC <byorgey> if you don't someone else will!
2012-03-16 22:01:14 UTC <luite_> hehe it's rather easy, I forgot that you can do POST requests to other domains by just having some form and submitting it with javascript
2012-03-16 22:02:08 UTC <luite_> so you can just try to get people to visit your page, and if they're logged into wolfgang, you can have them modify pages (or delete stuff if they're admin)
2012-03-16 22:02:16 UTC <luite_> oh wait, the admin interface isn't vulnerable
2012-03-16 22:02:51 UTC <luite_> anyway, time to fix this
2012-03-16 22:03:47 UTC <luite_> hmm, interesting projects for haskell beginners
2012-03-16 22:17:33 UTC <luite_> has anyone here already compared the new and old ipads for textbooks and papers btw?
2012-03-16 22:53:50 UTC <byorgey> vyom: one other thing is that diagrams-svg specifies cmdargs < 0.9, but the latest version of cmdargs is 0.9.3 and I'm sure diagrams-svg would work with it too
2012-03-17 01:16:38 UTC <luite_> k security problem fixed :)
2012-03-17 01:20:23 UTC <byorgey> yay =)
2012-03-17 01:21:17 UTC <luite_> hmm, I wonder if I should implement "realtime cells", that automatically re-eval after each code update before launch
2012-03-17 01:23:03 UTC <luite_> it's tempting because it's kinda cool to type and get immediate feedback (you could for ex set up a quickcheck realtime cell and a few with manual test data when you work on a function)
2012-03-17 01:23:18 UTC <byorgey> that is pretty cool
2012-03-17 01:23:32 UTC <luite_> and it would be pretty simple to implement
2012-03-17 01:25:50 UTC <luite_> there are a few other niceties that I'd like to have soon, like parsing large 'deriving Show' output, making a nice hierarchical tree output with collapsible nodes
2012-03-17 01:26:27 UTC <luite_> but that's not terribly important
2012-03-17 01:26:52 UTC <byorgey> there will always be more features to add
2012-03-17 01:26:59 UTC <luite_> yeah, lots :)
2012-03-17 01:27:29 UTC <byorgey> I say just release =)
2012-03-17 01:27:30 UTC <luite_> another one is to automatically :browse symbols after code reload
2012-03-17 01:27:43 UTC <luite_> and to setup autocomplete in the editor
2012-03-17 01:28:25 UTC <luite_> hehe yeah that might not be a bad idea
2012-03-17 01:29:19 UTC <byorgey> btw, where did stuff with the haskell.org committee end up? do I need to poke them again on your behalf?
2012-03-17 01:30:42 UTC <luite_> uh I thought that it's basically accepted on the condition that code is available for review and that I agree with possible future changes in the policy, haven't really asked for confirmation though
2012-03-17 01:31:54 UTC <luite_> but I just wanted to set up a demo and ask them agein then
2012-03-17 01:32:01 UTC <byorgey> OK.  yeah, sounds good.
2012-03-17 01:36:51 UTC <luite_> I've written most of the static pages now, about/contact/feedback/poweredby
2012-03-17 01:37:18 UTC <luite_> the things still missing are showcase/pastebin/what'snew/categories
2012-03-17 01:39:31 UTC <luite_> all not terribly important to have
2012-03-17 18:04:22 UTC <luite_> http://hdiff.luite.com/tmp/realtime.png
2012-03-17 18:16:56 UTC <fryguybob> So the realtime expressions get updated when you change other parts of the page?
2012-03-17 18:17:24 UTC <luite_> yeah, so you can for example have some test data of quickcheck properties active while you work on an algorithm
2012-03-17 18:17:35 UTC <luite_> every time the code is reloaded, it reevals all realtimes
2012-03-17 18:17:58 UTC <fryguybob> Nice.
2012-03-17 18:19:00 UTC <luite_> was a really simple addition :)
2012-03-17 18:22:24 UTC <fryguybob> So now you can build a spreadsheet :D
2012-03-17 18:27:27 UTC <luite_> hmm, and now you can also save documents with realtime cells :) (had a bug in the cell options parsing thing)
2012-03-17 18:31:29 UTC <luite_> drawing the icon actually took most of the time :)
2012-03-17 18:53:15 UTC <byorgey> luite_: awesome =)
2012-03-17 19:00:05 UTC <luite_> yeah it's really an old idea, last summer we discussed in this channel or #haskell-blah what to do when code changes, reeval all expressions or not. I think this is a good compromise
2012-03-17 19:02:10 UTC <luite_> gweber in #yesod posted a link to this video yesterday, http://vimeo.com/36579366 , which reminded me of that :)
2012-03-18 02:12:12 UTC <niteria> Hello, I'm following http://projects.haskell.org/diagrams/tutorial/DiagramsTutorial.html and beside now works differently
2012-03-18 02:55:41 UTC <tgeeky__> byorgey: challenge accepted?
2012-03-18 03:01:41 UTC <fryguybob> ACTION was just crafting a response :(
2012-03-18 03:04:57 UTC <tgeeky__> hehe
2012-03-18 03:17:13 UTC <byorgey> niteria just sent me a patch fixing it =)
2012-03-18 16:28:34 UTC <luite_> http://hdiff.luite.com/tmp/browser.png <- hah that wil teach them old IE version users
2012-03-18 17:40:05 UTC <byorgey> luite_: hah, nice =)
2012-03-18 21:10:48 UTC <cheater_> you guys seen this? http://www.youtube.com/watch?feature=player_embedded&v=nHh00VPT7L4#!
2012-03-18 22:23:10 UTC <tgeeky__> cheater_: pretty nice, in principle
2012-03-19 00:43:33 UTC <vyom> This line is failing in ghc 0.7.3 https://github.com/deepakjois/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L37
2012-03-19 00:43:41 UTC <vyom> any idea why
2012-03-19 00:46:28 UTC <vyom> this is the error http://travis-ci.org/#!/deepakjois/hs-logo/builds/896547/L417
2012-03-19 00:47:36 UTC <vyom> is there something different about ghc 7.0.3 regarding "<>" operator
2012-03-19 00:56:20 UTC <luite_> it can't find <> ?
2012-03-19 00:57:19 UTC <vyom> luite_: so does that mean "<>" is not exposed in an older version of Data.Monad ?
2012-03-19 00:57:40 UTC <luite_> yeah, it was added as (<>) = mappend in a later Data.Monoid
2012-03-19 00:57:54 UTC <vyom> that means diagrams-svg is broken on older ghc :(
2012-03-19 00:58:00 UTC <luite_> yup
2012-03-19 00:59:27 UTC <vyom> any better fixes other than replacing "<>" with "mappend"
2012-03-19 00:59:28 UTC <vyom> ?
2012-03-19 01:15:34 UTC <luite_> I think that you can remove the hiding ((<>)) from the diagrams import
2012-03-19 01:16:06 UTC <luite_> since I think it just exports the Data.Monoid one now, but byorgey would have to confirm that :)
2012-03-19 01:19:51 UTC <vyom> luite_: in that case wont I have to hide the "<>" coming from the regular prelude
2012-03-19 01:20:26 UTC <vyom> will that break on older ghc
2012-03-19 01:26:17 UTC <luite_> vyom: I think diagrams defines its own for older GHC, and uses the Data.Monoid one for new
2012-03-19 01:29:00 UTC <fryguybob> I think it comes from semigroups perhaps?
2012-03-19 01:33:57 UTC <luite_> oh I thought it wuld just do its own (<>) = mappend now
2012-03-19 01:43:25 UTC <vyom> decided to keep it simple and just use mappend. Builds now http://travis-ci.org/#!/deepakjois/diagrams-svg
2012-03-19 01:45:00 UTC <byorgey> hmmm
2012-03-19 01:45:09 UTC <byorgey> ACTION is actually confused about where <> is coming from, I forget
2012-03-19 01:45:57 UTC <byorgey> vyom: in some of the diagrams packages we have to resort to CPP macros to include import statements conditionally on the version of base
2012-03-19 01:46:42 UTC <fryguybob> Diagrams.Prelude> :i (<>)
2012-03-19 01:46:46 UTC <fryguybob> -- Defined in `Data.Semigroup'
2012-03-19 01:46:57 UTC <byorgey> ah, yes, I had just figured that out too =)
2012-03-19 01:47:03 UTC <byorgey> Diagrams.Prelude re-exports Data.Semigroup
2012-03-19 01:47:11 UTC <vyom> byorgey: any example source file i can look at?
2012-03-19 01:48:17 UTC <byorgey> oh, hmm, actually it looks like we don't do that in diagrams, I was thinking of some other projects we have
2012-03-19 01:48:41 UTC <byorgey> vyom: one solution is to import Data.Semigroup instead of Data.Monoid
2012-03-19 01:48:56 UTC <byorgey> it re-exports most of the stuff from Data.Monoid but makes (<>) part of the Semigroup class
2012-03-19 01:49:22 UTC <vyom> ok will look
2012-03-19 01:49:27 UTC <byorgey> it's a bit annoying though because Semigroup is not a superclass of Monoid
2012-03-19 01:49:38 UTC <byorgey> (Semigroup being Monoid without mempty)
2012-03-19 01:49:39 UTC <vyom> Travis CI with Haskell support is pretty cool.. continuous build ftw!
2012-03-19 01:49:45 UTC <byorgey> nice =)
2012-03-19 01:50:40 UTC <vyom> set it up for both hs-logo and diagrams-svg
2012-03-19 01:53:12 UTC <byorgey> that looks pretty cool
2012-03-19 01:54:05 UTC <byorgey> which also reminds me, I should reestablish mirrors of the diagrams repos on github, even if darcs-bridge doesn't work for importing git->darcs we can still have read-only mirrors
2012-03-19 01:54:17 UTC <byorgey> then we could also set up Travis CI for the main diagrams repos
2012-03-19 01:55:47 UTC <fryguybob> So, house projects and grading got in the way of geting any diagrams done this week.
2012-03-19 01:56:43 UTC <byorgey> fryguybob: no worries. it was my fault for releasing at such a bad time for you. ;)
2012-03-19 01:56:53 UTC <fryguybob> I know break and all :D
2012-03-19 01:57:18 UTC <fryguybob> But at least I'm getting a bike shed out of it.
2012-03-19 01:57:32 UTC <fryguybob> (no we have not had a discussion about the color yet)
2012-03-19 01:57:37 UTC <byorgey> hehehe
2012-03-19 01:58:09 UTC <byorgey> oh, Travis CI only has the Haskell Platform, that's not as useful since we need to test on GHC 7.2 and 7.4 as well
2012-03-19 01:58:17 UTC <luite_> oh for what kinf of bikes?
2012-03-19 01:58:59 UTC <fryguybob> Touring bikes (that we ride whenever possible) and two mountain bikes that we never ride.
2012-03-19 01:59:22 UTC <fryguybob> And a bike trailer for when the child is big enough.
2012-03-19 02:00:27 UTC <vyom> byorgey: true.. fwiw i use 7.4 for development so it helps to have 7.2 building some place else :)
2012-03-19 02:00:28 UTC <luite_> I'm still waiting for some o-rings that I need for my brakes :(
2012-03-19 02:01:05 UTC <byorgey> vyom: well, the latest Haskell Platform still has GHC 7.0.4
2012-03-19 02:02:27 UTC <vyom> byorgey: sorry i meant 7.0.4 only
2012-03-19 02:03:12 UTC <vyom> wasnt 7.2 an "unofficial" release? :)
2012-03-19 02:15:56 UTC <luite_> meh still no viewers on my wolfgang repository ;)
2012-03-19 02:36:27 UTC <byorgey> luite_: oh, you put it up somewhere?
2012-03-19 02:38:44 UTC <luite_> hehe nah I just created the repository :)
2012-03-19 02:38:57 UTC <vyom> added some transform helpers to blaze-svg https://github.com/deepakjois/blaze-svg/commit/936a4469d8ff9a6891ab9016d3db74fa3f0bf84b
2012-03-19 02:39:22 UTC <luite_> I'm writing an introduction page, fixing bugs along the way
2012-03-19 02:39:25 UTC <byorgey> luite_: oh, hehe, I see.  You have a wiki!
2012-03-19 02:39:39 UTC <vyom> thats all i could get done this weekend.. apart from some hs-logo tweaks
2012-03-19 02:39:46 UTC <byorgey> luite_: I clicked the creepy little "eye" icon in the top right, I hope you're happy now
2012-03-19 02:40:43 UTC <byorgey> vyom: cool
2012-03-19 02:40:49 UTC <luite_> hehe, I'm hoping to get more viewers for this one than for my others, before committing a file ;p
2012-03-19 02:42:01 UTC <byorgey> I'M WATCHING YOU
2012-03-19 02:42:13 UTC <byorgey> I know where you(r git repo) live(s)
2012-03-19 02:43:23 UTC <luite_> but I'm probably going to try and install it on the server next weekend
2012-03-19 02:43:41 UTC <byorgey> sweet
2012-03-19 03:23:04 UTC <vyom> All builds are passing
2012-03-19 03:23:09 UTC <vyom> http://gyazo.com/44e3352170ae3abcb7a11827b2e5fa31
2012-03-19 03:23:19 UTC <vyom> :)
2012-03-19 05:02:33 UTC <tgeeky__> vyom: I don't know how to view whatever is behind that link
2012-03-19 05:19:11 UTC <vyom> tgeeky__: doesnt an image show up for you.. it should be webpage with an image on it
2012-03-19 05:19:58 UTC <vyom> try this http://cache.gyazo.com/44e3352170ae3abcb7a11827b2e5fa31.png
2012-03-19 05:30:11 UTC <tgeeky__> vyom: yes, I this [T]ravis thing
2012-03-19 05:30:53 UTC <tgeeky__> dunno what I was expecting.
2012-03-19 05:31:42 UTC <vyom> tgeeky__: Travis recently announced support for haskell : http://about.travis-ci.org/blog/announcing_support_for_haskell_on_travis_ci/
2012-03-19 05:32:15 UTC <vyom> so i just turned it all for my haskell projects on github
2012-03-19 05:32:33 UTC <vyom> s/all/on/
2012-03-19 05:32:53 UTC <mgsloan> wow!!! that's amazing
2012-03-19 05:33:04 UTC <mgsloan> does it only recompile when you submit patches?
2012-03-19 05:34:27 UTC <vyom> mgsloan: or in github terminology whenever you push to a repo
2012-03-19 05:34:39 UTC <mgsloan> right
2012-03-19 05:35:02 UTC <tgeeky__> vyom: does it recompile when you push non-code updates (like README)?
2012-03-19 05:36:34 UTC <vyom> it probably does.. unless it has special logic for that built in..
2012-03-19 05:37:27 UTC <vyom> now that you ask, it does indeed : http://travis-ci.org/#!/deepakjois/blaze-svg/builds
2012-03-19 05:39:54 UTC <tgeeky__> this site is kind of wonderful
2012-03-19 19:07:14 UTC <tgeeky__> byorgey: do you think you could relate the utility of the "binders, unbound" stuff to me?
2012-03-19 20:00:47 UTC <byorgey> tgeeky__: have you ever implemented any sort of compiler, interpreter, refactoring tool, ...?
2012-03-19 20:09:32 UTC <tgeeky__> byorgey: not that I remember the signifiance of :O (not recently)
2012-03-19 20:09:44 UTC <tgeeky__> i read your blog post (after I asked)
2012-03-19 20:09:47 UTC <tgeeky__> it was more approachable
2012-03-19 20:10:01 UTC <byorgey> ah, ok
2012-03-19 20:12:49 UTC <byorgey> tgeeky__: so do you still have questions about it or is your curiosity sated for the moment?
2012-03-19 20:13:23 UTC <tgeeky__> byorgey: i'm fine for the moment, thanky
2012-03-19 20:13:27 UTC <byorgey> ok =)
2012-03-20 00:18:58 UTC <luite_> hehe 3 watchers already, tnx fryguybob :)
2012-03-20 00:22:44 UTC <luite_> I feel like a rockstar programmer now ;)
2012-03-20 00:40:46 UTC <vyom> luite_: is that a github repo we are talking about
2012-03-20 00:40:47 UTC <vyom> ?
2012-03-20 00:40:59 UTC <luite_> yes
2012-03-20 00:41:04 UTC <luite_> but an empty one
2012-03-20 00:41:59 UTC <luite_> they are lining up, eager to see the first commit arrive
2012-03-20 00:42:07 UTC <luite_> the crows are going wild!
2012-03-20 00:42:12 UTC <vyom> lol
2012-03-20 01:07:03 UTC <byorgey> CAW CAW CAW
2012-03-20 01:27:46 UTC <luite_> they're very intelligent birds!
2012-03-20 02:30:45 UTC <fryguybob> ACTION wonders if luite_ has just been showing screen shots and now is waiting for pull requests from all of us to match the screen shots :P
2012-03-20 02:36:29 UTC <luite_> yes!
2012-03-20 02:36:39 UTC <luite_> the screen shots were photoshops of course
2012-03-20 02:37:26 UTC <byorgey> a bold plot
2012-03-20 02:37:36 UTC <byorgey> luite_ definitely has mad photoshop skillz
2012-03-20 02:38:52 UTC <luite_> hehe yeah I guess it would've been almost as much work to photoshop them all :)
2012-03-20 14:06:05 UTC <luite_> wolfgang now sends a list of all names in scope, with types, and where they were imported, back to the client every refresh :)
2012-03-20 15:06:18 UTC <luite_> the names for the diagrams tutorial are 380kB, fortunately this is compressed to 20kB
2012-03-20 15:51:46 UTC <luite_> any ideas what the best way to show type hints would be? they'd show the possible names that the thing your typing, or the thing your cursor is on, can refer to, with their type, how they were imported and where they're defined
2012-03-20 20:24:52 UTC <tgeeky_> luite_: don't worry about it yet
2012-03-20 20:25:19 UTC <tgeeky_> I'm annoyed with 'gregwebber' on this ticket: http://hackage.haskell.org/trac/summer-of-code/ticket/1609
2012-03-20 20:52:44 UTC <luite_> yeah I'm not sure what he's trying to accomplish
2012-03-20 20:58:24 UTC <tgeeky_> luite_: I don't like when people tell us what will / won't be useful or interesting in the future :o
2012-03-20 20:59:03 UTC <luite_> he knows what I'm doing, maybe he's just trying to discourage Apfelmus a bit or something...
2012-03-20 21:11:31 UTC <tgeeky_> luite_: I also don't think "ghci" -> web is necessarily the right target, but you already know that
2012-03-20 21:21:52 UTC <luite_> hm, I know that you have some other ideas, but I have to admit that that I don't know exactly what they are
2012-03-20 21:22:55 UTC <tgeeky_> luite_: the main difference between what you're doing and what I want, is that you view it as a service/wiki, and I view it as a (local)web-IDE/wiki
2012-03-20 21:23:31 UTC <tgeeky_> and also I want diagrams, everywhere
2012-03-20 21:23:39 UTC <luite_> everywhere?
2012-03-20 21:23:45 UTC <tgeeky_> EVERYWHERE
2012-03-20 21:23:46 UTC <tgeeky_> hehe
2012-03-20 21:23:49 UTC <luite_> oh right, local is the next thing :)
2012-03-20 21:24:51 UTC <tgeeky_> luite_: while watching an episode of "Dirk Gently" (http://en.wikipedia.org/wiki/Dirk_Gently) last night, I realized what I want could best be explained
2012-03-20 21:24:53 UTC <luite_> but I'm not sure I'd call it an IDE, then it would have to be as good as people's own tuned emacs setups etc
2012-03-20 21:25:02 UTC <tgeeky_> luite_: not as good, better!
2012-03-20 21:25:35 UTC <tgeeky_> luite_: have you seen the movie "Iron Man"?
2012-03-20 21:25:42 UTC <luite_> only the first one
2012-03-20 21:25:54 UTC <tgeeky_> yeah. you know the computer system that he has at his home
2012-03-20 21:26:01 UTC <tgeeky_> that caters to his every whim, etc :O
2012-03-20 21:26:54 UTC <luite_> hmm, vaguely at best :p
2012-03-20 21:27:33 UTC <tgeeky_> luite_: it helps him model things (in 3d), invent things, plan his schedule, do searches for him, etc
2012-03-20 21:28:01 UTC <tgeeky_> but, in a sense, all of that is useless if you're not a genius already (like the character Tony Stark)
2012-03-20 21:28:14 UTC <tgeeky_> I want software that will let Dirk Gently, become Tony Stark :o
2012-03-20 21:28:23 UTC <tgeeky_> (you'd have to read the wiki)
2012-03-20 21:29:15 UTC <tgeeky_> hehe, it's a good one-line thing, but you have to have read/watched the movies to get it :O
2012-03-20 21:30:08 UTC <luite_> hehe
2012-03-20 21:30:21 UTC <luite_> I don't watch movies that often
2012-03-20 21:30:42 UTC <tgeeky_> me neither. I see it as a good thing, because great movies don't often appear
2012-03-20 21:31:02 UTC <tgeeky_> my brother loves watching movies, but he just had a kid, so I think he's soon going to hate kids movies
2012-03-20 21:31:49 UTC <luite_> but I have seen Amadeus of course ;p
2012-03-20 21:33:08 UTC <tgeeky_> haha.
2012-03-20 21:33:40 UTC <tgeeky_> hopefully you don't make a design decision that would make Mozart turn over in his grave.
2012-03-20 21:33:53 UTC <tgeeky_> "I only use structural recursion, you insensitive clod!"
2012-03-20 21:34:42 UTC <luite_> hehe I'm already trying to scare people by saying that it only generates empty html pages and that it loads 850kB javascript to load all content
2012-03-20 21:35:09 UTC <tgeeky_> that's nothing!
2012-03-20 21:35:14 UTC <tgeeky_> if you cache 849kB of it
2012-03-20 21:35:34 UTC <luite_> it's a single large minified script that contains all static scripts
2012-03-20 21:35:55 UTC <tgeeky_> horrible
2012-03-20 21:36:07 UTC <luite_> the other scripts are mathjax, and some social sharing stuff
2012-03-20 21:36:16 UTC <luite_> and a few small snippets generated by the server
2012-03-20 21:37:51 UTC <luite_> tgeeky_: a single big script does generate more traffic if you change it because everyone has to redownload it, but it saves some time when loading a page, one http request instead of 90 separate scripts
2012-03-20 21:39:17 UTC <luite_> the server gzips everything, that also helps
2012-03-20 21:40:30 UTC <fryguybob> luite_: Just never update.  Better write it all in agda and compile to JS.
2012-03-20 21:41:07 UTC <luite_> I'm writing a javascript to agda compiler that automatically removes all bugs
2012-03-20 21:41:16 UTC <fryguybob> even better!
2012-03-20 23:19:02 UTC <tgeeky_> luite_: yeah, I suspect a protocol/design which just does that behavior is a good idea
2012-03-21 23:05:18 UTC <edgar> Hi!
2012-03-21 23:06:55 UTC <fryguybob> Hi edgar
2012-03-21 23:06:57 UTC <edgar> Is it possible to crop a draw or limit the view area in diagrams?
2012-03-21 23:07:25 UTC <edgar> I'm using the SVG backend.
2012-03-21 23:07:42 UTC <edgar> diagrams-SVG
2012-03-21 23:08:05 UTC <fryguybob> I don't think so, I'll check though.
2012-03-21 23:09:43 UTC <fryguybob> I think the best you can do right now is pad with a value between 0 and 1
2012-03-21 23:10:08 UTC <luite_> does anyone want to write a haskell parser in javascript for me? :)
2012-03-21 23:10:35 UTC <fryguybob> luite_: PEG.js?
2012-03-21 23:12:53 UTC <fryguybob> I thought we had some limited cropping but I guess not. byorgey did we every have cropping?
2012-03-21 23:13:31 UTC <luite_> fryguybob: yeah I started with that, but ugh...
2012-03-21 23:13:39 UTC <luite_> too much work :p
2012-03-21 23:13:49 UTC <fryguybob> luite_: You mean you can't just paste the report in there :P
2012-03-21 23:13:56 UTC <luite_> yeah
2012-03-21 23:14:05 UTC <luite_> and of course the report is really incomplete
2012-03-21 23:15:23 UTC <edgar> In SVG there is the viewport tag should work in that case, shouldn't ?
2012-03-21 23:17:52 UTC <fryguybob> edgar: I don't know how well implemented the features are with SVG implementations but I think there are clipping paths and viewports that would handle anthing we would want to do.
2012-03-21 23:20:09 UTC <fryguybob> luite_: What are you wanting to do with this Haskell parser?
2012-03-21 23:22:27 UTC <luite_> context-sensitive help in wolfgang
2012-03-21 23:24:33 UTC <edgar> fryguybob: As far as I know they are not implemented yet but I'll solve that :)
2012-03-21 23:24:57 UTC <fryguybob> edgar: excellent
2012-03-21 23:25:00 UTC <edgar> Thanks for helping
2012-03-21 23:25:13 UTC <fryguybob> luite_: So would the parse for syntax highlighting be enough?
2012-03-21 23:29:05 UTC <luite_> fryguybob: well, I think it would be a bit too limited. the actual problem at hand is that I get a list of type sigs from GHC, those are haskell syntax, all types in those are qualified
2012-03-21 23:29:32 UTC <luite_> and I want to rewrite them to unqualify them, or requalify
2012-03-21 23:29:58 UTC <luite_> for example if Data.Text is imported as T, then Data.Text.pack would be rewritten as T.pack because it's simpler
2012-03-21 23:30:49 UTC <fryguybob> Yeah. Javascript would not be my choice for that.
2012-03-21 23:31:25 UTC <fryguybob> (\forall that. ...)
2012-03-21 23:32:05 UTC <luite_> yeah, probably better to write it in haskell and use uhc to compile it to js :)
2012-03-21 23:32:38 UTC <luite_> it looks like buildwrapper already has some json ast things going oin
2012-03-21 23:32:54 UTC <luite_> if I just get the AST in JS, that would save me one tricky step
2012-03-21 23:33:04 UTC <luite_> prettyprinting in JS would still be somewhat annoying
2012-03-21 23:44:47 UTC <luite_> hm ok buildwrapper does it rather uglily
2012-03-21 23:57:45 UTC <edgar> fryguybob: Back on the topic, a deeper search on diagrams revealed the function "view", see http://projects.haskell.org/diagrams/doc/Diagrams-TwoD-Combinators.html#v:view
2012-03-21 23:58:14 UTC <edgar> I'll try that first...
2012-03-22 00:27:47 UTC <edgar> Bingo!!! The function "view" works perfectly.
2012-03-22 00:29:40 UTC <tgeeky_> byorgey: have you looked at the work done by Nicolas Frisby?
2012-03-22 00:31:37 UTC <edgar> I'done for today. Night-night guys...
2012-03-22 00:52:09 UTC <byorgey> tgeeky_: which work?
2012-03-22 01:52:41 UTC <tgeeky_> byorgey: yoko and/or the type-spine work
2012-03-22 01:54:14 UTC <byorgey> tgeeky_: I'm vaguely familiar with the type-spine work but have never heard of yoko
2012-03-22 01:56:14 UTC <byorgey> hmm, yoko looks pretty cool
2012-03-22 01:56:51 UTC <tgeeky_> byorgey: since the intro says "before kind-poly" hits the mainline, is that all not necessary with 7.4?
2012-03-22 01:57:08 UTC <tgeeky_> byorgey: or is there something to be gained by using the kind-level stuff with his faked stuff?
2012-03-22 01:57:43 UTC <byorgey> tgeeky_: I'm guessing the latter
2012-03-22 01:57:58 UTC <byorgey> kind polymorphism certainly doesn't directly help with generic programming
2012-03-22 01:58:17 UTC <tgeeky_> byorgey: yeah, he says it in the top of the type-spine package
2012-03-22 02:07:46 UTC <byorgey> tgeeky_: I *think* it's just referring to the fact that you currently have to explicitly enumerate all the kinds you want to use it with, and new code has to be generated for each, or something like that
2012-03-22 02:07:59 UTC <byorgey> once we have kind polymorphism one might hope to be able to write the code once and have it work for all kinds
2012-03-23 13:08:36 UTC <alpounet> byorgey, i answered your -cafe thread
2012-03-23 13:49:43 UTC <luite_> ah then I know who you are!
2012-03-23 13:55:34 UTC <tgeeky_> luite_: muhaha!
2012-03-23 13:56:12 UTC <alpounet> luite_, well, you also can /whois me to know who I am
2012-03-23 13:56:17 UTC <alpounet> :p
2012-03-23 13:56:29 UTC <tgeeky_> it's a trick!
2012-03-23 18:23:41 UTC <tgeeky_> luite_: I think you might be falling into the use case of multiplate
2012-03-23 18:24:20 UTC <luite_> tgeeky_: oh doing the AST manipulation already works
2012-03-23 18:25:05 UTC <tgeeky_> yeah but you want to pretty print it
2012-03-23 18:25:40 UTC <tgeeky_> actually, what am I saying. This is partial-iso, not multiplate :O
2012-03-23 18:25:52 UTC <luite_> with SYB, and some custom traverse functions to carefully thread through the minefield that is the GHC AST
2012-03-23 18:27:08 UTC <luite_> trying to remove some of the problematic haskell-src-exts things atm
2012-03-23 18:27:20 UTC <tgeeky_> luite_: replacing them with your own code?
2012-03-23 18:27:38 UTC <luite_> no letting GHC do the work instead of modifying haskell source
2012-03-23 18:30:18 UTC <luite_> I did get a reply from niklas broberg, but at least the {-# LANGUAGEScopedTypeVariables #-} prettyprinting bug won't be fixed any time soon
2012-03-23 18:30:54 UTC <luite_> and I have some bugs in my own code that tries to renumber the lines after modifying the haskell source, causing javascript errors when errors are reported for nonexistent lines
2012-03-23 18:31:05 UTC <ClaudiusMaximus> ACTION approaches the generic all you can eat buffet with a multiplate
2012-03-23 18:31:38 UTC <tgeeky_> ClaudiusMaximus: lol. I had to read that several times to get it, but funny.
2012-03-23 18:31:45 UTC <luite_> so I hope to do the haskell-src-exts pass now just to do a first check, and if the parser accepts it, send the original code to the backend, and letGHC do the rest
2012-03-23 18:32:18 UTC <luite_> that is just a better design :) and it allows easier access to the ASTs for furder processing
2012-03-23 18:32:18 UTC <tgeeky_> luite_: have you worked with haskell-src-meta?
2012-03-23 18:32:46 UTC <luite_> nope
2012-03-23 19:03:58 UTC <byorgey> alpounet: I think it's too late, they have all already chosen their projects
2012-03-23 19:04:04 UTC <alpounet> oh. :(
2012-03-23 19:04:34 UTC <alpounet> i'll just hope a GSoC student will pick scoutess :p
2012-03-23 19:05:05 UTC <byorgey> yes, I hope so too!
2012-03-23 19:05:34 UTC <byorgey> alpounet: btw, how did you choose the name?
2012-03-23 19:05:49 UTC <alpounet> it took us like 3 days
2012-03-23 19:06:01 UTC <alpounet> jeremy's girlfriend and mine were also involved, giving ideas etc
2012-03-23 19:06:21 UTC <tgeeky_> ACTION might work on scoutess.
2012-03-23 19:06:36 UTC <tgeeky_> ACTION is trying to sign up for GSoC 2012, but it's taking a metric forever to send me a verification e-mail
2012-03-23 19:07:07 UTC <alpounet> byorgey, but well, we wanted a name that kind of has a "go fetch informations and present them to us" conotation
2012-03-23 19:07:19 UTC <alpounet> so scout came up
2012-03-23 19:07:22 UTC <byorgey> alpounet: ah, I see
2012-03-23 19:07:22 UTC <alpounet> (like in the army)
2012-03-23 19:07:28 UTC <byorgey> right
2012-03-23 19:07:29 UTC <alpounet> the -ess is just for geeks
2012-03-23 19:07:38 UTC <tgeeky_> alpounet: like TF2 characters? So... GHC is Heavy?
2012-03-23 19:07:56 UTC <alpounet> they feel more comfortable with feminine stuffs, see lambdabot :p
2012-03-23 19:08:00 UTC <alpounet> hah
2012-03-23 19:08:03 UTC <byorgey> hehe
2012-03-23 19:08:07 UTC <alpounet> tgeeky_, you aren't a student, are you? :P
2012-03-23 19:08:16 UTC <tgeeky_> alpounet: of many things, I am.
2012-03-23 19:08:24 UTC <alpounet> really?
2012-03-23 19:08:31 UTC <tgeeky_> alpounet: I'm not otherwise employed, so why not?
2012-03-23 19:08:53 UTC <ClaudiusMaximus> ACTION remembers a program called 'scout' - it let me browse through OS internal structures on my Amiga
2012-03-23 19:09:08 UTC <tgeeky_> OLD person alert!
2012-03-23 19:09:20 UTC <tgeeky_> I used Amigas to do video editing in high school.
2012-03-23 19:09:38 UTC <alpounet> ClaudiusMaximus, hah, this one will let you browse... dependency hells, breaking changes in your dependencies' repos, etc
2012-03-23 19:09:41 UTC <alpounet> isn't that nice too?!
2012-03-23 19:09:56 UTC <ClaudiusMaximus> :)
2012-03-23 19:11:41 UTC <alpounet> tgeeky_, no seriously, are you officially a student?
2012-03-23 19:11:58 UTC <tgeeky_> alpounet: nope. But I don't know if that will stop me
2012-03-23 19:12:13 UTC <tgeeky_> a few people have indicated it won't
2012-03-23 19:12:16 UTC <alpounet> it most likely will
2012-03-23 19:12:40 UTC <alpounet> IIRC, i had to send a paper by my uni saying i was studying there
2012-03-23 19:12:53 UTC <alpounet> like, an official statement
2012-03-23 19:14:43 UTC <alpounet> you'd have to check the GSoC FAQ I think
2012-03-23 19:17:14 UTC <alpounet> tgeeky_, http://www.google-melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#student_eligibility
2012-03-23 19:18:19 UTC <tgeeky_> alpounet: yeah. I could enroll at my university (GT), but $5000 might not offset the cost :o
2012-03-23 19:19:01 UTC <alpounet> GT?
2012-03-23 19:19:39 UTC <tgeeky_> alpounet: Georgia Institute of Technology
2012-03-23 19:20:44 UTC <alpounet> oh ok
2012-03-23 19:27:34 UTC <luite_> will there be a diagrams GSoC? :)
2012-03-23 19:27:52 UTC <byorgey> luite_: heh, well, not this year at least =)
2012-03-23 19:28:15 UTC <luite_> it isn't too late to submit a proposal, is it?
2012-03-23 19:29:48 UTC <alpounet> student applications haven't started yet
2012-03-23 19:29:51 UTC <alpounet> so it definitely isn't
2012-03-23 19:36:06 UTC <byorgey> hmm
2012-03-23 19:36:54 UTC <alpounet> they start on March, 26th
2012-03-23 19:37:29 UTC <byorgey> you just mean to submit a proposal under the aegis of the Haskell GSoC?
2012-03-23 19:39:00 UTC <byorgey> I'd want to have a well-defined project/task, not just "work on diagrams"
2012-03-23 19:39:17 UTC <byorgey> I'm not really sure what would work for a whole summer
2012-03-23 19:39:31 UTC <alpounet> one of the long term goals might
2012-03-23 19:41:50 UTC <luite_> text support with "everything" could be a project, lots of subtasks, and it would also be useful if it's not finished completely
2012-03-23 19:42:29 UTC <byorgey> luite_: ah, that's true
2012-03-23 19:43:43 UTC <luite_> there's probably much more work than a GSoC in it if you want to go all the way with font support, LaTeX integration, text layout solver, text alongh paths
2012-03-23 19:43:54 UTC <alpounet> LaTeX integration?
2012-03-23 19:43:58 UTC <alpounet> that'd be soooo awesome!
2012-03-23 19:46:37 UTC <luite_> I think it could be a fairly attractive project, would make diagrams much more usable as a tikz replacement
2012-03-23 19:47:40 UTC <luite_> alpounet: yeah dunno how exactly that would work, so maybe it's unrealistic
2012-03-23 19:48:20 UTC <Mathnerd314> Asymptote has LaTeX integration, you could look at how it does that
2012-03-23 19:48:21 UTC <alpounet> yeah, unrealistic but awesome! :p
2012-03-23 19:48:47 UTC <Mathnerd314> (http://asymptote.sourceforge.net/)
2012-03-23 19:49:37 UTC <fryguybob> luite_: We know how to do diagrams code inline with LaTeX.  I've used some packages to overlay LaTeX over a figure.  It would be interesting to use those two in conjunction.
2012-03-23 19:50:38 UTC <luite_> yeah just overlaying would be a good start already
2012-03-23 19:51:17 UTC <luite_> maybe there's some good way to let LaTeX give some metrics about typeset text to diagrams, so that it can build its layouts around that?
2012-03-23 19:52:15 UTC <fryguybob> Yeah.  I think there is some way to do that.
2012-03-23 19:52:29 UTC <byorgey> although that would require constraint-solving stuff, i.e. collect constraints when building a diagram and only resolve everything later
2012-03-23 19:52:51 UTC <byorgey> well, no, I guess you could have a function  latexText :: String -> IO Diagram
2012-03-23 19:53:23 UTC <fryguybob> There is \settowidth and \settodepth
2012-03-23 19:53:53 UTC <luite_> ah
2012-03-23 19:54:07 UTC <luite_> that looks interesting
2012-03-23 19:54:45 UTC <fryguybob> So you could have an environment that you write a map of id's to labels in TeX then dump that with sizes to be used as input to a diagram function.
2012-03-23 19:55:24 UTC <byorgey> sounds cool
2012-03-23 19:56:58 UTC <fryguybob> bbl
2012-03-23 19:59:25 UTC <luite_> fryguybob: could be a bit tricky with rotation, scaling and perhaps other transformations?
2012-03-23 19:59:50 UTC <luite_> can you restrict transformations for some diagram elements?
2012-03-23 20:01:28 UTC <byorgey> luite_: you can always make a newtype wrapper with a different Transformable instance
2012-03-23 20:02:07 UTC <byorgey> luite_: but you can't really sometimes transform certain things and other times not
2012-03-23 20:02:25 UTC <byorgey> not sure what would be needed though.
2012-03-23 20:02:39 UTC <luite_> yeah actually, that's what I meant: is it possible to make some type for nontransformable labels
2012-03-23 20:12:28 UTC <byorgey> luite_: sure.  Just make   newtype Nontransformable t = Nontransformable t;  instance Transformable (Nontransformable t) where transform _ n = n
2012-03-23 20:15:46 UTC <tgeeky_> don't type that, your head will exploooodeee!
2012-03-23 20:16:52 UTC <byorgey> I guess Nontransformable is probably not a good name =)
2012-03-23 20:17:06 UTC <alpounet> "instance Transformable (Nontransformable t"
2012-03-23 20:17:15 UTC <byorgey> yeah, hehe =)
2012-03-23 20:17:16 UTC <alpounet> yeah, this will make soooooo much sense to new users
2012-03-23 20:17:20 UTC <alpounet> :D
2012-03-23 20:17:39 UTC <tgeeky_> and it will crush the souls of Decipticons and Other-robot-icons all over the universe.
2012-03-23 20:17:40 UTC <byorgey> a better name might be Invariant
2012-03-24 03:40:26 UTC <luite> tgeeky_: ok, I got everything working now, with some strange GHC hacks required unfortunately, but at least no haskell source code processing/prettyprinting anymore
2012-03-24 03:40:44 UTC <tgeeky_> luite: you just hardcoded the module name?
2012-03-24 03:42:40 UTC <tgeeky_> luite: or, roughly, hand-wrapping the ModuleName
2012-03-24 03:42:48 UTC <luite> no
2012-03-24 03:43:26 UTC <luite> by directly loading the .hs file and some annoying things to prevent GHC from doing the special processing it does with unnamed modules and Main modules
2012-03-24 03:43:47 UTC <luite> no manual haskell source code modification required anymore, and that was the goal
2012-03-24 03:45:51 UTC <tgeeky_> luite: sounds good
2012-03-24 03:45:59 UTC <luite> going to make a few new screenshots now
2012-03-24 03:46:13 UTC <tgeeky_> luite: what percentage are we at these days?
2012-03-24 03:46:27 UTC <luite> of what?
2012-03-24 03:46:41 UTC <tgeeky_> beta release
2012-03-24 03:46:59 UTC <luite> hm, dunno, depends on how many features I'm willing to drop ;p
2012-03-24 03:47:51 UTC <tgeeky_> luite: do you intend to monetize this tool, and/or are you counting on your initial expertise with the codebase to do so?
2012-03-24 03:48:02 UTC <tgeeky_> (I assume no, but just asking anyway)
2012-03-24 03:48:37 UTC <luite> uh I don't think there's much money to be made with it
2012-03-24 03:48:57 UTC <tgeeky_> luite: yeah. WolframAlpha annoyingly thinks there is :O
2012-03-24 03:49:04 UTC <tgeeky_> though at a pretty reasonable price
2012-03-24 03:49:16 UTC <luite> yeah they charge money now, but their service is petty different
2012-03-24 03:49:27 UTC <luite> I mean, this is just a wiki with code, no search engine or big database
2012-03-24 03:50:17 UTC <tgeeky_> ;)
2012-03-24 03:50:22 UTC <luite> it could be useful if you want to make some nice interactive course material, other than that, dunno
2012-03-24 03:51:57 UTC <luite> hang on, making screenshots
2012-03-24 03:53:21 UTC <luite> need to photoshop them this time
2012-03-24 03:55:39 UTC <mgsloan> You might consider adverts to offset server costs
2012-03-24 03:56:10 UTC <mgsloan> we'll be able to use our own personal wolfram lambda servers, too, right?
2012-03-24 03:56:13 UTC <luite> mgsloan: yeah I don't really like that, since it's an IDE/wiki, not really ideal
2012-03-24 03:56:16 UTC <luite> yeah
2012-03-24 03:56:53 UTC <mgsloan> true, wikipedia has established the no adverts tradition of wikis, but they are also backed by a large non-profit
2012-03-24 03:57:23 UTC <tgeeky_> luite: the *real* trick (and one which would be impressive to accomplish on many levels)
2012-03-24 03:57:27 UTC <luite> yeah I thought I'd ask Jimmy Wales to ask for donations every year to cover the server costs
2012-03-24 03:57:29 UTC <mgsloan> you'd be quite justified in doing adverts for a while, or even making money off of the site, considering how much work you've put in!
2012-03-24 03:58:00 UTC <luite> hehe it costs 49 euro or 59 euro at least to run
2012-03-24 03:58:02 UTC <luite> monthly
2012-03-24 03:58:10 UTC <tgeeky_> is to ask developers to "pay the price" by offering a few CPU cores back (when idle, or developing) back to the wolfgang cloud
2012-03-24 03:58:15 UTC <luite> depending on wheter I keep the 8GB server or upgrade to a 32GB one
2012-03-24 03:58:15 UTC <mgsloan> nah, just ask to be able to use his best puppy-dog face in the donation request
2012-03-24 03:59:00 UTC <mgsloan> well, we'll see how the loads pan out - hopefully it takes off, but then you've gotta get more servers / move to a "cloud" platform
2012-03-24 03:59:42 UTC <tgeeky_> luite's a better captain for this than I am
2012-03-24 04:00:05 UTC <mgsloan> ACTION can't wait :D
2012-03-24 04:02:19 UTC <luite> yeah there's one issue that's not really scalable yet
2012-03-24 04:02:57 UTC <luite> when a client sends his source code, it's only sent to one backend... the source code files are write-only, write-once, so it should be easy to distribute between all backends
2012-03-24 04:03:44 UTC <mgsloan> ah, but currently which backend the client is connected to is static?
2012-03-24 04:04:19 UTC <tgeeky_> mgsloan: shh!
2012-03-24 04:04:34 UTC <luite> hmm, convert messed up the colors a bit, but: http://hdiff.luite.com/tmp/types.gif
2012-03-24 04:04:39 UTC <luite> just an early preview
2012-03-24 04:04:44 UTC <tgeeky_> don't accidentally suggest features
2012-03-24 04:04:50 UTC <luite> I'm abusing the error reporting tooltips for it
2012-03-24 04:05:30 UTC <tgeeky_> luite: ah, those are the "made up" source numbers?
2012-03-24 04:05:45 UTC <luite> made up? no everything is real data
2012-03-24 04:05:50 UTC <luite> the numbers are column numbers
2012-03-24 04:05:59 UTC <mgsloan> luite: great! how did you implement that?
2012-03-24 04:06:01 UTC <luite> for the source span that has this type
2012-03-24 04:06:05 UTC <tgeeky_> luite: yeah, but they aren't the same row?
2012-03-24 04:06:19 UTC <tgeeky_> oh, yes they are
2012-03-24 04:06:30 UTC <luite> tgeeky_: oh right, it's a bit messy in how it displays typed spans
2012-03-24 04:06:46 UTC <luite> but of course in reality, typed things are nested
2012-03-24 04:07:00 UTC <tgeeky_> luite: yeah. still. the information is clearly in the document at the right place.
2012-03-24 04:07:03 UTC <tgeeky_> so that's a fantastic start.
2012-03-24 04:07:08 UTC <luite> x -> (x,y) -> origin .+^ (x,y)  etc
2012-03-24 04:07:36 UTC <luite> that is what you'd get in a better version, when you hover x, a list of hierarchical spans containing x, with their types
2012-03-24 04:07:41 UTC <luite> mgsloan: hehe, magic ;p
2012-03-24 04:07:54 UTC <mgsloan> ghc API?
2012-03-24 04:08:16 UTC <luite> tgeeky_: this info isn't available with GHCi and scion etc btw
2012-03-24 04:08:39 UTC <luite> mgsloan: yep, walking the AST of a TypecheckedModule
2012-03-24 04:08:40 UTC <mgsloan> I kinda gave up trying to extract intermediate type info from the GHC API, and so have my own nuts method that currently is only implemented on expressions
2012-03-24 04:08:48 UTC <tgeeky_> luite: yeah, I presume you're really generating line numbers by really having a .hs file somewhere :o
2012-03-24 04:08:54 UTC <mgsloan> luite: woooooooohooooooo! I can't wait for your code
2012-03-24 04:09:06 UTC <mgsloan> this is seriously going to really blow things open for my projcet
2012-03-24 04:09:23 UTC <mgsloan> I'll focus on doing the graphical side of the project, then, rather than the type info part
2012-03-24 04:09:29 UTC <luite> mgsloan: it prints type constraints rather funnily, since I don't have a proper prettyprinter for that yet
2012-03-24 04:10:53 UTC <luite> mgsloan: I'm not sure if EclipseFP or Leksah can do this
2012-03-24 04:11:09 UTC <luite> but it's probably much better than what people have in their vim or emacs setup :)
2012-03-24 04:11:38 UTC <mgsloan> Hmm, this means that my type illustrations will be a transformation on information that you are already calculating, which means serving up SVG or PNG type explanation diagrams will be pretty cheap
2012-03-24 04:12:12 UTC <luite> well, I'm still looking for the user interface
2012-03-24 04:12:27 UTC <mgsloan> wish I'd been working on that this break instead of relaxing / visiting portland, hah
2012-03-24 04:12:51 UTC <mgsloan> well, type-info for whatever the cursor is on seems reasonable
2012-03-24 04:12:55 UTC <luite> actually I was just annoyed that Apfelmus said that in-browser editing was useless, so I tried making it more useful ;p
2012-03-24 04:13:02 UTC <mgsloan> haha
2012-03-24 04:13:22 UTC <mgsloan> I think it needs to be understood that the browser is just a particular GUI API
2012-03-24 04:13:42 UTC <tgeeky_> mgsloan: well, it's the first one with a good chance of being "universal" in any meaningful sense
2012-03-24 04:16:23 UTC <mgsloan> yup
2012-03-24 04:17:33 UTC <tgeeky_> mgsloan: heck, I'm pretty sure Starfleet UI is backed by HTML 11
2012-03-24 04:18:28 UTC <luite> mgsloan: the key is btw the HsWrapper things that the typechecker inserts
2012-03-24 04:19:09 UTC <mgsloan> does it unify the local polymorphic variables?
2012-03-24 04:19:24 UTC <luite> it shows the final type decided by the type checker
2012-03-24 04:19:29 UTC <mgsloan> e.g. if there is an "a" in the top level sig, is that same "a" appropriately used throughout the local types
2012-03-24 04:19:36 UTC <luite> oh, yes
2012-03-24 04:19:53 UTC <mgsloan> my method of getting type info is sooo messed up
2012-03-24 04:20:00 UTC <mgsloan> in comparison. Sigh. ohwell!
2012-03-24 04:20:04 UTC <luite> hehe lol
2012-03-24 04:20:09 UTC <luite> you haven't seen my code
2012-03-24 04:20:12 UTC <luite> it's horrible
2012-03-24 04:20:28 UTC <luite> a few days of hacking, trying to improve the loading of code
2012-03-24 04:20:47 UTC <mgsloan> I turn every polymorphic variable into a monomorphic variable, and then process all the type errors to figure out which ones need to be the same / what constraints they need
2012-03-24 04:20:54 UTC <tgeeky_> luite: all of our code is horrible, that's why we share it
2012-03-24 04:21:00 UTC <tgeeky_> 1) so other people can judge us mercilessly
2012-03-24 04:21:11 UTC <tgeeky_> 2) so after judgement, they make it better
2012-03-24 04:21:12 UTC <luite> do manual parseModule/typecheckModule/loadModule, but with that I can prevent the haskell-src-exts step that was giving me trouble, and access the AST :)
2012-03-24 04:22:02 UTC <tgeeky_> luite: btw, from watching the LHC, and the state they're in now
2012-03-24 04:22:05 UTC <luite> tgeeky_: yeah, I promised mysefl that this would be the last major thing I'd add before starting the beta
2012-03-24 04:22:32 UTC <tgeeky_> one of the cool things about having so much of their organization online (and them being really pedantic about measurables) at CERN
2012-03-24 04:22:35 UTC <luite> that means probably fixing up some of the source span reporting things, and a prettyprinter for the ghc ast types
2012-03-24 04:23:17 UTC <tgeeky_> you can pretty easily observe some things
2012-03-24 04:23:21 UTC <luite> mgsloan: oh lol, I guess that is a slightly worse method ;p
2012-03-24 04:23:30 UTC <mgsloan> prettyprinter == diagrams prettyprinter? or text?
2012-03-24 04:23:36 UTC <luite> text first
2012-03-24 04:23:51 UTC <mgsloan> cool
2012-03-24 04:23:51 UTC <luite> just the type constraints as they'd appear in haskell source
2012-03-24 04:24:01 UTC <tgeeky_> their "set up" time (from cool down to automatic stable beams mode) was ~ 4.5 months the first year
2012-03-24 04:24:05 UTC <mgsloan> I hope you won't have to do the diagrams one, as that's something I'm quite intent on making :)
2012-03-24 04:24:08 UTC <luite> from the HsTcType and HsWrapper things that I steal from the AST
2012-03-24 04:24:13 UTC <luite> hehe
2012-03-24 04:24:15 UTC <tgeeky_> ~ 3 months last year
2012-03-24 04:24:19 UTC <tgeeky_> and ~ 1 month this year
2012-03-24 04:24:35 UTC <luite> oh sounds pretty good ;)
2012-03-24 04:24:37 UTC <luite> err, :)
2012-03-24 04:24:53 UTC <tgeeky_> that's really amazing progress
2012-03-24 04:25:19 UTC <mgsloan> My thing processes haskell-src-exts Types.  Temporarily that would mean prettyprinting + reparsing, but I suppose it probably wouldn't be too hard to switch to the GHC type rep
2012-03-24 04:29:08 UTC <mgsloan> gtg home, I'm gonna get this type explanation stuff fixed up!
2012-03-24 04:29:14 UTC <mgsloan> (upon arriving)
2012-03-25 00:48:16 UTC <luite> mgsloan1: getting the right type constraint still is kind of difficult, I have all annotations that introduce the constraints, not sure what to do with them. the easiest is probably to highlight all points in the source that introduce them
2012-03-25 00:48:32 UTC <mgsloan1> yup
2012-03-25 00:48:54 UTC <luite> for ex: map (+1) when you hover `map', would give you type a -> a, and also highlight (+1), which introduces Num a => a
2012-03-25 00:49:17 UTC <luite> err
2012-03-25 00:49:19 UTC <luite> not a -> a
2012-03-25 00:49:24 UTC <luite> [a] -> [a]
2012-03-25 00:50:19 UTC <luite> does that sound like a usable user interface?
2012-03-25 00:50:37 UTC <mgsloan> My plan is to give annotations for every type in the expression, but unify the diagrams, and have a "contents" that actually specifies the constraints on the type variables
2012-03-25 00:50:57 UTC <mgsloan> Then, you hover over parts of the constraints to find out where they came from
2012-03-25 00:51:09 UTC <mgsloan> that definitely sounds like a usable interface to me, though
2012-03-25 00:51:21 UTC <luite> oh that's also interesting
2012-03-25 00:52:10 UTC <luite> but if you have something that introduces Integral, and another part just Num, then the final constraint wouldn't show Num at all if it' unified?
2012-03-25 00:52:40 UTC <mgsloan> I was going to do the full expression diagram first, even if it's somewhat complicated, such that the contextual diagram (only the bit your cursor is on / what you're hovering over) is just calling the diagram-showing algorithm with something that prunes its traversal
2012-03-25 00:52:58 UTC <mgsloan> hmm, that's a good point
2012-03-25 00:53:27 UTC <luite> the problem for me is that making unified constraints is more difficult than all the intermediate ones :)
2012-03-25 00:54:07 UTC <mgsloan> well, part of drawing the diagram appropriately unified, is indeed something like a half-assed type unification, which could inform the system of what superclass instances were being hidden
2012-03-25 00:54:21 UTC <luite> hmmm
2012-03-25 00:54:29 UTC <mgsloan> then again, it should be possible to use the ghc info regarding classes to get what the superclasses are
2012-03-25 00:54:49 UTC <luite> yeah, I just don't really feel like writing a constraint unifier :)
2012-03-25 00:55:00 UTC <mgsloan> haha, yeah, leave it out for now is my vote!
2012-03-25 00:55:15 UTC <mgsloan> it's a small problem
2012-03-25 00:55:51 UTC <luite> I'm still not that familiar with the GHC source, but it looks like what it does in the TC is run the typecheker monad, which collects constraints, everytime it sees one, it annotates it in the AST
2012-03-25 00:56:50 UTC <mgsloan> so maybe catching it after the constraint introduction phase would be the right soln?
2012-03-25 00:57:03 UTC <luite> problem is that the output is after all constraints have already been "zonked" (I think that means frozen), so I just get types for a few things and the annotated AST
2012-03-25 00:57:36 UTC <mgsloan> do you get one for most of the different parts of an expression? or is it pretty sparse?
2012-03-25 00:58:01 UTC <luite> pretty sparse, but I can fix that by preprocessing the parsed AST
2012-03-25 00:58:15 UTC <mgsloan> ahhh
2012-03-25 00:58:21 UTC <mgsloan> probably similar to my whereify transform
2012-03-25 00:58:33 UTC <mgsloan> you seriously gotta opensource this soon so I can try to lend a hand :D
2012-03-25 00:58:33 UTC <luite> hehe
2012-03-25 00:58:47 UTC <mgsloan> (it chunks out the expression into a bunch of named pieces)
2012-03-25 01:00:07 UTC <luite> yeah it's more or less a 'lettify' transform that I used, but I think that's probably just laziness on my part, the types are available as well in the original AST, you just have to do more work to get them all
2012-03-25 01:00:40 UTC <luite> problem is, the more work, the harder it will be to update to ghc 7.6 etc :)
2012-03-25 01:01:15 UTC <mgsloan> gotcha, yeah
2012-03-25 01:01:40 UTC <mgsloan> best to do the simple thing first till the APIs settle
2012-03-25 01:01:42 UTC <luite> I'm pretty sure that it will be some work, the type defaulting code was also a bit annoying to update to ghc 7.4 :)
2012-03-25 03:21:23 UTC <luite> meh still not quite right http://hdiff.luite.com/tmp/types2.gif
2012-03-25 03:29:26 UTC <tgeeky_> luite: out of sheer curiosity, why is there overall color cycling in the image?
2012-03-25 03:29:41 UTC <tgeeky_> are you using one of those softwares that changes the color later at night? :o
2012-03-25 03:30:02 UTC <luite> no, that is some strange conversion artefact from imagemagic
2012-03-25 03:31:06 UTC <tgeeky_> luite: in my IDE/editor, I was imagining injecting type information (like :: Double) on the right hand side of the code, in a sort of gray tone or something
2012-03-25 03:31:26 UTC <tgeeky_> obviously, your example shows that's nowhere near going to work
2012-03-25 03:31:32 UTC <luite> oh I haven't decided anything about the user interface btw
2012-03-25 03:31:42 UTC <luite> just abusing the error reporting code atm
2012-03-25 03:31:47 UTC <tgeeky_> yeah, i gotcha
2012-03-25 03:32:17 UTC <luite> and it's clear that it needs to be updated a bit
2012-03-25 03:32:38 UTC <luite> since chrome cannot handle the large number of messages that the type info generates
2012-03-25 03:39:19 UTC <luite> atm it shows the wrong type vars in the constraints
2012-03-25 04:06:08 UTC <tgeeky_> luite: http://www.anandtech.com/show/5689/the-new-ipad-retina-display-analysis
2012-03-25 04:06:22 UTC <tgeeky_> I think the bottom-of-the-page picture answers your question
2012-03-25 04:08:31 UTC <luite> what was my question again?
2012-03-25 04:11:54 UTC <luite> the backlight power has more than doubled btw
2012-03-25 04:12:16 UTC <tgeeky_> luite: is there a display which is readble for e-books and textbooks and etc
2012-03-25 04:12:25 UTC <luite> so the running time at max brightness is an hour shorter
2012-03-25 04:12:35 UTC <luite> it's equal at mid brightness, longer at low
2012-03-25 04:12:50 UTC <tgeeky_> luite: yeah, the brightness (in nits) is compared on page3
2012-03-25 04:12:58 UTC <tgeeky_> the color coverage is more impressive to me
2012-03-25 04:13:03 UTC <tgeeky_> it pretty much covers sRGB
2012-03-25 04:13:06 UTC <luite> it's said to use 7 watt now, at max
2012-03-25 04:13:14 UTC <tgeeky_> and the density
2012-03-25 04:13:37 UTC <luite> that must be 90% of the total power during typical use
2012-03-25 04:14:04 UTC <luite> and charging time is longer now too
2012-03-25 04:15:11 UTC <luite> pretty sure that if I buy one now, the next gen will get an OLED screen with 2W power and 20hr battery life, even wider gamut ;p
2012-03-25 04:16:23 UTC <luite> I personally don't think that the color gamut is that big of a deal
2012-03-25 04:17:09 UTC <luite> although I expected mobile screens to have much wider gamuts already
2012-03-25 04:17:18 UTC <luite> since many desktop screens are approaching ARGB1998 now
2012-03-25 04:17:59 UTC <luite> btw it's a bit strange to just compare single units, since both generations have multiple display suppliers
2012-03-25 04:18:26 UTC <luite> my ipad's screen is bluer than my father's, both 32GB wifi 1st gen, and it's also brighter
2012-03-25 04:18:38 UTC <luite> I think mine has an LG screen, he has a Samsung
2012-03-25 04:35:11 UTC <luite> tgeeky_: I don't really might the shorter battery life, but I think they should've shipped it with a 15W charger
2012-03-25 04:36:52 UTC <tgeeky_> luite: let me guess, there is a 15W charger upgrade?
2012-03-25 04:37:24 UTC <luite> no
2012-03-25 04:38:04 UTC <luite> but with the screen at high brightness using ~7W, the cpu and other hw also a little, the 10W charger is really underpowered
2012-03-25 04:38:25 UTC <luite> it also means that using it with USB power from a computer will drain the battery
2012-03-25 04:39:08 UTC <tgeeky_> luite: a shame they didn't do "mid" brightness in the anandtech review
2012-03-25 04:39:24 UTC <luite> the old ipad could be used, wouldn't charge, but at least stay at more or less the same charge level
2012-03-25 04:39:36 UTC <luite> with a regular usb port
2012-03-25 04:39:42 UTC <tgeeky_> yeah
2012-03-25 04:40:43 UTC <luite> I think it's a great idea, the high res display, but it still feels a bit like a stop-gap solution...
2012-03-25 04:41:21 UTC <tgeeky_> luite: well, it will open up a range of uses that might not have been doable before (like medical imaging)
2012-03-25 04:42:10 UTC <luite> (although once they fix that, and add stylus support, I really don't see much left to improve, how will they sell everyone an upgrade every year then?)
2012-03-25 04:42:47 UTC <luite> I wonder if they'd add 3D support
2012-03-25 04:43:16 UTC <luite> Jobs was probably against 3D support if it required glasses
2012-03-25 04:43:43 UTC <tgeeky_> luite: he'd wait for holographs
2012-03-25 04:45:25 UTC <luite> something like the glasses-free 3d support from the 3ds
2012-03-25 04:46:55 UTC <tgeeky_> i'll take a button, that when pressed, unfolds the iPad into a Death Star.
2012-03-25 04:49:08 UTC <tgeeky_> probably don't want it to happen too often, or by accident, so I'll bury it in the Settings dialogs.
2012-03-25 04:50:28 UTC <luite> yeah that might have bigger implications than the iPhone 4 antenna issues
2012-03-25 04:51:20 UTC <tgeeky_> Damn it. I can't get any reception. I can't get a App Store update to inflate my Death Star!!!
2012-03-25 05:09:19 UTC <luite> tgeeky_: different ipad, different brightness: http://www.notebookcheck.net/Review-Apple-iPad-3rd-Gen-2012-4G-Tablet.71925.0.html
2012-03-25 05:10:19 UTC <luite> and they had a 25cdm^-2 variation between two samples
2012-03-25 05:10:33 UTC <tgeeky_> ugh
2012-03-25 05:10:37 UTC <tgeeky_> that screen bleeding is bad
2012-03-25 05:13:28 UTC <luite> dunno, it's always really difficult to tell from pictures
2012-03-25 05:13:38 UTC <luite> expose it longer and it looks twice as bad
2012-03-25 05:41:30 UTC <mgsloan> re: types, awesome!
2012-03-25 07:46:07 UTC <luite> yeah not quite as awesome as they should be, but I'm working on it, trying to get all type stuff from the typechecked AST now
2012-03-25 08:03:23 UTC <luite> ok I think I have regular type extraction working now, without properly propagating contexts yet
2012-03-25 08:10:54 UTC <mgsloan> byorgey: why not export the "R2" constructor?
2012-03-25 08:11:59 UTC <mgsloan> can't use most of the Newtype combinators without it :/
2012-03-25 08:12:05 UTC <mgsloan> well not prettily anyay
2012-03-25 08:14:58 UTC <mgsloan> luite: awesome!!
2012-03-25 08:15:20 UTC <mgsloan> so there's both sources of types?
2012-03-25 08:15:48 UTC <mgsloan> btw, I hope wolfram lambda becomes the new hackage
2012-03-25 08:16:17 UTC <mgsloan> wolfgang
2012-03-25 08:17:17 UTC <luite> the new hackage?
2012-03-25 08:18:04 UTC <mgsloan> Yeah - logically if there's something that does a really good job of displaying haskell code, that should be how we do docs
2012-03-25 08:18:50 UTC <mgsloan> I'm imagining something like an ActiveHs style import of literate haskell into workbook form
2012-03-25 08:19:00 UTC <mgsloan> plus function folding on the definitions
2012-03-25 08:19:24 UTC <mgsloan> so there's a per-declaration "view source" folding button
2012-03-25 08:19:30 UTC <luite> hmm
2012-03-25 08:19:50 UTC <mgsloan> (don't worry about this with your current architecture, though)
2012-03-25 08:19:55 UTC <luite> that would be some work to build, please send me a pull req ;p
2012-03-25 08:19:59 UTC <mgsloan> hehe
2012-03-25 08:20:14 UTC <mgsloan> yes, it would, as we can see from the Hackage 2.0 efforts
2012-03-25 08:20:29 UTC <luite> atm, I'm trying to figure out how to convert HsWrapper stuff back to Types
2012-03-25 08:21:10 UTC <mgsloan> ppr roundtrip?
2012-03-25 08:21:50 UTC <mgsloan> parse . pprHsWrapper sdoc
2012-03-25 08:21:52 UTC <luite> nah it ppr's really not-typelike :p
2012-03-25 08:22:03 UTC <mgsloan> ah
2012-03-25 08:22:27 UTC <luite> it can also do stuff that's not a type
2012-03-25 08:22:30 UTC <mgsloan> so, write a typelike ppr?
2012-03-25 08:22:46 UTC <mgsloan> ah, yeah holes and casts and things
2012-03-25 08:23:07 UTC <mgsloan> invent type representation of those things?
2012-03-25 08:26:13 UTC <mgsloan> Seems like it might be valuable to carry the distinctions found in the coercions ADT into the UI
2012-03-25 08:28:42 UTC <luite> but things that are normal contexts or ~ should just be carried back into type constraints
2012-03-25 08:30:11 UTC <mgsloan> ah
2012-03-25 08:41:02 UTC <mgsloan> ACTION still kinda prefers (Double, Double) to R2
2012-03-25 08:43:50 UTC <mgsloan> there's something quite beautiful about the cartesian product of two numbers being the coordinate type
2012-03-25 08:44:13 UTC <mgsloan> but I guess I shoulda raised that argument earlier :P
2012-03-25 08:49:57 UTC <luite> hm, meh will do the type constraint propagation later
2012-03-25 08:50:20 UTC <luite> SPJ said somewhere on a mailing list that implementation of this would be simple
2012-03-25 08:55:12 UTC <mgsloan> cool!
2012-03-25 08:58:10 UTC <mgsloan> I really want to be able to have a per-package extension system for the type visualization / other potential code-related utilities..  I.E. a special modulename which indicates that it should be interpreted as a plugin to the workbook system / docu / IDE
2012-03-25 08:58:24 UTC <mgsloan> I think I've mentioned this before
2012-03-25 08:59:06 UTC <mgsloan> but now that you've totally dominated the type problem, working on this seems like a task I can try to take on much sooner
2012-03-25 09:01:26 UTC <mgsloan> (package specific refactorings will be really interesting)
2012-03-25 09:13:47 UTC <alpounet> mgsloan, that would be neat indeed!
2012-03-25 09:23:14 UTC <mgsloan> it would!  One thing I'd also really like to see would be a way to express the interface changes across interface-changing versions.  This'd let you hit the "upgrade library version" button, and have it get you most of the way towards updating your code
2012-03-25 09:24:36 UTC <mgsloan> the best thing about this is that it would allow for library developers to exercise a little more freedom in fixing their interfaces / naming
2012-03-25 09:25:41 UTC <mgsloan> it'd also be interesting to have partial rewrites between similar libraries - expressing the connection between the two
2012-03-25 15:41:51 UTC <luite> hehe I'm not quite sure that I've dominated the type problem... easy for SPJ isn't the same as easy for me :p
2012-03-25 20:03:40 UTC <tgeeky_> luite: http://www.youtube.com/watch?v=hG3ELslkHDY&feature=youtu.be <--!
2012-03-25 20:10:47 UTC <luite> hmm, still manual switching required
2012-03-25 20:11:29 UTC <tgeeky_> luite: yes. but it's a much nicer transition
2012-03-25 20:11:37 UTC <tgeeky_> luite: and their technique is somewhat general
2012-03-25 20:12:19 UTC <luite> right
2012-03-25 20:13:18 UTC <luite> actually I was thinkink of a realtime preview hovering window while you edit
2012-03-25 20:13:50 UTC <luite> but their approach is more suitable for larger docs
2012-03-25 20:14:12 UTC <luite> a bit more difficult to implement though, I guess
2012-03-25 20:14:41 UTC <tgeeky_> luite: maybe not with diagrams/active
2012-03-25 20:14:58 UTC <tgeeky_> ... or something else. nice touch, anyway.
2012-03-25 20:15:11 UTC <tgeeky_> bbl, chores
2012-03-25 20:15:35 UTC <luite> hm, right
2012-03-26 02:54:13 UTC <vyom> ok so I added some code to support style attributes in a separate git branch because I am waiting on some changes to go to the upstream blaze-html code
2012-03-26 02:54:18 UTC <vyom> https://github.com/deepakjois/diagrams-svg/commit/3aeef54fbe2032a7d7f10df5d998d5d049255df4
2012-03-26 02:54:50 UTC <vyom> very little code but took a bit of thinking and reading
2012-03-26 02:55:18 UTC <vyom> at least now i have the framework to add more styles pretty easily once the upstream code is merged
2012-03-26 02:56:05 UTC <vyom> leave any comments on the code if you feel like
2012-03-26 03:14:06 UTC <luite> great :)
2012-03-26 03:21:31 UTC <vyom> is there a good idiom to represent a  Maybe value? I chose to suffix an 'M' for e.g. lineWidthM
2012-03-26 03:21:43 UTC <vyom> not sure I like it very much
2012-03-26 03:41:24 UTC <mgsloan> that's confusing because usually an M suffix indicates something monad related
2012-03-26 03:41:47 UTC <mgsloan> I actually kinda like the lisp convention for this - postifixing with ?
2012-03-26 04:15:05 UTC <vyom> does that even work in haskell
2012-03-26 04:17:48 UTC <luite> just don't add a suffix and wait for editors to give you realtime type annotations as you type
2012-03-26 13:40:17 UTC <tgeeky_> heh
2012-03-26 13:40:24 UTC <tgeeky_> vyom: it should, ? isn't otherwise reserved
2012-03-26 16:05:35 UTC <byorgey> no, Haskell identifiers may only contain letters, digits, and underscores
2012-03-26 16:05:47 UTC <byorgey> no postfixing with ?
2012-03-26 16:37:59 UTC <luite> @tell
2012-03-26 16:38:15 UTC <luite> hm, no bot here?
2012-03-26 16:39:07 UTC <ClaudiusMaximus> there's MemoServ, but the last memo i sent with it only got read 4 months later...
2012-03-26 16:39:25 UTC <luite> hehe
2012-03-26 16:40:16 UTC <fryguybob> @tell luite you can get messages without a bot too.
2012-03-26 16:40:46 UTC <luite> I just wanted to tell mgsloan that desugaring the expression and then using exprType on the CoreType still loses the context because I haven't found a way yet to restore it
2012-03-26 16:40:52 UTC <luite> so tell hiim if you see him ;p
2012-03-26 17:28:57 UTC <tgeeky_> byorgey: damn. how about lineWidthQuestionMark :o
2012-03-26 17:29:58 UTC <ClaudiusMaximus> i use foo , foo' and foo_ for different variations in one project..
2012-03-26 17:30:15 UTC <ClaudiusMaximus> ..but i can never remember which is which
2012-03-26 17:31:28 UTC <tgeeky_> the default idiom, I think, is to use _ to ignore the result, and blah' is just and extra name for blah
2012-03-26 17:32:01 UTC <ClaudiusMaximus> seems to be foo :: T -> [Progress], foo' :: [Progress] -> Maybe Success, foo_ :: T -> Maybe Success
2012-03-26 17:33:15 UTC <ClaudiusMaximus> (mainly because these algorithms can take a long time to run, and i want to have a cancel button in the GUI front end for when i get bored of waiting)
2012-03-26 17:33:19 UTC <tgeeky_> ClaudiusMaximus: so ' i used for reduction on lists, and _ is used for reduction on items? :o
2012-03-26 17:33:35 UTC <ClaudiusMaximus> foo_ = foo' . foo
2012-03-26 17:33:37 UTC <tgeeky_> i guess 'value extraction'
2012-03-26 17:34:17 UTC <ClaudiusMaximus> this is my personal convention for one project
2012-03-26 17:34:23 UTC <tgeeky_> ClaudiusMaximus: yeah, I gathered
2012-03-26 17:34:43 UTC <ClaudiusMaximus> vaguely taking the _ to mean "don't care about ..." from the Control.Monad stuff
2012-03-26 17:35:13 UTC <ClaudiusMaximus> ' is often "this is a stricter thing" like foldl foldl'
2012-03-26 17:35:17 UTC <tgeeky_> ClaudiusMaximus: I never liked that one, but I've learned to live with it
2012-03-26 17:35:29 UTC <tgeeky_> ClaudiusMaximus: yeap. That's what it means. I forgot that one.
2012-03-26 17:35:46 UTC <tgeeky_> sometimes it just means "other version" or "helper function version"
2012-03-26 17:36:17 UTC <ClaudiusMaximus> indeed
2012-03-26 17:36:49 UTC <tgeeky_> the postfix '?' is used heavily in idiomatic Ruby
2012-03-26 17:37:03 UTC <tgeeky_> I assume you could write a simple compiler plugin that allows it
2012-03-26 17:37:11 UTC <ClaudiusMaximus> some scheme variants too i think?
2012-03-26 17:38:01 UTC <ClaudiusMaximus> anyway, i think the 'safe' package has things like "atMay" for a safe !!
2012-03-26 17:51:20 UTC <byorgey> ACTION often writes  mfoo :: Maybe Foo  when  foo :: Foo
2012-03-26 17:51:56 UTC <tgeeky_> sadly maybe is the shorest word (that's not an abbreviation)
2012-03-26 17:52:10 UTC <tgeeky_> perhapsFoo
2012-03-26 17:52:25 UTC <tgeeky_> quitepossiblyFoo
2012-03-26 17:52:56 UTC <fryguybob> justFooOrNothing
2012-03-26 17:53:36 UTC <byorgey> ifThereIsAFooWhichIDoubtItWouldBeStoredInHere
2012-03-26 17:53:43 UTC <tgeeky_> lol
2012-03-26 17:53:43 UTC <fryguybob> foo :: Maybe Foo   unsafeFoo :: Foo
2012-03-26 17:53:51 UTC <byorgey> hehe
2012-03-26 17:54:20 UTC <tgeeky_> MayB :o
2012-03-26 17:54:29 UTC <luite> byorgey: yeah me too, like mfix :: MonadFix m => (a -> m a) -> Maybe (m a), and map :: Monad m => m (a -> b) -> m a -> Maybe (m b), many :: (a -> Bool) -> a -> Maybe Bool   ;)
2012-03-26 17:54:52 UTC <byorgey> hahahaha!!
2012-03-26 17:55:16 UTC <luite> oops the first one is a bit wrong, it should be the typs for fix, not mfix...
2012-03-26 17:55:17 UTC <fryguybob> nice!
2012-03-26 17:55:32 UTC <byorgey> luite: yeah, what you wrote is mmfix
2012-03-26 17:56:02 UTC <byorgey> mmmmfix :: ((a -> a) -> a) -> Nom
2012-03-26 17:56:40 UTC <tgeeky_> side effects many include: dinner. Computational side effects: None. Enjoy!
2012-03-26 17:56:47 UTC <tgeeky_> s/many/may/
2012-03-26 17:57:51 UTC <luite> meh also a typo in the many type sig, should be [a] instead of a
2012-03-26 17:58:25 UTC <tgeeky_> luite: if you're communicating with Wolfgang, this won't happen!
2012-03-26 17:58:33 UTC <luite> yes
2012-03-26 17:59:11 UTC <fryguybob> Names are hard, lets use De Bruijn indexes.
2012-03-26 17:59:11 UTC <tgeeky_> that seems like it should somehow be obligatory in Haskell, because (evidently) we can.
2012-03-26 17:59:17 UTC <luite> mmfix will be used in the new edition of the art of haskell programming
2012-03-26 18:01:18 UTC <byorgey> 2: good idea
2012-03-26 18:01:31 UTC <luite> hehe
2012-03-26 18:06:15 UTC <luite> scumbag SPJ said that it would be straightforward to implement this.... still don't know how to do it :(
2012-03-26 18:07:06 UTC <byorgey> =(
2012-03-26 18:07:08 UTC <tgeeky_> you're trying to get back information that GHC discards?
2012-03-26 18:07:26 UTC <luite> hehe no I guess it's still there
2012-03-26 18:07:31 UTC <luite> but in bits and pieces
2012-03-26 18:07:55 UTC <tgeeky_> luite: so you want to split and/or reorder it?
2012-03-26 18:09:47 UTC <luite> dunno what I want, I just want to get types out :p
2012-03-26 18:13:22 UTC <byorgey> well no wonder it isn't straightforward =)
2012-03-26 18:15:28 UTC <byorgey> justGetTheTypesOut :: ASTThingy -> [Type]   -- just GET THE TYPES OUT, without any dumb extra cruft
2012-03-26 18:15:50 UTC <luite> well the function that would be straightforward to implement would be exprType :: HsExpr Id -> Type
2012-03-26 18:16:37 UTC <luite> where HsExpr Id is the type for a typechecked expression
2012-03-26 18:17:36 UTC <luite> (there is already exprType :: GhcMonad m => String -> m Type   and exprType :: CoreExpr -> Type
2012-03-26 18:18:08 UTC <luite> isit's not that far-fetched :)
2012-03-26 18:18:52 UTC <tgeeky_> byorgey: http://hackage.haskell.org/package/integration-0.1 !!
2012-03-26 18:20:19 UTC <tgeeky_> ugh. virtualbox install. will lose net :(
2012-03-26 18:20:21 UTC <tgeeky_> bbiaf
2012-03-26 18:24:21 UTC <luite> hehe I first thought that tanh-sinh was an Indian name....
2012-03-26 18:24:42 UTC <byorgey> hehe
2012-03-26 19:12:25 UTC <fryguybob> luite: Me too!
2012-03-26 19:13:24 UTC <fryguybob> mzero = Just 0
2012-03-26 19:40:24 UTC <ClaudiusMaximus> mgsloan: 17:41 < luite> I just wanted to tell mgsloan that desugaring the expression and then using exprType on the CoreType still loses the context because I haven't found a way yet to restore it
2012-03-26 20:00:23 UTC <mgsloan> thanks!
2012-03-26 23:23:22 UTC <luite> http://hdiff.luite.com/tmp/typeinfo-mockup.png <- hmm, first stab at a user interface for type info. user has pointed at "scaleX", popup appears, if you then hover one of the "superexpressions" it highlights that as well, in a lighter color. data is fake etc, thoughts?
2012-03-26 23:25:05 UTC <luite> and I had the idea to display the constraints separately, so that if you hover one, it shows the expressions that introduce the constraint. dunno if that's going to be feasible
2012-03-26 23:25:17 UTC <luite> shows means highlights :)
2012-03-26 23:39:03 UTC <mgsloan> cooooool!
2012-03-26 23:39:32 UTC <luite> I had to limit it a bit, but this is more or less possible with the existing popupmenu code and codemirror highlightSpan things
2012-03-26 23:40:34 UTC <luite> I experimented with highlighting all levels of an expression differently, but it gets messy quickly
2012-03-26 23:40:58 UTC <mgsloan> yeah
2012-03-26 23:41:08 UTC <luite> http://lemonodor.com/archives/001207.html  <- things like this, with the color in the types menu
2012-03-26 23:41:27 UTC <luite> but it's often not easy to see the difference between the colors
2012-03-26 23:41:38 UTC <mgsloan> associating a type with a multiline term is not something I've figured out yet
2012-03-26 23:41:54 UTC <mgsloan> maybe I'll mockup type diagrams on your mockup
2012-03-26 23:42:07 UTC <luite> yeah I was thinking of start/end markers, with arrows or something, but multiline makes that really messy
2012-03-26 23:42:31 UTC <luite> and it's much more difficult to do than this
2012-03-26 23:43:44 UTC <luite> this = keep track of two markers + popupmenu with some extra code (to avoid having to attach a popup menu to each element in the editor, which is really slow, so a custom mouse handler that adds the menu on demand)
2012-03-26 23:43:48 UTC <luite> relatively simple
2012-03-26 23:43:54 UTC <mgsloan> this looks perfect for now.  It might be hard to get unambiguous start / end, but as long as it's always in nesting order should be fine
2012-03-26 23:44:31 UTC <luite> I'm still not sure about if separating the context will work
2012-03-26 23:44:50 UTC <luite> it makes the individual type sigs much more readable
2012-03-26 23:44:57 UTC <luite> since they're usually pretty short
2012-03-26 23:45:53 UTC <luite> although I guess you'd still get really long ones occasionally, for data types with 20 fields for example
2012-03-26 23:50:19 UTC <mgsloan> yup
2012-03-26 23:50:37 UTC <mgsloan> one issue can be if there are multiple polymorphic variables that have the same context
2012-03-26 23:50:52 UTC <mgsloan> leads to a lot of repetition
2012-03-26 23:51:38 UTC <luite> hmm, does that happen often?
2012-03-26 23:53:21 UTC <luite> usually when I have Context a, MoreContext a, Context b, MoreContext b, then also a ~ b
2012-03-26 23:53:38 UTC <mgsloan> yeah, probably not something to worry about
2012-03-26 23:53:45 UTC <luite> maybe I'm forgetting some use gases
2012-03-26 23:53:47 UTC <luite> cases
2012-03-27 01:06:07 UTC <vyom> can somebody help me understand the "color" implementation in the old diagrams-svg code https://github.com/deepakjois/diagrams-svg/blob/19a0b4d7228d0c042676d3b2a4b0afee032268fc/src/Graphics/Rendering/SVG.hs#L193
2012-03-27 01:06:35 UTC <vyom> what is the purpose of the "defAlpha" param there?
2012-03-27 01:07:56 UTC <vyom> i see that defAlpha is passed in as 0 when it is a fill color and 1 when it is a line color.. whats the rationale behind that?
2012-03-27 01:07:59 UTC <vyom> any ideas?
2012-03-27 01:09:56 UTC <fryguybob> vyom: It looks to me like "defAlpha" is the default alpha that SVG would assign to that kind of path.
2012-03-27 01:10:27 UTC <vyom> ah ok.. so it is the "default" alpha
2012-03-27 01:10:39 UTC <fryguybob> Instead of always outputing an "opacity" attribute, it avoids it when it matches the default.
2012-03-27 01:10:46 UTC <vyom> ok makes sense
2012-03-27 01:11:02 UTC <vyom> thank
2012-03-27 01:11:04 UTC <vyom> thanks
2012-03-27 01:12:46 UTC <luite> isn't that wrong?
2012-03-27 01:15:05 UTC <vyom> it could be wrong.. I am not sure why there are different default values for fill color and line color
2012-03-27 01:16:30 UTC <luite> opacity is relative to parent elements, I'm not sure if there's a situation where a non-unit opacity attribute would give the same result as somehow making a default one
2012-03-27 01:24:51 UTC <vyom> http://stackoverflow.com/questions/6042550/svg-fill-color-transparency-alpha
2012-03-27 01:26:23 UTC <luite> hmm, I'm not convinced, I thought that if you have opacity=a, and fill-opacity=a, then the final opacity will be a^2
2012-03-27 01:33:50 UTC <vyom> i have no idea
2012-03-27 01:33:51 UTC <vyom> :)
2012-03-27 01:44:02 UTC <byorgey> ACTION has no idea either
2012-03-27 01:48:18 UTC <byorgey> luite: lockup looks really cool =)
2012-03-27 01:48:21 UTC <byorgey> *mockup
2012-03-27 01:49:25 UTC <luite> byorgey: can you think of situations where separating the context wouldn't work?
2012-03-27 01:50:33 UTC <byorgey> luite: you mean because you separate out only one context for all of the subexpression types?
2012-03-27 01:50:38 UTC <luite> yeah
2012-03-27 01:50:56 UTC <byorgey> I think it's quite clever, I hope it works... let me think for a second...
2012-03-27 01:50:57 UTC <luite> otherwise there would be a lot of repeatals
2012-03-27 01:51:01 UTC <byorgey> indeed
2012-03-27 01:51:39 UTC <byorgey> this type info is coming from the decorated GHC AST?
2012-03-27 01:51:52 UTC <luite> yes
2012-03-27 01:52:00 UTC <byorgey> so I assume all the type variables have been unified etc.?
2012-03-27 01:52:23 UTC <byorgey> i.e. you wouldn't have the same type variable have one name in a subexpression and a different name in a superexpression
2012-03-27 01:52:25 UTC <luite> yes, and all type vars have a unique identifier
2012-03-27 01:52:33 UTC <byorgey> right, cool
2012-03-27 01:53:02 UTC <byorgey> then yeah, I'm 99% sure this always works
2012-03-27 01:53:49 UTC <byorgey> the only situations I could think of where you could possibly end up with something weird would give you ambiguous type errors anyway
2012-03-27 01:53:54 UTC <byorgey> but even then it might still be fine
2012-03-27 01:55:46 UTC <luite> hmm, I'll just try to implement it then, getting the usual types works fine now, but the contexts aren't always correct, it's some strange data type that I think is used to generate dictionary passing code when translating to core
2012-03-27 01:56:41 UTC <luite> it's nice to see that when you for example add Diagram Cairo R2 to the top level name, almost all variables in the sub-expressions disappear
2012-03-27 01:57:12 UTC <byorgey> yeah, I would expect that
2012-03-27 01:58:45 UTC <luite> I asked in #haskell-blah whether people would want to see, say, (#) :: Diagram Cairo R2 -> (Diagram Cairo R2 -> Diagram Cairo R2) -> Diagram Cairo R2  there, or the general a -> (a -> b) -> b type, I think the first one is better
2012-03-27 01:58:59 UTC <luite> when pointing at something that is defined outside the expr, with a more general type
2012-03-27 01:59:07 UTC <byorgey> ah, right
2012-03-27 01:59:08 UTC <byorgey> hmm
2012-03-27 01:59:22 UTC <byorgey> I'm not even sure myself
2012-03-27 01:59:23 UTC <luite> but I like being able to see the specialized/unified type as it appears in the expr
2012-03-27 01:59:58 UTC <luite> but I'll probably add something to show the type of any name (local/global) later
2012-03-27 02:00:21 UTC <luite> so you could get both... you only point at a single name at a time, so that could be a single line in a different color somehwere in the popup menu
2012-03-27 02:24:40 UTC <tgeeky_> luite: when presented with an option A or B, choose A + B
2012-03-27 02:25:12 UTC <tgeeky_> and them sum over the probabilities
2012-03-27 02:32:00 UTC <luite> that's more or less emacs' philosophy. apples philosphy would be to choose neither since there is a possibility for confusion
2012-03-27 02:40:19 UTC <mgsloan1> http://www.mgsloan.com/mockup3.png
2012-03-27 02:40:21 UTC <mgsloan1> http://www.mgsloan.com/mockup2.png
2012-03-27 02:40:23 UTC <mgsloan1> http://www.mgsloan.com/mockup1.png
2012-03-27 02:45:22 UTC <luite> what does the D mean?
2012-03-27 02:45:45 UTC <mgsloan1> Double
2012-03-27 02:45:50 UTC <vyom> looks pretty
2012-03-27 02:46:03 UTC <luite> mgsloan1: ah they're actually often not Double at all
2012-03-27 02:46:20 UTC <vyom> now my turn.. I just hooked up color support in diagrams-svg : http://dl.dropbox.com/u/953/logo/explode.svg
2012-03-27 02:46:35 UTC <mgsloan1> ahh, so shoudl have introduced a Î³ then
2012-03-27 02:46:35 UTC <luite> but Scalar of some vector space
2012-03-27 02:46:45 UTC <luite> some are actually Double, but some are not :)
2012-03-27 02:46:50 UTC <mgsloan1> vyom: cool!
2012-03-27 02:47:37 UTC <luite> vyom forgot the Sale, 50% off text!
2012-03-27 02:47:47 UTC <mgsloan1> seems like most would be Scalar v?
2012-03-27 02:47:59 UTC <mgsloan1> Scalar R2 = Double, though
2012-03-27 02:48:00 UTC <luite> mgsloan1: yeah I think they are
2012-03-27 02:48:20 UTC <vyom> mgsloan1: now if we can hack on the Turtle in diagrams-contrib.. i can add some logo procedures to support color
2012-03-27 02:49:00 UTC <vyom> luite: text is actually not that hard.. i should have that done soon
2012-03-27 02:49:08 UTC <mgsloan1> which is something to think about.. To present (on request) the fact that those things are D because Scalar R2 ~ Double
2012-03-27 02:49:13 UTC <luite> vyom: great
2012-03-27 02:49:44 UTC <mgsloan1> vyom: yeah, that'll be fun!
2012-03-27 02:50:04 UTC <luite> mgsloan1: yeah I still have that problem, atm my type info is a bit inconsistent in whether it expands type synonyms
2012-03-27 02:50:11 UTC <byorgey> vyom: yay!
2012-03-27 02:50:30 UTC <luite> mgsloan1: I'm not 100% sure I understand the arrows btw :)
2012-03-27 02:50:54 UTC <mgsloan1> they have consistent meaning in mockup1/2
2012-03-27 02:51:08 UTC <mgsloan1> in mockup3, they are special when under "#"
2012-03-27 02:51:28 UTC <mgsloan1> and expand out according to the replacement rule in the upper right corner
2012-03-27 02:52:29 UTC <mgsloan1> and there are a few visual inconsistencies that have no semantic bearing
2012-03-27 02:53:40 UTC <mgsloan1> notably under "c # scaleX 0.2", the line under "c" should be raised
2012-03-27 02:55:00 UTC <luite> hmm, I still don't really see how to read them
2012-03-27 02:55:37 UTC <mgsloan1> darn, I was hoping it'd be straightforward-ish.  Lemme draw one more pic
2012-03-27 02:55:53 UTC <mgsloan1> I could explain, but I'm interested in making these intuitive..
2012-03-27 02:56:30 UTC <luite> hehe maybe you should pick smarter test persons ;p
2012-03-27 02:57:25 UTC <mgsloan1> as far as I know there isn't a canonical type diagram style, so this has risk of canonicalization into type theory / proof system culture, which means some degree of care should be taken.  Not that any notational decisions are really set in stone
2012-03-27 02:57:52 UTC <mgsloan1> byorgey: What do you think of the mockups? :D
2012-03-27 02:58:25 UTC <mgsloan1> (haha, jk luite, though byorgey is clearly very smart!)
2012-03-27 02:59:39 UTC <mgsloan1> byorgey: also, at some point I was going to email you my technique for driving GHCI to get types from inside expressions.  Not necessary anymore, now that it's been revealed that getting the types out of GHC API isn't /that/ awful
2012-03-27 03:00:27 UTC <byorgey> mgsloan1: it looks cool though I must admit I don't find it intuitive to read either.  I am still not quite sure how to interpret them.
2012-03-27 03:00:40 UTC <mgsloan1> cool, good feedback!
2012-03-27 03:01:04 UTC <mgsloan1> a parameter below a line means that it's being provided as a parameter.
2012-03-27 03:01:37 UTC <mgsloan1> the arrows downwards represent the results of application
2012-03-27 03:01:43 UTC <byorgey> aha, and next to a down-pointing arrow means... right
2012-03-27 03:01:55 UTC <mgsloan1> if there's one type next to the arrow, then that's the result.
2012-03-27 03:02:05 UTC <mgsloan1> if there are multiple stacked, then it's a function result, read top down
2012-03-27 03:02:33 UTC <mgsloan1> in mockup1/2 I make the lines cross more than they need to...
2012-03-27 03:02:49 UTC <mgsloan1> ACTION fixes things
2012-03-27 03:02:51 UTC <luite> yeah I understand 2
2012-03-27 03:03:06 UTC <luite> but crossing is confusing
2012-03-27 03:03:25 UTC <byorgey> oh, ok, I see now
2012-03-27 03:03:58 UTC <byorgey> mgsloan1: by the way, I don't think you necessarily need to have as a goal that people should just be able to intuit the meaning without any explanation whatsoever.
2012-03-27 03:04:02 UTC <byorgey> I doubt that is really possible.
2012-03-27 03:04:33 UTC <byorgey> More like they should be able to understand it after reading one page of explanation/examples.
2012-03-27 03:04:34 UTC <mgsloan1> true, but I think that people that already know the meaning of the haskell should be able to pick up on the diagram intuitively
2012-03-27 03:04:50 UTC <mgsloan1> or deductively, perhaps
2012-03-27 03:05:30 UTC <byorgey> yeah, deductively, maybe, but that requires a big cognitive investment
2012-03-27 03:05:37 UTC <luite> I had some problems because of the crossing arrows not really pointing at things they seem to be pointing at
2012-03-27 03:05:45 UTC <byorgey> many people who *would* be able to deduce the meaning are not going to put in the effort required to do so
2012-03-27 03:06:17 UTC <byorgey> of course I'm all for making it as easy to understand as possible. =)
2012-03-27 03:06:41 UTC <byorgey> and I think this design is getting pretty close.
2012-03-27 03:06:42 UTC <mgsloan1> true, there will be a manual :D
2012-03-27 03:06:53 UTC <luite> I think the main problem will be clutter, you'll want to reduce the number of lines as much as possible
2012-03-27 03:07:12 UTC <byorgey> just making the lines grey instead of black would already help a ton I think
2012-03-27 03:07:29 UTC <mgsloan1> good point.  I should know these things, having read Tufte
2012-03-27 03:07:35 UTC <mgsloan1> need to re-read Tufte, lol
2012-03-27 03:07:41 UTC <byorgey> hehe
2012-03-27 03:08:16 UTC <luite> hm, I haven't read it, but maybe I should
2012-03-27 03:08:33 UTC <mgsloan1> they're very pretty books
2012-03-27 03:08:59 UTC <vyom> here is the code for colors support : https://github.com/deepakjois/diagrams-svg/commit/0fb5c05da13d02f919cb4de068394ce536abc56e
2012-03-27 03:09:03 UTC <vyom> feedback welcome
2012-03-27 03:09:21 UTC <vyom> monoids all the way!
2012-03-27 03:09:30 UTC <byorgey> tufte books are a lot of fun
2012-03-27 03:11:01 UTC <mgsloan1> you too can crusade against chartjunk!
2012-03-27 03:11:28 UTC <luite> haven't read a lot lately, can't seem to concentrate on it :( but maybe books with pretty pictures help
2012-03-27 03:11:45 UTC <byorgey> vyom: hurrah for monoids!  =)  code looks good as far as I can see.
2012-03-27 03:12:29 UTC <byorgey> luite: it is acceptable to just look at all the pretty pictures in a tufte book and ignore the text
2012-03-27 03:12:36 UTC <byorgey> (though the text is interesting too.)
2012-03-27 03:13:29 UTC <luite> did you ever get an unprotected pdf btw, from MAA?
2012-03-27 03:14:05 UTC <byorgey> NO
2012-03-27 03:14:13 UTC <byorgey> I need to call them
2012-03-27 03:14:32 UTC <byorgey> not only did I not get a PDF, I didn't even get a response.
2012-03-27 03:14:51 UTC <byorgey> maybe I should send them an automated email every day until I hear back.
2012-03-27 03:14:56 UTC <luite> k, guess I won't be buying ebooks from them :)
2012-03-27 03:15:43 UTC <byorgey> sensible.
2012-03-27 03:33:52 UTC <mgsloan> you should show them q3 :)
2012-03-27 03:39:59 UTC <mgsloan> hmm, everyone in #haskell must not be paying any attention right now :P
2012-03-27 03:50:37 UTC <rasfar> (hi!)
2012-03-27 03:50:50 UTC <luite> hello
2012-03-27 03:51:28 UTC <rasfar> heehee.  i'll keep a #diagrams tab open now, thanks for the pointer luite
2012-03-27 03:52:55 UTC <luite> yeah sorry I forgot to tell you that I'm also here... but even so it's still a pretty cool channel :p
2012-03-27 03:54:55 UTC <luite> but I'm mainly here to annoy people with my screenshots so you can safely ignore me
2012-03-27 03:55:57 UTC <mgsloan> soo close to a waaay better diagram
2012-03-27 03:56:11 UTC <rasfar> right ... and this is a good place to take cover from categorical differential graphs discussions and the like in #haskell?
2012-03-27 03:56:19 UTC <rasfar> speaking for myself anyway
2012-03-27 03:56:44 UTC <rasfar> (in small doses it's okay)
2012-03-27 03:57:06 UTC <rasfar> nm i don't even believe what i'm saying
2012-03-27 03:57:18 UTC <luite> dunno, I'm not terribly interested in the formal grammar/language things that augur usually talks about :)
2012-03-27 03:57:43 UTC <rasfar> arrg!!  i'm so stir crazy, i just wish i knew what to work on (that i was capable of without reading for a month)
2012-03-27 03:58:48 UTC <rasfar> my own projects have reached some sort of wierd apex of diversity and dispersion, it's very fatiguing trying to even gather the ideas into a summary, i just want to DO something concrete.
2012-03-27 03:59:11 UTC <rasfar> maybe i should get a job :)
2012-03-27 03:59:52 UTC <luite> a GSoC project?
2012-03-27 04:00:08 UTC <rasfar> i'd probably be reasonably interested in what augur's talking about but, insufficient background i think
2012-03-27 04:00:16 UTC <rasfar> don't i have to be a student?
2012-03-27 04:00:25 UTC <luite> yes
2012-03-27 04:00:37 UTC <rasfar> no longer a student, ah well
2012-03-27 04:02:08 UTC <rasfar> it's okay, i'll find something.  my little freesect project really got me fired up, if i don't find something soon i'll..... <POOF!!>
2012-03-27 04:09:41 UTC <mgsloan> http://www.mgsloan.com/mockup4.png
2012-03-27 04:13:43 UTC <rasfar> those squiggles almost look like dance instructions for mouse gestures...
2012-03-27 04:32:37 UTC <luite> mgsloan: it would be difficult to get this working with the CodeMirror editor btw, since you can't adjust individual line height with that thing
2012-03-27 04:32:57 UTC <luite> dunno if you were planning to overlay output over a live editor, or use it more as a documentation generator
2012-03-27 04:32:58 UTC <mgsloan> yupyup
2012-03-27 04:33:09 UTC <mgsloan> my plan was that there'd be an "explain types" button
2012-03-27 04:33:19 UTC <mgsloan> and a svg diagram including the code would pop up
2012-03-27 04:33:36 UTC <luite> right, that sounds doable
2012-03-27 04:45:54 UTC <luite> wowh apparently I was missing 90% of the type context information by not unsafePerformIOing to print part of the AST
2012-03-27 04:48:52 UTC <luite> mgsloan: if you're playing with that code, modify it to have special cases for TcEvBinds and EvBindsVar, and unsafePerformIO a readIORef on the EvBindMap
2012-03-27 04:51:35 UTC <luite> I  hope I can filter out the relevant things, otherwise people will have to buy a bigger screen to see the whole popup
2012-03-27 04:55:12 UTC <luite> 400 lines after prettyprinting
2012-03-27 04:55:20 UTC <mgsloan> whoah!!! good news everyone!
2012-03-27 04:55:24 UTC <mgsloan> type contexts :)
2012-03-27 04:56:32 UTC <luite> oh wait, I copied a bit of the rest of the AST :p
2012-03-27 04:57:28 UTC <mgsloan> ACTION has been considering creating an interactive folding diagram of the AST info, arrayed along the text
2012-03-27 08:57:59 UTC <mgsloan> http://www.mgsloan.com/mockup5.png
2012-03-27 08:58:01 UTC <mgsloan> goodnight!
2012-03-27 16:57:58 UTC <Rc43> Hi, guys.
2012-03-27 16:58:43 UTC <Rc43> Is there fast way to combine diagrams with lines connecting? I has a graph and want to group some vertices into trees.
2012-03-27 16:59:34 UTC <Rc43> So I need something like `root -> [child] -> diagram`.
2012-03-27 16:59:56 UTC <Rc43> It isn't hard to implement such thing< but may be there is something convenient.
2012-03-27 17:01:02 UTC <Rc43> (I mean type of function above is `d -> [d] -> d`, where d is `Diagram Cairo R2`.)
2012-03-27 17:02:10 UTC <ClaudiusMaximus> 8http://hackage.haskell.org/packages/archive/diagrams-contrib/0.1.1.0/doc/html/Diagrams-TwoD-Layout-Tree.html perhaps
2012-03-27 17:02:13 UTC <ClaudiusMaximus> oops
2012-03-27 17:02:15 UTC <ClaudiusMaximus> http://hackage.haskell.org/packages/archive/diagrams-contrib/0.1.1.0/doc/html/Diagrams-TwoD-Layout-Tree.html perhaps
2012-03-27 17:06:16 UTC <Rc43> Oh, I didn't search, thank you. Will watch now.
2012-03-27 17:08:57 UTC <Rc43> Hm, I need to manually convert my diagrams into trees.
2012-03-27 17:36:34 UTC <byorgey> Rc43: so  d -> [d] -> d  would not be enough, because there's no information about their relative locations.
2012-03-27 17:36:48 UTC <byorgey> Rc43: maybe something like  Diagram -> [(P2, Diagram)] -> Diagram  ?
2012-03-27 17:41:02 UTC <Rc43> byorgey, in this case I want to chain children with (|||), and root with them with (===), and then draw lines from center of root diagram to centers of chidren' diagrams.
2012-03-27 17:59:03 UTC <byorgey> Rc43: oh, I see.
2012-03-27 18:00:36 UTC <byorgey> Rc43: yeah, there's no function already made to do that.  But you can turn a diagram and a list of diagrams into a tree pretty easily, then use a tree layout algorithm
2012-03-27 18:00:53 UTC <Rc43> byorgey, btw, can I insert one diagram into a center of another?
2012-03-27 18:01:00 UTC <byorgey> Rc43: if you get the latest version of diagrams-contrib (0.1.1.0) you probably want to use symmLayout
2012-03-27 18:01:27 UTC <byorgey> Rc43: I'm not sure exactly what you mean.
2012-03-27 18:01:47 UTC <Rc43> byorgey, suppose I have a circle and I want to place it into a square
2012-03-27 18:02:02 UTC <byorgey> Rc43: Does `atop` do what you want?
2012-03-27 18:02:16 UTC <byorgey> aka mappend aka (<>)
2012-03-27 18:02:30 UTC <Rc43> Where it is?
2012-03-27 18:02:56 UTC <Rc43> Oh,
2012-03-27 18:03:01 UTC <Rc43> it is sos simple?
2012-03-27 18:03:11 UTC <Rc43> Will try now.
2012-03-27 18:06:16 UTC <Rc43> Yeah, <> works fine.
2012-03-27 18:06:24 UTC <byorgey> great
2012-03-27 18:08:41 UTC <Rc43> Am I right that if I have graph it is trivial to draw it and, what is more important, to interact with it?
2012-03-27 18:08:52 UTC <Rc43> I am trying to implement a simple diagrams editor.
2012-03-27 18:09:00 UTC <Rc43> (as part of bigger project)
2012-03-27 18:09:45 UTC <Rc43> So, I mean I need to remember which part of picture belongs to which node.
2012-03-27 18:10:26 UTC <byorgey> Rc43: you can accomplish that using "queries".  See http://projects.haskell.org/diagrams/manual/diagrams-manual.html#using-queries
2012-03-27 18:10:45 UTC <Rc43> Yeah, seen it but didnt read yet.
2012-03-27 18:10:52 UTC <byorgey> Rc43: so instead of the default  Diagram b v = QDiagram b v Any,  you could use  QDiagram b v (Set NodeID)
2012-03-27 18:10:56 UTC <Rc43> Just for sure.
2012-03-27 18:11:28 UTC <byorgey> then when you draw a node of the graph you would do something like   drawNode blah blah # value (S.singleton nodeID)
2012-03-27 18:11:29 UTC <Rc43> Cool, thanks.
2012-03-27 18:12:16 UTC <Rc43> And how hard to implement different edge stretching, node movement, etc?
2012-03-27 18:13:01 UTC <byorgey> you mean to make an interactive graph diagram where you can drag nodes around etc.?
2012-03-27 18:14:08 UTC <Rc43> Yes.
2012-03-27 18:15:40 UTC <byorgey> At the moment, there's no better way than to just redraw the entire updated diagram every time a node is moved.  But that might be good enough.
2012-03-27 18:16:22 UTC <byorgey> Note you would have to keep not just the final diagram but a map from NodeID's to diagrams, so you can update the one(s) that change and then recompose them
2012-03-27 18:16:51 UTC <byorgey> We are also very interested in improving support for interactivity, e.g. maybe have a backend that compiles directly to interactive Javascript
2012-03-27 18:16:59 UTC <byorgey> but nothing like that exists yet.
2012-03-27 18:18:28 UTC <Rc43> about recomposing: isn't it too long for often updates?
2012-03-27 18:18:51 UTC <byorgey> it depends how big your diagram is and how often you update.
2012-03-27 18:19:04 UTC <byorgey> but yes, it might be.
2012-03-27 18:19:23 UTC <byorgey> there is not good built-in support for interactivity at the moment, but we are moving in that direction.
2012-03-27 18:19:31 UTC <Rc43> Hm, in perspective it could be more than 200 nodes.
2012-03-27 18:19:44 UTC <byorgey> that doesn't sound too bad.
2012-03-27 18:20:02 UTC <Rc43> Ok.
2012-03-27 18:20:11 UTC <Rc43> What do you want to do with interactive javascript?
2012-03-27 18:20:24 UTC <byorgey> make interactive diagrams!
2012-03-27 18:21:00 UTC <byorgey> I don't know, it's not very specific.  The idea is to build it and then see what cool things other people do with it. =)
2012-03-27 18:21:33 UTC <Rc43> Eeem, what is interactive js? Google talks too vague.
2012-03-27 18:22:09 UTC <byorgey> I just mean something like output an SVG which includes javascript that says how to update itself based on user input.
2012-03-27 18:22:33 UTC <byorgey> so when you click, drag, etc. it just gets updated immediately in your browser, it doesn't have to recompile the whole diagram
2012-03-27 18:23:06 UTC <byorgey> so we would make the interactivity part of the description of a diagram itself, rather than something you impose externally
2012-03-27 18:23:52 UTC <Rc43> Ok, it's clear. Is it possible to implement such thing with two "backends" : js (e.g. for browser) and haskell code?
2012-03-27 18:24:28 UTC <Rc43> The last will be very pretty with Gtk, I think. Because of event-driven model of both.
2012-03-27 18:24:32 UTC <Rc43> *would
2012-03-27 18:25:00 UTC <byorgey> yes, I think it's possible.
2012-03-27 18:25:35 UTC <byorgey> but I haven't thought through many of the details yet.
2012-03-27 18:32:26 UTC <Rc43> May be, I will try to contribute something in some weeks/months. It can be related with my current course work.
2012-03-27 18:44:23 UTC <byorgey> Rc43: sounds great! =)
2012-03-27 18:57:14 UTC <luite> ugh I sprayed brake fluid all over my bike
2012-03-27 19:00:32 UTC <luite> i also got some in my eyes, how bad is that stuff? it's standard DOT4 fluid
2012-03-27 19:05:51 UTC <byorgey> luite: looks like it's not too bad, at least based on the list of usual ingredients on Wikipedia
2012-03-27 19:11:58 UTC <luite> it does work great as a paint stripper
2012-03-27 19:12:21 UTC <byorgey> uhhh
2012-03-27 19:12:54 UTC <byorgey> maybe Wikipedia is lying then.
2012-03-27 19:13:58 UTC <luite> seriously, I'm a bit worried about my bike's paint now, even though I cleaned the DOT4 off... last time I spilled some on painted wood, and it removed all the paint :)
2012-03-27 19:17:18 UTC <byorgey> well, your bike isn't made of wood, is it?
2012-03-27 19:17:23 UTC <byorgey> ;)
2012-03-27 19:19:46 UTC <luite> hmm, looks like you shouldn't drink this stuff, although it tastes sweet
2012-03-27 19:23:07 UTC <byorgey> hehe, as a general rule I try not to drink anything which can remove paint
2012-03-27 19:25:08 UTC <luite> hmm, sounds like a good rule, I should make that my life's motto
2012-03-27 19:26:00 UTC <byorgey> (yes, that includes Coke)
2012-03-27 19:26:29 UTC <byorgey> as mottos go it's not bad.  I mean, I can think of a lot of worse ones.
2012-03-27 19:28:31 UTC <luite> hehe that would rule out a lot of drink, some other drinks are worse than Coke actually, iced tea is worse for your teeth because it has a larger buffer capacity
2012-03-27 19:35:32 UTC <fryguybob> What about water soluble paint?
2012-03-27 19:37:16 UTC <byorgey> right. I don't drink water either.
2012-03-27 19:37:18 UTC <fryguybob> luite: http://championbrands.com/MSDS/4059K.pdf
2012-03-27 19:37:40 UTC <fryguybob> if you can still see there is a section on eye care.
2012-03-27 19:37:53 UTC <luite> yeah there is, I had already googled
2012-03-27 19:38:33 UTC <byorgey> there is still a section on eye care even if you can't see.
2012-03-27 19:38:41 UTC <byorgey> but in that case it's probably too late anyway.
2012-03-27 19:39:05 UTC <luite> I have only slight discomfort and already  rinsed it out, so I guess it's ok, but otherwise i'll do a feature request for braille support in diagrams
2012-03-27 19:39:41 UTC <byorgey> hey, that's a nice way to have good text support
2012-03-27 19:39:46 UTC <byorgey> just convert all the text to Braille first
2012-03-27 19:40:00 UTC <luite> anyway I hate bleeding brakes now more than before, and it was alreay my least favourite part of bike maintenance :p
2012-03-27 19:41:12 UTC <byorgey> 'Avoid contact with eyes.  Keep container closed.  Use with adequate ventilation. Wash thoroughly after handling.'
2012-03-27 19:41:36 UTC <byorgey> seriously, are there any chemicals that say 'keep closed, use with adequate ventilation, oh, but putting it in your eyes is totally cool'?
2012-03-27 19:42:10 UTC <luite> dunno, contact lens fluid possibly
2012-03-27 19:43:02 UTC <byorgey> hehehe
2012-03-27 19:43:45 UTC <luite> I don't have contacts, so can't check
2012-03-27 19:45:50 UTC <fryguybob> If ingested... You are doing it right!
2012-03-27 19:47:17 UTC <luite> hm looks like contact lens solution usually isn't flammable
2012-03-27 19:47:49 UTC <byorgey> I should hope not.
2012-03-27 19:48:19 UTC <luite> yeah it could make burning eyes quite a bit worse
2012-03-27 19:50:50 UTC <luite> "Eye contact with flammable liquids can cause burning, irritation, and eye damage." <- hehe first hit on google when searching for eye contact flammable
2012-03-27 19:57:06 UTC <tgeeky_> d.  I mean, I can think of a lot of worse ones.
2012-03-27 19:57:11 UTC <tgeeky_> whoops
2012-03-27 20:02:24 UTC <byorgey> "Eye contact with flammable liquids can cause burning, irritation, and eye damage.  No really, ACTUAL BURNING."
2012-03-27 20:03:35 UTC <byorgey> mgsloan: your type diagrams are looking nice!  I like the mini-tutorial.
2012-03-27 20:03:53 UTC <mgsloan> thanks! :)
2012-03-27 20:04:16 UTC <mgsloan> now for just the slight matter of implementation..
2012-03-27 20:04:32 UTC <byorgey> bah, details!
2012-03-27 20:05:02 UTC <byorgey> In general I am quite excited by mgsloan and luite's work on displaying types in a nice way.  Up until now I had basically just punted on the whole types thing in diagrams.
2012-03-27 20:05:30 UTC <byorgey> i.e. the user manual doesn't really ever mention the types of anything, because the types are too ugly and typeclass-polymorphic to look at
2012-03-27 20:05:45 UTC <byorgey> even though thinking about types is indispensable, especially when you run into an error.
2012-03-27 20:05:53 UTC <mgsloan> yup!
2012-03-27 20:06:14 UTC <mgsloan> These diagrams will essentially replace type errors when mixed with type slicing.
2012-03-27 20:06:33 UTC <byorgey> But now it's looking like I can have my cake (nice, general type-class-polymorphic types) and eat it (visualize/explain them in a nice way) too.
2012-03-27 20:06:46 UTC <luite> hmm, cake
2012-03-27 20:07:06 UTC <byorgey> mmmm, slices of type cake
2012-03-27 20:07:17 UTC <luite> with a glass of paint-stripping liquid
2012-03-27 20:07:30 UTC <byorgey> yum
2012-03-27 20:08:44 UTC <mgsloan> omnom, it's definitely what I most missed as a haskell nub
2012-03-27 20:09:07 UTC <byorgey> mgsloan: man, that would be so sweet, to have a diagrams IDE which itself uses diagrams to show you documentation & type errors!
2012-03-27 20:09:27 UTC <byorgey> (of course this will be sweet for things beyond just diagrams)
2012-03-27 20:09:41 UTC <mgsloan> it'll be pretty shwank to be like "and all of these type diagrams were created with diagrams" in the diagrams docu
2012-03-27 20:09:52 UTC <mgsloan> byorgey - that's been my plan for a while now! :)
2012-03-27 20:09:54 UTC <byorgey> yes, absolutely
2012-03-27 20:11:44 UTC <fryguybob> Could also lead to interesting bugs "I can't tell what the bug is because of the bug."
2012-03-27 20:13:04 UTC <mgsloan> yeah, there is a bit more risk of that, when you are adding more transformations on compiler information - but that's a problem endemic to compilers
2012-03-27 20:14:27 UTC <mgsloan> oh, and btw, I finally fixed up gtk-toy-diagrams to v 0.5 !  thanks for the email about that last month 'n such!  Got all busy and distracted till recently
2012-03-27 20:14:58 UTC <byorgey> mgsloan: oh, nice!  I had been wondering about that, glad you got it fixed up.  Hope it wasn't too much of a pain.
2012-03-27 20:15:18 UTC <byorgey> fryguybob: a bootstrapping bug?
2012-03-27 20:15:25 UTC <mgsloan> nah, not too bad.  I like the uniformity of r2 / p2
2012-03-27 20:16:02 UTC <mgsloan> I don't exactly like that Point R2 is a double existential wrapper, but it does make sense
2012-03-27 20:16:50 UTC <fryguybob> I was just joking about if types were visible elements and they obscured the screen.
2012-03-28 02:12:31 UTC <mgsloan> there's also the matter of redrawing only the invalidated region
2012-03-28 02:38:42 UTC <vyom> anyone know how styles are inherited in a diagram? Is there a concept of a "container" which exists only to specify styles and all diagrams in that "container" inherit the styles?
2012-03-28 02:39:56 UTC <vyom> and also.. when something like that happens, does the withStyle function get called for every diagram?
2012-03-28 02:40:58 UTC <byorgey> vyom: heh, this is exactly the issue that I'm working on right now.
2012-03-28 02:41:40 UTC <byorgey> vyom: diagrams are stored in a tree format, where styles can be at internal nodes and are inherited by all primitives underneath it in the tree.
2012-03-28 02:42:20 UTC <byorgey> vyom: however with the current setup it is not possible for backends to observe the tree structure; withStyle basically gets called once for every *primitive* (with the accumulated style).
2012-03-28 02:42:33 UTC <byorgey> but clearly this is suboptimal for many reasons.
2012-03-28 02:43:19 UTC <byorgey> so I'm working on figuring out the best way to change it so that backends can just deal with a style once for an entire subtree.
2012-03-28 02:44:20 UTC <vyom> hmm.. ok
2012-03-28 02:44:37 UTC <byorgey> did that make any sense?
2012-03-28 02:44:44 UTC <vyom> yes..
2012-03-28 02:45:04 UTC <vyom> so if i understand correctly.. there is no nesting among "primitives"
2012-03-28 02:45:09 UTC <byorgey> right
2012-03-28 02:45:52 UTC <byorgey> think of a diagram as a tree with primitives at the leaves, and annotations like style, transformations, etc. at internal nodes
2012-03-28 02:45:55 UTC <vyom> so if withStyle is called on each primitive.. as long as i can isolate the styles for each of those primitives.. i dont have to bother about inheritance rules that SVG itself might have
2012-03-28 02:46:06 UTC <byorgey> right
2012-03-28 02:46:11 UTC <vyom> makes sense
2012-03-28 02:46:48 UTC <vyom> another interesting issue i ran into in Chrome https://github.com/deepakjois/diagrams-svg/issues/3
2012-03-28 02:47:31 UTC <byorgey> vyom: oh, funny.
2012-03-28 02:48:05 UTC <vyom> which brings in the question of dependencies among attributes.. for example.. in order to workaround that bug above.. i need to check if the line width is 0 and only render the stroke related attributes if it is not
2012-03-28 02:48:28 UTC <byorgey> right
2012-03-28 02:48:58 UTC <vyom> anyway most of the core framework is now in place
2012-03-28 02:49:03 UTC <byorgey> excellent
2012-03-28 02:49:05 UTC <luite> :)
2012-03-28 02:49:08 UTC <luite> ACTION <- happy
2012-03-28 02:49:16 UTC <byorgey> ACTION <- happy
2012-03-28 02:49:18 UTC <luite> hehe
2012-03-28 02:49:31 UTC <vyom> i created issues for what is missing https://github.com/deepakjois/diagrams-svg/issues
2012-03-28 02:49:50 UTC <vyom> anyone who wants to contribute can send me pull requests ;)
2012-03-28 02:50:00 UTC <vyom> a lot of it is fairly mechanical
2012-03-28 02:50:11 UTC <byorgey> ok, cool, I might
2012-03-28 02:50:26 UTC <vyom> i want to spend a little time with hs-logo before I get back to this
2012-03-28 02:50:51 UTC <vyom> so please point folks interested in an SVG backend to the github repo..
2012-03-28 02:50:56 UTC <byorgey> will do!
2012-03-28 02:51:00 UTC <vyom> and ask them to send patches ;)
2012-03-28 02:51:03 UTC <byorgey> I might have some time to hack on it this weekend
2012-03-28 02:51:41 UTC <vyom> i will be hacking on diagrams-contrib and hs-logo this weekend w/ mgsloan if things go according to plan :)
2012-03-28 02:52:03 UTC <byorgey> great =)
2012-03-28 02:52:08 UTC <mgsloan> vyom: yup! that'll be fun!
2012-03-28 02:52:51 UTC <byorgey> ACTION -> bed, talk to you all later
2012-03-28 03:22:41 UTC <luite> lol I had a bug in a regexp that should replace tabs with spaces, guess the error :p      x :: In eger -> In eger -> In eger
2012-03-28 03:34:41 UTC <tgeeky_> \t or t when the other was needed
2012-03-28 03:35:35 UTC <luite> yeah :)
2012-03-28 03:35:55 UTC <luite> but the types had me puzzled for a while :)
2012-03-28 14:20:29 UTC <luite> hmm, I think I have a fully working exprType :: HsExpr Id -> Type now :)
2012-03-28 14:37:01 UTC <tgeeky_> luite: awesome!
2012-03-28 14:46:41 UTC <luite> a bit too much low-level type manipulation though, I'll ask for input later when the code is on github
2012-03-28 14:46:58 UTC <luite> a lot of manually splitting function arguments from types
2012-03-28 14:47:48 UTC <luite> and splitting off contexts (apparently in GHC types, typeclass predicates are just function arguments)
2012-03-28 17:16:39 UTC <byorgey> they are in GHC core.
2012-03-28 17:17:58 UTC <byorgey> luite: did you see Niklas Broberg's proposal on haskell-cafe?
2012-03-28 17:18:25 UTC <byorgey> luite: he's proposing (as a GSoC project) a haskell-type-exts package to annotate haskell-src-exts ASTs with types =)
2012-03-28 17:28:59 UTC <fryguybob> Seems like a large project for GSoC (how many pages is the OutsideIn(X) paper? 72?)
2012-03-28 17:29:17 UTC <fryguybob> I hope it happens though.
2012-03-28 17:32:19 UTC <byorgey> Yeah, it does seem too large for GSoC.
2012-03-28 17:32:57 UTC <byorgey> it would indeed be cool.
2012-03-28 17:33:24 UTC <byorgey> also, implementing the OutsideIn(X) algorithm just by reading the paper is no simple feat.  In fact, it's probably impossible.
2012-03-28 17:33:28 UTC <ClaudiusMaximus> SoC is a bad idea.  should be WoC.  summer is for lazing around in the sunshine drinking beers and bbqing, if you're a student
2012-03-28 17:33:40 UTC <byorgey> haha, quite
2012-03-28 17:35:23 UTC <ClaudiusMaximus> just need to find a big technology company whose name starts with an E to stump up some $Â£â¬
2012-03-28 17:45:39 UTC <luite> byorgey: yes, I think it's an interesting idea, but I don't think it's realistic
2012-03-28 17:45:56 UTC <luite> people are going to expect that it will typecheck everything that GHC does
2012-03-28 17:46:15 UTC <byorgey> yeah, and duplicating GHC's type checker sounds neither feasible or advisable
2012-03-28 17:46:21 UTC <luite> it will probably be a bit easier to implement a typechecker from scratch with modern libraries, but not by a huge margin
2012-03-28 17:46:35 UTC <byorgey> right.
2012-03-28 17:47:06 UTC <byorgey> I'd rather see a library which runs code through both the GHC API and haskell-src-exts, then extracts type annotations from the GHC AST and uses them to decorate the HSE AST
2012-03-28 17:47:22 UTC <luite> plus a typechecker means that you'll want to load dependencies, possibly from packages, which means implementing almost half of GHC's compiler pipeline?
2012-03-28 17:47:48 UTC <ClaudiusMaximus> ah good point
2012-03-28 17:49:08 UTC <byorgey> but I guess at this point, rather than being a party pooper, I'll just sit back and watch.
2012-03-28 17:49:44 UTC <byorgey> maybe I will be surprised and some awesome GSoC student will do a kick-ass job and come up with something totally sweet, because no one bothered to tell them it was impossible
2012-03-28 17:49:56 UTC <luite> yeah same here... perhaps with a really good student who'll continue to work after the project, and if Niklas wants to do a good deal of work himself
2012-03-28 17:50:08 UTC <luite> hehe
2012-03-28 17:50:08 UTC <byorgey> yeah, it sounds like Niklas has already done a bunch of work
2012-03-28 17:51:04 UTC <luite> sounds like telling PhD student to solve some millennium prize problem in disguise :p
2012-03-28 17:51:32 UTC <ClaudiusMaximus> i think it'd be unfair to not tell a student it's very very hard, as a failed project will be all over the internet forever associated with their real name (as far as i can tell, not sure if google is quite as evil as facebook in this regard)
2012-03-28 17:52:53 UTC <luite> ClaudiusMaximus: I think you should set some intermediate goals, starting with checking a single module, just regular type classes
2012-03-28 17:53:11 UTC <luite> at least you can tell google it was a success then
2012-03-28 17:54:24 UTC <luite> perhaps Niklas is already planning to build the whole thing and he's trying to get a free intern this way :)
2012-03-28 22:44:23 UTC <mgsloan> http://www.mgsloan.com/mockup6.png
2012-03-28 22:44:41 UTC <mgsloan> (sans contexts)
2012-03-28 22:46:49 UTC <luite> hehe there's usually lots of types, what are you going to do when you run out of latin and greek letters? ;)
2012-03-28 22:47:02 UTC <mgsloan> subscripts! :)
2012-03-28 22:47:21 UTC <luite> btw I got my exprType :: HsExpr Id -> Type working
2012-03-28 22:48:42 UTC <mgsloan> or, I've also considered that there's a potential optimization problem of selecting expression subsets, and giving each a separate var context
2012-03-28 22:48:55 UTC <mgsloan> and then relating the contexts
2012-03-28 22:53:04 UTC <luite> hmm, what do you mean?
2012-03-28 22:53:55 UTC <luite> I have the complete type-with-constraints for all subexprs now btw
2012-03-28 22:54:49 UTC <mgsloan> awesome!! can you send me some code perchance?
2012-03-28 22:55:19 UTC <mgsloan> you know the whole "highlight blocks of code" thing?
2012-03-28 22:55:35 UTC <mgsloan> you were considering it for assigning different types to things
2012-03-28 22:56:05 UTC <mgsloan> my thought was that you could divide the expression into zones whenever type vars don't escape that zone
2012-03-28 22:56:22 UTC <mgsloan> so you can give constraints local to their usage, and keep the number of vars at a minimum
2012-03-28 22:56:46 UTC <luite> oh right, actually what I was planning to do is this: select expr, collect all super-expressions
2012-03-28 22:57:01 UTC <rasfar> (looks real nice mgsloan)
2012-03-28 22:57:12 UTC <luite> then for all those exprs, collect their type variables
2012-03-28 22:57:20 UTC <luite> and show all contests for those varibles
2012-03-28 22:57:24 UTC <luite> context
2012-03-28 22:57:26 UTC <mgsloan> thanks!  I've been spending all my time choosing colors instead of writing code :D
2012-03-28 22:58:01 UTC <rasfar> hey, presentation is important!
2012-03-28 22:58:15 UTC <luite> since type vars have a unique id in GHC, it's easy to collect the relevant ones
2012-03-28 22:58:50 UTC <luite> only "issue" is eq constraints, a ~ Scalar b or something, can introduce b
2012-03-28 22:59:07 UTC <luite> oh and I guess mptc's have the same
2012-03-28 22:59:27 UTC <mgsloan> introduce in the forall sense?
2012-03-28 23:00:54 UTC <luite> nah I mean that say you select a subexpr with only typevar a, then some   a ~ Scalar b  will mention a 'b' in the context
2012-03-28 23:01:19 UTC <mgsloan> ahh, gotcha
2012-03-28 23:01:24 UTC <luite> but it wouldn't show other constraints for b
2012-03-28 23:01:35 UTC <luite> unless you choose to also display those
2012-03-28 23:02:16 UTC <mgsloan> so, if you care about that, then gotta do the transitive closure of typing relations (that's probably not 100% current terminology, but hey, sounds fancy)
2012-03-28 23:02:35 UTC <luite> yes
2012-03-28 23:02:48 UTC <luite> fancy enough for me :)
2012-03-28 23:07:47 UTC <luite> I'm not sure that my exprType really works though, and the code is extremely messy because I've tried half the GHC API to make this work
2012-03-28 23:08:01 UTC <luite> it looks like it gives the right results
2012-03-28 23:08:16 UTC <luite> but I'll need a bit of time to clean it up :)
2012-03-28 23:08:45 UTC <luite> but there's a lot of manual type splitting involved
2012-03-28 23:09:10 UTC <luite> while I feel that GHC must somehow already have these thigns built in
2012-03-28 23:09:32 UTC <luite> a type  Num a => a -> a  is more or less represented the same way as a -> a -> a
2012-03-28 23:09:40 UTC <luite> only the type of the first argument is different
2012-03-28 23:10:31 UTC <mgsloan> ah, so you're splitting off all of the => ?
2012-03-28 23:11:10 UTC <luite> yes, and then reattaching them in the end, with some nubbing to prevent (Num a, Num a) => a -> a
2012-03-28 23:11:22 UTC <mgsloan> ah
2012-03-28 23:12:03 UTC <luite> but SPJ might ahve been right, other than those annoying type splitting functions the implementation was straightforward
2012-03-28 23:13:16 UTC <mgsloan> cool!  Well I'm not even 100% if I need this, but I'm just trying to get good types to build the diagrams from, as you know
2012-03-28 23:13:40 UTC <luite> yeah, do you have something that workingly extracts types already?
2012-03-28 23:15:12 UTC <mgsloan> nope, but I haven't put much time into it
2012-03-28 23:16:53 UTC <mgsloan> https://github.com/mgsloan/panopti/commit/8c54e4fc3613093e12f7fc7a25c4bc3737e3b615
2012-03-28 23:17:16 UTC <mgsloan> err https://github.com/mgsloan/panopti/commit/c94d34673d14fb5c8be72959d3d4fa2d21949276
2012-03-28 23:17:33 UTC <luite> ah
2012-03-28 23:17:43 UTC <luite> oh you don't need those EvBinds after all
2012-03-28 23:18:45 UTC <luite> but I'm not sure if I'm already converting all required things in the wrapper properly
2012-03-28 23:20:11 UTC <luite> exprType' :: HscEnv -> Module -> HsExpr Id -> IO (Maybe Type)
2012-03-28 23:20:13 UTC <luite> exprType' env mod expr = do (_,cexpr) <- initDs env mod emptyGlobalRdrEnv emptyTypeEnv (dsExpr expr) return (CoreUtils.exprType <$> cexpr)
2012-03-28 23:20:19 UTC <luite> whoops newlines missing
2012-03-28 23:20:22 UTC <luite> uh
2012-03-28 23:20:52 UTC <luite> you can use that for now, it's in IO, since it uses desugaring to get the expr type
2012-03-28 23:21:05 UTC <luite> but it will give you the correct type :)
2012-03-28 23:21:05 UTC <mgsloan> cool!
2012-03-28 23:21:19 UTC <mgsloan> thanks!
2012-03-28 23:22:14 UTC <luite> you get the hscEnv with getSession, and Module from one of your TypecheckedModule or something like that :)
2012-03-28 23:24:32 UTC <mgsloan> This API isn't as bad as I'd thought it'd be, but wow is it daunting.
2012-03-28 23:25:39 UTC <luite> I'll make a separate package for my non-IO impl later, it will probably be faster (but might be less correct)
2012-03-28 23:26:07 UTC <luite> if this one is too slow I'll speed up my packaging effors :)
2012-03-28 23:28:08 UTC <luite> oh if you need to find the type context, remember that the whole type is built from FunTy
2012-03-28 23:28:16 UTC <mgsloan> thankfully, speed's not my concern for now.  Just need to get some type-associated code, and it might as well be editable
2012-03-28 23:28:24 UTC <mgsloan> yup
2012-03-28 23:28:45 UTC <luite> to see which part is the context: split off the first argument from the Type (splitFunTy_maybe), and then use isPredTy on that argument
2012-03-28 23:29:17 UTC <luite> if it's a predTy then it's still part of the context, stop splitting when you hit a non-predTy
2012-03-28 23:30:17 UTC <mgsloan> cool.  So good way to do that would be "splitFun :: Ty -> [Ty]", with "partition isPredTy"
2012-03-28 23:30:50 UTC <luite> hmm, not sure, because I think there might be some forall in themiddle of a type
2012-03-28 23:31:05 UTC <luite> so I just stop when I get the first non-predTy
2012-03-28 23:31:26 UTC <luite> hmm, I might be wrong
2012-03-28 23:32:47 UTC <tgeeky> you guys are talking about transitive closure of typing relations? count me in!
2012-03-28 23:33:18 UTC <luite> there's already splitFunTys :: Type -> ([Type], Type) btw
2012-03-28 23:33:38 UTC <luite> it just keeps the last "argument" separately
2012-03-28 23:34:02 UTC <tgeeky> luite: so you have to scan over that function and extract all the 2nd arguments
2012-03-28 23:34:05 UTC <tgeeky> ?
2012-03-28 23:34:24 UTC <luite> tgeeky: what function?
2012-03-28 23:34:45 UTC <tgeeky> luite: splitFunTys?
2012-03-28 23:34:53 UTC <tgeeky> i haven't caught up yet
2012-03-28 23:35:03 UTC <tgeeky> i'm still at "closure of typing relations"
2012-03-28 23:35:15 UTC <luite> tgeeky: oh, that was quite an informal term
2012-03-28 23:35:40 UTC <tgeeky> luite: yeah, I guessed
2012-03-28 23:36:19 UTC <luite> mgsloan: does it work for you?
2012-03-28 23:37:25 UTC <mgsloan> currently in "History of Buddhism" class :) so my efficiency is low
2012-03-28 23:38:57 UTC <luite> oh ok :)
2012-03-28 23:47:35 UTC <luite> tgeeky: oh no, you split arguments that are a pred type
2012-03-28 23:47:54 UTC <luite> tgeeky: (which usually means that the type constructor is for a typeclass)
2012-03-29 01:23:21 UTC <byorgey> PredTys are either type class constraints, equality constraints, or implicit parameters (but no one uses those)
2012-03-29 01:31:08 UTC <tgeeky> byorgey: what about constraint kinds?
2012-03-29 01:32:58 UTC <byorgey> tgeeky: no, those are just kinds which *classify* PredTys
2012-03-29 01:33:04 UTC <byorgey> they are not themselves PredTys
2012-03-29 01:33:27 UTC <tgeeky> byorgey: I guess I meant, where are they represented in the GHC API
2012-03-29 01:34:14 UTC <byorgey> tgeeky: presumably there is some special constructor representing the special Constraint kind
2012-03-29 01:34:52 UTC <byorgey> I haven't actually looked at it recently
2012-03-29 01:35:15 UTC <byorgey> note there is only one Constraint kind, there are not "constraint kinds" plural
2012-03-29 01:35:50 UTC <byorgey> though I suppose you could maybe call any kind involving Constraint a "contraint kind"
2012-03-29 01:38:29 UTC <tgeeky> byorgey: the other day, you mentioned that you think there is some connection between species, ____, and ______
2012-03-29 01:39:01 UTC <tgeeky> let me check my logs.
2012-03-29 01:39:04 UTC <byorgey> linear logic, and ... um... I forget the third thing
2012-03-29 01:40:04 UTC <tgeeky> wow. #haskell log is 75mb.
2012-03-29 01:41:59 UTC <byorgey> is that all?
2012-03-29 01:42:12 UTC <tgeeky> well (relatively) new here
2012-03-29 01:43:32 UTC <byorgey> No, I just meant I expected it to be bigger =)
2012-03-29 01:43:50 UTC <tgeeky> byorgey: by the way, I found "Species : A History of the Idea" which presumably (checking ... yes, means animal species), which might be a good outside read
2012-03-29 01:43:59 UTC <byorgey> hahaha
2012-03-29 01:44:44 UTC <tgeeky> if you'd like, can send
2012-03-29 01:44:59 UTC <tgeeky> but i also found "Combinatorial Species and Tree-like structures, which I assumed you'd have"
2012-03-29 01:45:40 UTC <tgeeky> and, now that I'm at the bottom of the log (there were some interesting ones above)
2012-03-29 01:45:51 UTC <tgeeky> it was SDG, linear types, and species
2012-03-29 01:46:04 UTC <byorgey> yeah, "Tree-Like Structures" is where I've gotten most of my info
2012-03-29 01:46:24 UTC <byorgey> SDG?  I don't even remember what that stands for
2012-03-29 01:47:18 UTC <tgeeky> From: http://blog.sigfpe.com/2006/09/infinitesimal-types.html "Synthetic Differential Geometry"
2012-03-29 01:47:30 UTC <byorgey> aha
2012-03-29 01:47:34 UTC <byorgey> oh, right, now I remember
2012-03-29 01:48:39 UTC <tgeeky> byorgey: this actually sounds a bit like what I tried to convey interest in a long time ago
2012-03-29 01:48:50 UTC <tgeeky> "I'm hoping you can just play along here. Clearly we're talking about a weird kind of product when the product of a non-trivial object with itself is the zero object."
2012-03-29 01:50:24 UTC <byorgey> what is it that you tried to convey interest in?
2012-03-29 01:51:35 UTC <tgeeky> byorgey: uhh, somehow representing an object that you call either (0,empty,null,void) and/or (1,unit,mempty,etc) which is actually something nontrivial
2012-03-29 01:52:00 UTC <tgeeky> where I don't know what I mean by nontrivial :O
2012-03-29 01:52:07 UTC <byorgey> hehe
2012-03-29 01:52:34 UTC <tgeeky> byorgey: another suggestion
2012-03-29 01:52:39 UTC <byorgey> nontrivial unit objects makes sense to me.  For example one could imagine having many nonequal but isomorphic unit objects.
2012-03-29 01:52:48 UTC <tgeeky> "Expander Families and Cayley Graphs"
2012-03-29 01:52:51 UTC <byorgey> in fact this is a good way to model data constructors.
2012-03-29 01:53:29 UTC <byorgey> I tried to watch a video you sent me about that but couldn't really sustain interest.
2012-03-29 01:53:40 UTC <byorgey> are you saying it has some relation to species?  because if so I wasn't seeing it
2012-03-29 01:54:20 UTC <tgeeky> byorgey: oh, nope, not in this case. I just read the first thirty or so pages, and it's an interesting approach
2012-03-29 01:57:57 UTC <tgeeky> byorgey: also, with this infinitesimal types blogpost...
2012-03-29 01:59:45 UTC <tgeeky> is it sensible to talk about a container which has multiple holes?
2012-03-29 02:00:17 UTC <byorgey> sure
2012-03-29 02:00:35 UTC <tgeeky> he uses the example X X X, and looks at the case where each of those are replaced with a hole
2012-03-29 02:00:42 UTC <tgeeky> but not the situation where two (or three) of them are replaced with holes
2012-03-29 02:01:15 UTC <byorgey> tgeeky: well, the notion of differentiation corresponds exactly to having exactly one hole
2012-03-29 02:01:34 UTC <tgeeky> byorgey: in the context of "derivatives of containers", or in a very general context?
2012-03-29 02:02:19 UTC <byorgey> in the context of derivatives of containers, or derivatives of species
2012-03-29 02:02:25 UTC <tgeeky> this was a point I was confused about reading your paper (which I don't have with my notes in front of me at the moment)
2012-03-29 02:02:45 UTC <byorgey> tgeeky: I'm not surprised, because it was a point I was confused about when writing my paper
2012-03-29 02:03:06 UTC <tgeeky> byorgey: so is a second derivative what we're talking about?
2012-03-29 02:03:09 UTC <byorgey> tgeeky: I do a very poor job of explaining it.  In particular the type  F (Maybe a)  is NOT AT ALL the same thing as the derivative of F
2012-03-29 02:03:46 UTC <byorgey> tgeeky: the second derivative of a container type would give you two holes, but with the holes labeled so you can tell them apart
2012-03-29 02:04:18 UTC <tgeeky> byorgey: so a in a 3rd derivative, every hole would have two labels?
2012-03-29 02:05:10 UTC <tgeeky> ACTION wonders if partial deriviatives actually make sense here
2012-03-29 02:14:47 UTC <byorgey> tgeeky: no with a third derivative, there would be three holes, labeled so you can tell which is the first, the second, and the third
2012-03-29 02:15:13 UTC <byorgey> tgeeky: partial derivatives make sense for multi-sort species/higher-kinded containers
2012-03-29 02:15:21 UTC <byorgey> e.g.  data T a b = ...
2012-03-29 02:15:35 UTC <byorgey> you can partially differentiate T with respect to either a or b
2012-03-29 02:20:11 UTC <tgeeky> byorgey: an interesting list of articles whose titles I barely understand: http://home.imf.au.dk/kock/
2012-03-29 02:22:00 UTC <byorgey> crazy
2012-03-29 02:22:07 UTC <byorgey> looks interesting indeed.
2012-03-29 02:28:02 UTC <tgeeky> byorgey: by the way, how awesome is this: http://www.theuniverseandmore.com/
2012-03-29 02:28:16 UTC <tgeeky> it was made by a (presumably high school) physics teacher on whose girlfriend posted it on reddit
2012-03-29 02:40:14 UTC <byorgey> hah, fun!
2012-03-29 03:08:57 UTC <mgsloan> what's the best way to package a bunch of demos with a library?  Maybe just rely on runhaskell Demo1.hs ?
2012-03-29 03:11:33 UTC <byorgey> that's certainly the simplest.
2012-03-29 03:12:07 UTC <byorgey> I could also imagine creating a little wrapper program called 'demo' that imports all the others and shows you a list of available demos, lets you pick which one you want to run, etc.
2012-03-29 03:12:45 UTC <mgsloan> oooh yeah, that's a great idea
2012-03-29 03:13:00 UTC <mgsloan> import each qualified, have a bunch of "Demo1.main" etc
2012-03-29 10:16:45 UTC <ClaudiusMaximus> please call the executable libraryname-demo instead of just demo, if using cabal to create an executable
2012-03-29 10:17:23 UTC <ClaudiusMaximus> but generally for demos i want to see how they work, so cabal unpack + runhaskell would be fine too
2012-03-29 20:25:12 UTC <luite> are path bounds calculated correctly?
2012-03-29 20:25:19 UTC <luite> uh Trail actually
2012-03-29 20:25:42 UTC <luite> I have a trail with # pad 1.1, but it's still being cut off at the top
2012-03-29 20:27:43 UTC <luite> having instant feedback with diagrams is really fun :)
2012-03-29 20:28:47 UTC <byorgey> luite: they are as far as I know.
2012-03-29 20:28:56 UTC <byorgey> yes, instant feedback is a lot of fun =)
2012-03-29 20:29:07 UTC <luite> I already discovered a linker bug...
2012-03-29 20:29:13 UTC <luite> uh
2012-03-29 20:29:22 UTC <luite> not in the linker itself probably :)
2012-03-29 20:29:46 UTC <byorgey> luite: paste the code if you're still having trouble with the Trail bounds...
2012-03-29 20:33:33 UTC <luite> t = Trail [Linear $ r2 (1,0), Linear $ r2 (-1,-1), Linear $ r2 (0,1)] True
2012-03-29 20:33:33 UTC <luite> d :: Diagram Cairo R2
2012-03-29 20:33:34 UTC <luite> d = strokeT t # lw 0.2 # pad 1.2
2012-03-29 20:33:37 UTC <luite> this is the code
2012-03-29 20:33:49 UTC <luite> the top, horizontal, line is only half as wide
2012-03-29 20:33:57 UTC <luite> even if you increase padding
2012-03-29 20:36:33 UTC <byorgey> luite: yeah, that's because padding is computed relative to the local origin, which in this case is in the very top left corner
2012-03-29 20:36:49 UTC <byorgey> luite: try changing it to  strokeT t # centerXY # lw 0.2 # pad 1.2
2012-03-29 20:37:16 UTC <luite> ah tnx!
2012-03-29 20:37:29 UTC <byorgey> luite: see http://projects.haskell.org/diagrams/manual/diagrams-manual.html#envelope-related-functions
2012-03-29 20:37:53 UTC <byorgey> it is even in a red box with a warning sign! ;)
2012-03-29 20:38:48 UTC <luite> oh stupid me :p
2012-03-29 20:39:17 UTC <byorgey> 'pad' is tricky, it would be nice to have a version of pad that behaves more "intuitively" but it's hard to see how to do that given the functional/extensional representation used for envelopes
2012-03-30 03:12:43 UTC <TSC> Hello! Has anyone looked at diagrams-tikz lately? It doesn't work with diagrams 0.5, and I was planning to try to get it going, but I don't want to duplicate anyone else's work...
2012-03-30 03:18:07 UTC <byorgey> hi TSC!
2012-03-30 03:18:38 UTC <byorgey> I don't think anyone's been working on it recently.  If you wanted to fork and revive it that would be most welcome.
2012-03-31 00:11:15 UTC <luite> mgsloan: got any new type diagrams? :)
2012-03-31 00:11:54 UTC <mgsloan> hehe, not yet!  I got kinda distracted working on gtk-toy-diagrams and automatic differentiation for optimizing layouts.. lol
2012-03-31 00:12:15 UTC <mgsloan> probably going to put that stuff on the backburner - turned out to be trickier than I'd hoped
2012-03-31 00:12:26 UTC <luite> ah
2012-03-31 00:13:12 UTC <mgsloan> school's starting to throw tasks my way, too :/
2012-03-31 00:13:21 UTC <luite> I got slightly distracted by the upcoming yesod 1.0 release, some testing/bugfixing :) but I'm working on the javascript part of the type info now
2012-03-31 00:13:36 UTC <mgsloan> awesome!  for the highlighting?
2012-03-31 00:14:29 UTC <luite> yeah, tooltips/popups require some hacking, since it's way too slow to add separate event handlers and tooltips to every word in the code
2012-03-31 00:14:41 UTC <luite> code = code in the editor
2012-03-31 00:15:15 UTC <luite> so I have a single event handler now, and the tooltip is added on demand
2012-03-31 00:16:23 UTC <luite> and that can also be used for error tooltips later, those were also too slow and had some issues
2012-03-31 00:16:23 UTC <mgsloan> sweet!
2012-03-31 00:17:10 UTC <luite> I kind of missed the pipes vs conduits discussion because of this
2012-03-31 00:18:23 UTC <mgsloan> hehe, gotcha
2012-03-31 00:19:15 UTC <mgsloan> I've actually known MenTaLguY for many years.  We worked on Inkscape.  Hoping to persuade him to hack on some diagrams stuff sometime :)
2012-03-31 00:19:34 UTC <mgsloan> (though you're probably talking about the larger scale pipes vs conduits)
2012-03-31 00:19:36 UTC <luite> oh not just on IRC, but also the reddit discussions
2012-03-31 00:19:38 UTC <luite> yeah
2012-03-31 00:20:41 UTC <luite> the first one by twanvl proposing combinding the types, with michael still being rather sceptical, the next thay about the updated library with combined types :)
2012-03-31 00:20:55 UTC <luite> day
2012-03-31 00:21:47 UTC <luite> and the later proposal to add early termination to pipes (but no exception handling yet)
2012-03-31 00:21:52 UTC <luite> forgot who did that
2012-03-31 00:23:01 UTC <mgsloan> haha, yeah, it's certainly been a very interesting discussion
2012-03-31 00:34:40 UTC <luite> I think I'll convert wolfgang to 1.0 this weekend
2012-03-31 00:37:23 UTC <mgsloan> great!!
2012-03-31 00:37:40 UTC <mgsloan> I've been telling people about it for a while, can't wait to have something to link them to
2012-03-31 00:38:19 UTC <luite> oh I meant convert it to yesod 1.0
2012-03-31 00:38:42 UTC <luite> sorry :(
2012-03-31 00:39:15 UTC <luite> but after the type info is done, I'm going to work towards a release too :)
2012-03-31 00:39:36 UTC <luite> oh, one problem... google has better 3d plots than me :(
2012-03-31 00:39:49 UTC <luite> someone has to write some javascript to make a better 3d surface plotter
2012-03-31 00:40:29 UTC <alpounet> mgsloan, ON Inkscape?
2012-03-31 00:40:38 UTC <alpounet> nice!
2012-03-31 00:41:09 UTC <mgsloan> Yup :D  MenTaLguY is one of the 4-5 people who were involved in forking it from Sodipodi
2012-03-31 00:41:28 UTC <alpounet> hah ok
2012-03-31 00:41:42 UTC <mgsloan> we worked on lib2geom, which is how inkscape stores and operates on curves
2012-03-31 00:42:09 UTC <mgsloan> but got kinda fed up with C++.. We had many "if only we were writing Haskell" discussions
2012-03-31 00:42:24 UTC <alpounet> and you have already written a binding to it in Haskell right?
2012-03-31 00:42:25 UTC <alpounet> :P
2012-03-31 00:42:37 UTC <mgsloan> haha, naah.  It's a heavily templated library
2012-03-31 00:42:45 UTC <mgsloan> there are python bindings, though
2012-03-31 00:43:08 UTC <alpounet> there was a project for generating bindings to C++ libraries
2012-03-31 00:43:19 UTC <alpounet> some guy was talking about it like a month ago on #haskell
2012-03-31 00:44:54 UTC <alpounet> he told me he was about to release it
2012-03-31 00:44:57 UTC <alpounet> and no news since then
2012-03-31 00:45:04 UTC <alpounet> and i can't remember his nickname
2012-03-31 12:33:41 UTC <Rc43> Hi!
2012-03-31 12:33:48 UTC <Rc43> Anybody used HInt?
2012-03-31 12:34:15 UTC <Rc43> Yes, it isn't related, but on #haskell nobody knows / tells.
2012-03-31 12:34:30 UTC <Rc43> http://hpaste.org/66281
2012-03-31 12:34:58 UTC <Rc43> Strange imports problem with interpreter and "union" module.
2012-03-31 13:14:12 UTC <ClaudiusMaximus> i annotated your paste - i think loadModules is needed, but i'm hint n00b
2012-03-31 13:23:22 UTC <Rc43> ClaudiusMaximus, thanks, but I have tried it. Interpreter gives strange message `WontCompile [GhcError {errMsg = "module `HReal.Core.Prelude' is a package module"}]`
2012-03-31 13:23:52 UTC <Rc43> And it gives such message with any other module name.
2012-03-31 13:26:04 UTC <Rc43> Oh, I forgot, that loadModules takes list of paths to sources.
2012-03-31 13:26:41 UTC <Rc43> My module isn't from source. It is in other package and I have installed it with cabal.
2012-03-31 13:27:07 UTC <ClaudiusMaximus> ah, i'm out of ideas - installed hint for the first time about 20mins ago..
2012-03-31 13:27:37 UTC <Rc43> ok, thanks anyway
2012-03-31 19:13:43 UTC <Rc43> ClaudiusMaximus, what meaning has such Typeable instance in your new annotation?
2012-03-31 19:14:34 UTC <Rc43> ClaudiusMaximus, I have found too, that problem really only in casting; types are visible inside interpreted code.
2012-03-31 19:15:20 UTC <Rc43> ClaudiusMaximus, and why not use default derived Typeable?
2012-03-31 19:15:38 UTC <ClaudiusMaximus> Rc43: that was a dirty hack to try to get it to work - very fragile - see more explanation here http://article.gmane.org/gmane.comp.lang.haskell.cafe/97551
2012-03-31 19:16:08 UTC <Rc43> ClaudiusMaximus, ok, thanks.
2012-03-31 19:17:20 UTC <ClaudiusMaximus> basically hint uses something like  expr ++ " :: " ++ show (typeOf wit)
2012-03-31 19:18:07 UTC <ClaudiusMaximus> so my hack was to get    show (typeOf wit)  to be "Rational"  instead of the true  "Ratio Integer"
2012-03-31 19:53:42 UTC <Rc43> Ð«Ð³Ð²Ð²ÑÑÐ´Ð½Ñ
2012-03-31 19:53:45 UTC <Rc43> Suddenly.
2012-03-31 19:56:03 UTC <Rc43> But `show` returns string representation of value, but not type.
2012-03-31 19:56:14 UTC <Rc43> How it makes sense?
2012-03-31 22:31:20 UTC <mgsloan> byorgey - what do you think of the idea of moving this from Diagrams.Cairo to Diagrams.Core ?
2012-03-31 22:31:22 UTC <mgsloan> -- | Existential type for mutations on objects that \"have style\". This is
2012-03-31 22:31:23 UTC <mgsloan> --   used as a parameter to @getTextExtents@ and @getFontExtents@ in order to
2012-03-31 22:31:23 UTC <mgsloan> --   set font-size and font-face.
2012-03-31 22:31:23 UTC <mgsloan> type StyleParam = forall a. HasStyle a => a -> a
2012-03-31 22:32:17 UTC <byorgey> mgsloan: sounds good
2012-03-31 22:32:46 UTC <mgsloan> cool! vyom and I are coffee-shop hacking on the logo stuff :D
2012-03-31 22:37:51 UTC <vyom> byorgey: is there a way to use the HasStyle type to capture styles outside of diagrams, like for a turtle
2012-03-31 22:41:53 UTC <mgsloan> ahh, actually, we've decided StyleParam may be a bad idea
2012-03-31 22:46:22 UTC <byorgey> vyom: sure, styles are just heterogeneous collections of attributes
2012-03-31 22:47:10 UTC <byorgey> vyom: it should work very well to collect attributes for things other than diagrams
2012-03-31 22:47:17 UTC <vyom> actually.. yes. we saw that.. the Style type is a heterogenous collection
2012-03-31 22:49:40 UTC <byorgey> mgsloan, vyom: hah, awesome, glad you guys met up =)
2012-03-31 22:49:46 UTC <vyom> :)
2012-03-31 22:50:37 UTC <vyom> how do you modify specify attribute in a style , without effecting other styles?
2012-03-31 22:50:51 UTC <vyom> are there functions defined in the diagrams libraru for that?
2012-03-31 22:51:01 UTC <vyom> s/specify/specific/
2012-03-31 22:51:07 UTC <byorgey> yeah
2012-03-31 22:51:41 UTC <vyom> where do i look
2012-03-31 22:51:50 UTC <byorgey> see Graphics.Rendering.Diagrams.Style  in diagrams-core
2012-03-31 22:52:00 UTC <mgsloan> applyStyle / mappend should work
2012-03-31 22:52:20 UTC <byorgey> applyAttr, applyTAttr, setAttr, addAttr, combineAttr
2012-03-31 22:57:09 UTC <mgsloan> byorgey - dealing with this style stuff makes me question the goodness of StyleParam
2012-03-31 22:57:20 UTC <byorgey> mgsloan: why is that?
2012-03-31 22:57:26 UTC <byorgey> (I haven't thought about it much)
2012-03-31 22:58:05 UTC <byorgey> mgsloan: actually, it occurs to me that StyleParam is isomorphic to Style
2012-03-31 22:58:16 UTC <byorgey> so I guess there's not much point
2012-03-31 22:58:18 UTC <mgsloan> it's nice because it means I can do (textLineBounded (fontSize 12) "foo")
2012-03-31 22:58:21 UTC <mgsloan> but yeah, it is.
2012-03-31 22:58:33 UTC <mgsloan> the StyleParam is mostly just applied to mempty..
2012-03-31 22:58:39 UTC <byorgey> yeah, as opposed to  (textLineBounded (mempty # fontSize 12) "foo")
2012-03-31 22:58:40 UTC <byorgey> right.
2012-03-31 22:58:57 UTC <mgsloan> well, it's applied to diagrams too, but applying it to mempty, and applying the resulting style, would be the same
2012-03-31 22:58:58 UTC <mgsloan> yeah
2012-03-31 22:59:51 UTC <byorgey> I guess we could make a function  style = (mempty #)  (but with a more restrictive type)  so one could write   (textLinebounded (style $ fontSize 12) "foo")
2012-03-31 23:00:00 UTC <byorgey> just as a convenience
2012-03-31 23:00:09 UTC <byorgey> for constructing Styles
2012-03-31 23:00:33 UTC <byorgey> meh, it's probably not worth it =)
2012-03-31 23:00:56 UTC <mgsloan> so, could remove a potentially confusing existential synonym, but making usage more complicated.. hrmm
2012-03-31 23:01:03 UTC <mgsloan> I actually kinda like that idea
2012-04-01 01:28:03 UTC <byorgey> vyom: it seems like diagrams-svg is outputting SVGs upside-down
2012-04-01 01:34:40 UTC <vyom> hmm.. weird.. hadnt noticed that at all.. got any examples
2012-04-01 01:35:08 UTC <vyom> i tried some examples.. but they were kinds symmetrical so i cant say
2012-04-01 01:35:18 UTC <byorgey> vyom: both examples/Pentaflake and examples/Explode
2012-04-01 01:35:35 UTC <byorgey> Explode you can compare to the one in the user manual -- it's a little hard to tell though since you have to compare the colors
2012-04-01 01:35:46 UTC <vyom> hmm.. ok :S
2012-04-01 01:36:09 UTC <byorgey> oh, well, Pentaflake is in the example gallery on the diagrams website too
2012-04-01 01:36:31 UTC <byorgey> that's easier to tell, since it's supposed to be an upwards-pointing pentagon
2012-04-01 01:36:43 UTC <byorgey> anyway, probably just a 'reflectY' needed somewhere =)
2012-04-01 01:36:55 UTC <byorgey> I'm working on adding lineCap and lineJoin and such
2012-04-01 01:37:12 UTC <vyom> let me check.. cant think of what might be causing it..
2012-04-01 01:37:27 UTC <vyom> byorgey: cool
2012-04-01 01:39:34 UTC <vyom> ok i see the problem with Explode..
2012-04-01 01:40:08 UTC <vyom> the older diagrams -svg code did have a reflectY somewhere.. i can dig it up and put it back
2012-04-01 01:40:21 UTC <vyom> but i do wanna understand what is going wrong in the translation..
2012-04-01 01:40:29 UTC <vyom> maybe it is the axis systems?
2012-04-01 01:41:33 UTC <vyom> I also think this change https://github.com/deepakjois/diagrams-svg/commit/f6e0c4077478e83b53221988a566cf4a961cced7 caused a few regressions..
2012-04-01 01:41:48 UTC <vyom> svg seems to pick black as the default fill color
2012-04-01 01:42:04 UTC <vyom> anyway.. let me check out where reflectY must go
2012-04-01 01:42:23 UTC <byorgey> vyom: does SVG use a coordinate system with the positive Y axis pointing down?
2012-04-01 01:43:39 UTC <vyom> byorgey: no idea .. i will verify
2012-04-01 01:44:01 UTC <byorgey> vyom: also, I'm getting an error No instance for (S.ToValue LineCap)  -- where are the other ToValue instances declared?
2012-04-01 01:44:02 UTC <vyom> found the reflectY https://github.com/deepakjois/diagrams-svg/blob/19a0b4d7228d0c042676d3b2a4b0afee032268fc/src/Diagrams/Backend/SVG.hs#L97
2012-04-01 01:44:09 UTC <byorgey> I can't even figure out where ToValue is defined
2012-04-01 01:45:02 UTC <vyom> ToValue is defined in the blaze-html package..
2012-04-01 01:45:24 UTC <vyom> it is a way to convert values to a bytestring i think
2012-04-01 01:45:50 UTC <vyom> can you give me more context on why you need to convert LineCap to an attribute
2012-04-01 01:46:10 UTC <vyom> you probbably need a string
2012-04-01 01:46:25 UTC <byorgey> I just basically copied renderLineWidth
2012-04-01 01:46:30 UTC <byorgey> I don't really know =P
2012-04-01 01:48:23 UTC <byorgey> ohhh, I get it now
2012-04-01 01:48:32 UTC <byorgey> it works for line width because it's a Double
2012-04-01 01:48:49 UTC <byorgey> ok, yeah, I see, I just nede to convert LineCap to an appropriate string
2012-04-01 01:50:09 UTC <vyom> yes.. toValue is defined for ToValue typeclass in blaze-html.. or hopefully blaze-markup soon if my code changes are accepted
2012-04-01 01:50:41 UTC <vyom> most common types already have an instance
2012-04-01 01:52:43 UTC <vyom> ok so the origin is at the top left by default..
2012-04-01 01:53:03 UTC <vyom> so I must do a reflectY i suppose?
2012-04-01 01:53:44 UTC <byorgey> yeah, so you need a reflectY
2012-04-01 01:53:57 UTC <vyom> cool.. i will just restore the adjustDia function
2012-04-01 01:54:28 UTC <byorgey> OK
2012-04-01 02:10:02 UTC <vyom> fixed diagrams http://db.tt/ZghgGsA5 http://db.tt/BWzVv3gd
2012-04-01 02:10:43 UTC <tgeeky> nice pentaflake
2012-04-01 02:11:21 UTC <byorgey> vyom: http://www.w3.org/TR/SVG/painting.html#FillProperty
2012-04-01 02:11:47 UTC <byorgey> the SVG standard specifies that the default fill is black
2012-04-01 02:12:32 UTC <vyom> ok.. which makes sense because after my latest commit.. everything started rendering in black
2012-04-01 02:13:25 UTC <vyom> but the adjustDia that I copied from the previous implementation of diagrams-svg will set the default to be transparent
2012-04-01 02:13:32 UTC <byorgey> vyom: I think the thing to do is when handling the fill color attribute, if we don't find one then we just emit  fill=none
2012-04-01 02:13:40 UTC <byorgey> oh, ok, that works too
2012-04-01 02:14:12 UTC <byorgey> not sure if there's a difference between transparent fill and no fill
2012-04-01 02:17:58 UTC <vyom> the adjustment leads to this in the svg markup: fill="rgb(0,0,0)" fill-opacity="0.0"
2012-04-01 02:20:11 UTC <vyom> so effectively it is none.. at least for now where styles are not inheriting
2012-04-01 02:28:04 UTC <byorgey> ok, I see
2012-04-01 02:33:14 UTC <byorgey> vyom: OK, I've added line cap and line join, but I can't test them until paths aren't filled with black =)
2012-04-01 02:37:41 UTC <vyom> can you submit a pull request
2012-04-01 02:37:44 UTC <vyom> i can help test
2012-04-01 02:37:50 UTC <vyom> i hvae the change in my workspace..
2012-04-01 02:37:58 UTC <vyom> but there are some other unrelated commits on top..
2012-04-01 02:38:25 UTC <vyom> i am about to go into a skype call.. after which i will rebase the commits and push them to repo
2012-04-01 02:51:11 UTC <vyom> byorgey: or you could just make that change I linked to earlier line 97
2012-04-01 02:51:39 UTC <vyom> it is a single line change
2012-04-01 02:57:50 UTC <byorgey> vyom: OK, I just opened a pull request.
2012-04-01 02:58:09 UTC <byorgey> I may try making the change myself locally to test, but I'll let you sort it out
2012-04-01 03:30:19 UTC <vyom> byorgey: http://db.tt/G2CxD6Ae renders fine.. but I had to bump up the stroke-width in order to really see the change at 400x400
2012-04-01 03:34:47 UTC <mgsloan> ACTION thinks the removal of StyleParam is good.  Should I go ahead with a patch to diagrams-cairo ?
2012-04-01 03:34:55 UTC <mgsloan> it'll be an API breaking change of course..
2012-04-01 03:35:21 UTC <mgsloan> not too hard of a change, though - just append "mempty" to the old StyleParams
2012-04-01 03:50:46 UTC <mgsloan> http://www.patch-tag.com/r/byorgey/diagrams-cairo/snapshot/hash/20120401002051-3850c-2b2160dfceffeae4f083e07b6966dc9a38ae541f/patch
2012-04-01 03:50:57 UTC <mgsloan> http://www.patch-tag.com/r/byorgey/diagrams-cairo/snapshot/hash/20120401034903-3850c-5dcc8b3384033432ae1afdaebd266a7ba699be0c/patch
2012-04-01 21:00:11 UTC <tgeeky> lol. I love haskell
2012-04-01 21:00:26 UTC <tgeeky> I am having trouble understanding what's going on in a paper I read (relating third list homomorphism and unfolding)
2012-04-01 21:00:48 UTC <tgeeky> and sjoerd v. comes along and makes it for me" http://hackage.haskell.org/package/unfoldable-0.1.0
2012-04-01 23:14:24 UTC <byorgey> heh, awesome =)
2012-04-02 00:12:10 UTC <ClaudiusMaximus> wheee, code works http://hpaste.org/66341#line64 - now time to $ sleep `xor` make diagrams out of it
2012-04-02 00:14:09 UTC <byorgey> ClaudiusMaximus: cool, I look forward to seeing pictures =)
2012-04-02 00:18:16 UTC <ClaudiusMaximus> byorgey: will look a bit like http://www.mostlymaths.net/2009/08/lavaurs-algorithm.html (which my code is a special case of) but with semicircles centered on a straight line instead of arcs orthogonal to a circle
2012-04-02 00:28:50 UTC <byorgey> ah, cool
2012-04-02 02:03:47 UTC <ClaudiusMaximus> mm, need to rethink my strategy - need to comprees the huge dynamic range - 1/8191 is invisible in a diagram of size 1/7
2012-04-02 02:09:09 UTC <byorgey> take logs or something?
2012-04-02 02:17:04 UTC <ClaudiusMaximus> hmm, not sure how that would work - this is a collection of points spaced along the x axis more than anything else - unless you mean take logs of the spacing between the points?
2012-04-02 02:18:05 UTC <ClaudiusMaximus> my next attempt would have been to make the spacing between each neighbouring point a constant
2012-04-02 02:20:08 UTC <ClaudiusMaximus> (i also found an off-by-one bug in my code, annotated with a fix)
2012-04-02 04:14:45 UTC <ClaudiusMaximus> i suck at text alignment... http://img710.imageshack.us/img710/7213/test18edit.png
2012-04-02 04:15:36 UTC <luite> what kind of data is that?
2012-04-02 04:18:13 UTC <ClaudiusMaximus> see the code link i pasted earlier - the left-hand axis is external angles in the Mandelbrot Set, the bottom axis is the period of the hyperbolic components whose arcs are vertical at that xcoord
2012-04-02 04:21:34 UTC <ClaudiusMaximus> it's based on this algorithm (but adapted to search only at the top (so if something is "blocked off" by an arc, no calculating of anything underneath it)  http://en.wikibooks.org/wiki/Fractals/Iterations_in_the_complex_plane/Mandelbrot_set/lavaurs
2012-04-02 04:21:46 UTC <ClaudiusMaximus> )
2012-04-02 04:24:29 UTC <luite> hmm, i don't really understand what blocked off means though :)
2012-04-02 04:26:52 UTC <ClaudiusMaximus> lavaurs' algorithm recursively finds every arc up to a given period, but some of those arcs will be inside other arcs of lower period - i don't care about those, i only want "visible" arcs (those not inside any other arc of lower period) of my target period
2012-04-02 04:31:50 UTC <ClaudiusMaximus> eg: compare http://commons.wikimedia.org/wiki/File:Lavaurs-t-4.svg  with  http://img189.imageshack.us/img189/9056/test19edit.png
2012-04-02 04:32:23 UTC <luite> ah i see
2012-04-02 04:42:09 UTC <tgeeky> cool
2012-04-02 04:44:29 UTC <tgeeky> ClaudiusMaximus: I find yours infinitely more readable
2012-04-02 04:48:09 UTC <ClaudiusMaximus> tgeeky: :)
2012-04-02 04:48:48 UTC <ClaudiusMaximus> wow, someone sent me a link to a paper, saying it was "pretty long" - it's 126 pages, which imo is exceedingly huge
2012-04-02 04:49:00 UTC <tgeeky> that's pretty long
2012-04-02 04:49:04 UTC <tgeeky> that's LONGCAT long
2012-04-02 04:50:17 UTC <ClaudiusMaximus> "symbolic dynamics of quadratic polynomials" Bruin and Schleicher
2012-04-02 04:50:27 UTC <tgeeky> sounds interesting. link?
2012-04-02 04:50:46 UTC <ClaudiusMaximus> http://www.ml.kva.se/preprints/archive/2001-2002/2001-2002-07.pdf
2012-04-02 04:52:15 UTC <tgeeky> wow. I'll never read this.
2012-04-02 04:52:18 UTC <tgeeky> *saved*
2012-04-02 04:55:00 UTC <ClaudiusMaximus> it has footnotes that span page breaks :o
2012-04-02 04:55:06 UTC <luite> urgh bitmap fonts
2012-04-02 04:58:42 UTC <tgeeky> bitmap fonts: for the man who knows exactly what his fonts should look like on his monitor, damn it!
2012-04-02 05:06:15 UTC <luite> with some luck, we won't need bitmap fonts at all anymore in a few years
2012-04-02 05:45:34 UTC <ClaudiusMaximus> ouch, unless I'm doing something stupid, it seems like  alignedText 0.5 0.5 " X" == alignedText 0.5 0.5 "X"  but  alignedText 0.5 0.5 "X  Y" /= alignedText 0.5 0.5 "X Y"
2012-04-02 05:48:37 UTC <tgeeky_> ClaudiusMaximus: sounds like s/^ // is in effect
2012-04-02 05:48:56 UTC <tgeeky_> ClaudiusMaximus: try " X" and "   X"
2012-04-02 05:49:34 UTC <ClaudiusMaximus> i did in my real code
2012-04-02 05:50:00 UTC <ClaudiusMaximus> all leading spaces disappear throwing the alignment all wonky :(
2012-04-02 05:51:24 UTC <tgeeky_> ClaudiusMaximus: same with trailing spaces?
2012-04-02 05:52:44 UTC <ClaudiusMaximus> no
2012-04-02 05:54:54 UTC <ClaudiusMaximus> short version: i'm trying to align "1 / 1" "1 / 10" "1 / 100" at the '/', so i tried "1 / 1" " 1 / 10" "  1 / 100"  and it did nothing, but "(1 / 1)" "( 1 / 10)" "(  1 / 100)" did align
2012-04-02 05:55:36 UTC <ClaudiusMaximus> i also tried '\160'  (which i believe is &nbsp;) to no avail
2012-04-02 06:13:22 UTC <tgeeky_> ClaudiusMaximus: oh. how about just "justifying" the spaces
2012-04-02 06:13:52 UTC <ClaudiusMaximus> hm?
2012-04-02 06:13:57 UTC <tgeeky_> if 1000 is the largest denominator, then the smaller ones will be: " 100", "  10", and "   1"
2012-04-02 06:14:40 UTC <ClaudiusMaximus> ahh, using  alignedText 1 0.5
2012-04-02 06:15:08 UTC <ClaudiusMaximus> that's much more complicated :P  but i may do it, it'll probably look nicer too
2012-04-02 06:16:19 UTC <tgeeky_> ClaudiusMaximus: hehe. Naively, I think about just making all results N digits long (in this case, 4) and padding the string with leading 0s, and then replacing those 0s with spaces
2012-04-02 06:21:32 UTC <ClaudiusMaximus> tgeeky_: well, i already need the maximum length of the whole strings to avoid the text being off the edge of the diagram..
2012-04-02 06:22:08 UTC <ClaudiusMaximus> making the rest of it prettier right now though
2012-04-02 06:47:35 UTC <ClaudiusMaximus> tgeeky_: turned out to be less complicated than padding the numerator to the length of the denominator, and looks better too - thanks!
2012-04-02 06:47:51 UTC <tgeeky_> ClaudiusMaximus: cool!
2012-04-02 06:47:56 UTC <tgeeky_> you're welcome
2012-04-02 06:48:06 UTC <mgsloan> you are probably using "textLineBounded" rather than "textVisualBounded"
2012-04-02 06:48:06 UTC <tgeeky_> ACTION -> bed
2012-04-02 06:49:40 UTC <ClaudiusMaximus> mgsloan: i'm using textAligned, so whatever that is using
2012-04-02 06:50:21 UTC <ClaudiusMaximus> mgsloan: anyway, tgeeky_'s suggestion is better, so i don't need to worry about that anymore :)
2012-04-02 06:50:40 UTC <mgsloan> visual bounded is the bounds of the glyphs, whereas line bounded is the logical bounds, with the origin set to the baseline / left-hand start
2012-04-02 06:51:06 UTC <mgsloan> cool!
2012-04-02 07:46:03 UTC <ClaudiusMaximus> getting there slowly... http://img545.imageshack.us/img545/5666/test60edit.png
2012-04-02 07:51:25 UTC <ClaudiusMaximus> ...still haven't figured out the padding/border properly - i guess it's impossible what with the text at the edges..
2012-04-02 11:50:54 UTC <ClaudiusMaximus> progressing, still not perfect... http://img205.imageshack.us/img205/5075/t91.png (note: kinda huge)
2012-04-02 12:40:56 UTC <ClaudiusMaximus> am i alone in defining versions of === and ||| that take the local origin of the other side?
2012-04-02 12:40:59 UTC <ClaudiusMaximus>       (===>) = flip (beside unitY)
2012-04-02 12:41:02 UTC <ClaudiusMaximus>       (|||>) = flip (beside (negateV unitX))
2012-04-02 15:07:52 UTC <tgeeky_> ClaudiusMaximus: ooh, my suggestion did turn out nicely
2012-04-02 16:02:56 UTC <byorgey> ClaudiusMaximus: oh, good idea, those are certainly useful, maybe we should add them to the std library?
2012-04-02 16:05:41 UTC <byorgey> ClaudiusMaximus: note, if you want padding for text to work properly you can use stuff from Diagrams.Backend.Cairo.Text instead of the default text support in diagrams-lib
2012-04-02 17:05:56 UTC <luite> hmm, so it looks like niklas broberg already has a working typechecker, with code borrowed from ghc :)
2012-04-02 18:08:11 UTC <byorgey> nice =)
2012-04-02 19:40:01 UTC <tgeeky_> luite: as in, in addition to the GHC and core typecheckers?
2012-04-02 19:42:51 UTC <luite> uh I guess the difference is that it typechecks a haskell-src-exts AST instead of a GHC one
2012-04-02 19:43:23 UTC <luite> does GHC actually typecheck core btw?
2012-04-02 19:44:04 UTC <tgeeky_> luite: I am pretty sure yes, but let me look it up again.
2012-04-02 19:44:10 UTC <tgeeky_> I learned that from a recent simon marlow PDF
2012-04-02 19:45:33 UTC <tgeeky_> luite: document is: http://community.haskell.org/~simonmar/papers/aos.pdf
2012-04-02 19:46:37 UTC <tgeeky_> luite: page 11
2012-04-02 19:46:47 UTC <tgeeky_> Running the Core type checker (we call it CoreLint) is a very powerful
2012-04-02 19:46:47 UTC <tgeeky_> consistency check on the compiler itself. Imagine that you write an \op-
2012-04-02 19:46:47 UTC <tgeeky_> timisation" that accidentally generates code that treats an integer value
2012-04-02 19:46:47 UTC <tgeeky_> as a function, and tries to call it. The chances are that the program will
2012-04-02 19:46:47 UTC <tgeeky_> segmentation fault, or fail at runtime in a bizarre way. Tracing a seg-fault
2012-04-02 19:46:49 UTC <tgeeky_> back to the particular optimisation pass that broke the program is a long
2012-04-02 19:46:56 UTC <tgeeky_> ugh. sorry. i didn't know it would paste like that.
2012-04-02 19:47:32 UTC <luite> ah right
2012-04-02 19:48:00 UTC <luite> just a checker, no inference :)
2012-04-02 19:48:18 UTC <tgeeky_> luite: I think it's all explicitly typed
2012-04-02 19:48:21 UTC <tgeeky_> if i recall correctly
2012-04-02 19:48:27 UTC <tgeeky_> ie, dictionaries are passed around everywhere
2012-04-02 19:48:33 UTC <luite> yeah that's what page 11 says
2012-04-02 19:48:57 UTC <luite> yep typeclass constraints are converted to dictionaries in the desugrarer
2012-04-02 19:48:59 UTC <tgeeky_> luite: page 7 has a helpful flowchart
2012-04-02 19:49:35 UTC <luite> yeah I know it up to the Desugar/CoreExpr pass :)
2012-04-02 21:42:21 UTC <byorgey> yeah, ghc core has explicit type annotations, coercions, etc. everywhere
2012-04-02 21:42:35 UTC <byorgey> it's designed so that it can be very efficiently typechecked without doing any inference, solving, etc.
2012-04-02 21:43:06 UTC <byorgey> dictionaries are passed explicitly, type arguments are passed explicitly to polymorphic functions, etc.
2012-04-03 03:08:21 UTC <vyom> i am making some changes to the turtle to support line widths and colors.. and along the way decided to write some tests for it
2012-04-03 03:09:12 UTC <vyom> so I decided to copy the Turtle class over to hs-logo temporarily.. since I need to make the corresponding language changes as well
2012-04-03 03:09:32 UTC <vyom> will send out a code review after it is done..
2012-04-03 03:10:03 UTC <vyom> or more like a darcs patch for review :)
2012-04-03 03:12:43 UTC <byorgey> vyom: cool
2012-04-03 03:14:58 UTC <vyom> has cabal test stopped working on ghc 7.4 or something
2012-04-03 03:15:50 UTC <tgeeky_> vyom: it was developed last summer, so perhaps it requires 7.2.1
2012-04-03 03:16:06 UTC <tgeeky_> "cabal test" was a GSoC project, methinks
2012-04-03 03:16:10 UTC <vyom> ok
2012-04-03 03:16:17 UTC <tgeeky_> i can test something if you'd like
2012-04-03 03:16:22 UTC <tgeeky_> i have 7.2.1 here (in windows)
2012-04-03 03:16:31 UTC <vyom> you mean it may not work on 7.4?
2012-04-03 03:16:40 UTC <tgeeky_> vyom: I expect it will work on 7.4
2012-04-03 03:16:41 UTC <vyom> i ran the suite using ghc directly..
2012-04-03 03:17:04 UTC <vyom> and it works.. and i am having the same problem with more than one package now
2012-04-03 03:17:12 UTC <vyom> so something wonky in my toolchain
2012-04-03 03:17:24 UTC <tgeeky_> vyom: what's the problem? is cabal acting like 'test' isn't a valid command?
2012-04-03 03:18:28 UTC <vyom> pasting message from #haskell : I tried doing cabal configure --enable-tests and cabal test
2012-04-03 03:18:42 UTC <vyom> cabal: No test suites enabled. Did you remember to configure with  --enable-tests
2012-04-03 03:18:58 UTC <vyom> which seems weird.. because i just did that :)
2012-04-03 03:19:07 UTC <tgeeky_> vyom: yes. that is weird.
2012-04-03 03:19:10 UTC <tgeeky_> I get no such error
2012-04-03 03:19:13 UTC <tgeeky_> with 7.2.1
2012-04-03 03:19:16 UTC <vyom> ok
2012-04-03 03:19:18 UTC <byorgey> vyom: when I tried cabal test I remember running into strange issues like that too
2012-04-03 03:19:33 UTC <tgeeky_> can someone name a package that has a "cabal test" test suite?
2012-04-03 03:19:33 UTC <vyom> yes.. it works in Travis CI which uses 7.2 i believe
2012-04-03 03:19:41 UTC <byorgey> you have to do some unintuitive magic sequence of incantations, but I don't remember what they are
2012-04-03 03:19:55 UTC <byorgey> vyom: did you try 'cabal clean' and then 'cabal configure --enable-tests' again?
2012-04-03 03:20:05 UTC <byorgey> worth a try at least
2012-04-03 03:20:10 UTC <tgeeky_> byorgey: I am pretty sure this one doesn't involve salt and/or throwing salt, and/or throwing granulated substances over one's shoulder
2012-04-03 03:20:26 UTC <byorgey> tgeeky_: OK, good, that's one thing we can rule out =)
2012-04-03 03:20:36 UTC <tgeeky_> vyom: FYI, i'm using cabal-install 0.10.2, and cabal 1.10.2.0
2012-04-03 03:20:56 UTC <byorgey> good point, the version of cabal-install probably matters more than the version of GHC
2012-04-03 03:22:46 UTC <vyom> byorgey: yes i did.. and i believe i have that version of cabal-install as well
2012-04-03 03:23:06 UTC <vyom> oh well.. at least it works in travis.. i am just gonna use ghc directly for now
2012-04-03 04:42:27 UTC <vyom> looking at the turtle code.. it feels like a lot of the functions can be made "purer" rather than threading it through the state monad
2012-04-03 04:42:50 UTC <vyom> that makes testing easier too
2012-04-03 04:42:54 UTC <vyom> does that make sense?
2012-04-03 05:05:54 UTC <tgeeky_> vyom: i've heard things like that said before
2012-04-03 05:06:41 UTC <luite> does that make them true, or even make them make sense? ;p
2012-04-03 05:07:25 UTC <tgeeky_> no, but in this case, I think smart people espouse the goals of purity, and dislike monads when not necessary
2012-04-03 05:08:04 UTC <tgeeky_> vyom: and, with pure functions, you have the entire suite of testing and generation available to you (quickcheck for starters)
2012-04-03 05:11:27 UTC <vyom> tgeeky_: :).. that was the point i was trying to make, about testability
2012-04-03 05:11:33 UTC <tgeeky_> vyom: I figured
2012-04-03 05:11:54 UTC <tgeeky_> vyom: I don't understand why we shouldn't have such tools for (some) monads, but maybe we're getting there
2012-04-03 05:12:10 UTC <tgeeky_> ACTION bets byorgey will have a hand in it too :o
2012-04-03 05:19:41 UTC <tgeeky_> of course, I'm almost broke, so we'll have to bet someone else's money
2012-04-03 11:01:05 UTC <ClaudiusMaximus> byorgey: i'll check out the cairo backend text stuff shortly, thanks
2012-04-03 11:04:05 UTC <ClaudiusMaximus> i have a sequence of diagrams with local origins in the right place such that vcat aligns them nicely.  now i want to have each diagram in a separate svg file so i can embed them in an xhtml document with narrative text - how might i maintain the nice alignment that i get from vcat?
2012-04-03 11:06:29 UTC <ClaudiusMaximus> i'm thinking something like (where [ and ] are the edges, and X is the local origin)  [  X  ]  -> [  X  ] (unchanged),  [ X    ] -> [    X    ] (pad on left to center local origin), [  X] -> [  X  ] (pad on right to center local origin); and use xhtml/css centering
2012-04-03 11:06:41 UTC <ClaudiusMaximus> but i'm not sure where to start to implement this
2012-04-03 16:05:16 UTC <byorgey> ClaudiusMaximus: I guess you want to do something like take the 'extentX' of the vcat, and then compose each diagram with a horizontal strut constructed from the extent?
2012-04-03 16:05:33 UTC <byorgey> I'm not sure I completely understand what you are trying to do.
2012-04-03 16:18:37 UTC <ClaudiusMaximus> byorgey: i've got diagrams with off-center local origins, i want to end up with a diagram with a centered local origin but without changing the location of the local origin w.r.t the stuff in the diagram
2012-04-03 16:19:09 UTC <ClaudiusMaximus> byorgey: hm, that could work, but that would make each diagram as wide as the widest one
2012-04-03 16:20:55 UTC <ClaudiusMaximus> i didn't yet check out the cairo text btw, got distracted having found a bug in something else...
2012-04-03 17:52:15 UTC <byorgey> ClaudiusMaximus: ohhh, I get it now.
2012-04-03 17:53:43 UTC <byorgey> ClaudiusMaximus: centerize d = strutX ((*2) . uncurry max . fromMaybe (0,0) . extentX $ d) <> d
2012-04-03 17:53:46 UTC <byorgey> does that work?
2012-04-03 17:53:52 UTC <byorgey> just apply that to each diagram
2012-04-03 18:24:51 UTC <ClaudiusMaximus> byorgey: looks like it should be perfect - but i'm still debugging other code, those diagrams are on hold :/
2012-04-03 18:34:08 UTC <byorgey> ClaudiusMaximus: ok =)
2012-04-03 18:40:14 UTC <tgeeky_> byorgey: beautiful :o
2012-04-03 18:43:44 UTC <byorgey> compositional declarative framework FTW!
2012-04-03 20:11:09 UTC <luite> grrrrrrrrrrr
2012-04-03 20:11:49 UTC <tgeeky_> you won't like him when he's angry
2012-04-03 20:13:49 UTC <luite> it's not easy being green
2012-04-03 20:14:55 UTC <tgeeky_> byorgey: is this a good paper to read today? http://research.microsoft.com/en-us/um/people/emeijer/Papers/fpca91.pdf
2012-04-03 20:16:56 UTC <luite> is this a good day to read paper?
2012-04-03 20:17:25 UTC <tgeeky_> i'm a bit behind the times, I know. :( No ipad here.
2012-04-03 20:17:31 UTC <tgeeky_> But I need something to accomany me with my chores
2012-04-03 20:38:46 UTC <luite> Page ins: 302.24GB, Page outs: 41.83GB, Swap used: 5.55GB
2012-04-03 20:44:52 UTC <byorgey> tgeeky_: that is a classic paper.  still a good read, though some of the notation is a bit non-standard
2012-04-03 20:45:08 UTC <byorgey> tgeeky_: it is also woefully devoid of diagrams.
2012-04-03 20:46:29 UTC <byorgey> I think I could comprehend the whole thing if I read it now, but the first couple times I tried to read it I only made it about halfway through.
2012-04-03 22:06:48 UTC <tgeeky_> byorgey: the brackets and lenses and other sorts of things?
2012-04-03 22:07:21 UTC <tgeeky_> isn't some (or all?) of that implemented in SHE or whatever? the strathclyde ___ ___
2012-04-03 22:08:23 UTC <tgeeky_> ah. just idiom brackets
2012-04-04 01:55:21 UTC <byorgey> tgeeky_: yeah, only idiom brackets are in SHE, and those are not in that paper
2012-04-04 01:55:28 UTC <byorgey> those are from "Applicative Programming with Effects"
2012-04-04 01:56:44 UTC <byorgey> tgeeky_: nah, the brackets and lenses are pretty standard.  I mean some of the related categorical notation, like the notations for products, coproducts, etc.
2012-04-04 02:04:38 UTC <luite> buh why did I volunteer to test the yesod release candidate on fringeware operating systems like os x and windows :(
2012-04-04 02:05:23 UTC <tgeeky_> luite: because your secret hobby is self-flagellation and you wanted to step it up a notch?
2012-04-04 02:05:34 UTC <luite> hehe something like that
2012-04-04 02:05:45 UTC <luite> I think it builds now though
2012-04-04 02:05:58 UTC <tgeeky_> i've never gotten it to build on windows, but I haven't tried in some time
2012-04-04 02:06:27 UTC <luite> it should work out of the box with the most recent haskell platform
2012-04-04 21:05:57 UTC <ClaudiusMaximus> woop! found the bug! and fixed it! (i think - at least the previously failing test case now passes, more tests always needed)
2012-04-04 21:06:28 UTC <ClaudiusMaximus> now i can get back to the diagramming
2012-04-04 21:06:44 UTC <byorgey> yay!
2012-04-04 21:06:48 UTC <byorgey> (on both counts)
2012-04-04 21:08:23 UTC <ClaudiusMaximus> 2nd april 12:51 < ClaudiusMaximus> progressing, still not perfect... http://img205.imageshack.us/img205/5075/t91.png (note: kinda huge)   <<<< btw, that describes this location in the mandelbrot set: http://img402.imageshack.us/img402/2326/m91.png
2012-04-04 21:09:09 UTC <ClaudiusMaximus> the bug i found was in the "reverse ray tracing" algorithm that goes from location to external angles (cause: numerical precision suckage)
2012-04-04 21:09:36 UTC <ClaudiusMaximus> which i used to "verify" that the forward ray tracing algorithm did what it was supposed to
2012-04-04 21:09:47 UTC <byorgey> hmm, difficult to see that first image on the gray background
2012-04-04 21:09:56 UTC <ClaudiusMaximus> inappropriate transparency
2012-04-04 21:10:01 UTC <byorgey> heh, yeah
2012-04-04 21:10:25 UTC <ClaudiusMaximus> (still not figured out the magic combinator for "make this be atop solid white")
2012-04-04 21:10:32 UTC <byorgey> I like that place in the Mandelbrot set, I've never seen one like that before =D
2012-04-04 21:10:54 UTC <byorgey> ClaudiusMaximus: oh, there is one, I forget what it is, just a sec...
2012-04-04 21:11:25 UTC <ClaudiusMaximus> should be in the faq!
2012-04-04 21:11:56 UTC <byorgey> yes, there should be a lot more stuf in the FAQ, feel free to add things =)
2012-04-04 21:12:11 UTC <byorgey> in fact, feel free to just add questions and force me to fill in answers =)
2012-04-04 21:12:17 UTC <ClaudiusMaximus> are the logs for this channel searchable?
2012-04-04 21:12:31 UTC <byorgey> oh, I think it got added after the 0.5 release
2012-04-04 21:12:36 UTC <ClaudiusMaximus> ahh
2012-04-04 21:12:37 UTC <byorgey> I can paste the code for you though
2012-04-04 21:12:42 UTC <ClaudiusMaximus> :)
2012-04-04 21:13:32 UTC <byorgey> ClaudiusMaximus: the logs are at http://patch-tag.com/r/byorgey/diagrams-doc/snapshot/current/content/pretty/logs
2012-04-04 21:13:46 UTC <byorgey> though it would be nice to come up with a better way of doing things re: logs
2012-04-04 21:14:13 UTC <ClaudiusMaximus> yep, i see in the topic, was too lazy to click to see if there was a search interface
2012-04-04 21:15:03 UTC <byorgey> yeah, no search interface
2012-04-04 21:15:10 UTC <byorgey> ClaudiusMaximus: http://hpaste.org/66446
2012-04-04 21:17:45 UTC <ClaudiusMaximus> thanks!  c&p'd into my code, will see if it compiles
2012-04-04 21:18:43 UTC <ClaudiusMaximus> another combinator i made, could be generalized?  same intent as 'pad' but using a fixed size instead of relative size:  border s d = strutY s ===> (strutX s |||> d ||| strutX s) === strutY s
2012-04-04 21:35:07 UTC <byorgey> ClaudiusMaximus: ah, cool
2012-04-04 21:35:14 UTC <tgeeky_> i'm somewhat confused by what the diagrams actually are
2012-04-04 21:38:16 UTC <tgeeky_> on second thought, I think I get part of it
2012-04-04 21:39:21 UTC <luite> they're just monoids in the category of mandelbromorphisms
2012-04-04 21:39:40 UTC <luite> euh the other way around
2012-04-04 21:39:42 UTC <luite> or something
2012-04-04 21:40:36 UTC <tgeeky_> curiously
2012-04-04 21:41:13 UTC <tgeeky_> it seems to be *very* close to defining some rules about what can happen on a QED lattice lagrangian
2012-04-04 21:41:35 UTC <tgeeky_> but with some weird extra concepts thrown in that I don't understand
2012-04-04 21:41:40 UTC <luite> hehe do all fractal things have some physical interpretations? :p
2012-04-04 21:41:51 UTC <tgeeky_> luite: pretty much none of them do
2012-04-04 21:42:16 UTC <tgeeky_> luite: but serious people do build lattice models to model QCD (quarks and gluons)
2012-04-04 21:42:25 UTC <tgeeky_> because it's not perturbative (like QED, which makes it "easy")
2012-04-04 21:42:36 UTC <tgeeky_> but then, when they got bored, they did it on QED anyway
2012-04-04 21:43:30 UTC <ClaudiusMaximus> tgeeky_: http://arxiv.org/abs/math/9411238 (angled internal addresses) http://www.iec.csic.es/~gerardo/publica/Pastor02.pdf (tuning on external angles)
2012-04-04 21:43:32 UTC <tgeeky_> these would correspond to maximal loop diagrams
2012-04-04 21:44:29 UTC <tgeeky_> the situation where a particle is created (left edge), goes out on a lattice, but turns around, and comes back without touching the other edge (and being annihilated)
2012-04-04 21:46:48 UTC <tgeeky_> luite: admittedly, this has much more to do with particle physics than anything I've discovered on "my" fractal of choice
2012-04-04 21:47:22 UTC <tgeeky_> ClaudiusMaximus: thanks for the links
2012-04-04 21:48:59 UTC <ClaudiusMaximus> tgeeky_: the t91 diagram is to show how the angled internal address gets converted to external angles - but it's almost dinner time! /afk
2012-04-05 00:31:08 UTC <ClaudiusMaximus> tgeeky_: oops, this is the one with figures included: http://iec.csic.es/~fausto/publica/Pastor02_pre.pdf
2012-04-05 10:26:06 UTC <Rc43> Hi, guys.
2012-04-05 10:26:48 UTC <Rc43> Diagrams.Prelude exports Last, but without monoid instance. Or I do something wrong.
2012-04-05 10:26:56 UTC <Rc43> It is not a problem, just want to say.
2012-04-05 10:33:58 UTC <Rc43> Hmm...
2012-04-05 10:34:01 UTC <ClaudiusMaximus> it's Data..Semigroup.Last, not Data.Monoid.Last - not sure what the difference is
2012-04-05 10:34:05 UTC <Rc43> Or I really do something wrong.
2012-04-05 10:34:25 UTC <ClaudiusMaximus> Rc43: ghci :info Last
2012-04-05 10:35:25 UTC <Rc43> I am trying to use `value $ Last 1`.
2012-04-05 10:36:10 UTC <Rc43> With Data.Monoid.Last ghc somehow want to (Maybe Int) being a Num instance.
2012-04-05 10:36:32 UTC <Rc43> And with Diagrams.Prelude.Last ghc says that Last isn't Monoid.
2012-04-05 10:37:28 UTC <Rc43> (`value` requires Monoid)
2012-04-05 10:38:07 UTC <ClaudiusMaximus> Data.Monoid.Last {Data.Monoid.getLast :: Maybe a}  but  Data.Semigroups.Last{ Data.Semigroups.getLast :: a }
2012-04-05 10:39:05 UTC <Rc43> Oh, suddenly.
2012-04-05 10:39:21 UTC <ClaudiusMaximus> instance Semigroup a => Monoid (Option a)
2012-04-05 10:40:41 UTC <ClaudiusMaximus> so i guess you want something like   value (Option (Just (Last 1)))
2012-04-05 10:43:29 UTC <Rc43> Which difference between Option and Maybe?
2012-04-05 10:43:50 UTC <ClaudiusMaximus> ghci :info should help
2012-04-05 10:44:43 UTC <ClaudiusMaximus> i think the idea is that option lifts a semigroup into a monoid via maybe
2012-04-05 10:45:20 UTC <ClaudiusMaximus> and i think a semigroup is like a monoid without mempty
2012-04-05 10:46:00 UTC <Rc43> Its true. I just can't understand, when I should use Option instead Maybe.
2012-04-05 10:46:40 UTC <ClaudiusMaximus> when you have a semigroup and need a monoid, afaict
2012-04-05 10:48:10 UTC <Rc43> Ah, think I got it. Just "bridge" not for manual using.
2012-04-05 10:50:40 UTC <Rc43> Now it compiles.
2012-04-05 11:14:19 UTC <Rc43> I forgot, can `diagrams` (with cairo-gtk backend) redraw only part of diagram?
2012-04-05 11:14:33 UTC <Rc43> Or use layers?
2012-04-05 21:51:25 UTC <fryguybob> ACTION is working on something with diagrams.
2012-04-05 21:57:41 UTC <luite> ACTION is working on something with haskell.
2012-04-05 22:07:43 UTC <byorgey> =D
2012-04-06 01:00:47 UTC <fryguybob> ACTION loves type driven programming.
2012-04-06 01:01:46 UTC <luite> hehe if i push my left earbud, I can hear that in my right one
2012-04-06 01:18:59 UTC <fryguybob> It compiles.  So I'm done right?
2012-04-06 01:34:20 UTC <fryguybob> progress: http://www.cs.rochester.edu/u/ryates/temp/test.pdf
2012-04-06 01:41:00 UTC <luite> hmm, interesting art
2012-04-06 02:12:47 UTC <fryguybob> luite: Now look at it.
2012-04-06 02:13:55 UTC <luite> cool!
2012-04-06 02:14:09 UTC <luite> I kind of like the old version better though :p
2012-04-06 02:23:08 UTC <fryguybob> Now it is more square.
2012-04-06 02:32:30 UTC <fryguybob> Now available: http://patch-tag.com/r/fryguybob/diagrams-osm/  and  http://patch-tag.com/r/fryguybob/diagrams-osm-postscript/
2012-04-06 02:33:55 UTC <fryguybob> I had to use the latest of the OSM with one slight change: https://github.com/fryguybob/geo-osm
2012-04-06 02:34:16 UTC <fryguybob> ACTION goes to bed.
2012-04-06 03:20:28 UTC <byorgey> fryguybob: cool!
2012-04-07 02:41:33 UTC <vyom> byorgey: how do i use a SomeColor data type with lc function
2012-04-07 02:42:28 UTC <vyom> is the only way converting to RGBA and back?
2012-04-07 02:51:06 UTC <vyom> never mind.. i was trying to avoid specifying an explicit dependency on the colour package because diagrams does not seem to export it.. but I might just have to do that
2012-04-07 02:53:11 UTC <tgeeky_> vyom: diagrams does depend on it, though
2012-04-07 02:53:51 UTC <vyom> yes.. but if I need to use the colour types.. i will have to import them explicitly in my cabal file
2012-04-07 02:54:39 UTC <vyom> i dont believe diagrams exports the colour types like Colour etc...
2012-04-07 02:54:53 UTC <vyom> only functions like black. white etc
2012-04-07 02:55:16 UTC <tgeeky_> vyom: maybe I don't know how it works
2012-04-07 02:55:44 UTC <tgeeky_> but I would have tought that if you depend on diagrams in your cabal file, and then import the types, then you can assume others will have it installed
2012-04-07 02:57:12 UTC <vyom> it will be installed, yes
2012-04-07 02:57:36 UTC <vyom> but cabal build complains i think
2012-04-07 02:57:56 UTC <vyom> because it is a hidden package or something..
2012-04-07 03:00:34 UTC <vyom> unless I explicitly specify the colour package as a dependency in my .cabal file.. cabal build will not allow me to compile against that package even if it is installed
2012-04-07 03:00:58 UTC <tgeeky_> *adds another thing that "cabal 2.0" should have fixed
2012-04-07 06:26:59 UTC <vyom> mgsloan: i was looking into making the turtle recognise things like line width and color..
2012-04-07 06:27:19 UTC <mgsloan> vyom: oh yeah?  I got distracted with other things for a bit..
2012-04-07 06:27:41 UTC <vyom> and for various reasons which I will put down in a mail or something, I ended up doing some major surgery :)
2012-04-07 06:27:58 UTC <vyom> https://github.com/deepakjois/hs-logo/commit/5890be78431451b798a13085203396113b527587
2012-04-07 06:28:21 UTC <vyom> for now I just pulled in the turtle into my repo
2012-04-07 06:28:23 UTC <mgsloan> writing a blog post about a way to avoid cabal dependency hell :) and provide re-factorings to rewrite your code to target newer versions
2012-04-07 06:28:57 UTC <mgsloan> Cool, that works!
2012-04-07 06:29:38 UTC <vyom> and then built a from-scratch pure implementation.. and adapted the diagrams-contrib turtle to work with the pure implementation
2012-04-07 06:30:09 UTC <vyom> i also wrote a few quickcheck tests.. which were convenient to write.. because the turtle internals are now pure
2012-04-07 06:30:46 UTC <mgsloan> cool!  So no more monad transformers?  You know the identity monad makes things parameterized on a monad pure?
2012-04-07 06:30:55 UTC <vyom> hmm.. i wanna read that blog post..
2012-04-07 06:32:16 UTC <vyom> mgsloan: I adapted the pure turtle to work with the existing State Monad infrastructure .. because i would have had to change a lot of hs-logo code otherwise
2012-04-07 06:32:31 UTC <vyom> saving that refactor for another day
2012-04-07 06:32:47 UTC <mgsloan> (I haven't actually done the refactorings stuff, but it'd be very cool - hoping someone else will make it after I suggest it, hah)
2012-04-07 06:33:05 UTC <mgsloan> ah, cool!
2012-04-07 06:33:46 UTC <vyom> but it is easy to get rid of the State monad and write a pure turtle, diagrams style https://github.com/deepakjois/hs-logo/commit/5890be78431451b798a13085203396113b527587#diff-3
2012-04-07 06:33:55 UTC <vyom> like the example above
2012-04-07 06:34:58 UTC <vyom> apart from easier testing.. it *may* also allows for easier optimisation in really long paths.. by forcing strict evalualtion
2012-04-07 06:35:30 UTC <vyom> anyway.. like I said I will probably put that down in a mail.. and send across..
2012-04-07 06:35:45 UTC <vyom> and then we can see if we want to fold it into diagrams-contrib
2012-04-07 06:36:23 UTC <vyom> open to any suggestions/feedback
2012-04-07 06:36:48 UTC <vyom> i just wrote it from scratch because i wanted to try quickcheck :)
2012-04-07 06:37:20 UTC <vyom> and get more hands on with Haskell testing infrastructure
2012-04-07 06:40:02 UTC <mgsloan> we should consult a more expert Haskeller than myself for such design issues
2012-04-07 06:40:18 UTC <mgsloan> I really like having the pure one, and the code in that module looks awesome
2012-04-07 06:40:32 UTC <mgsloan> buut, you could achieve the same by using "TurtleT Identity"
2012-04-07 06:40:42 UTC <mgsloan> well I guess that's just Turtle
2012-04-07 06:43:30 UTC <vyom> mgsloan: hmm... ya... it is still tied to the state monad
2012-04-07 06:44:14 UTC <vyom> we could convert a pure turtle to a monad by using Identity i guess
2012-04-07 06:44:17 UTC <mgsloan> things in the state monad should still be quickcheck testable
2012-04-07 06:44:29 UTC <vyom> mgsloan: yes.. they should be
2012-04-07 06:45:14 UTC <vyom> i just thought it was a little bit inconvenient..
2012-04-07 06:45:36 UTC <mgsloan> but, I'm not sure if it's better design to do a state monad wrapper over a pure implementation, or provide Identity.  I agree that it's a bit inconvenient - it'd be nice if Turtle was convenient
2012-04-07 06:46:07 UTC <mgsloan> (for novices particularly)
2012-04-07 06:46:25 UTC <mgsloan> as that's half of the entire point of a turtles library (I intend to actually use it in code, though)
2012-04-07 06:47:31 UTC <vyom> so.. the state monad
2012-04-07 06:47:37 UTC <vyom> sorry..
2012-04-07 06:47:52 UTC <vyom> the "state monad wrapper" was just to aid refactoring..
2012-04-07 06:48:21 UTC <vyom> in hs-logo at least i intend to get rid of it..
2012-04-07 06:48:44 UTC <vyom> the think that i liked about the state monad was that it gave the turtle an imperative feel
2012-04-07 06:48:48 UTC <vyom> which is what it is
2012-04-07 06:48:57 UTC <vyom> a turtle has state
2012-04-07 06:49:22 UTC <vyom> and i dont like using the "#" to thread movements together.. like i am doing in the pure version
2012-04-07 06:49:42 UTC <vyom> i want that to happen inside of a do block
2012-04-07 06:53:45 UTC <mgsloan> No worries!  I don't think that anyone uses this API yet, so changing it really doesn't matter.
2012-04-07 06:53:58 UTC <mgsloan> I really do find the turtle form more intuitive than expressing the same thing without angle-state
2012-04-07 06:54:31 UTC <vyom> "angle=state"?
2012-04-07 06:54:42 UTC <vyom> what you mean?
2012-04-07 06:55:13 UTC <mgsloan> well, Trails already use Segments that are relative offsets
2012-04-07 06:55:28 UTC <mgsloan> so, that's in some sense positional state - at least you aren't expressing absolute coordinates
2012-04-07 06:55:44 UTC <mgsloan> turtle adds pen state and positions
2012-04-07 06:56:14 UTC <vyom> ah ok
2012-04-07 06:56:45 UTC <mgsloan> the new version looks really good!  Glad to see style attributes in there
2012-04-07 06:57:30 UTC <vyom> thanks.. i was wondering what you would think of it :).. because i went on my own tangent..
2012-04-07 06:57:55 UTC <vyom> i had my own agenda of using quickcheck :)
2012-04-07 06:59:38 UTC <vyom> anyway.. I have been coding for 5 hours straight.. need some dinner now
2012-04-07 07:00:07 UTC <vyom> let me think about this a bit and try out a few things..
2012-04-07 07:00:24 UTC <vyom> later
2012-04-07 07:00:34 UTC <mgsloan> haha, yeah, I know the feeling, quite a shifted cycle!
2012-04-07 07:00:37 UTC <mgsloan> later!
2012-04-07 19:34:03 UTC <byorgey> fryguybob: you around?
2012-04-07 19:34:19 UTC <fryguybob> yeah
2012-04-07 19:34:42 UTC <byorgey> fryguybob: wondering if you have an example .tex file that works with LaTeXGrapher
2012-04-07 19:34:45 UTC <fryguybob> byorgey: I've got an aweful cold though, so I may not have loopy any reason skills
2012-04-07 19:34:55 UTC <fryguybob> That I can do :D
2012-04-07 19:34:57 UTC <byorgey> ok, no reason skills needed =)
2012-04-07 19:35:21 UTC <byorgey> I'm giving a talk about diagrams and trying to hack up something based on LaTeXgrapher.sty to let me build diagrams embedded in my slide source
2012-04-07 19:35:21 UTC <fryguybob> Wow my sentence didn't even make sense.
2012-04-07 19:35:36 UTC <byorgey> nope, I noticed but wasn't going to say anything ;)
2012-04-07 19:36:12 UTC <fryguybob> test.tex here https://patch-tag.com/r/fryguybob/LaTeXGrapher/snapshot/current/content/pretty/tex
2012-04-07 19:36:24 UTC <byorgey> ah, missed that
2012-04-07 19:36:26 UTC <byorgey> thanks!
2012-04-07 19:36:28 UTC <fryguybob> np
2012-04-07 19:42:20 UTC <byorgey> fryguybob: \define@key{dtt}{height}[]{%
2012-04-07 19:42:34 UTC <byorgey>     \def\dtt@height{-w #1}
2012-04-07 19:42:41 UTC <byorgey> should that be -h ?
2012-04-07 19:43:43 UTC <fryguybob> Humm, that might be beyond me right now.
2012-04-07 19:45:12 UTC <byorgey> ok, no worries, I'll figure it out =)
2012-04-07 19:45:28 UTC <byorgey> hope you feel better soon
2012-04-07 19:45:47 UTC <fryguybob> Looking at it I would say yes that should be -h
2012-04-07 19:46:08 UTC <fryguybob> Thanks.
2012-04-07 19:53:16 UTC <byorgey> woot! It works!!
2012-04-07 19:53:42 UTC <byorgey> there is now a BLUE CIRCLE in my slides which I conjured into being merely by stating that it should exist
2012-04-07 19:55:59 UTC <byorgey> oh, whoops, not quite, it was using the PDF I made manually while testing it =P
2012-04-07 19:58:52 UTC <byorgey> fryguybob: hmm, is there some option I need to pass to latex to enable ShellEscape?
2012-04-07 20:01:34 UTC <fryguybob> byorgey: -e I think?
2012-04-07 20:02:46 UTC <byorgey> ah, for pdflatex at least I need --enable-write18
2012-04-07 20:03:01 UTC <byorgey> works now!
2012-04-07 20:03:21 UTC <fryguybob> ah, ok
2012-04-07 20:03:25 UTC <fryguybob> Woohoo!
2012-04-07 20:03:34 UTC <byorgey> =D
2012-04-07 20:03:47 UTC <fryguybob> Now combine it with OSM and get free maps in your tex
2012-04-07 20:03:56 UTC <byorgey> oooh, shiny
2012-04-07 20:04:39 UTC <byorgey> yeah, I might use your OSM thing as a fun example of why you really want an *embedded* DSL for creating graphics
2012-04-07 20:05:10 UTC <byorgey> once I'm done with this talk I'll think about how to turn all this into a proper set of tools for embedding diagrams in LaTeX
2012-04-07 20:05:26 UTC <fryguybob> Yeah, I'm going to add shortest path too it as soon as I can think and have time.
2012-04-07 20:05:28 UTC <byorgey> right now I've only hacked it just far enough so it suits my purpose for the moment
2012-04-07 20:06:05 UTC <byorgey> one major thing it needs is the ability to avoid re-generating diagrams whose source hasn't changed
2012-04-07 20:06:11 UTC <byorgey> but I think we can build that into diagrams-builder
2012-04-07 20:06:34 UTC <fryguybob> I wonder if Shake could help with that.
2012-04-07 20:07:02 UTC <byorgey> hmm, maybe, but we don't want to require people to use Shake just to get that feature
2012-04-07 20:07:55 UTC <fryguybob> Make diagrams-builder depend on shake?
2012-04-07 20:08:30 UTC <byorgey> hmm, maybe
2012-04-07 20:08:40 UTC <byorgey> seems heavyweight
2012-04-07 20:09:22 UTC <byorgey> fryguybob: hmm, aren't you having a baby soon?  I forget the exact timing.
2012-04-07 20:09:44 UTC <fryguybob> Yeah, due date is the 19th, but it could happen at any time.
2012-04-07 20:10:20 UTC <fryguybob> Hopefully I'll get better beforehand.
2012-04-07 20:10:56 UTC <byorgey> yeah, that would be ideal...
2012-04-07 20:11:17 UTC <byorgey> well, exciting, let us know =)
2012-04-07 20:11:23 UTC <fryguybob> Thanks, we well.
2012-04-07 20:11:30 UTC <fryguybob> (will)
2012-04-07 20:11:58 UTC <fryguybob> Hope your talk goes well!
2012-04-07 20:16:59 UTC <byorgey> thanks!
2012-04-07 20:25:50 UTC <mgsloan> coooool!
2012-04-07 20:27:39 UTC <byorgey> mgsloan: what?
2012-04-07 20:28:29 UTC <mgsloan> the idea of doing automatic diagrams -> latex
2012-04-07 20:28:41 UTC <mgsloan> I think ActiveHs might do that too, come to think of it
2012-04-07 20:28:46 UTC <byorgey> ah, yeah
2012-04-07 20:28:55 UTC <byorgey> it's pretty sweet =)
2012-04-07 20:29:15 UTC <mgsloan> ah, nah, ActiveHs is html only
2012-04-08 05:00:05 UTC <vyom> rendered this using hs-logo with the turtle color support https://dl-web.dropbox.com/get/Public/logo/sun.svg?w=4c66d22c
2012-04-08 05:00:44 UTC <vyom> code: "repeat 2000 [pu home seth random 361 setpencolor random 15 fd 40 pd fd random 200]"
2012-04-08 05:12:15 UTC <vyom> oops.. bad link http://dl.dropbox.com/u/953/logo/sun.svg
2012-04-08 15:11:36 UTC <ClaudiusMaximus> my latest diagrammy thing - sadly not using 'diagrams' but generating xhtml with dirty String concatenation... http://claudiusmaximus.goto10.org/g/mandelbrot/farey-search-internal-angles-external-angles-example-1.xhtml (visualizing an algorithm related to the ideas in <http://math.bu.edu/people/bob/papers/farey.ps>)
2012-04-08 16:14:55 UTC <vyom> Is it worth making  Diagrams export the Colour type and the Data.Colour.Names module.. cabal refuses to build unless depend on the colours package.. because it is hidden
2012-04-08 18:16:08 UTC <byorgey> vyom: yeah, we probably should
2012-04-08 18:16:25 UTC <byorgey> vyom: can you add a ticket for it on the bug tracker?  Or just send me a patch yourself, either way
2012-04-08 18:16:53 UTC <byorgey> I mean, there shouldn't be anything wrong with depending on the colours package yourself, but independently I think reexporting it would be nice
2012-04-08 18:16:54 UTC <vyom> i can send a patch.. so I just export in Diagrams.Prelude?
2012-04-08 18:17:18 UTC <byorgey> yeah, you'll notice that in Diagrams.Prelude we already re-export some modules
2012-04-08 18:17:39 UTC <byorgey> vyom: just do a quick check to make sure it doesn't export anything that conflicts with other stuff already exported by Diagrams.Prelude
2012-04-08 18:18:08 UTC <byorgey> if it does we'll have to explicitly hide some things or only export a selection of stuff
2012-04-08 18:18:21 UTC <vyom> ok cool.. will send a patch sometime today after making that change and doing a build
2012-04-08 18:20:21 UTC <vyom> i wrote a pure turtle implementation because i wanted to make it easily testable.. https://github.com/deepakjois/hs-logo/blob/master/src/Diagrams/TwoD/Path/Turtle/Internal.hs
2012-04-08 18:21:06 UTC <vyom> and then because i did not want to refactor my hs-logo code just yet.. i just adapted the current turtle to delegate to it
2012-04-08 18:21:07 UTC <byorgey> yeah, I saw that
2012-04-08 18:21:27 UTC <byorgey> I think I prefer the monadic interface, personally
2012-04-08 18:22:03 UTC <vyom> i do too.. which is why I wrote the code in an internal module..
2012-04-08 18:22:16 UTC <byorgey> heh, ok =)
2012-04-08 18:22:26 UTC <byorgey> I don't see why the monadic version wouldn't be easily testable though.
2012-04-08 18:22:43 UTC <byorgey> I've got to run now but I can take a look at it later
2012-04-08 18:22:49 UTC <vyom> maybe that's just because i am not sure of the right idioms
2012-04-08 18:22:54 UTC <vyom> sure
2012-04-08 18:22:55 UTC <vyom> later
2012-04-08 18:31:35 UTC <vyom> byorgey: this is for when you are back... basically I wanted to write functions that operated on a pure turtle data type because i thought punctuating each of my code with "modify" (from the State monad) seemed kinda ugly
2012-04-08 18:31:57 UTC <vyom> however.. i do want to expose a monadic *interface*..
2012-04-08 18:32:34 UTC <vyom> the way i do that is that the original Turtle class now delegates to the pure functions..
2012-04-08 18:33:04 UTC <vyom> i can now test the pure functions using quickcheck and assert correctness of turtle behavior
2012-04-08 18:33:53 UTC <vyom> howeever now the problem is that we have one extra layer of indirection
2012-04-08 18:34:55 UTC <vyom> i also thought (based on no hard facts, just intuition) that having pure functions might make it easier to specify things like strict evaluation and INLINE pragmas
2012-04-08 18:35:14 UTC <vyom> which will aid in performance optimisations..
2012-04-08 18:35:31 UTC <vyom> but then you know what they say about premature optimisation ;)
2012-04-08 20:43:17 UTC <Rc43> Hi, guys.
2012-04-08 20:43:29 UTC <Rc43> http://hackage.haskell.org/packages/archive/diagrams-contrib/0.1.1.0/doc/html/Diagrams-TwoD-Layout-Tree.html
2012-04-08 20:43:39 UTC <Rc43> Why it works with Diagram only?
2012-04-08 20:43:46 UTC <Rc43> I mean `Any` monoid.
2012-04-08 21:13:10 UTC <vyom> so I just made an hs-logo release with colors! check out http://bit.ly/Hr3961 http://bit.ly/Hr3lCi http://bit.ly/Hr3pSz and http://bit.ly/Htxe10
2012-04-08 22:50:14 UTC <byorgey> vyom: sweet!
2012-04-08 22:52:18 UTC <byorgey> vyom: re: Turtle stuff, my intuition says that it should be possible to test the monadic-interface code with QuickCheck almost as easily as the pure code.
2012-04-08 22:52:25 UTC <byorgey> vyom: but I'll have to look at it more carefully.
2012-04-08 22:52:34 UTC <byorgey> vyom: I don't have any intuition about the optimization stuff.
2012-04-08 22:52:54 UTC <byorgey> so you may be right there, I don't know.
2012-04-08 22:53:19 UTC <byorgey> But intuitively the state monad is doing exactly what your functional version is doing -- it just happens to be wrapped up in a newtype.
2012-04-08 23:11:26 UTC <vyom> yes.. the monad is doing the same thing..
2012-04-08 23:11:30 UTC <vyom> let me a bit more specific
2012-04-08 23:15:08 UTC <vyom> https://github.com/deepakjois/hs-logo/blob/master/src/Diagrams/TwoD/Path/Turtle/Internal.hs#L163 this penDown method
2012-04-08 23:15:41 UTC <vyom> if this were in a State monad.. i would have to first query the isPenDown state using gets
2012-04-08 23:16:12 UTC <vyom> and then use modify to make the changes
2012-04-08 23:16:48 UTC <vyom> i will probably have to try replicating this in a state monad and see how the code looks like..
2012-04-08 23:17:05 UTC <vyom> but it just seemed a little inconvenient to do it everytime
2012-04-08 23:17:23 UTC <vyom> i need to find an unobtrusive way to do it
2012-04-08 23:18:04 UTC <vyom> like i said.. i like the monadic interface, but maybe not so much the implementation ;)
2012-04-09 00:03:25 UTC <byorgey> vyom: fair enough.  you're right, it looks nice this way.  I certainly don't have a problem with having a monadic interface on top of a non-monadic implementation.
2012-04-09 00:31:01 UTC <vyom> byorgey: cool.. now if I can convince mgsloan, then i can clean up the implementation i have and contribute a patch to diagrams-contrib.. along with tests and everything :)
2012-04-09 00:31:36 UTC <vyom> i removed a couple of methods because i wasnt using them in hs-logo.. but they can be easily put back...
2012-04-09 00:31:55 UTC <mgsloan> ACTION is convinced :)
2012-04-09 00:32:57 UTC <vyom> i was also doing some research into strict evaluation inside a state monad and related stuff.. investigating this bug https://github.com/deepakjois/hs-logo/issues/29
2012-04-09 00:33:19 UTC <vyom> ran into this blog posts which might have a solution http://blog.johantibell.com/2012/02/forcing-values-returned-from-monadic.html
2012-04-09 00:37:18 UTC <vyom> byorgey: you commented on that bug and said you did some profiling.. what kind of profiling was that... hpc?
2012-04-09 00:37:36 UTC <vyom> mgsloan: cool!
2012-04-09 00:42:06 UTC <vyom> and this http://stackoverflow.com/questions/7998458/why-does-this-simple-use-of-the-state-monad-cause-a-stack-overflow
2012-04-09 00:42:22 UTC <byorgey> vyom: not hpc, just (1) compile with -rtsopts (cabal install --ghc-options="-rtsopts") (2) run with +RTS -hT -RTS  (3) visualize output with hp2pretty.
2012-04-09 00:43:02 UTC <byorgey> vyom: the results looked characteristic of a large thunk being built up.  So I looked at the code and realized where such a thunk would be built.
2012-04-09 00:44:42 UTC <vyom> cool.. added more details to the bug
2012-04-09 00:45:22 UTC <vyom> havent done any profiling in Haskell.. so I am thinking  I wanna dive into that to get some hands on experience with it.. :)
2012-04-09 00:45:47 UTC <vyom> this is now the most comprehensive haskell project i worked on :)
2012-04-09 00:46:03 UTC <vyom> i even get to learn a bit of linear algebra :)
2012-04-09 00:47:13 UTC <vyom> i spent a bit of time re-reading the docs which resulted in this neat refactoring :).. https://github.com/deepakjois/hs-logo/commit/5b1c8a86aa0bcc4548d20ca7c87d6f79531386aa
2012-04-09 00:47:23 UTC <vyom> minor.. but still pretty satisfying ;)
2012-04-09 00:47:38 UTC <byorgey> excellent =)
2012-04-09 00:48:43 UTC <vyom> i always wanted to get back into some math i had studied back in college.. and the choice was between statistics and linear algebra..
2012-04-09 00:48:55 UTC <vyom> it just so happens that I stumbled upon diagrams..
2012-04-09 00:49:10 UTC <vyom> so looks like now my choice is made for me.. :)
2012-04-09 00:49:15 UTC <byorgey> vyom: I'm glad you're having so much fun.  and I'm really glad to have you working on diagrams =)
2012-04-09 00:50:17 UTC <vyom> :).. and thank you for building diagrams..
2012-04-09 00:53:13 UTC <byorgey> it's been one of the most fun and satisfying projects I've ever worked on.  I've been working on it for... four years now?
2012-04-09 00:53:21 UTC <byorgey> wow, that's hard to believe
2012-04-09 00:53:45 UTC <byorgey> though that includes the initial version which I ended up completely throwing away.
2012-04-09 01:03:19 UTC <tgeeky> byorgey: isn't it weird to look back at something you feel you started yesterday, and to realize it's yearz? :o
2012-04-09 01:03:23 UTC <tgeeky> s/z//
2012-04-09 01:03:45 UTC <byorgey> yep, sure is
2012-04-09 01:06:30 UTC <vyom> well...I really hope that it continues much longer than that .. because I am just getting started!
2012-04-09 01:06:50 UTC <luite> I still havent taken the time to properly play with diagrams :(
2012-04-09 01:07:08 UTC <tgeeky> and god willing, you won't
2012-04-09 01:07:15 UTC <tgeeky> until we get to play with wolfgang :o
2012-04-09 01:07:34 UTC <vyom> most of diagrams-core is still kinda opaque to me... either due to the math or due to the advanced haskell stuff :)
2012-04-09 01:08:09 UTC <luite> I got a bit stuck with that a few days ago, some annoying function i had to write, couldn't concentrate. so i'm working on some yesod stuff now
2012-04-09 01:08:46 UTC <byorgey> vyom: cleaning up and documenting diagrams-core is definitely on my long-term list of projects
2012-04-09 01:09:08 UTC <vyom> it seems to have a lot of haddock comments already :)
2012-04-09 01:09:41 UTC <vyom> anything more is either an intermediate haskell book.. or a linear algebra textbook ;)
2012-04-09 01:09:52 UTC <vyom> or a tutorial.. if not a book
2012-04-09 01:10:17 UTC <tgeeky> my linear algebra told me that you can never learn too much linear algebra
2012-04-09 01:16:44 UTC <byorgey> vyom: yeah, I mean like writing a section in the user manual about it, something that will give more of an overview to help explain the organization etc.
2012-04-09 01:17:11 UTC <byorgey> I mean, the user manual may well turn into something book-length =)
2012-04-09 01:17:37 UTC <tgeeky> well, it is one of the more difficult things to do in any programming language
2012-04-09 01:18:07 UTC <tgeeky> declarative, compisitional drawing
2012-04-09 01:21:02 UTC <tgeeky> come to think of it...
2012-04-09 01:21:15 UTC <tgeeky> byorgey: surely you did some prior art research before you started?
2012-04-09 01:26:34 UTC <tgeeky> or was there simply none?
2012-04-09 01:35:26 UTC <byorgey> tgeeky: there are various related things.  Though I haven't done as much prior art research as I probably should.
2012-04-09 01:36:11 UTC <byorgey> there are quite a few languages for drawing which are either not embedded, not declarative, or both
2012-04-09 01:36:41 UTC <tgeeky> well embedded seems like it could be a plus or a minus, depending on the perspective and the language
2012-04-09 01:36:53 UTC <tgeeky> but declarative I think *we'll* agree is better than any alternative
2012-04-09 01:37:46 UTC <byorgey> I think embedded is solidly a plus.  (Though I am biased of course.)
2012-04-09 01:38:13 UTC <byorgey> You get (1) a well-designed language and (2) lots of other tools + libraries  for free.
2012-04-09 01:38:16 UTC <tgeeky> byorgey: embedded = EDSL, in this case?
2012-04-09 01:38:20 UTC <byorgey> yeah.
2012-04-09 01:38:26 UTC <tgeeky> byorgey: yeah, I guess so. That's a reversal of the embedding :O
2012-04-09 01:38:33 UTC <tgeeky> i never think about it like that.
2012-04-09 01:38:50 UTC <byorgey> You can't really do all that much in e.g. Metapost or Asymptote, because you'd have to write it all from scratch yourself.
2012-04-09 01:39:04 UTC <byorgey> and they're pretty horrible for doing general-purpose computation.
2012-04-09 01:39:17 UTC <byorgey> even though they are in principle Turing-complete.
2012-04-09 01:39:53 UTC <byorgey> Postscript is at least a solidly designed language, but it was never really intended for *humans* to write code directly in it.
2012-04-09 01:40:02 UTC <tgeeky> yeah for sure
2012-04-09 01:40:13 UTC <tgeeky> that's omnomnom for printers
2012-04-09 01:40:19 UTC <byorgey> indeed.
2012-04-09 13:06:47 UTC <luite> mgsloan: the force is strong with your feature requests
2012-04-09 13:07:43 UTC <mgsloan> hehehe :D
2012-04-09 13:08:04 UTC <byorgey> hehe
2012-04-09 13:08:51 UTC <mgsloan> sorry for the lack of much description, but I figured it was reasonably self explanatory
2012-04-09 13:10:14 UTC <byorgey> mgsloan: well, the ticket itself is quite self explanatory, but I'd like to know more about WHY we want to make this change, and what the implications will be =)
2012-04-09 13:10:37 UTC <byorgey> just making that single change by itself doesn't seem like it would accomplish much.
2012-04-09 13:12:17 UTC <mgsloan> true!  Good point.  One reason is the punniness.  The other reason is that it does indeed crop up here and there, and I suspect it would be nice for the AD stuff
2012-04-09 13:12:31 UTC <byorgey> the punniness?
2012-04-09 13:12:54 UTC <mgsloan> the acronym pun that is R2 D2
2012-04-09 13:13:05 UTC <byorgey> oh, hahahaha
2012-04-09 13:13:32 UTC <mgsloan> however, I mostly filed it because I remembered that I hadn't done so, and had intended for at some point
2012-04-09 13:13:50 UTC <byorgey> fair enough, that's a very good reason =)
2012-04-09 13:14:45 UTC <mgsloan> last monday / tuesday I went to Lang.Next.  It was great!  Saw Andy Moran give a talk about galois's use of Portland, and HalVM.
2012-04-09 13:15:33 UTC <byorgey> cool!
2012-04-09 13:15:40 UTC <mgsloan> Also met Luke Palmer!  We got into some conversations that brought up some things I'd been thinking about regarding Haskell versioning conventions for modules / packages.
2012-04-09 13:15:40 UTC <fryguybob> mgsloan: I watched that.  It was good until the question.
2012-04-09 13:16:37 UTC <byorgey> mgsloan: oh, sweet!
2012-04-09 13:16:41 UTC <mgsloan> so, unfortunately I've been deviated off type explanations / AD layout til this blog post is done being written
2012-04-09 13:17:17 UTC <mgsloan> fryguybob: I got the idea that the question guy is a notorious, if knowledgeable, troll within Microsoft
2012-04-09 13:17:28 UTC <fryguybob> mgsloan: Sounded like it.
2012-04-09 13:17:53 UTC <mgsloan> that was not the only dubious and vitriolic question he posed
2012-04-09 13:17:53 UTC <fryguybob> I was sad that other questions were not allowed so that he could get a friendlier one.
2012-04-09 13:59:42 UTC <alpounet> wow, indeed that question was pretty dumb
2012-04-09 14:07:50 UTC <luite> is there a video?
2012-04-09 15:07:01 UTC <fryguybob> luite: http://channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2012/A-Means-to-Many-Ends-10-Years-of-Haskell-at-Galois
2012-04-09 15:07:11 UTC <fryguybob> non-silverlight versions are linked on that page.
2012-04-09 17:32:17 UTC <alpounet> tgeeky, i hate it when Susskind says "But... it's more general than that"
2012-04-09 17:32:26 UTC <alpounet> you're then just forced to watch yet another lecture
2012-04-09 17:32:38 UTC <alpounet> in the hope that you'll see that generalization there
2012-04-09 17:40:55 UTC <tgeeky> alpounet: hehe. yes :)
2012-04-09 17:41:13 UTC <tgeeky> alpounet: which lecture / generalization?
2012-04-09 17:42:14 UTC <alpounet> i'm still in the classical mechanics lecture. despite having studied it for quite a few years, i decided to start from the beginning so that i know his vocabulary/point of view
2012-04-09 17:42:23 UTC <alpounet> and it's about energy conservation
2012-04-09 17:42:37 UTC <alpounet> being more general than in Newton mechanics, in QM, in relativity
2012-04-09 17:42:49 UTC <tgeeky> alpounet: yeah. I see.
2012-04-09 17:42:51 UTC <alpounet> which obviously won't be studied before... quite a long time :p
2012-04-09 17:43:12 UTC <tgeeky> Yeah, in all cases, energy conservation is a symmetry produced by some kind of time invariance
2012-04-09 17:43:17 UTC <tgeeky> or time translation symmetry
2012-04-09 17:44:00 UTC <alpounet> and i guess there's a group involved there
2012-04-09 18:04:32 UTC <luite> fryguybob: tnx
2012-04-09 18:05:45 UTC <luite> alpounet: yeah great lectures, I'd buy a 64GB iPad just to be able to carry the whole collection with me at all times :)
2012-04-09 18:06:36 UTC <alpounet> you watched them all?
2012-04-09 18:07:24 UTC <luite> hehe no not yet
2012-04-09 18:07:29 UTC <luite> the first 3 series or so
2012-04-09 18:07:38 UTC <luite> but I still want to watch the rest, just not enough time lately
2012-04-09 18:09:16 UTC <alpounet> yeah
2012-04-09 18:10:03 UTC <alpounet> i'll try to take the time to watch one video a week
2012-04-09 22:15:56 UTC <tgeeky> hmm
2012-04-09 22:16:08 UTC <tgeeky> GHC head type level Nats (and Strings!?!)
2012-04-09 22:16:15 UTC <tgeeky> opine for me!
2012-04-10 00:26:43 UTC <byorgey> tgeeky: this is Totally Sweet
2012-04-10 01:00:09 UTC <tgeeky> byorgey: opinion noted and logged, 21:00
2012-04-10 01:02:05 UTC <tgeeky> i'm not sure if I understand how these are more fundamental or better than existing type-level nats
2012-04-10 01:24:16 UTC <tgeeky> though type-level strings "came out of nowhere"
2012-04-10 03:20:00 UTC <vyom> byorgey: here is a patch for Data.Colours re-export from diagrams.. http://dl.dropbox.com/u/953/logo/data-colors-export.patch
2012-04-10 03:21:13 UTC <vyom> assuming that is okay.. is it something worth making a minor release for?
2012-04-10 03:21:25 UTC <vyom> i mean a minor point release
2012-04-10 13:25:21 UTC <byorgey> tgeeky: they are better than existing type-level nats because it includes a domain-specific solver for constraints involving nats, addition, and inequality
2012-04-10 13:26:04 UTC <byorgey> e.g. if you write   foo :: (n < 5) => Vec n -> ...    it will try to automatically solve that constraint every time you call foo
2012-04-10 13:26:12 UTC <byorgey> (that's probably not the right syntax but you get the idea)
2012-04-10 13:49:33 UTC <byorgey> vyom: thanks, pushed
2012-04-10 13:50:00 UTC <byorgey> vyom: sure, it could be worth doing a minor point release, but I probably won't really have time to think about that until next week
2012-04-10 14:24:20 UTC <vyom> byorgey: thanks.. sure.. whenever you find time.. i am in no hurry whatsoever...
2012-04-11 00:32:34 UTC <luite> bah I'm getting really pissed now... haven't been able to do anything haskell for 3 days now because of ghc problems
2012-04-11 00:53:28 UTC <mgsloan> :/
2012-04-11 01:25:00 UTC <mgsloan> http://www.mgsloan.com/wordpress/?p=219 password: foo
2012-04-11 01:25:09 UTC <mgsloan> err password: pass
2012-04-11 01:25:41 UTC <mgsloan> don't pay attention to the "Adopt the Orphans!" and "Down with class constraints!" sections yet - they're the most WIP
2012-04-11 01:28:14 UTC <luite> ew wordpress ;p
2012-04-11 01:30:08 UTC <mgsloan> yeaaah, I used to use lightweight blog systems written in neat languages
2012-04-11 01:30:12 UTC <mgsloan> but then I never wrote blog posts...
2012-04-11 01:32:48 UTC <luite> ok apparently I can't compile ghc 7.4.1 with haddock because I get a divsion by zero error :(
2012-04-11 01:33:00 UTC <mgsloan> whaaa
2012-04-11 01:33:23 UTC <luite> it's fixed in the snapshot versions
2012-04-11 01:33:56 UTC <luite> anyway, 10th ghc recompile today or so
2012-04-11 01:35:29 UTC <luite> it's not password protected btw
2012-04-11 01:35:42 UTC <mgsloan> no password? really? argh!
2012-04-11 01:35:53 UTC <mgsloan> it's totally half done currently
2012-04-11 01:36:29 UTC <luite> hm, but I have a feeling that this solution is far too complex
2012-04-11 01:36:58 UTC <mgsloan> perhaps, but it does a lot more than solve cabal dependency problems
2012-04-11 01:37:31 UTC <luite> but do people want to have those problems solved? :p
2012-04-11 01:37:34 UTC <mgsloan> A) frees library designers to change their API at will
2012-04-11 01:37:34 UTC <mgsloan> B) gives a way of expressing refactorings to be applied to client code
2012-04-11 01:37:58 UTC <mgsloan> I think these are problems that people don't realize they have
2012-04-11 01:38:49 UTC <mgsloan> Template haskell can make these delta modules simpler, too
2012-04-11 01:41:25 UTC <mgsloan> C) managing the delta modules can be automated
2012-04-11 01:42:16 UTC <mgsloan> the reason it seems too complicated is that it seems foreign - it's deviating from the standard conception of "what goes in a library"
2012-04-11 01:50:16 UTC <luite> module A (Thing, Thing) where  -- should one be mkThing?
2012-04-11 01:50:33 UTC <mgsloan> yup. Thanks!
2012-04-11 01:51:00 UTC <mgsloan> also needs to export ThingADT
2012-04-11 01:55:21 UTC <mgsloan> the ideas for the sections I haven't written are:
2012-04-11 01:55:21 UTC <mgsloan>  1) Orphans should be solved by including an "adoption" file in packages.  It specifies which packages have the cannonical right to create a particular orphan instance.
2012-04-11 01:55:21 UTC <mgsloan>  2)
2012-04-11 01:56:38 UTC <mgsloan> There shouldn't be superclass constraints.  These are mostly used for default definitions.  Now that we have constraint synonyms, we can wrap up a bunch of classes under one name - something that superclass constraints traditionally solved.
2012-04-11 01:57:53 UTC <luite> 1 sounds unmanageable
2012-04-11 01:57:54 UTC <mgsloan> 3) Classes should not have default definitions.  Instead we write derivers that implement all of or portions of a class.  Initially this would be done in TH
2012-04-11 01:58:13 UTC <mgsloan> the thing with 1 is that it's purely a social / documentation thing
2012-04-11 01:58:46 UTC <mgsloan> it'd need to be hooked in to GHC's warnings, though
2012-04-11 01:59:53 UTC <luite> wait where would the adoption file live, the package that defines the class, or that defines the data type?
2012-04-11 01:59:55 UTC <mgsloan> the important thing is that in order to express that there's a cannonical instance, we don't actually need to be able to import the class(s) involved, just store the head of the instance declaration
2012-04-11 02:00:11 UTC <mgsloan> luite: Either :)
2012-04-11 02:00:44 UTC <mgsloan> the user would then annotate their orphan with a pragma indicating that it's been adopted
2012-04-11 02:01:24 UTC <mgsloan> which then *could* be checked / would yield glaring warnings when untrue
2012-04-11 02:03:27 UTC <luite> @#$@#%!
2012-04-11 02:03:46 UTC <mgsloan> ?
2012-04-11 02:03:47 UTC <luite> ghc 7.4.1.lateststable also fails with division by zero
2012-04-11 02:04:48 UTC <mgsloan> What a strange error to fail on
2012-04-11 02:04:55 UTC <mgsloan> maybe it's from a modulus
2012-04-11 02:05:05 UTC <luite> it's an known error
2012-04-11 02:37:23 UTC <luite> steps to use haskell on a mac: 1) format hard drive, 2) install linux, 3) install haskel platform
2012-04-11 02:53:44 UTC <tgeeky> ok mgs, I like the sentiment here
2012-04-11 02:53:51 UTC <tgeeky> oh he's not here
2012-04-11 03:45:24 UTC <TSC> Hi everyone!
2012-04-11 03:46:04 UTC <TSC> I've got diagrams-tikz to sort of work a bit with diagrams-0.5; I'll tidy it up a bit and publish it somewhere
2012-04-11 03:46:54 UTC <luite> verycool :)
2012-04-11 03:51:59 UTC <TSC> Is there anywhere a big pool of examples I can use for testing?
2012-04-11 04:06:04 UTC <luite> diagrams-cairo has a few, and the diagrams homepage also has some
2012-04-11 04:06:16 UTC <luite> dunno if there's an official collection :)
2012-04-11 04:09:46 UTC <TSC> Ok, thanks (:
2012-04-11 04:51:49 UTC <vyom> TSC: there are some examples that I used to test the SVG backend https://github.com/deepakjois/diagrams-svg/tree/master/examples
2012-04-11 04:52:40 UTC <vyom> they were derived from some other pre-existing diagrams examples too..
2012-04-11 04:54:43 UTC <TSC> Thanks!
2012-04-11 11:58:56 UTC <byorgey> TSC: cool!  Yeah, take a look at the gallery on the website
2012-04-11 11:59:13 UTC <byorgey> TSC: you can find it in source form in the diagrams-doc repo under web/gallery
2012-04-11 21:56:37 UTC <byorgey> fryguybob: I downloaded an .osm file from osm.org and it fails to parse, giving me some error about xpCheckEmptyAttributes: unprocessed XML attribute(s) detected
2012-04-11 21:56:43 UTC <byorgey> fryguybob: have you ever encountered that?
2012-04-11 22:19:10 UTC <fryguybob> byorgey: Yeah, use the latest osm parser from here: https://github.com/tonymorris/geo-osm
2012-04-11 22:20:43 UTC <fryguybob> bbl
2012-04-11 22:22:55 UTC <luite> does anyone here have a recent ghc, newer than 7.4.1, installed?
2012-04-11 22:23:59 UTC <tgeeky_> nope
2012-04-11 22:24:05 UTC <tgeeky_> 7.4.1 is my latest everywhere
2012-04-11 22:24:08 UTC <tgeeky_> still dividing by zero?
2012-04-11 22:43:37 UTC <luite> trying to minimize the test case
2012-04-11 22:43:44 UTC <luite> it gets stuck in an infinite loop
2012-04-11 22:44:25 UTC <luite> breaking with gdb shows that it's doing some gcd calculation
2012-04-11 22:44:44 UTC <luite> probably because it's building Rationals
2012-04-11 23:12:11 UTC <luite> tgeeky_: http://hackage.haskell.org/trac/ghc/ticket/5999
2012-04-11 23:12:27 UTC <luite> missed the 6000 mark by 1 :(
2012-04-11 23:25:04 UTC <luite> tgeeky_: kind of odd that a 2.54 literal makes ghci crash
2012-04-12 00:42:32 UTC <byorgey> fryguybob: ah, thanks, got it to work now!
2012-04-12 00:42:46 UTC <byorgey> fryguybob: BTW, what's your use case for diagrams-osm?
2012-04-12 00:42:57 UTC <byorgey> I'm curious
2012-04-12 00:57:04 UTC <fryguybob> byorgey: I'm the grad TA for the data structures class and so I have office hours and grade the projects.  The last project is exploring graphs and the professor was going to do an OSM based project.
2012-04-12 00:57:38 UTC <fryguybob> But it is now based on some more refined OSM data so they do not have to deal with the format directly.
2012-04-12 00:58:07 UTC <fryguybob> I did diagrams-osm to explore what would be required / make tools for grading.
2012-04-12 01:02:51 UTC <fryguybob> Maps are of course fun, so it wasn't hard to do :D.
2012-04-12 01:18:11 UTC <byorgey> fryguybob: I see, fun =)
2012-04-12 01:24:10 UTC <fryguybob> byorgey: Note that the aspect ratio is just tuned to a random value that "looked" right to me rather then figuring out the approximate ratio from the lat/lon.
2012-04-12 01:24:42 UTC <byorgey> fryguybob: fair enough
2012-04-12 01:25:03 UTC <byorgey> fryguybob: I don't really care that much, I generated a map that looks nice and makes for a nice example slide in my talk =)
2012-04-12 01:25:22 UTC <fryguybob> Excellent
2012-04-12 01:25:22 UTC <byorgey> (I made a map of the place where the talk will be)
2012-04-12 01:25:33 UTC <byorgey> i.e. Williamstown, MA
2012-04-12 01:25:55 UTC <fryguybob> I was supprised at how detailed the data is.
2012-04-12 01:26:04 UTC <fryguybob> (for around hear at least)
2012-04-12 01:26:14 UTC <fryguybob> (here)
2012-04-12 01:26:48 UTC <fryguybob> It has bike/walking paths, buildings, and water ways.
2012-04-12 01:28:25 UTC <byorgey> yeah, it's neat
2012-04-12 01:48:31 UTC <tgeeky_> byorgey: talk!
2012-04-12 01:49:03 UTC <tgeeky_> luite: that is a rediculious and awful bug
2012-04-12 01:49:16 UTC <byorgey> tgeeky_: yep!
2012-04-12 01:49:28 UTC <tgeeky_> to GHC: [your handling of literals is bad]   [and you should feel bad]
2012-04-12 01:49:33 UTC <tgeeky_> byorgey: cool! soon? recorded?
2012-04-12 01:49:52 UTC <byorgey> tgeeky_: Friday, and I doubt it
2012-04-12 01:50:03 UTC <tgeeky_> awh.
2012-04-12 01:50:12 UTC <byorgey> I'm giving the weekly CS colloquium at Williams College (my alma mater)
2012-04-12 01:50:25 UTC <byorgey> I can show you the slides afterwards though
2012-04-12 01:50:36 UTC <tgeeky_> byorgey: i assumed as much. :)
2012-04-12 01:50:44 UTC <tgeeky_> ask someone with you to write down the questions asked, if they are good :o
2012-04-12 01:52:05 UTC <tgeeky_> i gotta run a few errands. bbiaf.
2012-04-12 01:52:24 UTC <tgeeky_> hopefully for the rest of the week I can get back to hacking instead of housework (powerwashing, window washing, painting)
2012-04-12 01:53:26 UTC <tgeeky_> luite: hmm. /me wonders if this has to do with integer-gmp linking
2012-04-12 01:53:31 UTC <tgeeky_> luite: can you try building with integer-simple?
2012-04-12 01:55:07 UTC <fryguybob> ACTION has a bikeshed ready to be delivered.
2012-04-12 01:56:06 UTC <byorgey> fryguybob: a real, honest-to-goodness bikeshed?
2012-04-12 01:56:29 UTC <byorgey> ACTION was under the impression those were purely metaphorical
2012-04-12 01:59:04 UTC <fryguybob> byorgey: Amish built.
2012-04-12 01:59:30 UTC <fryguybob> It is only the painting of the bikeshed that is metaphorical.  We have not picked a color yet.
2012-04-12 02:00:52 UTC <byorgey> hehe, I see =)
2012-04-12 02:21:09 UTC <tgeeky_> mark this momentus day in the annals of history. today is the day that quantum [algorithims, not computers] have... factored 143.
2012-04-12 02:35:43 UTC <luite> tgeeky_: yeah I guess it either has something to do with gmp issues, or otherwise with my computer being screwed up....
2012-04-12 22:26:05 UTC <peterjoel> does diagrams have a concept of containers?
2012-04-12 22:26:57 UTC <peterjoel> ie a diagram that has some paths of it's own and a reserved area for child diagrams
2012-04-12 22:27:28 UTC <peterjoel> for example, a picture frame, which could adjust its aspect ratio according to it's contents
2012-04-12 22:28:25 UTC <peterjoel> or a re-usable TV object, which would contain a diagram as it's picture, within the screen, but wouldn't adjust it's own aspect ratio
2012-04-13 04:30:03 UTC <byorgey> oh man, I really really need to extend diagrams-builder to use hashes to only rebuild diagrams that need to be rebuilt.
2012-04-13 04:30:20 UTC <byorgey> right now my talk slides take several minutes to compile because it regenerates all the diagrams every time =(
2012-04-13 04:40:08 UTC <tgeeky__> byorgey: yes. you do.
2012-04-13 04:40:27 UTC <tgeeky__> On the other hand, you're one of a handful of people on earth who "compile their slides" in such an awesome way as you :o
2012-04-13 04:40:32 UTC <TSC> Could you use the last modified time?
2012-04-13 04:40:36 UTC <tgeeky__> and your computer should be honored to do it
2012-04-13 04:41:01 UTC <TSC> (B.T.W. I got opacity to work with diagrams-tikz and most of the web gallery diagrams look right in TikZ)
2012-04-13 11:19:43 UTC <fryguybob> Humm, I should make a nice example of what peterjoel wanted.
2012-04-13 13:39:55 UTC <byorgey> TSC: awesome!
2012-04-13 13:40:16 UTC <byorgey> fryguybob: please do.  I'm not even sure I understand what it is he wanted.
2012-04-13 19:43:12 UTC <tgeeky__> byorgey: http://hackage.haskell.org/package/hobbits-1.1 !
2012-04-13 20:13:56 UTC <tgeeky__> byorgey: also, do you have "Analytic Combinatorics" by Flajolet and Segdewick?
2012-04-13 20:47:35 UTC <luite> hmm, i think i have that
2012-04-13 20:48:10 UTC <luite> yep
2012-04-13 20:49:14 UTC <luite> i forgot what i used it for, haven't read it completel
2012-04-13 20:49:16 UTC <luite> y
2012-04-14 01:45:19 UTC <TSC2> Anyone who wants a look at diagrams-tikz (with diagrams v0.5) can get it with darcs at http://www.cmears.id.au/repos/diagrams-tikz
2012-04-14 01:48:58 UTC <fryguybob> ACTION trys building...
2012-04-14 01:49:27 UTC <TSC2> Thanks, I hope it works
2012-04-14 02:10:05 UTC <fryguybob> TSC2: It works!
2012-04-14 02:10:33 UTC <TSC2> Hooray!
2012-04-14 02:11:10 UTC <fryguybob> I did comment out the cairo and gtk dependencies in the .cabal file, but other then that it was ok.
2012-04-14 02:11:33 UTC <fryguybob> My tex also complained about units for some reason, but I'm not sure what that is about.
2012-04-14 02:11:45 UTC <TSC2> Ah, cairo and gtk probably don't need to be there
2012-04-14 02:12:01 UTC <TSC2> I only changed the version numbers in the dependencies, I should have had a closer look
2012-04-14 02:12:26 UTC <TSC2> I haven't looked at TeX's warnings either
2012-04-14 02:12:41 UTC <fryguybob> I'll have to take a closer look at it all later.  Thanks for your hard work!
2012-04-14 02:12:53 UTC <TSC2> Except one of the gallery examples breaks its memory limit or something (:
2012-04-14 02:12:59 UTC <TSC2> No worries
2012-04-14 02:13:18 UTC <fryguybob> TSC2: Yeah that's probably mine :D.
2012-04-14 02:18:25 UTC <fryguybob> peterjoel: I saw your question from before after you had disconnected.  I think you can just model what you want with a function that takes a diagram and produces a new diagram.
2012-04-14 06:37:49 UTC <luite_> yay my rectangle packer works and i have diagrams to prove it ;)
2012-04-14 15:41:26 UTC <fryguybob> luite_: Nice!
2012-04-14 15:41:54 UTC <fryguybob> Now do arbitrary polygons.
2012-04-14 15:44:22 UTC <luite_> hehe, it's quite bad actually, a tetris-like heuristic, tries to place the new rectangle as "deep" as possible, if that isn't possible without gameover (max height reached) it widens the field
2012-04-14 15:44:56 UTC <luite_> i only needed rectangles (already NP hard) because it's for packing images for websites
2012-04-14 15:45:40 UTC <luite_> building a yesod widget thingie around it now so that i don't have to manually pack together user interface elements for wolfgang
2012-04-14 15:46:14 UTC <fryguybob> luite_: At my old job we used several packages to do arbitrary nesting even handling some strange constraints.  I'm not sure how it worked but it was magical.
2012-04-14 15:47:24 UTC <luite_> I'll probably add this as a package in the yesod github tomorrow or so, so if you want to make it more magical you can send a pull request ;)
2012-04-14 15:48:10 UTC <fryguybob> ha, in addition to being magical it was quite expensive.
2012-04-14 15:49:19 UTC <luite_> was this for some production thing? optimizing sheet material for cutting or something?
2012-04-14 15:50:13 UTC <luite_> now I need some images of kittens to really test the packer
2012-04-14 15:50:15 UTC <fryguybob> Optimizing material cutting, the most interesting was with leather where the material had several grades and the patterns had graded zones.
2012-04-14 15:50:51 UTC <fryguybob> http://www.scai.fraunhofer.de/en/business-research-areas/optimization/products/autonester-l.html
2012-04-14 15:51:08 UTC <luite_> ah right, I know a bit about that, but not too much. the problem i know best is the classic cutting stock problem and delayed column generation for solving it
2012-04-14 15:51:14 UTC <luite_> but that's a simpler, 1D, variant
2012-04-14 21:09:27 UTC <luite_> http://hdiff.luite.com/tmp/sprite2.png <- my sprite packer in action :)
2012-04-14 21:18:19 UTC <byorgey> luite_: cool =)
2012-04-14 21:20:36 UTC <luite_> hehe it'http://hdiff.luite.com/tmp/sprite4.png <- hm looks like this one isn't quite optimal
2012-04-14 21:20:39 UTC <luite_> oops
2012-04-14 21:25:35 UTC <luite_> it keeps a "skyline" on the right and tries to move blocks as far as possible to te left each time (like tetris with blocks coming from the right), without increasing the height of the image if possible
2012-04-14 21:25:56 UTC <luite_> and starts with the highest block
2012-04-16 14:07:44 UTC <luite_> +1 for transparency groups :)
2012-04-16 14:16:59 UTC <tgeeky-> hmm?
2012-04-16 14:48:49 UTC <tgeeky-> luite_: http://bl.ocks.org/1703449
2012-04-16 14:51:26 UTC <tgeeky-> luite_: better yet: http://gabrielflor.it/water
2012-04-16 15:13:01 UTC <luite_> cool
2012-04-16 15:13:24 UTC <luite_> i had already seen the second one though
2012-04-16 15:14:18 UTC <byorgey> tgeeky-: cool!
2012-04-16 15:14:58 UTC <tgeeky-> and from slashdot today: http://www.chris-granger.com/2012/04/12/light-table---a-new-ide-concept/
2012-04-16 15:38:12 UTC <luite_> bah gmail has been having problems again for a week now...
2012-04-16 17:17:13 UTC <tgeeky-> byorgey: hmmmmmmm. What do you think will go wrong with trying to write a d3.js backend to diagrams?
2012-04-16 17:38:31 UTC <luite_> hm is that useful? what kind of interactivity would you think can be supported? or do you mean with a JS backend for GHC or UHC?
2012-04-16 17:45:00 UTC <tgeeky-> luite_: I'm not sure. I don't think I mean that
2012-04-16 17:45:35 UTC <tgeeky-> I think you'd be making a "js backend" just big enough to support everything d3.js needs
2012-04-16 17:46:06 UTC <luite_> no but I mean that for a d3.js backend to make sense over svg, you'd want basic interactivity and stuff
2012-04-16 17:46:24 UTC <tgeeky-> luite_: you'd have no choice but to do it the way d3.js does it -- discretely
2012-04-16 17:46:41 UTC <luite_> i have no idea what that means :p
2012-04-16 17:48:05 UTC <tgeeky-> luite_: d3.js has an internal model of interactivity, based on discrete time scales https://github.com/mbostock/d3/wiki/Time-Scales#wiki-scale
2012-04-16 17:48:28 UTC <tgeeky-> https://github.com/mbostock/d3/wiki/Time
2012-04-16 17:51:28 UTC <tgeeky-> does that make sense?
2012-04-16 17:54:25 UTC <luite_> hmm well, I can imagine that would work for basic animation, but I'm worried about specifying user interactivity
2012-04-16 17:54:50 UTC <tgeeky-> luite_: you mean, in a general way?
2012-04-16 17:54:54 UTC <tgeeky-> what do you do now?
2012-04-16 17:55:31 UTC <luite_> in d3.js?
2012-04-16 17:56:11 UTC <tgeeky-> luite_: nono, for wolfgang
2012-04-16 17:56:16 UTC <tgeeky-> luite_: also, check this one out: http://enjalot.com/tributary/2165875/sinwaves.js
2012-04-16 17:56:44 UTC <luite_> yeah I know that one
2012-04-16 17:57:22 UTC <luite_> it's fun, but the sliders are annoying to use
2012-04-16 17:58:07 UTC <tgeeky-> luite_: so
2012-04-16 17:58:17 UTC <tgeeky-> if you have a minute, let's just talk about this: http://gabrielflor.it/water
2012-04-16 17:59:01 UTC <luite_> I'll listen, but i might nto respond immediately
2012-04-16 17:59:39 UTC <tgeeky-> luite_: ok, so let's imagine all the code on the right (currently d3.js), we re-write it however we'd like in diagrams
2012-04-16 18:00:25 UTC <tgeeky-> and then you (very fancifully, I know) create a boilerplate converter (using multiplate, or lenses if I'm not smart enough) to setup an invertable map between the diagrams code and the d3.js code
2012-04-16 18:01:41 UTC <luite_> well, the .attr things can be converted, but the problem is the function(d) { ... }
2012-04-16 18:02:34 UTC <luite_> you can either make some dsl to specify javascript code, just use a String of JS code (or jmacro or similar), or use a haskell compiler
2012-04-16 18:02:51 UTC <tgeeky-> (that last option you mean haskell -> js compiler)
2012-04-16 18:03:01 UTC <luite_> but you cannot turn a haskell function into a javascript one without the full haskell compiler
2012-04-16 18:03:04 UTC <luite_> yes
2012-04-16 18:03:41 UTC <tgeeky-> all three kind of suck
2012-04-16 18:04:01 UTC <luite_> but if you have that, I wonder why you'd need d3 at all: make a nice diagrams backend, and hack up a reactive gui framework so that it works with that compiler
2012-04-16 18:04:27 UTC <luite_> the only reason that'd be inferior is speed
2012-04-16 18:04:44 UTC <luite_> which can probably be (at least partly) solved by doing a bit more in FFI
2012-04-16 18:05:45 UTC <luite_> I think that's the only thing that has real potential to properly work, but the other methdos will get you to some nice basic d3 diagrams faster
2012-04-16 18:05:56 UTC <tgeeky-> luite_: so, what you're saying is -- why not use some FRP or conal's TypeCompose / TangibleValues, get the safety of haskell's type system and the composability of them as wel
2012-04-16 18:06:45 UTC <tgeeky-> luite_: well, I did say invertible map (using multiple) -- in theory, if I understand the code right, I should be able to invert "my-d3.js-DSL" code back into haskell code
2012-04-16 18:07:10 UTC <luite_> but what would you do with functions?
2012-04-16 18:07:38 UTC <luite_> normal haskell code can't see the implementation of a function, it's a black box
2012-04-16 18:08:54 UTC <tgeeky-> well I'm pretty sure I'm not smart enough to generically invert javascript functions to haskell functions
2012-04-16 18:08:57 UTC <tgeeky-> so that's out
2012-04-16 18:08:59 UTC <luite_> you could [| quasiquote them |] and then you could do something with the AST, but that's basically what a haskell->js compiler does. except if you refer to other functions in that quasiquoter, then you'd be screwed again
2012-04-16 18:10:10 UTC <tgeeky-> luite_: have you gotten comfortable with quasiquoting yet?
2012-04-16 18:10:53 UTC <luite_> I've used it a few times, probably don't know everything yet
2012-04-16 18:11:09 UTC <luite_> but I wouldn't consider quasiquoting an acceptable solution here
2012-04-16 18:11:15 UTC <tgeeky-> me neither
2012-04-16 18:11:23 UTC <tgeeky-> I do think that someone should make QQ and TH interaction much better than it is
2012-04-16 18:11:26 UTC <tgeeky-> with some sugar
2012-04-16 18:11:48 UTC <luite_> since once you allow haskell code, people want to use map, fold and all, and you end up implementing fallbacks half of the base package in js
2012-04-16 18:11:59 UTC <luite_> +for
2012-04-16 18:16:48 UTC <tgeeky-> luite_: so how did you decide where/when to put slider bars into the wolfgang screenshots I've seen with em?
2012-04-16 18:19:07 UTC <luite_> I don't have anything to put them in automatically
2012-04-16 18:19:22 UTC <luite_> although you could write some instances to do that
2012-04-16 20:02:51 UTC <byorgey> I also don't really see the point of a d3.js backend
2012-04-16 20:03:16 UTC <byorgey> why not just write a backend that can directly output (potentially interactive, with embedded JS) SVG?
2012-04-16 20:14:22 UTC <tgeeky-> byorgey: I don't know! damn it! :o
2012-04-16 20:15:03 UTC <tgeeky-> I thought that is what d3.js is .. a framework to generate SVGs and such
2012-04-16 20:16:29 UTC <tgeeky-> i have to bridge some network connections...
2012-04-16 20:16:30 UTC <tgeeky-> brb
2012-04-16 20:32:51 UTC <tgeeky_> ok, back.
2012-04-16 20:36:19 UTC <tgeeky_> byorgey: I'm not sure where the lines are drawn between d3.js, which claims to use "HTML, CSS, and SVG", and "just using SVG" with (as you said, embedded javascript)
2012-04-16 21:37:42 UTC <tgeeky___> ugh
2012-04-16 21:37:46 UTC <tgeeky___> killing myself please
2012-04-16 23:27:34 UTC <tgeeky> so.. byorgey: luite_:
2012-04-16 23:29:25 UTC <tgeeky> http://hpaste.org/67124
2012-04-16 23:29:48 UTC <tgeeky> that is a list of things I'd like to find in my haskell-platform, along with the things that I find anyway (like it or not) in my haskell-platform.
2012-04-16 23:30:08 UTC <tgeeky> please add!
2012-04-16 23:34:19 UTC <luite_> dunno, I have never really seen the need for a haskell platform
2012-04-16 23:46:26 UTC <tgeeky> luite_: the reasoning was thusly. Imagine that cabal-dev were the "standard" process. Then, imagine a way to splice in and out already-compiled packages with new cabal-dev working directories.
2012-04-16 23:46:57 UTC <tgeeky> logically, the first thing you'd want to do is to compile as many of the packages with the highest number of reverse deps
2012-04-16 23:47:27 UTC <tgeeky> so that when little timmy needs to build his ___, there's a good shot that you'll just splice in many of the general, community used deps
2012-04-16 23:47:33 UTC <tgeeky> and the rest you can build
2012-04-16 23:48:45 UTC <tgeeky> in lieu of that huristic, I just decided to start with haskell-platform as a minimum, and add that on later
2012-04-16 23:49:08 UTC <tgeeky> bbl dinner
2012-04-16 23:49:12 UTC <luite_> I think there should be a different approach: let cabal-dev cache completely built packages on your system, if it wants to build one with exactly the same dependencies, just copy the existing one over
2012-04-17 00:19:47 UTC <luite_> :R
2012-04-17 00:20:06 UTC <luite_> hm wrong window and a typo
2012-04-17 00:30:18 UTC <luite_> Congratulations!!! Your E-mail ID has won US$2,000,000.00 (Two Million United State Dollars Only) in the GMAIL Lottery Promotions" held in Canada to promote 2012 Olympics Game.
2012-04-17 00:30:23 UTC <luite_> cool :p
2012-04-17 00:30:56 UTC <luite_> gmail is so slow that it took me 10 minutes to delete that mail...
2012-04-17 00:31:27 UTC <byorgey> two million US DOLLARS for something held in CANADA to promote the olympics in LONDON? bwahahahaha
2012-04-17 00:32:01 UTC <byorgey> they should have found a way to shove Australia in there too
2012-04-17 00:32:04 UTC <luite_> oh there's more, apparently it's organized by GMAIL-Network office South Africa and sponsored by some tobacco companies
2012-04-17 00:32:11 UTC <byorgey> hehehehe
2012-04-17 00:33:01 UTC <byorgey> ACTION writes a "state of diagrams" email
2012-04-17 00:33:39 UTC <luite_> ah the phone numbers are actually in south africa
2012-04-17 00:34:21 UTC <byorgey> ACTION recommends not calling them
2012-04-17 01:17:06 UTC <tgeeky> luite_: that is what I meant by 'splicing'
2012-04-17 01:17:23 UTC <luite_> what?
2012-04-17 01:17:26 UTC <tgeeky> luite_: the other thing that I want to do (correctly) is handle all of the *huge* list of options that need to be the same between one compile and another
2012-04-17 01:17:31 UTC <tgeeky> luite_: caching cabal-dev installed stuff
2012-04-17 01:17:53 UTC <tgeeky> you say cache and copy, I say cache->splice->link
2012-04-17 01:19:12 UTC <tgeeky> byorgey: do you think that Haskell is the place that has the most category-theory inspired work (and packages) of all programming languages? Or would it still be something more formal, like Coq?
2012-04-17 01:27:36 UTC <byorgey> tgeeky: if you want *breadth* of category-theory-inspired work, Haskell probably takes the cake.
2012-04-17 01:28:59 UTC <byorgey> tgeeky: certainly deeper category theory has been encoded in languages like Agda (see e.g. https://github.com/copumpkin/categories)
2012-04-17 02:09:34 UTC <luite_> bah POV-Ray, you should use edwardk's PBRT things ;)
2012-04-17 02:16:49 UTC <tgeeky> byorgey: that's exactly what I was thinking.
2012-04-17 03:48:56 UTC <luite_> tgeeky: found interesting things in that book? anything in particular you want to use it for?
2012-04-17 03:49:48 UTC <tgeeky> luite_: it's very interesting. I have a lot to learn, and this guy uses a graph I don't understand completely to explain shapes of group properties
2012-04-17 03:50:16 UTC <luite_> which page?
2012-04-17 03:50:20 UTC <tgeeky> luite_: I'm interested in the Rudvalis group the most
2012-04-17 03:52:18 UTC <tgeeky> luite_: I'm scanning now for the *first* such one, in case it has details
2012-04-17 03:52:56 UTC <luite_> dynkin diagrams?
2012-04-17 03:53:19 UTC <tgeeky> luite_: no, I get all of those (and the extended ones)
2012-04-17 03:53:24 UTC <tgeeky> at least, I've taken notes of all of them
2012-04-17 03:53:34 UTC <tgeeky> and their order functions
2012-04-17 03:53:39 UTC <tgeeky> page 193 is the first
2012-04-17 03:53:42 UTC <tgeeky> at the bottom
2012-04-17 03:53:54 UTC <tgeeky> (5.14) is the kind I meant above
2012-04-17 03:53:59 UTC <luite_> not that I'd be able to help :p
2012-04-17 03:54:00 UTC <tgeeky> (5.13) looks much harder to understand
2012-04-17 03:54:50 UTC <luite_> ah i've never seen those
2012-04-17 03:57:26 UTC <tgeeky> luite_: one reason for interest in [Ru], is that last year someone discovered a 28 (35) dimensional "vertex operator algebra" generated by the Ru.
2012-04-17 03:57:49 UTC <tgeeky> ie, it's a geometry that a string theory has a chance at working at
2012-04-17 04:00:17 UTC <tgeeky> luite_: actually, have I ever explained (how Susskind explains) why string theory has 26 dimensions?
2012-04-17 04:00:46 UTC <luite_> no, but please no spoilers for Susskind lectures that i haven't seen yet ;")
2012-04-17 04:01:06 UTC <tgeeky> hehe. awh. I was going to share it with #-blah
2012-04-17 04:01:53 UTC <luite_> oh that's better, other people might like it, i'm too stupid for this anyway
2012-04-17 04:02:22 UTC <TSC> Hello everyone -- is there anything in diagrams for drawing arrows (lines with a pointy head) ?
2012-04-17 04:03:28 UTC <tgeeky> TSC: absolutely
2012-04-17 04:04:31 UTC <TSC> I must have missed it -- how do you make one?
2012-04-17 04:08:22 UTC <tgeeky> TSC: I don't actually know, I didn't mean to imply that. I just meant it's been done in examples, so it must be there.
2012-04-17 04:09:54 UTC <TSC> Ah, ok (:
2012-04-17 17:04:33 UTC <byorgey> tgeeky: unfortunately, you're wrong, there isn't anything in diagrams for drawing arrows.
2012-04-17 17:04:40 UTC <byorgey> tgeeky: but I'd like to add some.
2012-04-17 17:44:00 UTC <tgeeky> byorgey: hmm! I thought you'd do someting like placing a line diagram at the tail of a triangle diagram
2012-04-17 17:44:21 UTC <tgeeky> byorgey: and that is unfortunate, because I look like an ass :(
2012-04-17 17:45:13 UTC <luite> ass typing: if it looks like an ass, sounds like an ass, it probably is an ass ;)
2012-04-17 17:55:51 UTC <tgeeky> byorgey: this is very interesting... here's something that's also probably wrong: as far as I can tell, reading work of this Robert A. Wilson guy
2012-04-17 17:56:04 UTC <tgeeky> (group theoritician)
2012-04-17 17:56:37 UTC <byorgey> tgeeky: in theory it's no harder than placing a line diagram and a triangle diagram... but in practice you want a lot more than that
2012-04-17 17:57:55 UTC <tgeeky> *all* of the finite, simple groups (all families, all sporadics) can be construted using weird versions and copies of the complexes,quaternions,octionions.
2012-04-17 17:58:54 UTC <tgeeky> save possibly E8 and M
2012-04-17 18:02:23 UTC <luite> byorgey: would it be possible to support something like tikz shorten with diagrams?
2012-04-17 18:02:53 UTC <byorgey> luite: remind me exactly what shorten does?
2012-04-17 18:03:21 UTC <byorgey> (the answer is probably "yes")
2012-04-17 18:03:39 UTC <byorgey> in fact, a long time ago I started working on code to adjust segment lengths
2012-04-17 18:03:47 UTC <byorgey> for exactly the purpose of arrow-drawing
2012-04-17 18:04:11 UTC <byorgey> but I haven't yet gotten around to writing similar code that works on paths/trails instead of just segments
2012-04-17 18:04:28 UTC <luite> byorgey: when it places the arrow on some path, it makes the path a bit shorter
2012-04-17 18:04:42 UTC <luite> so that the arrow can stay just outside the thing it points to
2012-04-17 18:04:42 UTC <byorgey> luite: ok, yeah, that's exactly what I'm planning to implement
2012-04-17 18:04:52 UTC <luite> ah great :)
2012-04-17 19:20:40 UTC <cheater__> so can we do UML yet
2012-04-17 19:23:30 UTC <luite> haha uml ;)
2012-04-17 19:30:03 UTC <byorgey> sure, of course you can do UML
2012-04-17 19:30:12 UTC <byorgey> or do you mean you want special support for UML? ;)
2012-04-17 19:30:34 UTC <byorgey> rectangle, rectangle, line segment, arrowhead, text ...
2012-04-17 19:33:44 UTC <luite> yes, add something to automatically generate UML class diagrams from cabal packags ;)
2012-04-17 19:33:59 UTC <byorgey> hehe =)
2012-04-17 19:35:17 UTC <byorgey> well, UML aside, generating such diagrams isn't too far off -- you need arrows (coming soon), ability to find points on the edge of diagrams (also coming soon), and graph layout (just use the graphviz bindings)
2012-04-17 19:35:57 UTC <luite> in other words: you have rectangles and lines, the rest is not yet implemented ;)
2012-04-17 19:38:36 UTC <byorgey> hahahaha
2012-04-17 19:39:07 UTC <byorgey> the glass is 1/6 full!!
2012-04-17 19:40:28 UTC <byorgey> it's always a temptation when people ask "so, can you do X with diagrams?" to say something like "well no but in this imagined future awesome version you can do five different generalizations of X!!"
2012-04-17 19:56:45 UTC <byorgey> oh, nice, http://ittc.ku.edu/csdl/fpg/Tools/BlankCanvas  http://hackage.haskell.org/package/blank-canvas-0.2.0
2012-04-17 20:00:39 UTC <luite> ah, kool
2012-04-17 20:01:03 UTC <byorgey> should be fairly easy to make a diagrams backend for blank-canvas
2012-04-17 20:01:41 UTC <byorgey> ah, looks like it supports interactivity
2012-04-17 20:04:50 UTC <byorgey> I'm guessing Andy Gill is already thinking in terms of hooking this up to diagrams.  He was talking a while ago about working on an HTML5 backend for diagrams, supporting interactivity, etc.
2012-04-17 20:04:58 UTC <byorgey> so this is quite exciting. =)
2012-04-17 20:08:48 UTC <tgeeky> ;)
2012-04-17 20:09:18 UTC <byorgey> ACTION continues working on a release of diagrams-builder
2012-04-17 20:11:16 UTC <luite> yay http://hdiff.luite.com/tmp/sprites.png
2012-04-17 20:21:17 UTC <byorgey> luite: nice!
2012-04-17 20:21:20 UTC <byorgey> what's this for?
2012-04-17 20:23:04 UTC <luite> oh it's a general use yesod thingie, that bundles serveral images into one. often when you have a site, you have dozens of small icons and logos etc
2012-04-17 20:23:16 UTC <luite> if you serve them from one file, it's more efficient
2012-04-17 20:24:19 UTC <luite> and you remove the loading delay, for example if you have a button with images for button-state-normal, button-state-hover, button-state-clicked, they will all be already loaded from the single sprite images
2012-04-17 20:25:34 UTC <luite> even if no button is initially in the mouseover state
2012-04-17 20:26:13 UTC <byorgey> ah, cool, I didn't even know that was possible
2012-04-17 20:27:59 UTC <luite> it's kind of a hack: the image is set as a background of a div element
2012-04-17 20:28:15 UTC <luite> and you make the right part of the image visible by adjusting the background position
2012-04-17 20:28:34 UTC <luite> but most ui frameworks do it, and large sites that want to optimize their loading times
2012-04-17 20:28:57 UTC <luite> maintaining the sprite image is a pain though, but this automatically generates it at compile time, with TH
2012-04-17 20:31:00 UTC <byorgey> oh, I see
2012-04-17 20:31:10 UTC <byorgey> and now I understand why you were writing code to pack images
2012-04-17 20:36:02 UTC <luite> yeah, unfortunately embedding the resulting image doesn't really work well, since ghc doesn't have bytestring literals
2012-04-17 22:01:24 UTC <tgeeky> luite: that's clever
2012-04-17 23:10:34 UTC <tgeeky> byorgey: it occurs to me, that drawing the diagrams in this paper: http://www.cs.indiana.edu/~sabry/papers/rational.pdf in diagrams would be a useful benchmark?
2012-04-17 23:10:41 UTC <tgeeky> in light of today's conversation
2012-04-17 23:18:33 UTC <mgsloan> ACTION just implemented this idea ( http://www.mgsloan.com/wordpress/?p=335 ) here: https://github.com/mgsloan/lenq
2012-04-17 23:25:56 UTC <byorgey> tgeeky: yes, that would make a good benchmark
2012-04-17 23:26:04 UTC <byorgey> we need to collect such things on a wiki page
2012-04-17 23:27:32 UTC <byorgey> mgsloan: cool!
2012-04-17 23:28:06 UTC <mgsloan> byorgey: thanks!  I guess #diagrams has become my pre-publishing announcement
2012-04-17 23:28:26 UTC <mgsloan> also, thanks for taking a look at that blog post!  I think I will try splitting it up
2012-04-17 23:28:38 UTC <mgsloan> or maybe blog isn't the right venue, hmmm
2012-04-17 23:29:16 UTC <tgeeky> mgsloan: ok, now you're marching into the territory that I'm deeply interested but haven't been able to advance further than others...
2012-04-17 23:29:47 UTC <mgsloan> tgeeky: Haskell based DSLs?
2012-04-17 23:29:59 UTC <mgsloan> yeah, I think it's about time :)
2012-04-17 23:31:13 UTC <mgsloan> check out the code here: https://github.com/mgsloan/lenq/blob/master/src/Data/Lenq/Internal.hs
2012-04-17 23:31:51 UTC <mgsloan> all you really need is conversions from Exp to Pat and back
2012-04-17 23:33:25 UTC <tgeeky> mgsloan: sorry, had to answer a telephone call. I mean lenses, template haskell, partial (and invertible) functions. You mention boomerang -- I believe that is the same thing conceptually as multiplate (which I'm more familar with)
2012-04-17 23:35:02 UTC <tgeeky> mgsloan: have you read roconnor's paper "functor : lens :: applicative : multiplate" http://arxiv.org/abs/1103.2841 ?
2012-04-17 23:35:06 UTC <mgsloan> I want to do conversions from exp to type functions as well - put the PolyKinds extension to work :)
2012-04-17 23:35:26 UTC <mgsloan> so, after this there will be partial conversions between exp, type, and pat
2012-04-17 23:35:39 UTC <mgsloan> tgeeky: I haven't!
2012-04-17 23:36:03 UTC <tgeeky> mgsloan: and the hackage package 'multiplate' and 'multiplate-simplified'
2012-04-17 23:39:14 UTC <mgsloan> I've taken a look at them, but didn't realize they were targeted at subsuming lenses!  I mean it makes sense given the terminology they're using
2012-04-17 23:39:59 UTC <tgeeky> oh, you're the guy behind rex?
2012-04-17 23:40:39 UTC <mgsloan> yup!
2012-04-17 23:41:16 UTC <mgsloan> rex is a little bit embarrassing - the compile time generation of PCRE tables is currently turned off
2012-04-17 23:41:32 UTC <mgsloan> I probably don't understand the safe usage of "unsafePerformIO" well enough
2012-04-17 23:44:26 UTC <mgsloan> so that's to-fix
2012-04-17 23:44:36 UTC <mgsloan> but yeah, I'm surprised how little is done with template haskell
2012-04-17 23:45:05 UTC <mgsloan> I think it has become anathema because it doesn't have a beautifully mathematical design
2012-04-17 23:45:07 UTC <mgsloan> or something
2012-04-17 23:45:17 UTC <mgsloan> but it's very powerful
2012-04-17 23:45:25 UTC <luite> yes, it's a popular reason for hating yesod :p
2012-04-17 23:45:32 UTC <luite> excuse perhaps
2012-04-17 23:45:38 UTC <mgsloan> it's silly
2012-04-17 23:45:44 UTC <mgsloan> I do think the quasiquote syntax sucks
2012-04-17 23:45:57 UTC <mgsloan> [| |] brackets look like messed up comprehensions
2012-04-17 23:46:02 UTC <mgsloan> kinda too late to change that though :(
2012-04-17 23:46:11 UTC <tgeeky> mgsloan: let's just invent a new syntax, and write a parser-pretty printer pair for the syntax into QQ syntax
2012-04-17 23:46:22 UTC <mgsloan> :) totally possible!
2012-04-17 23:46:31 UTC <mgsloan> have you seen zero-th?
2012-04-17 23:46:56 UTC <luite> no but real haskellers use flexible combinators while only ugly pigdogs use TH and QQ because they don't have to think about the design then
2012-04-17 23:47:32 UTC <mgsloan> I think that one issue is that the usage of TH is an affront to the belief that Haskell is all you need
2012-04-17 23:47:35 UTC <tgeeky> [mkLens| ... |]   <-->   -- || <O> ...
2012-04-17 23:47:37 UTC <tgeeky> or something strange
2012-04-17 23:47:41 UTC <tgeeky> *less
2012-04-17 23:47:41 UTC <mgsloan> "no macros here! our abstractions are powerful enough!"
2012-04-17 23:48:05 UTC <mgsloan> I was thinking <mkLens% blah blah blah %>
2012-04-17 23:48:10 UTC <mgsloan> it doesn't look very Haskelly
2012-04-17 23:48:13 UTC <mgsloan> but that's the whole point
2012-04-17 23:48:18 UTC <tgeeky> mgsloan: psah! the ability for a language to be meta-programmed in is pretty important to its evolution, if it will have one
2012-04-17 23:48:26 UTC <mgsloan> [| |] is too haskelly - you don't see that it's breaking out of the language
2012-04-17 23:49:01 UTC <mgsloan> tgeeky - I agree
2012-04-17 23:49:14 UTC <tgeeky> mgsloan: yeah. My goal was to actually "take back" the stolen syntax of || and &&, because 'or' and 'and' are perfectly good.
2012-04-17 23:49:27 UTC <luite> but i have to admit that th is often a bit clumsy, you tend to get bitten by stage restriction problems if you try to do more
2012-04-17 23:49:39 UTC <mgsloan> so, question is, how do we make the Haskell community love TH?  A beautifully elegant wrapper over it?  Better AST quasiquotes?
2012-04-17 23:49:54 UTC <tgeeky> mgsloan: not wrapper. you have to have a complete inversion
2012-04-17 23:50:31 UTC <tgeeky> mgsloan: I was playing with elements from the dirac bra-ket notation, but I think that would really piss people off.
2012-04-17 23:51:01 UTC <mgsloan> luite: really?  I don't see stage restriction as too huge of a problem.  It is a little inelegant that previously haskell was process-module-at-a-time-as-if-everything-can-see-everything-else, and now it's process-everything-upto-splice
2012-04-17 23:51:27 UTC <mgsloan> tgeeky: complete inversion as in zero-th type thing?
2012-04-17 23:51:57 UTC <luite> mgsloan: well, I mean that if you have a program with code that you want to use both in th and "normal" haskell code, then you need to move around stuff
2012-04-17 23:52:16 UTC <luite> especially if more of your top-level decls get generated
2012-04-17 23:52:37 UTC <mgsloan> yeah, that is unfortunate
2012-04-17 23:52:57 UTC <mgsloan> maybe I should have tried to do a PHD with the portland dude behind TH
2012-04-17 23:53:05 UTC <mgsloan> ohwells!
2012-04-17 23:53:28 UTC <luite> hmm
2012-04-17 23:53:30 UTC <tgeeky> mgsloan: my understanding of reading zero-th was that it basically laid out the TH splices into a file for you
2012-04-17 23:53:39 UTC <mgsloan> tgeeky: yup
2012-04-17 23:53:45 UTC <mgsloan> which would solve the staging thing
2012-04-17 23:54:00 UTC <mgsloan> and could be a place to shim in better quasiquote syntax
2012-04-17 23:54:28 UTC <tgeeky> mgsloan: gah! ok. hold on a second. I've conflated two things.
2012-04-17 23:54:32 UTC <mgsloan> could increase compile time, though
2012-04-17 23:54:46 UTC <tgeeky> boomerang is a partial isomorphism thing.
2012-04-17 23:54:52 UTC <mgsloan> yup
2012-04-17 23:55:04 UTC <mgsloan> I think it does lenses too, but I haven't looked hard
2012-04-17 23:55:27 UTC <tgeeky> I don't think so? Maybe. Its sister package is the pair [partial-isomorphism, invertible-syntax]
2012-04-17 23:56:18 UTC <tgeeky> invertible-syntax has an example demo in it, where you get a single <parser|printer> pair
2012-04-17 23:57:19 UTC <mgsloan> I want to integrate something like rex into bijq / lenq
2012-04-17 23:57:51 UTC <tgeeky> mgsloan: ok, i'll look at bijq later. I need to work more often and closely with you.
2012-04-17 23:57:58 UTC <tgeeky> Your creativity is inspiring :O
2012-04-17 23:58:05 UTC <tgeeky> dinner time, for now!
2012-04-17 23:58:37 UTC <mgsloan> thanks! sounds good :D
2012-04-18 01:46:41 UTC <tgeeky> mgsloan: so, back.
2012-04-18 01:48:39 UTC <tgeeky> mgsloan: oh. I see. With your package, you can generate lenses from every package
2012-04-18 01:48:48 UTC <mgsloan> yup!
2012-04-18 01:48:57 UTC <mgsloan> without even depending on them
2012-04-18 01:49:11 UTC <tgeeky> that's both dirty, and true
2012-04-18 01:49:41 UTC <mgsloan> the inspiration for this package was the "Yall" author mentioning that he didn't have time for a few days to write a THer for Yall
2012-04-18 01:49:52 UTC <mgsloan> that got me thinking "why do we even have multiple lens THers?"
2012-04-18 01:49:56 UTC <mgsloan> they all do the same thing
2012-04-18 01:50:16 UTC <mgsloan> and they all suck at creating compound lenses
2012-04-18 01:50:37 UTC <tgeeky> by compound you mean? composing them together?
2012-04-18 01:51:26 UTC <mgsloan> well, composing them together in parallel - having stuff that does lenses that involve multiple values out of a data structure
2012-04-18 01:51:35 UTC <tgeeky> mgsloan: you even have the same ("weird") spacing habits that I do.
2012-04-18 01:51:49 UTC <mgsloan> ah, lining things up?
2012-04-18 01:51:53 UTC <mgsloan> it helps a lot
2012-04-18 01:51:58 UTC <tgeeky> i know, but I get shunned
2012-04-18 01:52:04 UTC <mgsloan> I want to have an editor that auto does that
2012-04-18 01:52:08 UTC <tgeeky> lol
2012-04-18 01:52:11 UTC <mgsloan> suggests alignments
2012-04-18 01:52:22 UTC <mgsloan> could be a pretty bad thing, though, in the hands of noobs :P
2012-04-18 01:52:25 UTC <tgeeky> mgsloan: my pet name for that project is "document tensor"
2012-04-18 01:52:30 UTC <mgsloan> ooooh
2012-04-18 01:52:57 UTC <luite> hm
2012-04-18 01:53:15 UTC <mgsloan> you really get shunned for that? I thought it was good style, I've seen such things in plenty of expert haskeller's code
2012-04-18 01:53:21 UTC <tgeeky> mgsloan: you have to give up on the idea that source *being edited* should be seen, character by charater, by the user
2012-04-18 01:53:33 UTC <mgsloan> (well not shunned, just insulted :P)
2012-04-18 01:53:51 UTC <tgeeky> mgsloan: well, I would take it a bit further. but yeah.
2012-04-18 01:53:58 UTC <tgeeky> things like your alignment in "expToPat"
2012-04-18 01:54:17 UTC <mgsloan> what's nice about that is that the alignments in expToPat resemble those in patToExp
2012-04-18 01:54:23 UTC <tgeeky> mgsloan:
2012-04-18 01:54:36 UTC <tgeeky> yes, I also have the habit of lining up my type signatures in blocks
2012-04-18 01:55:12 UTC <tgeeky> mgsloan: so, can we chat in another chatroom as to not spam up here?
2012-04-18 01:55:35 UTC <tgeeky> try #d-rive, I guess
2012-04-18 01:55:35 UTC <mgsloan> tgeeky: we could, but I don't think anyone here minds
2012-04-18 01:55:44 UTC <tgeeky> mgsloan: ok then. :)
2012-04-18 01:55:48 UTC <luite> it would get awfully quiet here :(
2012-04-18 01:55:51 UTC <tgeeky> hehe
2012-04-18 01:56:14 UTC <mgsloan> yeah, I kinda like the idea that #diagrams could be a smaller cabal of people interested in similar things
2012-04-18 01:56:35 UTC <mgsloan> not all of those things having to do with sticking graphics together :D
2012-04-18 01:56:58 UTC <tgeeky> mgsloan: ok, so on the table earlier, there were two (seemingly seperate) ideas
2012-04-18 01:57:13 UTC <tgeeky> there were the ideas of partial isomorphisms [boomeraing, p-i, invert-syntax]
2012-04-18 01:57:21 UTC <tgeeky> and those of multiplate
2012-04-18 01:58:46 UTC <tgeeky> if I understand it correctly, the idea of invertible-syntax is, for example, to string together a single bijection out of lots of smaller partial isomorphism functors?
2012-04-18 02:00:03 UTC <tgeeky> the relevant caveats are in here: http://hackage.haskell.org/packages/archive/invertible-syntax/0.2.1/doc/html/src/Text-Syntax-Combinators.html
2012-04-18 02:00:42 UTC <mgsloan> hmm, interesting.  would that be a bijection with failure?  (if the components are partial)
2012-04-18 02:01:53 UTC <tgeeky> mgsloan: not sure if I know the answer. http://hackage.haskell.org/packages/archive/partial-isomorphisms/0.1/doc/html/src/Control-Isomorphism-Partial-Prim.html
2012-04-18 02:02:32 UTC <mgsloan> also, something interesting - one of the reasons that using haskell-src-meta was discouraged in the past is that template haskell couldn't do operators unless you a-priori knew their fixity.  template-haskell-2.7.0.0 fixed that by introducing unresolved fixity infix operations
2012-04-18 02:02:47 UTC <mgsloan> course, doing anything interesting on infix ops needs knowing the fixity..
2012-04-18 02:03:02 UTC <tgeeky> mgsloan: oh. so back to me wanting to get rid of (||) and (&&)
2012-04-18 02:03:36 UTC <tgeeky> mgsloan: if you look at the Prelude, there are very, very few infix operators that are symbolic (not words) .. maybe a dozen or so.
2012-04-18 02:03:50 UTC <tgeeky> mgsloan: perahps you could get rid of them, and reintroduce them in a way which carries fixity information around?
2012-04-18 02:04:31 UTC <tgeeky> mgsloan: I must admit I find it kind of puzzling why this is a hard problem.
2012-04-18 02:04:56 UTC <mgsloan> well, that was the old solution, actually - include a set table of fixities, and if your op isn't in the prelude, better parenthesize!
2012-04-18 02:05:08 UTC <mgsloan> it is puzzling - mostly an omission in the design of TH
2012-04-18 02:05:28 UTC <mgsloan> they did not anticipate people making DSLs that reused haskell's syntax
2012-04-18 02:05:36 UTC <tgeeky> mgsloan: the other concept that I have *no* idea how to formalize is to introduced "centered" fixity operators to haskell syntax
2012-04-18 02:05:45 UTC <tgeeky> which I think is things who are infixl and infixr?
2012-04-18 02:06:07 UTC <mgsloan> mixfix?
2012-04-18 02:06:23 UTC <tgeeky> not sure what it would be called
2012-04-18 02:06:34 UTC <mgsloan> I've got an unpublished blogpost on ideas for revamping the operator precedence system
2012-04-18 02:06:36 UTC <tgeeky> those are too big of changes though
2012-04-18 02:06:51 UTC <mgsloan> were you the guy who also wanted to do partial orders on operator groups?
2012-04-18 02:07:24 UTC <tgeeky> nope
2012-04-18 02:08:25 UTC <tgeeky> mgsloan: it should be possible, looking through this, to rewrite your Lenq in terms of a (single) multiplate
2012-04-18 02:08:38 UTC <tgeeky> which should cut down on the "boilerplate"
2012-04-18 02:09:40 UTC <tgeeky> mgsloan: and re: failure with partial isomorphisms ... I don't think he handles failure in any way.
2012-04-18 02:10:55 UTC <mgsloan> so, for compound lenses, I mean that I could write [lenq| \(x, y) -> [fooLens x, barLens y] |]
2012-04-18 02:11:19 UTC <mgsloan> instead of mucking around with fc-labels' applicative
2012-04-18 02:11:58 UTC <mgsloan> the lack of handling of failure properly in a lot of these libraries is troubling
2012-04-18 02:12:13 UTC <tgeeky> mgsloan: well, it's a bijection! there's no failure.
2012-04-18 02:12:19 UTC <tgeeky> you can't not get mapped by a bijection :O
2012-04-18 02:12:20 UTC <mgsloan> yeah, that's fair
2012-04-18 02:12:46 UTC <tgeeky> so with this compound lens, is one of the lenses necessarily related to the other?
2012-04-18 02:12:53 UTC <mgsloan> it's still useful to know when you've got a (a -> Maybe b, b -> Maybe a)
2012-04-18 02:12:56 UTC <tgeeky> is one "forward" with regard to the other?
2012-04-18 02:13:21 UTC <mgsloan> nah
2012-04-18 02:13:37 UTC <mgsloan> the rules are that the variables from the left need to be used only once on the right
2012-04-18 02:13:53 UTC <mgsloan> and can be mapped using lenses and anything with a pattern-equivalent
2012-04-18 02:14:19 UTC <mgsloan> I haven't actually implemented the lens-application thing yet
2012-04-18 02:16:02 UTC <tgeeky> so someone else might say "(,)" is suppose to be a product or something like that... what is the structure of that lenq thing?
2012-04-18 02:16:13 UTC <tgeeky> it's a sum, right?
2012-04-18 02:16:19 UTC <tgeeky> or a list of lenses?
2012-04-18 02:16:42 UTC <tgeeky> i never actually looked at yall
2012-04-18 02:17:06 UTC <mgsloan> yall is pretty new, and pretty cool looking
2012-04-18 02:17:14 UTC <mgsloan> it uses ekmett's menagerie of classes
2012-04-18 02:18:03 UTC <tgeeky> mgsloan: I also saw this today, which blows my mind and probably supplants all of my impressions about bijection and inversion in haskell: http://www.cs.indiana.edu/~sabry/papers/rational.pdf
2012-04-18 02:18:04 UTC <mgsloan> so, yes, it's a list of lenses, paired with a pattern for extracting for get, and a constructor for setting with set
2012-04-18 02:18:21 UTC <mgsloan> yeah, I saw that too, but haven't had time to read it yet
2012-04-18 02:18:31 UTC <mgsloan> now I've gotta read this and multiplate
2012-04-18 02:18:34 UTC <tgeeky> hehe.
2012-04-18 02:18:37 UTC <tgeeky> read multiplate first
2012-04-18 02:18:50 UTC <mgsloan> ACTION wishes he was already graduated
2012-04-18 02:18:51 UTC <tgeeky> I think you'll find it very enlightening
2012-04-18 02:19:01 UTC <mgsloan> I'm working on a super menial statistics class
2012-04-18 02:19:31 UTC <mgsloan> instead of making lenses kick ass, and learning about the state of the bijection / invertible art
2012-04-18 02:19:33 UTC <tgeeky> mgsloan: for reference, this guy: https://gist.github.com/sjoerdvisscher has done some things with multiplate
2012-04-18 02:19:48 UTC <tgeeky> "multiplate with polymorphic data types"
2012-04-18 02:19:58 UTC <mgsloan> yeah, he also wrote one of the lens libraries this targets
2012-04-18 02:19:59 UTC <tgeeky> "the free variables plate with the GADT variant of multiplate"
2012-04-18 02:20:08 UTC <mgsloan> ah, fc-labels!
2012-04-18 02:20:26 UTC <tgeeky> mgsloan: if we can get together to figure out how to actually use multiplate effectively
2012-04-18 02:21:15 UTC <tgeeky> we might be able to impress some of these regulars
2012-04-18 02:21:20 UTC <mgsloan> yeah, could be interesting! haha
2012-04-18 02:21:33 UTC <mgsloan> I'm a little wary of multiplate due to its complexity
2012-04-18 02:21:41 UTC <mgsloan> but could be necessary complexity
2012-04-18 02:21:43 UTC <tgeeky> roconnor (the author) sort of gave me the impression that he had invented/discovered/(proved, really, the hard work) multiplate but didn't know what to do with it
2012-04-18 02:22:28 UTC <tgeeky> mgsloan: I always found this thing to be the simplest multiplate variant to understand: https://gist.github.com/1256281
2012-04-18 02:22:34 UTC <tgeeky> not variant, example
2012-04-18 02:23:16 UTC <tgeeky> mgsloan: this one might interest you as well: https://gist.github.com/984512
2012-04-18 02:23:33 UTC <tgeeky> and this one: https://gist.github.com/984487
2012-04-18 02:23:47 UTC <tgeeky> i geuss some of these are in his fc-labels package
2012-04-18 02:24:31 UTC <mgsloan> seems like a generalization of MaybeLens
2012-04-18 02:24:41 UTC <tgeeky> mgsloan: multiplate?
2012-04-18 02:24:55 UTC <mgsloan> the most recent gist
2012-04-18 02:24:56 UTC <mgsloan> monadlens
2012-04-18 02:25:16 UTC <mgsloan> fc-labels does not lenses for arbitrary monads
2012-04-18 02:25:18 UTC <tgeeky> mgsloan: here's the multiplate one, that is: https://gist.github.com/707890
2012-04-18 02:26:10 UTC <tgeeky> mgsloan: and, to round out the night... he uses zwaluw
2012-04-18 02:26:16 UTC <tgeeky> which is another partial-iso
2012-04-18 02:26:43 UTC <mgsloan> ?
2012-04-18 02:27:03 UTC <tgeeky> mgsloan: http://hackage.haskell.org/package/Zwaluw
2012-04-18 02:27:47 UTC <mgsloan> interesting!
2012-04-18 02:28:15 UTC <mgsloan> both multiplate and fc-labels do compound lenses via Control.Applicative
2012-04-18 02:28:34 UTC <mgsloan> maybe idiom brackets are a somewhat more generic way of achieving these?
2012-04-18 02:30:24 UTC <mgsloan> as far as I know they don't really have patterns 'n such, though, so probably not.
2012-04-18 02:35:15 UTC <mgsloan> so, next steps for lenq:
2012-04-18 02:35:15 UTC <mgsloan> 1) add support for application syntax
2012-04-18 02:35:15 UTC <mgsloan> 2) check partiality of constructors being used, and potentially use a different representation, so that the types represent this
2012-04-18 02:35:15 UTC <mgsloan> 3) check for usage that leads to proper lenses (no literals in the get-result, etc)
2012-04-18 02:35:41 UTC <mgsloan> I'm thinking of only warning for #3, because constructing improper lenses is useful..
2012-04-18 02:35:50 UTC <mgsloan> but might be more haskelly to error
2012-04-18 03:00:06 UTC <tgeeky> mgsloan: still here?
2012-04-18 03:00:13 UTC <mgsloan> yuup
2012-04-18 03:00:29 UTC <tgeeky> k. I went upstairs to get my notebooks for some of these papers, and got suckered into watching a bit of a movie
2012-04-18 03:00:46 UTC <mgsloan> unfortunately I won't be haskelling until much later tonight, if at all of today (hw)
2012-04-18 03:01:01 UTC <mgsloan> but I'm fine with getting a bit distracted :D
2012-04-18 03:01:04 UTC <tgeeky> yeah, but you seem to be able to talk and do hw, unless you haven't been doing hw :O
2012-04-18 03:01:29 UTC <mgsloan> well, I don't really want to do hw
2012-04-18 03:02:43 UTC <mgsloan> I'm a pretty awful student, actually.  I get by on smarts rather than diligence.  College turned a lean mean programming machine into someone who hates doing anything assigned..
2012-04-18 03:04:18 UTC <mgsloan> every spike in my github is associated with some number of half-assed assignments.  Every valley is associated with doing the things that I'm supposed to
2012-04-18 03:05:24 UTC <mgsloan> but eh, 'nough complaining, it's almost over :), feel free to interrupt my homeworking with insights / links
2012-04-18 03:09:19 UTC <tgeeky> mgsloan: seriously, we're twins.
2012-04-18 03:09:19 UTC <tgeeky> mgsloan: btw, this "d-rive" thing I keep mentioning
2012-04-18 03:09:19 UTC <tgeeky> is a multiple meaning phrase in several senses.
2012-04-18 03:09:19 UTC <mgsloan> oh, I'm sure most haskellers and lispers are alike in this respect - http://www.lambdassociates.org/blog/bipolar.htm
2012-04-18 03:09:19 UTC <mgsloan> tgeeky: Yeah, this is the idea to speculatively put together expressions that are well-typed, right?
2012-04-18 03:09:19 UTC <tgeeky> the first was that it should be an IDE which supported coding "flow" -- in the sense of driving a car.
2012-04-18 03:09:19 UTC <mgsloan> right
2012-04-18 03:09:36 UTC <tgeeky> the second was deriving, like newtype deriving, but more generally the idea of getting out more than you expected
2012-04-18 03:10:02 UTC <tgeeky> mgsloan: the third was on an acronym level: I named it a "macronym" in my notes (macro + acronym).
2012-04-18 03:10:12 UTC <tgeeky> rive is a cool word (which I didn't know, nobody knows, few people use)
2012-04-18 03:10:56 UTC <tgeeky> but the letters themselves are supposed to be a type (or type family, or something -- a reserved capital word in haskell -- RIVE)
2012-04-18 03:11:30 UTC <tgeeky> the long and short was to get a play-on-letters thing going on
2012-04-18 03:13:02 UTC <tgeeky> (for example, what's his name's conduit)
2012-04-18 03:13:30 UTC <tgeeky> R -> RIVE -> R i v e R
2012-04-18 03:13:44 UTC <tgeeky> where i is an injector, e is an extractor, v is a conduit
2012-04-18 03:14:31 UTC <tgeeky> this is supposed to be an example of what you could do, if you "took over" some of the allowed namespace in Haskell (say, all caps types) or something.
2012-04-18 03:14:49 UTC <tgeeky> mostly nonsense. anyway, to notes.
2012-04-18 03:15:48 UTC <tgeeky> mgsloan: actually, it's hard to describe what I want for a few reasons -- I am pretty sure it's not legal haskell syntax, even if I imagine I want to take over namespaces.
2012-04-18 03:16:07 UTC <tgeeky> but also because I never had a template for how to generate what I want to see in TH. But thanks to you, now I do :O
2012-04-18 03:16:31 UTC <mgsloan> interesting!  I like using plays on words / letters for names! (as you can probably tell by "rex", "plumbers", "lenq")
2012-04-18 03:16:57 UTC <mgsloan> by taking over namespaces do you mean like local imports?
2012-04-18 03:17:03 UTC <mgsloan> this is something I've wanted for haskell for a while
2012-04-18 03:17:26 UTC <mgsloan> the idea is that you'd do this at the top:
2012-04-18 03:17:27 UTC <mgsloan> import MyFunkyDSL as Funk
2012-04-18 03:17:31 UTC <mgsloan> (qualified)
2012-04-18 03:17:43 UTC <tgeeky> mgsloan: no, I mean specifically forbidding any hackage namespace like [A, AA, AAA, AAAA, AAAAA] for all letters
2012-04-18 03:18:08 UTC <tgeeky> and then "returning" that capability to the computer to automatically do things for you
2012-04-18 03:18:39 UTC <mgsloan> then, later, you do "foobar = f . g $ z where import Funk"
2012-04-18 03:18:55 UTC <mgsloan> and Funk has some different, funky definitions for . and $
2012-04-18 03:18:56 UTC <tgeeky> mgsloan: oh, that is really local.
2012-04-18 03:19:09 UTC <tgeeky> mgsloan: that seems really hard to do...
2012-04-18 03:19:16 UTC <mgsloan> really? I don't think so.
2012-04-18 03:19:27 UTC <mgsloan> I started writing an extension to GHC to do so
2012-04-18 03:19:27 UTC <tgeeky> mgsloan: I don't mean technically to pull it off, I mean, to use it often
2012-04-18 03:19:32 UTC <mgsloan> ah gotcha
2012-04-18 03:19:51 UTC <tgeeky> mgsloan: my guess on how to approach this is to imagine "derivative Preludes"
2012-04-18 03:20:20 UTC <mgsloan> tgeeky: if you haven't seen it already, you might be interested in this post http://www.mgsloan.com/wordpress/?p=219
2012-04-18 03:20:24 UTC <mgsloan> password = pass
2012-04-18 03:21:20 UTC <mgsloan> On topic of diagrams, we need to do a diagrams backend for this, STAT http://ittc.ku.edu/csdl/fpg/Tools/BlankCanvas
2012-04-18 03:21:35 UTC <tgeeky> mgsloan: byorgey already mentioned it, that Andy has diagrams backend in mind
2012-04-18 03:21:43 UTC <mgsloan> cool, great
2012-04-18 03:21:47 UTC <mgsloan> I've thought about this idea too
2012-04-18 03:21:49 UTC <tgeeky> (he was guessing)
2012-04-18 03:22:09 UTC <mgsloan> particularly interesting is if we can do cacheing in diagrams trees
2012-04-18 03:22:37 UTC <tgeeky> mgsloan: so, first of all, let me hazard a guess. For any approach to what we're discussing (delta modules, derivative Preludes)
2012-04-18 03:22:49 UTC <mgsloan> then, we could do super-imposed canvases, and do partial updates / move things without redrawing contents etc
2012-04-18 03:22:50 UTC <tgeeky> to be successful, we're probably going to have a transform that does something like:
2012-04-18 03:23:37 UTC <tgeeky> Module :: ([Imports],[Functions],[Pragmas],...)
2012-04-18 03:24:41 UTC <mgsloan> well TH represents this as something like Module = Module Name [Imports] [Dec] orso
2012-04-18 03:24:55 UTC <tgeeky> mgsloan: well, let me think outside of haskell
2012-04-18 03:25:03 UTC <mgsloan> alright
2012-04-18 03:25:19 UTC <tgeeky> you have a file, and you can get a hash of its contents as a whole, but what you really want (for derivative parsing) is the file's "partial derivative"
2012-04-18 03:26:08 UTC <tgeeky> which means you want to break out all of the "blocks" (say, top-level decls seperated by \n\n\n or something)
2012-04-18 03:26:17 UTC <tgeeky> so that you can get hashes of every single function
2012-04-18 03:26:39 UTC <tgeeky> but keep all of the things that need to be local (instance declerations) and ordered (like pattern matching) inside these things
2012-04-18 03:26:59 UTC <tgeeky> when you're done, you'll have a set of things that you *can* reorder, to the extent that the module will still compile
2012-04-18 03:27:13 UTC <tgeeky> that is, you have the imports and module decl first, and then functions later
2012-04-18 03:27:38 UTC <tgeeky> you don't need to inspect the code at all, we're just doing transforms that take whitespace to whitespace
2012-04-18 03:28:02 UTC <tgeeky> mgsloan: ok so far?
2012-04-18 03:29:27 UTC <mgsloan> mostly ok!  the transforms also take top level orderings to top level orderings, right? why do instances need to be 'local'?
2012-04-18 03:29:50 UTC <tgeeky> mgsloan: well, deriving (...) is local, but standalone deriving isn't
2012-04-18 03:30:11 UTC <mgsloan> ahhhh
2012-04-18 03:30:14 UTC <tgeeky> so I was imagining "picking" the choice to make standalone deriving a seperate block from a regular function block
2012-04-18 03:30:19 UTC <tgeeky> instead of "going the other way"
2012-04-18 03:30:23 UTC <mgsloan> so you're saying that these are the things that we can extract into a new module
2012-04-18 03:30:39 UTC <tgeeky> mgsloan: well, even better
2012-04-18 03:30:49 UTC <tgeeky> if we have a DCVS behind us, then we have a trick up our sleeves
2012-04-18 03:30:56 UTC <tgeeky> we know for a fact that we can store the small bit of text
2012-04-18 03:30:59 UTC <tgeeky> in a file by tiself
2012-04-18 03:31:04 UTC <tgeeky> itself, without a module decleration
2012-04-18 03:31:11 UTC <tgeeky> and we'll get the same hash, if we choose to use the same hash
2012-04-18 03:31:42 UTC <mgsloan> even though it's not the same hash?
2012-04-18 03:31:51 UTC <mgsloan> (wouldn't have the same hash)
2012-04-18 03:31:54 UTC <tgeeky> so you give me a git repo with 3 haskell files in it
2012-04-18 03:32:02 UTC <tgeeky> i will have 3 SHA1 or whatever hashse associated with them
2012-04-18 03:33:16 UTC <tgeeky> but we could scan the three haskell files, dump out every block into a (new, for cleanliness) git repository, and have all the internal hashes of the functions
2012-04-18 03:33:57 UTC <tgeeky> that is, you have 4 lines for foo, 8 lines for bar, 6 lines for blah functions in a single file, -> 3 new files, 3 new hashes
2012-04-18 03:34:23 UTC <mgsloan> right.   So what does this buy us?  Somewhat more semantic diffs I suppose
2012-04-18 03:34:35 UTC <tgeeky> mgsloan: we can always know when we need to recompile
2012-04-18 03:34:39 UTC <tgeeky> if git status says we have something to add
2012-04-18 03:36:04 UTC <tgeeky> mgsloan: I think the main thing you get is a seperation of the (module, import, pragma) cruft from the functions
2012-04-18 03:37:23 UTC <tgeeky> mgsloan: but, the real final point is that this process is recursive
2012-04-18 03:37:32 UTC <mgsloan> Cool!!  you can do faster queries for things like "did any of the dependencies of this function change between version X and Y?"
2012-04-18 03:37:59 UTC <mgsloan> and have this actually be fine grained query
2012-04-18 03:38:10 UTC <tgeeky> mgsloan: if you were really smart, you could even have diffs which recognized/ignored functions with different labels when they are the same function
2012-04-18 03:38:14 UTC <mgsloan> especially if you cache dependency representations
2012-04-18 03:38:29 UTC <tgeeky> mgsloan: but this "should be" recursive
2012-04-18 03:38:53 UTC <mgsloan> such smartness is what's necessary for automating generation of delta modules
2012-04-18 03:39:22 UTC <mgsloan> so, we've got two repositories now: the fine grained build / query repo, and the public repo
2012-04-18 03:39:23 UTC <tgeeky> mgsloan: another interesting idea, recently acquired, from the book "Code Simplicity"
2012-04-18 03:40:09 UTC <tgeeky> is that there might be a natural "observable" (forgive my physics word) here -- namely, the number of permutations of functions in a module
2012-04-18 03:41:17 UTC <tgeeky> mgsloan: when I last talked about this stuff (with luite), I was arguing that there should be some "canonical whitespacing form"
2012-04-18 03:41:22 UTC <tgeeky> for this whole process
2012-04-18 03:41:57 UTC <mgsloan> seems reasonable - just parse with haskell-src-exts non-annotated and prettyprint
2012-04-18 03:42:00 UTC <tgeeky> so imagine you get a random peice of (supposedly good) haskell code off the net
2012-04-18 03:42:17 UTC <tgeeky> and you want to do what we are talking about, *and* you want to automatically do the "document tensor" idea
2012-04-18 03:42:30 UTC <mgsloan> yup
2012-04-18 03:42:43 UTC <tgeeky> so, some transforms you might want to do (watch out, these have to be in order!)
2012-04-18 03:42:50 UTC <mgsloan> and type explanations, and structure editing
2012-04-18 03:42:50 UTC <tgeeky> s/\n/\n\n/ -- double space
2012-04-18 03:42:59 UTC <mgsloan> (really got my work cut out for me! lol..)
2012-04-18 03:43:32 UTC <tgeeky> s/\n\n\n/< something complicated here> -- if we already had double spacing, then we were at a block
2012-04-18 03:43:48 UTC <tgeeky> then, map over the blocks with something like
2012-04-18 03:44:31 UTC <tgeeky> s/(/ ( /
2012-04-18 03:44:40 UTC <tgeeky> err, that's wrong
2012-04-18 03:44:56 UTC <mgsloan> I think you've gotta somewhat parse the comments / indentation to isolate blocks
2012-04-18 03:45:31 UTC <tgeeky> mgsloan: yep, that is crucial.
2012-04-18 03:45:42 UTC <tgeeky> mgsloan: it's blasphemeous in most languages, but we have to parse the comments.
2012-04-18 03:46:04 UTC <mgsloan> yeah.. Haskell's got hierarchical {-, right?
2012-04-18 03:46:16 UTC <tgeeky> I don't know. I hate those kinds of comments anyway :O
2012-04-18 03:46:37 UTC <tgeeky> mgsloan: but here you go
2012-04-18 03:46:40 UTC <tgeeky> here's an obvious thing
2012-04-18 03:47:11 UTC <tgeeky> nm that
2012-04-18 03:47:13 UTC <tgeeky> enough pie in the sky stuff
2012-04-18 03:47:15 UTC <tgeeky> hehe
2012-04-18 03:47:20 UTC <tgeeky> NOTES, technogeeky
2012-04-18 03:47:32 UTC <tgeeky> mgsloan: btw, did you see Tron: Legacy? and what do you think of the ambience of it, if so?
2012-04-18 03:49:34 UTC <mgsloan> I did!  I thought it had a pretty awesome visual style
2012-04-18 03:49:50 UTC <mgsloan> retro simplicity
2012-04-18 03:50:14 UTC <tgeeky> mgsloan: oh, back to pie-in-the sky
2012-04-18 03:50:20 UTC <tgeeky> mgsloan: here's another transform I want to do:
2012-04-18 03:50:34 UTC <tgeeky> assume, for a moment that every toplevel annotation has a type signature
2012-04-18 03:50:42 UTC <tgeeky> and that they are always appropriately above the functions
2012-04-18 03:51:09 UTC <tgeeky> split them off into a single block, at the top of the file
2012-04-18 03:52:59 UTC <tgeeky> allow the user to reorder these freely (and we may do so automatically for the user)
2012-04-18 03:53:11 UTC <tgeeky> so that things with similar types are groupd
2012-04-18 03:53:28 UTC <tgeeky> but! press a single button, and presto, they all go back to above their proper function
2012-04-18 03:53:40 UTC <tgeeky> and we can be totally sure, 100%
2012-04-18 03:54:15 UTC <tgeeky> that this didn't affect how ghc will compile the file exactly the same way, because we're re-ordering things whose order doesn't matter at all (toplevel ones only)
2012-04-18 03:54:33 UTC <tgeeky> (if everything I said makes sense and is correct, etc etc)
2012-04-18 03:55:44 UTC <tgeeky> (we're only re-ordering the top-level type signatures, and we can order them anywhere in the file after the module/import, and we can re-order them among themselves.
2012-04-18 03:55:57 UTC <tgeeky> let me find my horrible example, then i'll go take my dog out
2012-04-18 03:57:08 UTC <mgsloan> that's a cool idea!  I do find the type-annotations-next-to-declarations a little annoying
2012-04-18 03:57:40 UTC <mgsloan> I think my type-vis stuff will do this task well (if I or someone gets around to it..)
2012-04-18 03:57:40 UTC <tgeeky> mgsloan: but it's also a chance to... actually store, in memory and on disk, lots of combinatorical variations of your source
2012-04-18 03:57:57 UTC <tgeeky> - a c, there
2012-04-18 03:58:12 UTC <mgsloan> it'll hopefully be able to show you all of the functions that could potentially provide an argument for a particular function, etc
2012-04-18 03:58:14 UTC <tgeeky> mgsloan: for instance, the process of indexing for Hoogle or Hayoo (or both) could be dramatically reduced
2012-04-18 03:58:22 UTC <mgsloan> and so, depict the graph of types within a module
2012-04-18 03:58:38 UTC <mgsloan> where edges are "this parameter is compatible with this result"
2012-04-18 03:58:40 UTC <tgeeky> if you can have these typesig blocks sitting around
2012-04-18 03:59:15 UTC <mgsloan> yup!
2012-04-18 03:59:26 UTC <mgsloan> so for each block, three files:  sig, code, and dependencies
2012-04-18 03:59:45 UTC <tgeeky> mgsloan: yeah, so we're paying a bit of a price of a combinatorial expansion here.
2012-04-18 03:59:56 UTC <tgeeky> On the other hand, we know these files will be small, and we'll have SHA hashes (which are a little costly)
2012-04-18 04:00:00 UTC <mgsloan> where does the combinatorial explosion come from?
2012-04-18 04:00:03 UTC <tgeeky> but in a very general way
2012-04-18 04:00:10 UTC <mgsloan> we aren't actually serializing the different orderings, right?
2012-04-18 04:00:13 UTC <tgeeky> well, the number of files is going to grow a lot
2012-04-18 04:00:41 UTC <tgeeky> mgsloan: you can serialize it to memory and keep the hash, or serialze it to disk
2012-04-18 04:01:00 UTC <tgeeky> mgsloan: <aside> the "whole point" as I understood the partial isomorphisms / invertible syntax
2012-04-18 04:01:03 UTC <mgsloan> ah, gotcha
2012-04-18 04:01:08 UTC <tgeeky> mgsloan: is that serializers are the wrong thing
2012-04-18 04:01:22 UTC <tgeeky> mgsloan: you're using a serializer, because you don't have a <parser|printer>
2012-04-18 04:01:47 UTC <tgeeky> if you just had a <parser|printer>, you could totally ignore the details of representation
2012-04-18 04:01:48 UTC <mgsloan> sure, that's something I've believed for a long time
2012-04-18 04:02:05 UTC <tgeeky> ok, no time to find the pic for the moment, must walk dog.
2012-04-18 04:02:06 UTC <tgeeky> bbiaf
2012-04-18 04:02:08 UTC <mgsloan> well, the details of representation are very wrapped up in the parser part
2012-04-18 04:02:11 UTC <tgeeky> don't go nowhere :o
2012-04-18 04:02:21 UTC <mgsloan> haha, I actually probably will disappear soon
2012-04-18 04:02:27 UTC <mgsloan> but I'll be back in an hour or two
2012-04-18 04:02:34 UTC <tgeeky> mgsloan: nope! the parser will always be getting the most compressed version possible (least amount of whitespace)
2012-04-18 04:02:37 UTC <mgsloan> (heading home)
2012-04-18 04:02:45 UTC <tgeeky> mgsloan: ok. two hours to go home? Yikes!
2012-04-18 04:03:13 UTC <mgsloan> haha, actually 10 minutes, but I'm getting some dinner and such too
2012-04-18 04:32:01 UTC <tgeeky> mgsloan: by the way
2012-04-18 04:32:11 UTC <tgeeky> mgsloan: the biggest reason that you want those hashes?
2012-04-18 04:32:43 UTC <tgeeky> module Data.Maybe.V0_1_0  ==> Data.Maybe.<SHA1>
2012-04-18 04:33:20 UTC <tgeeky> why? If we are explicitly versioning, we don't really want our user thinking about versions (the same goes with cabal, in which this is impossible)
2012-04-18 04:33:29 UTC <tgeeky> that is, the downloader of code.
2012-04-18 04:33:39 UTC <tgeeky> but secondly, versioning implies ordering.
2012-04-18 04:33:53 UTC <tgeeky> or at least, the way we use it does...
2012-04-18 04:33:53 UTC <mgsloan> ah, interesting!  the problem with that is that it somewhat implies that all of the past variants are being compiled with the current
2012-04-18 04:34:14 UTC <tgeeky> mgsloan: what if the purpose of a module
2012-04-18 04:34:17 UTC <mgsloan> the delta modules encode the refactorings needed to target the new version, and not the old code
2012-04-18 04:34:30 UTC <tgeeky> is to demonstrate how some algorithim can be done in several different ways
2012-04-18 04:34:51 UTC <tgeeky> (my example here is Enumarats Pearl)
2012-04-18 04:34:59 UTC <tgeeky> http://www.cs.ox.ac.uk/jeremy.gibbons/publications/rationals.pdf
2012-04-18 04:35:12 UTC <tgeeky> there are literally 15 different versions of the rational numbers in there
2012-04-18 04:38:56 UTC <tgeeky> I might be doubling or so.
2012-04-18 04:38:56 UTC <mgsloan> interesting!
2012-04-18 04:38:56 UTC <tgeeky> and we want this kind of module more often than one would think
2012-04-18 04:38:56 UTC <tgeeky> (and!!!)
2012-04-18 04:38:56 UTC <tgeeky> such things don't add to the measure I listed above
2012-04-18 04:38:56 UTC <tgeeky> (at least, they add in a different way)
2012-04-18 04:38:56 UTC <tgeeky> see what I mean?
2012-04-18 04:38:56 UTC <tgeeky> 10 copies of "the same function" contribute "1" to a measure which is counting the reorderings of the blocks of functions.
2012-04-18 04:39:09 UTC <tgeeky> mgsloan: no, I am usually scared of TH stuff for some reason.
2012-04-18 04:39:31 UTC <tgeeky> I think it's the idea that TH and haskell-src(-meta)? didn't seem to be keeping up with the times
2012-04-18 04:39:38 UTC <tgeeky> in terms of papers / tutorials
2012-04-18 04:39:42 UTC <mgsloan> yeah, I don't get how that happened
2012-04-18 04:39:56 UTC <tgeeky> well I don't even know if it's a correct feeling or not, and I'm guessing it's not.
2012-04-18 04:40:00 UTC <mgsloan> I think it's because its docs are very monolithic
2012-04-18 04:43:07 UTC <mgsloan> from my perspective, it's not that awful of a system
2012-04-18 04:43:07 UTC <tgeeky> mgsloan: and don't even get me started what this scheme has to offer the way documentation of code is done
2012-04-18 04:43:07 UTC <tgeeky> it's not even funny
2012-04-18 04:43:07 UTC <mgsloan> AST manipulation is tricky, yeah, we can't expect to abstract that problem
2012-04-18 04:43:07 UTC <tgeeky> byorgey: luite: mgsloan: what do people mean when they say TH is untyped?
2012-04-18 04:43:07 UTC <tgeeky> It's surely *type checked*, right?
2012-04-18 04:43:07 UTC <mgsloan> sure, people complain that you can't write TH such that you're sure that the outputted AST is code that typechecks
2012-04-18 04:43:07 UTC <tgeeky> i mean, if you're generating haskell code (and extracting it with zero-th), then you can run ghc --make on it, and have your answer, right?
2012-04-18 04:43:07 UTC <mgsloan> it's certainly possible in theory - I think ?Ometa? does this
2012-04-18 04:43:07 UTC <tgeeky> screw theory :o
2012-04-18 04:46:56 UTC <tgeeky> mgsloan: by the way, I did not actually read through this blog post yet, I had only gleaned from the code snippets things...
2012-04-18 04:46:56 UTC <tgeeky> let me read it more carefully
2012-04-18 04:55:33 UTC <mgsloan> that flexible-defaults stuff is interesting because it has a concept of the "cost" of different implementations
2012-04-18 04:57:02 UTC <mgsloan> it'd be cool to have that interact with ghc's optimizations - in some cases REWRITE rules might justify the usage of a more naive implementation
2012-04-18 04:57:02 UTC <mgsloan> tgeeky: I'd appreciate any feedback!  I think I will be splitting it into multiple posts
2012-04-18 04:57:02 UTC <mgsloan> the question is how to convince people that it's a good idea without explaining every single last ramification that I can see
2012-04-18 04:57:12 UTC <tgeeky> yikes. one of us is lagging
2012-04-18 04:57:21 UTC <tgeeky> hmm
2012-04-18 04:57:46 UTC <mgsloan> well, my response time is due to distractions
2012-04-18 04:57:59 UTC <tgeeky> mgsloan: nono, it was the fact that it 3 messages at once
2012-04-18 04:58:06 UTC <tgeeky> in very fast sequence
2012-04-18 04:58:12 UTC <tgeeky> unless your client is splitting up things in a smart way
2012-04-18 04:58:14 UTC <mgsloan> ah, gotcha
2012-04-18 04:58:18 UTC <mgsloan> doubtful
2012-04-18 04:59:26 UTC <tgeeky> mgsloan: this is really, truly bizarre how closely aligned the trajectory of our thought is... you have the courage to poke around more than I do
2012-04-18 04:59:43 UTC <mgsloan> So, the question is how to make this idea actually happen.  I could turn it into a call-to-arms, and try to start the projects for generating / applying delta modules
2012-04-18 04:59:54 UTC <tgeeky> (I hadn't really read any of this until now.. you already thought of and solved several of the things I had tried to work on :o)
2012-04-18 04:59:59 UTC <tgeeky> no
2012-04-18 05:00:02 UTC <tgeeky> you and I can take it on
2012-04-18 05:00:06 UTC <mgsloan> tgeeky: :D thanks!
2012-04-18 05:00:19 UTC <tgeeky> mgsloan: I mean, though... seriously. It is spooky.
2012-04-18 05:01:18 UTC <mgsloan> hehe, good to hear that you agree!  It really is the infrastructure we need
2012-04-18 05:01:43 UTC <tgeeky> mgsloan: there's also this pattern of "write and erase"
2012-04-18 05:01:47 UTC <tgeeky> that's going on here, in my mind
2012-04-18 05:01:56 UTC <tgeeky> sitting down, imaging your perfect IDE environment in your head
2012-04-18 05:02:17 UTC <tgeeky> one the one hand, you need versioning like you describe, so you do it -- as you describe.
2012-04-18 05:02:36 UTC <tgeeky> On the other hand, you don't want the user to think about the versions in order to get code to compile, so you need to keep the versioning, but hide it effectively.
2012-04-18 05:03:16 UTC <tgeeky> And then, you really want to require totally explicit exports (for each V_._._)
2012-04-18 05:03:42 UTC <mgsloan> yup!
2012-04-18 05:03:51 UTC <tgeeky> but then again, you really want to present the user with the just the differences between them
2012-04-18 05:03:56 UTC <tgeeky> so you want to hide it
2012-04-18 05:04:07 UTC <tgeeky> there's this back and forth kind of process going on here
2012-04-18 05:05:03 UTC <tgeeky> mgsloan: I think you have to "take over" versioning from the user, somehow.
2012-04-18 05:05:50 UTC <mgsloan> yeah, the thought process of "this sucks and is annoying, there must be a better thing..." into daydreaming about that better thing is most of what makes me do this stuff
2012-04-18 05:06:13 UTC <tgeeky> argument pro: there is an abundancy of versioning schemes on hackage, but it's really hard to trust people's judgements of "1.0", so the most useful ones are the date-versioning ones (2009.mm.dd.blahablah) because at least they tell you immediately when this line of questioning was started.
2012-04-18 05:06:15 UTC <mgsloan> I don't think Haskellers will like having their versioning taken over :)
2012-04-18 05:06:34 UTC <tgeeky> mgsloan: well, I think I have a trick of sorts.
2012-04-18 05:06:49 UTC <tgeeky> well, maybe a few.
2012-04-18 05:07:03 UTC <mgsloan> what I like about this scheme is that it forces you to think about API differences
2012-04-18 05:07:10 UTC <mgsloan> and express them
2012-04-18 05:07:24 UTC <tgeeky> 1: add <p|p> for numbers of the form ([\d].)^n
2012-04-18 05:07:31 UTC <mgsloan> rather than leaving them as un-defined package meta-information
2012-04-18 05:07:37 UTC <tgeeky> and then codify the known versioning schemes that are out there
2012-04-18 05:07:47 UTC <tgeeky> mgsloan: yes, that is a plus.
2012-04-18 05:08:05 UTC <tgeeky> mgsloan: afer you codify the schemes that are out there, when a person creates a new package: list the versioning scheme options
2012-04-18 05:08:27 UTC <tgeeky> things that don't adhere any scheme, will have to reversion into it
2012-04-18 05:08:51 UTC <mgsloan> hmm, so more rigorous adherence to particular numbering schemes?
2012-04-18 05:09:04 UTC <tgeeky> mgsloan: sure. people have gone out of their way to codify it
2012-04-18 05:09:17 UTC <tgeeky> http://semver.org/
2012-04-18 05:09:56 UTC <tgeeky> mgsloan: but here's a really nasty trick, you ready?
2012-04-18 05:10:43 UTC <tgeeky> mgsloan: increment the version numbers with a modulo (2? 3? not sure which), make the act of compilation a +0.0.1 to the versioning
2012-04-18 05:10:57 UTC <mgsloan> semver seems very close to PVP
2012-04-18 05:11:14 UTC <mgsloan> except the PVP leaves the A in A.B.C.D to the user
2012-04-18 05:11:18 UTC <tgeeky> I don't know if this idea is useless, or brilliant.
2012-04-18 05:12:02 UTC <tgeeky> mgsloan: this is even worse/more dogmatic than it was before."
2012-04-18 05:12:08 UTC <tgeeky> s/"//
2012-04-18 05:12:31 UTC <mgsloan> hmm, not sure I understand the point!
2012-04-18 05:13:02 UTC <mgsloan> ohhh I get it
2012-04-18 05:13:06 UTC <tgeeky> mgsloan: if you totally take over the versioning (or part of it)
2012-04-18 05:13:21 UTC <tgeeky> you can make the version into a little cyclic "state machine" or however you'd want to think about it
2012-04-18 05:13:23 UTC <mgsloan> so you end up with a lot of unique version ids
2012-04-18 05:13:37 UTC <mgsloan> that aren't tied to versioning
2012-04-18 05:13:40 UTC <tgeeky> mgsloan: yes, but the simplest modulus you could do is 2 (even/odd)
2012-04-18 05:13:44 UTC <tgeeky> agreed?
2012-04-18 05:13:47 UTC <tgeeky> if you're going to modulo something
2012-04-18 05:13:58 UTC <tgeeky> Z/2Z.
2012-04-18 05:14:01 UTC <mgsloan> sure
2012-04-18 05:14:17 UTC <tgeeky> people can write even version numbers, but only things that have succesfully compiled can get incremented
2012-04-18 05:14:51 UTC <tgeeky> so you have a filter to get (successfully compilable) code from unsuccesfully compilable code
2012-04-18 05:15:06 UTC <tgeeky> does that make sense?
2012-04-18 05:15:34 UTC <tgeeky> it actually makes more sense if you're more general...
2012-04-18 05:15:45 UTC <tgeeky> imagine that there are 7 stages of GHC compilation or something... that we have to go through
2012-04-18 05:16:31 UTC <mgsloan> hmm, makes some sense.  It seems weird to me to conflate code status and version numbers, though
2012-04-18 05:16:51 UTC <tgeeky> mgsloan: ok, so let's back up
2012-04-18 05:16:58 UTC <tgeeky> if you're sitting there and you're mr. shiny GHC pro
2012-04-18 05:17:05 UTC <tgeeky> you might be interestred in tracking what happens to a function
2012-04-18 05:18:05 UTC <tgeeky> in: template haskell form, haskell code form, intermediate GHC form, core form, .o, asm, etc
2012-04-18 05:18:45 UTC <tgeeky> so the file in question is currently 0.1.4
2012-04-18 05:19:43 UTC <tgeeky> we can think of identifying each of those with 0.1.4.[2,4,..]
2012-04-18 05:20:03 UTC <mgsloan> ahh, I see.
2012-04-18 05:20:07 UTC <tgeeky> if GHC succeeds in taking them from one step to another, we will get out
2012-04-18 05:20:14 UTC <tgeeky> 0.1.4.[1,3,..]
2012-04-18 05:21:07 UTC <mgsloan> so these are module / block versions, not package versions?
2012-04-18 05:21:48 UTC <tgeeky> mgsloan: I'm not sure. I am switching back and forth, so I am not being rigorious enough.
2012-04-18 05:21:55 UTC <tgeeky> but one solution
2012-04-18 05:22:05 UTC <tgeeky> is to take more version "octets"
2012-04-18 05:22:18 UTC <tgeeky> 0.1.4.[SHA of block].[2,4,..]
2012-04-18 05:22:37 UTC <tgeeky> though once you put an SHA block in there, the 0.1.4 part doesn't matter too much :o
2012-04-18 05:23:03 UTC <tgeeky> mgsloan: that said, this plan falls apart because GHC is going to do work over its own module structure, ultiamtely
2012-04-18 05:24:48 UTC <tgeeky> god you write well and a lot
2012-04-18 05:24:51 UTC <mgsloan> my confusion came from having versions for them usually implies that they're on disk.  It does make sense to treat the compiler as if its a programmer, doing manual ports from representation to representation
2012-04-18 05:25:39 UTC <tgeeky> mgsloan: i'm speaking in a fantasy world where having an SHA hash means the magic of DCVS imples you don't need to care where the file comes from
2012-04-18 05:25:59 UTC <tgeeky> for right now
2012-04-18 05:25:59 UTC <mgsloan> tgeeky: thanks!  I'm new to the blog format
2012-04-18 05:26:15 UTC <mgsloan> so they end up more like essays interspersed with code
2012-04-18 05:27:28 UTC <tgeeky> mgsloan: have you read type classopedia?
2012-04-18 05:28:22 UTC <tgeeky> mgsloan: what is the internal format here? markdown?
2012-04-18 05:28:38 UTC <tgeeky> (for your blog, that is)
2012-04-18 05:29:01 UTC <mgsloan> I think I have. may have skimmed it  Haskell's been my favorite language for ~5 yrs. :) Yeah, I can't wait til there's a "show core" tool that gives
2012-04-18 05:29:28 UTC <mgsloan> a view of the core representation for a particular definition
2012-04-18 05:29:57 UTC <mgsloan> while still giving the kinds of code annotations that I want - profiling / type info / etc
2012-04-18 05:30:28 UTC <mgsloan> tools that help you read haskell would help almost doubly for understanding ghc core
2012-04-18 05:30:41 UTC <tgeeky> mgsloan: this is where the combinatorial explosion comes in
2012-04-18 05:30:42 UTC <tgeeky> by the way
2012-04-18 05:31:11 UTC <mgsloan> tgeeky: HTML, unfortunately :(
2012-04-18 05:31:21 UTC <mgsloan> very light usage of HTML, which is why the formatting is a bit wierd
2012-04-18 05:31:45 UTC <mgsloan> I might consider making it a github post
2012-04-18 05:31:51 UTC <mgsloan> that might actually make a lot of sense
2012-04-18 05:32:25 UTC <mgsloan> have a blogpost that links to the more detailed github'd proposal / start of project
2012-04-18 05:32:28 UTC <tgeeky> mgsloan: what we're talking about is a little pool of ghcs, while handling the appropaite flags, in the appropriate order (in the sense of not wasting work -- not in the sense of order on the command line)
2012-04-18 05:33:05 UTC <tgeeky> mgsloan: if you will permit me to blatantly plagarize, I will copy it all into markdown, edit it, merge your notes and my notes and whatnot, split it, and make a project out of it
2012-04-18 05:34:13 UTC <tgeeky> or I can just counter-propose. that would be easier for me, but perhaps less useful for the project.
2012-04-18 05:34:43 UTC <mgsloan> tgeeky: sounds great!
2012-04-18 05:35:42 UTC <mgsloan> on the topic of a pool of multiple ghcs, imagine making this a distributed build system
2012-04-18 05:36:27 UTC <tgeeky> mgsloan: I have a 3rd party github, and two domain names (and will probably get another) -- www.d-rive.org and www.d-rive.info (and www.d-river.org)
2012-04-18 05:36:29 UTC <tgeeky> mgsloan: hehe, like I said, if you use SHA1, it already is
2012-04-18 05:36:43 UTC <mgsloan> I guess that's exactly what you're proposing.  So, if someone has built a particular block before, we also have the versioned object file.
2012-04-18 05:36:54 UTC <mgsloan> or versioned "representation of GHC intermediate state"
2012-04-18 05:37:46 UTC <tgeeky> mgsloan: the trick is getting code into that "canonical form" where (as you and I suggsted), you control the naming of things (which works well for types, but not so much for code) -- I am also up for *horribly* controlling the *spacing* of things
2012-04-18 05:40:30 UTC <mgsloan> I think it would be best to not touch user code too much.
2012-04-18 05:40:39 UTC <tgeeky> mgsloan: hehe! remember!
2012-04-18 05:40:52 UTC <mgsloan> yeah, these are in the post-process blocks
2012-04-18 05:40:53 UTC <tgeeky> spacing is supposed to be, by GHC rules, an idempodent
2012-04-18 05:41:02 UTC <tgeeky> mgsloan: oh, no, just spacing if the initial code
2012-04-18 05:41:14 UTC <tgeeky> anything you can pretty print
2012-04-18 05:42:24 UTC <tgeeky> mgsloan: did you answer re: typeclassopedia?
2012-04-18 05:42:25 UTC <mgsloan> yup!  I also came to this idea too when working on the program that wanted to be able to be able to get as efficient of recompilation of edited code
2012-04-18 05:43:15 UTC <tgeeky> mgsloan: my physics background might come in handy here when modelling this
2012-04-18 05:43:22 UTC <tgeeky> I think I might have a pretty wicked solution
2012-04-18 05:43:43 UTC <mgsloan> tgeeky: yup, I have read it!
2012-04-18 05:44:50 UTC <mgsloan> have you been following ekmett's set of typeclasses?
2012-04-18 05:45:09 UTC <tgeeky> no, I always feel it's too above my head. :o
2012-04-18 05:45:14 UTC <tgeeky> i read it, and admire some parts of it
2012-04-18 05:45:22 UTC <tgeeky> but I don't get most of it
2012-04-18 05:47:36 UTC <mgsloan> yeah, I don't get a lot of em, but a lot of them are pretty well designed, apart from perhaps the obtuseness of naming
2012-04-18 05:47:48 UTC <tgeeky> mgsloan: reading the last of your post... pretty pleasing.
2012-04-18 05:49:27 UTC <mgsloan> Haha, yeah the first two paragraphs are right on topic!
2012-04-18 05:49:33 UTC <tgeeky> I think there is a good argument that these are exactly the kind of "over-arching" problems that stand in front of Haskell adoption. The fact that you can get started already with a GHC extension (recent feature?) is just a handle which can grab to proceed far enough to offer a red pill, to swallow.
2012-04-18 05:52:07 UTC <tgeeky> mgsloan: perhaps surprising, but I think a key aspect of these kind of ambitious projets is to get far enough along (beyond concepts, into code) is to have so many positives as to overwhelm the few issues that you're going to stick them with (playing with their versioning, playing with their whitespace)
2012-04-18 05:52:12 UTC <tgeeky> or whatever.
2012-04-18 05:52:41 UTC <tgeeky> mgsloan: hopefully we can get someone to employ us, or we can do something to get paid to do this :O
2012-04-18 05:53:20 UTC <mgsloan> hmm, so each feature is additional cognitive overhead?
2012-04-18 05:53:41 UTC <tgeeky> mgsloan: no, no, I wasn't trying to lay it out like that
2012-04-18 05:54:25 UTC <mgsloan> I do agree, though, that removing all of the little sticking points will help haskell's community velocity a lot
2012-04-18 05:55:03 UTC <tgeeky> for instance... everyone feels like they know what's best for versioning.
2012-04-18 06:01:00 UTC <tgeeky> umm.. see multiplate docs, page 7, section 2.5
2012-04-18 06:01:34 UTC <tgeeky> nope
2012-04-18 06:01:35 UTC <tgeeky> wrong paper lol
2012-04-18 06:02:02 UTC <tgeeky> nevermind, you're already using type families.
2012-04-18 06:02:36 UTC <mgsloan> I have some ideas for doing micro-scale versioning, not wholly my own.  http://hal.inria.fr/inria-00445975/PDF/icdcs09-treedoc.pdf
2012-04-18 06:03:49 UTC <mgsloan> The idea is to store enough meta-data about your document that merge is asymptotically cheap
2012-04-18 06:03:51 UTC <tgeeky> mgsloan: interesting. I think I commented (I know I thought...) above... what I'm discussing is almost certainly non-commutative
2012-04-18 06:04:19 UTC <mgsloan> certainly
2012-04-18 06:04:35 UTC <tgeeky> actually, it maybe as simple as:
2012-04-18 06:05:05 UTC <tgeeky> if you use matching regexes, or s/<..>//, then you have a chance at keeping commutivity
2012-04-18 06:06:05 UTC <tgeeky> but if you use substitution regexes s/(<..>)/.../, then the order in which you apply them will matter
2012-04-18 06:06:24 UTC <tgeeky> the overall result might be commutative, but the process won't be
2012-04-18 06:06:31 UTC <tgeeky> but hey, no biggie.
2012-04-18 06:06:38 UTC <tgeeky> group theory to the rescue, maybe
2012-04-18 06:07:32 UTC <mgsloan> this paper is saying that users editing a document can be made perfectly commutative
2012-04-18 06:07:42 UTC <tgeeky> mgsloan: here's a picture of something (slightly) gone wrong at the LHC: http://www.cern-watcher.org/archive.php?cmd=image&sfpg=TEhDMS8yMDEyXzA0XzE4LypMSENCRFNfNDoyOjEyLnBuZyo1ZmQ2ZTM5ZDY2NzE1ZDI5YjQzMjA3ZmYwMjY1M2QxZA
2012-04-18 06:08:03 UTC <tgeeky> mgsloan: good! then I'll learn something (one way or the other) by reading it
2012-04-18 06:08:06 UTC <mgsloan> the caveat being that you can't properly represent moves... but I think it should be possible to do moves pretty efficiently
2012-04-18 06:08:09 UTC <tgeeky> since I currently have an educated guess otherwise :)
2012-04-18 06:08:22 UTC <tgeeky> mgsloan: moves? maybe not. n-transpositions, though :O
2012-04-18 06:09:39 UTC <tgeeky> mgsloan: to understand this picture, you need to know: the beam in the machine looks like box #3.
2012-04-18 06:10:12 UTC <tgeeky> when it's *dumped* out of the machine, the particles are "diluted" by expanding them out in a helical pattern
2012-04-18 06:10:17 UTC <tgeeky> (this is box #4)
2012-04-18 06:10:34 UTC <tgeeky> this process clearly didn't go right for beam 1 :o
2012-04-18 06:11:47 UTC <mgsloan> well, moves such that asynchronous modifications in the middle also get moved.
2012-04-18 06:12:07 UTC <mgsloan> whoah! does that mean they have to decellerate the whole lot?
2012-04-18 06:12:21 UTC <tgeeky> mgsloan: that would be physically impossible
2012-04-18 06:12:34 UTC <tgeeky> they need a ring 27 km in circurmference to accelerate it, after all
2012-04-18 06:12:43 UTC <tgeeky> (and about 30 minutes to do so)
2012-04-18 06:13:05 UTC <tgeeky> + newton's ... 1st? law?
2012-04-18 06:13:26 UTC <tgeeky> no, they shash it into a giant, 40 foot thick block of graphite and iron
2012-04-18 06:13:29 UTC <tgeeky> and then into a few hundred feet of concrete
2012-04-18 06:13:35 UTC <tgeeky> and then into a neutron moderator
2012-04-18 06:13:46 UTC <mgsloan> 0_0
2012-04-18 06:13:50 UTC <tgeeky> but before they could dump
2012-04-18 06:13:53 UTC <tgeeky> that mess on the right had happened
2012-04-18 06:14:03 UTC <tgeeky> this is the result up close:
2012-04-18 06:14:04 UTC <tgeeky> http://i.imgur.com/l9RWN.png
2012-04-18 06:14:20 UTC <tgeeky> Octant 8 houses a very delicate experiment
2012-04-18 06:14:37 UTC <tgeeky> which this graph shows is being absolutely hammered with radiation (~ 25 Gray / s ]
2012-04-18 06:15:32 UTC <tgeeky> that is about 5 times higher than the dose needed to kill a human a week after exposure
2012-04-18 06:15:42 UTC <tgeeky> and the entire detector just got bathed in it
2012-04-18 06:15:48 UTC <tgeeky> (not supposed to happen!)
2012-04-18 06:16:38 UTC <mgsloan> wow, that's pretty ridiculous!
2012-04-18 06:17:52 UTC <mgsloan> so, CERN is really the european laser cannon?
2012-04-18 06:18:00 UTC <tgeeky> yes
2012-04-18 06:18:11 UTC <tgeeky> in fact, the protons in there (which are *certainly* fermions)
2012-04-18 06:18:21 UTC <tgeeky> behave rather like a laser (which is photons, a boson)
2012-04-18 06:18:27 UTC <tgeeky> that is, they have a photon laser
2012-04-18 06:18:28 UTC <tgeeky> of sorts
2012-04-18 06:18:30 UTC <tgeeky> errr
2012-04-18 06:18:34 UTC <tgeeky> *proton* laser, of sorts
2012-04-18 06:18:49 UTC <tgeeky> only it's pointed at itself, so...
2012-04-18 06:18:54 UTC <tgeeky> here are a few more pics:
2012-04-18 06:18:54 UTC <tgeeky> http://imgur.com/a/HJRvs
2012-04-18 06:19:05 UTC <tgeeky> in this diagram ("loss map")
2012-04-18 06:19:13 UTC <tgeeky> the red structures represent protection mechanisms
2012-04-18 06:19:44 UTC <tgeeky> 1st two pictures are rather normal-ish losses (generally doesn't penetrate or get close to any red structure)
2012-04-18 06:20:33 UTC <tgeeky> ugh, i uploaded the wrong ones
2012-04-18 06:20:49 UTC <mgsloan> you work there?
2012-04-18 06:20:49 UTC <tgeeky> those three are normal (and one is a duplicate, cause evidently I can't count)
2012-04-18 06:20:51 UTC <tgeeky> http://imgur.com/a/oTfHe
2012-04-18 06:21:09 UTC <tgeeky> mgsloan: nope, but I have worked with them in the past and have access to internal records
2012-04-18 06:21:30 UTC <tgeeky> so the bottom one you can see
2012-04-18 06:21:38 UTC <tgeeky> is a zoomed out version of the top one
2012-04-18 06:21:46 UTC <tgeeky> and the "normal" ones are zoomed out further still
2012-04-18 06:22:27 UTC <tgeeky> one neat thing that you can't see, is that the little red pixels (which are protection equipment) actually move in this picture (up or down, left or right) in realtime
2012-04-18 06:23:19 UTC <tgeeky> mgsloan: the sold block of red at the top of Octant 7 and the one above Octant 6
2012-04-18 06:23:32 UTC <tgeeky> both represent beam dumps (huge blocks of carbon)
2012-04-18 06:23:51 UTC <tgeeky> *solid
2012-04-18 06:23:58 UTC <mgsloan> sweet! cool stuff to be working with
2012-04-18 06:24:01 UTC <tgeeky> notice, Octant 8 does not have such a protection (because there's an experiment there, instead)
2012-04-18 06:24:40 UTC <tgeeky> mgsloan: also, uhh.. re: my point about peaceful means of R&D
2012-04-18 06:25:10 UTC <mgsloan> true true
2012-04-18 06:25:13 UTC <tgeeky> as we discuss a CERN $20 billion particle smasher over the CERN-invented WWW
2012-04-18 06:25:20 UTC <tgeeky> not that I work for them, or anything. :)
2012-04-18 06:25:46 UTC <tgeeky> mgsloan: (in a country which gets ~ 85% of their power from Nuclear)
2012-04-18 06:25:58 UTC <mgsloan> If we managed to drop $20 billion on PL/SE research, that would be _amazing_
2012-04-18 06:27:25 UTC <mgsloan> (I'm actually pretty morally conflicted as to whether it would be better to spend all of that money on PL/SE and leave physics temporarily less explored)
2012-04-18 06:27:47 UTC <mgsloan> (SE = Software Engineering, in order to capture version control / IDE)
2012-04-18 06:28:46 UTC <tgeeky> PL & SE = programing lang & software eng?
2012-04-18 06:37:35 UTC <mgsloan> yup
2012-04-18 07:03:38 UTC <mgsloan> tgeeky: so I will probably still cleanup & post this, but feel free to also import / use the text!
2012-04-18 07:05:47 UTC <tgeeky> ok. just ping me in here when you make a change, and I'll see what's up
2012-04-18 07:11:00 UTC <mgsloan> alright, I think I'll probably end up putting it up on friday
2012-04-18 07:12:07 UTC <tgeeky> mgsloan: in that case, I'll write a counter to this post and then actually merge after friday
2012-04-18 07:31:05 UTC <alpounet> very interesting discussion guys. thanks
2012-04-18 11:11:09 UTC <TSC> Hello diagrammers!
2012-04-18 11:11:25 UTC <TSC> Can any of the backends calculate the size of a text item?
2012-04-18 11:36:08 UTC <mgsloan1> TSC: Yes! However, it uses unsafePerformIO
2012-04-18 11:37:01 UTC <mgsloan1> http://hackage.haskell.org/packages/archive/diagrams-cairo/0.5.0.1/doc/html/Diagrams-Backend-Cairo-Text.html
2012-04-18 11:37:03 UTC <mgsloan1> well, can
2012-04-18 11:40:42 UTC <TSC> Ah, very nice
2012-04-18 11:41:00 UTC <TSC> I just got it going with LaTeX too so I can use it with the TikZ backend:
2012-04-18 11:41:23 UTC <TSC> calculateDimensions "$\\frac{x^y}{2}$"
2012-04-18 11:41:23 UTC <TSC> (11.26692,9.10788,3.44841)
2012-04-18 11:52:31 UTC <mgsloan1> cool!!
2012-04-18 11:55:06 UTC <TSC> Yes, I hope I can get it working neatly with the rest of the diagrams stuff
2012-04-18 13:51:15 UTC <byorgey> TSC: also, sadly there isn't (yet) a nice way to draw arrows
2012-04-18 13:51:23 UTC <byorgey> TSC: but it's definitely on the list of planned features
2012-04-18 13:52:29 UTC <TSC> That's a shame, because TikZ has lots of arrow support, so it is easy to do on the backend
2012-04-18 13:54:11 UTC <byorgey> TSC: well, you are welcome to add some TikZ-backend-specific arrow primitives!
2012-04-18 13:54:28 UTC <byorgey> just export them from the diagrams-tikz package itself
2012-04-18 13:54:47 UTC <TSC> Yeah, I thought I might do that, at least for my own use at first
2012-04-18 13:55:31 UTC <byorgey> the arrow support that I intend to add would be in terms of existing stuff anyway, so it wouldn't be able to take advantage of backends with specific arrow support
2012-04-18 13:55:58 UTC <byorgey> so special TikZ arrow support could still be nice even once diagrams has more general support for arrows.
2012-04-18 13:56:10 UTC <TSC> You mean something general like gluing a couple of paths together to make something that looks like an arrow?
2012-04-18 13:56:39 UTC <byorgey> right
2012-04-18 17:18:58 UTC <luite> and flies like an arrow
2012-04-18 17:19:53 UTC <tgeeky> to the knee?
2012-04-18 17:29:46 UTC <byorgey> if it looks like an arrow and flies like an arrow, it must be a banana!
2012-04-18 17:34:42 UTC <tgeeky> ACTION imagines the famous splitting the arrow with an arrow trick, with bananas.
2012-04-18 17:38:24 UTC <tgeeky> byorgey: speaking of bananas, how is your little bundle of joy doing? on to solid foods yet?
2012-04-18 17:38:39 UTC <byorgey> tgeeky: yes, including bananas
2012-04-18 17:38:51 UTC <byorgey> he's doing well, though with a bit of a cold at the moment
2012-04-18 17:39:02 UTC <tgeeky> byorgey: a little dose of antimatter makes all things better!
2012-04-18 17:42:14 UTC <tgeeky> byorgey: Eating 600 bananas is about the equivalent of having one chest X-ray.
2012-04-18 17:42:18 UTC <tgeeky> The More You Know (tm)
2012-04-18 17:43:11 UTC <tgeeky> ACTION imagines stuffing oneself with bananas in a room lined with x-ray paper
2012-04-18 17:43:15 UTC <luite> does it mattere where the banana's are from?
2012-04-18 17:43:43 UTC <luite> it's due to the potassium, isn't it?
2012-04-18 17:43:58 UTC <tgeeky> luite: yes it matters, and yes it's potassium
2012-04-18 17:44:07 UTC <tgeeky> but no, it doesn't matter, because all bananas are clones of one another
2012-04-18 17:44:36 UTC <tgeeky> because of 19th century fruit growing experiments
2012-04-18 17:45:23 UTC <luite> hmm, that's why they're rather vulnerable for diseases i guess
2012-04-18 17:45:40 UTC <tgeeky> yep. and navel oranges.
2012-04-18 17:45:43 UTC <tgeeky> and a few other fruits
2012-04-18 18:08:42 UTC <byorgey> however, there are still a wide variety of naval oranges.
2012-04-18 18:08:49 UTC <byorgey> very important for preventing scurvy.
2012-04-18 18:13:02 UTC <luite> door-hinge?
2012-04-18 22:03:10 UTC <tgeeky> mgsloan: what environment do you run?
2012-04-18 22:03:21 UTC <tgeeky> os, distro, editor?
2012-04-18 22:03:31 UTC <mgsloan> ubuntu / xmonad / Sublime Text vim mode
2012-04-18 22:04:11 UTC <tgeeky> where.. what... where the hell did this come from?
2012-04-18 22:04:15 UTC <tgeeky> how have I not heard of this?
2012-04-18 22:04:17 UTC <tgeeky> oh it costs money
2012-04-18 22:05:06 UTC <mgsloan> Yeah, it's the only piece of software I've bought in a few years, actually
2012-04-18 22:05:18 UTC <mgsloan> It's easy to try it free
2012-04-18 22:05:26 UTC <mgsloan> just bugs you every N saves
2012-04-18 22:05:30 UTC <luite> commercial vim modes?
2012-04-18 22:05:41 UTC <mgsloan> which isn't so great when you're a compulsive saver
2012-04-18 22:05:42 UTC <mgsloan> nah
2012-04-18 22:05:49 UTC <luite> or is sublime text a whole editor?
2012-04-18 22:06:03 UTC <mgsloan> Sublime Text - a beautiful editor with an ok vim emulation
2012-04-18 22:06:13 UTC <luite> ah right
2012-04-18 22:06:22 UTC <luite> looks prettier than my emacs setup :)
2012-04-18 22:06:35 UTC <mgsloan> it emulates as much of vim as I intuitively use, though, and a lot of what's too complicated in vim is straightforward
2012-04-18 22:06:35 UTC <tgeeky> mgsloan: ok, well in my head, where we're going with this, we "have to" be doing the editing in browser
2012-04-18 22:06:46 UTC <mgsloan> (fuzzy string search, multiple editing cursors, etc)
2012-04-18 22:06:55 UTC <luite> mgsloan: how about haskell integration?
2012-04-18 22:06:56 UTC <mgsloan> tgeeky: well, luite's got our solution for that :)
2012-04-18 22:07:43 UTC <tgeeky> mgsloan: yeah, part of it. we need to make the <p|p> part, and offer it to him
2012-04-18 22:07:46 UTC <mgsloan> luite: the highlighting is good, and it knows how to run haskell
2012-04-18 22:07:53 UTC <mgsloan> out of the box
2012-04-18 22:07:56 UTC <mgsloan> but otherwise, nothing
2012-04-18 22:08:37 UTC <mgsloan> luite: I should probably start using ghc-mod orso, but I dunno if I want to use viper mode / give up my pretty editor
2012-04-18 22:09:26 UTC <tgeeky> mgsloan: do you use Solarized colors?
2012-04-18 22:09:33 UTC <tgeeky> i happen to like that scheme (somewhat)
2012-04-18 22:09:42 UTC <tgeeky> and it has the neat feature of... being invertible :O
2012-04-18 22:10:08 UTC <tgeeky> mgsloan: I still need to dig up some screenshots for you
2012-04-18 22:10:38 UTC <mgsloan> I use monokai - I think it might be the sublime text default
2012-04-18 22:11:13 UTC <mgsloan> and that's why I like it.  The only customization I've felt like it needed was turning on vim mode
2012-04-18 22:44:24 UTC <tgeeky> mgsloan: I offer for your honor exhibit 1) the usefulness of careful indentation: http://i.imgur.com/TuRfQ.png
2012-04-18 22:44:33 UTC <tgeeky> instead of: http://hackage.haskell.org/packages/archive/multiplate/0.0.1.1/doc/html/Data-Generics-Multiplate.html
2012-04-18 22:45:01 UTC <luite> that does look very indenty
2012-04-18 22:45:22 UTC <tgeeky> just like at the types before you look at the function names
2012-04-18 22:45:49 UTC <luite> you did cheat a bit with the contexts and foralls though
2012-04-18 22:46:03 UTC <tgeeky> howso?
2012-04-18 22:46:29 UTC <luite> unequal indents
2012-04-18 22:47:10 UTC <mgsloan> tgeeky: cool!!
2012-04-18 22:47:23 UTC <tgeeky> mgsloan: the thing is, if you know what you're doing
2012-04-18 22:47:34 UTC <tgeeky> in the block in the bottom (all the ...For ones)
2012-04-18 22:47:45 UTC <tgeeky> you can guess the function name from the types really easily, after seeing a few
2012-04-18 22:47:56 UTC <mgsloan> yeah, I'd remove some of the spaces in the *For functions
2012-04-18 22:48:10 UTC <mgsloan> but this does make the connections between them much clearer
2012-04-18 22:48:23 UTC <tgeeky> mgsloan: and if we're right, we can sort of do this for free :o
2012-04-18 22:49:22 UTC <mgsloan> howso?  Via the whitespace agnosticism / reordering?
2012-04-18 22:51:02 UTC <mgsloan> I was thinking about recompilation, btw.  Cabal must know about imports, right?  You need to recompile modules when the modules they depend on change.  This means that storing the dependencies of blocks is very necessary
2012-04-18 22:51:23 UTC <mgsloan> at least all of the internal ones
2012-04-18 22:52:34 UTC <mgsloan> better yet, store a list of dependent blocks
2012-04-18 22:53:22 UTC <tgeeky> mgsloan: so
2012-04-18 22:53:57 UTC <tgeeky> mgsloan: I mean, we can do this for free because the type annotations have no line ordering requirement compared to function definitions.
2012-04-18 22:54:01 UTC <tgeeky> Isn't that correct?
2012-04-18 22:54:10 UTC <tgeeky> *toplevel
2012-04-18 22:54:20 UTC <mgsloan> right, that's what I meant by the "reordering" part
2012-04-18 22:55:04 UTC <mgsloan> I'd like to be able to stick these declarations on the module export
2012-04-18 22:55:10 UTC <mgsloan> that makes a lot of sense to me
2012-04-18 22:55:22 UTC <tgeeky> mgsloan: just have two copies?
2012-04-18 22:55:30 UTC <mgsloan> nah, one copy
2012-04-18 22:55:46 UTC <mgsloan> or maybe not, it's kinda nice that the export lets you stick a bunch of related things on one line
2012-04-18 22:57:44 UTC <mgsloan> back on compilation, you could also cache GHC's intermediate representation for a given block (probably just AST..), prior to any other modules being involved in the compilation process.  Then, when something this block depends on changes, we only need to parse the serialized AST (or use the cached one in memory), and continue the compilation from there
2012-04-18 23:01:51 UTC <tgeeky> sounds about right. luite and I discussed before the potential advantages of storing the AST directly, or the "canonical form" code, or what
2012-04-18 23:05:03 UTC <mgsloan> yup
2012-04-18 23:05:24 UTC <mgsloan> building GHC-as-a-service into GHC would be really cool
2012-04-18 23:05:59 UTC <tgeeky> mgsloan: I like to think about having two seperate lines of interrogating the code (simultaneously) -- ghc will always be interested in parsing the file-module, and we won't be able to change that -- but our IDE needs to have progressively better "blinders" to ignore the fine structure and focus on the coarse structure
2012-04-18 23:07:48 UTC <tgeeky> mgsloan: we might already have some of the tools to do our combinatorial generation
2012-04-18 23:07:59 UTC <tgeeky> you wrote rex, which you must know. There's this: https://github.com/audreyt/regex-genex
2012-04-18 23:08:01 UTC <mgsloan> Sure, that's a good way to start.   Eventually I'd like to be able to have as small as possible recompilation / reinterpretation delay
2012-04-18 23:08:26 UTC <mgsloan> yup
2012-04-18 23:08:43 UTC <tgeeky> the pure version is boatloads faster than the impure version (which relies on some SAT solver)
2012-04-18 23:08:59 UTC <mgsloan> still a bit confused about why combinatorial generation is necessary?
2012-04-18 23:10:03 UTC <tgeeky> mgsloan: oh... I thought that was clear, but I guess in hindsight, it's not. The automatic spacing.
2012-04-18 23:10:55 UTC <mgsloan> ah.  The reason it's not clear there is because direct enumeration would be very inefficient
2012-04-18 23:11:05 UTC <mgsloan> there must be better methods
2012-04-18 23:11:28 UTC <mgsloan> it's a good way to express the problem / a naive solution
2012-04-18 23:12:03 UTC <tgeeky> right. right now, I know I want this thing which manages whitespace and order of reordable things.
2012-04-18 23:12:11 UTC <tgeeky> but I have no idea what kind of patterns would be useful. I can only do them by hand.
2012-04-18 23:13:33 UTC <tgeeky> i mean, I know that I'd like to have: strip toplevel type annotations, replace comment markers, telling you where they came from
2012-04-18 23:13:36 UTC <mgsloan> luite: I got kinda derailed from the type vis stuff by this lens-DSL / delta-modules stuff.  How goes the secret project? still delayed by GHC?
2012-04-18 23:14:24 UTC <mgsloan> tgeeky: a temporary stopgap would be to introduce one type synonym per function
2012-04-18 23:21:58 UTC <mgsloan> here's what would make sense to me:
2012-04-18 23:21:58 UTC <mgsloan> 1) Use a heuristic clone duplication algorithm to find similar subtrees.  We'd also want related partitionings (e.g. two expressions are equivalent, but one has an additional application in the middle).
2012-04-18 23:21:58 UTC <mgsloan> 2) Have a fitness metric for the layout of "these two top level things next to eachother"  - the number of spaces that need to be added in order to align
2012-04-18 23:21:58 UTC <mgsloan> 3) Also be able to weight alphabetization, such that when a set of things end up with related layout, alphabetization overules minor gains in layout
2012-04-18 23:22:42 UTC <mgsloan> what's cool about doing #1 is that it's the same process as "find new abstractions for me!"  - something I've wanted to do in haskell for a while
2012-04-18 23:24:14 UTC <tgeeky> I rather staunchy disagree with #3, in general. Weighting by some metric would be good, but by alphabetization always seems weird to me.
2012-04-18 23:25:07 UTC <mgsloan> everything else is derived from your particular haskell layout preferences.  I think I've standardized my preferences far enough that it could be mostly automated
2012-04-18 23:25:15 UTC <tgeeky> mgsloan: put another way: I would rather that a file (like multiplate in question) *randomly* showed me the ordering of functions that we are free to reorder than to alphabetize them
2012-04-18 23:25:43 UTC <mgsloan> I think #3 makes sense because it leads to more consistent ordering across different types of declarations
2012-04-18 23:26:24 UTC <tgeeky> mgsloan: ok. what about alphabetizing the 2000 or so infix operators that you generated? :o
2012-04-18 23:27:03 UTC <tgeeky> either way, what we seek is the system to express these things hueristically,, and not the preferences themselves
2012-04-18 23:27:13 UTC <mgsloan> yeah - it'd all be configurable
2012-04-18 23:31:29 UTC <mgsloan> what'd be really awesome would be to try to apply machine learning to the problem, and learn layout styles
2012-04-18 23:32:01 UTC <tgeeky> that is an area I'm very weak at
2012-04-18 23:32:05 UTC <tgeeky> unfortunately
2012-04-18 23:34:04 UTC <mgsloan> I'm a novice at it too, but I know something or other about a few different techniques.
2012-04-19 01:34:14 UTC <vyom> how do I connect two points to form a segment?
2012-04-19 01:52:26 UTC <byorgey> vyom: (~~)
2012-04-19 01:52:38 UTC <byorgey> vyom: or did you actually mean Segment ?
2012-04-19 01:53:25 UTC <vyom> yes.. i mean Segment.. looks like it will have to segmentsFromVertices
2012-04-19 01:53:37 UTC <vyom> s/to/to be/
2012-04-19 01:53:51 UTC <byorgey> vyom: you can also just do   Linear (p2 .-. p1)
2012-04-19 01:57:33 UTC <vyom> oh ok.. cool
2012-04-19 02:05:34 UTC <tgeeky> byorgey: did you read this uhh ... http://www.cs.indiana.edu/~sabry/papers/rational.pdf ?
2012-04-19 02:05:50 UTC <byorgey> tgeeky: not yet
2012-04-19 02:06:32 UTC <tgeeky> byorgey: you may have noticed edwardk's ambivolence, but it seemd pretty interesting to me
2012-04-19 02:23:08 UTC <tgeeky> byorgey: a few places in this paper make me think that Haskell-verse has been missing out on an important point re: bidirecetional programming
2012-04-19 02:23:20 UTC <tgeeky> maybe I should pester dmwit, that's his expertise right?
2012-04-19 02:23:29 UTC <byorgey> yes
2012-04-19 02:34:34 UTC <luite> mgsloan: nah i think i have it basically figured out, just haven't made any progress on it in the last two weeks or so
2012-04-19 02:35:36 UTC <mgsloan> luite: well, still looking forward to it! :)
2012-04-19 02:36:19 UTC <mgsloan> tgeeky: yeah, I hope that making the overhead of introducing  lens be the same as writing a getter will encourage their usage
2012-04-19 02:37:10 UTC <mgsloan> then again the general dislike of TH might dampen the effects of that
2012-04-19 02:37:26 UTC <mgsloan> (not that lens is the only thing in bidirectional programming..)
2012-04-19 02:39:26 UTC <tgeeky> mgsloan: I have read much more than I have coded in haskell, and of course byorgey is right that lenses (and bidirectional programming) have been connected
2012-04-19 02:40:01 UTC <tgeeky> but as far as I can tell, multiplate is an incredibly powerful generalization of lenses, and there is hardly any research that I'm aware of other than roconnor and 2 others
2012-04-19 02:40:12 UTC <mgsloan> gotcha
2012-04-19 02:41:31 UTC <tgeeky> you should be able to extract lenses out of multiplate
2012-04-19 03:10:30 UTC <vyom> mgsloan: check out last two commits
2012-04-19 03:10:31 UTC <vyom> https://github.com/deepakjois/hs-logo/commits/master
2012-04-19 03:10:38 UTC <vyom> i added penHop
2012-04-19 03:10:43 UTC <vyom> and closeCurrent to turtle
2012-04-19 03:11:08 UTC <vyom> the closeCurrent behaves differently i think.. it resets the position to the start of latest (or current) trail
2012-04-19 03:11:13 UTC <mgsloan> cool!
2012-04-19 03:11:18 UTC <mgsloan> hmm
2012-04-19 03:11:32 UTC <vyom> i thought that was the right behavior.. i noticed the comment you had in the older code
2012-04-19 03:11:45 UTC <vyom> in which you were wondering what was the right thing to do
2012-04-19 03:11:47 UTC <mgsloan> so, the reason for closeCurrent is that the rendering of closed paths is different than paths that merely return to their startpoint
2012-04-19 03:12:05 UTC <mgsloan> it's a bit of a pedantic issue, but for huge stroke thicknesses it can make a real difference
2012-04-19 03:12:08 UTC <vyom> and how is that/
2012-04-19 03:12:16 UTC <vyom> ah
2012-04-19 03:12:36 UTC <mgsloan> well, there's a rendering for corners, and then there's a rendering for line-caps
2012-04-19 03:12:49 UTC <vyom> ok
2012-04-19 03:13:28 UTC <mgsloan> (the rendering for overlayed line-caps isn't the same)
2012-04-19 03:13:31 UTC <vyom> hmm.. ok
2012-04-19 03:13:42 UTC <mgsloan> not that this means your code is at all wrong!
2012-04-19 03:13:45 UTC <mgsloan> ACTION takes a look
2012-04-19 03:14:07 UTC <mgsloan> it's a bit of a weird case, and maybe it's wrong to think about filling / closing turtle paths
2012-04-19 03:16:24 UTC <mgsloan> yeah, looks like the code does this! great!
2012-04-19 03:16:31 UTC <mgsloan> it's looking very clean :D
2012-04-19 03:19:43 UTC <vyom> heh.. I am very close to making a patch for diagrams-contrib
2012-04-19 04:09:03 UTC <vyom> ok so here is a pure turtle patch http://dl.dropbox.com/u/953/logo/pure_turtle.patch
2012-04-19 04:39:01 UTC <tgeeky> holy shit I've discovered a new fractal!
2012-04-19 04:40:20 UTC <tgeeky> nope
2012-04-19 04:41:05 UTC <tgeeky> http://www2.wolframalpha.com/input/?i=%28-1%29%5E%281%2F3%29+%28-1-x%5E6-y%5E6%29%5E%281%2F6%29&lk=1&a=ClashPrefs_*Math-
2012-04-19 04:41:08 UTC <tgeeky> still pretty interesting
2012-04-19 12:10:11 UTC <byorgey> tgeeky_: did you pester dmwit about that fractional types paper?
2012-04-19 12:11:24 UTC <byorgey> tgeeky_: because I just got an email saying he is going to present it at our weekly PL group meeting tomorrow =)
2012-04-19 13:22:47 UTC <fryguybob> byorgey: It's a boy!
2012-04-19 13:36:11 UTC <byorgey> =D !!!!
2012-04-19 13:36:20 UTC <byorgey> fryguybob: congratulations!!
2012-04-19 13:37:49 UTC <byorgey> fryguybob: does he have a name yet?
2012-04-19 13:47:54 UTC <fryguybob> byorgey: Judah Elwood
2012-04-19 13:48:02 UTC <byorgey> =D
2012-04-19 13:49:16 UTC <luite> ah congrats :)
2012-04-19 13:49:30 UTC <fryguybob> Everything went well, we started heading in at 3am and the baby was out at 7:56pm (yesterday).
2012-04-19 13:49:33 UTC <luite> everything ok with him and the mother?
2012-04-19 13:50:02 UTC <fryguybob> Yeah, Rebekah is a champion mother.
2012-04-19 13:50:18 UTC <luite> it's your first, right?
2012-04-19 13:50:27 UTC <fryguybob> Yes
2012-04-19 13:55:58 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/files/judah.jpeg
2012-04-19 13:57:45 UTC <luite> ah, I'd say cute, but I think kids are a lot cuter once they can walk to the toilet themselves ;)
2012-04-19 13:57:58 UTC <fryguybob> hehe
2012-04-19 14:04:57 UTC <byorgey> what, no beard yet?
2012-04-19 14:16:35 UTC <byorgey> vyom: thanks for the patch, pushed
2012-04-19 17:35:54 UTC <alpounet> ok so apparently #diagrams will become restricted to parents only?
2012-04-19 17:35:58 UTC <alpounet> :P
2012-04-19 17:37:27 UTC <byorgey> alpounet: no, of course not!
2012-04-19 17:37:36 UTC <byorgey> but we may have to restrict it to only five non-parents at a time
2012-04-19 17:43:04 UTC <alpounet> hah
2012-04-19 17:43:27 UTC <alpounet> no because if you were to restrict it to parents only, i could have talked my gf into having a baby
2012-04-19 17:43:33 UTC <alpounet> or just stealing one in the street
2012-04-19 17:43:40 UTC <byorgey> hahaha
2012-04-19 17:44:04 UTC <byorgey> #diagrams does not condone stealing babies off the street
2012-04-19 17:45:17 UTC <byorgey> ACTION kind of doubts alpounet's gf would really be willing to have a baby just so alpounet can spend more time on IRC
2012-04-19 17:46:46 UTC <alpounet> on the other hand, diagrams can provide the baby with nice pictures to watch, and most likely at some point animations too! whee!
2012-04-19 17:47:03 UTC <byorgey> indeed!
2012-04-19 17:47:16 UTC <byorgey> alpounet: wait, diagrams can already do animations
2012-04-19 17:47:28 UTC <alpounet> "you too, raise your children with diagrams, cabal-install it now!"
2012-04-19 17:48:28 UTC <byorgey> cue impossibly cute child model: "Daddy, can we make pictures with DIAGRAMS again today?!?"
2012-04-19 17:48:58 UTC <byorgey> "diagrams: making children happy since 2011"
2012-04-19 17:49:05 UTC <alpounet> oh riiiiiight, that's from 0.5
2012-04-19 17:49:08 UTC <alpounet> haven't played with it yet :(
2012-04-19 17:49:16 UTC <byorgey> heh, no worries
2012-04-19 17:49:22 UTC <alpounet> haha
2012-04-19 17:49:33 UTC <byorgey> still a bit rough around the edges.  I need to make more examples and improve the documentation.
2012-04-19 17:49:51 UTC <byorgey> also we need a better backend.  But I think the new blank-canvas package may do nicely.
2012-04-19 17:52:46 UTC <byorgey> tgeeky_: I'm reading the negative + fractional types paper now, it is super-cool
2012-04-19 17:54:24 UTC <alpounet> byorgey, yeah blank-canvas looks cool
2012-04-19 17:55:03 UTC <alpounet> i definitely have to play with these animations
2012-04-19 18:18:11 UTC <luite> buh now I have to compete with shapr :p
2012-04-19 18:19:52 UTC <byorgey> luite: no you don't.
2012-04-19 18:20:28 UTC <byorgey> luite: they will be two separate things, with some overlap but probably different approaches and different strengths + weaknesses.
2012-04-19 18:21:01 UTC <byorgey> it doesn't have to be a competition.  There is plenty of room in the Haskell world for both.
2012-04-19 18:21:06 UTC <luite> right, but shaprs one will probably be better and he'll get paid for it
2012-04-19 18:22:14 UTC <byorgey> I doubt it will be unequivocally better.
2012-04-19 18:22:20 UTC <alpounet> isn't there a way for you to join forces and have "common" code out of it?
2012-04-19 18:22:31 UTC <byorgey> for example, his will almost certainly not have a wiki.
2012-04-19 18:23:51 UTC <luite> alpounet: yeah some part should be possible to share
2012-04-19 18:30:42 UTC <luite> i probably sound more bitter or unhappy about this than i really am, I'm just really unhappy with myself, not being able to concentrate enough to make any significant progress over the past few weeks, even though I've spent countless hours in front of the screen
2012-04-19 18:31:22 UTC <luite> and of course apfelmus is a much better haskeller than i am
2012-04-19 18:33:43 UTC <byorgey> luite: fair enough.  I understand that frustration.
2012-04-19 18:33:55 UTC <byorgey> luite: anything we can do to help?
2012-04-19 18:36:46 UTC <luite> not really, I kind of made it a goal for myself to make the first version myself, which may be a bit stupid
2012-04-19 18:37:36 UTC <luite> i don't really have major features that i want to add
2012-04-19 18:37:48 UTC <luite> at least not becaur launch :)
2012-04-19 18:37:51 UTC <luite> before
2012-04-19 18:38:05 UTC <mgsloan> sounds like a good time to launch!
2012-04-19 18:38:17 UTC <luite> yes except that teh whole project currently doesn't even build
2012-04-19 18:38:27 UTC <luite> and there are lots of small things that just need some minor front-end work
2012-04-19 18:39:21 UTC <mgsloan> I suppose there isn't time for shapr to rephrase his proposal as "Enhance Wolfgang Lambda X" where X is "increase hackage integration", or "provide machine learning-derived refactorings recommendations"
2012-04-19 18:40:18 UTC <luite> i like shapr a lot, so I'm happy to chat with him about this... dunno about apfelmus, haven't really had a friendly conversation with him yet, and he's a lot more opinionated, but at the very least we can professionally exchange ideas, friedlyness can grow :)
2012-04-19 18:41:34 UTC <luite> mgsloan: well in that case you can basically call it a success once the basic parts are cabal-installable, since the base goal was to have a rich result type that supports images, sounds etc
2012-04-19 18:41:54 UTC <luite> i have that, but only for non-streaming responses
2012-04-19 18:42:11 UTC <luite> apfelmus has some synth work, so he might like streaming infinite responses better
2012-04-19 18:42:40 UTC <mgsloan> Seems like stuff that should be readily plugin-izable
2012-04-19 18:44:11 UTC <luite> yeah, the code is messy though
2012-04-19 18:45:07 UTC <mgsloan> most code is!
2012-04-19 18:45:13 UTC <luite> hehe mine really is :p
2012-04-19 18:46:58 UTC <luite> I had hoped to be able to launch the first verison of the site already, and then factor out these things
2012-04-19 19:09:12 UTC <luite> bah it's annoying, i sometimes have really productive days or weeks, and often weeks of putting in the same amount of effort and getting nothing done at all. same for university courses somehow, many best in class (is that the right term in english?) grades, lots of complete failures. with enough of the latter lately that i won't have a chance to do a phd in something that interests me
2012-04-19 21:03:17 UTC <byorgey> ACTION cabal install blank-canvas
2012-04-19 21:03:25 UTC <byorgey> working on a diagrams backend for it
2012-04-19 21:07:05 UTC <luite> hm sounds good
2012-04-19 21:08:02 UTC <byorgey> should give us a nice way to do animations and eventually interactive stuff
2012-04-19 21:08:26 UTC <byorgey> though for interactive stuff embedded in Wolfgang we'll want to extend the SVG backend as well
2012-04-19 21:24:42 UTC <luite> hm
2012-04-19 22:09:08 UTC <tgeeky_> byorgey: yay! reading the paper!
2012-04-19 22:09:24 UTC <tgeeky_> byorgey: it's amazing that we missed out on this observation, to me?
2012-04-19 22:11:51 UTC <tgeeky_> http://www.cs.rochester.edu/u/ryates/files/judah.jpeg
2012-04-19 22:11:57 UTC <tgeeky_> he doesn't LOOK like he's having a happy birthday
2012-04-19 22:12:15 UTC <tgeeky_> byorgey: did you finish diagrams-builder?
2012-04-19 22:12:42 UTC <mgsloan> tgeeky_: what paper?
2012-04-19 22:12:56 UTC <tgeeky_> mgsloan: negative and fractional types
2012-04-19 22:13:00 UTC <mgsloan> ahh gotcha
2012-04-19 22:14:18 UTC <mgsloan> ACTION can't wait to do a canvas-toy backend for the toy framework
2012-04-19 22:14:49 UTC <tgeeky_> what is so amazing about this canvas thing?
2012-04-19 22:15:59 UTC <mgsloan> oh, it's just nice that we'll be able to use the web browser as a frontend
2012-04-19 22:16:24 UTC <tgeeky_> mgsloan: i suppose. I thought that we were already doing that with SVG. I guess I don't really understand these things.
2012-04-19 22:16:52 UTC <mgsloan> right, SVG and canvas are probably related, browser implementation-wise
2012-04-19 22:17:17 UTC <mgsloan> I think it might be slightly more efficient to invoke client-side canvas calls / we can start to think about incremental updates
2012-04-19 22:17:35 UTC <mgsloan> SVG incremental updates could be interesting too though - they can be expressed as DOM manipulations
2012-04-19 22:19:51 UTC <mgsloan> Anyway, I've been working occasionally on a very lightweight GUI system in diagrams (gtk-toy-diagrams), and it'll be cool to see that running on a different interaction backend than cairo / gtk
2012-04-19 22:39:59 UTC <zhulikas> quick question: how can I output generated SVG to a ghci?
2012-04-19 22:40:56 UTC <zhulikas> I want to mess around with it without generating stuff to output files every time
2012-04-19 22:43:51 UTC <tgeeky_> zhulikas: you want raw SVG data in ghci console?
2012-04-19 22:43:57 UTC <zhulikas> yes
2012-04-19 22:45:32 UTC <tgeeky_> i would doubt that it's possible, but I don't know. let me look at the svg code
2012-04-19 22:46:37 UTC <zhulikas> hm
2012-04-19 22:49:06 UTC <tgeeky_> zhulikas: hmm. I doubt it's possible.
2012-04-19 22:49:28 UTC <zhulikas> ok, thanks anyway
2012-04-19 22:49:38 UTC <tgeeky_> zhulikas: there might be some useful workarounds, though.
2012-04-19 22:50:32 UTC <zhulikas> there may be a way to leverage the output
2012-04-19 22:50:57 UTC <zhulikas> but it lies somewhere deep in the diagrams internals probably :)
2012-04-19 22:51:01 UTC <tgeeky_> you could make a .html page that loads the image with a fast (1s) refresh
2012-04-19 22:52:21 UTC <zhulikas> I was more looking for something to output actual SVG to .html page, not as an image
2012-04-19 22:53:09 UTC <zhulikas> maybe I should look into something different
2012-04-19 22:53:14 UTC <tgeeky_> zhulikas: ok, you could use your favorite editor to edit the file
2012-04-19 22:53:19 UTC <tgeeky_> and refresh it?
2012-04-19 22:54:39 UTC <zhulikas> :)
2012-04-19 22:55:48 UTC <tgeeky_> mgsloan: we gotta sort out this new cabal, make sure we understand the features
2012-04-19 22:56:03 UTC <tgeeky_> cabal-install, that is.
2012-04-19 22:58:09 UTC <mgsloan> tgeeky: yup!  I
2012-04-19 22:58:32 UTC <tgeeky_> mgsloan: i've been gathering and organizing notes
2012-04-19 22:58:35 UTC <mgsloan> 'm most interested in focusing on tools that will work in concert with cabal (delta modules stuff)
2012-04-19 22:58:46 UTC <tgeeky_> yeah
2012-04-19 22:59:10 UTC <mgsloan> but making recompilation / analysis efficient is definitely awesome to work / plan towards
2012-04-19 22:59:31 UTC <tgeeky_> the clear strategy seems to be to introduce the delta feature, and then come all-out-at-once with deltas for the needed packages (haddock, cabal, cabal-install, ...)
2012-04-19 23:00:44 UTC <mgsloan> yup!
2012-04-19 23:01:03 UTC <mgsloan> and a separate tool for managing / applying deltas
2012-04-19 23:01:18 UTC <tgeeky_> yeah. i was typing ... the deltas needs to happen the fastest
2012-04-19 23:01:30 UTC <tgeeky_> and then the tools to manage / change our implementation until we like it
2012-04-19 23:01:37 UTC <tgeeky_> and then .. you know.. dog food. use it.
2012-04-19 23:02:25 UTC <tgeeky_> once we feel prepared that we know how to use it properly, then we focus on getting dx's for the distribution and base packages
2012-04-19 23:02:47 UTC <mgsloan> An interesting property of these deltas is that they could also be used as a way to express the refactorings as you're performing them
2012-04-19 23:03:42 UTC <tgeeky_> mgsloan: yep. I think I see that. I've always "glossed over" the difficulty of deciding when to compile / when to provide UI assistance (autocomplete) / when to just sit and wait
2012-04-19 23:03:47 UTC <mgsloan> in other words, you tell the tool that you've changed an API in your library, and in what way, and it rewrites your library to target that new internal API, and appends to the delta module
2012-04-19 23:03:57 UTC <tgeeky_> mgsloan: yeah. absolutely
2012-04-19 23:04:09 UTC <tgeeky_> mgsloan: that right there, that concept, is why I "invented" the modular automatic versioning
2012-04-19 23:04:36 UTC <mgsloan> :D  It'll be really amazing
2012-04-19 23:05:24 UTC <tgeeky_> mgsloan: I don't know how to think about it, conceptually, but remember that all of our code objects are *second* derivatives
2012-04-19 23:05:38 UTC <tgeeky_> dxFile . dxFunction
2012-04-19 23:05:48 UTC <tgeeky_> (at least)
2012-04-19 23:05:58 UTC <tgeeky_> some people talk about multiple modules per file
2012-04-19 23:06:02 UTC <tgeeky_> in which case it would be 3rd
2012-04-19 23:06:12 UTC <mgsloan> I think Haskell already lets you do some things faster / most things better.  Being able to have a refactoring solution that helps you write code, and helps your users fix theirs accordingly will make the gap rediculous
2012-04-19 23:06:38 UTC <mgsloan> combined with type explanations, and I'd say that I may be nudging haskell towards success :D oh no!
2012-04-19 23:06:52 UTC <mgsloan> but only if I pull of such rediculously ambitious goals
2012-04-19 23:07:12 UTC <tgeeky_> mgsloan: btw, wasn't the name of that guy Eric Andersonn or something similar?
2012-04-19 23:07:14 UTC <mgsloan> in the case of deltas / etc, we, and whoever else wants to pitch in to the good fight
2012-04-19 23:07:19 UTC <mgsloan> tgeeky_: yup
2012-04-19 23:07:27 UTC <tgeeky_> was he just in the news today about mining asteroids?
2012-04-19 23:07:35 UTC <mgsloan> sounds about right
2012-04-19 23:08:58 UTC <tgeeky_> mgsloan: heh. That's ambitious. We're just trying to work hard :)
2012-04-19 23:09:59 UTC <tgeeky_> mgsloan: byorgey liked the paper, so maybe he can help me understand things
2012-04-19 23:12:39 UTC <luite> are there closure serialization implementations that still work with recent ghc versions?
2012-04-19 23:14:41 UTC <mgsloan> tgeeky_: also, as my post mentions, we can start trying to use delta modules now, in order to anticipate the potential problems
2012-04-20 02:24:23 UTC <rasfar> oh darn! patch-tag is down, they're not on, and i can't seem to find the remarks ("gnat dance steps" ought to have been enough) that were on #haskell.  who was it, prototyping a system for visual type annotations -- there were squiggly lines that looked like dance step instructions?....
2012-04-20 02:26:16 UTC <rasfar> aha! it was mgsloan, nm
2012-04-20 02:33:27 UTC <tgeeky_> rasfar: 'panopticon'
2012-04-20 03:07:18 UTC <byorgey> rasfar, mgsloan. mgsloan, rasfar.
2012-04-20 03:07:46 UTC <mgsloan> byorgey!
2012-04-20 03:08:01 UTC <byorgey> hi mgsloan!
2012-04-20 03:08:34 UTC <mgsloan> hey! how's it going?
2012-04-20 03:09:05 UTC <byorgey> pretty good! and you?
2012-04-20 03:10:16 UTC <tgeeky_> byorgey: how'd you like the paper? finish it? Whew new that the most boring, trivial algebraic equations could be so interesting.
2012-04-20 03:10:34 UTC <byorgey> tgeeky_: yep, I finished it, very cool
2012-04-20 03:12:14 UTC <byorgey> I mean, isn't it completely obvious that 1 = a * (1/a) corresponds to generating a fresh unification variable?
2012-04-20 03:12:17 UTC <byorgey> ;)
2012-04-20 03:12:42 UTC <byorgey> I'm trying to figure out the connections to virtual species... not sure yet
2012-04-20 03:12:46 UTC <luite> hm so shae's proposal was much closer to wolfgang than to apfelmus' proposal
2012-04-20 03:13:02 UTC <tgeeky_> byorgey: I had a strong hint of that
2012-04-20 03:13:19 UTC <tgeeky_> byorgey: you said in your paper that virtual species corresponds to completing the ring of something?
2012-04-20 03:13:29 UTC <tgeeky_> byorgey: certainly 'completing to a field' would be pretty big
2012-04-20 03:14:34 UTC <byorgey> tgeeky_: yes, normal species form a semiring, virtual species complete it to a ring.  It is almost a field but not quite because there are things other than 0 that do not have multiplicative inverses.
2012-04-20 03:14:55 UTC <byorgey> luite: ah, I see
2012-04-20 03:15:10 UTC <byorgey> luite: so maybe he can actually just work on wolfgang?  does it work that way?
2012-04-20 03:15:17 UTC <luite> byorgey: going to try
2012-04-20 03:15:35 UTC <luite> in a few hours, mentors have to be assigned
2012-04-20 03:15:41 UTC <luite> I just requested to be mentor for haskell.org
2012-04-20 03:16:02 UTC <luite> I hope edwardk or some other admin can accept me in time
2012-04-20 03:16:28 UTC <luite> don't want to steal apfelmus' projects, but if shaes project is unmentored by then i'll accept it
2012-04-20 03:17:06 UTC <tgeeky_> luite: aren't only 1 or 2 of these going to get sponsored?
2012-04-20 03:17:26 UTC <luite> no I think this is the list that should be the final list onces all mentors have been assigned
2012-04-20 03:17:33 UTC <luite> which will be published on monday
2012-04-20 03:17:46 UTC <luite> so i think haskell.org will have around 6 projects
2012-04-20 03:18:22 UTC <luite> does anyone have edwardk's phone number?
2012-04-20 03:19:25 UTC <tgeeky_> luite: uhh. I don't think so. I had a reciept from him that had his phone number on it, but I mailed it back to him
2012-04-20 03:20:50 UTC <mgsloan> byorgey: sorry, had to answer the phone.  I'm good!  Been very inspired by haskell-related pursuits lately
2012-04-20 03:21:02 UTC <byorgey> ah, np
2012-04-20 03:21:09 UTC <byorgey> cool, I think I could tell =)
2012-04-20 03:23:28 UTC <tgeeky_> "ring "^5 + "bananaphone!"
2012-04-20 03:24:36 UTC <mgsloan> yeah, wish I could spend all my time on this stuff!  Type viz is going to get ignored for a little while
2012-04-20 03:24:44 UTC <byorgey> hehe
2012-04-20 03:24:57 UTC <byorgey> well as long as you occasionally finish *something* =)
2012-04-20 03:25:50 UTC <luite> tgeeky_: hmm, wel we'll see
2012-04-20 03:26:25 UTC <mgsloan> indeed!  Well that's the nice thing about TH libraries.  It's not too hard to "finish" them
2012-04-20 03:27:02 UTC <luite> mgsloan: oh you need to write a thunk serialization lib for me ;p
2012-04-20 03:27:32 UTC <mgsloan> hahaha..  I think I remember seeing something along those lines, though?  Maybe not in Haskell
2012-04-20 03:28:03 UTC <luite> buh this is annoying, why didn't i sign up earlier for gsoc
2012-04-20 03:28:22 UTC <mgsloan> It really isn't that unimaginable of a thing, I'm not sure why GHC wouldn't directly support it
2012-04-20 03:30:09 UTC <luite> mgsloan: right... though if you google for it you see opinions ranging from "it's easy, you just need to chase some pointers" to "that's undesirable since you could see the difference between x :: Integer -> Integer, \x -> x+x  and \x -> 2*x"
2012-04-20 03:30:21 UTC <rasfar> oops, not used to having multiple irc windows open, totally missed my introduction (well, we've spoken before) -- hi mgsloan.  quite a dramatic moment with this gsoc deadline...
2012-04-20 03:30:25 UTC <mgsloan> pshaaah
2012-04-20 03:31:27 UTC <mgsloan> I really dislike it when the Haskell puritanism gets in the way of software engineering
2012-04-20 03:31:50 UTC <mgsloan> I mean, I love theoretical purity and all, and think theory is a fantastic guiding force in design
2012-04-20 03:31:54 UTC <luite> mgsloan: still, I think haskell would be pretty nice for that kidn of thing, immutable heap pays off here
2012-04-20 03:31:58 UTC <mgsloan> yeah
2012-04-20 03:32:29 UTC <mgsloan> this is the same kind of thing as people telling me that it's an awful idea to be able to change a Haskell program as it runs
2012-04-20 03:32:35 UTC <luite> if only I could get shapr to implement this over this summer :p
2012-04-20 03:32:41 UTC <mgsloan> (this was pre-Bret Victor if that matters at all)
2012-04-20 03:32:51 UTC <mgsloan> and the reason that was bad is that it smacks of mutability
2012-04-20 03:33:32 UTC <luite> mgsloan: this would give wolfgang resumable computations, and allow much more distributed cloudy stuff than cloud haskell
2012-04-20 03:34:03 UTC <mgsloan> I agree that it's bad, but Haskell gives us the type tools to catch and deal with most of the problematic aspects of a live-modifiable program.  If anything, Haskell is a far more ideal platform for this kind of thing than most languages
2012-04-20 03:34:33 UTC <luite> but there are a lot of distributed haskell projects already
2012-04-20 03:34:43 UTC <luite> it must be hard to get it right
2012-04-20 03:34:46 UTC <mgsloan> that's why I feel like thunk serialization has to have been done
2012-04-20 03:35:00 UTC <luite> yeah me too, but I can't find anything that works
2012-04-20 03:36:07 UTC <luite> http://www.mathematik.uni-marburg.de/~eden/ <- this is the closest i could find
2012-04-20 03:36:36 UTC <luite> tbh, all the automatic transparent network stuff don't interest me
2012-04-20 03:36:58 UTC <luite> since the only really tricky part is the thunk serialization, anyone can add a network layer to his own taste
2012-04-20 03:42:02 UTC <mgsloan> rasfar - 'lo!  I've been template haskelling lately: http://github.com/mgsloan/lenq  www.mgsloan.com/
2012-04-20 03:46:52 UTC <rasfar> template haskell seems like a gaping yaw of a rabbit-hole, hope you tied a rope to a tree (um... to climb out with of course, not to hang by :)
2012-04-20 03:47:18 UTC <mgsloan> hahaa :)
2012-04-20 03:47:35 UTC <mgsloan> yeah, right now I'm resisting porting GHC's desugarings to TH
2012-04-20 03:47:57 UTC <mgsloan> for some things it would really be nice to work on desugared trees
2012-04-20 03:48:49 UTC <rasfar> there's a lot of sugar maples in my area *shrug* -- sorry, me noa kno much about thees 'tuff
2012-04-20 03:49:28 UTC <rasfar> i thought by the time something was an AST it was fully desugared?
2012-04-20 03:50:50 UTC <mgsloan> but it seems error-prone to reimplement GHC's parsing (haskell-src-exts), desugaring, typing, fixity resolution, etc, anew in TH land - we need TH to be able to be a little bit more involved in GHC, as a plugin that can ask about things with the GHC api
2012-04-20 03:50:56 UTC <rasfar> never even tried TH yet :( -- looked into it briefly, along with various generics libs, but in the end focused on syb (already seems like ages ago, and that was last month -- wow)
2012-04-20 03:51:56 UTC <rasfar> actually, i think GHC doesn't use HSE at all?  which i for one find unfortunate; wish they'd worked together...
2012-04-20 03:52:49 UTC <mgsloan> oh, gotcha, I thought that's what byorgey's introductions were about :P  I searched your name and saw the "freesect" stuff
2012-04-20 03:53:11 UTC <rasfar> yeah, i'm not sure whether to regret that or not.
2012-04-20 03:53:32 UTC <mgsloan> naaah, I think it's a cool idea
2012-04-20 03:54:18 UTC <mgsloan> it just doesn't correspond to the typical Haskell design aesthetic
2012-04-20 03:54:28 UTC <rasfar> but, ultimately, i can't pretend to be in the major league, have to get involved to really learn, have to put it on the line.  it's awkward, i'm a perfectionist, but you have to act.
2012-04-20 03:55:00 UTC <rasfar> well, thank you.  byorgey also gave me some encouraging words.
2012-04-20 03:55:04 UTC <byorgey> my introduction was just because rasfar came in here earlier asking who had been working on the type visualization stuff
2012-04-20 03:55:47 UTC <luite> mgsloan: i forgot what you were trying to do btw :)
2012-04-20 03:55:52 UTC <rasfar> the gnat dances you mean? ;)
2012-04-20 03:55:54 UTC <luite> something with TH
2012-04-20 03:56:17 UTC <mgsloan> rasfar:  yup! A few half-assed git repos later, and I'm less shy of just publishing my ideas, good or no
2012-04-20 03:56:22 UTC <mgsloan> like pointless plumbres :)
2012-04-20 03:56:45 UTC <rasfar> haha, yeah -- that's lib's how i finally remembered your name.
2012-04-20 03:56:46 UTC <mgsloan> rasfar - yup!  Those gnats are dancing the typechecking dance.  Or evaluation dance, either way you look at it
2012-04-20 03:56:57 UTC <mgsloan> the mating ritual of thunks
2012-04-20 03:57:04 UTC <rasfar> hahaHAA!
2012-04-20 03:58:38 UTC <rasfar> i thought i had my next mini-contribution figured out yesterday (sorry, this is way OT for the channel) -- dmwit said go for it -- but it's been done, and abandoned by the author.  namely explore-hackage
2012-04-20 03:59:20 UTC <rasfar> which is a navigable summary of all the modules on hackage, similar to what haddock gives you for your locally-installed packages.
2012-04-20 03:59:56 UTC <rasfar> so i'm still looking for things to do... (*whistles*)
2012-04-20 04:01:20 UTC <rasfar> http://folk.ntnu.no/hammar/explore-hackage/
2012-04-20 04:01:48 UTC <rasfar> but it doesn't link directly to the API pages, which is definitely a shortcoming
2012-04-20 04:01:48 UTC <mgsloan> rasfar: not OT - we've been pretty OT overall lately
2012-04-20 04:02:09 UTC <tgeeky_> ACTION imagines a commercial where little Timmy complains to his mommy that he's not getting enough thunks in his breakfast!
2012-04-20 04:02:32 UTC <mgsloan> rasfar: cooool!  I was just wanting this today
2012-04-20 04:02:44 UTC <rasfar> thunk is such a funny word.  SPJ coined that, no?
2012-04-20 04:02:53 UTC <tgeeky_> rasfar: I thunk so.
2012-04-20 04:03:07 UTC <rasfar> heh.
2012-04-20 04:03:16 UTC <tgeeky_> rasfar: take that website (and the code behind it)
2012-04-20 04:03:22 UTC <tgeeky_> and add a "expand all tabs" button
2012-04-20 04:03:30 UTC <tgeeky_> and re-publish, and ye shall be a god among men
2012-04-20 04:03:38 UTC <rasfar> well, i emailed Andreas (explore-hackage author) yesterday.  if he never gets back to me, i suppose it would be worth doing it anew.
2012-04-20 04:03:51 UTC <rasfar> (the project is not in his github or on hackage (ironically))
2012-04-20 04:04:04 UTC <mgsloan> if you want to be truly godly, it'd be cool to filter on other criteria
2012-04-20 04:04:08 UTC <rasfar> by gad, i'll do it!!
2012-04-20 04:04:23 UTC <rasfar> taking feature requests...:
2012-04-20 04:04:59 UTC <rasfar> i guess, if i collected all the cabal files for the projects, there'd be a fair number of criteria to go on there?
2012-04-20 04:06:04 UTC <rasfar> besides the names of the modules, the API links, the deps ... well, the problem is, each cabal file seems to offer it's own unique cross-section of possible fields.
2012-04-20 04:06:23 UTC <byorgey> SPJ did not coin "thunk", it's been around much longer
2012-04-20 04:06:40 UTC <rasfar> ah, okay
2012-04-20 04:07:04 UTC <byorgey> Thunks were invented by Peter Zilahy Ingerman[1] in 1961.  -- according to the Wikipedia page
2012-04-20 04:07:18 UTC <mgsloan> rasfar: my web dev friend says it would probably be more reasonable for that site to generate the HTML rather than dynamically constructing DOM elements with javascript (which seems to be what it's doing)
2012-04-20 04:07:20 UTC <rasfar> wow, that does go back
2012-04-20 04:07:27 UTC <byorgey> hah, he was at U Penn =)
2012-04-20 04:08:12 UTC <byorgey> "Thunks: a way of compiling procedure statements with some comments on procedure declarations", Communications of the ACM vol. 4 issue 1, Jan. 1961
2012-04-20 04:08:21 UTC <rasfar> mgsloan, okay good to know.  i've little experience with such things.  it would be nice if the generating code itself could be Haskell...
2012-04-20 04:09:35 UTC <rasfar> anyone know what would be the best way to get that info from hackage, without treading too heavily on it?
2012-04-20 04:09:59 UTC <rasfar> i know i read recently (on a cafe thread i think) that hackage encourages mirroring
2012-04-20 04:10:33 UTC <rasfar> ideally, it seems this should be integrated into hackage itself
2012-04-20 04:12:13 UTC <luite> mgsloan: the eden project seems to be a ~13000 line patch against ghc 6.12
2012-04-20 04:14:04 UTC <tgeeky_> rasfar: expose the author information so we can search for that (which is not availabe in hoogle or hayoo, at least not easily)
2012-04-20 04:14:17 UTC <rasfar> will do; thanks
2012-04-20 04:14:35 UTC <tgeeky_> rasfar: get the index.00 file to get most of the info, then extract the .darcs file from each of the .tar files inside the "full copy of hackage"
2012-04-20 04:14:40 UTC <tgeeky_> err
2012-04-20 04:14:45 UTC <tgeeky_> .cabal file, not .darcs
2012-04-20 04:15:10 UTC <rasfar> alright; i think i downloaded that file last night (does ~250 MB sound right?)
2012-04-20 04:15:16 UTC <tgeeky_> yep
2012-04-20 04:15:32 UTC <tgeeky_> there should be a command to just extract files with a certain extension
2012-04-20 04:15:33 UTC <mgsloan> rasfar: yeah, you could probably use hackage / cabal code as a way to get the data
2012-04-20 04:15:35 UTC <tgeeky_> in tar
2012-04-20 04:15:37 UTC <rasfar> if my netbook survives this project i'll be impressed
2012-04-20 04:16:30 UTC <rasfar> i haven't opened it yet, but if i understand correctly it's a zipped tarball of zipped tarballs...
2012-04-20 04:17:55 UTC <rasfar> must say, i /do/ like Andreas's styling, hope he doesn't mind if i imitate it :D ... seriously, i'll be surprised if i don't hear from him at all.
2012-04-20 04:19:09 UTC <rasfar> i wonder if it's possible to extract a file from a tarball-within-a-tarball (compressed, yet)
2012-04-20 04:19:33 UTC <rasfar> excuse my flooding, but i'll need to go offline in a moment anyway if that's any consolation byorgey
2012-04-20 04:21:14 UTC <mgsloan> luite: ah, interesting!  does it say somewhere that they do thunk-migration?  From what I can see it's mostly language extensions and a pile of libraries
2012-04-20 04:21:48 UTC <mgsloan> I haven't really followed the parallel haskell stuff
2012-04-20 04:21:57 UTC <luite> yes a lot of the patch is in the rts, they pack thunks to some "packbuffer" and send them over the network
2012-04-20 04:23:50 UTC <mgsloan> awesome!!!
2012-04-20 04:24:57 UTC <luite> but, I'm not sure how much is already in GHC itself
2012-04-20 04:25:09 UTC <luite> the patch changes a lot in the files
2012-04-20 04:25:26 UTC <luite> but look in /rts/parallel/Pack.c in a recent GHC
2012-04-20 04:25:29 UTC <rasfar> until next time folks; i'm entering the realm of offlineness (which i call home)
2012-04-20 05:32:38 UTC <tgeeky_> byorgey: 01:31 < tgeeky_> TSC: i incorrectly told you that arrows are "absolutely" somewhere in diagrams. I was talking shit. They aren't anywhere builtin. I
2012-04-20 05:32:41 UTC <tgeeky_>                  apologize to you and your family. May god have mercy on my soul. Ramen.
2012-04-20 05:32:44 UTC <tgeeky_> done!
2012-04-20 17:20:31 UTC <tgeeky_> byorgey: can you make ~15 minutes to discuss the negative/fractional types paper
2012-04-20 17:23:16 UTC <tgeeky_> sometime this weekend
2012-04-20 17:23:35 UTC <tgeeky_> I'm going to e-mail the authors with some corrections, and ask a question or two
2012-04-20 17:57:03 UTC <byorgey> tgeeky_: sure, I have time this afternoon and probably some time tomorrow (though I can't predict exactly when tomorrow)
2012-04-20 18:00:22 UTC <tgeeky_> if now's a good time: first of all, if I wanted to implement the ideas in this paper today, is there anything in the way?
2012-04-20 18:00:32 UTC <tgeeky_> they claim they have code, but I couldn't find it easily
2012-04-20 18:01:09 UTC <byorgey> tgeeky_: nope, implementing their operational semantics should be straightforward, with the one caveat that they don't really talk at all about unification/constraint solving
2012-04-20 18:01:18 UTC <byorgey> yeah, I don't think their code is published yet
2012-04-20 18:02:19 UTC <tgeeky_> ok. second. My intuition says that this can be thought of as a "more complicated identity function" (or two of these things, maybe)?
2012-04-20 18:03:05 UTC <tgeeky_> that's not right. It's a more complicated identity function. But since we're going to use a step machine, we explicitly need the associators
2012-04-20 18:03:55 UTC <tgeeky_> not a question.
2012-04-20 18:03:57 UTC <tgeeky_> next
2012-04-20 18:05:20 UTC <tgeeky_> the 'computation backtracked' part -- the origin for this is, as far as I can tell page1, "at line (4)" where "we're finding ourselves needing to produce a value of type 0, which is impossible; this signals reverse execution
2012-04-20 18:05:44 UTC <tgeeky_> the claim is that it takes l (l 20) -> l (r 20)
2012-04-20 18:07:00 UTC <tgeeky_> you can't produce a value of type 0? is 0 the "void" constructor?
2012-04-20 18:08:31 UTC <tgeeky_> they use this again in 2.3 (since there are no values of type 0)
2012-04-20 18:09:21 UTC <tgeeky_> yep just searched through conal's personal results on google. he says it too
2012-04-20 18:09:36 UTC <byorgey> 0 is the void type
2012-04-20 18:10:14 UTC <byorgey> tgeeky_: I suggest ignoring the introduction since I find it confusing and overly vague.
2012-04-20 18:10:55 UTC <byorgey> if you want to actually implement it you should go straight to the more technical definitions.
2012-04-20 18:19:55 UTC <tgeeky_> from page 6 I get:   (-b1 + b2)  <->  0  <-> b1 + (-b2)   and  ((1 / b1) * b2 <-> 1 <-> (b1 * (1 / b2)). \
2012-04-20 18:20:39 UTC <tgeeky_> and then they list something about "intuitively". Is your intuition the same?
2012-04-20 18:21:38 UTC <byorgey> the same as what?
2012-04-20 18:22:00 UTC <tgeeky_> byorgey: the intuitive meanings they list
2012-04-20 18:22:17 UTC <tgeeky_> that this means you can construct each morphism "from nothing"
2012-04-20 18:23:32 UTC <tgeeky_> page 6, top right.
2012-04-20 18:23:35 UTC <byorgey> the "nothing" is in quotes because they mean 0 for + and 1 for x
2012-04-20 18:23:47 UTC <byorgey> 0 and 1 both represent different sorts of "nothing"
2012-04-20 18:24:18 UTC <byorgey> it is intuitive to me.  If it is not intuitive to you then I'm happy to try to help explain it.
2012-04-20 18:31:31 UTC <tgeeky_> byorgey: that they are different sorts of nothing is intuitive. there are just two seperate monoidal structures
2012-04-20 18:31:37 UTC <byorgey> right.
2012-04-20 18:32:39 UTC <tgeeky_> normally, the basic introduction would just be that there are the monoidal structures (0,+,Z) and (1,*,Z), say.
2012-04-20 18:32:55 UTC <tgeeky_> (i'm using tuples as in "model theory" but I think it should be clear)
2012-04-20 18:33:02 UTC <byorgey> right
2012-04-20 18:33:24 UTC <tgeeky_> in the above case, that 0 isn't void, and that 1 isn't ()?
2012-04-20 18:33:36 UTC <byorgey> hmm?
2012-04-20 18:33:41 UTC <byorgey> which above case?
2012-04-20 18:33:42 UTC <tgeeky_> for (0,+,Z)
2012-04-20 18:33:46 UTC <tgeeky_> that zero is.. the number zero
2012-04-20 18:33:55 UTC <byorgey> OK, right
2012-04-20 18:34:02 UTC <tgeeky_> and 1 is the number one.
2012-04-20 18:34:09 UTC <byorgey> sure
2012-04-20 18:34:10 UTC <tgeeky_> Here, 0 is "Void" and 1 is "()"?
2012-04-20 18:34:14 UTC <byorgey> right
2012-04-20 18:34:24 UTC <byorgey> and + is tagged union, and x is pairing
2012-04-20 18:35:04 UTC <tgeeky_> byorgey: that last statement "x is pairing" is the first bullet, bottom right, page 6
2012-04-20 18:35:17 UTC <tgeeky_> "Using the fact that 1 is the multiplicative unit, generate the input () from the value ((),())
2012-04-20 18:35:22 UTC <tgeeky_> of type 1 x 1
2012-04-20 18:35:50 UTC <byorgey> well, that bullet follows from the statement "x is pairing"
2012-04-20 18:35:57 UTC <byorgey> the fact that x is pairing is from the beginning of section 2.1
2012-04-20 18:37:27 UTC <tgeeky_> ok, so that leads me to believe there is a whole seperate construction when you're considering (b1 x b2 x b3)
2012-04-20 18:37:33 UTC <tgeeky_> and so on for everity arity of product?
2012-04-20 18:38:44 UTC <tgeeky_> byorgey: hehe. You'll fogive me for driving this direction, but I am a physicist also. The introduct of color = R | G | B on page 6 seems really unmotivated, and really disconnected from the bullets listed after
2012-04-20 18:40:33 UTC <tgeeky_> byorgey: and furthermore, the introduction made it seem like the there was either: one value, going in two directions OR three values, existing simultaneously
2012-04-20 18:40:42 UTC <tgeeky_> so how did we get to ( (), () )?
2012-04-20 18:41:32 UTC <tgeeky_> i think my 15 minutes are long gone
2012-04-20 18:41:35 UTC <tgeeky_> oh sure
2012-04-20 18:41:44 UTC <tgeeky_> no more questions
2012-04-20 18:42:08 UTC <tgeeky_> these are questions to ask the author, anyway. a better strategy is to ask for help when my implementation goes awry
2012-04-20 19:15:41 UTC <byorgey> tgeeky_: sorry, I was off doing something else
2012-04-20 19:15:51 UTC <byorgey> tgeeky_: I'm still happy to answer your questions
2012-04-20 19:16:19 UTC <byorgey> tgeeky_: b1 x b2 x b3 is ambiguous.  You need to specify (b1 x b2) x b3  or  b1 x (b2 x b3)
2012-04-20 19:16:34 UTC <byorgey> and there are bijections assocl/assocr for translating between them
2012-04-20 19:17:02 UTC <byorgey> tgeeky_: the introduction of color = R | G | B is completely pointless and unmotivated, I agree
2012-04-20 23:06:09 UTC <tgeeky_> byorgey: estas aqui?
2012-04-20 23:34:57 UTC <byorgey> tgeeky_: si
2012-04-21 00:14:50 UTC <byorgey> hi peterjoel
2012-04-21 00:15:22 UTC <peterjoel> hi byorgey
2012-04-21 02:32:34 UTC <tgeeky_> "cabal install Cabal cabal-install" is one of the funniest commands ever
2012-04-21 03:26:38 UTC <tgeeky_> byorgey: here now?
2012-04-21 03:26:49 UTC <tgeeky_> byorgey: if not, in a few I'm going to reboot and try and get linux going on my desktop again
2012-04-21 16:52:08 UTC <tgeeky> man! my darn irssi won't remember to ignore joins/parts/quits in most windows :(
2012-04-21 19:32:07 UTC <byorgey> tgeeky: oh, but those are so much fun!
2012-04-21 20:01:57 UTC <luite> tgeeky: you need to specify the version manually if you want to get the latest one btqw
2012-04-21 20:02:00 UTC <luite> btw
2012-04-21 21:18:50 UTC <tgeeky> luite: specify the version of... irssi?
2012-04-21 21:23:04 UTC <luite> cabal-install
2012-04-21 21:23:45 UTC <tgeeky> luite: oh, you mean with cabal install Cabal cabal-install?
2012-04-21 21:23:56 UTC <tgeeky> how do I specify that? cabal-install-x.x.x?
2012-04-21 21:25:43 UTC <byorgey> yep
2012-04-21 21:26:11 UTC <byorgey> also, if you have ghc 7.4 it already comes with the latest version of Cabal so there's no need to reinstall it
2012-04-21 21:26:23 UTC <byorgey> so:  cabal install cabal-install-0.14.0
2012-04-21 21:26:34 UTC <tgeeky> byorgey: ah. that does make sense. However, the problems I was having were also related to GHC's default paths in windows
2012-04-21 21:26:44 UTC <byorgey> fair enough.
2012-04-21 21:26:58 UTC <tgeeky> and the fact that setting an option to make a logfile in cabal's config, causes the pertinent information *not* to be dipsplayed to the console
2012-04-21 21:27:14 UTC <byorgey> just be glad you don't have OS X.  It seems to me OS X has recently replaced Windows as the worst/most difficult platform for Haskell development.
2012-04-21 21:27:16 UTC <tgeeky> so it looked like cabal was spending 8 minutes compiling *only* the setup.hs files
2012-04-21 21:27:26 UTC <tgeeky> byorgey: true.
2012-04-21 21:27:29 UTC <byorgey> oh, hehe, whoops
2012-04-21 21:45:14 UTC <mgsloan> tgeeky: have you already markdown-converted my post?
2012-04-21 21:45:20 UTC <mgsloan> I'm thinking of just githubbing it
2012-04-21 21:45:44 UTC <tgeeky> mgsloan: nope! go ahead. I have been writing my own notes, as promised
2012-04-21 21:46:38 UTC <mgsloan> Cool!  I didn't post friday, as you can tell..  It's been like 2 weeks since I started this post, argh!
2012-04-21 21:46:59 UTC <tgeeky> hehe.
2012-04-21 21:47:04 UTC <tgeeky> just rive it
2012-04-22 00:06:16 UTC <byorgey> tgeeky: yeah, a module for drawing string diagram-type-things is definitely on my list of todos
2012-04-22 00:13:45 UTC <tgeeky> i've got a small list of things to do: (categorical) string diagrams, feynman diagrams, penrose diagrams, fancy periodic tables (a good exercise in using identical data to produce many vis); apollonian gasketry;
2012-04-22 00:14:03 UTC <byorgey> tgeeky: sweet
2012-04-22 00:15:43 UTC <tgeeky> i was in the process of putting these up on the wiki; but I have several hundred of images to put somewhere; the wiki seemed a bad choice. imgur wouldn't cooperate (i submitted ~ 30 images of periodic tables; it duplicated 1 of them 28 times and showed one other)
2012-04-22 00:15:57 UTC <tgeeky> so I'll probably end up putting it up on github somewhere
2012-04-22 00:15:58 UTC <byorgey> heh, doh
2012-04-22 00:16:17 UTC <tgeeky> i like the mix of people we have in here though
2012-04-22 00:16:29 UTC <tgeeky> nerds, geeks, physicists, artsy people, haskell experts
2012-04-22 00:16:38 UTC <tgeeky> and luite the magnificient
2012-04-22 00:16:50 UTC <tgeeky> byorgey: https://www.google.com/search?q=alternative+periodic+table&hl=en&safe=off&prmd=imvns&tbm=isch&tbo=u&source=univ&sa=X&ei=yU2TT8b9H6KK2wWCobT7BA&ved=0CDoQsAQ&biw=1226&bih=939&sei=6k2TT4egCYbq2AXs4YiXCA
2012-04-22 00:16:57 UTC <byorgey> tgeeky: I like it too =)
2012-04-22 00:17:16 UTC <byorgey> woah, those are cool =)
2012-04-22 00:18:26 UTC <byorgey> hey, I've got diagrams-canvas working now!
2012-04-22 00:18:36 UTC <tgeeky> that was fast
2012-04-22 00:18:55 UTC <luite> tgeeky: luite the unproductive is what you mean
2012-04-22 00:19:30 UTC <byorgey> well, fryguybob and Andy Gill already did most of the hard work =)
2012-04-22 00:19:53 UTC <tgeeky> luite: nope. I'm the most unproductive person here, so far.
2012-04-22 00:20:10 UTC <luite> you have more packages on hackage
2012-04-22 00:20:11 UTC <tgeeky> and let's admit
2012-04-22 00:20:16 UTC <byorgey> I love the feeling of taking several things that other people made, gluing them together easily, and producing something awesome
2012-04-22 00:20:17 UTC <tgeeky> you're pretty magnificnet
2012-04-22 00:20:30 UTC <tgeeky> byorgey: that is the epitome of modern programming
2012-04-22 00:20:35 UTC <luite> cnet?
2012-04-22 00:20:37 UTC <tgeeky> byorgey: DIY is so last decade
2012-04-22 00:20:52 UTC <byorgey> tgeeky has now misspelled magnificent in two different ways =)
2012-04-22 00:20:57 UTC <tgeeky> luite: so magnificent, that you can even discern mispelling
2012-04-22 00:21:06 UTC <tgeeky> did I get three?
2012-04-22 00:21:12 UTC <byorgey> not yet
2012-04-22 00:21:27 UTC <byorgey> mangificent would be a good one
2012-04-22 00:21:28 UTC <tgeeky> magnifico. magnificant. magnificent. magnificant.
2012-04-22 00:21:49 UTC <tgeeky> http://www.magnificat.com/
2012-04-22 00:21:53 UTC <luite> no, but at least you got one in 'misspelling'
2012-04-22 00:21:53 UTC <tgeeky> whatever the heck that is
2012-04-22 00:21:59 UTC <tgeeky> luite: hehehe
2012-04-22 00:22:04 UTC <tgeeky> both of you bite me
2012-04-22 00:22:09 UTC <luite> i think it was on purpose though
2012-04-22 00:24:13 UTC <tgeeky> maybe it was on porpoise
2012-04-22 00:24:22 UTC <tgeeky> http://2.bp.blogspot.com/_2nHSx89FR3o/TN8RdAvV9UI/AAAAAAAAACA/N-gHSnToK1c/s400/Porpoise-7.jpg
2012-04-22 00:24:30 UTC <tgeeky> you can't get mad at that face
2012-04-22 00:25:19 UTC <luite> oh didn't know the english name for those
2012-04-22 00:25:30 UTC <tgeeky> dolphin
2012-04-22 00:25:34 UTC <tgeeky> or porpoise
2012-04-22 00:25:35 UTC <luite> a literal translation from dutch would be "brownfish"
2012-04-22 00:27:17 UTC <byorgey> porpoises and dolphins are actually different things
2012-04-22 00:27:28 UTC <byorgey> so says the Source of All Knowledge
2012-04-22 00:27:30 UTC <luite> lots of dolphins and whales are called fish in dutch :(
2012-04-22 00:32:05 UTC <tgeeky> hm. it never occured to me until now that 'unfoldable' might mean impossible to fold, not possible to unfold.
2012-04-22 00:32:11 UTC <tgeeky> rest assured it doesn't!
2012-04-22 00:33:53 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-canvas.png
2012-04-22 00:34:13 UTC <byorgey> still some missing features, and the default fill color shouldn't be black
2012-04-22 00:34:16 UTC <byorgey> but progress! =)
2012-04-22 00:35:05 UTC <tgeeky> byorgey: almost looks like a cell phone pic
2012-04-22 00:35:11 UTC <tgeeky> s/pic/screencap/
2012-04-22 00:35:13 UTC <tgeeky> but quite nice
2012-04-22 00:37:31 UTC <byorgey> that's because I edited it in gimp to move the bottom bar showing the URL up
2012-04-22 00:37:36 UTC <byorgey> =)
2012-04-22 00:37:40 UTC <tgeeky> hehe
2012-04-22 00:38:05 UTC <byorgey> just to show off that it was actually coming from a local web server
2012-04-22 00:38:23 UTC <byorgey> huh, HTML5 canvas doesn't support dashed lines!
2012-04-22 00:38:30 UTC <byorgey> poop
2012-04-22 00:38:39 UTC <tgeeky> lol
2012-04-22 00:38:50 UTC <tgeeky> that's sad
2012-04-22 00:40:19 UTC <tgeeky> mgsloan: http://hackage.haskell.org/package/bumper-0.5.0.1
2012-04-22 00:40:42 UTC <vyom> byorgey: is that a diagrams-canvas backend?
2012-04-22 00:41:11 UTC <mgsloan> tgeeky: cool!
2012-04-22 00:41:27 UTC <mgsloan> tubad this makes delta-modules / etc a little less necessary
2012-04-22 00:41:46 UTC <vyom> i mean.. i guess it is.. but what is the actual output.. some sort of HTML page?
2012-04-22 00:41:47 UTC <mgsloan> though provides some of the necessary code to start automating such things
2012-04-22 00:41:53 UTC <tgeeky> yeah I'll just shamelessly steal his code
2012-04-22 00:42:31 UTC <tgeeky> bbl dinner
2012-04-22 00:42:57 UTC <byorgey> vyom: yes, the output is an HTML page containing a canvas
2012-04-22 00:43:34 UTC <vyom> cool
2012-04-22 00:43:42 UTC <byorgey> vyom: in particular, the output is actually an HTML page containing a canvas, with a server listening to events from the page that can send more canvas commands!
2012-04-22 00:44:00 UTC <byorgey> so we can easily make not just static diagrams but animations and interactive things
2012-04-22 00:44:37 UTC <byorgey> I should emphasize that all I have done is port fryguybob's existing diagrams-canvas backend to Andy Gill's new blank-canvas package
2012-04-22 00:45:44 UTC <vyom> oh.. so what takes care of the server client interaction.. blank-canvas?
2012-04-22 00:47:17 UTC <byorgey> vyom: yes
2012-04-22 00:48:12 UTC <vyom> ah ok.. I see it uses scotty
2012-04-22 00:48:17 UTC <vyom> cool stuff
2012-04-22 00:48:43 UTC <vyom> i was playing around with the idea of a WebGL backend actually, since I wanted to learn it..
2012-04-22 00:48:58 UTC <vyom> if i get around to it.. this would be a good reference
2012-04-22 00:50:14 UTC <vyom> any idea if it is planned? since you seem to have contributed code to that project :)
2012-04-22 00:51:38 UTC <byorgey> to which project?
2012-04-22 00:51:52 UTC <vyom> blank-canvas
2012-04-22 00:52:04 UTC <byorgey> oh, I only contributed a tiny bit to support diagrams-canvas
2012-04-22 00:52:09 UTC <byorgey> I don't really know what they have planned
2012-04-22 00:52:34 UTC <byorgey> WebGL would be super cool
2012-04-22 00:52:36 UTC <vyom> webgl uses a canvas underneath afaik.. so it would be nice to extend this..
2012-04-22 00:52:55 UTC <byorgey> it would give us a good excuse to add 3D stuff in diagrams-lib =)
2012-04-22 00:53:00 UTC <fryguybob> byorgey: fun!
2012-04-22 00:53:15 UTC <byorgey> very!
2012-04-22 00:53:43 UTC <vyom> i will ping the project owner and ask him
2012-04-22 00:53:44 UTC <fryguybob> You say you contributed a tiny bit, but I stole most at the beginning :P
2012-04-22 00:55:10 UTC <byorgey> hehe, fair enough, everyone just steals code and adds a tiny bit of value
2012-04-22 00:55:17 UTC <byorgey> and somehow we still end up with awesome things
2012-04-22 00:56:26 UTC <byorgey> fryguybob: how's Judah?
2012-04-22 00:57:36 UTC <fryguybob> byorgey: Awesome. Getting spoiled by grandparents at the moment :D.
2012-04-22 00:58:19 UTC <byorgey> excellent =)
2012-04-22 00:58:37 UTC <fryguybob> We were able to aline our sleep with his sleep some this morning (for me) and afternoon (for Rebekah) so we are feeling a little more human.
2012-04-22 00:58:58 UTC <byorgey> good!
2012-04-22 01:00:31 UTC <vyom> the only problem with the model that blank-canvas uses is that it is not as scalable as something that is completely client-side..
2012-04-22 01:00:52 UTC <vyom> it looks like blank-canvas maintains context for every canvas it is rendering
2012-04-22 01:01:37 UTC <vyom> i wonder if there is a solution where the interaction between the client and server is stateless..
2012-04-22 01:01:42 UTC <byorgey> vyom: true.
2012-04-22 01:02:05 UTC <byorgey> vyom: I think Andy Gill has said that he's interested in eventually coming up with something that runs completely client-side.
2012-04-22 01:02:11 UTC <vyom> cool
2012-04-22 01:02:31 UTC <vyom> wonder if that will involve some Haskell to Javascript compilation ;)
2012-04-22 01:02:32 UTC <byorgey> but this was basically just a one-day hack he put together to show off some stuff to his functional programming class
2012-04-22 01:02:37 UTC <byorgey> maybe so =)
2012-04-22 01:03:26 UTC <vyom> kinda makes me sad though.. everything needs to be compiled to JS nowadays in order to be a viable web based alternative..
2012-04-22 01:03:34 UTC <vyom> its like the assembly language of the web
2012-04-22 01:04:56 UTC <luite> fortunately js can be run pretty efficiently
2012-04-22 01:05:20 UTC <luite> relatively that is
2012-04-22 01:06:12 UTC <vyom> i guess.. when I initially thought about a WebGL backend I was thinking about the problem of avoiding client-server interaction..
2012-04-22 01:06:52 UTC <vyom> and the only viable alternative was to somehow generate Javascript
2012-04-22 01:07:14 UTC <vyom> or alternatively.. port diagrams to javascript ;)
2012-04-22 01:08:20 UTC <vyom> there does appear to be a Haskell -> Javascript backend.. I dont know how far along it is http://utrechthaskellcompiler.wordpress.com/2010/10/18/haskell-to-javascript-backend/
2012-04-22 01:09:04 UTC <luite> yes there's also one for ghc
2012-04-22 01:10:05 UTC <vyom> these projects dont seem to have much activity though
2012-04-22 01:11:40 UTC <byorgey> fryguybob: hmm, do I recall you saying something about some problem with lines of width 0?
2012-04-22 01:12:43 UTC <luite> vyom: no they don't, i think there should be at least two big projects in it, one is the code generator itself, and the other is a beter cabal thingie to build javascript packages
2012-04-22 01:13:22 UTC <byorgey> aha, "On setting, zero, negative, infinite, and NaN values must be ignored, leaving the value unchanged; other values must change the current value to the new value."
2012-04-22 01:13:26 UTC <byorgey> hrm
2012-04-22 02:02:44 UTC <fryguybob> byorgey: Yeah something like zero width was interpreted as "smallest visible" instead of "no line".  But I don't really remember at the moment.
2012-04-22 02:10:08 UTC <byorgey> fryguybob: I figured it out, setting the line width to zero is simply ignored.
2012-04-22 02:10:40 UTC <byorgey> fryguybob: it's easy to get around by changing the stroke function to check the current line width and only issue an actual stroke command if it is positive.
2012-04-22 02:28:13 UTC <byorgey> https://github.com/byorgey/blank-canvas  https://github.com/byorgey/diagrams-canvas
2012-04-22 02:28:22 UTC <byorgey> if anyone wants to play around with it
2012-04-22 02:28:59 UTC <byorgey> it now works on all the examples I've tried except it doesn't (yet) support (1) text or (2) dashed lines
2012-04-22 02:29:44 UTC <byorgey> ACTION -> bed
2012-04-22 02:32:44 UTC <mgsloan> ACTION sets to work on canvas-toy-diagrams
2012-04-22 04:59:10 UTC <tgeeky> mgsloan: hello goo sir
2012-04-22 04:59:15 UTC <tgeeky> goo.... sigh. good sir.
2012-04-22 04:59:35 UTC <mgsloan> tgeeky: hello!  I just recently realized that I need to put most of my time into school the next few days... argh!
2012-04-22 05:01:41 UTC <tgeeky> mgsloan: good :)
2012-04-22 05:01:51 UTC <tgeeky> school is important-er
2012-04-22 05:01:56 UTC <mgsloan> good that I realized it, I guess
2012-04-22 05:02:21 UTC <mgsloan> but I really want to get some of these more recent projects out the door
2012-04-22 05:02:42 UTC <tgeeky> mgsloan: all is well. I will have time to work and catch up some.
2012-04-22 05:03:00 UTC <mgsloan> hehe, indeed!
2012-04-22 05:03:02 UTC <tgeeky> mgsloan: I've been on a long term plan to 'out' my blog, and I started with a goal of 7 posts
2012-04-22 05:03:21 UTC <tgeeky> I've written 3 so far
2012-04-22 05:03:30 UTC <tgeeky> over the past few months :/
2012-04-22 05:03:53 UTC <mgsloan> well, it's either quality or quantity, and quality is better!
2012-04-22 05:06:17 UTC <tgeeky> http://hpaste.org/67406
2012-04-22 05:06:22 UTC <tgeeky> that was my recentest note.
2012-04-22 05:14:23 UTC <tgeeky> mgsloan: did you take linear algebra and remember it?
2012-04-22 05:14:31 UTC <mgsloan> oh yeah
2012-04-22 05:15:26 UTC <tgeeky> mgsloan: are you aware of what 'canonical forms' are? http://en.wikipedia.org/wiki/Canonical_form#Linear_algebra
2012-04-22 05:16:45 UTC <tgeeky> anyway, I'm leading to... I found this recently: http://books.google.com/books/about/Advanced_Topics_in_Linear_Algebra.html?id=HLiWsnzJe6MC and am surprised to learn there is a serious competitor to jordan form matrices
2012-04-22 05:16:53 UTC <tgeeky> (called the Weyr Form)
2012-04-22 05:26:26 UTC <tgeeky> (I didn't remember many of these things). However, this book has a pretty interesting introduction (and very carefully worded too). I was surprised to learn that for some (n x n) matrix, there are a different number of nilpotent decompositions
2012-04-22 05:26:31 UTC <tgeeky> in one form or another
2012-04-22 05:30:04 UTC <mgsloan> yup, we went over a bit of those in my applied linear algebra class
2012-04-22 05:30:11 UTC <mgsloan> not /that/ in depth
2012-04-22 05:30:51 UTC <tgeeky> mgsloan: evidently these were discarded at a time when non-commutative spaces weren't of any interest
2012-04-22 05:32:26 UTC <tgeeky> and the potential advatages of this technique apply mostly when you're in such a situation (vs jordan)
2012-04-22 05:32:35 UTC <tgeeky> i'll bet someone has jordan decomposition in haskell
2012-04-22 05:35:51 UTC <mgsloan> oh yeah
2012-04-22 05:37:15 UTC <tgeeky> perhaps not
2012-04-22 05:37:30 UTC <tgeeky> someone has done schur decomposition and stated in docs "anything jordan can do, schur can do better!" lol
2012-04-22 08:44:04 UTC <TSC> Any idea why I would get linker errors with diagrams-builder?
2012-04-22 08:44:20 UTC <TSC> HSdiagrams-builder-0.2.o: unknown symbol `diagramszmbuilderzm0zi2_DiagramsziBuilderziModules_unLit_closure'
2012-04-22 08:44:21 UTC <TSC> BuildTikZ.hs: BuildTikZ.hs: unable to load package `diagrams-builder-0.2'
2012-04-22 08:54:24 UTC <TSC> Ah, diagrams-builder's cabal file needs to have "Diagrams.Builder.Modules" listed as an exposed module
2012-04-22 08:54:28 UTC <TSC> byorgey: ^^^
2012-04-22 12:20:40 UTC <byorgey> TSC: ah, thanks, fixed now
2012-04-22 21:00:05 UTC <luite> cool the cabal repo moved to github!
2012-04-22 21:17:31 UTC <luite> hm, stupid question maybe, but when do you call something in haskell a combinator, or when is some library a combinator library?
2012-04-22 21:28:31 UTC <rasfar> I don't know, but this page might help if you haven't seen it, for distinctions between "combinator" etc. http://www.haskell.org/haskellwiki/Super_combinator
2012-04-22 21:29:20 UTC <rasfar> at a higher level, there's http://www.haskell.org/haskellwiki/Combinator_pattern
2012-04-22 21:29:42 UTC <rasfar> not sure how authoritative these pages are however
2012-04-22 21:30:09 UTC <luite> yeah the latter seems to be rather informal, but i have the impression that this is also how it's used in practice
2012-04-22 21:30:44 UTC <luite> it doesn't seem to have too much to do with the combinator in combinatory logic
2012-04-22 21:32:51 UTC <rasfar> whatever the case, one thing i'm certain of:  this project qualifies!  https://github.com/mgsloan/plumbers
2012-04-22 22:02:53 UTC <tgeeky> wow
2012-04-22 22:03:13 UTC <tgeeky> that's the first time I've ever seen google be "surprisingly smart"
2012-04-22 22:03:49 UTC <tgeeky> I typed in "stu variables" meaning S = ..  T = ..  U = .. -- a physics notion
2012-04-22 22:04:30 UTC <tgeeky> result (1) doesn't have stu in the text, but the filename (STU.pdf) and the second is the real name
2012-04-22 22:04:35 UTC <tgeeky> (which I already knew)
2012-04-22 22:05:31 UTC <tgeeky> smart!
2012-04-22 22:05:59 UTC <tgeeky> luite: I thought byorgey said something about that issue today
2012-04-22 22:06:01 UTC <tgeeky> in #haskell
2012-04-22 22:11:34 UTC <tgeeky> luite: I would state it like this: A combinator library is one in which many (or a majority?) of functions are intended to be used for constructing still more functions, instead of to be used for a domain specific purpose
2012-04-22 23:40:42 UTC <byorgey> luite: I think it's more about the design philosophy -- a library built around some primitive objects along with principled ways for combining and transforming those to make more complex objects.
2012-04-22 23:41:44 UTC <byorgey> where by "principled" I mean "compositional", i.e. the meaning of combined things is determined in a simple way from the meaning of the things being combined
2012-04-22 23:42:09 UTC <byorgey> it has little to do with the definition of "combinator" in combinatory logic.
2012-04-23 01:44:20 UTC <luite> right, that's what i thought, was just wondering if there was some theoretical background for calling them combinators :)
2012-04-23 01:58:41 UTC <byorgey> luite: yeah, not really =)
2012-04-23 02:46:00 UTC <tgeeky> luite: it's "combinate" in the same way as the dragon from homestar runner "burninates"
2012-04-23 02:48:21 UTC <byorgey> COMBINATING THE COUNTRYSIDE, COMBINATING THE PEASANTS
2012-04-23 02:48:51 UTC <byorgey> THATCHED ROOF COTTAGES!!!!
2012-04-23 02:49:42 UTC <Claudius1aximus> i've got a brand new combinator?
2012-04-23 02:50:08 UTC <luite> tgeeky: the imperative version would be subroutinators?
2012-04-23 02:51:25 UTC <tgeeky> luite: that somehow doesn't sound scary enough
2012-04-23 02:51:42 UTC <tgeeky> byorgey: somehow I knew you'd like that reference.
2012-04-23 02:51:45 UTC <tgeeky> :)
2012-04-23 02:52:32 UTC <luite> hehe I knew the video, but it's been too long ago :p
2012-04-23 02:53:23 UTC <byorgey> =)
2012-04-23 04:06:06 UTC <TSC> Hello all; I'm trying to "cabal install virthualenv", but I get "global constraint requires installed instance" for base -- I don't see where this global constraint comes from
2012-04-23 04:07:02 UTC <TSC> Gah, wrong channel (:
2012-04-24 07:50:19 UTC <donatell0> Hi all! I want to use diagrams to create a diagram of a pebble with light reflection effect. I don't think there is support for lighting effects. Any pointers/tips are appreciated.
2012-04-24 10:01:20 UTC <byorgey> donatell0: yeah, right now there isn't any support for lighting effects, gradients, etc.
2012-04-24 10:01:38 UTC <byorgey> adding support for gradients would not be too hard in theory, someone just needs to do it
2012-04-24 11:27:54 UTC <donatell0> byorgey: ok thanks!
2012-04-24 17:56:58 UTC <luite> byorgey: have you made a decision about switching to git/github yet?
2012-04-24 17:58:31 UTC <byorgey> luite: not officially, but I haven't seen anything yet to dissuade me
2012-04-24 17:58:51 UTC <byorgey> except that darcs 2.8 just came out and it's shiny, which makes me even more sad to do it
2012-04-24 17:59:04 UTC <luite> i haven't replied to the question, but i guess you know what i think ;p
2012-04-24 17:59:22 UTC <byorgey> I don't actually
2012-04-24 17:59:27 UTC <byorgey> though I know you use github
2012-04-24 17:59:45 UTC <luite> oh right, in that case, for me it would be easier to contribute with git
2012-04-24 17:59:57 UTC <luite> but i don't really have problems with darcs
2012-04-24 18:00:33 UTC <byorgey> ok
2012-04-24 18:00:42 UTC <luite> i fear that darcs will die eventually do to a lack of infrastructure
2012-04-24 18:00:48 UTC <luite> due to
2012-04-24 18:01:00 UTC <byorgey> if it does die that will certainly be what kills it
2012-04-24 18:05:51 UTC <luite> hm
2012-04-24 18:06:24 UTC <luite> apfelmus is from leipzig apparently
2012-04-24 18:08:15 UTC <luite> anyway need to get back to coding, shapr wants to use wolfgang as a starting point for his gsoc :)
2012-04-24 18:18:23 UTC <byorgey> excellent =)
2012-04-24 18:18:37 UTC <byorgey> luite: good to have some external motivation, eh?
2012-04-24 18:29:24 UTC <luite> hehe so far it hasn't brought productivity, only stress and headaches, but i hope that changes soon
2012-04-24 18:30:26 UTC <luite> but having some help for the summer would be really great, and it should be possible to implement the things apfelmus wants without much problems
2012-04-24 18:32:54 UTC <byorgey> luite: by the way, I will be teaching a class in the fall and it would be super-awesome to be able to have the students use Wolfgang.
2012-04-24 18:33:06 UTC <luite> it would!
2012-04-24 18:33:06 UTC <byorgey> if that causes you more stress then forget I said it, causing stress is not my intention =)
2012-04-24 18:33:10 UTC <luite> haha
2012-04-24 18:33:18 UTC <byorgey> just that you will have many happy users =)
2012-04-24 18:34:13 UTC <luite> nah i really want to work on it and make some progress, many happy users probably means server upgrade though
2012-04-24 18:34:14 UTC <byorgey> because I can teach them a bit of Haskell without having to go through the trouble of getting them to install it, they can collaborate easily, I can easily develop stuff in class and share it with them...
2012-04-24 18:34:26 UTC <byorgey> the class isn't about Haskell but I will be using it a bit
2012-04-24 18:35:16 UTC <luite> but i think we'll see this summer how much the current one can handle, maybe some of the $500 that haskell.org gets for this gsoc project can go towards the hosting costs
2012-04-24 18:36:08 UTC <byorgey> yeah, that would be cool
2012-04-24 18:37:09 UTC <luite> shapr wants to add realtime synchronization between clients
2012-04-24 18:37:20 UTC <luite> so that people can really collaborate on different screens
2012-04-24 18:39:34 UTC <luite> i think that's the most difficult feature planned for the gsoc
2012-04-24 18:40:12 UTC <luite> others are pastebin functionality and an easy way install a local version with cabal-install
2012-04-24 18:40:41 UTC <luite> the last one is apfelmus' primary interest, the website part is more shaprs interest
2012-04-24 18:41:22 UTC <luite> bah i really want serializable thunks :p
2012-04-24 18:45:11 UTC <luite> (and it seems to be so close, see rts/parallel/Pack.c)
2012-04-24 18:48:17 UTC <byorgey> luite: well, it all sounds cool
2012-04-24 18:48:35 UTC <byorgey> but I hope you won't wait until the end of the summer to release something =)
2012-04-24 18:49:23 UTC <luite> no, the point is to release something next week or so so that shapr and apfelmus can make plans before the coding starts in may
2012-04-24 19:02:41 UTC <byorgey> oh, sweet
2012-04-24 19:02:52 UTC <byorgey> luite: let me know if you want any help testing =)
2012-04-24 19:03:12 UTC <luite> :)
2012-04-24 19:03:24 UTC <luite> not yet anyway, it's easy to bring down the server with the current version
2012-04-24 19:03:44 UTC <byorgey> hehe, ok
2012-04-24 19:03:46 UTC <luite> need to add a few things to the process manager
2012-04-24 19:03:51 UTC <byorgey> yep
2012-04-24 19:04:05 UTC <luite> namely sending STOP and CONT signals when a worker is done, or requested :)
2012-04-24 19:04:13 UTC <luite> otherwise you can forkIO a thread that uses 100% in the background
2012-04-24 19:07:37 UTC <luite> (if you leave other system threads or processes running, they're already automatically shot down when the request finishes)
2012-04-25 04:07:52 UTC <vyom> Fill rule support in SVG http://dl.dropbox.com/u/953/logo/fill.svg
2012-04-25 04:47:00 UTC <mgsloan> vyom: cool!
2012-04-25 04:47:33 UTC <vyom> i am implementing dashing now.. should be done tonight i think
2012-04-25 04:47:48 UTC <vyom> that will leave text and images
2012-04-25 04:47:54 UTC <vyom> which are kinda tricky
2012-04-25 04:48:03 UTC <vyom> so hopefully sometime next week
2012-04-25 04:57:00 UTC <mgsloan> saweet!  There're so many nearly-feature-complete backends now!
2012-04-25 05:29:26 UTC <tgeeky> *whew*
2012-04-25 05:31:23 UTC <tgeeky> 36 hours, 1114 miles, one funeral :(, and a tired tgeeky
2012-04-25 06:17:24 UTC <vyom> And dashing is done too.. https://github.com/deepakjois/diagrams-svg/commit/f9046e6180e1de1d27c8fe832b399c19ba008d47
2012-04-25 17:15:34 UTC <vyom> and we have opacity support
2012-04-25 17:15:36 UTC <vyom> https://dl-web.dropbox.com/get/Public/logo/opactity.svg?w=bf7239d0
2012-04-25 18:04:41 UTC <byorgey> vyom: awesome!!
2012-04-25 18:07:13 UTC <byorgey> ACTION needs to buy vyom several beverages of his choice someday
2012-04-25 18:07:47 UTC <vyom> hehe :)
2012-04-25 18:08:41 UTC <byorgey> vyom: long shot, I know, but any chance you can come to Philly aug. 3-5 for hac phi? =)
2012-04-25 18:08:50 UTC <byorgey> we're about to oficially announce it
2012-04-25 18:08:59 UTC <vyom> actually it is not that much of a long shot..
2012-04-25 18:09:05 UTC <byorgey> ok =)
2012-04-25 18:09:05 UTC <vyom> I recently quit my job to move to the bay area.. and at the same decided to take time off
2012-04-25 18:09:15 UTC <byorgey> oh, nice
2012-04-25 18:09:30 UTC <vyom> planning to spend the next few months..just.. hacking
2012-04-25 18:09:35 UTC <byorgey> =D
2012-04-25 18:09:38 UTC <luite> :)
2012-04-25 18:10:24 UTC <luite> hmm, hac phi would be fun, but probably too expensive for me
2012-04-25 18:10:43 UTC <byorgey> yeah, I wish crossing the atlantic was cheaper =(
2012-04-25 18:11:09 UTC <byorgey> we did actually have two attendees from NL come for the first hac phi
2012-04-25 18:11:21 UTC <byorgey> but they combined it with a two-week vacation in the US afterwards
2012-04-25 18:11:30 UTC <luite> they must've been from the richer part of the netherlands ;p
2012-04-25 18:11:37 UTC <byorgey> perhaps =)
2012-04-25 18:12:31 UTC <vyom> i met mgsloan the other day and he told me about the Oregon Summer School
2012-04-25 18:12:49 UTC <byorgey> yeah, OPLSS is awesome
2012-04-25 18:13:11 UTC <byorgey> we specifically scheduled hac phi not to overlap with it =)
2012-04-25 18:13:16 UTC <luite> it's not the ideal eason, summer and all, looks like a return flight is around 1100 euro, 1450 usd
2012-04-25 18:13:25 UTC <byorgey> yikes
2012-04-25 18:13:29 UTC <vyom> what do you think of the lectures
2012-04-25 18:13:40 UTC <byorgey> vyom: mind-blowing
2012-04-25 18:13:42 UTC <vyom> do we need some sort of a background already
2012-04-25 18:14:02 UTC <vyom> if i am attending.. i would like to prepared to get maximum value out of it
2012-04-25 18:14:24 UTC <byorgey> some background does help for some of them
2012-04-25 18:14:25 UTC <fryguybob> byorgey: I can't remember are you going to be at OPLSS this year?
2012-04-25 18:14:34 UTC <byorgey> nope
2012-04-25 18:14:43 UTC <fryguybob> darn
2012-04-25 18:14:54 UTC <byorgey> vyom: to prepare, read as far as you can through TaPL
2012-04-25 18:15:11 UTC <vyom> hmm.. now that i look at the page.. they request for the "materials" to arrive by Apr 16
2012-04-25 18:15:20 UTC <vyom> i wonder if the deadline has passed :(
2012-04-25 18:16:28 UTC <byorgey> vyom: I don't think so
2012-04-25 18:16:36 UTC <byorgey> vyom: which page?
2012-04-25 18:17:33 UTC <vyom> http://www.cs.uoregon.edu/Research/summerschool/summer12/registration.html
2012-04-25 18:17:37 UTC <byorgey> oh, I see
2012-04-25 18:18:01 UTC <byorgey> I bet you could still register if you ask nicely, as long as it is not completely full
2012-04-25 18:18:50 UTC <byorgey> anyway, I've got to go play w/ my son =)
2012-04-25 18:18:53 UTC <byorgey> back later
2012-04-25 18:20:59 UTC <vyom> let me email them rightaway
2012-04-25 18:30:38 UTC <tgeeky> byorgey: during the aforementioned funeral trip, I got to play with and watch my nieec. It was ... magical.
2012-04-25 18:30:42 UTC <tgeeky> niece*
2012-04-25 18:31:30 UTC <byorgey> tgeeky: sorry about the long trip and funeral, but playing with your niece sounds fun =)
2012-04-25 18:32:16 UTC <tgeeky> the trip was somewhat fun, since I've always loved driving. Thank you. yes.
2012-04-25 18:33:01 UTC <tgeeky> lots of eye contact, lots of funny faces, a few smiles, and one time she (suddenly) surprised herself awake which was hillarious
2012-04-25 18:42:46 UTC <vyom> ok sent a mail to the OPLSS folks
2012-04-25 18:43:24 UTC <vyom> even put in a cheeky request for the $175 graduate student price.. given that i am not longer an "industry professional".. i am more like "unemployed"
2012-04-25 18:45:52 UTC <vyom> if anybody is interested.. here is why I decided to take time off http://www.facebook.com/deepak.jois/posts/10150686205526099
2012-04-25 18:46:03 UTC <vyom> now to do something worthwhile with all this time i have
2012-04-25 18:46:11 UTC <vyom> anyway.. lunch gtg
2012-04-25 18:46:12 UTC <vyom> later
2012-04-25 20:01:26 UTC <rasfar> i've got something preliminary at fremissant.net/haddockage/haddockage.php if anyone has comments
2012-04-25 20:01:46 UTC <rasfar> fremissant.net/haddockage/haddockage-small.php for "just the f's"
2012-04-25 20:02:06 UTC <rasfar> no module names yet (working on it...) but, is the UI going to be adequate?
2012-04-25 20:02:31 UTC <rasfar> (you can sort the columns by clicking on the headers, but there may be some seconds of delay.  it's client-side sorting.)
2012-04-25 20:03:26 UTC <rasfar> i'm asking here b/c you are nice :)  and we talked about it here a few days ago
2012-04-25 20:03:42 UTC <rasfar> brb
2012-04-25 20:09:35 UTC <luite> hm, what do you want to use it for?
2012-04-25 20:10:21 UTC <rasfar> well, this was to address the lack of any comprehensive list of modules
2012-04-25 20:10:45 UTC <rasfar> then mgsloan (or maybe it was tgeeky) suggested including the authors names would also be handy
2012-04-25 20:10:58 UTC <luite> hm, but these are pacakges, not modules, right?
2012-04-25 20:11:15 UTC <rasfar> this would be a contribution towards clarifying the hackage namespace (plus extra features...)
2012-04-25 20:11:46 UTC <rasfar> the backend is Haskell, it parses the 00-index.tar, so the results should be fairly complete
2012-04-25 20:12:12 UTC <rasfar> there were 13 packages which causes nontermination for some reason, so that's about 0.3% missing at the moment
2012-04-25 20:12:42 UTC <rasfar> these are packages still, yes.  i'm working on the modules now, just have to think about how to efficiently juggle all that, as it's a lot of data!
2012-04-25 20:13:29 UTC <rasfar> the first thing i did after parsing the .cabal files is to generate a histogram showing the most common fields, which is also quite interesting; i should post that as well...
2012-04-25 20:14:51 UTC <rasfar> i'm not a DB/web guy really, so i'm not sure how to design it to include the modules.  I could simply duplicate the other fields for every module, but it would be a at least 10x longer list of records if did that!
2012-04-25 20:15:43 UTC <rasfar> luite, does it look right on your user agent?  does the sorting work?  (you can also sort multiple columns by holding Shift when you click)
2012-04-25 20:16:11 UTC <rasfar> my next priorities:  the modules, and then some kind of filtering UI
2012-04-25 20:17:34 UTC <rasfar> (scrolling back, it was tgeeky who requested author info)
2012-04-25 20:23:00 UTC <rasfar> well, that's encouraging, thanks! ... back to work then. ;)
2012-04-25 20:37:44 UTC <rasfar> actually it seems all packages work now, so it's 100% complete as far as I know.
2012-04-25 20:38:00 UTC <rasfar> also need to work on RSS-based updates...
2012-04-25 21:06:55 UTC <luite> sorry i was away
2012-04-25 21:07:09 UTC <luite> i think you probably should use some standard grid thing with built-in filters
2012-04-25 21:07:33 UTC <luite> yui probably has one, jquery-ui an experimental one
2012-04-25 21:30:12 UTC <rasfar> okay, thanks for the tips
2012-04-25 23:05:03 UTC <vyom> byorgey: I namedropped you in my email to the OPLSS folks. Told them that if they allowed me to attend, I will follow Brent Yorgey's advice and get through as much of TaPL as I possibly can :)
2012-04-25 23:22:50 UTC <byorgey> vyom: great, I approve =)
2012-04-25 23:45:51 UTC <mgsloan> vyom: awesome! see you there!
2012-04-25 23:46:25 UTC <mgsloan> ACTION will try to get through as much of ATAPL as possible before haha
2012-04-25 23:50:23 UTC <mgsloan> ACTION wonders how many of the students will be repeat students
2012-04-25 23:51:13 UTC <mgsloan> I had no idea, at the time, who David Terei was, but when river-rafting, he pushed me off the boat :D
2012-04-25 23:51:26 UTC <mgsloan> (hence my G+ photo)
2012-04-26 00:12:15 UTC <vyom> mgsloan: I hope they allow me to register in the first place.. :)
2012-04-26 00:12:29 UTC <mgsloan> vyom: pretty sure they will!
2012-04-26 00:12:47 UTC <vyom> how big was it last year
2012-04-26 00:12:48 UTC <mgsloan> there were people from a more industry background before
2012-04-26 00:13:02 UTC <mgsloan> good question.. Maybe 80 - 100?
2012-04-26 00:13:11 UTC <mgsloan> gtg, bb in a few
2012-04-26 00:41:44 UTC <cmears> Is there any way to get a 2D bounding box from an Envelope?
2012-04-26 00:46:44 UTC <byorgey> cmears: yes, use the 'boundingBox' function from  Diagrams.BoundingBox
2012-04-26 00:58:41 UTC <cmears> Thanks
2012-04-26 00:58:59 UTC <cmears> (And I will at least glance at the documentation next time (:  )
2012-04-26 01:18:03 UTC <byorgey> cmears: hehe, no worries =)
2012-04-26 01:19:38 UTC <byorgey> it's certainly not always obvious even when looking at the docs, what with all the type class polymorphism =)
2012-04-26 01:33:06 UTC <cmears> I looked in the Envelope module looking for "toBoundingBox", but didn't look for the other way around
2012-04-26 01:58:13 UTC <byorgey> cmears: yeah, Envelopes are fundamental and bounding boxes are sort of an add-on, so it makes more sense to have the bounding box module depend on envelopes rather than vice versa
2012-04-26 20:36:09 UTC <vyom> I am *this* close to adding clipping support for diagrams-svg http://dl.dropbox.com/u/953/logo/clipping.svg
2012-04-26 20:36:30 UTC <vyom> i need  a way to generate a unique XML id for each clipping path
2012-04-26 20:36:34 UTC <vyom> any ideas?
2012-04-26 20:36:59 UTC <vyom> does diagrams expose a unique ID of some kind for the style maps it generates?
2012-04-26 20:37:23 UTC <vyom> i need a unique id for every call to withStyles
2012-04-26 20:37:34 UTC <vyom> err.. i mean withStyle
2012-04-26 21:19:11 UTC <fryguybob> vyom: Could keep a counter state and increment it?
2012-04-26 21:19:29 UTC <vyom> fryguybob: i guess.. but for that i might need some sort of a monad
2012-04-26 21:20:01 UTC <vyom> the diagrams-svg implementation does not really have a monad.. like the cairo one does I think..
2012-04-26 21:20:07 UTC <vyom> operations are mostly stateless
2012-04-26 21:20:26 UTC <vyom> so it would be best if I could derive a unique ID out of the inputs I am getting into withStyle
2012-04-26 21:32:50 UTC <byorgey> vyom: oh, you mean you need a unique ID for clipping paths so you can tell when you are passed the same one as before?
2012-04-26 21:34:26 UTC <vyom> well.. i did not think that far ahead.. but if you open up the source of the svg i linked
2012-04-26 21:34:52 UTC <vyom> u need to construct a clipping path inside a clipPath element
2012-04-26 21:35:00 UTC <vyom> and give it an ID
2012-04-26 21:35:29 UTC <vyom> and then use that ID for the container that contains the diagram that needs to be clipped
2012-04-26 21:35:50 UTC <byorgey> oh, I see
2012-04-26 21:35:57 UTC <byorgey> so you really did just mean literally what you said =)
2012-04-26 21:36:22 UTC <vyom> so right now i am using a single ID.. "myClip"
2012-04-26 21:36:39 UTC <vyom> but in a diagram with multiple multiple clip paths
2012-04-26 21:36:44 UTC <vyom> oops.. :)
2012-04-26 21:36:48 UTC <byorgey> right, I get it
2012-04-26 21:36:50 UTC <vyom> multiple clip paths
2012-04-26 21:37:05 UTC <vyom> i need to make sure the IDs are unique
2012-04-26 21:37:06 UTC <vyom> ya
2012-04-26 21:38:30 UTC <byorgey> vyom: Well, diagrams doesn't really do that currently, and I'm not sure that it even should
2012-04-26 21:38:52 UTC <byorgey> vyom: I think your best bet will be to change your Render type  to  StateT Int S.Svg  or something
2012-04-26 21:39:16 UTC <byorgey> so you keep track of a counter with the next id to use
2012-04-26 21:39:31 UTC <byorgey> then doRender will actually run it starting at 0 or whatever and return the Svg
2012-04-26 21:39:37 UTC <vyom> ya.. i guess :S
2012-04-26 21:40:24 UTC <vyom> it would work..
2012-04-26 21:40:32 UTC <byorgey> vyom: or if you want to be crazy you can run a hash function over the vertices of the clipping path to generate the id ;)
2012-04-26 21:40:50 UTC <vyom> hehe
2012-04-26 21:41:06 UTC <vyom> just for discussion sake, if diagrams exposed the entire tree at some point..
2012-04-26 21:41:13 UTC <vyom> i could use something like adjustDia
2012-04-26 21:41:34 UTC <byorgey> vyom: oh, to go through and add unique id's to the tree?
2012-04-26 21:41:37 UTC <vyom> and do some of this id assignment stuff before i reach the rendering stuff
2012-04-26 21:41:43 UTC <vyom> in this use case..
2012-04-26 21:41:46 UTC <byorgey> yeah, that makes sense actually
2012-04-26 21:42:05 UTC <vyom> i dont need an unique id unless there is clipping
2012-04-26 21:43:00 UTC <byorgey> well, I'm currently working on a redesign of the core data structures which will make this kind of thing easier
2012-04-26 21:43:11 UTC <byorgey> but don't hold your breath =)
2012-04-26 21:43:14 UTC <vyom> haha
2012-04-26 21:43:47 UTC <vyom> sure.. i guess it is not hard to make a stateful renderer.. it makes sense for this scenario
2012-04-26 21:44:39 UTC <byorgey> yeah, it shouldn't be too bad, and yes, it seems to me like this is exactly the kind of thing you want it for
2012-04-26 21:45:25 UTC <vyom> another way that places more of a burden on the user..
2012-04-26 21:45:40 UTC <vyom> is to name the diagram whenever user is clipping
2012-04-26 21:46:01 UTC <byorgey> vyom: yeah, but the backend doesn't get access to those names
2012-04-26 21:46:03 UTC <vyom> the render logic can then check if there is a named attribute.. and use that.. otherwise fallback to default
2012-04-26 21:46:18 UTC <byorgey> they are used only to help construct the diagram
2012-04-26 21:46:20 UTC <vyom> hmm.. ok
2012-04-26 21:46:26 UTC <byorgey> but maybe it should
2012-04-26 21:46:54 UTC <vyom> well.. I guess i was thinking of custom attributes then
2012-04-26 21:47:08 UTC <byorgey> actually, I think we should have two kinds of names: one which is for giving names to subdiagrams to help refer to them later, and one which is intended for backends to use
2012-04-26 21:47:12 UTC <byorgey> yeah, a custom "name" attribute
2012-04-26 21:47:22 UTC <vyom> diagrams-svg could define a custom attribute called clipPathId
2012-04-26 21:47:28 UTC <byorgey> yes, it could
2012-04-26 21:47:51 UTC <byorgey> right, but then anyone wanting to use clipping with the diagrams-svg backend would be required to give a clipPathId?
2012-04-26 21:48:00 UTC <byorgey> that would be strange
2012-04-26 21:48:04 UTC <vyom> yes.. thats what I dont like about it
2012-04-26 21:48:07 UTC <byorgey> especially since other backends do not require it
2012-04-26 21:48:43 UTC <byorgey> definitely not worth doing that just to avoid usign the State monad =)
2012-04-26 21:48:56 UTC <vyom> ah well.. StateT SvgState Svg it is then
2012-04-26 21:49:00 UTC <vyom> yes that's right
2012-04-26 21:49:35 UTC <vyom> actually.. now that I think about it.. it is possible to thread state without using a state monad
2012-04-26 21:49:57 UTC <vyom> start with adjustDia and assign a custom attribute
2012-04-26 21:50:05 UTC <vyom> and keep reading and incrementing it
2012-04-26 21:50:11 UTC <vyom> does that make sense?
2012-04-26 21:52:26 UTC <byorgey> no, I don't think that's possible
2012-04-26 21:52:33 UTC <byorgey> how would you increment it?
2012-04-26 21:52:42 UTC <byorgey> you can't change the diagram you are in the midst of rendering
2012-04-26 21:53:31 UTC <byorgey> ACTION -> home
2012-04-26 21:54:01 UTC <vyom> yes.. you are right.. more precisely.. you can change it before calling the appropriate render methods
2012-04-26 21:54:05 UTC <vyom> but it wont be persisted
2012-04-26 22:22:26 UTC <vyom> committed this for now : https://github.com/deepakjois/diagrams-svg/commit/3ac65d45ab0b101dee79e35affe879206f57b6b2
2012-04-26 22:22:58 UTC <vyom> will circle back (hopefully soon) to fix the unique id problem
2012-04-26 23:18:05 UTC <vyom> ok i am looking at text now.. and can use some help..
2012-04-26 23:18:07 UTC <vyom> http://www.w3.org/TR/SVG/text.html#TextElement
2012-04-26 23:18:20 UTC <vyom> SVG requires an X and Y co-ordinate on the text
2012-04-26 23:18:24 UTC <vyom> to position..
2012-04-26 23:19:00 UTC <vyom> given that in diagrams, text doesnt occupy any size.. it does not have an envelope..
2012-04-26 23:19:11 UTC <vyom> so how do i come up with an appropriate X/Y value?
2012-04-26 23:19:18 UTC <vyom> i guess i can't right?
2012-04-26 23:22:16 UTC <luite> using text-anchor to center it on the given coordinate?
2012-04-26 23:23:18 UTC <vyom> luite: what do you mean by 'given' co-ordinate
2012-04-26 23:24:01 UTC <vyom> when we render text in diagrams.. we just call.. a funciton like 'text "write me"'
2012-04-26 23:24:34 UTC <vyom> there is no bounding box or a position of any kind
2012-04-26 23:25:02 UTC <luite> hmm ok, i thought it had a zero dimension box
2012-04-26 23:25:15 UTC <vyom> i guess i need to look at what cairo does
2012-04-26 23:25:18 UTC <vyom> to get a better idea
2012-04-26 23:25:27 UTC <vyom> because it must have the same problem
2012-04-26 23:26:25 UTC <vyom> ah never mind.. the text object does have a transform
2012-04-26 23:26:30 UTC <vyom> so i can use that i guesss
2012-04-26 23:26:39 UTC <vyom> http://projects.haskell.org/diagrams/doc/Diagrams-TwoD-Text.html
2012-04-26 23:28:52 UTC <cmears> Yes, you should be able to transform it
2012-04-26 23:29:12 UTC <cmears> Translate, to be specific
2012-04-26 23:58:57 UTC <vyom> cmears: yes.. now trying to figure out what incantation i need to convert the transformation into an X/Y co-ordinate in the final vector space
2012-04-27 00:08:24 UTC <vyom> the way I am thinking about it.. I will translate 'origin' by the given transformation, extract the x and y co-ordinates and use them in my SVG output
2012-04-27 00:08:36 UTC <vyom> anyone know off hand how to do that?
2012-04-27 00:08:48 UTC <vyom> translate t origin ?
2012-04-27 00:22:33 UTC <vyom> apply t r2 (0,0)
2012-04-27 00:22:37 UTC <vyom> seems like the right incantation
2012-04-27 00:23:13 UTC <vyom> am i right?
2012-04-27 00:24:12 UTC <fryguybob> ACTION practices guess and check in these situations with enough points that it constitutes a proof.
2012-04-27 00:42:47 UTC <vyom> :)
2012-04-27 00:43:23 UTC <cmears> I think that is what the TikZ backend does
2012-04-27 00:43:54 UTC <cmears> render _ (Text tr al str) = [...] (unr2 . transl $ tr)
2012-04-27 00:44:06 UTC <vyom> so.. this isnt working http://hpaste.org/67686
2012-04-27 00:44:30 UTC <vyom> hmm.. ok.. lets see
2012-04-27 00:46:05 UTC <vyom> okk.. it kinda works
2012-04-27 00:46:46 UTC <vyom> thanks cmears
2012-04-27 00:47:52 UTC <cmears> No worries
2012-04-27 00:48:43 UTC <vyom> http://dl.dropbox.com/u/953/logo/text.svg that is my crude text output
2012-04-27 00:50:28 UTC <vyom> its gonna be a pain trying to reconcile text outputs on different backends
2012-04-27 00:52:08 UTC <fryguybob> That text looks stroked.  Ah, source says that it is.
2012-04-27 00:53:01 UTC <luite> vyom: i don't think it needs to be a goal to make them look identical
2012-04-27 00:53:20 UTC <luite> similar differences as with html in different browsers could be allowed
2012-04-27 00:53:28 UTC <vyom> fryguybob: not by design.. maybe the default are wonky
2012-04-27 00:54:22 UTC <vyom> luite: i guess so.. but it would be ideal to have no surprises if somebody is moving from one backend to another
2012-04-27 00:55:05 UTC <luite> great work on the svg backend btw
2012-04-27 00:55:08 UTC <vyom> at the least there is should be a documented list of expected divergence from a "default" backend
2012-04-27 00:55:13 UTC <vyom> luite: thanks
2012-04-27 00:55:30 UTC <vyom> at this point the de-facto "default" backend is Cairo
2012-04-27 00:56:25 UTC <fryguybob> vyom: If I remove the stroke stuff in the <g> around the <text> and set the fill-opacity to 1.0 it looks right.
2012-04-27 00:57:37 UTC <vyom> fryguybob: hmm... so thats quite tricky.. it is using some previous value for all those things
2012-04-27 00:58:21 UTC <vyom> the only way out might be to use an additiona <g> node to turn off the values
2012-04-27 00:59:40 UTC <vyom> fryguybob: i just emptied out the attributes <g> and that seems fine too
2012-04-27 00:59:49 UTC <vyom> :(
2012-04-27 01:00:24 UTC <fryguybob> Yeah, I would guess that text would default to filled with black.
2012-04-27 01:01:22 UTC <fryguybob> is <g> group?
2012-04-27 01:02:58 UTC <vyom> yes.. it is a grouping node
2012-04-27 01:03:17 UTC <vyom> so the <text> gets grouped inside a <g> node which is good
2012-04-27 01:03:35 UTC <vyom> but it is picking up some values for stroke and fill
2012-04-27 01:03:44 UTC <vyom> which are being set by diagrams
2012-04-27 01:04:09 UTC <vyom> i guess Cairo does text rendering differently.. in that it ignores those values likely
2012-04-27 01:04:50 UTC <luite> so the svg backend is already better!
2012-04-27 01:04:52 UTC <vyom> in this case.. the code rendering the <g> element outside each "primitive" in the diagram is generic..
2012-04-27 01:05:26 UTC <vyom> luite: hehe.. not really. Text rendering in Cairo is much more sophisticated
2012-04-27 01:05:31 UTC <luite> how about font support btw, are there haskell libs that support loading fonts and converting them to svg?
2012-04-27 01:05:56 UTC <vyom> luite : there is a library called SVGFonts which somebody wrote for diagrams
2012-04-27 01:06:23 UTC <luite> oh cool
2012-04-27 01:06:24 UTC <vyom> http://hackage.haskell.org/package/SVGFonts-1.1
2012-04-27 01:06:43 UTC <vyom> but it requires you to have an existing SVG font description handy
2012-04-27 01:07:43 UTC <fryguybob> I can't remember what you have to do in Postscript to get the outline of a font.
2012-04-27 01:07:52 UTC <luite> ah converting could be done by an external program, i guess you can run a font forge script
2012-04-27 01:08:34 UTC <luite> hmm, didn't know that was possible
2012-04-27 01:08:54 UTC <fryguybob> But I'm using the "show" operator (and I think the Cairo backend is still doing that too) which means there is no stroke operation happening.
2012-04-27 01:10:08 UTC <luite> hm don't svg's support web fonts like html5?
2012-04-27 01:10:31 UTC <luite> (dunno if it's html5 or css3 or whatever, but browsers support it :) )
2012-04-27 01:12:17 UTC <vyom> there are different kinds of fonts supported by web fonts
2012-04-27 01:12:22 UTC <vyom> svg fonts is one of them
2012-04-27 01:12:56 UTC <vyom> SVG does have a "font-family" attribute to specify a font for text
2012-04-27 01:13:15 UTC <vyom> so you dont *have* to use an SVG font to render text in SVG
2012-04-27 01:13:44 UTC <fryguybob> vyom: One thing you could do is wrap all <text> in <g stroke-opacity="0.0" fill-opacity="1.0">...</g>
2012-04-27 01:14:16 UTC <vyom> as for "web fonts", all that means I guess is if SVG can support a font specified by the creator even if it is not installed on the user's machine.. using some web font mechanism
2012-04-27 01:16:19 UTC <fryguybob> Humm, does the Cairo backend result in text with your example?  If it does, then it seems like the opacity part of the color does not get applied to text (Postscript does not support alpha blending at this point).
2012-04-27 01:16:40 UTC <luite> vyom: yeah that's what i meant, can you specify some external font file like in html style tags?
2012-04-27 01:17:35 UTC <vyom> luite: will check with the resident expert, my wife :)
2012-04-27 01:17:37 UTC <vyom> i have no idea
2012-04-27 01:21:53 UTC <vyom> fryguybob: i am not sure.. But there may be multiple things going on. I am trying to strip out each of the default one by one and its leading to unpredictable results
2012-04-27 01:22:01 UTC <vyom> i need to understand defaults in SVG better
2012-04-27 01:23:02 UTC <vyom> it seems that regardless of the values, sometimes even the presence of an attribute makes a difference to the output, even if the value is set to a value that *should* have not effect
2012-04-27 01:23:25 UTC <vyom> s/value is set to a value/attribute is set to a value/
2012-04-27 01:26:26 UTC <fryguybob> vyom: Strange indeed.
2012-04-27 01:29:31 UTC <vyom> http://www.w3.org/TR/SVG/text.html oh well.. this is the amount of verbiage i have to get through if I have to implement text correctly ;)
2012-04-27 01:29:57 UTC <vyom> i think it is a good time to leave this coffee shop and head home..
2012-04-27 01:29:59 UTC <vyom> later
2012-04-27 02:31:41 UTC <byorgey> fryguybob: yeah, opacity is not really handled correctly in cairo right now
2012-04-27 02:31:51 UTC <byorgey> I think I filed a bug on the bug tracker
2012-04-27 05:43:56 UTC <mgsloan> tgeeky: This is a pretty interesting paper about the value of "speculation" as applied to IDE plugin systems:  http://abstract.cs.washington.edu/~blucia0a/pubs/pluginpaper.pdf
2012-04-27 23:33:31 UTC <vyom> Ok so I added a State monad around the SVG rendering, just to keep track of clipping IDs
2012-04-27 23:33:32 UTC <vyom> https://github.com/deepakjois/diagrams-svg/commit/c610a436b710b90cb08d68ed9342daf94e2c2603
2012-04-27 23:34:27 UTC <luite> ew monads
2012-04-27 23:43:11 UTC <vyom> heh
2012-04-28 00:41:57 UTC <vyom> can anyone explain how text is rendered in Cairo? I see that the first thing that happens in the text rendering code is `cairoTransf (tr <> reflectionY)`
2012-04-28 00:42:03 UTC <vyom> what does that do exactly?
2012-04-28 00:42:32 UTC <luite> i think that's because the cairo coordinate system is upside down
2012-04-28 00:44:49 UTC <vyom> ok.. I guess the question i am trying to ask if.. what does Cairo consider as the "starting point" of the text..
2012-04-28 00:44:59 UTC <vyom> lets say the text is just a single alphabet "a"
2012-04-28 00:45:52 UTC <vyom> when there is no transform on the text "a", what is the local origin of the text..
2012-04-28 00:46:07 UTC <vyom> is it top left? or bottom left?
2012-04-28 00:46:20 UTC <luite> that i don't know
2012-04-28 00:47:21 UTC <vyom> in SVG.. when i say <text x="0" y="0">a</text> it renders the glyph "a" with the bottom left of the glyph positioned at 0,0
2012-04-28 00:47:36 UTC <vyom> so effectively it is not visible
2012-04-28 00:48:26 UTC <vyom> however if it is a character like "g".. because there is a descender.. i can see that in the display
2012-04-28 00:49:02 UTC <vyom> which suggests that 0,0 is referring to the bottom left of the baseline of the font being used
2012-04-28 00:49:12 UTC <vyom> i am curious how Cairo does these calculations
2012-04-28 00:49:48 UTC <vyom> i guess the `cairoTransf (tr <> reflectionY)` may be a red herring..
2012-04-28 00:50:43 UTC <vyom> there is some stuff after that statement which is relevant.. but it kinda looks dense to me right now
2012-04-28 00:53:12 UTC <vyom> the other thing is that text attributes like font size are not available when you are rendering text.. so I wonder how Cairo does the bounds calculation
2012-04-28 01:03:46 UTC <vyom> looks like i am talking to myself.. but hoping byorgey will read this at some point and replu
2012-04-28 01:03:53 UTC <vyom> s/replu/reply/
2012-04-28 01:05:12 UTC <vyom> I am wondering if I need to capture additional state inside the monad I am using to render SVG.. when I am about to render Text.. I need to query the state monad for font information etc.. so that I can then use that to tweak the transforms appropriately
2012-04-28 01:36:52 UTC <vyom> i need to store the Style attributes somewhere.. but looks like Style is parameterizsed by another type.. like Style v
2012-04-28 01:37:16 UTC <vyom> does that mean any data type that needs to store styles needs to be parameterized
2012-04-28 01:37:26 UTC <vyom> ?
2012-04-28 01:55:12 UTC <fryguybob> vyom: The Cairo backend uses http://www.cairographics.org/manual/cairo-text.html#cairo-show-text
2012-04-28 01:55:26 UTC <fryguybob> Which is not a good way to go about it.
2012-04-28 01:55:30 UTC <vyom> ok
2012-04-28 01:57:27 UTC <fryguybob> This API doesn't even work correctly on Windows.
2012-04-28 02:16:19 UTC <vyom> https://dl-web.dropbox.com/get/Public/logo/text.svg?w=cf1bbb76
2012-04-28 02:16:35 UTC <vyom> so i can tell that in SVG the local origin is at the bottom left of the text
2012-04-28 20:13:26 UTC <vyom> is there a way to take a T2 and remove the translation component from it?
2012-04-28 22:51:52 UTC <vyom> byorgey: I sent  a mail to diagrams-discuss as well https://gist.github.com/2522452
2012-04-28 22:52:09 UTC <vyom> made that gist after doing a bit of research and prototyping..
2012-04-28 22:52:25 UTC <vyom> i got a quite further along implementing text support
2012-04-28 22:52:29 UTC <vyom> before getting stuck
2012-04-28 22:52:35 UTC <vyom> any help is appreciated
2012-04-28 23:00:00 UTC <vyom> here is the ideal text output : http://dl.dropbox.com/u/953/logo/text_ideal.svg
2012-04-28 23:19:01 UTC <byorgey> vyom: I'll respond more carefully on Monday
2012-04-28 23:19:19 UTC <vyom> sure
2012-04-28 23:19:21 UTC <vyom> thanks
2012-04-28 23:19:27 UTC <byorgey> vyom: currently traveling (@ my cousin's wedding) so I don't have much time
2012-04-28 23:19:47 UTC <vyom> np.. i will keep digging in the meanwhile
2012-04-28 23:20:08 UTC <byorgey> vyom: note there are also some things I'm not happy about with the way text is handled in the cairo backend
2012-04-28 23:20:31 UTC <byorgey> so this is also a good opportunity to decide on something better and implement it in both, rather than just trying to get the SVG backend to exactly match ciaro
2012-04-28 23:20:34 UTC <byorgey> *cairo
2012-04-28 23:20:48 UTC <byorgey> anyway, I'll write more about that on Monday too
2012-04-28 23:21:28 UTC <byorgey> vyom: I'll just say quickly that I don't think you want to pick apart the transformation quite so much... just apply the entire transformation and then render the text
2012-04-28 23:21:39 UTC <byorgey> for example it should be possible to apply shears to text etc.
2012-04-28 23:22:20 UTC <byorgey> as for font size, don't worry about it too much for now, that's one of the things where I don't like the current way it's done
2012-04-28 23:26:32 UTC <vyom> I like the fact that the default font size in the local vector space is 1 and we store transformation mappings from local -> final vector spaces..
2012-04-28 23:26:50 UTC <vyom> it seems to provide flexibility
2012-04-28 23:27:02 UTC <vyom> esp for SVG.. as long as we can get the eventual value
2012-04-28 23:27:16 UTC <vyom> just that I dont know how to :)
2012-04-28 23:33:07 UTC <byorgey> vyom: yeah, what I don't like is that the font size actually determines the shape of glyphs, kerning, etc.
2012-04-28 23:33:14 UTC <byorgey> so setting the font size to 1 makes it look weird
2012-04-28 23:33:49 UTC <byorgey> there needs to be a way to set the "font size" separately from the actual height (wrt the local vector space) of the text
2012-04-28 23:33:58 UTC <byorgey> so you can say "use 12 pt text that is 3 units hight"
2012-04-28 23:34:54 UTC <byorgey> vyom: one problem is that in the cairo rendering monad one can extract information about fonts such as info about the height etc.
2012-04-28 23:35:15 UTC <byorgey> but the SVG backend doesn't give you access to that
2012-04-28 23:35:39 UTC <byorgey> not sure off the top of my head what the solution is.  I'll think about it.
2012-04-28 23:36:27 UTC <vyom> SVG does allow "em" based font specification.. which is basically a relative unit
2012-04-28 23:37:16 UTC <byorgey> ah, interesting
2012-04-28 23:37:50 UTC <vyom> in fact "em" in web based specs like CSS etc has always been relative
2012-04-28 23:38:24 UTC <vyom> so when I look at font size 1 in diagrams, i could interpret it as 1em
2012-04-28 23:38:37 UTC <vyom> which means it is 1x the current default size
2012-04-28 23:39:00 UTC <vyom> i just set the default to "1" because i did not want to mess up my calculations
2012-04-28 23:39:10 UTC <vyom> i could as well have set it to "15pt"
2012-04-28 23:39:32 UTC <vyom> and 1em would have been equal to "15pt" , 2em to "30pt" and so on
2012-04-28 23:40:40 UTC <vyom> but then that would mess up the other values.. like the rects you would draw around
2012-04-28 23:40:49 UTC <vyom> but then there is no real way to get around it
2012-04-28 23:43:13 UTC <vyom> More about SVG units: http://www.w3.org/TR/SVG/coords.html#Units
2012-04-29 00:41:46 UTC <vyom> how do i find the angle between two vectors
2012-04-29 00:42:11 UTC <fryguybob> dot product or cross product can get you there.
2012-04-29 00:45:08 UTC <vyom> looks like there is a function called direction
2012-04-29 00:45:13 UTC <vyom> which i could use
2012-04-29 00:52:00 UTC <fryguybob> vyom: Depending on what you are doing you can usually avoid using angles directly.
2012-04-29 00:52:47 UTC <vyom> fryguybob: you are probably right.. i could directly calculate a affine transformation
2012-04-29 00:52:57 UTC <vyom> rather than messing with angles
2012-04-29 01:06:42 UTC <vyom> Finally.. after hours of toiling... I have this to present http://dl.dropbox.com/u/953/logo/text.svg .. compare with http://projects.haskell.org/diagrams/manual/diagrams-manual.html#rotation
2012-04-29 01:09:25 UTC <vyom> i wasted to lot of time trying to make it as close to Cairo as possible.. not that, that should be a goal.. but I still learnt a lot about SVG text in the bargain..
2012-04-29 01:22:57 UTC <fryguybob> vyom: Looks nice :D
2012-04-29 01:23:35 UTC <vyom> thanks
2012-04-29 01:24:13 UTC <vyom> the last piece  of the puzzle is getting other transformations right.. shear transformations arent being handled right now..
2012-04-29 01:24:23 UTC <vyom> just translates and rotates
2012-04-29 02:12:35 UTC <byorgey> vyom: doesn't SVG have any generic "transform" node where you just give it the parameters of an arbitrary affine transformation?
2012-04-29 02:12:50 UTC <vyom> yes it does..
2012-04-29 02:12:57 UTC <vyom> it has a transform attribute
2012-04-29 02:13:14 UTC <vyom> what i need is to provide it an appropriate matrix
2012-04-29 02:13:36 UTC <byorgey> vyom: right, so look at the cairo backend to see how to extract the matrix coefficients from a T2
2012-04-29 02:13:36 UTC <vyom> in form "matrix(a b c d e f g)"
2012-04-29 02:13:47 UTC <byorgey> it's pretty easy
2012-04-29 02:14:03 UTC <vyom> i did look.. maybe not carefully enough
2012-04-29 02:14:08 UTC <byorgey> I think the function is called cairoTransform or something like that
2012-04-29 02:14:51 UTC <vyom> ah ok.. there it is!
2012-04-29 02:14:58 UTC <byorgey> vyom: http://hackage.haskell.org/packages/archive/diagrams-cairo/0.5.0.1/doc/html/src/Diagrams-Backend-Cairo-Internal.html#cairoTransf
2012-04-29 02:14:58 UTC <vyom> should have looked carefully
2012-04-29 02:15:19 UTC <vyom> however.. there is one complication which is why i need to decompose the transformation matrix
2012-04-29 02:15:57 UTC <vyom> I tried a few examples.. where I tried to apply Y-scaling and it doesnt work correctly
2012-04-29 02:16:24 UTC <vyom> there seem to be something about the way SVG renders stuff
2012-04-29 02:16:31 UTC <byorgey> OK, I believe you =)
2012-04-29 02:16:43 UTC <vyom> it uses the intial font size.. renders something and then scales it up
2012-04-29 02:16:49 UTC <byorgey> I'll look at it more carefully in a few days
2012-04-29 02:17:04 UTC <vyom> instead of using a higher point font size
2012-04-29 02:17:36 UTC <vyom> and so.. in order to get what I want.. i am decomposing the transformation.. applying the y scale as a font size
2012-04-29 02:17:44 UTC <vyom> and the others as a normal transform..
2012-04-29 02:18:26 UTC <vyom> i am not sure how it would work.. but the basic idea is to "silence" the Y scaling in the transformation mapping because it is already accounted for in the font size increase
2012-04-29 02:19:05 UTC <vyom> it might mess up shearing.. as you were alluding to earlier.. but i dunno exactly how it would work.. so i am trying stuff out
2012-04-29 02:19:42 UTC <vyom> and i ended up with some code similar to that code in cairoTransf.. so i am glad i am on the right track
2012-04-29 02:20:22 UTC <byorgey> OK.  I think this may also be addressed by what I was talking about earlier, separating out the notion of font size from the actual size
2012-04-29 02:20:32 UTC <byorgey> but I'm not exactly sure
2012-04-29 02:20:46 UTC <vyom> byorgey: yes.. that is another way to address by changing diagrams design
2012-04-29 02:21:00 UTC <vyom> but for now.. i am trying to work with the current system
2012-04-29 02:22:14 UTC <vyom> i wish i knew co-ordinate geometry better.. it would be a lot easier to reason about this stuff :).. right now I am just using intuition, and trial and error
2012-04-29 02:22:23 UTC <vyom> math can be such a force multiplier :)
2012-04-29 02:22:33 UTC <byorgey> hehe =)
2012-04-29 02:22:43 UTC <byorgey> if you have any particular questions about coordinate geometry, just ask
2012-04-29 02:23:01 UTC <byorgey> anyway, thanks for the great work =)
2012-04-29 02:23:04 UTC <byorgey> I'm off to bed
2012-04-29 02:23:24 UTC <vyom> well.. not really.. i did study it once upon a time.. and bits of knowledge remain.. i hope to get on with that linear algebra textbook that is lying around
2012-04-29 02:23:34 UTC <vyom> later
2012-04-30 20:15:27 UTC <vyom> I updated the gist I posted on diagrams-discuss with some more comments https://gist.github.com/2522452#gistcomment-291797
2012-04-30 20:16:21 UTC <vyom> the transformation matrix for the text changes with the requested size of the resulting image..
2012-04-30 20:17:30 UTC <vyom> i figured out a way to use the "original" matrix (i.e the one that is generated when the size params are left empty) to achieve proper text rendering
2012-04-30 20:18:09 UTC <vyom> could somebody help we with figuring out how to get the "original" matrix.. if I have the height, width and the final transformation matrix
2012-05-01 00:28:02 UTC <tgeeky> vyom: is not here.
2012-05-01 00:29:20 UTC <tgeeky> byorgey: is it easy to describe what the default behavior of diagrams is when you don't supply -w and -h?
2012-05-01 00:50:22 UTC <byorgey> tgeeky: yes, it simply uses the absolute size of the diagram
2012-05-01 15:51:41 UTC <vyom> byorgey: replied to your gist https://gist.github.com/2522452#gistcomment-293581 thanks for the pointer to adjustDia2D
2012-05-01 15:59:13 UTC <byorgey> vyom: I just replied to your reply.
2012-05-01 16:00:15 UTC <vyom> and i just posted a screenshot
2012-05-01 16:00:22 UTC <vyom> this is getting really bizarre :)
2012-05-01 16:00:46 UTC <byorgey> indeed =)
2012-05-01 16:00:50 UTC <byorgey> let me post a screenshot too
2012-05-01 16:08:26 UTC <vyom> hmm.. it looks like the fill and stroke params are interfering with the output
2012-05-01 16:08:49 UTC <vyom> i removed all the fill and stroke params from the <g> parent element of <text>
2012-05-01 16:09:13 UTC <vyom> and both of them look the same on chrome, safari and firefox 11
2012-05-01 16:10:15 UTC <byorgey> aha
2012-05-01 16:10:45 UTC <byorgey> I'm not sure why they would give different outputs but at least I'm glad you found a way to make them the same =)
2012-05-01 16:11:06 UTC <vyom> ha ha
2012-05-01 16:11:33 UTC <byorgey> (I posted a screenshot, though maybe it doesn't matter anymore)
2012-05-01 16:12:12 UTC <vyom> ya.. u shud try refreshing the two images in firefox http://dl.dropbox.com/u/953/logo/text_100x100_1.svg
2012-05-01 16:12:17 UTC <vyom> and http://dl.dropbox.com/u/953/logo/text_100x100_2.svg
2012-05-01 16:13:14 UTC <byorgey> yep, they look identical for me now
2012-05-01 16:15:10 UTC <vyom> hmm.. and to think I wasted all those hours chasing all kinds of other lines of investigation :)
2012-05-01 16:15:34 UTC <vyom> oh well.. i learned a fair bit about SVG text .. so its not too bad :)
2012-05-01 16:16:52 UTC <byorgey> yeah, I don't think it was a waste
2012-05-01 16:16:58 UTC <byorgey> roundabout, perhaps =)
2012-05-01 16:19:52 UTC <vyom> i should stop using Chrome for testing.. just way too many subtle bugs in SVG rendering :)
2012-05-01 16:21:15 UTC <vyom> anyway.. thanks for your help.. I am glad I got as far as i did over the past few days.. in between packing, and moving cities and what not..
2012-05-01 16:21:30 UTC <vyom> I am reporting from San Francisco now.. got here yesterday
2012-05-01 16:22:34 UTC <byorgey> woah, really?
2012-05-01 16:23:03 UTC <byorgey> you mean you were traveling, or you mean really Moving moving?
2012-05-01 16:23:18 UTC <vyom> i thought i posted earlier on the list..
2012-05-01 16:23:26 UTC <vyom> but yes.. i moved to San Francisco
2012-05-01 16:23:53 UTC <vyom> last week.. i was living out of a suitcase in an empty apartment..
2012-05-01 16:24:12 UTC <byorgey> I don't remember seeing anything about you moving (though I can be forgetful =)
2012-05-01 16:24:18 UTC <vyom> s/list/channel/
2012-05-01 16:24:26 UTC <byorgey> anyway, cool
2012-05-01 16:24:29 UTC <byorgey> how's SF so far?
2012-05-01 16:24:53 UTC <vyom>  this is what i posted http://www.facebook.com/deepak.jois/posts/10150686205526099 which more than explains it :)
2012-05-01 16:24:55 UTC <vyom> its nice
2012-05-01 16:25:14 UTC <vyom> excited to be here
2012-05-01 16:26:27 UTC <byorgey> oh, now I remember, I saw your link but I have blocked myself from checking facebook during the day so I couldn't read it =)
2012-05-01 16:26:40 UTC <vyom> oh.. too bad
2012-05-01 16:27:21 UTC <vyom> well.. in short my wife moved here.. so i decided to follow suit.. and at the same time decided to take some time off
2012-05-01 16:28:04 UTC <byorgey> sounds excellent
2012-05-01 16:28:16 UTC <vyom> now i get to experience the city as an unemployed bum.. :)
2012-05-01 16:28:25 UTC <byorgey> hehe
2012-05-01 16:28:40 UTC <byorgey> but not homeless which I assume makes a big difference =)
2012-05-01 16:29:15 UTC <vyom> ha ha.. yes.. i do have a home.. which does make a difference
2012-05-01 16:29:33 UTC <vyom> and internet for that matter
2012-05-01 16:30:06 UTC <byorgey> indeed
2012-05-01 16:32:34 UTC <vyom> in fact.. last week made me realise.. that i could totally live with a laptop and a suitcase full of possessions for a long period of time..
2012-05-01 16:32:46 UTC <vyom> be a nomadic hacker of sorts
2012-05-01 16:34:48 UTC <byorgey> heh, yeah, that sounds fun
2012-05-01 16:35:05 UTC <byorgey> you could be like Paul Erdos... just show up on people's doorsteps and spend a week hacking together
2012-05-01 16:39:53 UTC <ClaudiusMaximus> hi! i started porting graphgrow <http://claudiusmaximus.goto10.org/GG/> to haskell, got a renderer sorta working <http://claudiusmaximus.goto10.org/g/haskell/gg2/spiral_1.618_0.png> - would it be sane to try and use diagrams/cairo/gtk for the graph (as in nodes and edges) editor?
2012-05-01 16:41:54 UTC <vyom> ClaudiusMaximus: what is graphgrow? I could not quite tell from a glance at the website
2012-05-01 16:42:09 UTC <byorgey> vyom: look in videos/
2012-05-01 16:43:08 UTC <byorgey> ClaudiusMaximus: sure, it sounds sane to me.  we don't have a lot of specific support for making interactive gtk/cairo widgets at the moment, but it's certainly possible
2012-05-01 16:44:02 UTC <byorgey> ClaudiusMaximus: e.g. take a look at mgsloan's https://github.com/mgsloan/gtk-toy  and  https://github.com/mgsloan/gtk-toy-diagrams
2012-05-01 16:44:21 UTC <ClaudiusMaximus> ok - can't hack any more today (other things need doing), tomorrow might be busy, so thursday is probably when i'll start the gui side
2012-05-01 16:44:38 UTC <ClaudiusMaximus> byorgey: thanks for the links, bookmarking..
2012-05-01 16:45:12 UTC <vyom> it is funny.. i was about to paste the exact same links.. i saw a demo from mgsloan using gtk-toy-diagrams
2012-05-01 16:46:03 UTC <ClaudiusMaximus> :)
2012-05-01 16:46:08 UTC <byorgey> yeah, I don't know if ClaudiusMaximus can directly use gtk-toy-diagrams but certainly some of the techniques/code should be stealable
2012-05-01 17:01:14 UTC <tgeeky> lol
2012-05-01 17:01:51 UTC <tgeeky> vyom: in my browser, my screenshot looks nothing like either of your screenshots in either case
2012-05-01 17:02:11 UTC <vyom> tgeeky: which browser is that..
2012-05-01 17:02:19 UTC <tgeeky> vyom: chrome latest, I think
2012-05-01 17:02:55 UTC <vyom> actually.. i changed the files.. while i was having the conversation
2012-05-01 17:03:00 UTC <tgeeky> vyom: I figured
2012-05-01 17:03:01 UTC <tgeeky> http://i.imgur.com/NZ1fw.png
2012-05-01 17:03:35 UTC <vyom> hmm.. interesting.. so its not really the same..
2012-05-01 17:03:41 UTC <vyom> the baselines are off
2012-05-01 17:04:23 UTC <vyom> i guess i need to create a bunch of test cases and then gather results across browsers..
2012-05-01 17:04:54 UTC <tgeeky> vyom: you might be able to use the recent haskell - selenium work to automate it for chrome and firefox
2012-05-01 17:05:02 UTC <tgeeky> vyom: i'm on Windows, too, if it makes a difference.
2012-05-01 17:05:22 UTC <vyom> tgeeky: yes.. that is another factor that comes into play
2012-05-01 17:05:49 UTC <vyom> SVG rendering might differ across different OSes for the same browser too
2012-05-01 17:05:59 UTC <vyom> thanks for the screenshot
2012-05-01 17:06:59 UTC <tgeeky> vyom: note that the original picture has a "hollow" letter (white on the inside)
2012-05-01 17:07:03 UTC <tgeeky> on my screen
2012-05-01 17:08:13 UTC <vyom> hmm.. by original you mean the one right on top?
2012-05-01 17:08:36 UTC <tgeeky> vyom: i mean the one in "notes.md"
2012-05-01 17:08:49 UTC <tgeeky> https://a248.e.akamai.net/camo.github.com/76bad5df64e05c510f415c15cf1c843f823068c7/687474703a2f2f646c2e64726f70626f782e636f6d2f752f3935332f6c6f676f2f746578745f696465616c2e737667
2012-05-01 17:09:29 UTC <vyom> ok.. yes that is expected. I might have changed the code as well or something.. i was trying out a lot of stuff
2012-05-01 17:10:57 UTC <vyom> at least now i have narrowed down the investigation from mucking around with matrix transformations to setting the fill/stroke params correctly on text nodes
2012-05-01 18:39:51 UTC <tgeeky> ugh. Having SSD trouble, did a sector scan... while scanning it reports 2 bad sectors, and then after it's done scanning, it just changes the 2 to 0.
2012-05-01 18:45:53 UTC <luite> it has remapped those to the spare area
2012-05-01 18:46:36 UTC <luite> should still show up there
2012-05-01 19:18:01 UTC <Athas> When putting one diagram atop another (currently via `atop`), how do I make it top-justified, rather than centered?
2012-05-01 19:19:10 UTC <ClaudiusMaximus> Athas: atop puts the local origins in the same place, so, simply move each local origin to the top of each diagram - let me find an example...
2012-05-01 19:19:54 UTC <Athas> Oh, as in 'foo # alignT `atop` bar # alignT'?
2012-05-01 19:20:55 UTC <ClaudiusMaximus> yep that's it
2012-05-01 19:21:46 UTC <ClaudiusMaximus> (though i'd write it as   alignT foo `atop` alignT bar  if foo and bar aren't more complex, as i y about precedence
2012-05-01 19:22:00 UTC <ClaudiusMaximus> *i worry about
2012-05-02 00:06:52 UTC <vyom_> in Cairo.. does text have the concept of a stroke, or just a fill?
2012-05-02 00:08:24 UTC <byorgey> vyom_: I'm not 100% sure, but I think just a fill
2012-05-02 00:08:39 UTC <byorgey> i.e. if you want to stroke some text you have to convert it to a path first.
2012-05-02 00:09:35 UTC <vyom_> byorgey: what is the default fill color for cairo backend.. if i dont set anything
2012-05-02 00:09:36 UTC <vyom_> ?
2012-05-02 00:10:57 UTC <vyom_> what i am getting at is.. whether we need to set the fill color explicitly to get the text to show up?
2012-05-02 00:14:01 UTC <fryguybob> vyom_: Are you trying to use Cairo on Windows for text?
2012-05-02 00:14:49 UTC <vyom_> fryguybob: no.. i am actually doing some investigation in SVG.. where I realised that the default fill color is "transparent"..
2012-05-02 00:15:05 UTC <vyom_> so if i render text without specifying any fill color explicilty
2012-05-02 00:15:24 UTC <fryguybob> ok, just making sure :D.  Text with Cairo doesn't work well on Windows.
2012-05-02 00:15:28 UTC <vyom_> and set the stroke to "none".. the text does not show up
2012-05-02 00:15:39 UTC <vyom_> i am curious what is the behavior in Cairo
2012-05-02 00:15:49 UTC <vyom_> i dont have cairo setup.. so i cant verify that off hand
2012-05-02 00:15:59 UTC <fryguybob> me neither :(
2012-05-02 00:16:45 UTC <ClaudiusMaximus> http://www.cairographics.org/manual/cairo-cairo-t.html#cairo-set-source-rgba
2012-05-02 00:16:53 UTC <ClaudiusMaximus> default is black
2012-05-02 00:17:42 UTC <ClaudiusMaximus> from memory, i think cairo works by setting sources and running stroke and/or fill commands separately
2012-05-02 00:18:35 UTC <vyom_> ClaudiusMaximus: interesting.. thanks.. so cairo might be rendering text in black when there is no fill color specified expllicitly
2012-05-02 00:19:20 UTC <ClaudiusMaximus> right
2012-05-02 00:19:46 UTC <fryguybob> vyom_: That would be my impression from what I remember from poking around a while ago.
2012-05-02 00:20:39 UTC <vyom_> its kinda inconsistent.. because the default full color for for non-text diagrams primitives is transparent..
2012-05-02 00:21:02 UTC <vyom_> but it seems to work well in this instance.. since text only has the concept of fill and not stroke
2012-05-02 00:21:22 UTC <vyom_> in SVG... the <text> node can take both a fill and a stroke
2012-05-02 00:21:58 UTC <ClaudiusMaximus> cairo has (at least) 2 text APIs, i've only used the "toy" one, i don't know which diagrams-cairo uses
2012-05-02 00:22:12 UTC <vyom_> but the "stroke" attribute screws up quite badly under transforms..
2012-05-02 00:22:13 UTC <ClaudiusMaximus> http://www.cairographics.org/manual/cairo-text.html#cairo-show-text is what i used once
2012-05-02 00:22:15 UTC <fryguybob> diagrams-cairo uses they toy one righ tnow.
2012-05-02 00:57:43 UTC <vyom_> http://dl.dropbox.com/u/953/logo/textscaling.svg
2012-05-02 00:57:49 UTC <vyom_> finally this renders correctly
2012-05-02 01:01:30 UTC <mgsloan> awesome!!
2012-05-02 01:03:17 UTC <mgsloan> ACTION is finally getting closer to some brief freedom from school
2012-05-02 01:03:42 UTC <byorgey> vyom_: yay!
2012-05-02 01:05:04 UTC <vyom_> mgsloan: hi there.. I finally heard after days of waiting from somebody on OPLSS.. so I will be going there after all
2012-05-02 01:05:33 UTC <byorgey> vyom_: oh, excellent =)
2012-05-02 01:06:20 UTC <mgsloan> vyom_: Cool!!  It'll be a blast
2012-05-02 01:07:00 UTC <vyom_> byorgey mgsloan :  i am still waiting on final confirmation on registration.. i had requested for the discounted rate because i am technically "unemployed" :) and they asked me to get a letter of recommendation
2012-05-02 01:07:26 UTC <vyom_> so i was thinking i will just go in as an "industry professional" instead..
2012-05-02 01:08:22 UTC <vyom_> dont quite know what to ask my previous employer to put on my letter of recommendation :)
2012-05-02 01:08:42 UTC <vyom_> its not like i did any Haskell or CS research based stuff there
2012-05-02 01:08:50 UTC <vyom_> :)
2012-05-02 01:11:59 UTC <fryguybob> vyom_: I can't get two svg renderers to agree on that file.  It seems like a lot of people are confused about how to handle SVG text.
2012-05-02 01:12:52 UTC <vyom_> fryguybob: ha ha which ones are those?
2012-05-02 01:13:28 UTC <vyom_> is there a rectanglular border on the diagram?
2012-05-02 01:13:38 UTC <fryguybob> Chrome, IE and inkscape
2012-05-02 01:13:41 UTC <vyom_> in one of them that is..
2012-05-02 01:13:50 UTC <vyom_> fryguybob: screenshots would be great
2012-05-02 01:13:58 UTC <fryguybob> Only chrome has borders.
2012-05-02 01:14:19 UTC <mgsloan> yeah, SVG renderers are unfortunately terribly non-standards-compliant
2012-05-02 01:15:02 UTC <vyom_> fryguybob: the borders issues is tracked here https://github.com/deepakjois/diagrams-svg/issues/3
2012-05-02 01:15:06 UTC <vyom_> it is a chrome bug
2012-05-02 01:15:13 UTC <vyom_> any other inconsistency?
2012-05-02 01:18:40 UTC <vyom_> This is the commit.. for whoever is intereseted https://github.com/deepakjois/diagrams-svg/commit/7f98ad48ff7c154ad6da9948fc2056268dc53263
2012-05-02 01:19:24 UTC <vyom_> ah.. i make too many typos :) s/intereseted/interested/
2012-05-02 01:19:34 UTC <fryguybob> Between inkscape and IE the font is different (not too surprising).  The chrome positioning is different.
2012-05-02 01:19:55 UTC <vyom_> the font difference is fine i suppose
2012-05-02 02:28:09 UTC <tgeeky_> byorgey: was that short introductory PDF interesting to you at all?
2012-05-02 02:41:53 UTC <byorgey> tgeeky_: I'll tell you once I've actually looked at it =)
2012-05-02 02:42:08 UTC <byorgey> I plan to print it out on Thursday
2012-05-02 03:00:50 UTC <tgeeky_> k. random question: at your job, do you have regular, conversational access to mathematics grad students -- or are they all in a totally seperate department?
2012-05-02 17:44:16 UTC <Salash> hello
2012-05-02 17:45:00 UTC <Salash> Do you know of a channel that is called learn yall a haskell
2012-05-02 17:48:16 UTC <byorgey> Salash: I'm not sure what you mean.  You're looking for a channel where you can ask questions about Haskell?
2012-05-02 17:50:54 UTC <Salash> My friend michael directed me hear
2012-05-02 17:51:05 UTC <Salash> but he also told me about a channel #lyah
2012-05-02 17:51:23 UTC <Salash> but it doesn't exist so I am still searching
2012-05-02 17:51:33 UTC <byorgey> Salash: There is a book called "Learn you a Haskell"
2012-05-02 17:51:56 UTC <byorgey> http://learnyouahaskell.com/
2012-05-02 17:52:01 UTC <byorgey> Salash: and you can ask questions in #haskell
2012-05-02 17:52:01 UTC <Salash> ! I guess I should check that out ty
2012-05-02 17:54:42 UTC <byorgey> Salash: this channel here is for discussion of http://projects.haskell.org/diagrams/
2012-05-02 17:56:29 UTC <Salash> yeah super cool!
2012-05-02 22:19:54 UTC <luite> hmm
2012-05-02 22:20:20 UTC <luite> i'm not good with buzzwords either
2012-05-02 23:41:44 UTC <vyom> so looks like Hac-Phi 2012 is official
2012-05-03 01:06:10 UTC <tgeeky> yep
2012-05-03 01:06:18 UTC <tgeeky> I think I might try to attend. It'll be a long road trip.
2012-05-03 01:38:39 UTC <byorgey> everyone should attend!
2012-05-03 01:39:50 UTC <fryguybob> ACTION sadly will be unable to be there this year.
2012-05-03 01:43:29 UTC <tgeeky> byorgey: do people bring their desktops? I don't think my laptop would be up to it.
2012-05-03 01:43:40 UTC <tgeeky> s/people/*some* people/
2012-05-03 01:44:02 UTC <byorgey> tgeeky: no one has ever brought a desktop.
2012-05-03 01:44:07 UTC <tgeeky> lol
2012-05-03 01:44:10 UTC <byorgey> I suppose you *could*
2012-05-03 01:44:47 UTC <tgeeky> and 4 monitorsw
2012-05-03 01:44:49 UTC <tgeeky> /ssw//
2012-05-03 01:44:54 UTC <tgeeky> le sigh
2012-05-17 19:16:29 UTC <byorgey> haha, fun: http://recursivedrawing.com/
2012-05-17 19:17:14 UTC <tgeeky> pretty neat
2012-05-17 19:17:26 UTC <tgeeky> i think I saw that last week sometime... from #haskell-blah
2012-05-17 19:22:48 UTC <tgeeky> byorgey: do you know if people who are on the committees of things like ICFP or Haskell Symposium get paid for their reviewing of papers and organizational work?
2012-05-17 19:23:02 UTC <tgeeky> or is that considered part of their normal jobs?
2012-05-17 19:23:18 UTC <byorgey> they do not get paid.
2012-05-17 19:23:53 UTC <tgeeky> are they barred from discussing the papers they are reviewing pubically, usually?
2012-05-17 19:24:54 UTC <byorgey> I am not exactly sure.  Probably they are not supposed to mention the fact that they are reviewing a particular paper.
2012-05-17 19:25:11 UTC <byorgey> But I don't think there's a complete ban on discussing the papers.
2012-05-17 19:25:25 UTC <byorgey> I don't know, I'm about to find out since I am on the Haskell Symposium committe.
2012-05-17 19:25:34 UTC <byorgey> *ee
2012-05-17 19:35:06 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/recursive-spiral.png
2012-05-17 19:35:34 UTC <byorgey> oh man, this is going to be so much fun in the "Art of Recursion" course I'm teaching in the fall =)
2012-05-17 19:43:33 UTC <tgeeky> from ana to zygohisto in one semester!
2012-05-17 19:44:33 UTC <tgeeky> hehe. you use a timer too?
2012-05-17 19:44:42 UTC <byorgey> oh, hehe, yes =)
2012-05-17 19:45:02 UTC <byorgey> it doesn't always help =P
2012-05-17 19:45:03 UTC <tgeeky> i use one of these with me most days: http://www.sears.com/shc/s/p_10153_12605_SPM242852975P?sid=IDx20101019x00001a&ci_src=14110944&ci_sku=SPM242852975
2012-05-17 19:45:27 UTC <tgeeky> it's amazing to me how varying 25 minutes can be, depending on what you are doing
2012-05-17 19:45:45 UTC <byorgey> indeed
2012-05-17 19:45:50 UTC <byorgey> hmm, maybe I should get a physical one too
2012-05-17 19:46:22 UTC <tgeeky> i got it as a kitchen timer originally, but picked up on the idea of block timing and just repurposed it
2012-05-17 19:46:44 UTC <byorgey> fair enough
2012-05-17 19:46:46 UTC <tgeeky> having 3 timers is nice, and it by default resets to the original amount of time
2012-05-17 19:47:47 UTC <tgeeky> if you want to get really detailed, there's this software for windows: http://www.manictime.com/
2012-05-17 19:48:02 UTC <tgeeky> and I think someone has a similar watch-all-the-processes kind of thing in haskell.
2012-05-17 19:48:48 UTC <byorgey> well, there's http://hackage.haskell.org/package/arbtt
2012-05-17 19:48:59 UTC <tgeeky> yep that's the one
2012-05-17 19:49:11 UTC <byorgey> but it's only useful for analyzing your behavior after the fact
2012-05-17 19:49:19 UTC <byorgey> which I didn't find all that useful
2012-05-17 19:49:27 UTC <tgeeky> yep
2012-05-17 19:50:15 UTC <tgeeky> there is another issue (a "first world problem") that it's not possible to provide a realistic picture of a person using multiple monitors with this method
2012-05-17 19:50:33 UTC <tgeeky> as having focus of the pointer is not the same thing as having focus of the eyes
2012-05-17 19:50:38 UTC <tgeeky> but I don't see what that couldn't be included
2012-05-17 19:51:33 UTC <tgeeky> byorgey: but I think you're exactly right. What both solutions completely lack is the ability to make projections about your behavior based on past or current behavior
2012-05-17 19:51:52 UTC <tgeeky> so, egg timer for now
2012-05-17 19:52:20 UTC <luite> hm what are you using the timer for?
2012-05-17 19:53:05 UTC <tgeeky> to enforce a [25 min work, 5 min break] regimen
2012-05-17 19:53:23 UTC <tgeeky> and, on days when I'm lazy, to make sure I don't waste time playing TF2 or reading reddit
2012-05-17 19:53:44 UTC <byorgey> for the second I use LeechBlock
2012-05-17 19:53:58 UTC <luite> oh do the breaks help?
2012-05-17 19:54:10 UTC <byorgey> though I guess that wouldn't help with TF2, but that's not an issue for me
2012-05-17 19:54:19 UTC <byorgey> the breaks help a lot.
2012-05-17 19:54:21 UTC <tgeeky> luite: Uhh. I am quite sure it's different for each person. For me, yes.
2012-05-17 19:56:13 UTC <luite> hmm, i just find it more difficult to get started again after a break, or get frustrated that i haven't really accomplished anything in a half-an-hour block
2012-05-17 19:56:38 UTC <tgeeky> uh. you have to stop caring about the last block
2012-05-17 19:56:51 UTC <tgeeky> you are allowed to care about the last n > 30 blocks, or something
2012-05-17 19:56:58 UTC <byorgey> well, those can be issues for me too.  But I don't think the solution is to not take breaks.
2012-05-17 19:57:27 UTC <tgeeky> choose longer intervals than 25 minutes is another option
2012-05-17 19:57:34 UTC <luite> hmm
2012-05-17 19:58:21 UTC <luite> byorgey: right, i didn't think of anything as a solution :)
2012-05-17 19:59:51 UTC <tgeeky> luite: I will use a totally inappropriate (for you) analogy: It's like playing the position "cornerback" in American Football. They are often responsible, man vs man, for a single (usually the best) wide reciever on the other team. Every single play can realistically be as good as an dropped pass (which is good, but probably means the cornerback relied on luck) to a 60-yard touchdown.
2012-05-17 20:00:07 UTC <tgeeky> If you *ever* worry about the last play (that you blew)
2012-05-17 20:00:14 UTC <tgeeky> then you're going to blow the current play.
2012-05-17 20:00:37 UTC <tgeeky> And as soon as you've done this twice (worry about the last two plays), you're as good as useless in the game -- because you're now thinking about your mistakes
2012-05-17 20:00:42 UTC <tgeeky> instead of playing the position.
2012-05-17 20:01:23 UTC <luite> i have no idea what a cornerback does :)
2012-05-17 20:01:40 UTC <tgeeky> luite: he makes sure the people catching the ball, don't
2012-05-17 20:01:51 UTC <luite> what is the equivalent in cricket? ;p
2012-05-17 20:01:59 UTC <tgeeky> a ground squirrel in the way
2012-05-17 20:02:23 UTC <tgeeky> anyway, the principle is universal, and playing a game 1v1 is a universal concept.
2012-05-17 20:02:33 UTC <tgeeky> if you are thinking about what happened in the last 25 minute session
2012-05-17 20:02:43 UTC <tgeeky> then you're no longer working, you're "studying" your own behavior
2012-05-17 20:02:52 UTC <tgeeky> so don't
2012-05-17 20:02:57 UTC <tgeeky> play the game (8 hour workday, or whatever)
2012-05-17 20:03:09 UTC <tgeeky> and review and adjust later
2012-05-17 20:15:05 UTC <luite> hmm right, i have to find something that's better than what i have now
2012-05-17 20:27:49 UTC <tgeeky> byorgey: http://www.mscs.dal.ca/~selinger/papers/graphical.pdf <-- check out the lovely diagram at the end :O
2012-05-17 20:27:53 UTC <tgeeky> p.60
2012-05-17 20:30:21 UTC <mgsloan> oooh, cool paper!
2012-05-17 20:30:53 UTC <mgsloan> I really liked the rosetta stone paper
2012-05-17 20:31:16 UTC <mgsloan> (well, survey)
2012-05-17 20:43:35 UTC <tgeeky> what? rosetta stone survey?
2012-05-17 20:43:49 UTC <tgeeky> oh baez
2012-05-17 21:10:25 UTC <mgsloan> yeah, that's the first place I saw string diagrams
2012-05-17 21:37:19 UTC <byorgey> tgeeky: I have a printout of that paper sitting on my desk =)
2012-05-17 21:39:31 UTC <tgeeky> me too :o
2012-05-17 21:41:19 UTC <tgeeky> i have a ikea table with a glass top, which I raised using 6 hard disk platters, so I can put pictures like this under the glass and draw on the top of the glass to trace things
2012-05-17 22:57:25 UTC <luite> hm paper looks interesting
2012-05-17 22:59:12 UTC <mgsloan> It'd be really fun to implement these in diagrams :) with the ability to perform the operations, of course
2012-05-17 23:00:38 UTC <mgsloan> I wonder what the most useful text encoding would be?  E.g. what's the most popular library for expressing categorical things?  Maybe find out if there's a dominant Coq or Agda library
2012-05-17 23:04:16 UTC <mgsloan> (afterall, what's the use of pretty pictures if it's inconvenient to make them for things you care about)
2012-05-17 23:12:40 UTC <luite> hmm, dunno
2012-05-18 00:49:29 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Trace-wrong.png  --- not supposed to look like that =(
2012-05-18 01:03:03 UTC <mgsloan> byorgey: taking the parametric max instead of min?
2012-05-18 01:03:27 UTC <mgsloan> and / or not bounding the parameter of the line its intersecting to (0, 1) ?
2012-05-18 01:05:31 UTC <byorgey> hmm, no, it's definitely doing min and bounding the parameter
2012-05-18 01:08:15 UTC <mgsloan> hrmm, strange!
2012-05-18 01:08:34 UTC <byorgey> very
2012-05-18 01:09:05 UTC <mgsloan> maybe the bounding predicate is negated? E.g. it only intersects if it's outside the segment
2012-05-18 01:09:25 UTC <byorgey> and every time I think I have found a simple test case that exhibits a bug, it turns out I just entered the data wrong, forgot to multiply by tau, stupid things like that =P
2012-05-18 01:10:20 UTC <byorgey> as far as I can tell, it does intersections with individual segments correctly, the problem seems to be when composing those into a whole path
2012-05-18 01:10:28 UTC <byorgey> but I'm not even sure about that.
2012-05-18 01:10:42 UTC <byorgey> ACTION should write some QuickCheck tests
2012-05-18 01:18:48 UTC <byorgey> ah, there's something wrong with translation
2012-05-18 01:18:51 UTC <byorgey> a sign is getting flipped somewhere
2012-05-18 01:25:45 UTC <byorgey> hah, found it!
2012-05-18 01:25:48 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Trace-right.png
2012-05-18 01:25:51 UTC <byorgey> much better =)
2012-05-18 01:46:52 UTC <luite> yay
2012-05-18 01:47:21 UTC <byorgey> now I just have to write the code for ray/bezier intersection testing
2012-05-18 01:47:33 UTC <byorgey> then traces should be all done
2012-05-18 01:47:41 UTC <byorgey> well, except for writing some documentation =P
2012-05-18 01:53:00 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Trace-squares.png
2012-05-18 01:53:37 UTC <luite> :)
2012-05-18 02:34:27 UTC <tgeeky> byorgey: run a trace for the apollonian gasket :o
2012-05-18 02:37:04 UTC <byorgey> tgeeky: I will, once I implement bezier intersection testing =)
2012-05-18 02:37:26 UTC <byorgey> I think I understand how to do it now, but bedtime for me so I'll code it tomorrow
2012-05-18 02:40:39 UTC <cheater_> hey can the diagrams packages do subpixel rendering?
2012-05-18 02:40:46 UTC <cheater_> and/or noise shaping?
2012-05-18 02:44:11 UTC <tgeeky> hmm.
2012-05-18 02:44:25 UTC <tgeeky> I'm surprised I've not heard of this (found it review hackage log to find a specific package): http://www.haskell.org/haskellwiki/Ministg
2012-05-18 03:15:12 UTC <mgsloan> cheater_: I dunno if someone already answered, but I think that would be a function of the backend
2012-05-18 12:09:12 UTC <byorgey> what the heck, my ray-bezier intersection code seems to work on the first try
2012-05-18 12:09:18 UTC <byorgey> something must be wrong
2012-05-18 12:09:28 UTC <ClaudiusMaximus> hehe
2012-05-18 12:09:47 UTC <ClaudiusMaximus> i'm always surprised when code compiles first time, let alone works
2012-05-18 12:09:58 UTC <ClaudiusMaximus> usually i've made lots of typos / silly mistakes
2012-05-18 13:20:32 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Trace-bezier.mp4    w00t!
2012-05-18 13:23:36 UTC <luite> cool
2012-05-18 13:23:58 UTC <luite> i wonder why my pc becomes unrespnsive for a minute when i open a movie in my browser :(
2012-05-18 13:24:16 UTC <byorgey> ouch, I don't know =(
2012-05-18 13:24:38 UTC <ClaudiusMaximus> nice!
2012-05-18 13:25:34 UTC <byorgey> it may look a bit odd when the bezier rotates past the point the rays are emanating from, but I assure you that's what it's supposed to do given how I set up the animation
2012-05-18 13:27:51 UTC <ClaudiusMaximus> can you use this to do something clever like diagrams of planetary eclipses?
2012-05-18 13:28:05 UTC <byorgey> yeah, probably
2012-05-18 13:28:27 UTC <byorgey> you can find intersection points of arbitrary lines with arbitrary diagrams
2012-05-18 13:28:43 UTC <ClaudiusMaximus> i'm thinking something like "find furthest point"
2012-05-18 13:28:51 UTC <ClaudiusMaximus> or widest angle, or whatever
2012-05-18 13:28:53 UTC <luite> ClaudiusMaximus: yeah with 3d diagrams, and ten add edwardk's physically correct rayracer to simulate the atmospheric effects!
2012-05-18 13:29:02 UTC <byorgey> haha, awesome =)
2012-05-18 13:29:55 UTC <byorgey> ClaudiusMaximus: well, the only way to find the widest angle right now would be to just try a bunch of angles and see what you get.  You could use binary search if you happen to know approximately where it will switch from intersection to no intersection.
2012-05-18 13:29:59 UTC <ClaudiusMaximus> http://en.wikipedia.org/wiki/File:Umbra01.svg but without the junky gradients
2012-05-18 13:30:40 UTC <ClaudiusMaximus> byorgey: yeah, binary search would be fine, assuming a connected / non-pathological diagram
2012-05-18 13:33:22 UTC <byorgey> it may be possible to do use some sort of automatic differentiation but that's "future work" ;)
2012-05-18 13:34:06 UTC <luite> hm that was a major part of edwardk's raytracer
2012-05-18 13:34:36 UTC <byorgey> <--- not surprised
2012-05-18 14:31:34 UTC <cheater__> yeah he did do some automatic diff
2012-05-18 19:24:13 UTC <byorgey> challenge: draw the Borromean Rings using diagrams.
2012-05-18 19:25:09 UTC <byorgey> as a solution to the challenge I will accept either (1) some (reasonably nice) code which actually draws them, OR (2) a feasible proposal for an elegant extension to diagrams which would make (1) possible =)
2012-05-18 19:32:40 UTC <alpounet> edward's ad stuff is pretty cool, used it for a prototype of a new HNN
2012-05-18 19:40:51 UTC <byorgey> I'm sure it is!  mgsloan was talking a while back about trying to integrate some of it with diagrams, not sure where that might go but it could be very cool =)
2012-05-18 19:43:26 UTC <luite> what's an hnn?
2012-05-18 19:43:40 UTC <alpounet> it's my shitty neural net library
2012-05-18 19:43:41 UTC <alpounet> :]
2012-05-18 19:44:00 UTC <alpounet> i should deprecate it some day in favor of HaskellNN
2012-05-18 19:48:22 UTC <luite> oh ok, i googled and only found hnn extensions in combinatorial group theory, was wondering how you used ad there :)
2012-05-18 19:49:38 UTC <alpounet> hah
2012-05-18 21:09:11 UTC <byorgey> mgsloan: did you see this?   http://www.cis.upenn.edu/~byorgey/hosted/Trace-bezier.mp4  =D
2012-05-18 21:09:58 UTC <mgsloan> whoah, cool!! I didn't :D
2012-05-18 21:10:51 UTC <mgsloan> this would be one way to get a start on bezier <-> bezier intersection
2012-05-18 21:11:06 UTC <mgsloan> (pick one of them to linearize)
2012-05-18 21:12:32 UTC <byorgey> I guess that works OK in most cases, but in the corner cases you may have to break it into very tiny pieces before you end up finding the intersections...
2012-05-18 21:12:42 UTC <mgsloan> yup
2012-05-18 21:13:14 UTC <mgsloan> it turns out that it's hard to do much better
2012-05-18 21:13:20 UTC <mgsloan> but I could be wrong
2012-05-18 21:13:21 UTC <byorgey> really? interesting
2012-05-18 21:15:22 UTC <mgsloan> one way we tried doing it was to split the bezier at monotonic slices, reparametrize it by one of the axis, and do the intersection by subtraction
2012-05-18 21:15:48 UTC <mgsloan> (using a sweepline algorithm to figure out which ones need to be intersected)
2012-05-18 21:16:15 UTC <mgsloan> this works pretty well if you know you're going to be intersecting something over and over and over
2012-05-18 21:16:20 UTC <byorgey> ah, interesting
2012-05-18 21:16:26 UTC <mgsloan> but for one-off intersections, it's pretty slow
2012-05-18 21:17:11 UTC <byorgey> I also wonder about using http://www.angusj.com/delphi/clipper.php  which has some Haskell bindings here: http://hackage.haskell.org/package/clipper
2012-05-18 21:17:25 UTC <byorgey> though I wouldn't want to have it as a dep of the core diagrams libraries of course
2012-05-18 21:17:37 UTC <mgsloan> (this also required conversion to a different curve representation, to support the reparameterizatio)
2012-05-18 21:18:12 UTC <byorgey> oh, wait, that only does polygons anyway
2012-05-18 21:18:18 UTC <mgsloan> cool!  yeah..
2012-05-18 21:18:46 UTC <mgsloan> I haven't seen an opensource project for doing boolean operations on more sophisticated curves..
2012-05-18 21:19:10 UTC <mgsloan> other than my (partially successful) GSoC back in the day of course
2012-05-18 21:19:24 UTC <byorgey> which one was that?
2012-05-18 21:20:22 UTC <mgsloan> http://www.mgsloan.com/boolops/
2012-05-18 21:20:54 UTC <byorgey> ah right, I remember now
2012-05-18 21:21:53 UTC <byorgey> so can we make Haskell bindings to boolops?
2012-05-18 21:22:54 UTC <mgsloan> we could!  I'd prefer to try re-implementing it, but it could be a decent stopgap
2012-05-18 21:23:42 UTC <byorgey> sure, either way.  I am patient. =)
2012-05-18 21:23:50 UTC <mgsloan> (of course, I won't get around to re-implementing it till maybe 6 mo from now - depends on how much time work will take)
2012-05-18 21:24:18 UTC <byorgey> right, I realize that
2012-05-18 21:24:44 UTC <byorgey> and maybe you'll have more interesting things to work on anyway.  I'm just trying to think long-term about possibilities =)
2012-05-18 21:25:00 UTC <mgsloan> true!  Way too much stuff to work on
2012-05-18 21:25:30 UTC <mgsloan> I've been considering hosting a "Sloan month of code" in which I put up $2k bounties on various features and things
2012-05-18 21:26:40 UTC <mgsloan> mostly for Haskell stuff that I want to see happen
2012-05-18 21:26:46 UTC <mgsloan> \me ---> class
2012-05-18 21:49:05 UTC <tgeeky> $2k bounties?
2012-05-18 21:50:25 UTC <luite> hm i'll do a few :p
2012-05-18 21:52:19 UTC <luite> i hope he wants some ghc in the browser
2012-05-18 22:15:53 UTC <tgeeky> that's pretty nice cheese for a guy who is in college. Maybe he's indepedently wealthy.
2012-05-18 22:19:40 UTC <byorgey> well, he's about to go from student to employee
2012-05-18 23:07:45 UTC <tgeeky> he is also smart, so maybe he's paid very well.
2012-05-19 03:07:09 UTC <alpounet> #diagrams is really some kind of cool place fir haskellers go to
2012-05-19 03:07:10 UTC <alpounet> for
2012-05-19 04:36:37 UTC <fryguybob> ACTION has moved to Portland area (Hillsboro) for the summer.
2012-05-19 04:37:43 UTC <tgeeky> fryguybob: congradulations! You have moved to the totally opposite side of the continental (and non-dangly) US!
2012-05-19 04:37:49 UTC <tgeeky> I'm in Atlanta! :o
2012-05-19 04:40:28 UTC <fryguybob> I lived in Atlanta for about 6 months.
2012-05-19 04:43:06 UTC <tgeeky> me too
2012-05-19 04:43:14 UTC <tgeeky> and them some time after that
2012-05-19 04:43:27 UTC <tgeeky> hehe. now I'm just being silly. bedtime!
2012-05-19 09:30:42 UTC <byorgey> fryguybob: oh, congrats, how did the move go?
2012-05-19 13:54:06 UTC <fryguybob> byorgey: It went well.  Judah was fine flying.  We had a good seat-mate who loves babies.
2012-05-19 13:55:42 UTC <luite> i don't hate babies, but why must they always cry for 10 hours during a flight? :p
2012-05-19 14:00:25 UTC <fryguybob> luite: hehe
2012-05-19 14:22:55 UTC <byorgey> fryguybob: excellent =)
2012-05-19 14:23:14 UTC <byorgey> luite: you only notice the ones who cry.
2012-05-19 14:57:52 UTC <tgeeky> byorgey: as long as the parents feel a little bad about it, I'm fine with crying babies on an airplane
2012-05-19 14:59:47 UTC <byorgey> tgeeky: believe me, they want to crawl in a hole and die
2012-05-19 15:00:57 UTC <tgeeky> it is a bit of a shame that babies don't come with a mute button
2012-05-19 15:01:38 UTC <luite> it's a bit of a shame that planes don't come with closed rooms for noisy babies :)
2012-05-19 15:04:52 UTC <byorgey> hehe, I agree with both =)
2012-05-19 15:07:09 UTC <byorgey> dang, compiling hakyll + all dependencies from scratch takes forever
2012-05-19 15:07:18 UTC <luite> hehe it's the highlighting lib right?
2012-05-19 15:07:50 UTC <byorgey> that is a significant part of it, but by far not all of it
2012-05-19 15:08:13 UTC <luite> i almost have ghcjs working with cabal now :)
2012-05-19 15:08:18 UTC <byorgey> yay! =D
2012-05-19 15:09:09 UTC <luite> all package registration works, installing rts, ghc-prim, integer-gmp and base from a configured ghc tree works, cabal install works
2012-05-19 15:09:31 UTC <byorgey> wow, cool
2012-05-19 15:09:32 UTC <luite> only problem is that it doesn't copy generated .js files to the package directory, that requires a patch to the Cabal lib
2012-05-19 15:09:50 UTC <tgeeky> the SpaceX rocket today aborted its own launch at 0.3 seconds before liftoff because of an engine sensor problem. that's amazing :O
2012-05-19 15:09:57 UTC <luite> but i'm fixing it temporarily with a cabal-install wrapper
2012-05-19 15:10:42 UTC <luite> tgeeky: oh it was only the sensor, not actual overpressure?
2012-05-19 15:12:06 UTC <fryguybob> byorgey: Yes, there is a distinct shortage holes to crawl into while in flight.
2012-05-19 15:12:21 UTC <byorgey> fryguybob: indeed.
2012-05-19 15:12:50 UTC <byorgey> ACTION --> farmers' market
2012-05-19 15:12:52 UTC <luite> http://hpaste.org/68712
2012-05-19 15:14:09 UTC <tgeeky> luite: oh, we don't know that yet. But it's amazing to see how fast they can start / test / shutdown the engines.
2012-05-19 15:16:56 UTC <luite> i'm trying to get ghcjs installable before apfelmus' question on reddit disappears from the first page :)
2012-05-19 15:39:12 UTC <fryguybob> byorgey: Hope you are enjoying the farmers' market.  Which method did you use for bezier tracing?
2012-05-19 16:12:50 UTC <byorgey> fryguybob: rotate + scale everything so the ray is (0,0) + (1,0)t, then project the bezier onto the y-axis + solve the cubic to find where it crosses the x-axis
2012-05-19 16:13:59 UTC <cheater__> luite: what is his question?
2012-05-19 16:14:01 UTC <byorgey> substituting the solutions back into the transformed bezier then gives x-coordinates which are exactly the t-values where the ray intersects the bezier
2012-05-19 16:15:35 UTC <byorgey> one thing I could explore is whether it speeds things up to do a quick check to see whether the projection of the bezier control points onto the y-axis all lie to one side of the origin (in which case there can't possibly be any intersections)
2012-05-19 16:16:01 UTC <byorgey> but I'm not sure how slow solving the cubic really is
2012-05-19 16:22:35 UTC <fryguybob> byorgey: Ah, ok.  What cubic method do we have again?
2012-05-19 16:23:24 UTC <byorgey> fryguybob: it's just a solver I coded up that uses the cubic formula to solve them "exactly"
2012-05-19 16:23:32 UTC <fryguybob> In the passed I have solved directly with the cubic equation (in the form that is at least somewhat numerically stable) but its accuracy varies greatly.
2012-05-19 16:23:44 UTC <byorgey> though I don't know squat about numerics, so it's probably horribly unstable etc.
2012-05-19 16:23:49 UTC <fryguybob> *past
2012-05-19 16:24:19 UTC <byorgey> I'd be happy to replace the version we have with something better, or to farm out root-finding to an external package
2012-05-19 16:24:23 UTC <byorgey> but I don't know of any good ones
2012-05-19 16:25:13 UTC <fryguybob> The nice thing about the subdivide option with Beziers is only linear operations are needed so you stay in the rationals if wanted.
2012-05-19 16:25:41 UTC <fryguybob> I can code that up and compare at some point.
2012-05-19 16:25:47 UTC <byorgey> sure, if you like
2012-05-19 16:26:25 UTC <byorgey> I guess if you do something like that the quick test to see whether the control polygon lies to one side of the axis becomes more important.
2012-05-19 16:26:31 UTC <luite> cheater__: http://www.reddit.com/r/haskell/comments/tt0p9/gsoc_2012_a_multiuser_browserbased_ghci_what/
2012-05-19 16:26:49 UTC <byorgey> but perhaps overall you still get something comparable (and more accurate).
2012-05-19 16:27:19 UTC <cheater__> luite: ok i see people say ghcjs..
2012-05-19 16:27:22 UTC <cheater__> i don't understand..
2012-05-19 16:27:26 UTC <cheater__> how the hell is it multiuser
2012-05-19 16:27:34 UTC <cheater__> if it only shows up on one computer at a time??
2012-05-19 16:27:47 UTC <cheater__> X_X
2012-05-19 16:27:47 UTC <byorgey> the only other place we use the cubic solver is to determine which points lie inside/outside paths with bezier segments, and I don't think that code really gets exercised all that much
2012-05-19 16:28:43 UTC <fryguybob> byorgey: yeah.  I suppose the appropriate tests for that are to try things at large and small scales.
2012-05-19 16:28:44 UTC <luite> cheater__: they want to host teaching sessions, having a live session synchronized on multiple clients
2012-05-19 16:28:57 UTC <cheater__> luite: yah
2012-05-19 16:29:02 UTC <cheater__> luite: you want wolfgang to do that?
2012-05-19 16:29:09 UTC <cheater__> because that would be pretty cool i think.
2012-05-19 16:29:37 UTC <byorgey> yeah, that would be sweet
2012-05-19 16:30:03 UTC <luite> cheater__: it would be interesting to have, but i think that it isn't the most important bit
2012-05-19 16:30:34 UTC <luite> i find the persistent pages more important than a live session, since a live session loses value when its done
2012-05-19 16:30:48 UTC <cheater__> except not
2012-05-19 16:30:52 UTC <cheater__> because you can play it back
2012-05-19 16:30:55 UTC <cheater__> think about it
2012-05-19 16:31:16 UTC <cheater__> if you could synchronize a video with a recorded "live session" in wolfgang
2012-05-19 16:31:23 UTC <cheater__> that would be absolutely amazing
2012-05-19 16:31:23 UTC <luite> is that better than a regular workbook document?
2012-05-19 16:31:26 UTC <cheater__> yes
2012-05-19 16:31:31 UTC <luite> why?
2012-05-19 16:31:36 UTC <cheater__> because it's just sitting back and watching it move
2012-05-19 16:31:42 UTC <cheater__> completely effortless
2012-05-19 16:31:50 UTC <luite> hm i'm not sure
2012-05-19 16:31:54 UTC <cheater__> i am
2012-05-19 16:31:56 UTC <cheater__> 100%
2012-05-19 16:31:59 UTC <cheater__> so i can eg give a talk about some lib in haskell
2012-05-19 16:32:02 UTC <luite> if scrolling is too much effort :p
2012-05-19 16:32:06 UTC <cheater__> show some slides on the video, talk about it
2012-05-19 16:32:22 UTC <cheater__> and while this is happening, real code is being typed into the worksheet
2012-05-19 16:32:38 UTC <cheater__> and at any point you can stop and play around
2012-05-19 16:32:42 UTC <cheater__> luite it's not about scrolling
2012-05-19 16:32:51 UTC <cheater__> it's about voice + 2d text + video
2012-05-19 16:33:14 UTC <cheater__> there are things like that already, for example some german unis have a slides + video solution for online lectures
2012-05-19 16:33:18 UTC <cheater__> but this would totally beat them
2012-05-19 16:33:22 UTC <cheater__> because it's not only dead slides
2012-05-19 16:33:29 UTC <cheater__> it's workbook sections!
2012-05-19 16:33:33 UTC <cheater__> you can play around and do stuff
2012-05-19 16:33:42 UTC <cheater__> you could pause the video and move sliders around and stuff
2012-05-19 16:33:43 UTC <luite> oh i should sell it to some german university and they should offer me a phd position in return :p
2012-05-19 16:33:51 UTC <cheater__> i'm sure you could
2012-05-19 16:34:06 UTC <cheater__> if you did that, i am sure it would get a lot of use from OCW-like stuff
2012-05-19 16:35:14 UTC <ClaudiusMaximus> cheater__: you mean something like http://etherpad.org/ ?
2012-05-19 16:35:40 UTC <luite> etherpad is exactly what apfelmus/shapr are going to use in the first version
2012-05-19 16:35:54 UTC <cheater__> no ClaudiusMaximus, something different
2012-05-19 16:35:58 UTC <cheater__> etherpad allows collaboration
2012-05-19 16:36:18 UTC <cheater__> whereas with what i am describing you could record a collab session and play it back
2012-05-19 16:36:21 UTC <cheater__> and sync it to video
2012-05-19 16:37:04 UTC <ClaudiusMaximus> etherpad has history playback, is what i was thinking of
2012-05-19 16:37:09 UTC <cheater__> oh i didn't know that
2012-05-19 16:37:12 UTC <ClaudiusMaximus> but not video syncing
2012-05-19 16:37:14 UTC <cheater__> got a link to something like that?
2012-05-19 16:37:18 UTC <ClaudiusMaximus> afaik
2012-05-19 16:38:07 UTC <cheater__> not to go overboard, but another thing is being able to edit multiple sections of the workbook at the same time
2012-05-19 16:38:24 UTC <cheater__> so the cursor isn't shared across browsers, instead every browser has its own cursor
2012-05-19 16:40:06 UTC <luite> hmm, right
2012-05-19 16:40:07 UTC <cheater__> example application: pair programming
2012-05-19 16:40:10 UTC <cheater__> it could work like this
2012-05-19 16:40:27 UTC <cheater__> one guy writes a literate style comment above a function
2012-05-19 16:40:31 UTC <cheater__> the other guy writes the function body
2012-05-19 16:40:49 UTC <cheater__> so you write "foo - a recursive function"
2012-05-19 16:40:54 UTC <cheater__> and then i write
2012-05-19 16:41:06 UTC <cheater__> foo x = ...
2012-05-19 16:41:12 UTC <cheater__>    in foo x
2012-05-19 16:41:32 UTC <cheater__> and then when i'm done writing the function body in the first version, you continue writing the comment
2012-05-19 16:41:59 UTC <cheater__> "foo - a recursive function which sums integers from 0 to its argument"
2012-05-19 16:42:09 UTC <cheater__> and then i write something like
2012-05-19 16:42:22 UTC <cheater__> foo 0 = 0
2012-05-19 16:42:30 UTC <cheater__> foo x = x + foo (x - 1)
2012-05-19 16:43:05 UTC <cheater__> and then you continue writing the comment and add:
2012-05-19 16:43:06 UTC <luite> that's a lot more work than just recording some session :)
2012-05-19 16:43:19 UTC <cheater__> "foo - a recursive function which sums integers from 0 to its argument. Returns 0 for non-positive numbers."
2012-05-19 16:43:32 UTC <cheater__> and then i add some guards to the definition of foo
2012-05-19 16:43:49 UTC <cheater__> this could also work with unit tests: one guy writes unit tests, another documentation, third guy writes the definition
2012-05-19 16:43:57 UTC <cheater__> luite: yeah, it is. it's a completely separate idea.
2012-05-19 16:46:04 UTC <luite> it's a good idea though, perhaps for next year's GSoC when the main site (and perhaps recording/live sessions) are running
2012-05-19 16:46:34 UTC <luite> anyway, time to get a ghcjs demo up and running
2012-05-19 16:47:15 UTC <luite> i'm thinging to do everything on the client with ghcjs, and for high performance computations on the server(s) cloud haskell
2012-05-19 16:47:17 UTC <cheater__> i want a link
2012-05-19 16:47:32 UTC <cheater__> no you're not thinking that
2012-05-19 16:47:38 UTC <cheater__> i thought that and told you ;p;p;p
2012-05-19 16:47:47 UTC <luite> oh i'm still thinking that
2012-05-19 16:47:47 UTC <cheater__> (credit where credit due :p)
2012-05-19 16:47:48 UTC <luite> :p
2012-05-19 16:47:59 UTC <cheater__> :))))
2012-05-19 16:48:16 UTC <ClaudiusMaximus> i think etherpad does what you describe, cheater__, but i can't find a link to an example..
2012-05-19 16:48:19 UTC <luite> i was looking into cloud haskell earlier, but since you cannot migrate thunks it's less useful than i had hoped
2012-05-19 16:48:49 UTC <cheater__> ClaudiusMaximus: yeah but the point is really to have haskell, plus all the cool diagrams stuff
2012-05-19 16:48:56 UTC <ClaudiusMaximus> cheater__: definitely!
2012-05-19 16:49:02 UTC <cheater__> without it, i'm not biting
2012-05-19 16:49:03 UTC <cheater__> :)
2012-05-19 16:49:06 UTC <luite> i really hope diagrams is going to be fast enough in js :)
2012-05-19 16:49:43 UTC <cheater__> there are always faster CPU's
2012-05-19 16:49:45 UTC <cheater__> lol;
2012-05-19 16:50:01 UTC <cheater__> btw, long time no see claudius
2012-05-19 17:18:46 UTC <byorgey> bleh, trying to get the whole diagrams documentation toolchain building again is a slog =P
2012-05-19 17:19:03 UTC <byorgey> seems like the API of everything ever has changed since the last release
2012-05-19 17:42:45 UTC <cheater__> haha
2012-05-19 17:42:48 UTC <cheater__> that sort of sucks.
2012-05-19 21:00:41 UTC <luite> how do you sort a directory tree by size?
2012-05-19 21:02:30 UTC <tgeeky> as in, in the console? or abstractly?
2012-05-19 21:02:48 UTC <tgeeky> i find the best tools to do this are GUI tools
2012-05-19 21:03:10 UTC <luite> console
2012-05-19 21:03:22 UTC <luite> just want to see which are the largest javascript file
2012-05-19 21:03:23 UTC <luite> s
2012-05-19 21:03:28 UTC <tgeeky> du is disk usage
2012-05-19 21:03:28 UTC <luite> in a diagrams-svg installation
2012-05-19 21:03:43 UTC <luite> yeah but not recursive
2012-05-19 21:03:52 UTC <tgeeky> Summarize disk usage of each FILE, recursively for directories.
2012-05-19 21:04:12 UTC <tgeeky> of corse, I'm on MSYS in Windows, but ...
2012-05-19 21:04:36 UTC <luite> oh ok, you're right!
2012-05-19 21:05:14 UTC <luite> hm it only displays usage per dir
2012-05-19 21:05:14 UTC <tgeeky> so, that, and then possibly sort
2012-05-19 21:05:36 UTC <tgeeky> du -a
2012-05-19 21:05:43 UTC <tgeeky> du -a gets the files
2012-05-19 21:06:27 UTC <luite> hm, but then the directories are always bigger
2012-05-19 21:07:03 UTC <tgeeky> one directory per file?
2012-05-19 21:07:07 UTC <tgeeky> :/
2012-05-19 21:07:49 UTC <luite> oh at least the files end with .js, so i can just grep them out
2012-05-19 21:08:44 UTC <tgeeky> luite: also checkout --files0-from
2012-05-19 21:09:04 UTC <tgeeky> just produce a list of js files that you have (should be done already) and put them in a file, then du those files only
2012-05-19 21:09:53 UTC <luite> diagrams results in a 160kb file after gzipping
2012-05-19 21:10:06 UTC <tgeeky> that's pretty incredible!
2012-05-19 21:10:29 UTC <tgeeky> great job!
2012-05-19 21:10:47 UTC <luite> uh i hope it's correct...
2012-05-19 21:10:53 UTC <luite> that's just diagrams btw
2012-05-19 21:11:05 UTC <luite> without its dependencies and the base lib
2012-05-19 21:11:07 UTC <tgeeky> wasn't just diagrams on the order of megabytes?
2012-05-19 21:11:09 UTC <tgeeky> before?
2012-05-19 21:11:22 UTC <luite> including everything yes
2012-05-19 21:11:38 UTC <tgeeky> well then. huzzah retracted
2012-05-19 21:11:40 UTC <luite> all js files combined probably are still a few mb
2012-05-19 21:11:44 UTC <tgeeky> hehe :)
2012-05-19 21:11:57 UTC <luite> but i don't think 160kB for diagrams is that bad actually
2012-05-19 21:12:09 UTC <luite> the base libs would usually already be cached
2012-05-19 21:12:30 UTC <luite> and a lot of the generated code wouldn't need to be loaded at all
2012-05-19 21:13:19 UTC <tgeeky> do browsers provide a way to answer those questions?
2012-05-19 21:13:54 UTC <luite> don't need to ask the browser
2012-05-19 21:14:08 UTC <luite> the module dependencies are known per function
2012-05-19 21:14:32 UTC <luite> but it makes caching much more difficult if you load separate functions
2012-05-19 21:15:06 UTC <tgeeky> i mean how much of this is in memory in the browser when using diagrams, I suppose?
2012-05-19 21:15:10 UTC <tgeeky> versus well, not
2012-05-19 21:16:12 UTC <luite> http://hpaste.org/68723 <- code size per module
2012-05-19 21:16:57 UTC <luite> looks like somethign went wrong publishing the ghc-prim and integer-gmp modules to that dir
2012-05-19 21:17:17 UTC <luite> but those aren't too big
2012-05-19 21:17:33 UTC <luite> Data.Text.Lazy is crazy, over 1.2MB
2012-05-19 21:17:52 UTC <tgeeky> yeah
2012-05-19 21:18:01 UTC <luite> it's because of -O2
2012-05-19 21:18:02 UTC <tgeeky> pretty rediculious that text is the top 3 by quite a large margin
2012-05-19 21:18:18 UTC <luite> it does lots of inlining
2012-05-19 21:18:53 UTC <luite> i even had to increase the stack size of ghcjs
2012-05-19 21:19:07 UTC <byorgey> interesting, makes sense.  Text trades off code size for speed.  Usually one doesn't even really think much about code size.
2012-05-19 21:19:08 UTC <tgeeky> which GHC level are you starting with? Core or STM or haskell or what?
2012-05-19 21:19:21 UTC <luite> (but that's probably because the code generator writer monad isn't strict enough)
2012-05-19 21:19:42 UTC <tgeeky> byorgey: well, it makes that trade in Haskell, not JavaScript. You'd have to demonstrate how it behaves in JS, no?
2012-05-19 21:19:43 UTC <luite> tgeeky: stg
2012-05-19 21:19:54 UTC <byorgey> tgeeky: right, I just mean in Haskell.
2012-05-19 21:21:24 UTC <luite> tgeeky: a gzip of diagrams and all deps is 1.77MB
2012-05-19 21:21:42 UTC <tgeeky> that was the thing which was 8MB or so before I think
2012-05-19 21:21:45 UTC <tgeeky> so that's a nice improvment
2012-05-19 21:21:52 UTC <tgeeky> with an e somwhere
2012-05-19 21:21:54 UTC <tgeeky> and again.
2012-05-19 21:22:04 UTC <luite> that still includes line number information for exceptions i think
2012-05-19 21:22:17 UTC <tgeeky> luite: are you using conduits in this, btw?
2012-05-19 21:22:23 UTC <tgeeky> not *this*, but wolfgang?
2012-05-19 21:22:44 UTC <luite> uh yeah, also in ghcjs
2012-05-19 21:24:56 UTC <luite> not really a lot, but for example to work around the Cabal limitation (cannot install javascript files for a package) i calculate the skein512 hash of the .hi file, and then write the generated js file to a global cache
2012-05-19 21:25:04 UTC <luite> later the js file is installed from this cache
2012-05-19 21:25:24 UTC <luite> so i use some hashFile from crypto-conduit
2012-05-19 21:25:31 UTC <luite> which hashes in constant space
2012-05-19 21:25:53 UTC <luite> in wolfgang for example to export all documents to the search engine in more or less constant space
2012-05-19 21:26:06 UTC <luite> streaming xml document (it's an example in the yesod book)
2012-05-19 21:28:01 UTC <luite> and i think somewhere to transfer files from front end to backend
2012-05-19 21:31:01 UTC <tgeeky> luite: that sounds like approval to me
2012-05-19 21:33:43 UTC <luite> well a lot of enumerator things moved to conduit, and there isn't really that much available for pipes
2012-05-20 00:07:13 UTC <tgeeky> luite: hm. that's weird. hdiff got updated faster than hackagebot :o
2012-05-20 01:01:23 UTC <luite> i guess that'd happen more often if i'd let it poll more frequently
2012-05-20 13:14:22 UTC <luite> grr i broke ghcjs, type classes don't work
2012-05-20 13:22:09 UTC <cheater__> rawr
2012-05-20 18:09:27 UTC <cheater__> <applicative> i wish a version of ghci could do something like the plots Julia and suchlike languages have
2012-05-20 18:09:27 UTC <cheater__>  who wants a repl that just displays a string
2012-05-20 18:31:59 UTC <tgeeky> luite: haste just got posted to reddit
2012-05-20 18:32:10 UTC <tgeeky> (4 minutes ago, aparently)
2012-05-20 18:33:45 UTC <luite> haste made the install process simpler by distributing precompiled base libs :(
2012-05-20 18:37:19 UTC <cheater__> what's haste?
2012-05-20 18:47:30 UTC <luite> another haskell to js compiler that translates ghc's stg code to js
2012-05-20 18:47:39 UTC <luite> approach is 90% teh same as ghcjs
2012-05-20 18:49:04 UTC <luite> i tihnk ghcjs has a better rts, haste has better client libs (some reactive library that works with it)
2012-05-20 18:53:08 UTC <luite> (i'm not sure why the haste guy started from scratch actually)
2012-05-20 19:04:02 UTC <tgeeky> understand it yourself, do it yourself kind of thing probably
2012-05-20 19:05:00 UTC <luite> yeah i wanted to mail him about this, he does have a few things that are better than ghcjs, but it would be more productive to work together
2012-05-20 19:05:23 UTC <tgeeky> now you can just work with him on github :o
2012-05-20 19:05:47 UTC <luite> uh that's not so easy with completely different code bases
2012-05-20 19:05:48 UTC <tgeeky> actually i don't even know if he's the guy who posted it to reddit; i didn't check; but if it is, I assume this means he's ready to try to support it somewhat
2012-05-20 19:09:24 UTC <luite> i don't think it is the same guy
2012-05-21 07:07:15 UTC <cmears> Is there any special function to get the endpoints of a line that would connect two subdiagrams, where the points are on the boundary of the two subdiagrams?
2012-05-21 07:07:32 UTC <cmears> Or do I glue it together myself using boundaryFrom with some vector arithmetic?
2012-05-21 16:12:05 UTC <byorgey> if cmears comes back, tell him there isn't, but there will be soon =)
2012-05-21 16:13:49 UTC <luite> ok :)
2012-05-23 13:18:41 UTC <byorgey> yo yo
2012-05-23 13:19:06 UTC <byorgey> ACTION refactors the tree data structure underlying diagrams-core yet again
2012-05-23 13:29:23 UTC <luite> yo yo
2012-05-23 13:29:38 UTC <luite> ACTION found out that fib is 10 times slower in javascript than in ghci
2012-05-23 13:32:14 UTC <byorgey> haha
2012-05-23 13:32:33 UTC <byorgey> fib is not a ver ygood benchmark though, is it?
2012-05-23 14:09:31 UTC <fryguybob> ACTION waves hello from Hillsboro.
2012-05-23 14:16:02 UTC <byorgey> hi fryguybob!
2012-05-23 14:21:17 UTC <cheater> yo yo yo
2012-05-23 14:48:24 UTC <byorgey> hey cheater
2012-05-23 14:50:10 UTC <cheater> hi byorgey
2012-05-23 14:50:48 UTC <cheater> byorgey, why are you not in #codez yet?
2012-05-23 14:51:19 UTC <byorgey> I've never even heard of it.  What is #codez?
2012-05-23 14:52:35 UTC <cheater> it's a place that brings together programmers and tech people from various backgrounds
2012-05-23 14:52:54 UTC <cheater> there are lots of haskell folks there already
2012-05-23 14:54:19 UTC <byorgey> what sorts of things do people talk about?
2012-05-23 14:54:39 UTC <cheater> we've just finished talking about how to implement permutations efficiently on an fpga
2012-05-23 14:54:49 UTC <cheater> then someone started talking about bicycles i think.
2012-05-23 14:54:56 UTC <byorgey> hehe
2012-05-23 14:55:18 UTC <byorgey> well, sounds interesting, but honestly I doubt it would be a good use of my time.
2012-05-23 14:55:19 UTC <cheater> previous to that it might've been linux exploits based on a forged LANG variable.
2012-05-23 14:55:24 UTC <cheater> :)
2012-05-23 14:55:35 UTC <cheater> gotcha :)
2012-05-23 14:55:59 UTC <byorgey> I waste enough time in #haskell already ;)
2012-05-23 14:56:20 UTC <cheater> mmm, #haskell scared off some people :\
2012-05-23 14:58:25 UTC <cheater> on the one hand some people are annoyed at too many newbie topics, on the other hand some fairly abusive ops and we end up with a place that isn't for everyone
2012-05-23 14:58:40 UTC <cheater> but luckily it's holding on
2012-05-23 15:27:49 UTC <luite> cheater: i don't think i'll stick around for much longer in #codez btw, same reason as byorgey :)
2012-05-23 15:28:26 UTC <cheater> luite: lies, you're addicted already
2012-05-23 15:28:37 UTC <luite> oh cool, my isp offers free spotify
2012-05-23 15:28:44 UTC <cheater> offtopic
2012-05-23 15:28:47 UTC <cheater> take that to #codez
2012-05-23 15:28:49 UTC <luite> haha
2012-05-23 15:28:54 UTC <cheater> mwahahah
2012-05-23 15:29:00 UTC <cheater> see, you can't live without it.
2012-05-23 15:29:47 UTC <luite> hehe nah this channel also allows for off topic dicussion :p
2012-05-23 15:30:07 UTC <cheater> not true it is only for diagrams
2012-05-23 15:30:07 UTC <cheater> i will be the offtopic police from today on
2012-05-23 15:30:18 UTC <luite> but at least it's mostly haskell related here
2012-05-23 15:30:18 UTC <cheater> you shall not be offtopic in #diagrams at any time
2012-05-23 15:30:42 UTC <cheater> well then start talking about haskell in #codez too
2012-05-23 15:30:42 UTC <cheater> :)
2012-05-23 15:32:21 UTC <cheater> it's receptive :)
2012-05-24 14:34:55 UTC <byorgey> I'm going to be submitting a "system demonstration proposal" for diagrams to the Haskell Symposium.
2012-05-24 14:35:40 UTC <byorgey> Anyone who wants to help me write it (~ 2 pages) and/or come to Copenhagen in September to help me present it if it's accepted, let me know =)
2012-05-24 14:38:22 UTC <luite> hehe
2012-05-24 14:38:38 UTC <luite> hmm
2012-05-24 14:38:51 UTC <fryguybob> Sounds like fun
2012-05-24 14:46:17 UTC <byorgey> luite: you should submit a demonstration proposal for Wolfgang, if you think it will be ready to show off by then
2012-05-24 14:48:45 UTC <luite> hm, i can drive there if i can borrow my parents' car so the trip wouldn't be that expensive, but i don't think i have enough money for registration/hotel (and am not a student anymore by that time, so i probably can't get any compensation)
2012-05-24 14:50:21 UTC <byorgey> yeah, I forget how stupidly prohibitive the costs can be for someone who does not have some sort of institution/grants paying for them =P
2012-05-24 14:51:35 UTC <byorgey> luite: I think you could probably get the registration fee waived/reduced if you had a Wolfgang demonstration accepted, and explained that you are poor and don't belong to an instutition
2012-05-24 14:52:08 UTC <byorgey> there's still the hotel cost of course, though we could share a room
2012-05-24 14:52:24 UTC <luite> i guess a hostel wouldn't be that bad
2012-05-24 14:52:46 UTC <byorgey> true, you don't have to actually stay in the conference hotel itself
2012-05-24 14:52:47 UTC <luite> but they (at least icfp) don't have any registration information online yet
2012-05-24 14:52:59 UTC <byorgey> yeah, it's still a bit early
2012-05-24 14:53:31 UTC <byorgey> but if you want to submit a demonstration proposal they are due a week from Saturday (June 2)
2012-05-24 14:53:43 UTC <luite> hmm, that is quite soon
2012-05-24 14:54:04 UTC <byorgey> I know, sorry, I should have mentioned it before
2012-05-24 14:54:09 UTC <byorgey> but I only just now thought of it =)
2012-05-24 14:55:23 UTC <luite> nah i could've known myself of course
2012-05-24 14:55:37 UTC <luite> i knew that it was in copenhagen this year
2012-05-24 14:56:24 UTC <byorgey> well, anyway, it doesn't really matter whose fault it is =)
2012-05-24 20:07:33 UTC <tgeeky> ROAD TRIP
2012-05-24 20:11:42 UTC <byorgey> quick poll: without actually running it, what would you expect the output of (mempty ||| circle 1) <> square 1  to be
2012-05-24 20:12:28 UTC <byorgey> (what I expect it to be and what it actually is are different)
2012-05-24 20:12:48 UTC <byorgey> perhaps we should also add a third category, "what you think it should be"
2012-05-24 20:13:37 UTC <tgeeky> hm
2012-05-24 20:13:42 UTC <tgeeky> O|| <-- that
2012-05-24 20:13:47 UTC <ClaudiusMaximus> i'd expect a circle with its left edge at the origin of the square
2012-05-24 20:13:59 UTC <ClaudiusMaximus> but i had to think about it too hard
2012-05-24 20:14:58 UTC <byorgey> see, that's what it actually is, but I don't think it should
2012-05-24 20:15:17 UTC <byorgey> mempty ought to be an identity element for |||
2012-05-24 20:16:10 UTC <byorgey> if you want to use the "point diagram" at the origin, and you put that beside the circle it would push the circle over
2012-05-24 20:16:15 UTC <byorgey> but that's different
2012-05-24 20:16:31 UTC <ClaudiusMaximus> mm, and the fact that mempty has a defined local origin is problematic for that - but if you can't rely on having a local origin always, that makes things hairy elsewhere i suspect
2012-05-24 20:16:52 UTC <byorgey> yeah, mempty is just special
2012-05-24 20:17:10 UTC <byorgey> it actually is literally special -- essentially it corresponds to Nothing and all other diagrams are  Just (a bunch of stuff)
2012-05-24 20:17:59 UTC <tgeeky> (Nothing ||| Just (circle 1)) <*> Just (square 1)
2012-05-24 20:18:30 UTC <ClaudiusMaximus> so, if mempty should be an identity for <>, |||, === - does that make some kind of spherical structure (trying to visualize it, brain hurty)
2012-05-24 20:18:42 UTC <byorgey> spherical?
2012-05-24 20:19:03 UTC <byorgey> you mean in terms of the envelope?
2012-05-24 20:19:44 UTC <ClaudiusMaximus> no, in terms of algebra things - i'm going through nicotine withdrawal, so probably am not making sense :)
2012-05-24 20:19:52 UTC <byorgey> oh hehe =)
2012-05-24 20:20:58 UTC <tgeeky> oh, ||| does what I thought <> did.
2012-05-24 20:21:42 UTC <byorgey> tgeeky: oh, hehe, yeah.  <> as in the semigroup operation, not <> as in various pretty-printing libraries
2012-05-24 20:21:59 UTC <byorgey> and also (confusingly) not <> as in the original diagrams.
2012-05-24 20:26:46 UTC <tgeeky> http://i.imgur.com/MGaU7.jpg
2012-05-24 20:30:27 UTC <byorgey> tgeeky: whoah
2012-05-24 20:30:53 UTC <byorgey> is that made of paper?  how does it stay up?
2012-05-24 20:31:04 UTC <tgeeky> I think it's made of magic
2012-05-24 20:31:06 UTC <tgeeky> and, of course, magic
2012-05-24 20:31:11 UTC <byorgey> oh, well that explains it
2012-05-24 20:31:25 UTC <tgeeky> i bet there are metal rods in the internal angles of the largest void
2012-05-24 20:31:43 UTC <tgeeky> but I think it stays up because of the meticulious patience of maths students
2012-05-24 20:33:00 UTC <byorgey> so... magic
2012-05-24 20:33:17 UTC <tgeeky> it's alllll around youuuuuu
2012-05-24 20:34:03 UTC <tgeeky> that's what i expect if you do: fix (triangle 1) in diagrams
2012-05-24 21:05:33 UTC <byorgey> tgeeky: actually, I was just thinking about how to support recursive diagrams
2012-05-24 21:05:45 UTC <byorgey> because of http://recursivedrawing.com/
2012-05-24 21:13:15 UTC <luite> that would be cool, but would you have some fixed depth limit?
2012-05-24 21:19:07 UTC <byorgey> luite: one way to do it would be with a fixed depth limit.  The other way that I could think of is that if you limit the sorts of recursion to patterns amenable to analysis (e.g. iteratively apply some affine transformation) then you could decide how deep to recurse up front, e.g. by computing when things will be too small to draw or outside a specified 'viewing window'
2012-05-24 21:19:43 UTC <luite> yeah that was exactly what i was going to think about
2012-05-24 21:19:44 UTC <byorgey> actual, unrestricted recursion seems hopeless.
2012-05-24 21:19:55 UTC <luite> euh, to suggest :)
2012-05-24 21:20:02 UTC <byorgey> =)
2012-05-24 21:20:34 UTC <byorgey> well, I'll add it to the list of things to think about in July
2012-05-24 21:21:04 UTC <luite> but affine transforms are perhaps a bit too limited? for example you could have some nice dynamical systems as a recursively defined diagram
2012-05-24 21:22:17 UTC <byorgey> oh, quite.  iterated affine was just an example of something I think you could do the required analysis for.
2012-05-24 21:22:53 UTC <byorgey> with, like, eigenvectors or something
2012-05-24 21:23:01 UTC <luite> yeah but general dynamical systems is just an example of something you can't do it for :p so i think some fixed limit support would be nice
2012-05-24 21:23:17 UTC <byorgey> oh, fair enough
2012-05-24 21:23:47 UTC <byorgey> they aren't mutually exclusive.
2012-05-24 21:26:10 UTC <ClaudiusMaximus> was thinking of doing something vaguely like that with graphgrow2 - mainly thinking about some kind of "renormalisation" so that zooming in on non-origin points is less likely to reach precision limits of Double so quickly...
2012-05-24 21:28:08 UTC <ClaudiusMaximus> (didn't figure out the maths yet - i got sidetracked into more mandelbrot set things instead.. http://claudiusmaximus.goto10.org/g/mandelbrot/period-domain/period-domain-colouring-test-i.jpg )
2012-05-24 21:41:44 UTC <byorgey> pretty =)
2012-05-24 22:39:50 UTC <luite> ClaudiusMaximus: cracking diagram lad!
2012-05-25 00:48:28 UTC <luite> is there a fast way to find all files in a directory with a name that starts with some string?
2012-05-25 00:48:41 UTC <luite> hm, i meant to ask that in -blah
2012-05-25 04:42:09 UTC <fryguybo1> ACTION now has a bike (in Oregon).
2012-05-25 09:43:40 UTC <cheater_> luite: you could've asked in #codez ;p
2012-05-25 09:44:03 UTC <luite> i could
2012-05-25 09:44:28 UTC <luite> but i would've likely interrupted a discussion on tube amps or chromatography
2012-05-25 10:11:37 UTC <cheater__> luite: i would say interruption is less than likely, but it's more than likely a parallel conversation could be going on :)
2012-06-01 01:19:53 UTC <fryguybob> How goes the diagrams?
2012-06-01 02:14:44 UTC <byorgey> fryguybob: good, currently I'm working on a paper for the Haskell Symposium based around ideas from diagrams
2012-06-01 02:15:05 UTC <byorgey> it's also resulted in a lot of good ideas + changes to diagrams-core
2012-06-01 02:15:29 UTC <byorgey> I'll post a link here to the paper once I submit it in a couple days
2012-06-01 02:18:37 UTC <byorgey> after that I need to spend some solid time doing thesis research, but there will still be time for some diagrams hacking.
2012-06-01 02:19:31 UTC <byorgey> fryguybob: how goes the interning and fathering?
2012-06-01 04:15:04 UTC <fryguybob> byorgey: Interning and fathering are going well.  Judah was smiling a lot this morning.  My muscles are still adjusting to the bike commute.
2012-06-01 04:40:19 UTC <fryguybob> I look forward to reading the paper.  Good luck!
2012-06-01 15:47:28 UTC <luite> me too
2012-06-01 16:07:32 UTC <cheater> hi
2012-06-01 16:07:44 UTC <cheater> luite i had a link for you but i forgot you're in #codez anymore
2012-06-01 16:30:36 UTC <luite> oh
2012-06-02 17:06:56 UTC <fryguybob> ACTION too many ICFP papers to read!
2012-06-02 17:59:03 UTC <byorgey> I know, right?
2012-06-02 18:11:26 UTC <luite> oh are they available for download already?
2012-06-02 18:14:29 UTC <luite> hm not on the site
2012-06-02 18:50:46 UTC <tgeeky_> http://www.reddit.com/r/haskell/comments/uhhd2/icfp12_accepted_papers_with_links_where_available/#
2012-06-02 18:51:02 UTC <tgeeky_> luite: I didn't see the question that luite was asking about
2012-06-02 18:51:10 UTC <tgeeky_> but if it happened to be "where are the ICFP12 papers"?
2012-06-02 18:51:15 UTC <tgeeky_> then I accidentially answered it :O
2012-06-02 18:53:45 UTC <ClaudiusMaximus> anyone here juggle?  (as in, throwing balls around impressively)
2012-06-02 18:54:13 UTC <tgeeky_> nope
2012-06-02 18:54:35 UTC <ClaudiusMaximus> aww.  was hoping that i could steal some juggling diagram code and hack it into my fractals
2012-06-02 18:55:07 UTC <tgeeky_> hehe
2012-06-02 18:55:08 UTC <ClaudiusMaximus> http://img580.imageshack.us/img580/3802/q79m.mp4 http://img441.imageshack.us/img441/5291/nrf.mp4 http://img845.imageshack.us/img845/1892/5fk.mp4
2012-06-02 18:56:14 UTC <byorgey> ClaudiusMaximus: I can juggle a few basic patterns with two and three balls.  Nothing beyond that though.
2012-06-02 18:56:55 UTC <ClaudiusMaximus> byorgey: cool!  i can barely juggle 1 ball with no semblance of competence
2012-06-02 18:57:00 UTC <tgeeky_> I can throw a football through a suspended tire at 40 yards away
2012-06-02 18:57:26 UTC <tgeeky_> ACTION imagines ClaudiusMaximus accidentally throwing a juggling ball directly into his eye
2012-06-02 18:57:37 UTC <ClaudiusMaximus> luckily i wear glasses
2012-06-02 18:58:15 UTC <byorgey> ClaudiusMaximus: when I was thirteen or so I decided I wanted to learn how to juggle.  So I filled three (uninflated) balloons with a bit of flour and then practiced for like three days straight.
2012-06-02 18:59:46 UTC <tgeeky_> until customs dragged him aside suspecting he is a drug mule
2012-06-02 19:00:27 UTC <byorgey> ACTION should write a book entitled "You Too Can Learn To Juggle, As Long As You Have Three Days To Do Nothing Else And Don't Mind Getting Rugburns On Your Knees From Kneeling A Lot"
2012-06-02 19:01:32 UTC <byorgey> ClaudiusMaximus: cool videos =)
2012-06-02 19:02:48 UTC <fryguybob> My niece is highly amused by my juggling.  I think it is because of my incompetence though :D.
2012-06-02 19:03:21 UTC <ClaudiusMaximus> :)  will put this thing on hackage tonight or tomorrow, probably  - the last one's 'score' was   writeFile "juggle7.nf" $ show [F[2 * sin a :+ sin (2*a) | k<-[0..6], let a = 2 * pi * (k / 7 + t)]|i<-[0..149],let t=i/150]
2012-06-02 19:03:21 UTC <fryguybob> I only have frisbee throwing skills.
2012-06-02 19:03:53 UTC <byorgey> ClaudiusMaximus: cool =)
2012-06-02 19:04:28 UTC <tgeeky_> back to work
2012-06-02 19:20:49 UTC <tgeeky> byorgey: do you know if the "." on top of <= in Section 4 is supposed to mean something?
2012-06-02 19:22:18 UTC <tgeeky> there isn't another <= in the paper anywhere
2012-06-02 19:39:34 UTC <luite> tgeeky: hanks for the links
2012-06-02 19:40:05 UTC <tgeeky> luite: yep
2012-06-02 19:42:05 UTC <byorgey> tgeeky: Section 4 of what?
2012-06-02 19:42:16 UTC <tgeeky> oh. lol.
2012-06-02 19:42:19 UTC <tgeeky> didn't paste link
2012-06-02 19:42:37 UTC <tgeeky> byorgey: www.iis.sinica.edu.tw/~scm/pub/icfp055fp-mu.pdf
2012-06-02 19:46:30 UTC <byorgey> tgeeky: it's defined at the beginning of section 4
2012-06-02 19:46:54 UTC <byorgey> "Let xs .<= ys = (forall x in xs, y in ys :: x <= y)
2012-06-02 19:47:51 UTC <byorgey> it's just lifting the idea of <= to sets, one set is <= another if all its elements are pairwise <= all the elements of the second
2012-06-02 19:52:43 UTC <tgeeky> ok. I already thought of that as being in sets (at least set implementations that are available to me), so I was wondering if it has a special meaning
2012-06-02 19:54:21 UTC <byorgey> it has exactly the meaning it is defined to have.
2012-06-02 19:56:29 UTC <tgeeky> byorgey: another question. In the proofs the triple equals is "using definition?" and <== is?
2012-06-02 19:56:49 UTC <tgeeky> (the earlier proofs in this paper just use =, and don't use <==)
2012-06-02 19:56:58 UTC <byorgey> I think in proofs triple equals means "logically equivalent to"
2012-06-02 19:57:05 UTC <byorgey> and <== means "is implied by"
2012-06-02 19:57:19 UTC <tgeeky> sounds good to me
2012-06-02 19:59:10 UTC <fryguybob> :( diagram editor /= diagrams editor.
2012-06-02 20:01:36 UTC <byorgey> fryguybob: oh, Blobs?  yeah, that got me too =(
2012-06-02 20:01:47 UTC <byorgey> don't worry, we'll have a diagrams editor someday
2012-06-02 20:03:14 UTC <byorgey> hmm, the Blobs website says that to build it you need GHC 6.2!
2012-06-02 20:03:49 UTC <byorgey> looks like it hasn't been maintained in years and someone has just updated it to get it to build and uploaded it to Hackage
2012-06-02 20:04:54 UTC <mgsloan> ACTION is soooo close to being able to diagrams hack again - just two papers, two tests, and 4 days to go
2012-06-02 20:05:02 UTC <byorgey> mgsloan: yay!
2012-06-02 20:05:11 UTC <mgsloan> yeah!! :D
2012-06-02 20:05:14 UTC <byorgey> mgsloan: good luck finishing up!
2012-06-02 20:05:39 UTC <byorgey> ACTION is soooo close to being able to do everything other than write this paper again - just 15 hours to go
2012-06-02 20:06:10 UTC <mgsloan> thanks!  I'm going to need it if I'm going to get much sleep..
2012-06-02 20:06:19 UTC <mgsloan> for the haskell colloquium?
2012-06-02 20:06:53 UTC <mgsloan> I was thinking about submitting a paper, but I didn't have time to write a draft + don't have academic collaborators
2012-06-02 20:07:24 UTC <mgsloan> but I think it'd be pretty cool.  "Quasi-Quoted DSLs to express bidirectional sugarings"
2012-06-02 20:07:43 UTC <byorgey> mgsloan: yeah
2012-06-02 20:07:50 UTC <byorgey> mgsloan: that does sound cool =)
2012-06-02 20:07:59 UTC <mgsloan> combine the lens DSL with the AST quoter DSL === very declarative expression of all the standard desugarings + resugarings
2012-06-02 20:08:14 UTC <mgsloan> most of this is in place, except merging the DSLs and getting the resugarings going
2012-06-02 20:08:43 UTC <byorgey> mgsloan: well, start writing it this summer, and you'll have something very cool for next year
2012-06-02 20:08:53 UTC <mgsloan> but ohhhwell :)  I might be able to go to the thing anyway
2012-06-02 20:08:55 UTC <mgsloan> yeah!
2012-06-02 20:09:12 UTC <byorgey> cool, see you in Denmark =)
2012-06-02 20:09:29 UTC <byorgey> we can play frisbee on some Danish grass
2012-06-02 20:10:00 UTC <mgsloan> or something for a Monad Reader!
2012-06-02 20:10:04 UTC <mgsloan> haha, sounds good!
2012-06-02 20:10:10 UTC <byorgey> yep, there's that too
2012-06-02 20:10:15 UTC <mgsloan> I'm planning to make it to Hac Phi this year, too!
2012-06-02 20:10:19 UTC <byorgey> yay!
2012-06-02 20:10:54 UTC <mgsloan> yup - it's gonna be an action-packed summer.  NASSLI + OPLSS + hac phi + maybe ICFP
2012-06-02 20:11:27 UTC <byorgey> sounds fun =)
2012-06-02 20:11:45 UTC <byorgey> I hope vyom can come to hac phi too
2012-06-02 20:12:29 UTC <mgsloan> s/NASSLI/NASSLLI
2012-06-02 20:12:31 UTC <mgsloan> yeah, that'd be cool!
2012-06-02 20:13:04 UTC <byorgey> North Americal Summer School for Lollipop Licking Instruction?
2012-06-02 20:13:23 UTC <mgsloan> something to that effect
2012-06-02 20:13:24 UTC <mgsloan> Oleg's going to be there
2012-06-02 20:13:29 UTC <byorgey> Laparoscopic Licensure Investigators?
2012-06-02 20:13:33 UTC <mgsloan> hehehe
2012-06-02 20:14:01 UTC <mgsloan> lethargic linguists inebriate
2012-06-02 20:14:24 UTC <mgsloan> lethargic linguistic inebriation, I suppose
2012-06-02 20:14:41 UTC <byorgey> =)
2012-06-02 20:14:57 UTC <byorgey> oh, Logic, Language, and Information
2012-06-02 20:14:59 UTC <byorgey> boring.
2012-06-02 20:16:34 UTC <mgsloan> haha :D
2012-06-02 20:16:42 UTC <tgeeky> byorgey: I saw a picture on reddit where someone showed the "center" of a tootsie-pop with the title "468 licks. Whew!"
2012-06-02 20:17:25 UTC <byorgey> hehe
2012-06-02 20:17:30 UTC <tgeeky> byorgey: It made me want to put a tootsie pop in a lathe, take licks and take lots of pictures
2012-06-02 20:17:35 UTC <tgeeky> so you could see it
2012-06-02 20:18:04 UTC <tgeeky> but then I realized, for scientific accuracy, I'd need many pops, and probably a replacement tounge -- and that just sounds gross.
2012-06-02 20:19:45 UTC <luite> mgsloan: hm cool
2012-06-02 20:21:08 UTC <mgsloan> luite:  What type representation are you using in wolfgang lambda these days?  Internal GHC types still?
2012-06-02 20:21:29 UTC <luite> yeah, but i haven't made much progress on it
2012-06-02 20:21:38 UTC <luite> also have missed the deadline for an icfp demo thingie
2012-06-02 20:21:48 UTC <mgsloan> yup yup, no worries!  Ah :/
2012-06-02 20:22:45 UTC <luite> meh no prob, i probably wouldn't have been able to go anway
2012-06-02 20:22:46 UTC <tgeeky> mgsloan: you might like this link: https://github.com/technogeeky/icfp12-paper-links/blob/master/README.md
2012-06-02 20:22:49 UTC <tgeeky> err
2012-06-02 20:22:52 UTC <mgsloan> well, looking forward to it as always! :D
2012-06-02 20:22:56 UTC <tgeeky> mgsloan: this link: http://dynamicaspects.org/papers/icfp12-submitted.pdf <--
2012-06-02 20:23:53 UTC <mgsloan> luite: I just ask because I think I'm going to try to do the type viz stuff using AST quasi-quoters, but I guess for that case it'd be easiest to do a serialize + parse round-trip
2012-06-02 20:24:09 UTC <luite> hmm ah
2012-06-02 20:25:59 UTC <tgeeky> man haddock has some serious UFT8 bugs
2012-06-02 20:26:11 UTC <tgeeky> well Unicode something bugs
2012-06-02 20:26:12 UTC <mgsloan> there might not be too much reason for this, though - the type AST is very simple
2012-06-02 20:26:29 UTC <luite> nah i haven't  made any progress even though this and ghcjs was more or less the only thing i've been working on this week (my ghcjs stuff is on github, is not much)
2012-06-02 20:28:03 UTC <mgsloan> tgeeky:  Cool paper!! I'm glad this actually has a prototype implementation
2012-06-02 20:28:41 UTC <mgsloan> I think it'd be cool to be able to have your program execute until you hit a hole, and then the user can give an expression for that particular case
2012-06-02 20:28:55 UTC <mgsloan> (without typifying the case)
2012-06-02 20:29:05 UTC <tgeeky> mgsloan: I wonder what implicit paramters mean in your scheme
2012-06-02 20:29:11 UTC <tgeeky> I saw a post about them on reddit earlier today
2012-06-02 20:29:12 UTC <mgsloan> then, you get to look at all the cases you gave, and try to generalize to the actual definition
2012-06-02 20:29:22 UTC <luite> that could be possible with ghcjs and a special evaluate function for the thnk
2012-06-02 20:29:23 UTC <byorgey> tgeeky: re: unicode+Haddock, it actually matters what version of ghc you have
2012-06-02 20:29:23 UTC <luite> thunk
2012-06-02 20:29:29 UTC <tgeeky> as well as the discussion about template haskell on SO, which made me think of you (and then I saw your post :o)
2012-06-02 20:29:33 UTC <byorgey> since Haddock uses the GHC API to do parsing of comments
2012-06-02 20:29:56 UTC <byorgey> recent versions of GHC+Haddock seem to deal with Unicode in comments just fine
2012-06-02 20:30:12 UTC <tgeeky> byorgey: ok. In this case, it's all 7.4.1-based. And I'm actually wrong: the character â is not allowed in function names (of course)
2012-06-02 20:30:29 UTC <tgeeky> but since it's just a comment, haddock shouldn't know that
2012-06-02 20:30:48 UTC <byorgey> hmm, but is it in single quotes?
2012-06-02 20:30:59 UTC <tgeeky> nope
2012-06-02 20:31:07 UTC <tgeeky> in a code block @ .. @
2012-06-02 20:31:07 UTC <byorgey> hmm, strange
2012-06-02 20:31:12 UTC <byorgey> oh!
2012-06-02 20:31:15 UTC <tgeeky> multiline code block
2012-06-02 20:31:29 UTC <byorgey> well I think it probably uses the GHC API to parse that too
2012-06-02 20:31:42 UTC <byorgey> wait, no, why would it
2012-06-02 20:31:58 UTC <byorgey> never mind, I don't know.  I'm sure there are still bugs.  It's just not as bad as it used to be.
2012-06-02 20:34:06 UTC <tgeeky> byorgey: yeah. so the function was called: unfâ . I can compile a function instead named: (|â|). But when I put that definition back in the comments (again, inside @ .. @), it still fails to parse
2012-06-02 20:34:20 UTC <mgsloan> it it possible to use GHC's parser without context (lexical and otherwise - configuration is fine)
2012-06-02 20:34:54 UTC <byorgey> mgsloan: yes, I think so.  At least, it ought to be.
2012-06-02 20:35:04 UTC <byorgey> The parsing phase does not depend on any context.
2012-06-02 20:35:14 UTC <mgsloan> ?  If so, then it wouldn't be /too/ much work to do pretty AST constructors / matches for GHC
2012-06-02 20:35:18 UTC <mgsloan> awesome!!!
2012-06-02 20:36:00 UTC <byorgey> In particular, I know name resolution is done in a separate pass after parsing.
2012-06-02 20:36:05 UTC <mgsloan> what's cool about this is that it means that you could start writing code that doesn't require much work to port between haskell-src-exts, template haskell, and ghc's api
2012-06-02 20:36:08 UTC <byorgey> I am not sure how resolution of precedence for infix operators works.
2012-06-02 20:36:25 UTC <mgsloan> yeah, it's done after - initially things are "UInfix"
2012-06-02 20:36:29 UTC <luite> it parses it first unassociated, then in the renamer reassociates them
2012-06-02 20:36:41 UTC <byorgey> ok, cool
2012-06-02 20:36:43 UTC <tgeeky> ACTION is surprised nobody has done fixity information for template haskell
2012-06-02 20:37:15 UTC <mgsloan> tgeeky: :D https://github.com/mgsloan/quasi-extras/blob/master/src/Language/Quasi/Internal/Fixity.hs
2012-06-02 20:37:16 UTC <luite> tgeeky: you have unresolved fixity expressions
2012-06-02 20:37:59 UTC <luite> oh cool
2012-06-02 20:41:41 UTC <tgeeky> mgsloan: have you tried to get zeroth working again?
2012-06-02 20:41:45 UTC <tgeeky> mgsloan: or just doing it yourself?
2012-06-02 20:42:16 UTC <mgsloan> tgeeky: embarrassingly, as I talk about zeroth a bit in that post, I haven't been using it
2012-06-02 20:42:52 UTC <mgsloan> either way, the point stands that there isn't anything critically wrong with TH
2012-06-02 20:43:15 UTC <mgsloan> there's just a bit of cleanup / abstraction / traditions that need to be thrown on top
2012-06-02 20:44:04 UTC <mgsloan> and disregarding it / discouraging people from using it really hampers this
2012-06-02 20:45:16 UTC <tgeeky> Well, you could also take the view that it's "not useful enough" or "not useful enough to justify knowing all the particular AST bits" or whatever
2012-06-02 20:46:36 UTC <tgeeky> but hopefully you work will change perception
2012-06-02 20:46:38 UTC <tgeeky> (if not reality)
2012-06-02 20:47:28 UTC <mgsloan> right! I hope so!
2012-06-02 20:47:41 UTC <mgsloan> my goal is to export a 5 - 10 function TH interface
2012-06-02 20:47:57 UTC <mgsloan> as the main thing you need to achieve everything you can do currently
2012-06-02 20:48:12 UTC <mgsloan> (the Language.Quasi.Prelude)
2012-06-02 20:48:20 UTC <mgsloan> (presently non-existant)
2012-06-02 20:48:30 UTC <tgeeky> I want to experiment with an alternate syntax for TH some day
2012-06-02 20:49:16 UTC <mgsloan> you've seen mine, right?
2012-06-02 20:49:23 UTC <tgeeky> don't think so?
2012-06-02 20:49:28 UTC <mgsloan> https://github.com/mgsloan/quasi-extras/blob/master/examples/Example2.hs
2012-06-02 20:49:45 UTC <mgsloan> so, here it's using the syntax for pattern matching, not construction
2012-06-02 20:49:55 UTC <mgsloan> but, pretty much it's my swing at AST splicing done right
2012-06-02 20:50:53 UTC <mgsloan> ACTION just realized that most of the "Just"s in that code are unecessary
2012-06-02 20:50:56 UTC <tgeeky> this is using a "custom" quasiquoter right?
2012-06-02 20:51:14 UTC <tgeeky> i mean, you're still using the [...| |] syntax
2012-06-02 20:51:55 UTC <mgsloan> yup
2012-06-02 20:52:18 UTC <tgeeky> this interested me: http://hackage.haskell.org/package/shplit
2012-06-02 20:52:19 UTC <mgsloan> this quasi-quoter handles haskell antiquotes, and runs the stuff outside of the antiquotes through haskell-src-exts / meta
2012-06-02 20:52:20 UTC <tgeeky> check out the home page
2012-06-02 20:52:50 UTC <mgsloan> then, it finds the spots in the parsed + lifted AST that need to be replaced with the splices
2012-06-02 20:52:53 UTC <tgeeky> mgsloan: btw, have you read the BNFC-meta paper? I don't know if what you're doing involves "regular languages", but if it does, you may want to seriously invest their tools
2012-06-02 20:53:31 UTC <mgsloan> yeah, I've seen that, it's pretty cool!
2012-06-02 20:53:44 UTC <tgeeky> they invent a "universal antiquotation" pattern
2012-06-02 20:53:51 UTC <tgeeky> (bnfc-meta, that is)
2012-06-02 20:53:56 UTC <mgsloan> Yup.  I'm going to need something like that soon
2012-06-02 20:54:10 UTC <tgeeky> they also generate parsers and quasi quoters from the grammar specification
2012-06-02 20:54:22 UTC <mgsloan> here's my take on string interpolation:
2012-06-02 20:54:22 UTC <mgsloan> https://github.com/mgsloan/quasi-extras/blob/master/src/Language/Quasi/StringSub.hs
2012-06-02 20:54:36 UTC <mgsloan> the cool thing is that this also does find-based string parsing
2012-06-02 20:55:04 UTC <mgsloan> so, [s|{{foo}} blah blah {{baz}}|]
2012-06-02 20:55:18 UTC <mgsloan> will find the string " blah blah " and yield everything before it as foo, and everything after it as baz
2012-06-02 20:55:50 UTC <tgeeky> i assume it can't handle {{foo}} {{baz}} ?
2012-06-02 20:55:57 UTC <mgsloan> nope
2012-06-02 20:55:58 UTC <tgeeky> or that just matches everything? :o
2012-06-02 20:56:05 UTC <mgsloan> I thought about handling that :)
2012-06-02 20:56:17 UTC <mgsloan> I probably will in a variant
2012-06-02 20:56:35 UTC <mgsloan> "just" need to enumerate all possible partitionings
2012-06-02 20:57:50 UTC <tgeeky> lol @ your desugar lambdas using lambdas
2012-06-02 20:58:26 UTC <mgsloan> hahaha yeah
2012-06-02 20:58:32 UTC <mgsloan> but at least they no longer use patterns!
2012-06-02 21:01:52 UTC <mgsloan> maybe it should desugar to single-param lambdas
2012-06-02 21:01:55 UTC <mgsloan> that might be kinda useful
2012-06-02 22:12:23 UTC <ClaudiusMaximus> class Monad m => MonadJuggle m where throw :: Ball -> Hand -> Length -> m () ; wait :: m ()  ; newtype JuggleT m a = JuggleT{ runJuggleT :: (StateT Juggling (WriterT [Action] m) a) }   ; animate :: Speed -> [Action] -> [Map Ball Position]   woop
2012-06-02 22:48:15 UTC <byorgey> haha nice =)
2012-06-02 22:56:37 UTC <tgeeky> makes up for not being able to juggle in real live, with a Juggling monad. nice.
2012-06-02 23:48:02 UTC <ClaudiusMaximus> some output from my juggling monad http://claudiusmaximus.goto10.org/v/juggling/ (small loops, longest is ~12 seconds)
2012-06-03 00:26:21 UTC <byorgey> ClaudiusMaximus: I don't really understand what I'm watching, but it looks cool =)
2012-06-03 00:29:08 UTC <tgeeky> It looks like what I would expect an acid trip would look like
2012-06-03 00:33:18 UTC <ClaudiusMaximus> http://en.wikipedia.org/wiki/Siteswap is the notation used in the filename
2012-06-03 02:03:31 UTC <mgsloan> is diagrams' main repos still darcs?
2012-06-03 02:58:52 UTC <byorgey> yes
2012-06-03 03:00:08 UTC <tgeeky_> byorgey: if you are friends with: http://www.cis.upenn.edu/~eir/packages/singletons/ <-- that guy
2012-06-03 03:00:21 UTC <byorgey> tgeeky_: yes, I am
2012-06-03 03:00:26 UTC <tgeeky_> tell him that his links are dead, and he should feel bad
2012-06-03 03:00:35 UTC <tgeeky_> well, the paper link... is dead :o
2012-06-03 03:00:45 UTC <tgeeky_> ah no it's not anymore!
2012-06-03 03:00:46 UTC <tgeeky_> woohoo
2012-06-03 03:01:14 UTC <byorgey> give him a break, he's probably submitting the paper as we speak =)
2012-06-03 03:01:42 UTC <tgeeky_> hehe. Nope. He e-mailed me "thanks for letting me know"
2012-06-03 03:03:41 UTC <byorgey> oh, hehe =)
2012-06-03 03:03:55 UTC <tgeeky_> i also congradulated him on his first hackage package
2012-06-03 03:03:59 UTC <byorgey> nice =)
2012-06-03 03:04:24 UTC <tgeeky_> am I to assume you are already familiar with the work in this paper?
2012-06-03 03:08:32 UTC <tgeeky_> a type safe database interface too
2012-06-03 03:14:21 UTC <byorgey> tgeeky_: yes, I am
2012-06-03 03:14:56 UTC <byorgey> I mean, not with the specifics, but I'm familiar with the overall approach, and have discussed it with him, etc.
2012-06-03 03:15:32 UTC <tgeeky_> is it safe to assume, in general, that when someone says "this will work in GHC > 7.5.20120403" or similar, that they are describing a contribution to GHC?
2012-06-03 03:15:50 UTC <tgeeky_> i guess not, because it could just be a bug that must be fixed for their code to work
2012-06-03 03:16:12 UTC <byorgey> yes, and I think the latter is actually the case here
2012-06-03 03:16:47 UTC <byorgey> I know that through doing the work in this paper Richard discovered and filed a ton of bug reports relating to the implementation of the new DataKinds stuff
2012-06-03 03:17:44 UTC <tgeeky_> so, this diagram on page 1 silently implies that I should not think of three individual levels: kinds, types, terms, but instead two level-pairs:  [kinds-types]  and [types-terms] ?
2012-06-03 03:18:04 UTC <tgeeky_> (to me, at least)
2012-06-03 03:19:11 UTC <tgeeky_> is this thought correct, or useful? Should it be true into the future?
2012-06-03 03:19:18 UTC <tgeeky_> bbiaf; going to my desktop
2012-06-03 03:22:47 UTC <tgeeky> pong
2012-06-03 03:41:52 UTC <byorgey> tgeeky: well, the levels are not "independent", they are always paired in the sense that each level classifies things in the level below it.
2012-06-03 03:42:45 UTC <byorgey> and yeah, for the purposes of understanding this paper it does look like that's a useful way to think about it
2012-06-03 04:05:24 UTC <tgeeky> it seems UPenn is going the we're-going-for-dependent-types-in-haskell-like-it-or-not approach to research :o
2012-06-03 04:50:49 UTC <tgeeky> byorgey: still here?
2012-06-03 05:28:38 UTC <jfischoff> so I am trying to build diagrams from HEAD, and I am failing because I don't have monoid-extras and I'm not sure where to get the package. Any ideas?
2012-06-03 05:36:38 UTC <fryguybob> jfischoff: http://patch-tag.com/r/byorgey/monoid-extras/home
2012-06-03 05:37:55 UTC <mgsloan> doh! I accidentally omitted monoid-extras from my darcs clone list
2012-06-03 05:38:20 UTC <jfischoff> no worries thanks guys!
2012-06-03 05:39:36 UTC <mgsloan> good for debugging my documentation :D
2012-06-03 05:40:30 UTC <jfischoff> yeah I was on the opposite end of this for my ghc iOS setup today. its a necessary evil :)
2012-06-04 20:01:25 UTC <luite> byorgey: have you tried cabal install world now, or heard from anyone who did? dcoutts told me it was broken, but that was long before 0.14
2012-06-04 20:02:37 UTC <byorgey> no, I haven't
2012-06-04 20:04:22 UTC <luite> hmm maybe i should try it the next upgrade, i have 7.4.2rc1 installed, but i get crashes with yesod :(
2012-06-04 20:28:18 UTC <tgeeky> luite: i just tried it. it's installing HaskellForMaths?
2012-06-04 20:28:52 UTC <tgeeky> HaskellForMaths happy hlint shplit
2012-06-05 03:30:03 UTC <tgeeky> luite: do you recall me mentioning "zipping" various parts of documents together in an editor, onscreen?
2012-06-05 03:30:31 UTC <tgeeky> several months or maybe a year ago
2012-06-05 13:00:01 UTC <luite> tgeeky: yeah, vaguely :)
2012-06-05 13:15:04 UTC <byorgey> ACTION vaguely remembers that too
2012-06-05 13:39:33 UTC <luite> yay in 3 days i might have a working shower again
2012-06-05 13:59:22 UTC <byorgey> amazing!
2012-06-05 14:06:17 UTC <luite> yes
2012-06-06 05:03:37 UTC <cheater_> luite: has the missing shower changed your daily hygienic routine at all
2012-06-06 18:59:18 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/pub/monoid-pearl.pdf
2012-06-06 20:03:55 UTC <luite> cheater__: waddayamean daily?
2012-06-06 20:08:13 UTC <luite> byorgey: cool pictures :)
2012-06-06 20:08:23 UTC <luite> i've only read the first two pages so far
2012-06-06 20:09:05 UTC <fryguybob> byorgey: Do you want a list of typos?
2012-06-06 20:09:17 UTC <luite> perhaps a monoid is better
2012-06-07 00:34:32 UTC <byorgey> fryguybob: sure, typos would be great
2012-06-07 00:35:18 UTC <byorgey> and any other feedback is welcome too, e.g. things you find confusing or whatever
2012-06-07 00:35:48 UTC <byorgey> it's too late to make a difference re: whether it gets accepted or not, but either way I'll be revising it =)
2012-06-07 00:55:44 UTC <alpounet> byorgey, your paper was a pretty cool read, good job :)
2012-06-07 00:59:24 UTC <byorgey> alpounet: thanks =)
2012-06-07 01:00:00 UTC <byorgey> alpounet: any suggestions for improving it?
2012-06-07 02:07:11 UTC <fryguybob> byorgey: Now that I'm home from work I'll do a more through reading
2012-06-07 02:34:52 UTC <byorgey> fryguybob: cool, thanks!
2012-06-07 04:08:14 UTC <fryguybob> byorgey: Only two typos so far.  Page 2: "which is part part of the...", and Page 5 second column top: should it be `unE (Envelope (Option (Just f))) = Just . getMax . f`?
2012-06-07 04:28:53 UTC <tgeeky> I got mentioned in a functional pearl!!! yay!
2012-06-07 04:29:19 UTC <tgeeky> byorgey: Conal really is the man, though, isn't he?
2012-06-07 04:29:29 UTC <tgeeky> A *very* clear thinker.
2012-06-07 04:32:58 UTC <tgeeky> plus, I get named first despite being the least helpful!
2012-06-07 05:23:41 UTC <alpounet> byorgey, got a thesis to hand off in a few hours
2012-06-07 05:24:18 UTC <alpounet> but i will try to find some improvement ideas after that :p
2012-06-07 06:34:21 UTC <fryguybob> byorgey: Page 9: "from a semantic point of vies"
2012-06-07 06:45:36 UTC <fryguybob> ACTION must go to bed.
2012-06-07 06:47:14 UTC <fryguybob> I like the paper a lot. It does a really good job of getting to the meat of the monoid stuff without getting bogged down in the (interesting) details about diagrams primatives.
2012-06-07 06:47:34 UTC <fryguybob> The build up between the variations is great!
2012-06-07 10:28:11 UTC <byorgey> alpounet: oh, no worries, good luck =)
2012-06-07 10:28:13 UTC <byorgey> fryguybob: thanks!
2012-06-07 10:28:27 UTC <alpounet> byorgey, it's actually done
2012-06-07 10:28:29 UTC <alpounet> went pretty well
2012-06-07 10:28:38 UTC <alpounet> i have re-read your paper
2012-06-07 10:28:45 UTC <alpounet> and i don't really have any idea to improve it
2012-06-07 10:29:02 UTC <byorgey> ok =)
2012-06-07 10:29:18 UTC <alpounet> it's crystal clear
2012-06-07 10:30:54 UTC <byorgey> wow, really?  I kind of doubt that =)
2012-06-07 10:31:03 UTC <byorgey> but thanks
2012-06-07 10:40:59 UTC <alpounet> well, for me it was
2012-06-07 10:41:32 UTC <alpounet> gah, i'd enjoy having an android backend for ghc sooooooo much
2012-06-07 19:24:19 UTC <tgeeky> byorgey: what was that pretty printer tool you recommended using?
2012-06-07 19:24:26 UTC <byorgey> tgeeky: hmm?
2012-06-07 19:24:43 UTC <byorgey> what kind of pretty printer tool?
2012-06-07 19:25:03 UTC <byorgey> ACTION doesn't recall recommending such a thing, but it's entirely possible I just forgot
2012-06-07 19:29:30 UTC <tgeeky> uh. just some software to help formatting output in ghci
2012-06-07 19:30:26 UTC <byorgey> oh! groom
2012-06-07 19:30:36 UTC <byorgey> "ghci" was the key word =)
2012-06-07 19:30:40 UTC <tgeeky> yep. that's the one
2012-06-07 20:52:40 UTC <byorgey> tgeeky: oh, nice Hackage upload =)
2012-06-07 21:07:36 UTC <luite> ah interesting package
2012-06-07 21:25:30 UTC <tgeeky_> byorgey: thanks
2012-06-07 21:25:32 UTC <tgeeky_> luite: thanks.
2012-06-07 21:25:38 UTC <tgeeky_> I plan on making it rather more interesting soon
2012-06-07 21:26:02 UTC <byorgey> in what way?
2012-06-07 21:26:04 UTC <tgeeky_> adding a Multiset variant, a SignedMultiset variant, converses
2012-06-07 21:26:11 UTC <byorgey> oh, neat
2012-06-07 21:26:36 UTC <tgeeky_> building very large examples using the relations between isotopes of elements
2012-06-07 21:28:03 UTC <tgeeky_> which makes for interesting examples
2012-06-07 21:29:35 UTC <tgeeky_> i'm going to try to cut down on the duplication that exists in there (domain and range) which means everything is stored twice
2012-06-07 21:30:02 UTC <tgeeky_> by using a signed multiset, splitting it on 0, and having the domain and range be the negative and positive sides
2012-06-07 21:30:44 UTC <tgeeky_> I think that is what I meant.
2012-06-07 21:32:22 UTC <luite> hm i don't think i understand
2012-06-07 21:33:34 UTC <tgeeky_> luite: a signed multiset can be thought of as something like:
2012-06-07 21:34:15 UTC <tgeeky_> -3^1 , -2^1 , -1^2, 0^1, 1^1, 2^1, 3^2
2012-06-07 21:34:25 UTC <tgeeky_> actually, that's just a multiset
2012-06-07 21:34:28 UTC <tgeeky_> to make it signed:
2012-06-07 21:34:31 UTC <tgeeky_> -3^1 , -2^1 , -1^2, 0^1, 1^1, 2^1, 3^-2
2012-06-07 21:34:55 UTC <tgeeky_> this means you have 1 copy of [-3,2,0,1,2], two copies of [-1], and negative two copies of [3]
2012-06-07 21:36:59 UTC <tgeeky_> so you make a restricted version of the signed multiset where the negative integers must must have positive exponents, and all positive integers must have negative exponents
2012-06-07 21:37:43 UTC <tgeeky_> so, [-3]^2 is OK, but [-3]^(-1) is not, because it maps a negative number to a negative number.
2012-06-07 21:37:58 UTC <tgeeky_> likewise [3]^-2 is OK, but [3]^(2) is not, because it maps a positive number to a positive
2012-06-07 21:38:41 UTC <tgeeky_> domain:  (# < 0)  :: a -> b    range (# > 0)  :: b -> a
2012-06-07 21:39:13 UTC <tgeeky_> that's the idea. I don't know if it will work out
2012-06-07 21:40:22 UTC <tgeeky_> luite: signed multisets are pretty weird things to deal with if you're used to sets
2012-06-07 21:40:25 UTC <tgeeky_> at least, they are for me
2012-06-07 21:41:28 UTC <luite> i still don't see how that would save space and what kind of thing you'd actually sore in the set
2012-06-07 21:41:31 UTC <luite> store
2012-06-07 21:42:35 UTC <tgeeky_> luite: oh, if you maintain the invariants mentioned, then because it's a relation (and not really a set), you can forget the domain or the range, and reconstruct it
2012-06-07 21:42:43 UTC <tgeeky_> reconstruct (the other half)
2012-06-07 21:43:26 UTC <tgeeky_> as to what kind of thing you'd store, anything that you can map to Naturals
2012-06-07 21:43:32 UTC <luite> what's the type of the elements and the mltiplicty?
2012-06-07 21:43:50 UTC <luite> oh i thought you'd store general Ord stuff
2012-06-07 21:44:19 UTC <tgeeky_> i'm not sure what the types would be at the end.
2012-06-07 21:45:09 UTC <tgeeky_> i'm interested in representing the kind of things like cabal version ranges
2012-06-07 21:45:23 UTC <tgeeky_> base >= 0.4    && < 0.5
2012-06-07 21:46:01 UTC <tgeeky_> is that a pair of Ords? or a pair of partial ords?
2012-06-07 21:46:16 UTC <luite> Ords
2012-06-07 21:46:34 UTC <luite> and i guess they're countable since the length must be finite
2012-06-07 21:47:24 UTC <luite> dunno what a good ranking method would be
2012-06-08 01:46:25 UTC <luite> mgsloan: are you going to hack on the type diagrams things now again?
2012-06-08 01:46:48 UTC <mgsloan> oh yeah
2012-06-08 01:47:01 UTC <mgsloan> have you seen Peaker's bottle?
2012-06-08 01:47:38 UTC <luite> yes, at least some screenshots
2012-06-08 01:47:50 UTC <mgsloan> it's pretty cool animated
2012-06-08 01:48:08 UTC <luite> yeah i heard him mentioning that animation was important
2012-06-08 01:48:40 UTC <mgsloan> the animation is actually pretty similar to what I was thinking too, but I figured it'd be left for later
2012-06-08 01:50:00 UTC <luite> but he didn't really have a diagram for types did he? i just saw some underlined things with type names
2012-06-08 01:50:06 UTC <luite> it looked a bit too cluttery imho
2012-06-08 01:51:03 UTC <mgsloan> so, not sure what I'll do.  Either go for a diagrams w/ o animation impl, or use the bottle code base, or port graphics-drawingcombinators to be a diagrams backend and the bottlelib
2012-06-08 01:51:12 UTC <luite> hehe
2012-06-08 01:51:13 UTC <mgsloan> yeah, it is a bit cluttered
2012-06-08 01:51:27 UTC <mgsloan> definitely could use some graphics designer attention :P
2012-06-08 01:51:29 UTC <luite> so many people working on similar things :p
2012-06-08 01:51:35 UTC <mgsloan> yeah!
2012-06-09 16:02:26 UTC <cheater_> hey luite, aren't you dutch?
2012-06-09 16:02:38 UTC <cheater_> i was wondering what "dr. ir." means
2012-06-09 16:06:13 UTC <luite> cheater_: dr. = PhD, ir. = ingenieur = engineer (means you have an MSc level engineering degree)
2012-06-09 16:06:30 UTC <cheater_> right
2012-06-09 16:06:36 UTC <cheater_> thx
2012-06-09 16:07:07 UTC <luite> in the netherlands it means that you have completed a 5-year engineering degree and then usually a 3-4 year PhD
2012-06-09 16:07:59 UTC <cheater_> sounds like a waste of time
2012-06-09 16:08:15 UTC <luite> why?
2012-06-09 16:08:45 UTC <cheater_> because when learning engineering, you usually learn a lot of applied stuff which you never end up using if you pursue a phd
2012-06-09 16:09:44 UTC <luite> well i guess it would usually be a more applied subject to phd in
2012-06-09 16:11:00 UTC <luite> dunno if it's the right name them, but it's more or less the same process, some years of research and you write a dissertation
2012-06-09 16:14:13 UTC <byorgey> funny, that may be the first time I've seen someone argue that learning *applied* stuff is a waste of time =)
2012-06-09 16:28:46 UTC <fryguybob> byorgey: You should go to more math conferences :D
2012-06-09 16:37:27 UTC <byorgey> fryguybob: I should!
2012-06-09 16:37:29 UTC <byorgey> fryguybob: any suggestions?
2012-06-09 16:38:00 UTC <byorgey> fryguybob: (also, what in particular prompted this observation?)
2012-06-09 16:42:01 UTC <fryguybob> Applied stuff being a waste of time :D
2012-06-09 16:42:12 UTC <byorgey> ohh, hahaha =)
2012-06-09 16:42:27 UTC <fryguybob> There really is only one general math meeting, the Joint Meetings.
2012-06-09 16:42:34 UTC <byorgey> right
2012-06-09 16:44:25 UTC <fryguybob> Well, there is also mathfest in the summer.
2012-06-09 16:45:43 UTC <byorgey> hmm, it's the same time as Hac Phi this year
2012-06-09 16:50:32 UTC <fryguybob> There is usually some confrence for specific fields that is every 4-6 years too if you have a particular field in mind.
2012-06-10 11:45:21 UTC <alpounet> http://www.gliffy.com/
2012-06-10 12:46:21 UTC <byorgey> nice
2012-06-10 12:46:51 UTC <byorgey> alpounet: btw, I'm excited about scoutess.  Looking forward to see what comes out of the GSOC.
2012-06-10 12:47:43 UTC <alpounet> i hope a caffeine-ful, tired but proud student
2012-06-10 12:48:01 UTC <alpounet> and a near-to-usable version of scoutess :P
2012-06-10 12:48:08 UTC <byorgey> sounds good =)
2012-06-10 12:49:15 UTC <alpounet> byorgey, and what's great is that it's like there are two GSoCs for us
2012-06-10 12:49:31 UTC <alpounet> 'cause the in-cabal sandboxed build thing is something we had in the Scoutess proposal initially :P
2012-06-10 12:50:22 UTC <byorgey> oh, cool, I didn't know about that one
2012-06-10 12:50:58 UTC <alpounet> so basically Jeremy Shaw and I will just gently wait the end of the summer and nearly have all of scoutess 0.1 done
2012-06-10 12:51:01 UTC <alpounet> =)
2012-06-10 12:51:48 UTC <byorgey> =)
2012-06-10 13:28:22 UTC <luite> what exactly does scoutess do?
2012-06-10 13:34:05 UTC <alpounet> for now, not much
2012-06-10 13:34:45 UTC <alpounet> but for what it WILL do, see: http://alpmestan.wordpress.com/2012/03/21/scoutess-continuous-integration-cabal-and-the-google-summer-of-code/
2012-06-10 13:35:14 UTC <alpounet> and here's the blog for the GSoC: http://projectscoutess.blogspot.co.uk/
2012-06-10 13:38:05 UTC <luite> looks useful. will it also support custom test runners (external programs) ?
2012-06-10 13:39:33 UTC <alpounet> for the first release we do not have planned anything for running test suites or similar stuffs, but we definitely have this in mind for later
2012-06-10 13:40:04 UTC <luite> how's progress so far?
2012-06-10 13:40:23 UTC <alpounet> but that means we will need these programs to provide a "unified" interface, for interpreting the results, which isn't the case, which means we'll have to write a bunch of "adapters" to support many of them...
2012-06-10 13:41:38 UTC <luite> users should also be able to add these adapters. i want some test stuff that runs in phantomjs or selenium
2012-06-10 13:46:53 UTC <alpounet> yeah
2012-06-10 13:47:09 UTC <alpounet> but at the beginning i'm not sure many people would be willing to write these adapters
2012-06-10 13:47:14 UTC <alpounet> anyway, we're not there yet
2012-06-10 13:47:29 UTC <alpounet> adding test suites handling etc would make scoutess a project management tool, or smth like that
2012-06-10 13:47:45 UTC <alpounet> we're really aiming at the empowered build-bot stage for now :P
2012-06-10 13:47:59 UTC <alpounet> and re. the progress, well, we have some fundamental stuffs implemented
2012-06-10 13:48:12 UTC <alpounet> we have a kind of "local hackage" to store the project's dependencies in
2012-06-10 13:48:27 UTC <alpounet> we also handle building the haddocks with cross-links etc between dependencies
2012-06-10 13:48:41 UTC <alpounet> the sandboxed build part is handled by another GSoC
2012-06-10 13:49:12 UTC <luite> is the local hackage similar to cabal-src ?
2012-06-10 13:49:18 UTC <alpounet> so our student is / will be working on dependency tracking, build report generation, etc
2012-06-10 13:49:29 UTC <alpounet> hmm i don't know, what's cabal-src?
2012-06-10 13:49:50 UTC <luite> cabal-src installs an sdist in a local package repository
2012-06-10 13:50:24 UTC <luite> useful if you have lots of packages in development, but don't want to run a local hackage server like yackage
2012-06-10 13:53:03 UTC <alpounet> well, my local hackage thing just stores a package index, justs like Hackage
2012-06-10 13:53:10 UTC <alpounet> and the packages, right next to it
2012-06-10 13:53:16 UTC <alpounet> it's basically hackage without the web interface
2012-06-10 13:53:16 UTC <luite> yeah that's what cabal-src does
2012-06-10 13:53:38 UTC <alpounet> and it's a valid local repo for cabal-install
2012-06-10 13:53:39 UTC <luite> it adds a local package index to the cabal config and adds packages to that
2012-06-10 13:53:55 UTC <alpounet> and scoutess will use that
2012-06-10 13:54:13 UTC <luite> right, so i guess we have two wheels now ;p
2012-06-10 14:31:44 UTC <luite> hm is os x so slow or do i have a terrible hard drive. does it really have to take 10 minutes to rm -r a build ghc source tree?
2012-06-10 14:32:19 UTC <luite> built
2012-06-10 15:35:01 UTC <luite> looks like it's OS X, the daemon for file change notification now uses 4GB RAM
2012-06-10 16:07:41 UTC <alpounet> uh
2012-06-10 17:09:01 UTC <cheater_> http://www.kickstarter.com/projects/ibdknox/light-table
2012-06-10 17:09:18 UTC <cheater_> luite: check out how they show the substituted values in the function, that's cool
2012-06-10 17:12:45 UTC <luite> yes
2012-06-10 17:43:16 UTC <cheater> luite: now let's have that for haskell
2012-06-10 18:50:14 UTC <tgeeky> cheater: one needs to carefully discern what elements light-table brings to the developer
2012-06-10 18:50:52 UTC <cheater> right, i believe the code substitution isn't actually light-table, but something it bundles, right?
2012-06-10 18:51:21 UTC <tgeeky> dunno, actually. I've seen the videos, and I'm a little jealous of the fundraising
2012-06-10 18:51:34 UTC <tgeeky> and I *totally* agree we've lost sight of advancing IDEs and such
2012-06-10 18:52:17 UTC <tgeeky> but it's important to distinguish what is pretty and what is useful (and what is both)
2012-06-10 18:54:03 UTC <tgeeky> but for instance, the light-table takes advantage of "code blocks" if you want to call it that
2012-06-10 18:54:18 UTC <tgeeky> it doesn't use files as units of code, it uses blocks (or functions)
2012-06-10 18:57:41 UTC <cheater> hmmm. http://www.wholetomato.com/
2012-06-10 18:58:02 UTC <cheater> tgeeky yeah it does, that's a nice idea imo
2012-06-10 18:58:18 UTC <cheater> but i do feel it would be useful to e.g. be able to experiment with different haskell code.
2012-06-10 18:58:48 UTC <cheater> let's say you have a function foo, which calls functions, possibly also foo.
2012-06-10 18:59:13 UTC <cheater> you could give it a parameter, and see how it unrolls, and inline all the recursive calls and calls to other functions
2012-06-10 18:59:38 UTC <cheater> and then look at how and when the function changes when you pass a different parameter, possibly using diff
2012-06-10 19:09:31 UTC <tgeeky> yep.
2012-06-10 19:09:57 UTC <tgeeky> I think (and I don't know if mgsloan would agree) that such functionality will come about when we replace haskell's modules with something else
2012-06-10 19:12:08 UTC <tgeeky> one thing that I believe will help, will be changing the way we Haskell does modules (or changing the way we implement it, at least). For example, imagine a transformation that takes a Cabal package, gets each source file, and splits out each function into a seperate module.
2012-06-10 19:12:28 UTC <tgeeky> obviously, you'll need to duplicate a ton of import/export list stuff
2012-06-10 19:12:35 UTC <tgeeky> and then add a ton more on top of it
2012-06-10 19:13:08 UTC <tgeeky> but let's ignore those difficulties.
2012-06-10 19:13:13 UTC <luite> hmm
2012-06-10 19:13:46 UTC <tgeeky> now, each file has -- a huge import block and export list, and a module with exactly one function
2012-06-10 19:14:01 UTC <tgeeky> split this file into two parts (the import/export list, and the function)
2012-06-10 19:14:07 UTC <tgeeky> now hash both seperatey
2012-06-10 19:15:00 UTC <tgeeky> (ignoring the very specific import/exports that we created to make every function a module), then we have a hash representing the environment of the function, and a hash of the function itself
2012-06-10 19:17:05 UTC <tgeeky> I assume many, if not nearly all, of the environment hashes would coincide, which you can use to reduce storage. And then *in addition to* having the hashes for files, you have hashes for each function in the file
2012-06-10 19:17:30 UTC <tgeeky> once you're there, it's trivial to track changes in functions via diff
2012-06-10 19:17:44 UTC <cheater> hey luite
2012-06-10 19:17:47 UTC <cheater> i just had this idea
2012-06-10 19:18:00 UTC <cheater> it seems like some cool graphics and code can be done in wolfgang
2012-06-10 19:18:29 UTC <cheater> it would be cool if there were a js lib, so that i could have a div with haskell code or whatever in it, and it would immediately get translated to a "workbook" panel
2012-06-10 19:18:30 UTC <tgeeky> cheater: this is an old and not perfectly well thought out idea, but it might be attemptable soon
2012-06-10 19:18:43 UTC <cheater> well what i mean is
2012-06-10 19:18:57 UTC <cheater> being able to easily embed wolfgang "objects" in e.g. my blog
2012-06-10 19:20:06 UTC <luite> yeah that has been on the list for a while (not surprising since the whole thing grew out of me wanting to add some tryhaskell-like thing to my blog)
2012-06-10 19:20:24 UTC <cheater> yeah but like
2012-06-10 19:20:36 UTC <cheater> just for being able to embed a cool graph into my blog
2012-06-10 19:20:44 UTC <cheater> without actual workbook functionality
2012-06-10 19:20:51 UTC <cheater> just, you know, give me a graph here and now.
2012-06-10 19:21:02 UTC <luite> yes, that's exactly what i mean
2012-06-10 19:21:11 UTC <luite> ok, it's not quite tryhaskell like
2012-06-10 19:21:29 UTC <luite> but the idea is that the code can be hidden by default and you just get the result
2012-06-10 19:21:56 UTC <luite> since the blog i had in mind was mostly a math blog, not haskell, so i'd include (possibly interactive) graphics and plots
2012-06-10 19:28:08 UTC <cheater> right yes
2012-06-10 19:35:46 UTC <byorgey> ACTION likes that idea a lot =)
2012-06-10 19:35:49 UTC <luite> but tbh i haven't made much progress on wolfgang recently, and haven't really been enjoying programming recently anymore, even with diversions like ghcjs... dunno if i should continue
2012-06-10 19:40:10 UTC <byorgey> luite: I totally understand about getting burnt out recently... but it would be really sad if wolfgang just died.  I say that not to pressure you but to wonder if there's a way you can get others involved, or hand it off to someone else... some way of moving the project forward even if you don't personally feel like working on it right now
2012-06-10 19:40:54 UTC <byorgey> working on big projects is always more fun in collaboration with others, even though it can also be more difficult in some ways
2012-06-10 19:41:01 UTC <luite> yeah i still like the project
2012-06-10 19:41:56 UTC <alpounet> you can also take a few weeks off this and enjoy doing some other stuffs, and then get back to it when you feel like it
2012-06-10 19:44:19 UTC <luite> alpounet: hmm, dunno, i've already taken lots of weeks off... you might have noticed that i have lots of progress in some weeks, but almost none in many others. often i still try to work on it, but get nothing done, which stresses me out, a lot...
2012-06-10 19:44:40 UTC <alpounet> yeah
2012-06-10 19:44:41 UTC <luite> same thing tended to happen to commercial programming projects, only with more stress
2012-06-10 19:44:44 UTC <alpounet> i've known this
2012-06-10 19:45:04 UTC <alpounet> for example last summer, i haven't written a single line of haskell, except when occasionally helping people on #haskell
2012-06-10 19:45:38 UTC <alpounet> i've been out pretty much all summer (except when i was working for a summer job), partying, visiting cool places, etc.
2012-06-10 19:45:45 UTC <luite> so often i don't even know if i want to continue programming at all, it always ends like this after a while.... only problem is that i don't really have other skills
2012-06-10 19:45:56 UTC <alpounet> when i mean "off", i actually mean "off", like, far
2012-06-10 19:46:16 UTC <alpounet> maybe you're really just pressuring yourself too much?
2012-06-10 19:47:28 UTC <luite> i'm not sure, i don't think that's it...
2012-06-10 19:48:32 UTC <cheater> luite bear in mind that if you get burned out even more it'll be so bad you won't even be able to hand over the project to anyone
2012-06-10 19:49:31 UTC <byorgey> luite: are there times when you have enjoyed programming?
2012-06-10 19:49:53 UTC <byorgey> or is it always just a slog?
2012-06-10 19:50:44 UTC <luite> alpounet: even if the things i need to do are totally reasonable, and there's enough time, i get this
2012-06-10 19:51:10 UTC <alpounet> luite, yeah, i have had that exact feeling
2012-06-10 19:51:18 UTC <alpounet> that's one of the reasons i never studied C-S :)
2012-06-10 19:51:30 UTC <alpounet> i saw maths as more challenging, more unknown, more exciting
2012-06-10 19:51:39 UTC <alpounet> and wanted to keep C-S as something i'd do when i felt like it
2012-06-10 19:52:23 UTC <luite> byorgey: dunno, there must be a reason that i'm stil doing it, and that i've even learned languages without them being required for courses (or for a job)
2012-06-10 19:52:32 UTC <cheater> i have had the exact same problems you described.
2012-06-10 19:52:35 UTC <cheater> then i haven't.
2012-06-10 19:52:42 UTC <cheater> then i have again. then i haven't
2012-06-10 19:53:09 UTC <cheater> what gave me the "haven't" parts was working out every day and eating healthily
2012-06-10 19:54:33 UTC <luite> cheater: hm, i'm not sure what you mean by "have" and "haven't" here
2012-06-10 19:54:40 UTC <cheater> and sleeping healthily
2012-06-10 19:54:45 UTC <cheater> ok
2012-06-10 19:55:01 UTC <cheater> for a longer time, i have had the problems you describe
2012-06-10 19:55:15 UTC <cheater> then, for a long time, i have not had those problems (that is when i was going to the gym regularly)
2012-06-10 19:55:24 UTC <cheater> then, i stopped going to the gym and started having problems again
2012-06-10 19:55:36 UTC <cheater> then, i started going to the gym regularly again and stopped having those problems
2012-06-10 19:55:49 UTC <cheater> it's directly connected from what i see
2012-06-10 19:56:04 UTC <luite> oh i don't go to the gym, but there doesn't seem to be such a clear correlation between exercise and this for me
2012-06-10 19:56:23 UTC <alpounet> exercise release "happiness" chemicals
2012-06-10 19:56:25 UTC <alpounet> you feel better
2012-06-10 19:56:35 UTC <cheater> not only that but it burns through the toxins in your body
2012-06-10 19:56:37 UTC <alpounet> that's the only justification isee
2012-06-10 19:56:40 UTC <cheater> which make you depressed
2012-06-10 19:56:48 UTC <cheater> it helps with circulation
2012-06-10 19:56:50 UTC <ClaudiusMaximus> regular sleep / food / getting out of the house => me more productive/happy/healthy;  also having just the right amount of external pressure: too much and i burn out in a puddle of stress; too little and i get existential crisis of meaninglessness
2012-06-10 19:56:51 UTC <alpounet> but that's hell of a good one
2012-06-10 19:56:53 UTC <cheater> and cardio generally
2012-06-10 19:57:03 UTC <cheater> cardio is very very important for feeling good
2012-06-10 19:57:06 UTC <cheater> like you wouldn't believe
2012-06-10 19:57:19 UTC <cheater> it's the top cause i felt depressed all the time
2012-06-10 19:57:21 UTC <cheater> bad cardio
2012-06-10 19:57:47 UTC <cheater> the nice thing is luite
2012-06-10 19:57:56 UTC <cheater> if you start going today and really push yourself
2012-06-10 19:58:01 UTC <luite> cheater: tbh i'm not terribly unhappy or anything... i'm mostly unhappy because i can't get things done
2012-06-10 19:58:04 UTC <cheater> you'll be top fit in 3 months
2012-06-10 19:58:19 UTC <cheater> luite, what you describe is depression
2012-06-10 19:58:25 UTC <alpounet> luite, tl;dr: take more care of yourself, of having fun, etc, stop pressing yourself, and you should be fine :)
2012-06-10 19:58:26 UTC <cheater> even if you feel you aren't unhappy, it still is
2012-06-10 19:58:51 UTC <cheater> i couldn't figure it out but when i took a look at my life in this way it really started making sense
2012-06-10 19:59:12 UTC <cheater> depression doesn't necessarily have to surface as unhappiness
2012-06-10 19:59:38 UTC <cheater> it can show up as moodiness, feeling distracted, add, not being able to focus, "writer's block", burnout
2012-06-10 20:00:30 UTC <cheater> it can show up as being hyper, or longing for social interaction (here are two examples of stuff where street smarts say it's not depression)
2012-06-10 20:02:31 UTC <luite> cheater: i know that exercise is good, but really, the correlation is far less strong for me than for you. a year ago (before winter) i did a lot of ski training 3 times a week (doesn't have terribly much to do with skiing, you just spend time on fitness machines first and then you ski on some conveyor belt to train techique and legs)
2012-06-10 20:02:55 UTC <luite> and then usually 1 to 2 times biking
2012-06-10 20:03:11 UTC <luite> but the difference wasn't that big in this respect
2012-06-10 20:04:26 UTC <cheater> maybe you weren't performing at high enough output level?
2012-06-10 20:04:33 UTC <cheater> i really push myself when i go to the gym
2012-06-10 20:04:48 UTC <cheater> also muscle training is an important part
2012-06-10 20:05:21 UTC <luite> i guess skiing is mostly stamina, not pure strength
2012-06-10 20:05:42 UTC <cheater> yeah, maybe i worded it wrong
2012-06-10 20:05:58 UTC <cheater> what i meant was that, yeah, probably different power output and therefore metabolism changes
2012-06-10 20:06:17 UTC <cheater> if anything, working out also gave me a new space to hang out in
2012-06-10 20:06:19 UTC <cheater> which helps
2012-06-10 20:06:25 UTC <cheater> and it's relaxing
2012-06-10 20:10:45 UTC <cheater> and i guess it gives me a reason to get up every day
2012-06-11 06:28:17 UTC <cheater> hi
2012-06-11 10:27:28 UTC <cheater_> luite: let's both install http://trypair.com/
2012-06-11 11:38:55 UTC <byorgey> hahaha
2012-06-11 11:39:15 UTC <byorgey> what exactly is "thumbkiss"?
2012-06-11 11:39:18 UTC <byorgey> maybe I don't want to know.
2012-06-11 12:53:51 UTC <luite> cheater_: hmm, maybe not...
2012-06-11 12:56:45 UTC <luite> looks like it doesn't work on my phone anyoway
2012-06-11 12:56:49 UTC <luite> anyway
2012-06-12 13:21:13 UTC <luite_> byorgey: i think i'm going to send this sample to shapr, to let him and apfelmus play with it to make defaulting work. do you have any ideas? http://hpaste.org/69852
2012-06-12 13:24:33 UTC <luite_> i still don't know a way to improve it with the Display class, but perhaps a different definition might help? (i have no idea how it would be done then)
2012-06-12 13:25:40 UTC <byorgey> yeah, this is a problem with any DSL like diagrams that has type-class-polymorphic results
2012-06-12 13:26:07 UTC <byorgey> I don't really know of a good solution.  It would be nice if you could declare a default for Diagram SVG R2 like that, but I don't think it works (?)
2012-06-12 13:26:23 UTC <luite_> nope it doesn't
2012-06-12 13:26:41 UTC <luite_> and it wouldn't be extensible either
2012-06-12 13:28:45 UTC <luite_> i was just checking again, maybe you learned some new approach since the discussion on apfelmus' blog :)
2012-06-12 13:29:08 UTC <luite_> so far the only thing i know that works is my ghc api hack
2012-06-12 13:29:54 UTC <byorgey> yeah, I don't know anything better than giving a type signature
2012-06-12 13:30:18 UTC <byorgey> I guess you could also make an identity function with a monomorphic type, and apply that instead of giving a type signature
2012-06-12 13:30:23 UTC <byorgey> but that's just a cosmetic difference.
2012-06-12 13:31:45 UTC <byorgey> blargh, I keep getting all these emails from Wolfram, and I want to unsubscribe.  But there is no unsubscribe link at the bottom of the emails.  so I clicked on "privacy policy".  In the privacy policy it has a link to unsubscribe.  So I clicked that and it said, "sorry, we couldn't process your request, please click on the unsubscribe link at the bottom of an email"
2012-06-12 13:32:13 UTC <byorgey> cue Internet rage
2012-06-12 14:05:28 UTC <luite_> i think i scared shapr away :(
2012-06-12 14:11:05 UTC <byorgey> luite_: nah =)
2012-06-12 14:12:46 UTC <luite_> :)
2012-06-12 14:28:16 UTC <cheater__> luite_
2012-06-12 14:28:22 UTC <cheater__> think elsevier is a good place to work at?
2012-06-12 14:32:47 UTC <luite_> uh dunno, they have a pretty bad reputation in academia...
2012-06-12 14:33:17 UTC <cheater__> yeah i keep on hearing that
2012-06-12 14:33:19 UTC <luite_> not because of the quality of their journals but because of the licensing
2012-06-12 14:33:25 UTC <cheater__> yeah
2012-06-12 14:33:25 UTC <cheater__> !
2012-06-12 14:33:32 UTC <cheater__> so i went for a job interview today
2012-06-12 14:33:45 UTC <cheater__> completely different part of the holding, they have nothing to do with the paper guys
2012-06-12 14:33:50 UTC <cheater__> and i pitched to them
2012-06-12 14:34:02 UTC <cheater__> "let's make github for scientific papers"
2012-06-12 14:34:15 UTC <cheater__> they ate it
2012-06-12 14:34:37 UTC <luite_> how'd they make make money from that?
2012-06-12 14:34:41 UTC <luite_> -make
2012-06-12 14:35:00 UTC <cheater__> there's a business model in everything
2012-06-12 14:36:27 UTC <byorgey> no way would I ever use a github for scientific papers if it were hosted by Elsevier.
2012-06-12 14:36:36 UTC <byorgey> though it sounds like a cool idea otherwise.
2012-06-12 14:36:50 UTC <cheater__> even if the licensing is completely different and up to you?
2012-06-12 14:36:59 UTC <byorgey> yes.
2012-06-12 14:37:03 UTC <cheater__> even if you can take your data at any time?
2012-06-12 14:37:33 UTC <byorgey> yes, it would have nothing to do with the specifics of the actual service, but just because I do not want to support Elsevier.
2012-06-12 14:37:59 UTC <luite_> cheater__: would it just be for collaborating on papers before publication, or would the repository actually be publication (with perhaps tags to mark peer reviews and new revisions to correct mistakes?)
2012-06-12 14:38:15 UTC <cheater__> luite_: i'm thinking it would be nice to be able to get a rendered paper.
2012-06-12 14:38:18 UTC <byorgey> cheater__: see http://thecostofknowledge.com/
2012-06-12 14:38:46 UTC <cheater__> byorgey: what if you were supporting a change that could undermine the bad things you're talking about?
2012-06-12 14:39:14 UTC <cheater__> what if it were a "you shouted at us, we listened" kind of deal?
2012-06-12 14:39:20 UTC <byorgey> cheater__: if it really looked to me like it were going to effect change, then I would consider it.
2012-06-12 14:39:48 UTC <cheater__> byorgey: bear in mind the paper people are in california, and even the german satellite of that is completely elsewhere
2012-06-12 14:39:51 UTC <byorgey> but simply creating such a service but not changing their journal subscription practices etc. would not cut it
2012-06-12 14:40:03 UTC <cheater__> the people here are basically book salesmen trying to stop their company from dying in freefall
2012-06-12 14:40:30 UTC <cheater__> byorgey: what if the service included a completely different model for journals, too?
2012-06-12 14:41:00 UTC <cheater__> collaborative platform for writing papers and citation management, with the ability to build journals ad-hoc
2012-06-12 14:41:54 UTC <byorgey> cheater__: I don't think you understand.  I simply do not want to support a company that I believe is acting against my interests.  It does not matter whether it is a really large company and some parts of it are great and unrelated to the other parts.  It is still the same company, and anything that benefits one part of it benefits the whole.
2012-06-12 14:42:19 UTC <cheater__> mhm
2012-06-12 14:42:20 UTC <byorgey> cheater__: that service sounds fantastic.
2012-06-12 14:42:22 UTC <cheater__> that's a good point
2012-06-12 14:42:45 UTC <byorgey> so I hope someone else builds it.
2012-06-12 14:42:46 UTC <luite_> cheater__: hmm, i dunno what you're proposing. how would it be different from github with a commit hook that automatically converts the paper to pdf (or html)?
2012-06-12 14:43:40 UTC <cheater__> github does not have such a commit hook.
2012-06-12 14:43:49 UTC <byorgey> luite_: could certainly see the benefit of features specifically supporting processes like peer review and publishing electronic journals
2012-06-12 14:43:51 UTC <cheater__> seriously though? once you get into it the thing starts looking very very different
2012-06-12 14:43:58 UTC <byorgey> which would go beyond simply hosting repositories.
2012-06-12 14:44:36 UTC <cheater__> what he said
2012-06-12 14:44:38 UTC <luite_> byorgey: right
2012-06-12 14:45:07 UTC <luite_> cheater__: you can add service hooks to repositories
2012-06-12 14:46:23 UTC <luite_> perhaps it can be built on top of github with the api
2012-06-12 14:47:04 UTC <cheater__> right
2012-06-12 14:47:56 UTC <byorgey> I think I'd rather see something not tied to github or any particular repo hosting site
2012-06-12 14:48:04 UTC <cheater__> yeah
2012-06-12 14:48:31 UTC <cheater__> i think so too. living in someone else's house is no good idea.
2012-06-12 14:48:56 UTC <byorgey> but you could imagine having a list of "supported" version control systems + hosting sites with good integration
2012-06-12 14:49:03 UTC <byorgey> or something like that
2012-06-12 14:49:50 UTC <cheater__> nah that would be too complex
2012-06-12 14:49:57 UTC <cheater__> you want to go there, and start using straight away
2012-06-12 14:50:29 UTC <luite_> cheater__: maybe not, but github already has a lot of collaboration tools built in, commenting on changes, pull reqs and all.
2012-06-12 14:50:40 UTC <byorgey> sure, so maybe you could easily get set up with github as a default or something
2012-06-12 14:51:36 UTC <byorgey> I think there is actually some interesting "social engineering" to be done here too.  In many academic disciplines people do not even know about version control.
2012-06-12 14:51:46 UTC <byorgey> they just use dropbox, or email drafts of a paper back and forth.
2012-06-12 14:52:15 UTC <byorgey> so coming up with something that makes the transition to real version control easy and appealing would be critical.
2012-06-12 14:52:22 UTC <cheater__> yeah
2012-06-12 14:52:37 UTC <luite_> with github you can edit the latex file on the web and it adds a new revision :p
2012-06-12 14:52:52 UTC <luite_> ok, that's another assumption, that they use latex
2012-06-12 14:53:29 UTC <byorgey> hehe, I think that is true in a much larger proportion of scientific disciplines
2012-06-12 14:53:36 UTC <byorgey> (than version control)
2012-06-12 14:53:54 UTC <cheater__> :)
2012-06-12 14:54:05 UTC <luite_> yeah that's probably right
2012-06-12 14:55:17 UTC <luite_> git may be too complex, something like a wiki might be easier. you usually don't really need forks, only merges when edits happen simultaneously
2012-06-12 14:55:31 UTC <cheater__> byorgey: btw, have you signed the petition?
2012-06-12 14:55:37 UTC <byorgey> cheater__: yes
2012-06-12 14:55:44 UTC <cheater__> byorgey: cool. i think i should too.
2012-06-12 14:56:03 UTC <byorgey> luite_: right
2012-06-12 14:57:10 UTC <cheater__> right luite
2012-06-12 15:10:45 UTC <luite_> some workflow that could be easy enough to sell: have central location for paper, create own working copy to work on the paper, web based interface to resolve merge conflicts when publishing back to central one
2012-06-12 15:11:00 UTC <luite_> where there's an implicit working copy revision every time the user hits save
2012-06-12 15:11:49 UTC <luite_> apple does autosave and keeps some history, but i find it confusing...
2012-06-12 15:12:20 UTC <luite_> but maybe if microsoft also starts doing that, people get more used to that that saving manually
2012-06-12 15:16:42 UTC <luite_> doesn't google docs or the online office version already support something like this?
2012-06-12 15:19:48 UTC <tgeeky> luite_: office since 2003 has autosaved on ~ 1 min intervals
2012-06-12 15:20:15 UTC <luite_> tgeeky: yeah but that doesn't overwrite the original file
2012-06-12 15:20:17 UTC <luite_> jsut a temp one
2012-06-12 15:20:27 UTC <tgeeky> true enough
2012-06-12 15:20:46 UTC <luite_> tgeeky: but actually i meant the "create working copy" -> merge, workflow
2012-06-12 15:21:07 UTC <tgeeky> for haskell files, for example?
2012-06-12 15:21:18 UTC <luite_> no for documents
2012-06-12 15:21:39 UTC <tgeeky> ACTION hasn't read this whole convo
2012-06-12 15:21:40 UTC <tgeeky> one sec
2012-06-12 15:22:16 UTC <luite_> basically the svn model, but with local revisions
2012-06-12 15:24:13 UTC <tgeeky> that seems similar to saving a seperate revision (ala Office) but reversed -- the real file is the latest, but elsewhere we'll save some history
2012-06-12 15:24:28 UTC <tgeeky> or is that wrong?
2012-06-12 15:26:16 UTC <luite_> hmm, not sure what you mean. the central file has linear history. working copies have forked from the central file at some point, and from then on have a linear history. a new central revision is made when a working copy is published (a 3-way merge is then done)
2012-06-12 15:29:34 UTC <luite_> anyone already ordered the new high res macbook? :p
2012-06-12 15:29:52 UTC <luite_> pdfs with computer modern probably look awesome at 2880x1800 pixels
2012-06-12 15:33:02 UTC <luite_> oh that's annoying, both ram and ssd are soldered to the mainboard, that makes the whole thing a lot less appealing...
2012-06-12 15:58:11 UTC <fryguybob> One problem with latex, academics and version control is they typically do not write line diff friendly stuff.
2012-06-12 16:06:39 UTC <luite_> that might be fixable to some extent by using format-specialised differs
2012-06-12 16:10:20 UTC <fryguybob> luite_: Yeah.  The tools are generally oriented around lines though when you get to things like code review and blame.
2012-06-12 16:10:51 UTC <fryguybob> Banning wordwrap could fix things :D.
2012-06-12 16:15:30 UTC <fryguybob> ACTION also bans word, and tabs.
2012-06-12 16:22:29 UTC <luite_> you can probably easily blame with character ranges instead of lines
2012-06-12 17:23:20 UTC <luite> meh why don't all GHC datatypes have a Data instance
2012-06-12 19:05:30 UTC <tgeeky_> luite: because those instance Typable definitions look scary? :O
2012-06-12 19:08:26 UTC <luite> how does deriving instance Data for a GADT work?
2012-06-12 19:23:05 UTC <tgeeky_> dunno
2012-06-12 19:32:50 UTC <luite> http://www.haskell.org/ghc/docs/latest/html/libraries/ghc/CmmNode.html#t:CmmNode <- this is the type that i'm having trouble with deriving a Data instance for
2012-06-12 19:40:14 UTC <byorgey> luite: is it giving you an error?
2012-06-12 19:41:51 UTC <luite> yeah http://hpaste.org/69861
2012-06-12 19:44:05 UTC <luite> gr somone is dossing my server with hundreds of simultaneous pop3 logins
2012-06-12 19:52:06 UTC <tgeeky_> oh
2012-06-12 19:52:09 UTC <tgeeky_> that's related
2012-06-12 19:54:27 UTC <luite> yeah should be up again now
2012-06-12 19:57:11 UTC <tgeeky_> mgsloan: wee!
2012-06-12 19:57:41 UTC <mgsloan> !eew
2012-06-12 19:58:50 UTC <tgeeky_> mgsloan: think you could easily alter pointless-plumbers so that I can use multiple character symbols for some of the things?
2012-06-12 19:59:44 UTC <mgsloan> definitely
2012-06-12 20:00:08 UTC <mgsloan> but then, of course, you'll need to use them as regular functions or `infix`
2012-06-12 20:00:21 UTC <tgeeky_> hm?
2012-06-12 20:00:47 UTC <tgeeky_> i still want them to be infix things, but I want wrappers
2012-06-12 20:01:02 UTC <tgeeky_> where you have, for instance, *, I might want "|*|"
2012-06-12 20:02:50 UTC <mgsloan> ah, sure!
2012-06-12 20:03:23 UTC <tgeeky_> you going to be around for a while?
2012-06-12 20:03:26 UTC <mgsloan> could either modify plumbers, or have something that renamed the declartions it outputs
2012-06-12 20:03:30 UTC <mgsloan> unfortunately not
2012-06-12 20:03:37 UTC <luite> byorgey: any idea?
2012-06-12 20:04:08 UTC <mgsloan> tgeeky_: at this http://developer.amd.com/afds/pages/default.aspx yesterday/today/tomorrow
2012-06-12 20:04:19 UTC <mgsloan> just got up; bout to get breakfast and head out to it
2012-06-12 20:04:40 UTC <tgeeky_> hmm.. must not be in the US if you just got up
2012-06-12 20:04:51 UTC <tgeeky_> bellvue, WA?
2012-06-12 20:04:51 UTC <mgsloan> it is
2012-06-12 20:05:01 UTC <mgsloan> I just didn't want to see the keynote
2012-06-12 20:05:12 UTC <byorgey> mgsloan: congrats on graduating =)
2012-06-12 20:05:14 UTC <mgsloan> I'll miss the first session, which kinda sucks
2012-06-12 20:05:19 UTC <mgsloan> byorgey: thanks!!
2012-06-12 20:05:21 UTC <byorgey> luite: eek
2012-06-12 20:06:05 UTC <tgeeky_> byorgey: is there a name for a tupled' environment space?
2012-06-12 20:06:07 UTC <tgeeky_> like instead of
2012-06-12 20:06:14 UTC <byorgey> luite: looks like the deriving mechanism is trying its best but can't actually cope with that type
2012-06-12 20:06:29 UTC <tgeeky_> instance Applicative ((->) (r,g,b)) where
2012-06-12 20:06:40 UTC <byorgey> no idea whether it's a fundamental limitation or just a bug.
2012-06-12 20:06:46 UTC <tgeeky_> like that, instead of ((->) env)
2012-06-12 20:06:49 UTC <mgsloan> well, I'm out, ttyalll
2012-06-12 20:06:53 UTC <tgeeky_> mgsloan: bye
2012-06-12 20:06:57 UTC <byorgey> tgeeky_: not that I know of
2012-06-12 20:07:37 UTC <luite> tgeeky_: does hdiff work for you again?
2012-06-12 20:07:42 UTC <tgeeky_> luite: yep, thanks
2012-06-12 20:08:18 UTC <luite> k, looks like it was just a single IP in dubai that did this
2012-06-12 20:20:43 UTC <tgeeky> byorgey: http://compass2.di.unipi.it/TR/Files/TR-08-15.pdf.gz  <-- can you peek at page 102..105 (94..97 in the margins)
2012-06-12 20:21:19 UTC <byorgey> tgeeky: not right now, sorry
2012-06-12 20:21:25 UTC <tgeeky> byorgey: ok
2012-06-12 20:21:27 UTC <byorgey> I can take a look later
2012-06-12 20:22:05 UTC <tgeeky> byorgey: just ping me when you have a few minutes and I'll re-link
2012-06-13 13:11:33 UTC <byorgey> tgeeky: so what exactly did you want me to look at?  I have the link... "A term-graph syntax for algebras over multisets"
2012-06-13 16:25:15 UTC <tgeeky_> byorgey: the second to last page (where the formulas for multirelations are listed)
2012-06-13 16:25:41 UTC <tgeeky_> byorgey: that paper was the last (very small) paper in a small journal, so I wanted to know if it smells like BS
2012-06-14 22:34:02 UTC <tgeeky> byorgey: hilo!
2012-06-15 12:38:01 UTC <byorgey> tgeeky: I dunno, doesn't smell like BS to me
2012-06-15 12:38:20 UTC <byorgey> though I really don't know much of anything about its particular subject
2012-06-15 14:26:38 UTC <tgeeky> byorgey: you at least implemented multisets once :O
2012-06-15 14:27:00 UTC <tgeeky> byorgey: but I was going to ask you to check my homework (in #haskell-in-depth I already asked generally)
2012-06-15 14:42:08 UTC <byorgey> tgeeky: yeah, the point of norm2 appears to be to get a 'Map' as the outermost constructor
2012-06-15 14:42:14 UTC <byorgey> as you note, your norm2 doesn't do that
2012-06-15 14:45:34 UTC <tgeeky> byorgey: hehe. There is something fishy going on with these definitions here. And in general, it seems to me, with pointfree programming.
2012-06-15 14:46:24 UTC <tgeeky> It seems to me that tupling (or "Pair" in this case) seems to be part of the internals of both interfaces to applicative.
2012-06-15 14:46:36 UTC <tgeeky> I think at this point I should just get in touch with Hinze and hope he'll respond to strangers
2012-06-15 14:49:34 UTC <tgeeky> byorgey: what I mean to say specifically, is that the Pair tycon is the opposite of the App tycon, except for tupling.
2012-06-15 14:49:43 UTC <tgeeky> But if you were working uncurried, then they would be the same
2012-06-15 14:50:29 UTC <tgeeky> well, they would be opposite, but App would take a tuple instead of a functor
2012-06-15 14:51:55 UTC <tgeeky> byorgey: also, I was surprised to note the definitions in GADT.hs of minus1, zero, and one
2012-06-15 14:54:24 UTC <byorgey> there is definitely an intimate connection between application and tupling.
2012-06-15 14:59:23 UTC <byorgey> but I am not familiar enough with the details of that paper to comment further.
2012-06-15 14:59:33 UTC <tgeeky> some of this is very general
2012-06-15 14:59:44 UTC <tgeeky> i have been learning pointfree syntax recently
2012-06-15 15:01:57 UTC <byorgey> I don't understand what you mean by pointfree "syntax"
2012-06-15 15:02:06 UTC <tgeeky> they are semantics, I suppose?
2012-06-15 15:02:08 UTC <tgeeky> pointfree style :O
2012-06-15 15:02:21 UTC <byorgey> yes, style is what I would say =)
2012-06-15 15:02:24 UTC <tgeeky> hehe
2012-06-15 15:02:29 UTC <tgeeky> damn you precise people
2012-06-15 15:02:30 UTC <byorgey> I just wasn't sure if you meant anything specific by syntax
2012-06-15 15:02:52 UTC <byorgey> I wasn't being pedantic, I wanted to be sure I understood what you meant =)
2012-06-15 15:03:08 UTC <tgeeky> I know. But you are (usually) precise and I am (usually) not
2012-06-15 15:03:08 UTC <fryguybob> Actually...
2012-06-15 15:03:11 UTC <tgeeky> at least when it comes to programming
2012-06-15 15:03:28 UTC <byorgey> being precise tends to help when programming =)
2012-06-15 15:04:02 UTC <byorgey> fryguybob: ?
2012-06-15 15:04:25 UTC <fryguybob> Was considering being pedantic about how you were or were not being pedantic :D.
2012-06-15 15:04:36 UTC <tgeeky> byorgey: so, in this file, you see many terms like "id >< fst"
2012-06-15 15:04:41 UTC <tgeeky> http://hackage.haskell.org/packages/archive/pointless-haskell/0.0.8/doc/html/src/Generics-Pointless-Combinators.html
2012-06-15 15:04:50 UTC <byorgey> fryguybob: hahaha, fair enough =)
2012-06-15 15:05:23 UTC <tgeeky> I think it's pretty damn important after being around you guys for 2 years to note the difference between style/syntax/semantics
2012-06-15 15:05:31 UTC <tgeeky> and style is the only one which isn't precise
2012-06-15 15:06:05 UTC <tgeeky> byorgey: anyway, what I did was pull all of those terms out, and make them explicit (replacing >< by _X_)
2012-06-15 15:06:15 UTC <tgeeky> https://github.com/d-day/relation/blob/master/include/pointfree-style/pointless-haskell-0.0.8/src/Generics/Pointless/Combinators.hs#L195
2012-06-15 15:06:34 UTC <tgeeky> so the map is *always* stored in the left hand size of the tuple
2012-06-15 15:06:57 UTC <tgeeky> except where I have added apI, which is supposed to be appInverse
2012-06-15 15:07:04 UTC <tgeeky> where it's stored in the right hand side* of the tuple
2012-06-15 15:07:42 UTC <tgeeky> I *think*, but haven't verified, that this corresponds to the Opfunctor
2012-06-15 15:08:09 UTC <byorgey> I am lost.
2012-06-15 15:08:26 UTC <tgeeky> class Opfunctor f where  opmap :: (b -> a) -> (f a -> f b)
2012-06-15 15:09:41 UTC <tgeeky> byorgey: app in this file, Combinators.hs, is:   app (f,x) = f x
2012-06-15 15:09:44 UTC <byorgey> I was lost before that.  You keep using pronouns and referents like "those terms", "the map", "the tuple", "this", and I have no idea what any of them are referring to.
2012-06-15 15:09:59 UTC <tgeeky> oh, ok, I'll slow down mightily.
2012-06-15 15:12:35 UTC <tgeeky> byorgey: in Combinators.hs  .  There are many expressions in this file of the form:   blah >< blah .  Some of them involve inr and inl, which I have ignored. Otherwise, all of the expressions in this file that use the infix product combinator, I took them each one (say, (id >< app)), replaced it with a toplevel function (say, idf_X_app), to see what they were actually doing
2012-06-15 15:12:57 UTC <tgeeky> in particular, to look at their types
2012-06-15 15:13:03 UTC <byorgey> ok.
2012-06-15 15:13:41 UTC <tgeeky> I observed that all of the expressions that were maps, were always stored in the 'fst' slot of the tuple
2012-06-15 15:14:10 UTC <byorgey> what do you mean by an expression that is a map?
2012-06-15 15:14:16 UTC <tgeeky> it has a type with an arrow in it
2012-06-15 15:14:33 UTC <tgeeky> app_X_idf:  ( (a -> d, a) , r )
2012-06-15 15:14:35 UTC <byorgey> oh, ok
2012-06-15 15:14:49 UTC <byorgey> but that file has things like app_X_app
2012-06-15 15:15:02 UTC <tgeeky> yep, but the arrows are still in the first tuple
2012-06-15 15:15:07 UTC <tgeeky> app_X_app :: ( (a -> d, a) , (a' -> r,a') )
2012-06-15 15:15:20 UTC <byorgey> uh, it also has idf_X_apI
2012-06-15 15:15:22 UTC <tgeeky> yep
2012-06-15 15:15:24 UTC <tgeeky> I added that
2012-06-15 15:15:32 UTC <tgeeky> the original file never used "apI" anywhere
2012-06-15 15:15:37 UTC <byorgey> I see.
2012-06-15 15:15:56 UTC <tgeeky> the point is, we never seem to store the "map" term in the second slot of the tuple
2012-06-15 15:16:01 UTC <byorgey> Yeah, I guess because function application has the function on the left and the argument on the right
2012-06-15 15:16:17 UTC <tgeeky> I don't see why that is anything more than a convention
2012-06-15 15:16:20 UTC <byorgey> so if you want to apply a function you first tuple up function and argument like  (a -> b, a), then call app
2012-06-15 15:16:30 UTC <byorgey> it isn't.
2012-06-15 15:16:44 UTC <byorgey> but I'm saying I think that's why the functions are always in the first component of the tuples.
2012-06-15 15:16:59 UTC <byorgey> if we wrote function application like   x f  then it would probably be the other way around.
2012-06-15 15:17:26 UTC <byorgey> (incidentally, I think we really ought to write function application like that, but it's about 400 years too late now)
2012-06-15 15:17:34 UTC <tgeeky> hehe :)
2012-06-15 15:17:45 UTC <byorgey> damn Euler
2012-06-15 15:19:18 UTC <byorgey> so, where were we?
2012-06-15 15:19:26 UTC <byorgey> sorry for the rant ;)
2012-06-15 15:21:31 UTC <tgeeky> the first thing I thought was, why don't we use a 3-tuple instead of a tuple, because then we have a position in the tuple which we could consider special (the center position)
2012-06-15 15:21:59 UTC <tgeeky> which I still think might be interesting
2012-06-15 15:22:11 UTC <tgeeky> but a simpler case is where you have the aforementioned opmap
2012-06-15 15:22:29 UTC <tgeeky> if you have the normal fmap and the opmap for a category (ie, you have two functors, but not necessarily a bifunctor)
2012-06-15 15:22:54 UTC <tgeeky> I don't see how you could store that in a 2-tuple
2012-06-15 15:23:01 UTC <tgeeky> s/store/represent/
2012-06-15 15:23:23 UTC <tgeeky> darn it. I have to go pick up my mother from work. She's sick. :(
2012-06-15 15:23:34 UTC <byorgey> You can have nested 2-tuples which simulate any n-tuple
2012-06-15 15:23:40 UTC <byorgey> oh, sorry to hear that =(
2012-06-15 15:23:43 UTC <byorgey> hope she feels better
2012-06-15 15:23:49 UTC <tgeeky> Yes, I hear that argument a lot
2012-06-15 15:23:57 UTC <tgeeky> ie, nested Eithers etc
2012-06-15 15:24:13 UTC <tgeeky> the thing that frustrates me is that nesting is apropri used for associativity hijinks
2012-06-15 15:25:28 UTC <tgeeky> things like swap:  (a,b) -> (b,a) ... work fine
2012-06-15 15:25:36 UTC <tgeeky> but: swap2 (a,b,c) -> ???
2012-06-15 15:25:52 UTC <tgeeky> but if you start with:
2012-06-15 15:26:05 UTC <tgeeky> swap (left,center,right) -> (right,center,left)
2012-06-15 15:26:36 UTC <tgeeky> then higher order versions might be clearer
2012-06-15 15:27:06 UTC <tgeeky> swapL (l, (lc, c, lr), lr) -> (lc, (l, c, lr), lr)
2012-06-15 15:27:14 UTC <byorgey> I don't really follow.  swap2 (a,b,c) is simply ambiguous, I'm not sure what you mean by "unclear"
2012-06-15 15:27:27 UTC <byorgey> I don't see why swapL is an important operation.
2012-06-15 15:27:28 UTC <tgeeky> byorgey: right, it is ambiguious. That is what I meant by unclear
2012-06-15 15:28:52 UTC <byorgey> so why is that a problem?  if you want  (a,b,c) -> (b,a,c)  (but represented as  (a,(b,c)) -> (b,(a,c)) )  you have to say something like  assocR . (swap >< id) . assocL
2012-06-15 15:29:08 UTC <byorgey> annoying in practice, but there's nothing wrong with the theory
2012-06-15 15:30:11 UTC <byorgey> I am still not really sure what we are fundamentally discussing =)
2012-06-15 15:30:44 UTC <tgeeky> this happens often, primarily because I'm never sure :)
2012-06-15 15:31:32 UTC <byorgey> hehe
2012-06-15 15:31:43 UTC <byorgey> well, I hope I can help you figure it out
2012-06-15 15:31:50 UTC <byorgey> in that case
2012-06-15 15:31:53 UTC <tgeeky> I think that, when we go from pointfree style with applicative cominbators (like app), to pointfree style with applicative combinators *over* an invertible domain (where you have fmap and opmap), then you need to be using a 3-tuple instead of a 2-tuple)
2012-06-15 15:32:11 UTC <tgeeky> because you may need to, at some point, use both functors as well as a piece of data to operate on
2012-06-15 15:32:30 UTC <byorgey> but why do you need to use both functors *at once*?
2012-06-15 15:32:50 UTC <tgeeky> because I'm lying and they aren't really functors, they are components of a relation
2012-06-15 15:33:21 UTC <tgeeky> or, I'm not lying and you want to run a computation that proves the two functors are truly inverses?
2012-06-15 15:34:37 UTC <tgeeky> it's probably best to just try implemeting these things instead of talking about them
2012-06-15 15:35:05 UTC <byorgey> you lost me again.  Though in a broad sense I think I see what you are getting at, and I can see the appeal of having 3-tuples for representing a piece of data along with two "transformations" which have some sort of symmetry
2012-06-15 15:35:13 UTC <byorgey> but yeah, I'd have to see a lot more details.
2012-06-15 15:36:32 UTC <byorgey> anyway, I'd better be off to school
2012-06-15 15:36:50 UTC <tgeeky> ok, I'll talk to Hinze and i'll get back to you. thanks for listening :)
2012-06-15 15:36:57 UTC <byorgey> hehe, ok, sure =)
2012-06-15 21:39:36 UTC <byorgey> I am now the maintainer of BlogLiterately
2012-06-15 21:40:11 UTC <byorgey> this is all part of my (not-so-secret) plot to be able to just write markdown with inline diagrams code, and have it automatically turned into a blog post =)
2012-06-15 21:43:34 UTC <tgeeky> woohoo
2012-06-15 21:44:04 UTC <tgeeky> though a google search for that term finds othing
2012-06-15 21:44:07 UTC <tgeeky> nothing useful
2012-06-15 21:44:28 UTC <byorgey> tgeeky: http://hackage.haskell.org/package/BlogLiterately
2012-06-15 21:50:56 UTC <mgsloan> noice!!  Have you seen ActiveHs?
2012-06-15 21:51:26 UTC <mgsloan> I suppose the thing with active is it's designed to be somewhat more interactive
2012-06-15 21:51:43 UTC <tgeeky> yeah, it's not static
2012-06-15 21:56:14 UTC <mgsloan> So, a few days ago colah posted his "Haskell-Re-Syntaxed" ideas.  Not sure if I entirely like everything he suggests, but certainly cool ideas.  These ideas reminded me about my beliefs regarding how superclass defaults should work, and gave me a good place to write them up!
2012-06-15 21:56:28 UTC <mgsloan> so, what do y'all think of this: https://github.com/mgsloan/Haskell-Re-Syntaxed/blob/master/instanceTemplates.md
2012-06-15 21:56:29 UTC <mgsloan> ?
2012-06-15 21:56:45 UTC <tgeeky> mgsloan: link to orignal post?
2012-06-15 21:57:08 UTC <mgsloan> his original post is just "brainstorm.hs" in that repo
2012-06-15 21:57:35 UTC <tgeeky> ok
2012-06-15 21:57:55 UTC <tgeeky> oh wait. so...
2012-06-15 21:58:08 UTC <fryguybob> byorgey: Nice! Are you going to have diagrams blocks marked separately then or somehow infered?
2012-06-15 21:58:14 UTC <tgeeky> when you write = instance Monad m
2012-06-15 21:59:34 UTC <tgeeky> mgsloan: so the thing in the top box (monadReturnBind) can't be valid haskell syntax, right?
2012-06-15 22:05:45 UTC <tgeeky> mgsloan: also, as for the example at the bottom "Not avoiding TH"
2012-06-15 22:06:15 UTC <tgeeky> mgsloan: that looks *exactly* like idiomatic lifting
2012-06-15 22:06:52 UTC <tgeeky> mgsloan: and I think it's going to look oddly similar to: http://hackage.haskell.org/package/applicative-numbers
2012-06-15 22:08:11 UTC <tgeeky> mgsloan: come to think of it, so does the topmost example.
2012-06-15 22:10:22 UTC <tgeeky> mgsloan: also, the list of constraints is very similar to those in the paper I've been working on this week (Hinze's Lifting Operators and Laws)
2012-06-15 22:10:57 UTC <tgeeky> namely, arguments can't appear more than once, the arguments on a LHS and RHS are the same (and in the same order)
2012-06-15 22:11:14 UTC <tgeeky> the third constraint (superclass graph gives a connected acyclic graph) I don't know about
2012-06-15 22:11:48 UTC <tgeeky> very interesting proposal
2012-06-15 22:17:58 UTC <byorgey> fryguybob: marked separately, so the user has control over which code blocks are displayed and which are turned into diagrams
2012-06-15 22:20:24 UTC <byorgey> mgsloan: looks cool!
2012-06-15 22:23:33 UTC <mgsloan> byorgey: thanks!
2012-06-15 22:24:05 UTC <mgsloan> My camera just arrived in the mail :D, so haven't had time to process your comments yet, tgeeky
2012-06-15 22:24:46 UTC <byorgey> mgsloan: I think you ought to talk about the relationship with ConstraintKinds
2012-06-15 22:24:47 UTC <luite> cool what camera?
2012-06-15 22:24:48 UTC <byorgey> it seems quite related
2012-06-15 22:25:04 UTC <mgsloan> luite: T3i
2012-06-15 22:25:49 UTC <luite> ah cool
2012-06-15 22:26:01 UTC <luite> that's a lot newer than mine :p
2012-06-15 22:26:04 UTC <mgsloan> I considered getting a Nikon D5100, as I like the controls better
2012-06-15 22:26:19 UTC <mgsloan> but the T3i can do proper video
2012-06-15 22:26:34 UTC <luite> i have a 20D
2012-06-15 22:27:05 UTC <luite> which can't do video at all :)
2012-06-15 22:28:12 UTC <byorgey> ACTION has a Nikon D50
2012-06-15 22:28:19 UTC <mgsloan> byorgey: definitely!  I actually started sketching the implementation for this stuff, and ran into the strangeness that (Read a, Show a) is not equal to (Show a, Read a)
2012-06-15 22:28:23 UTC <mgsloan> which seems bizarre
2012-06-15 22:28:38 UTC <byorgey> oh, really?  what do you mean "not equal to"?
2012-06-15 22:29:03 UTC <fryguybob> ACTION Canon for life...
2012-06-15 22:29:07 UTC <mgsloan> in other words, tuples have order
2012-06-15 22:29:14 UTC <tgeeky> even constraint tuples
2012-06-15 22:29:17 UTC <byorgey> oh. well, sure =)
2012-06-15 22:29:33 UTC <byorgey> but I assume you mean it has some practical consequences
2012-06-15 22:30:04 UTC <luite> mgsloan: canon still has some catching up to do with sony for high end sensors atm (and thus nikon, since they use sony sensors), canon has off-chip a/d conversion, sony on-chip, so the readout noise is higher, but that difference is only visible at low iso
2012-06-15 22:30:29 UTC <byorgey> afk, back later
2012-06-15 22:30:43 UTC <mgsloan> yeah, it's quite unintuitive that the type-system wouldn't reflect the normal properties of constraint equivalences
2012-06-15 22:31:07 UTC <mgsloan> I was trying to have an operation that would add two instance templates together and give you a compound one
2012-06-15 22:31:20 UTC <luite> basically if you have a high contrast photo at iso 100 or 200, and you have very dark shadows, you can post process the shadows with nikon camera's to make them lighter, more than with canon (you get more noise n the result)
2012-06-15 22:31:55 UTC <mgsloan> luite: Ah, interesting!  Yeah, I was pretty aware of this tradeoff when making my decisions.  Initially it was D3100 vs D5100
2012-06-15 22:32:11 UTC <mgsloan> D5100 can shoot in the dark :O
2012-06-15 22:32:22 UTC <mgsloan> (it has that high of ISO + low noise)
2012-06-15 22:32:30 UTC <luite> right, i wasn't sure if this was also in the lower end nikon cams, but the 5D3 and D800 are pretty often compared in this
2012-06-15 22:32:59 UTC <luite> the difference is far less with high iso because the signal is amplified first
2012-06-15 22:33:05 UTC <mgsloan> yup.  The 5D being used by movie people, and the D800 being used by rich photographers that want full frame :)
2012-06-15 22:33:11 UTC <luite> so this readout noise disappears in the capture noise
2012-06-15 22:33:25 UTC <mgsloan> ACTION 's photography teacher last quarter got an 800D
2012-06-15 22:33:29 UTC <luite> right, the 5D3 still is the better movie camera since it doesn't do line skipping
2012-06-15 22:34:05 UTC <luite> although the D800 has direct hdmi out so in theory it can capture more detail, but due to line skipping it has more aliasing
2012-06-15 22:34:35 UTC <luite> oh you have a teacher! :p
2012-06-15 22:34:40 UTC <mgsloan> ahhh, interesting!
2012-06-15 22:34:53 UTC <mgsloan> yeah, "Science and Art of Photography" - it was a pretty fantastic class
2012-06-15 22:35:09 UTC <luite> i think the D800 does 4:4:4 hdmi out, the 5D3 4:2:2
2012-06-15 22:35:19 UTC <mgsloan> Here are my assignments: https://plus.google.com/photos/103514231937116060754/albums
2012-06-15 22:35:56 UTC <luite> ah cool
2012-06-15 22:36:03 UTC <luite> i've just been doing it for hobby
2012-06-15 22:36:39 UTC <luite> what's the science part? do you get lectures on optics? sensors? autofocus systems?
2012-06-15 22:37:22 UTC <mgsloan> yup, all of the above!
2012-06-15 22:37:44 UTC <luite> oh pretty fun
2012-06-15 22:38:00 UTC <mgsloan> why aberations happen, what they try to do about it. Stabilization systems, current technologies, potential future technologies, computational photography, etc
2012-06-15 22:38:14 UTC <luite> before i learned haskell i wanted to write photography software
2012-06-15 22:38:29 UTC <mgsloan> yeah, I'd never anticipated photography being a hobby,  but those assignments were a bunch of fun, so it's my newest hobby :)
2012-06-15 22:39:00 UTC <mgsloan> http://hemingway.cs.washington.edu/Photos%20from%20CSE/#/content/  <- at the top of the gallery menu is pics he took with the 800D at my graduation
2012-06-15 22:39:10 UTC <luite> open source stuff for interpolation, lens correction and modeling (with aberration correction :p ), denoising
2012-06-15 22:39:21 UTC <luite> but then i got distracted with haskell :p
2012-06-15 22:40:22 UTC <luite> oh that page doesn't seem to work here
2012-06-15 22:40:24 UTC <mgsloan> http://hemingway.cs.washington.edu/Photos%20from%20CSE/content/23-Graduation-2012/2-Program/20120609-_BRH0559.jpg  <- woo! receiving a miscellanious roll of paper
2012-06-15 22:40:28 UTC <luite> flash is not terribly reliable here
2012-06-15 22:40:47 UTC <luite> cool hat
2012-06-15 22:41:03 UTC <mgsloan> thanks! hah
2012-06-15 22:41:50 UTC <luite> at that resolution it could've been taken with an iphone just as well ;p
2012-06-15 22:42:45 UTC <mgsloan> true! But this couldn't have been: http://hemingway.cs.washington.edu/Photos%20from%20CSE/content/23-Graduation-2012/1-Preliminaries/20120609-_BRH0493.jpg
2012-06-15 22:43:33 UTC <luite> hm, 1200x801 pixels?
2012-06-15 22:44:19 UTC <mgsloan> hahaha, probably rounding error
2012-06-15 22:44:27 UTC <mgsloan> set the width and get the height proportionally
2012-06-15 22:48:14 UTC <luite> hmm, how did they explain pixels? :)
2012-06-15 22:49:47 UTC <mgsloan> pixels are buckets collecting the photon rain
2012-06-15 22:50:36 UTC <tgeeky> you can't stop a photon. you can't explain that!
2012-06-15 22:50:50 UTC <luite> hehe nah i mean in the digital image. many photography sites and introductions treat them as little squares, but when you get to interpolation or compression, squares don't make much sense
2012-06-15 22:51:26 UTC <luite> they have a sort of square/point duality :p
2012-06-15 22:51:29 UTC <mgsloan> tgeeky: but apparently electrons are content with being contained :)
2012-06-15 22:51:41 UTC <luite> since to measure and or display them, you cannot do so in a point
2012-06-15 22:52:03 UTC <fryguybob> pixels are sad values in an array waiting to be described as diagrams.
2012-06-15 22:52:22 UTC <tgeeky> lol
2012-06-15 22:53:18 UTC <mgsloan> luite: yeah, I'd treat them more as a convolution with a sampling distribution
2012-06-15 22:54:12 UTC <tgeeky> hm
2012-06-15 22:54:12 UTC <tgeeky> http://mathworld.wolfram.com/Convolution.html
2012-06-15 22:54:17 UTC <tgeeky> The convolution is sometimes also known by its German name, faltung ("folding").
2012-06-15 22:54:20 UTC <mgsloan> it gets even funkier when you consider that both the eye and cameras cannot sample multiple color response distributions from the same place
2012-06-15 22:54:20 UTC <tgeeky> I did not know that!
2012-06-15 22:55:27 UTC <luite> mgsloan: really? not as points once they're in the image? the way you measure them limits the frequence, but points are more correct if you consider what the usual resizing kernels like truncted sinc or bicubic do
2012-06-15 22:55:53 UTC <luite> mgsloan: some camera's can
2012-06-15 22:56:07 UTC <mgsloan> yeah, I guess if you use prisms to split to multiple CCDs
2012-06-15 22:56:12 UTC <luite> and some eyes too
2012-06-15 22:56:23 UTC <luite> yes, beamsplitters, but there are multilayered sensors
2012-06-15 22:56:28 UTC <mgsloan> but then you're reducing your exposure by a third
2012-06-15 22:56:38 UTC <mgsloan> oh yeah, that's true
2012-06-15 22:56:48 UTC <luite> and there are spiders with multilayered retinas
2012-06-15 22:56:53 UTC <luite> oh wait
2012-06-15 22:57:05 UTC <tgeeky> he didn't say human eye, but I'm pretty sure he meant it :)
2012-06-15 22:57:17 UTC <tgeeky> and I don't think you meant spider spiders, either :o
2012-06-15 22:57:36 UTC <luite> no that's wrong, at least i'm not sure that they can see multiple colors at different depths
2012-06-15 22:57:52 UTC <luite> they have a multilayer retina for non-stereoscopic depth perception
2012-06-15 22:58:28 UTC <luite> there are all kinds of cool eyes in nature :)
2012-06-15 22:59:42 UTC <tgeeky> mgsloan: http://en.wikipedia.org/wiki/Solar_Dynamics_Observatory <-- this particular light source did not suffer from the beam splitting :)
2012-06-15 22:59:47 UTC <mgsloan> the multi-layered sensor will compromise the inner layers, but I suppose that was already true when prioritizing green response
2012-06-15 23:00:23 UTC <mgsloan> tgeeky: hehe, true true
2012-06-15 23:01:00 UTC <luite> the middle layer is green in foveon sensors
2012-06-15 23:01:05 UTC <mgsloan> As long as we're talking optics, I was at the AMD dev conference the last few days.  One of the keynotes, by an MSR researcher a couple days ago, was _awesome_
2012-06-15 23:01:23 UTC <luite> since the penetration depth depends on the frequency of the photon
2012-06-15 23:01:41 UTC <luite> but it's probabilistic, the channel separation is kind of bad
2012-06-15 23:02:08 UTC <tgeeky> hehe, unlike most of the things we usually talk about, my response to these things is "oh, yeah, I know that."
2012-06-15 23:02:13 UTC <mgsloan> they've got a flat-ish lens that allows LEDs at the bottom to direct collimated light, which allows them to direct light through an LCD directly to your eye
2012-06-15 23:03:02 UTC <mgsloan> which allows them to do multi-person 3d displays
2012-06-15 23:06:38 UTC <luite> mgsloan: did the teacher think that correcting for transverse aberration would be a thing of the past?
2012-06-15 23:07:18 UTC <mgsloan> naah, he actually embraces abberations by finding and using all kinds of interesting old lenses
2012-06-15 23:07:48 UTC <mgsloan> there're always tradeoffs.  It's one of those problems like map projections: solve the problem one place, and it pops out another
2012-06-15 23:08:14 UTC <mgsloan> he did mention that they're starting to make spherical lenses, though
2012-06-15 23:08:36 UTC <luite> no i mean, in old lenses, all aberrations had to be corrected, but in new lenses, you can design them so that you just minimize axial aberration, and have software just correct the lateral distortion of all channels separately
2012-06-15 23:09:00 UTC <mgsloan> oooh, so you embrace chromatic aberation?
2012-06-15 23:09:41 UTC <luite> well, nto just chromatic... a fisheye lens has a lot of transverse (lateral) distortion
2012-06-15 23:09:48 UTC <luite> but you can recover it fine in software
2012-06-15 23:09:55 UTC <mgsloan> ah gotcha
2012-06-15 23:10:08 UTC <mgsloan> I bought a $20 fisheye :D
2012-06-15 23:10:16 UTC <luite> same for ca that doesn't shift the focus plane
2012-06-15 23:10:21 UTC <luite> = transverse ca
2012-06-15 23:11:03 UTC <luite> problem is i guess that the channels are not a single wavelength, so if lateral ca is too bad, you still get blurry channels
2012-06-15 23:11:56 UTC <luite> but it's interesting that you can now record in very high resolution with the sensor, have a lens that has lots of distortion, and get a perfectly rectilinear photograph in the end
2012-06-15 23:12:40 UTC <luite> i was just wondering if that would change the design of lenses a lot, in types of elements they use, and the whole combination of groups/elements
2012-06-15 23:14:34 UTC <mgsloan> unfortunately we didn't get /that/ deep into the subject, but yeah, I think it seems like they might actually get simpler as lens creation techniques get better
2012-06-15 23:14:59 UTC <mgsloan> (molding or fabricating instead of grinding)
2012-06-15 23:16:35 UTC <luite> did they mention diffractive optics?
2012-06-15 23:20:37 UTC <mgsloan> hm, I don't think so!
2012-06-15 23:20:57 UTC <mgsloan> unless you mean the fact that you use flint and crown glass for different things
2012-06-15 23:21:09 UTC <mgsloan> one to do the lens, and the other to correct for chromatic abberation
2012-06-15 23:21:40 UTC <luite> no i mean that they can use a refractive/diffractive doublet to correct aberration, canon has a few lenses that do that
2012-06-15 23:23:27 UTC <mgsloan> yeah, I think that's the same thing I'm talking about
2012-06-15 23:23:55 UTC <luite> really? achromatic doublets are really common, diffractice ones aren't
2012-06-15 23:24:22 UTC <mgsloan> ahh, yeah, then we probably didn't
2012-06-15 23:24:41 UTC <luite> hm, i can't immediately find information with google how exactly they work
2012-06-15 23:25:33 UTC <luite> http://www.radiantzemax.com/kb-en/Knowledgebase/How-to-Design-Diffractive-Optics-Using-the-Binary-2-surface <- this raytracing software can simulate them, and also things that come close and are actually economical to produce
2012-06-15 23:26:17 UTC <luite> at least i think that's it :)
2012-06-15 23:27:13 UTC <luite> it looks a bit like a fresnel lens
2012-06-15 23:29:48 UTC <mgsloan> it does!  Definitely mentioned fresnel lenses, but definitely didn't go into detail about these diffractive variants
2012-06-15 23:31:47 UTC <mgsloan> I'll bbl!
2012-06-16 03:54:50 UTC <tgeeky> mgsloan: hello sir
2012-06-16 03:54:59 UTC <mgsloan> 'lo!
2012-06-16 03:55:10 UTC <tgeeky> mgsloan: edwardk just released this: https://github.com/ekmett/bound
2012-06-16 03:55:15 UTC <tgeeky> which looks cool but I don't understand (as usual)
2012-06-16 03:56:26 UTC <mgsloan> it does look cool!
2012-06-16 03:56:46 UTC <tgeeky> but I want to be a sounding board for you work
2012-06-16 03:56:49 UTC <tgeeky> if you need one
2012-06-16 03:59:56 UTC <mgsloan> awesome!  I do need input and help!  I'm just now looking at your comments about the instance template stuff
2012-06-16 04:00:10 UTC <mgsloan> what do you mean by idiomatic lifting? idiom brackets?
2012-06-16 04:00:51 UTC <mgsloan> it also does look a lot like applicative-numbers, but that uses CPP, blech
2012-06-16 04:02:13 UTC <mgsloan> what's interesting to me about this is that it gives you most of the things that TH is used for (except reflecting on datatypes - but the newer reflection stuff does that alright - if strangely)
2012-06-16 04:03:05 UTC <mgsloan> but doing it in a way that Haskellers are acustomed to - no funkiness regarding scope - referential transparency of the value parameters to your instance templates
2012-06-16 04:05:45 UTC <tgeeky> so
2012-06-16 04:05:51 UTC <tgeeky> there's one thing that you have a hope of doing
2012-06-16 04:05:53 UTC <tgeeky> that they don't
2012-06-16 04:05:55 UTC <tgeeky> and it's pretty cool
2012-06-16 04:06:47 UTC <mgsloan> thanks!
2012-06-16 04:06:53 UTC <mgsloan> I find it to be remarkably simple
2012-06-16 04:06:53 UTC <tgeeky> hehe
2012-06-16 04:07:01 UTC <tgeeky> I was pausing cause I was looking up something
2012-06-16 04:07:08 UTC <tgeeky> http://hackage.haskell.org/package/ClassLaws-0.3.0.1
2012-06-16 04:07:21 UTC <tgeeky> since you are actually generating the instances
2012-06-16 04:07:50 UTC <tgeeky> you could actually include the laws (and quickcheck tests for them, supposedly -- I haven't looked through all this code)
2012-06-16 04:08:00 UTC <mgsloan> I feel like what happened is that people got wrapped up in the theory of it all, and somewhat missed the forest for the trees when it comes to default superclass instances
2012-06-16 04:08:17 UTC <tgeeky> well, there's a lot of historical raisins going on
2012-06-16 04:08:22 UTC <mgsloan> ooh, yeah!
2012-06-16 04:08:46 UTC <tgeeky> mgsloan: I think this could be profound (and provide the kind of advantage that you can point to and say -- see -- look what we can do here
2012-06-16 04:09:21 UTC <mgsloan> glad to hear :D
2012-06-16 04:09:29 UTC <tgeeky> mgsloan: and what I meant about idiomatic lifting, is my (crude, but improving daily) understanding of the lifting part of monads (the applicative part)
2012-06-16 04:10:32 UTC <tgeeky> mgsloan: well, there are dozens of places in Haskell code which says "it is the responsibility of the programmer to prove ___", but what you really want, is that the programmer has a chance of figuiring it out with assistance, not if he can prove it
2012-06-16 04:11:09 UTC <mgsloan> you know what the best part is?  It should be a nearly nonexistant amount of TH to implement this.  To give some sugar, things like laws, and handling checking that a minimal definition is given, maybe a little bit more
2012-06-16 04:12:07 UTC <tgeeky> I'm guessing TH itself can't write instances yet?
2012-06-16 04:12:26 UTC <mgsloan> oh, it totally can
2012-06-16 04:12:35 UTC <tgeeky> haha.
2012-06-16 04:12:47 UTC <tgeeky> what can't it do (still)? pragmas, fixity decls, and modules?
2012-06-16 04:13:07 UTC <mgsloan> (I take it you were joking :P) thing is wrapping it up in an interface in which your powers are restricted to writing instance templates
2012-06-16 04:13:34 UTC <mgsloan> yeah, can't do imports.  It also can't write or reify code using constraint kinds, which kinda sucks
2012-06-16 04:14:59 UTC <tgeeky> no, I'm not joking. My impresson of TH is based on the only good docs I've ever saw, which was the original docs
2012-06-16 04:15:44 UTC <tgeeky> mgsloan: here is the paper about the laws for idiomatic lifting http://www.cs.ox.ac.uk/ralf.hinze/Lifting.pdf
2012-06-16 04:17:55 UTC <tgeeky> here's my attempt so far at implementing what's in the paper: https://github.com/technogeeky/d-A/blob/master/src/Control/Applicative/I/GADT.hs
2012-06-16 04:18:56 UTC <tgeeky> the top stuff is weird naming for De Bruijn terms
2012-06-16 04:21:29 UTC <tgeeky> I don't see what I was talking about re: looking similar
2012-06-16 04:21:38 UTC <tgeeky> oh, I Know
2012-06-16 04:21:39 UTC <tgeeky> the types
2012-06-16 04:21:43 UTC <tgeeky> on the top of page 16
2012-06-16 04:22:10 UTC <tgeeky> mgsloan: which I have here: https://github.com/technogeeky/d-A/blob/master/src/Control/Applicative/I.hs
2012-06-16 04:22:10 UTC <mgsloan> Yeah, the TH docs aren't so great.  Here's a real gem of design and docs: "You may omit theÂ $(...)Â in a top-level declaration splice. Simply writing an expression (rather than a declaration) implies a splice. For example, you can write ..."
2012-06-16 04:22:11 UTC <mgsloan> "This abbreviation makes top-level declaration slices quieter and less intimidating."
2012-06-16 04:22:14 UTC <tgeeky> (in non-GADT format)
2012-06-16 04:22:27 UTC <tgeeky> that's what I thought looked similar
2012-06-16 04:23:45 UTC <tgeeky> mgsloan: I ias a weaker version of applicative (without k = pure (\x y -> x)
2012-06-16 04:23:50 UTC <tgeeky> s/ias/is/
2012-06-16 04:24:00 UTC <tgeeky> even though I have cheated here and left pure in
2012-06-16 04:24:17 UTC <tgeeky> the actual functions you would have access to (instead of return and ap)
2012-06-16 04:24:24 UTC <tgeeky> under *idiom homomorphism*
2012-06-16 04:24:50 UTC <tgeeky> is i (free), b (free) , possibly c and possibly s
2012-06-16 04:26:31 UTC <tgeeky> what the heck!
2012-06-16 04:26:36 UTC <tgeeky> you can just not use $()
2012-06-16 04:27:57 UTC <mgsloan> Cool beans! I can see why you were interested in ekmett's package - pretty relevant
2012-06-16 04:28:23 UTC <tgeeky> yeah, it looks like it may do the deB indices in a general way
2012-06-16 04:28:25 UTC <tgeeky> not that I understand it
2012-06-16 04:28:57 UTC <mgsloan> and yeah, totally relevant to instance templates, except that being the macro heretic that I am, I want to support even non idiomatic lifting
2012-06-16 04:29:13 UTC <tgeeky> well, this isn't just idiomatic lifting
2012-06-16 04:30:08 UTC <tgeeky> mgsloan: there is a paper about lifting (and lowering)
2012-06-16 04:30:11 UTC <tgeeky> that I bet
2012-06-16 04:30:16 UTC <tgeeky> you would both understand and profit from
2012-06-16 04:31:01 UTC <tgeeky> http://users.ugent.be/~tschrijv/Research/papers/monads_zippers_views.pdf
2012-06-16 04:31:27 UTC <tgeeky> that paper is in the "too powerful to use right now"
2012-06-16 04:31:29 UTC <tgeeky> stack
2012-06-16 04:32:05 UTC <mgsloan> hahaa, awesome
2012-06-16 04:32:23 UTC <mgsloan> "too powerful for all but the lambda gods"
2012-06-16 05:28:38 UTC <mgsloan> argh, really want to make this instance stuff happen, but gotta pack for texas!
2012-06-16 05:52:02 UTC <tgeeky> lol
2012-06-16 05:52:13 UTC <tgeeky> i love it when I am working on something, and then someone else just goes ahead and writes code for me
2012-06-16 05:52:17 UTC <tgeeky> http://hackage.haskell.org/package/set-monad-0.1.0.0
2012-06-16 05:53:38 UTC <tgeeky> though I only want the applicative/idiom instances, which I think might be invalid :o
2012-06-17 02:55:33 UTC <luite> buh can't sleep
2012-06-17 03:09:38 UTC <tgeeky> shower fixed yet?
2012-06-17 07:48:52 UTC <luite> tgeeky: yeah last week
2012-06-18 20:45:41 UTC <luite> hej shapr[!
2012-06-18 20:45:52 UTC <shapr[> oh hai luite!
2012-06-18 20:46:13 UTC <shapr[> byorgey: I don't yet know how to specify a backend for rendering, so reading docs.
2012-06-18 20:46:14 UTC <luite> yes you can append svg nodes directly to an xhtml document tree
2012-06-18 20:46:21 UTC <shapr[> diagrams does LOTS of nifty stuff!
2012-06-18 20:46:38 UTC <shapr[> luite: first I need to output the nodes... not sure how to generate them yet :-)
2012-06-18 20:49:03 UTC <byorgey> shapr[: you just import that backend and call renderDia
2012-06-18 20:49:17 UTC <byorgey> shapr[: some backends may also supply more specialized functions for rendering
2012-06-18 20:50:01 UTC <shapr[> Wow, a quick scan through diagrams is almost overwhelming.
2012-06-18 20:50:27 UTC <fryguybob> shapr[: Don't worry, there is a lot more we want to do :D
2012-06-18 20:50:42 UTC <luite> it's a pretty large lib now :)
2012-06-18 20:50:43 UTC <byorgey> shapr[: I'm not sorry. ;)
2012-06-18 20:50:51 UTC <shapr[> me neither :-)
2012-06-18 20:50:52 UTC <byorgey> shapr[: you do know about the documentation on the website?
2012-06-18 20:51:00 UTC <byorgey> e.g. http://projects.haskell.org/diagrams/manual/diagrams-manual.html
2012-06-18 20:51:15 UTC <shapr[> That's what's overwhelming me.
2012-06-18 20:51:21 UTC <byorgey> oh =)
2012-06-18 20:51:46 UTC <byorgey> at least it's better (I hope) than randomly poking through modules on Hackage trying to find things
2012-06-18 20:51:53 UTC <shapr[> yup
2012-06-18 20:52:07 UTC <shapr[> I thought I'd try to get a handle on how diagrams works before randomly trying to render SVG.
2012-06-18 20:52:23 UTC <shapr[> Apfelmus encourages me to think carefully before randomly trying to fix things :-)
2012-06-18 20:52:24 UTC <byorgey> shapr[: nah, don't bother =)
2012-06-18 20:52:27 UTC <fryguybob> shapr[: Oh, in that case, it works by magic.
2012-06-18 20:52:35 UTC <shapr[> haha
2012-06-18 20:53:28 UTC <byorgey> "thinking carefully" and "understanding the inner workings of a sophisticated four-year-old project" are quite different ;)
2012-06-18 20:53:54 UTC <shapr[> true that
2012-06-18 20:54:20 UTC <shapr[> defaultMain seems like it has the render magic.
2012-06-18 20:54:38 UTC <shapr[> Ok, I'll just call renderDia and see what I get.
2012-06-18 20:58:22 UTC <shapr[> byorgey: so, import Diagrams.Backend.SVG and then renderDia (circle 0.5 <> unitCircle) ?
2012-06-18 20:58:22 UTC <byorgey> defaultMain calls renderDia but packages it up inside a command-line interface etc.
2012-06-18 20:58:45 UTC <byorgey> shapr[: yes, that ought to work
2012-06-18 20:58:54 UTC <byorgey> shapr[: off the top of my head I don't know what type you will get back
2012-06-18 20:59:03 UTC <shapr[> It's a scary type error.
2012-06-18 20:59:05 UTC <luite> shapr[: renderDia SVG (SVGOptions "output.file" (Dims 200 200)) myDiagram
2012-06-18 20:59:17 UTC <luite> shapr[: this will give you a blaze-svg thing that you can render to a ByteString
2012-06-18 20:59:23 UTC <shapr[> oh?
2012-06-18 20:59:29 UTC <shapr[> ACTION is confused.
2012-06-18 20:59:45 UTC <byorgey> oh, hmm, the documentation for diagrams-svg is not very good
2012-06-18 20:59:57 UTC <byorgey> will have to work on improving that before the next release
2012-06-18 20:59:59 UTC <luite> the irc channel is better ;)
2012-06-18 21:00:27 UTC <shapr[> ACTION grumbles
2012-06-18 21:00:38 UTC <luite> it's easy to understand, you only need to know other diagrams backends first and understand type families ;)
2012-06-18 21:01:03 UTC <luite> shapr[: doesn't it work?
2012-06-18 21:01:08 UTC <shapr[> nope, I'm hacking on https://github.com/deepakjois/diagrams-svg/blob/master/examples/Explode.hs
2012-06-18 21:01:22 UTC <shapr[> I've commented out main and instead I have: bar = renderDia SVG (SVGOptions "output.file" (Dims 200 200)) example
2012-06-18 21:02:10 UTC <luite> yeah but you still can't just output bar then, you need to convert it to a ByteString
2012-06-18 21:02:14 UTC <byorgey> shapr[: renderDia is from here: http://hackage.haskell.org/packages/archive/diagrams-core/0.5.0.1/doc/html/Graphics-Rendering-Diagrams-Core.html#g:10
2012-06-18 21:02:24 UTC <shapr[> luite: oh
2012-06-18 21:02:39 UTC <byorgey> renderDia :: (InnerSpace v, OrderedField (Scalar v), Monoid' m) => b -> Options b v -> QDiagram b v m -> Result b v
2012-06-18 21:02:50 UTC <byorgey> so it's quite general and the type you get depends on the backend
2012-06-18 21:03:45 UTC <byorgey> for diagrams-svg it looks like you get  Text.Blaze.Svg11.Svg
2012-06-18 21:04:08 UTC <byorgey> I'm getting that from the 'instance Backend SVG R2' in https://github.com/deepakjois/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs
2012-06-18 21:04:09 UTC <luite> yeah that's a synonym for some internal blaze type
2012-06-18 21:05:17 UTC <byorgey> aha, from http://hackage.haskell.org/packages/archive/blaze-svg/0.3.3.0/doc/html/Text-Blaze-Svg.html
2012-06-18 21:05:28 UTC <byorgey> type Svg = Markup
2012-06-18 21:06:09 UTC <byorgey> so you can use functions from any of the Text.Blaze.Svg.Renderer.* modules to turn it into something else
2012-06-18 21:06:10 UTC <shapr[> ah, luite's code works now, but defaultMain still appears to be necessary for type inference?
2012-06-18 21:06:21 UTC <byorgey> simplest is probably http://hackage.haskell.org/packages/archive/blaze-svg/0.3.3.0/doc/html/Text-Blaze-Svg-Renderer-String.html
2012-06-18 21:06:27 UTC <luite> http://hpaste.org/70136
2012-06-18 21:06:52 UTC <luite> shapr[: that works, without defaultMain ^
2012-06-18 21:06:54 UTC <byorgey> shapr[: well, if you just have 'renderDia' by itself it won't know what backend to use
2012-06-18 21:06:59 UTC <shapr[> luite: w00t!
2012-06-18 21:07:00 UTC <byorgey> but you shouldn't need defaultMain
2012-06-18 21:07:16 UTC <shapr[> huh,now I don't
2012-06-18 21:07:24 UTC <luite> indeed through the String renderer from blaze-markup, which you probably shouldn't use in production
2012-06-18 21:07:39 UTC <shapr[> luite: What's better?
2012-06-18 21:07:45 UTC <luite> Text or ByteString
2012-06-18 21:08:08 UTC <luite> if you return the thing in a JSON reply, then Text is probably easiest
2012-06-18 21:08:10 UTC <byorgey> hmm, wait, actually, it should know what backend to use because of the SVG argument...
2012-06-18 21:08:30 UTC <byorgey> maybe something with the MR, I'm not sure.  I'd have to see an error message =)
2012-06-18 21:09:05 UTC <shapr[> ACTION looks for a really large piece of paper to mail to byorgey 
2012-06-18 21:09:11 UTC <shapr[> :-)
2012-06-18 21:09:19 UTC <byorgey> hehe =)
2012-06-18 21:11:43 UTC <luite> shapr[: keep in mind that if you have data.result in your xmlhttprequest result, it's a string, not an xml document, so you need to let jQuery parse it first, probably just something like report($(data.result)) instead of report(data.result)
2012-06-18 21:12:10 UTC <shapr[> huh, ok
2012-06-18 21:13:34 UTC <shapr[> ACTION rereads that a few times
2012-06-18 21:15:55 UTC <luite> shapr[: your prototype sends a json reply to the client, right? { "expr":"1+2", "result":"3" }
2012-06-18 21:16:00 UTC <shapr[> right
2012-06-18 21:16:23 UTC <shapr[> you're saying instead of return res.result, it should be return $(data.result) right?
2012-06-18 21:16:30 UTC <luite> shapr[: right, if the result is an svg, then { "expr":"circle 1", "result":"<?xml ...." }
2012-06-18 21:16:37 UTC <shapr[> That way jquery turns it into an actual svg value, yah?
2012-06-18 21:16:38 UTC <luite> so it just has the xml as a string
2012-06-18 21:16:48 UTC <shapr[> ok
2012-06-18 21:17:00 UTC <luite> so you need to first make it a dom tree instead of a string, that's easy with jquery, just wrap it in $(data.result)
2012-06-18 21:17:28 UTC <luite> but htis is the reason that i have an extra clientType field in the json
2012-06-18 21:17:50 UTC <luite> if it's a text reply then it shouldn't be parsed with $(), if it's xml then it hsould
2012-06-18 21:17:53 UTC <luite> should
2012-06-18 21:18:25 UTC <shapr[> that makes sense
2012-06-18 21:18:55 UTC <shapr[> though for my this prototype, I just want to get it to show up as inline svg at all :-)
2012-06-18 21:19:00 UTC <shapr[> at all any!
2012-06-18 21:19:03 UTC <shapr[> ACTION hops
2012-06-18 21:23:22 UTC <shapr[> ACTION dances furiously
2012-06-18 21:23:26 UTC <shapr[> IT WORKS!
2012-06-18 21:23:28 UTC <shapr[> ACTION boings
2012-06-18 21:23:38 UTC <luite> the whole prototype?
2012-06-18 21:23:57 UTC <shapr[> it's not very complicated
2012-06-18 21:24:04 UTC <byorgey> yayyyy!!
2012-06-18 21:24:11 UTC <shapr[> upon any successful code it returns the svg
2012-06-18 21:24:18 UTC <luite> ah, cool
2012-06-18 21:25:08 UTC <shapr[> ACTION takes screenshot
2012-06-18 21:25:42 UTC <shapr[> so now to make it diagrams-svg-specific, such that any working diagrams result will return the svg
2012-06-18 21:26:03 UTC <byorgey> pics or it didn't happen!
2012-06-18 21:26:34 UTC <luite> hehe good luck with that :p
2012-06-18 21:26:38 UTC <shapr[> byorgey: http://www.scannedinavian.com/~shae/svgdemo.png
2012-06-18 21:27:07 UTC <byorgey> nice!
2012-06-18 21:27:12 UTC <shapr[> ACTION dances cheerfully
2012-06-18 21:27:30 UTC <luite> shapr[: oh wait, you just mean that users should be able to enter their own diagrams?
2012-06-18 21:27:35 UTC <shapr[> right, only that
2012-06-18 21:27:44 UTC <luite> right, ok, i thought you meant the defaulting thing
2012-06-18 21:27:53 UTC <shapr[> Like > circle 0.5 <> unitCircle
2012-06-18 21:27:56 UTC <shapr[> should do what you expect
2012-06-18 21:28:06 UTC <luite> i guess you do mean the defaulting thing then
2012-06-18 21:28:25 UTC <shapr[> How so? I only want to return svg via blaze-svg, right?
2012-06-18 21:28:35 UTC <luite> oh, for every expression?
2012-06-18 21:28:46 UTC <shapr[> right, svg-only
2012-06-18 21:29:12 UTC <shapr[> If nothing else that'll give a trydiagrams.org ;-)
2012-06-18 21:29:17 UTC <luite> what you could do in a more general setting is this: for expression x, try to typecheck  x :: Diagram SVG R2
2012-06-18 21:29:32 UTC <luite> if it typechecks, then return svg, otherwise do what you always do
2012-06-18 21:29:39 UTC <byorgey> shapr[: oooh, trydiagrams.org would be fun =)
2012-06-18 21:30:21 UTC <shapr[> luite: oh that would be nice
2012-06-18 21:30:31 UTC <byorgey> shapr[: we thought about proposing a diagrams-related project for GSOC but didn't get around to it.  Maybe we should just steal you. ;)
2012-06-18 21:30:43 UTC <shapr[> hah
2012-06-18 21:31:03 UTC <luite> shapr[: that's more or less a hardcoded version of the Display/DisplayResult stuff, but it can get you nice results quickly
2012-06-18 21:31:36 UTC <luite> shapr[: hint has the bracket or brackets function to easily modify expressions for this
2012-06-18 21:31:42 UTC <shapr[> My GSoC project has two goals... 1. in-browser multi-user ghci+hpaste 2. rich content types for other purposes such as livecoding
2012-06-18 21:31:54 UTC <luite> brackets expr ++ " :: Diagrams SVG R2"
2012-06-18 21:31:59 UTC <luite> sometihng like that
2012-06-18 21:32:39 UTC <shapr[> oh, for easy type annotation?
2012-06-18 21:33:10 UTC <byorgey> shapr[: yah, I was joking.  Of course both goals stand to benefit the diagrams project already. =)
2012-06-18 21:33:36 UTC <luite> shapr[: for anything acutally, it just behaves like you  put brackets around the expression so you can concat them, or use them as function arguments
2012-06-18 21:33:40 UTC <shapr[> The way I see it, diagrams benefits my project too!
2012-06-18 21:34:03 UTC <luite> but it's a bit smarter than '(' ++ expr ++ ')'
2012-06-18 21:34:05 UTC <shapr[> And that's the whole idea behind GSoC, build up the community.... at least, that's how I see it.
2012-06-18 21:34:07 UTC <luite> err, " there
2012-06-18 21:34:16 UTC <shapr[> luite: interesting, I'll have to try it.
2012-06-18 22:51:43 UTC <tgeeky> luite: so, in my mind, 'hint' package is doing itself a big disservice by not updating its description
2012-06-18 22:52:00 UTC <tgeeky>  It is, esentially, a huge subset of the GHC API wrapped in a simpler API. Works with GHC 6.6.x and 6.8.x. <--
2012-06-18 22:52:21 UTC <tgeeky> "Works with GHC 6.10.x and 6.8.x (this version was not tested with GHC 6.6)." is what it says now.
2012-06-18 22:53:56 UTC <tgeeky> You could interpret that at least two ways: One, "these guys make a great effort to maintain backward compatability, going all the way back to 6.8!"   Or "This package was written for 6.8, and probably doesn't work well with the current GHC."
2012-06-18 22:54:29 UTC <tgeeky> and even though I have no idea about the latter (if it works well or not), it *is* because it was originally written for 6.8
2012-06-18 22:54:53 UTC <tgeeky> (because that description has been there since 2008!
2012-06-18 22:54:56 UTC <tgeeky> )
2012-06-18 22:55:05 UTC <tgeeky> </soapbox>
2012-06-18 23:00:34 UTC <tgeeky> luite: anyhoo, did you finally get some sleep?
2012-06-18 23:07:59 UTC <luite> yeah but still no progress with code
2012-06-18 23:08:11 UTC <tgeeky> hm. coder's block?
2012-06-18 23:08:33 UTC <luite> dunno, can't really concentrate in general
2012-06-18 23:09:24 UTC <byorgey> tgeeky: submit a patch!
2012-06-18 23:10:03 UTC <luite> i wouldn't really say huge subset though...
2012-06-18 23:10:32 UTC <luite> unless there are huger words for the whole api
2012-06-18 23:10:44 UTC <tgeeky> hehe
2012-06-18 23:10:55 UTC <tgeeky> yes, there is the problem of the wording generally (and the terseness)
2012-06-18 23:11:40 UTC <tgeeky> but it's a worse-er problem to mention versions (at all) in the description, unless it's done systematically (ie, a box which says:   [  prev v -> this version    * added new things here ]
2012-06-18 23:11:47 UTC <tgeeky> ie, a changelog
2012-06-18 23:13:53 UTC <tgeeky> byorgey: did you see this "codo" paper?
2012-06-19 00:30:02 UTC <luite> mgsloan: you bought a 600d, right?
2012-06-19 02:30:51 UTC <fryguybob> luite: I think that is what he said, T3i.
2012-06-19 20:15:08 UTC <luite> mgsloan: have you done some shooting with your 600D/T3i yet? how well does the live view work for focussing and framing, in particular for macro shots?
2012-06-19 20:17:34 UTC <mgsloan> hey luite!  I've done a bit of shooting.  The very first day I messed around with the $20 fisheye + macro a little bit (wasn't really trying to go for particularly good pictures, just playing), and here's the album from that: https://plus.google.com/photos/103514231937116060754/albums/5754488919060426353
2012-06-19 20:18:03 UTC <luite> ah cool
2012-06-19 20:19:17 UTC <mgsloan> I haven't used the live view for macro yet, but it is sometimes handy for framing.  Especially with outdoor shots (fast shutter speeds  --> less stability necessary: I feel like using the regular viewfinder is stabilizing)
2012-06-19 20:20:42 UTC <luite> my mother's camera broke recently (a simple canon compact with tiny flip out screen) and i was thinking of recommending a T3i as a replacement. she likes macro, shooting flowers in her garden etc, but doesn't know much about photography. the old camera didn't help because the tiny screen was terrible for judging focus, and the viewfinder was near useless
2012-06-19 20:22:17 UTC <luite> i'm trying to explain here the basics, and think that a T3i should help there (much highre res screen than the cheaper 1100D/XSi, flip out should help for macro), does that sound right?
2012-06-19 20:22:34 UTC <luite> or is autofocus not good enough with live view?
2012-06-19 20:24:54 UTC <luite> (my father already has some EF stuff, as do i, so a dslr other than canon doesn't make much sense, an alternative would be a good compact or ilc
2012-06-19 20:24:57 UTC <luite> )
2012-06-19 20:25:15 UTC <mgsloan> sounds reasonable to me!  I haven't tried autofocus in live view much - I kinda like manual focus even if it's somewhat pointless labor :D.  I guess it must use something fiddly like contrast optimization for live view AF
2012-06-19 20:25:25 UTC <luite> yeah it dos
2012-06-19 20:25:26 UTC <luite> does
2012-06-19 20:25:30 UTC <mgsloan> but I think it's probably pretty decent
2012-06-19 20:25:45 UTC <mgsloan> I'm surprised that there isn't a better algorithm than that
2012-06-19 20:25:46 UTC <luite> contrast detection isn't that bad actually if the focus error initially isn't too big
2012-06-19 20:26:17 UTC <luite> there is a better algorithm, the 650D/T4i has it, it uses special pixels on the sensor to get a ballpark focus, and then uses contrast detection to finetune
2012-06-19 20:27:12 UTC <luite> i guess it still can't beat phase detect for speed though
2012-06-19 20:27:38 UTC <mgsloan> It seems like doing something like "Detect things that look like they were convolved by gaussians (orso) --> compute parameters of distibution --> jump to appropriate focus"
2012-06-19 20:28:01 UTC <luite> gaussians?
2012-06-19 20:28:07 UTC <mgsloan> I guess the first step is too hard to generalize to all kinds of things you take pictures of
2012-06-19 20:28:17 UTC <luite> that's not quite the distribution you get from defocussing
2012-06-19 20:28:19 UTC <mgsloan> yeah, blur is kinda gaussian-ish right?
2012-06-19 20:28:37 UTC <luite> nah you get discs
2012-06-19 20:28:40 UTC <mgsloan> yeah, I suppose it is more uniform
2012-06-19 20:28:41 UTC <mgsloan> yeah
2012-06-19 20:29:12 UTC <mgsloan> https://plus.google.com/photos/103514231937116060754/albums/5729530144123618993/5731890464495811490
2012-06-19 20:29:17 UTC <mgsloan> I shoulda known that :P
2012-06-19 20:29:18 UTC <luite> only with ideal lenses they're really uniform though
2012-06-19 20:29:35 UTC <luite> ah that looks quite nice :)
2012-06-19 20:32:02 UTC <mgsloan> thanks!  At the time I was just playing around but looking back, it's a fairly cool pic
2012-06-19 20:32:56 UTC <mgsloan> I've been taking a bunch of pictures of the University of Texas campus
2012-06-19 20:32:58 UTC <luite> looks like you have another lens with a 6 blade aperture? :)
2012-06-19 20:33:04 UTC <mgsloan> haven't uploaded them yet
2012-06-19 20:33:36 UTC <mgsloan> ahh, that was back when I was borrowing equipment :D
2012-06-19 20:33:53 UTC <luite> what lenses doe oyu have for the T3i?
2012-06-19 20:33:53 UTC <mgsloan> before I decided that owning some would probably be good
2012-06-19 20:34:04 UTC <luite> i read that the 18-55 IS USM isn't bad at all
2012-06-19 20:34:28 UTC <mgsloan> just the 18-50mm and the cheap fisheye extension thingie.  Yeah, it's a good lens!
2012-06-19 20:35:05 UTC <luite> not high end of course, but for a kit lens... I was looking at Sony NEX as an alternative, but their lenses look a bit more questionable
2012-06-19 20:36:17 UTC <mgsloan> I've heard that kit lenses can sometimes be the best for the particular camera, but I actually don't really know what makes a good lens
2012-06-19 20:36:55 UTC <luite> dunno, i think that the 50/1.2L will be much sharper :)
2012-06-19 20:37:45 UTC <mgsloan> fixed lens? Yeah, my photography friends recommended getting one of those
2012-06-19 20:38:25 UTC <luite> right, a prime that costs ten times as much as the standard zoom (at least it looks like it's around 1400 euro), so it should be :)
2012-06-19 20:38:57 UTC <mgsloan> holy cow
2012-06-19 20:39:00 UTC <luite> but i think a not too heavy standard range zoom makes the most sense for most people
2012-06-19 20:39:07 UTC <mgsloan> I'll probably get the $100 one
2012-06-19 20:39:26 UTC <luite> the 50/1.8? yeah that's a nice lens for the money
2012-06-19 20:39:51 UTC <luite> a bit less sharp according to reviews, and a bit less solidly built of course :)
2012-06-19 20:41:07 UTC <luite> the MP-E 65mm is also a fun lens
2012-06-19 20:41:14 UTC <mgsloan> yup!  Is the sharpness difference due to the aperture size difference?
2012-06-19 20:41:20 UTC <luite> i played with it for a while at a photo store
2012-06-19 20:41:32 UTC <luite> at some quiet hour :)
2012-06-19 20:42:09 UTC <luite> you can get 5x magnification with it, don't think any other lens can match that
2012-06-19 20:42:25 UTC <luite> (other than true microscopes or diy things)
2012-06-19 20:43:05 UTC <luite> primes (fixed focal length lenses) are usually a bit sharper, i wouldn't say it's due to the max aperture
2012-06-19 20:43:57 UTC <mgsloan> When I was using a borrowed proper macro, I think it was an EF 100mm f/2.8 Macro
2012-06-19 20:44:04 UTC <luite> sometimes they're even quite bad at max (i have the 50/1.4, which has blurry corners at 1.4, fortunately most of that is already fixed at /2.0, and if you shoot at such wide aperture, you don't often care about corners anyway)
2012-06-19 20:44:10 UTC <luite> oh cool, I have that one myself
2012-06-19 20:44:26 UTC <luite> the USM version, there used to be a non-USM one with noisy AF motor
2012-06-19 20:44:37 UTC <luite> that only goes to 1x magnification though
2012-06-19 20:45:03 UTC <luite> that's where the MP-E 65mm starts
2012-06-19 20:45:03 UTC <mgsloan> yeah, it's a lot of fun!  I'm going to have to delay dropping such chunks of cash on macro for a bit, though, lol
2012-06-19 20:45:09 UTC <mgsloan> maybe.. :)
2012-06-19 20:45:36 UTC <luite> but the MP-E is too expensive for its (to me at least) limited use
2012-06-19 20:47:22 UTC <mgsloan> yeah.  If only building a 1 - 5X was possible
2012-06-19 20:47:38 UTC <mgsloan> (I guess it might be.. hmm)
2012-06-19 20:48:04 UTC <luite> uh, the MP-E 65 is 1-5x magnification? or do you mean to increase magnification for other lenses?
2012-06-19 20:48:16 UTC <luite> you can with extension tubes, dunno if 5x is feasible
2012-06-19 20:51:41 UTC <luite> hm, someone has tested the 50/1.8 with a kit of kenko extension tubes on the 7D, got 2.12x magnificatio using them all
2012-06-19 20:52:05 UTC <mgsloan> ohh, I see
2012-06-19 20:52:51 UTC <mgsloan> so this means that you can take a full frame picture of something half the size of the sensor?
2012-06-19 20:53:07 UTC <luite> but if you get to really high magnification with extension tubes, you really run into focussing limits, if you even move your camera a bit away from the subject, you have to remove a tube because otherwise you can't focus anymore
2012-06-19 20:53:31 UTC <luite> yeah
2012-06-19 20:53:38 UTC <mgsloan> ah
2012-06-19 20:53:45 UTC <luite> around 12x8mm
2012-06-19 20:54:16 UTC <mgsloan> that's pretty sweet :D
2012-06-19 20:54:36 UTC <mgsloan> but yeah, somewhat limited
2012-06-19 20:55:07 UTC <luite> dof will be pretty minimal :)
2012-06-19 20:55:39 UTC <luite> it's annoying because you can't stop down too much or your whole frame will go blurry...
2012-06-19 20:55:49 UTC <mgsloan> it'd be interesting to work on compositing macro pics with pictures taken from the same place with a normal lens.  I guess the distortion would be all off 'n such - definitely have to be a different position in Z
2012-06-19 20:56:35 UTC <luite> at f/32 you don't really get acceptable pics anymore, and your DoF might still be not enough
2012-06-19 20:57:27 UTC <mgsloan> hmm.  Curious that it'd be that way.  And it's not due to a lack of exposure?
2012-06-19 20:58:09 UTC <luite> no, diffraciton limit
2012-06-19 20:58:21 UTC <mgsloan> ahh of course
2012-06-19 20:59:28 UTC <luite> if you have a flash you can usually get enough light on a macro scene for a decent exposure at not too high iso and really small aperture :)
2012-06-19 21:00:23 UTC <luite> an extension cord or wireless flash gun can help for more creativity with off camera flash
2012-06-19 21:00:58 UTC <luite> so it's not the light, just those pesky physics laws ;p
2012-06-19 21:08:24 UTC <mgsloan> better yet, take pictures of stuff that emits light
2012-06-19 21:08:49 UTC <mgsloan> macro of LEDs! /me googles
2012-06-19 21:10:04 UTC <mgsloan> http://mpml.files.wordpress.com/2009/11/led_lampe_hdr.jpg
2012-06-19 21:10:21 UTC <mgsloan> ooh http://www.pbase.com/image/75360338
2012-06-19 21:10:42 UTC <luite> hehe that looks like a really crappy led lamp? :p
2012-06-19 21:11:12 UTC <mgsloan> true true, but roughly uniform!
2012-06-19 21:12:14 UTC <luite> did you build that second one?
2012-06-19 21:12:42 UTC <mgsloan> naah
2012-06-19 21:12:55 UTC <mgsloan> just googling
2012-06-20 01:39:03 UTC <byorgey> "either the javascript code generators can be improved, or you convince byorgey to remove all polymorphism from diagrams" - luite
2012-06-20 01:39:21 UTC <byorgey> MORE POLYMORPHISM!  muahahahaha
2012-06-20 01:44:01 UTC <tgeeky> hehe
2012-06-20 11:59:49 UTC <vyom_> After a loooooong time, I made a commit to diagrams-svg https://github.com/deepakjois/diagrams-svg/commit/f5bf2418de70b7d4c9c02507a3601055f6e5fc98
2012-06-20 12:00:05 UTC <vyom_> Just checking in to say I am still here :)
2012-06-20 13:15:06 UTC <vyom_> Font family support http://bit.ly/KMpVXG
2012-06-20 20:57:05 UTC <mgsloan> byorgey: has anyone used unbound for TH?
2012-06-20 20:57:16 UTC <mgsloan> (as far as you know)
2012-06-20 20:59:38 UTC <luite> mgsloan: have you already tried magic lantern?
2012-06-20 20:59:46 UTC <mgsloan> nope!
2012-06-20 20:59:56 UTC <mgsloan> google?
2012-06-20 21:00:32 UTC <luite> oh it's a custom firmware extension for canon cameras
2012-06-20 21:00:48 UTC <luite> with lots of neat extras
2012-06-20 21:00:52 UTC <mgsloan> ohh, interesting!
2012-06-20 21:01:06 UTC <mgsloan> what's it do? can it be undone?
2012-06-20 21:01:19 UTC <mgsloan> ACTION looks up
2012-06-20 21:01:32 UTC <luite> yeah it doesn't really install on the camera, but it must change a few settings to boot it
2012-06-20 21:01:47 UTC <luite> but it boots from an SD card, if you use another card you're back to the original firmware
2012-06-20 21:03:50 UTC <mgsloan> gocha
2012-06-20 21:05:04 UTC <luite> it used to be mostly for video, but it also has interesting features for photography, like more focus assist tools, trap focus (take picture when something is in focus), focus stacking for macro
2012-06-20 21:05:14 UTC <ClaudiusMaximus> did it used to have a much more cryptic name?
2012-06-20 21:05:26 UTC <luite> time lapse, motion detection
2012-06-20 21:06:45 UTC <ClaudiusMaximus> ah, CHDK is what i wanted to try once - but my camera is slightly too old / never will be supported
2012-06-20 21:07:02 UTC <ClaudiusMaximus> and it a bit broke - need a new one really...
2012-06-20 21:07:55 UTC <luite> ah
2012-06-20 21:08:09 UTC <mgsloan> luite: in AF my camera already refuses to take a picture until it's in focus. kinda annoying sometimes
2012-06-20 21:08:34 UTC <mgsloan> very cool features though - I've wanted exposure times > 30s before
2012-06-20 21:08:36 UTC <ClaudiusMaximus> magic lantern looks more for upmarket cameras
2012-06-20 21:08:43 UTC <ClaudiusMaximus> :)
2012-06-20 21:10:42 UTC <luite> mgsloan: oh I've set my cam to use * for focussing
2012-06-20 21:11:00 UTC <mgsloan> hmm
2012-06-20 21:11:38 UTC <luite> for me it's much better, the shutter button only does exposure on half press
2012-06-20 21:12:36 UTC <luite> the new two-finger operation takes a bit of getting used to, but i can take pictures much faster now, especially in difficult situations
2012-06-20 21:13:03 UTC <luite> ClaudiusMaximus: which one do you have?
2012-06-20 21:13:12 UTC <ClaudiusMaximus> powershot A80
2012-06-20 21:13:35 UTC <luite> ah
2012-06-20 21:13:43 UTC <mgsloan> holy cow, HDR video
2012-06-20 21:13:53 UTC <mgsloan> HDR can be pretty garish, but still, this is neat
2012-06-20 21:14:06 UTC <ClaudiusMaximus> occasionally when i turn it on for the first time i get pictures like http://claudiusmaximus.goto10.org/g/broken/IMG_4508.JPG
2012-06-20 21:14:35 UTC <ClaudiusMaximus> then after a while it settles down into more like http://claudiusmaximus.goto10.org/g/broken/62.jpg
2012-06-20 21:15:09 UTC <luite> that looks like what my mother's A95 does
2012-06-20 21:15:13 UTC <ClaudiusMaximus> HDR isn't garish, it's the HDR -> LDR tone mapping / compression that's garish
2012-06-20 21:15:22 UTC <ClaudiusMaximus> when tuned to extremes
2012-06-20 21:15:33 UTC <ClaudiusMaximus> any idea of the cause/fix?
2012-06-20 21:15:42 UTC <luite> oh the A95 a bit more stripy
2012-06-20 21:16:08 UTC <luite> ClaudiusMaximus: i think this might have been caused by faulty sony ccds
2012-06-20 21:16:21 UTC <ClaudiusMaximus> it still takes occasional good pictures, but i can't rely on it
2012-06-20 21:16:45 UTC <luite> http://www.imaging-resource.com/badccds.html
2012-06-20 21:16:46 UTC <ClaudiusMaximus> ah, chips just rotted or something?  i guess it's way out of warranty by now
2012-06-20 21:17:16 UTC <luite> i think canon had a replacement program for faulty cams, though it might be too late now
2012-06-20 21:18:21 UTC <ClaudiusMaximus> might give them a call, maybe i can get a voucher to put towards a new camera
2012-06-20 21:18:32 UTC <luite> you can still try to call them, perhaps they'll exchange it, ask for an eos 600d ;p
2012-06-20 21:18:40 UTC <ClaudiusMaximus> hehe
2012-06-20 21:22:08 UTC <luite> http://usa.canon.com/cusa/support/consumer?pageKeyCode=prdAdvDetail&docId=0901e0248013d2f6
2012-06-20 21:27:05 UTC <ClaudiusMaximus> ah, i'm in uk - and uk page say kindly note that we will no longer provide such free repair services for these products after the end date mentioned in the table below.  powershot a80 30-june-2011
2012-06-20 21:27:10 UTC <ClaudiusMaximus> so i'm a year late, heh
2012-06-20 21:28:19 UTC <ClaudiusMaximus> a95 is free service til end july this year, in uk at least
2012-06-20 21:28:27 UTC <ClaudiusMaximus> (doesn't help me though)
2012-06-20 21:28:59 UTC <luite> yeah probably here too, but that's unfo[C[C[C[C[C[C[C[C[C[Crunately not the only problem my mother's cam has
2012-06-20 21:29:40 UTC <luite> hm, that's odd, what are those characters doing there...
2012-06-20 21:30:02 UTC <luite> the shutter button is stuck, looks like something underneath has cracked
2012-06-20 21:30:24 UTC <ClaudiusMaximus> just noticed mine has a dent; and already knew it has missing shutter button cover and snapped usb guard plastic
2012-06-20 21:30:31 UTC <luite> hehe
2012-06-20 21:30:57 UTC <luite> my old ixus also has a dent because i fell on it while snowboarding
2012-06-20 21:32:00 UTC <luite> http://www.magiclantern.fm/forum/index.php?topic=1004.msg1369 <- these look quite cool :)
2012-06-20 21:34:01 UTC <luite> https://bitbucket.org/hudson/magic-lantern <- source here
2012-06-20 22:04:08 UTC <luite> hehe you can get iso 409600 in videos with magic lantern
2012-06-20 22:07:44 UTC <mgsloan> :O
2012-06-20 22:07:45 UTC <mgsloan> talk about noise
2012-06-20 22:07:55 UTC <luite> have you already installed it? :p
2012-06-20 22:08:29 UTC <mgsloan> naaah, I'm actually currently in a class at NASSLLI taught by OLEG
2012-06-20 22:08:39 UTC <luite> oh
2012-06-20 22:09:16 UTC <mgsloan> he's talking about how to embed propositional logic into Haskell, and use this to evaluate semantics of natural language embedded
2012-06-20 22:09:35 UTC <mgsloan> best part, is that this is only the 3rd session, and the natural language people actually get it 0_0
2012-06-20 22:09:54 UTC <mgsloan> it's quite amazing how the features of Haskell are less intimidating once you ignore the prelude / libraries
2012-06-20 22:10:12 UTC <luite> hmm
2012-06-20 22:14:28 UTC <luite> meh i hope i can get some glue here to fix my sole
2012-06-21 21:17:26 UTC <shapr> I'm getting "Not in scope: type constructor or class `MarkupM'" any clues?
2012-06-21 21:18:03 UTC <shapr> I'm trying to persuade hint to interpret a diagram.
2012-06-21 21:18:57 UTC <shapr> I can't find MarkupM anywhere.
2012-06-21 21:19:26 UTC <tgeeky> shapr: Text.Blaze.Internal?
2012-06-21 21:19:32 UTC <shapr> ACTION blinks
2012-06-21 21:19:32 UTC <shapr> oh
2012-06-22 17:38:29 UTC <mgsloan> oleg likes my ideas about instance deriving :D
2012-06-22 18:36:23 UTC <shapr> I have a super-hacky jquery-console + hint + diagrams up at http://c-71-207-252-122.hsd1.al.comcast.net:3000/
2012-06-22 18:39:05 UTC <shapr> Yes, it only does SVG output from diagrams.
2012-06-22 18:39:32 UTC <shapr> since I've constrained the output type to Blaze.Markup
2012-06-22 18:42:33 UTC <fryguybob> shapr: Humm, so any Blaze.Markup would render?
2012-06-22 18:44:07 UTC <shapr> I think any Text.Blaze.Html5 will render.
2012-06-22 18:44:11 UTC <shapr> fryguybob: try it?
2012-06-22 18:46:57 UTC <fryguybob> ACTION waits for a response after hitting enter.
2012-06-22 18:48:58 UTC <shapr> parse error on input
2012-06-22 18:49:13 UTC <shapr> I need to fix it as luite said, so it can return both text and svg both.
2012-06-22 18:49:24 UTC <shapr> Right now it can't show error messages except in firebug!
2012-06-22 18:49:27 UTC <shapr> Like I said, hacky.
2012-06-22 18:50:19 UTC <shapr> I think I'll check in this prototype and work on some of the other TODO items.
2012-06-22 18:51:02 UTC <shapr> fryguybob: The result is getting dumped into jquery via $()
2012-06-22 18:52:11 UTC <fryguybob> Humm, all I have is firefox right now, I'm not sure how to debug with that.
2012-06-22 18:55:13 UTC <shapr> If you have firebug installed, F12 will get pop it up.
2012-06-22 18:58:16 UTC <fryguybob> shapr: It is not installed.
2012-06-22 18:59:52 UTC <fryguybob> shapr: Humm, I did find something with a message "inside commandHandle. input is..."
2012-06-22 19:00:12 UTC <shapr> yup, that's logging to the javascript console
2012-06-22 19:00:41 UTC <fryguybob> But I see no other messages.
2012-06-22 19:01:59 UTC <shapr> If you have firebug up, you can see the JSON response in the HTML tab.
2012-06-22 19:02:29 UTC <shapr> You'll see that the error is returned, but dumping that error into jquery via $(json.result) means nothing is displayed.
2012-06-22 19:05:37 UTC <fryguybob> Aha, I found the right knob for vanilla FF.
2012-06-22 19:09:26 UTC <fryguybob> shapr: Excellent.
2012-06-22 19:10:27 UTC <shapr> You're making other diagrams work?
2012-06-22 19:11:58 UTC <fryguybob> yes
2012-06-22 19:17:01 UTC <fryguybob> ACTION goes to lunch.
2012-06-22 20:26:15 UTC <luite> mgsloan: what ideas about instance drervingins?
2012-06-22 20:26:18 UTC <luite> deriving
2012-06-22 20:26:46 UTC <mgsloan> lemme push some appends to the idea document
2012-06-22 20:27:05 UTC <mgsloan> it was really cool to go to a summer school with oleg in it
2012-06-22 20:27:33 UTC <mgsloan> because he had some valuable insights asfar as how one could interpret some of the aspects of  the idea
2012-06-22 20:28:02 UTC <mgsloan> (doing a certain type of rewriting derivation of instance derivers ends up being like controlled subtyping - which is awesome.  Put subtyping where you want it)
2012-06-22 20:29:24 UTC <mgsloan> https://github.com/mgsloan/Haskell-Re-Syntaxed/blob/master/instanceTemplates.md
2012-06-22 20:29:43 UTC <mgsloan> so, the syntax at the top is weird.  I've settled on the syntax that comes at the very end
2012-06-22 20:30:35 UTC <mgsloan> A key aspect of the syntax at the end is that the methods which are most immediately nested under the deriver are parameters to the deriver
2012-06-22 20:30:42 UTC <mgsloan> they are not exported
2012-06-22 20:37:09 UTC <mgsloan> what do you think? does it make sense?
2012-06-22 20:37:36 UTC <mgsloan> In recent days I've been focusing on the prototype implementation instead of this idea document, so it's a bit disorganized.
2012-06-22 20:40:26 UTC <luite> hmm, i don't see yet how you'd use this to rework the numueric hierarchy
2012-06-22 20:41:35 UTC <luite> oh wait that refers to the default superclass proposal
2012-06-22 20:49:00 UTC <mgsloan> yeah
2012-06-22 20:49:08 UTC <mgsloan> you don't? look at the example at the end.
2012-06-22 20:49:45 UTC <mgsloan> so the idea is that "instance Monad m where ..."  would suddenly start meaning something different
2012-06-22 20:49:57 UTC <mgsloan> same for the numeric hierarchy (holy cow forgot to mention that!)
2012-06-22 20:50:13 UTC <mgsloan> instead of a single instance, it macro expands to many
2012-06-22 20:50:45 UTC <mgsloan> simple as that.  It'll break code that relies heavily on orphans
2012-06-22 20:51:03 UTC <mgsloan> but, eh.  That's what you get for creating orphans :P
2012-06-22 20:51:44 UTC <mgsloan> thing is, this is all the referentially transparent, safe, hygenic variety of macros
2012-06-22 20:52:11 UTC <mgsloan> rather than the quite unrestricted world of TH
2012-06-22 20:52:42 UTC <mgsloan> together with the new stuff for creating instances generic on ADTs, I think most popular uses of TH would be covered
2012-06-22 20:53:55 UTC <luite> oh i see now
2012-06-22 20:54:02 UTC <luite> hadn't seen that example yet
2012-06-22 20:55:54 UTC <mgsloan> sofar I've got the oleg and tgeeky seals of approval
2012-06-22 20:56:34 UTC <luite> what does the N. mean, and why is the N.(<*>) empty?
2012-06-22 20:58:52 UTC <mgsloan> that came from the example file I was writing.  The problem is that the deriver is using the same parameter names as the classes its generating
2012-06-22 20:59:08 UTC <mgsloan> so, I had "import Prelude qualified as N"
2012-06-22 20:59:16 UTC <mgsloan> errr
2012-06-22 20:59:30 UTC <mgsloan> instead I had "import NewPrelude qualified as N"
2012-06-22 20:59:50 UTC <mgsloan> these instances are like the ones from the applicative-functor-monad re-hierarchy proposal
2012-06-22 20:59:54 UTC <mgsloan> at least one of the proposals
2012-06-22 20:59:58 UTC <mgsloan> others are more conservative
2012-06-22 21:00:15 UTC <mgsloan> (<*>) being empty was me being lazy at some point.  Thanks for noticing!
2012-06-22 21:00:47 UTC <luite> same for the missing return for instance N.Monad?
2012-06-22 21:01:02 UTC <mgsloan> http://www.haskell.org/haskellwiki/Functor-Applicative-Monad_Proposal
2012-06-22 21:01:22 UTC <luite> oh ok, you assume the new hierarchy here?
2012-06-22 21:01:30 UTC <mgsloan> nah, return is provided by N.Functor
2012-06-22 21:01:35 UTC <mgsloan> err N.Applicative
2012-06-22 21:01:35 UTC <luite> right
2012-06-22 21:02:04 UTC <mgsloan> yeah - that's the whole point!  Ideally with this feature, we could write a new hierarchy, stick it in the standard library, and all the code would still work
2012-06-22 21:02:26 UTC <mgsloan> a cleansing of the haskell world would ensue, and all would rejoice
2012-06-22 21:03:10 UTC <mgsloan> but as said, there's no way around the orphans problem
2012-06-22 21:03:35 UTC <luite> hm, right and what about classes for which no deriver exists?
2012-06-22 21:03:45 UTC <mgsloan> they're just normal class instances
2012-06-22 21:04:14 UTC <mgsloan> So, the instances stay the same, but they are either interpreted as normal instances, or deriver invocations
2012-06-22 21:06:02 UTC <luite> would these still be useful if the monad/functor and numeric hierarchies were perefect already?
2012-06-22 21:06:08 UTC <mgsloan> oh yes!
2012-06-22 21:06:28 UTC <mgsloan> because typeclasses are used for much more than that!
2012-06-22 21:06:42 UTC <mgsloan> http://www.mgsloan.com/wordpress/?p=219
2012-06-22 21:06:52 UTC <mgsloan> Haskell is very close to being able to express full API-deltas as modules
2012-06-22 21:07:21 UTC <luite> oh yeah i read that before
2012-06-22 21:07:44 UTC <mgsloan> in other words, most trivial API refactorings can be done in terms of a module that re-exports some symbols, and implements symbols in terms of the target library
2012-06-22 21:08:35 UTC <mgsloan> with instance derivers, we pretty much close the gap
2012-06-22 21:08:50 UTC <mgsloan> (I think... probably not completely)
2012-06-22 21:11:47 UTC <luite> would you say derivers should replace default method implementations?
2012-06-22 21:12:13 UTC <mgsloan> part of my document mentions that
2012-06-22 21:12:24 UTC <mgsloan> however, no, I don't think that will be part of my proposal
2012-06-22 21:12:58 UTC <mgsloan> that was when I was thinking of them as more of a compile-time macro expansion that can do fancy processing on the parameters provided by the user, at compile time
2012-06-22 21:13:12 UTC <mgsloan> so, it could detect minimal definitions, etc
2012-06-22 21:16:59 UTC <mgsloan> but this is not the Haskell way! It's much better as purely passing parameters to the instance template
2012-06-22 21:17:39 UTC <luite> hmm i guess i need to think about this some more, it looks interesting, but it still feels a lot like just for patching up old broken design
2012-06-22 21:19:55 UTC <mgsloan> whaaaaa
2012-06-22 21:19:57 UTC <mgsloan> nah, it's more
2012-06-22 21:20:11 UTC <mgsloan> I need to put up additional examples
2012-06-22 21:20:29 UTC <mgsloan> it also lets us do limited, reasonable subtyping
2012-06-22 21:20:47 UTC <luite> i need to sleep first probably :)
2012-06-22 21:20:50 UTC <mgsloan> but, thanks for thinking about it!
2012-06-22 21:21:06 UTC <mgsloan> yeah, I look forward to your input!
2012-06-22 21:21:15 UTC <mgsloan> anything to make it more appealing to Haskellers at large
2012-06-22 21:21:23 UTC <luite> the wrapNum way to make an Instance feels a bit odd
2012-06-22 21:21:34 UTC <mgsloan> I'm hoping to submit this as a proposal, in about 17 days (for the Haskell Implementors workshop)
2012-06-22 21:21:45 UTC <luite> and i'm not sure where an Instance gets turned into an actual instance
2012-06-22 21:22:28 UTC <mgsloan> my current idea there (not represented in the document) is that instances of constraint synonyms will necessarily be derivers
2012-06-22 21:22:37 UTC <mgsloan> whereas instances of classes will be actual instances
2012-06-22 21:24:21 UTC <mgsloan> this is ugly when you want to do single-instance derivers though (need to introduce a dummy constraint) - unless we remove the "TypeSynonymInstances" feature
2012-06-22 21:25:26 UTC <mgsloan> then this makes "type" into more like a "newtype" for constraints
2012-06-22 21:25:32 UTC <mgsloan> which is a little bit o_0
2012-06-22 21:25:39 UTC <mgsloan> so, yeah, it's certainly not all worked out
2012-06-22 21:26:49 UTC <luite> i'll read it again (hopefully a bit more thoroughly) if you add a bit more. also i wonder how you'd use the Instance from wrapNum
2012-06-22 21:28:31 UTC <luite> is the derive Num using syntax still the one you plan to use?
2012-06-22 21:29:55 UTC <mgsloan> yup
2012-06-22 21:30:20 UTC <mgsloan> err, no
2012-06-22 21:30:24 UTC <mgsloan> the syntax at the very end
2012-06-22 21:30:29 UTC <mgsloan> everything else is wonky and different
2012-06-22 21:30:38 UTC <mgsloan> I should really rewrite that document :)
2012-06-22 21:30:48 UTC <luite> urgh..
2012-06-22 21:30:51 UTC <luite> hehe ok
2012-06-22 21:31:05 UTC <mgsloan> I didn't write down the new syntax for instantiating the deriver
2012-06-22 21:31:12 UTC <mgsloan> but it looks the same as instances
2012-06-22 21:31:12 UTC <luite> ah
2012-06-22 21:31:24 UTC <luite> and runtime instances, are they out?
2012-06-22 21:31:46 UTC <mgsloan> runtime instances?
2012-06-22 21:32:06 UTC <luite> it's in your own document!
2012-06-22 21:32:14 UTC <luite> :p
2012-06-22 21:32:36 UTC <mgsloan> oh yeah, that's just random speculation
2012-06-22 21:32:56 UTC <mgsloan> I think I'll instead speculate on building ekmett's reflection into the language
2012-06-22 21:33:23 UTC <luite> it looks like it would be rather easy to abuse them, having multiple runtime instances for some type
2012-06-22 21:33:32 UTC <mgsloan> oh yeah
2012-06-22 21:33:43 UTC <mgsloan> whenever someone brings it up, it's immediately swatted by the pros
2012-06-22 21:33:59 UTC <mgsloan> but I'm not sure if providing explicit dictionaries is actually a bad idea
2012-06-22 21:34:14 UTC <mgsloan> (in some cases)
2012-06-22 21:34:31 UTC <mgsloan> I guess the argument is then it should be an ADT and not a typeclass
2012-06-22 21:34:58 UTC <mgsloan> and maybe you should provide an instance for (MyDict, MyValue)
2012-06-22 21:35:05 UTC <mgsloan> or something of that variety
2012-06-22 21:37:21 UTC <luite> i really need to sleep now though, have to drive back to nl tomorrow
2012-06-22 21:37:32 UTC <luite> and leave quite early
2012-06-22 21:38:04 UTC <mgsloan> go for it!! Thanks for discussing :D
2012-06-22 21:38:14 UTC <mgsloan> have a good sleep / drive
2012-06-22 21:39:08 UTC <luite> hehe np, sorry for not being terribly positive, i just want to understand this stuff first :)
2012-06-22 21:40:14 UTC <mgsloan> that's fine!! Criticism is good, because I'm sure many Haskellers will be initially conservative about these kinds of ideas
2012-06-22 21:40:40 UTC <mgsloan> but this sort of capability has been missing for _way_ too long, imho
2012-06-22 21:45:14 UTC <luite> perhaps a few nice examples where it would replace things where TH is often used, like deriving lenses or something, would help convince people
2012-06-22 21:46:40 UTC <mgsloan> unfortunately, since we can't declare new names, thats outside of its power
2012-06-22 21:46:47 UTC <mgsloan> but, yeah, that would help
2012-06-22 21:46:54 UTC <mgsloan> my prototype is very close to working
2012-06-22 21:46:59 UTC <mgsloan> so after that, I will
2012-06-22 21:47:21 UTC <mgsloan> gtg to oleg's talk! and you should probably go too! ttyl!
2012-06-22 21:47:29 UTC <luite> yeah i should
2012-06-22 21:47:30 UTC <luite> have fun
2012-06-22 21:47:47 UTC <mgsloan> I will
2012-06-22 21:47:55 UTC <mgsloan> he uses his middle finger to point at the board
2012-06-22 21:48:06 UTC <mgsloan> I'm going to make it into a "Fuck imperative programming" meme
2012-06-22 23:02:33 UTC <tgeeky> lol
2012-06-22 23:25:09 UTC <mgsloan> unfortunately he has been shier with his middle finger this lecture :( maybe he's on to me!
2012-06-22 23:27:58 UTC <mgsloan> will probably be able to watch the video and pick a good frame
2012-06-22 23:40:59 UTC <tgeeky> doh, he left
2012-06-23 04:30:01 UTC <tgeeky> byorgey: pingles?
2012-06-23 16:29:14 UTC <byorgey> tgeeky: "pingles"?
2012-06-23 16:48:36 UTC <byorgey> tgeeky: I've been mostly out of touch at a conference this week, I'll be back in touch on Monday-ish
2012-06-23 18:07:28 UTC <ClaudiusMaximus> ACTION finally gets around to installing gtk-toy-diagrams
2012-06-23 18:10:09 UTC <ClaudiusMaximus> (maybe the installation instructions could be simplified - instead of all those cd ../foo ; runhaskell Setup.hs etc etc  , why not "cabal install ./*/ --solver=modular --avoid-reinstalls"  (which is what i'm doing right now...)
2012-06-23 19:19:50 UTC <tgeeky> byorgey: just a portmanteau of ping and pringles
2012-06-23 19:44:13 UTC <luite> <- back in nl
2012-06-23 20:14:05 UTC <ClaudiusMaximus> so, i have no clue about how gtk-toy-diagrams works...  the examples are cool though
2012-06-23 20:14:08 UTC <mgsloan> thanks!
2012-06-23 20:14:32 UTC <ClaudiusMaximus> but how might i go about adding new things to a diagram (extra handles, links between handles)
2012-06-23 20:14:52 UTC <ClaudiusMaximus> bit daunted by all the abstract type magic :)
2012-06-23 20:15:18 UTC <mgsloan> yeaah, I think some of that is probably ill advised
2012-06-23 20:15:52 UTC <mgsloan> it's kinda approximating some OOP-ish things
2012-06-23 20:17:09 UTC <ClaudiusMaximus> maybe i should read the source and try and backport it to gtk (i'll need my own custom main, anyway, unless you can pack a toy as a widget into another window - want to have multiple windows etc)
2012-06-23 20:17:39 UTC <ClaudiusMaximus> there's just a lot of it and i don't know where best to start :)
2012-06-23 20:18:45 UTC <ClaudiusMaximus> (btw, latest output from my graphgrow project: http://img26.imageshack.us/img26/7627/gg2large.png )
2012-06-23 20:19:52 UTC <ClaudiusMaximus> also, the example toys don't like to quit nicely..
2012-06-23 20:19:58 UTC <ClaudiusMaximus> especially when run with runhaskell
2012-06-23 20:20:00 UTC <mgsloan> oooh very nice
2012-06-23 20:20:06 UTC <mgsloan> I know.. sorry about that..
2012-06-23 20:20:13 UTC <mgsloan> I've crashed my computer before due to that
2012-06-23 20:20:26 UTC <ClaudiusMaximus> ouch
2012-06-23 20:20:43 UTC <ClaudiusMaximus> no such drama here
2012-06-23 20:29:25 UTC <mgsloan1> So, one way to have stuff other than handles is to make your state have a list (or some other traversable) of Either values
2012-06-23 20:31:31 UTC <mgsloan1> that is kinda ugly.. Yeah, there needs to be a good way to combine heterogenous types
2012-06-23 20:38:53 UTC <ClaudiusMaximus> i think gtk-toy-diagrams is a bit too cute/high-level for me...  more used to just tinkering with stuff until it works, then re-writing it when it gets too messy
2012-06-23 20:39:23 UTC <mgsloan1> yeah, fair 'nough
2012-06-23 20:39:36 UTC <mgsloan1> well it was just the couple week afterthought of a college student afterall
2012-06-23 20:40:01 UTC <mgsloan1> I still think it does some GUI stuff better / more elegantly than many
2012-06-23 20:40:07 UTC <ClaudiusMaximus> seems impressive for a couple of weeks!
2012-06-23 20:40:29 UTC <mgsloan1> yeah, I guess looking at the commit log it was much more than that :)
2012-06-23 20:40:40 UTC <mgsloan1> I was working on it in tandem with panopti
2012-06-23 20:40:50 UTC <mgsloan1> so, 5 weeks mabe
2012-06-23 20:41:04 UTC <mgsloan1> but yeah, it hasn't been cleaned to the point of being usable by anyone
2012-06-23 20:41:08 UTC <ClaudiusMaximus> it does look sane/elegant, but like most such things it has to deal with an unsane world full of other things that would be impossible effort to redo :(
2012-06-23 20:41:32 UTC <mgsloan1> once the exit bug is fixed, I think gtk-toy is good to go, though
2012-06-23 20:42:10 UTC <mgsloan1> and maybe bits of gtk-toy-diagrams used as a utility library, not a framework
2012-06-23 20:42:37 UTC <mgsloan1> the whole idea of building your app from generic data structures, like how the toys seem to suggest, is not currently sustainable
2012-06-23 20:44:00 UTC <ClaudiusMaximus> i'll give a go at prototyping my thing with it tonight - hopefully it won't take more than 3 hours - then see how to proceed from there
2012-06-23 20:44:04 UTC <ClaudiusMaximus> ACTION -> coding :)
2012-06-23 20:44:12 UTC <mgsloan1> awesome!
2012-06-23 20:44:19 UTC <mgsloan1> lemme know how it goes
2012-06-23 20:44:41 UTC <ClaudiusMaximus> will do
2012-06-23 20:44:41 UTC <mgsloan1> So, July 10 is the Haskell implementors workshop deadline
2012-06-23 20:44:54 UTC <mgsloan1> I expect I won't be doing much diagrams-ey stuff till then
2012-06-23 20:45:19 UTC <mgsloan1> buut I hope too after!!  Someone's gotta do graphics / interactivity right for haskell :D
2012-06-23 20:45:27 UTC <mgsloan1> eventually
2012-06-23 21:40:01 UTC <ClaudiusMaximus> so i accidentally made a paint program http://img839.imageshack.us/img839/7960/gtktoyunintentionaldraw.png (seems i should check for mouse clicks, rather than mouse events..)
2012-06-23 22:13:25 UTC <ClaudiusMaximus> progress is smooth so far - can create nodes, move them around, delete them without anything going too badly wrong :)
2012-06-23 22:15:20 UTC <ClaudiusMaximus> in ~75 lines of code, not bad
2012-06-23 23:20:58 UTC <ClaudiusMaximus> http://img163.imageshack.us/img163/5276/gtktoyfirstconnections.png woohoo! now i need to make it so moving nodes updates the links...
2012-06-23 23:21:48 UTC <ClaudiusMaximus> http://img338.imageshack.us/img338/8679/gtktoyfirstconnectionsb.png  .. because this is a bit wrong
2012-06-23 23:22:25 UTC <ClaudiusMaximus> ~100 lines of code now
2012-06-23 23:28:07 UTC <ClaudiusMaximus> compared to the ~1000 lines of haskell in the renderer that made the text-like fractal image, and the ~1300 lines javascript in the original svg version, it's quite concise - though of course it's not as featureful yet
2012-06-23 23:45:57 UTC <ClaudiusMaximus> 3 hours on the dot :)  working now
2012-06-23 23:47:15 UTC <ClaudiusMaximus> http://img256.imageshack.us/img256/1708/gtktoylinkupdatea.png http://img10.imageshack.us/img10/7885/gtktoylinkupdateb.png
2012-06-23 23:47:29 UTC <ClaudiusMaximus> though i just realized it'll crash when i delete nodes..
2012-06-24 00:25:50 UTC <ClaudiusMaximus> http://hpaste.org/70365 really done
2012-06-24 03:37:56 UTC <byorgey> ClaudiusMaximus: cool!
2012-06-24 07:07:17 UTC <ClaudiusMaximus> hacking a bit into gtk-toy, can now use a toy as a widget.. http://img849.imageshack.us/img849/9168/gtktoymultiple.png
2012-06-24 07:07:48 UTC <ClaudiusMaximus> (in this case, i'm just creating a new window for each graph toy
2012-06-24 08:12:43 UTC <ClaudiusMaximus> mgsloan: hey, check the irc logs, made good progress last night  :)
2012-06-24 09:18:06 UTC <ClaudiusMaximus> http://img72.imageshack.us/img72/8853/gtktoymultiplelinks.png - necessary additional features as far as this bit goes are 1(easy) deleting links; and 2(involved) hooking it up to the fractal rendering engine :)
2012-06-24 09:19:59 UTC <ClaudiusMaximus> then come the optional extras like displaying the graph connecting the different graphs with its scc's and dimension calculations, and niceties like making the editing windows resizeable and behave nicely on close, etc
2012-06-24 09:22:11 UTC <ClaudiusMaximus> part 2 means porting the rendering engine from GLFW-b to gtkglext, which is unlikely to be much fun
2012-06-25 18:50:25 UTC <ClaudiusMaximus> byorgey: is the version constraint  diagrams-contrib build-depends: mtl == 2.0.*  really necessary?  (just curious, really; mtl 2.1 exists but my diamond dependency hell turned out to be from gtk (i think? still not 100% sure...))
2012-06-25 18:54:04 UTC <byorgey> ClaudiusMaximus: the latest version of diagrams-contrib has  mtl >= 2.0 && < 2.2
2012-06-25 18:54:19 UTC <byorgey> the latest version on Hackage I mean
2012-06-25 18:55:09 UTC <byorgey> so no, it is not necessary =)
2012-06-25 19:05:35 UTC <mgsloan> ClaudiusMaximus: As I said in email, that graph editor looks _awesome_ !
2012-06-25 19:07:26 UTC <mgsloan> I'm gonna spend a little more time on them, now that there's a user :D
2012-06-25 19:08:03 UTC <ClaudiusMaximus> mgsloan: :)  just replied
2012-06-25 19:08:59 UTC <ClaudiusMaximus> byorgey: ah, but that's not reflected in darcs?  (unless i did something wrong?)
2012-06-25 19:09:16 UTC <byorgey> ClaudiusMaximus: oh? let me check
2012-06-25 19:10:16 UTC <byorgey> ClaudiusMaximus: whoops!  You're right, I hadn't pushed, sorry about that.  Try now.
2012-06-25 19:13:32 UTC <ClaudiusMaximus> byorgey: cool
2012-06-25 19:15:48 UTC <mgsloan> ClaudiusMaximus: So do you have a new patch now?
2012-06-25 19:15:57 UTC <mgsloan> on github maybe?
2012-06-25 19:16:19 UTC <mgsloan> I think easiest is to use github pull requests
2012-06-25 19:16:34 UTC <ClaudiusMaximus> mgsloan: no, i noticed before i sent it
2012-06-25 19:16:43 UTC <mgsloan> cool!
2012-06-25 19:17:04 UTC <ClaudiusMaximus> i don't like github, too centralized/proprietary for my liking...
2012-06-25 19:17:22 UTC <ClaudiusMaximus> but i'm sure it works well for those that do :)
2012-06-25 19:19:53 UTC <ClaudiusMaximus> it should just work to "git apply foo.patch" for patches sent by email, but if that starts to get tedious then maybe i think about other options
2012-06-25 19:21:01 UTC <ClaudiusMaximus> would be nice if there were a decentralized "pull request" mechanism i guess
2012-06-25 19:23:21 UTC <mgsloan> yeah, or maybe if github allowed anyone to submit of patches in a form that would allow for an easy web interface button thing for the recepient
2012-06-25 19:25:16 UTC <ClaudiusMaximus> i've not really been involved with that many collaborative projects, so never really missed that kind of friendly interface
2012-06-25 19:26:43 UTC <mgsloan> yeah.  I find it a really nice way to submit little one-off patches to others' projects
2012-06-25 19:27:31 UTC <mgsloan> not really as much for consistent collaboration, but I imagine it'd be good for that too
2012-06-25 19:27:49 UTC <mgsloan> the other way it's nice is that it provides kindofa  nice "open source resume"
2012-06-25 19:28:34 UTC <ClaudiusMaximus> true i guess
2012-06-25 19:29:55 UTC <ClaudiusMaximus> ACTION bbiab, porting my fractal engine from GLFW-b to gtkglext - i expect some pain, but hopefully not too much..
2012-06-25 20:20:19 UTC <mgsloan> ClaudiusMaximus: having multiple windows brings us back to not quitting the app automatically
2012-06-25 20:20:51 UTC <mgsloan> thoughts on that?  Maybe have some state that knows about all the windows and calls quitToy when they're all closed?
2012-06-25 20:21:20 UTC <mgsloan> Ohhhhh
2012-06-25 20:21:27 UTC <mgsloan> I see, if the root window is closed, we quit
2012-06-25 20:21:28 UTC <mgsloan> alright
2012-06-25 21:15:45 UTC <ClaudiusMaximus> mgsloan: i can paste the relevant part of my code
2012-06-25 21:15:51 UTC <mgsloan> nah, I saw it
2012-06-25 21:15:55 UTC <mgsloan> thanks though
2012-06-25 21:16:19 UTC <mgsloan> I've committed an untested approach to doing key handlers
2012-06-25 21:16:33 UTC <mgsloan> as values not the awful type based stuff
2012-06-25 21:16:56 UTC <ClaudiusMaximus> http://hpaste.org/70435
2012-06-25 21:17:28 UTC <ClaudiusMaximus> that's the main of my graph editor at the moment
2012-06-25 21:18:10 UTC <ClaudiusMaximus> so it creates a window like [+], then clicking the plus adds a button next to it like [+][0], then clicking the 0 opens a graph editing window, closing that window just hides it
2012-06-25 21:18:41 UTC <ClaudiusMaximus> and it keeps its state so clicking the button again shows it as it was before
2012-06-25 21:20:13 UTC <ClaudiusMaximus> i got the GLFW-b to GTK porting sorta working, it's somewhat ugly going from "nextEvent" api to "callback" api
2012-06-25 21:25:47 UTC <mgsloan> yeah, hiding the ugliness of callback style APIs, and complicated event data types, was one of my main goals here
2012-06-25 21:26:15 UTC <mgsloan> at the cost of not exactly slicing those problems perfectly - hence "toy"
2012-06-25 21:26:47 UTC <mgsloan> for the non GTK specific version of Toy, I'm considering making the mouse vector-space independent :D
2012-06-25 21:37:43 UTC <ClaudiusMaximus> https://gitorious.org/maximus/graphgrow/commit/c7ee8a43680b63d588208856d0454d8ff235897e is the relevant commit for the GLFW-b -> GTK transition
2012-06-25 21:37:54 UTC <ClaudiusMaximus> well, most relevant - did change some other things elsewhere
2012-06-25 21:43:04 UTC <mgsloan> ACTION clones
2012-06-25 21:44:30 UTC <mgsloan> hmm, so I already published gtk-toy as a hackage package
2012-06-25 21:44:45 UTC <mgsloan> I don't think anyone depends on me, though
2012-06-25 21:45:00 UTC <mgsloan> ACTION wishes reverse-dependencies was still up
2012-06-25 21:45:00 UTC <ClaudiusMaximus> http://img26.imageshack.us/img26/7627/gg2large.png is what it looks like with a huge graph (one that wouldn't be feasible to make with the graphical node editor thing)
2012-06-25 21:45:20 UTC <ClaudiusMaximus> there's some other things - portackage? can't remember
2012-06-25 21:45:37 UTC <mgsloan> yeah, portackage is nice
2012-06-25 21:45:45 UTC <mgsloan> I don't think it does reverse dependencies, though
2012-06-25 21:47:51 UTC <ClaudiusMaximus> http://packdeps.haskellers.com/feed?needle=gtk-toy
2012-06-25 21:47:55 UTC <ClaudiusMaximus> maybe
2012-06-25 21:48:34 UTC <ClaudiusMaximus> no deps, which seems what you want :)  compared with http://packdeps.haskellers.com/feed?needle=gtk which has a few
2012-06-25 21:48:53 UTC <mgsloan> ahhh, didn't realize that packdeps did that
2012-06-25 21:48:56 UTC <mgsloan> sweet :)
2012-06-25 21:49:34 UTC <mgsloan> looks like I'll have to contact ross to do that
2012-06-25 21:49:38 UTC <mgsloan> I think it's worth the rename
2012-06-25 21:50:10 UTC <mgsloan> maybe toy is good, though
2012-06-25 21:50:25 UTC <ClaudiusMaximus> oh wait, i think i misunderstood
2012-06-25 21:50:26 UTC <mgsloan> maybe I'll keep it, and make the generic package be toy-interactive
2012-06-25 21:50:33 UTC <mgsloan> no, you didnt
2012-06-25 21:50:34 UTC <ClaudiusMaximus> not sure exactly what packdeps does
2012-06-25 21:51:06 UTC <ClaudiusMaximus> It will find all packages containing that string in the package name, maintainer or author fields, and create an Atom feed for restrictive bounds.
2012-06-25 21:51:10 UTC <mgsloan> I think "packages checked" tells you the reverse deps
2012-06-25 21:51:23 UTC <mgsloan> ahhhh yeah
2012-06-25 21:51:27 UTC <mgsloan> you're right
2012-06-25 21:51:31 UTC <mgsloan> tubad :/
2012-06-25 21:52:09 UTC <mgsloan> maybe I'll have gtk-toy, and toy-interface
2012-06-25 21:52:22 UTC <mgsloan> where the interface one is the genericalized thing
2012-06-25 21:52:30 UTC <mgsloan> and then toy-diagrams
2012-06-25 21:52:43 UTC <ClaudiusMaximus> a veritable box of toys :)
2012-06-25 21:52:51 UTC <mgsloan> indeed :)
2012-06-25 21:53:24 UTC <mgsloan> the term comes from a practice we had in lib2geom (the cpp library for inkscape's geometry stuff) - we had a directory full of toys which each demonstrated a different feature
2012-06-25 21:53:59 UTC <mgsloan> I wrote the toy framework for that, and this is a pretty direct haskell re-imagining of it
2012-06-25 21:56:09 UTC <ClaudiusMaximus> cool
2012-06-25 21:57:16 UTC <ClaudiusMaximus> i imagine you'll shudder at my "iterate through the list of all things on every mouse event" rather than some spatial index with temporal coherence
2012-06-25 21:59:00 UTC <ClaudiusMaximus> there was some weirdness too - not sure where it comes from, but "mouse down and drag quickly" sometimes gets interpreted as "click at end position" instead of "click and drag"
2012-06-25 21:59:36 UTC <ClaudiusMaximus> will do some further testing
2012-06-25 22:00:03 UTC <ClaudiusMaximus> but it was really irritating, ending up creating new nodes instead of dragging existing nodes
2012-06-25 22:09:22 UTC <mgsloan> ClaudiusMaximus: Naah, this whole toy stuff has been done with the philosophy of "slow but nice looking code" from the start
2012-06-25 22:09:28 UTC <mgsloan> I do the same thing for handles
2012-06-25 22:10:09 UTC <mgsloan> in order to maintain independence between handles state, I'm not storing which handle is selected, just per-handle whether it's being dragged
2012-06-25 22:16:02 UTC <ClaudiusMaximus> heh, ok
2012-06-25 22:16:49 UTC <mgsloan> yeah, it's a little weird
2012-06-25 22:16:52 UTC <ClaudiusMaximus> i never got the hang of hand-made vector graphics - gimp i "get", but inkscape/blender/etc are alien to me
2012-06-25 22:17:11 UTC <ClaudiusMaximus> (having started with deluxe paint iii)
2012-06-25 22:17:21 UTC <mgsloan> yeah, blender is a little weird
2012-06-25 22:17:38 UTC <mgsloan> back when I was inkscaping we were always speculating about porting it to haskell
2012-06-25 22:17:41 UTC <ClaudiusMaximus> i tend to prefer making SVG in a text editor
2012-06-25 22:18:11 UTC <ClaudiusMaximus> than launching Inkscape, trying for 30minutes to figure out how to do anything, then giving up and opening a text editor :)
2012-06-25 22:18:55 UTC <mgsloan> so, one of my long term goals would be to do a cool vector editor in Haskell.  Diagrams is a great place to start in that direction
2012-06-25 22:19:20 UTC <mgsloan> ahh, yeah, inkscape has a bit of a learning curve.  It's pretty nice, though.  I liked it because it was the only way I could make anything that looks half decent
2012-06-25 22:19:36 UTC <mgsloan> bitmap based drawing tools were always way too commital regarding your brush strokes
2012-06-25 22:19:42 UTC <mgsloan> I like being able to retrospectively tweak
2012-06-25 22:20:13 UTC <ClaudiusMaximus> i tend to make simple geometric things like http://claudiusmaximus.goto10.org/cm/2009-10-26_designing_a_new_rdex_logo.html
2012-06-25 22:21:00 UTC <ClaudiusMaximus> and i should really port http://claudiusmaximus.goto10.org/cm/2010-11-09_konstrukt_3.html to diagrams at some point, so i won't have any reason to whinge any more
2012-06-25 22:22:21 UTC <ClaudiusMaximus> (some stylesheet wonkiness going on - click the pic for the interactive svg)
2012-06-25 22:22:49 UTC <mgsloan> wow, that's awesome!
2012-06-25 22:23:21 UTC <ClaudiusMaximus> ty :)
2012-06-25 22:23:34 UTC <mgsloan> how do I use it?
2012-06-25 22:23:43 UTC <mgsloan> err nvm
2012-06-25 22:23:46 UTC <mgsloan> there's instructions :)
2012-06-25 22:23:46 UTC <ClaudiusMaximus> haha
2012-06-25 22:24:25 UTC <ClaudiusMaximus> yeah that's the most common complaint about my stuff - i suck at documentation, it's mostly an afterthought..
2012-06-25 22:25:51 UTC <mgsloan> it'd be awesome to be able to move the points (though I realize this could break some constraints that other constructions are based on)
2012-06-25 22:27:44 UTC <ClaudiusMaximus> yeah that would be awesome - especially if you could add constraints like "this point is absolutely fixed, this point can move freely around this circle, this point must be on a line through these two points, ..."
2012-06-25 22:28:11 UTC <ClaudiusMaximus> like those geometry sketchpad things
2012-06-25 22:28:26 UTC <mgsloan> yup.  I think I'll give it a go once I do automatically-differentiation-layout
2012-06-25 22:28:31 UTC <ClaudiusMaximus> which i've never tried for real as their either java based or windows..
2012-06-25 22:28:48 UTC <ClaudiusMaximus> *they're
2012-06-25 22:29:03 UTC <ClaudiusMaximus> and then make hyperbolic/spherical versions :D
2012-06-25 22:32:03 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/g/misc/2012-06-13_poincare_opengl_2.png is what i was hacking on before i got distracted by graphgrow
2012-06-25 22:33:07 UTC <ClaudiusMaximus> which is forked from http://claudiusmaximus.goto10.org/g/misc/resurrection-of-code-from-2009.gif  and ported to glsl instead of slooow haskell software rasterizer
2012-06-25 22:34:32 UTC <ClaudiusMaximus> which itself was forked from some gtk/cairo stuff http://claudiusmaximus.goto10.org/cm/2009-01-07_dvd2473.html
2012-06-25 22:45:06 UTC <mgsloan> whoah, trippy!
2012-06-25 23:19:40 UTC <ClaudiusMaximus> :)
2012-06-25 23:20:56 UTC <ClaudiusMaximus> an email reminded me of my http://identi.ca/notice/80346472 - any ideas how to generalize that formula to polar coordinates without having to scribble a few pages of equations and get a headache?
2012-06-25 23:25:24 UTC <ClaudiusMaximus> or even extend it to take curvature into account in the rectangular case
2012-06-25 23:35:58 UTC <mgsloan> I've always wanted to make a charting library that unified the polar and cartesian charts
2012-06-25 23:37:56 UTC <mgsloan> so that range plots are just polar histograms, etc
2012-06-25 23:40:14 UTC <ClaudiusMaximus> heh, just had a vision of a heap profile visualisation as a collection of variable radius cyclinders floating in an ether
2012-06-25 23:40:28 UTC <ClaudiusMaximus> *cylinders
2012-06-25 23:40:53 UTC <ClaudiusMaximus> pure chart junk of course :)
2012-06-25 23:41:37 UTC <ClaudiusMaximus> www.google.co.uk/#q="the word cruel starts flashing"
2012-06-25 23:52:11 UTC <mgsloan> oh yeah, pretty though :)
2012-06-25 23:52:27 UTC <mgsloan> I definitely wanted to have a go at library-izing Tufte
2012-06-25 23:53:16 UTC <ClaudiusMaximus> nested tubes for time/allocation profiles
2012-06-25 23:53:35 UTC <ClaudiusMaximus> wait, they don't vary over time
2012-06-25 23:54:24 UTC <ClaudiusMaximus> is there already a space-tree type visualisation for .prof output?
2012-06-25 23:55:01 UTC <ClaudiusMaximus> it's really boring looking at the text in a wide terminal
2012-06-25 23:55:16 UTC <ClaudiusMaximus> maybe that's my project for tonight!
2012-06-25 23:55:25 UTC <ClaudiusMaximus> (or sleeping, but that's overrated)
2012-06-26 00:02:24 UTC <ClaudiusMaximus> seems there are two things on hackage, tkyprof (unmaintained for a year or so, heavyweight web server thing) visual-prof (also untouched for a year or so, and not visual but html outut it seems)
2012-06-26 00:09:00 UTC <mgsloan> Alright, new package!
2012-06-26 00:09:04 UTC <mgsloan> https://github.com/mgsloan/toy-interface
2012-06-26 00:09:12 UTC <mgsloan> and I updated the others to suit
2012-06-26 00:09:22 UTC <mgsloan> unfortunately, this breaks your code - new namespaces
2012-06-26 00:09:34 UTC <mgsloan> Graphics.UI.Gtk.Toy becomes Graphics.UI.Toy
2012-06-26 00:09:48 UTC <mgsloan> and "Interactive a" is now "Interactive Gtk a"
2012-06-26 00:10:05 UTC <ClaudiusMaximus> :)
2012-06-26 00:10:24 UTC <mgsloan> "GtkInteractive a" is a constraint synonym for being GtkDisplay and Interactive Gtk
2012-06-26 00:10:31 UTC <mgsloan> gotta go get some food! ttyl
2012-06-26 00:10:38 UTC <ClaudiusMaximus> cool! eat well
2012-06-26 00:30:05 UTC <ClaudiusMaximus> oh, visual-prof is obsolete because http://hackage.haskell.org/trac/ghc/ticket/4094
2012-06-26 02:20:15 UTC <mgsloan> ClaudiusMaximus: I added a "machinima" toy that looks like http://www.youtube.com/watch?v=HRorYgcxxPw
2012-06-26 02:22:14 UTC <ClaudiusMaximus> oo, shiny
2012-06-26 02:22:49 UTC <mgsloan> yup, pretty much a direct port of the gloss example
2012-06-26 02:22:59 UTC <mgsloan> I might port a lot of the gloss examples
2012-06-26 02:23:19 UTC <mgsloan> at some point
2012-06-26 02:23:27 UTC <mgsloan> would be cool to have a gloss backend too
2012-06-26 02:23:53 UTC <ClaudiusMaximus> http://hpaste.org/70450 is what i did in the last 2 hours
2012-06-26 02:24:13 UTC <mgsloan> sweeet :)
2012-06-26 02:24:55 UTC <ClaudiusMaximus> because 01:30 < ClaudiusMaximus> oh, visual-prof is obsolete because http://hackage.haskell.org/trac/ghc/ticket/4094
2012-06-26 20:57:45 UTC <tgeeky> byorgey: ping
2012-06-26 20:59:39 UTC <byorgey> tgeeky: pong
2012-06-26 21:01:51 UTC <fryguybob> ACTION watches the exciting irc ping pong match.
2012-06-26 21:03:19 UTC <byorgey> hi fryguybob, how's seattle?
2012-06-26 21:03:59 UTC <fryguybob> Portland is going well :D
2012-06-26 21:05:23 UTC <fryguybob> We haven't found much that Rebekah can do though :(
2012-06-26 21:05:40 UTC <tgeeky> pin  ! Just a bit outside!
2012-06-26 21:06:35 UTC <luite> pin?
2012-06-26 21:07:07 UTC <tgeeky> luite: me losing the ping pong patch by virtue of incomplete ping
2012-06-26 21:07:24 UTC <luite> oh
2012-06-26 21:08:27 UTC <byorgey> fryguybob: oh, hehe, portland, right =)
2012-06-26 21:09:40 UTC <byorgey> fryguybob: too bad there's not much for Rebekah to do =(  When we were in Cambridge Joyia had great fun exploring, but that's about 1000 times easier without an infant
2012-06-26 21:11:38 UTC <fryguybob> byorgey: yeah.  Judah does like going strolling though but his schedule is pretty varied at this point.
2012-06-26 21:11:42 UTC <luite> what are yu doing in Portland, and for how ong?
2012-06-26 21:11:52 UTC <luite> +o +l
2012-06-26 21:11:57 UTC <fryguybob> I'm in intern at Intel for the summer.
2012-06-26 21:12:23 UTC <luite> oh cool, what kind of stuff?
2012-06-26 21:12:23 UTC <mgsloan> nice!  For a second I thought you mighta responded to Galois's employment call :D
2012-06-26 21:12:38 UTC <fryguybob> mgsloan: Ha, I wish.
2012-06-26 21:12:52 UTC <fryguybob> I can't really say what I'm doing.
2012-06-26 21:13:00 UTC <luite> aw :(
2012-06-26 21:15:07 UTC <mgsloan> he's working on a heterogeneous architecture for functional computing!!!
2012-06-26 21:15:17 UTC <mgsloan> clearly :)
2012-06-26 21:40:00 UTC <tgeeky> so I think I'm starting to grasp some concepts
2012-06-26 21:40:09 UTC <tgeeky> I may be relating too many things:
2012-06-26 21:42:47 UTC <tgeeky> (cata | folds | using monoids/reducers | "good consumers" )  (ana | unfolds | using <non-det>/arbitraries | "good producers")
2012-06-26 21:43:15 UTC <tgeeky> byorgey: the thing I'm least sure about is "using non-ded/arb"
2012-06-26 21:44:42 UTC <tgeeky> ACTION loads the list of good consumers and producers
2012-06-26 21:46:23 UTC <tgeeky> unfold is certainly not listed as a good producer, but at least foldr is listed as a good consumer :O
2012-06-26 22:18:30 UTC <byorgey> yeah, I'm not sure if non-det/arb fits there
2012-06-26 22:18:49 UTC <byorgey> I don't know if there is really anything parallel with monoids/reducers
2012-06-26 22:19:00 UTC <byorgey> there doesn't seem to be a useful concept of a "comonoid"
2012-06-26 22:20:11 UTC <byorgey> unfoldr is a good producer as far as I know.
2012-06-26 22:20:35 UTC <byorgey> ACTION -> off to pick up his wife and son from the airport
2012-06-27 04:53:33 UTC <tgeeky> ha! new apollonian fractal paper: http://opensiuc.lib.siu.edu/cgi/viewcontent.cgi?article=1117&context=math_articles
2012-06-27 19:45:30 UTC <byorgey> tgeeky: "ERROR: This is an invalid URL."
2012-06-27 19:48:20 UTC <luite> hm it worked here
2012-06-27 19:48:41 UTC <luite> still does
2012-06-27 19:48:49 UTC <luite> are you on filtered internet or something?
2012-06-27 19:50:53 UTC <byorgey> oh, strange, looks like the plugin I use to extract links from a terminal somehow chokes on the &
2012-06-27 19:51:06 UTC <byorgey> when I manually type in the part from the & onward it works
2012-06-27 19:51:31 UTC <luite> oh right, i had to quote the url when wgetting it :)
2012-06-27 19:53:55 UTC <byorgey> looks like a cool paper
2012-06-27 19:54:07 UTC <byorgey> of course, it raises the obvious question:
2012-06-27 19:54:18 UTC <byorgey> how can we exploit it to make cool pictures using diagrams? ;)
2012-06-27 20:01:51 UTC <luite> yes
2012-06-27 20:21:02 UTC <ClaudiusMaximus> byorgey: that sounds like an exploitable plugin flaw :/
2012-06-27 20:21:25 UTC <ClaudiusMaximus> ACTION paranoid though
2012-06-27 20:21:38 UTC <byorgey> ClaudiusMaximus: uh, perhaps
2012-06-27 20:22:10 UTC <byorgey> hacking my computer by means of a carefully crafted URL via IRC is left as an exercise for the reader
2012-06-27 20:22:44 UTC <fryguybob> http://google.com/&ls>doh ??
2012-06-27 20:23:42 UTC <ClaudiusMaximus> maybe http://byorgey/?what&gedit
2012-06-27 20:24:17 UTC <byorgey> a prerequisite is that I have to WANT to click on the link for some reason.
2012-06-27 20:24:20 UTC <ClaudiusMaximus> i guess so
2012-06-27 20:24:27 UTC <byorgey> =)
2012-06-27 20:24:50 UTC <fryguybob> http://freecatpictures.com/&ls>doh ??
2012-06-27 20:24:57 UTC <byorgey> also, by "choke" I really meant "leaves out the part after the &"
2012-06-27 21:45:50 UTC <ClaudiusMaximus> byorgey: heh, then my paranoia was completely unjustified
2012-06-27 21:46:09 UTC <ClaudiusMaximus> :)
2012-06-28 16:42:20 UTC <tgeeky_> byorgey: congratulations on your paper being accepted!
2012-06-28 16:42:32 UTC <byorgey> tgeeky_: thanks!
2012-06-28 16:42:40 UTC <byorgey> now to fight with the ACM over copyright!
2012-06-28 16:42:57 UTC <tgeeky_> so you can distribute it yourself?
2012-06-28 16:43:44 UTC <tgeeky_> the paper behind 'ClassLaws' got accepted too. I really like that idea
2012-06-28 16:50:06 UTC <byorgey> not necessarily for any particular purpose, just because on principle I don't want to transfer copyright to them
2012-06-28 16:50:12 UTC <luite> hmm, are the pdfs available somewhere?
2012-06-28 16:50:55 UTC <byorgey> luite: preprints may have been made available by authors on a case-by-case basis.  But there is certainly not a central repository making available all the accepted pdfs.
2012-06-28 16:51:25 UTC <tgeeky_> i'll probably go around and gather up the avilable ones, like I did for ICFP
2012-06-28 16:51:49 UTC <byorgey> tgeeky_: you might want to wait a few weeks
2012-06-28 16:52:03 UTC <byorgey> revised versions are due by July 11
2012-06-28 16:52:06 UTC <tgeeky_> byorgey: for the corrected versions?
2012-06-28 16:52:09 UTC <byorgey> right
2012-06-28 16:52:21 UTC <tgeeky_> maybe so. there's meaningless reddit karma to be had
2012-06-28 16:58:47 UTC <byorgey> "One example: the creator of "A Table of Contents for the Current Issue of TODS" -- consisting of citations and active links to author-versions of the works in the latest issue of TODS -- needs ACM permission because that creator is reproducing an ACM-copyrighted work."
2012-06-28 16:59:10 UTC <byorgey> tgeeky_: awesome, if you make a list of papers accepted to the Haskell Symposium, you're breaking the law!
2012-06-28 16:59:23 UTC <byorgey> ACM sucks
2012-06-28 16:59:56 UTC <byorgey> technically I suppose you're not breaking the law until *after* the proceedings have been actually published
2012-06-28 17:12:14 UTC <luite> hmm, boo
2012-06-28 17:16:35 UTC <tgeeky> i am not reproducing a... I was going to say
2012-06-28 17:16:45 UTC <tgeeky> I haven't seen anything published. If anything, they're violating my copyright!
2012-06-28 17:18:38 UTC <luite> sue them!
2012-06-28 17:22:11 UTC <fryguybob> Hummm, by reading this instead of working I might be violating Moore's law.
2012-06-28 17:23:35 UTC <tgeeky> our overlords *wish* we could live up to moore's law
2012-06-28 17:23:39 UTC <tgeeky> we would be so profitable
2012-06-28 18:20:48 UTC <shapr> byorgey: http://c-71-207-252-122.hsd1.al.comcast.net:3000/hint.html
2012-06-28 18:21:48 UTC <byorgey> shapr: sweet! it works!
2012-06-28 18:21:53 UTC <shapr> yes!
2012-06-28 18:22:14 UTC <shapr> Though with these changes it means "map (+1) [1..9]" requires show $ in front
2012-06-28 18:22:29 UTC <shapr> Since my Display typeclass doesn't have an instance for [a]
2012-06-28 18:22:30 UTC <byorgey> I told the circle to be BLUE instead of green and now it is blue!
2012-06-28 18:22:34 UTC <shapr> yay!
2012-06-28 18:22:47 UTC <shapr> Not very complicated, but it should handle any one line diagram :-)
2012-06-28 18:23:08 UTC <shapr> Also, it handles Markup output from Text.Blaze, but I don't have a demo of that yet.
2012-06-28 18:23:16 UTC <byorgey> cool
2012-06-28 18:23:56 UTC <shapr> This GSoC project has been more exciting that I expected.
2012-06-28 18:24:02 UTC <shapr> If I were to do this in Python, it would be done by now.
2012-06-28 18:24:06 UTC <shapr> and it would be full of bugs.
2012-06-28 18:28:00 UTC <tgeeky> shapr: (circle 3 # fc red # lw -2 ||| circle 25 # fc green # lw 0 :: Diagram Diagrams.Backend.SVG.SVG R2)
2012-06-28 18:28:44 UTC <shapr> :-(
2012-06-28 18:28:47 UTC <shapr> ACTION looks
2012-06-28 18:28:59 UTC <tgeeky> it shouldn't work, but the error message seems unrelated
2012-06-28 18:29:14 UTC <tgeeky> maybe it should work; maybe diagrams makes sense of (-2) linewidth
2012-06-28 18:29:19 UTC <shapr> Why shouldn't it work?
2012-06-28 18:29:22 UTC <byorgey> no, that parses as  lw - 2
2012-06-28 18:29:43 UTC <shapr> Oh, so it expects to get an lw?
2012-06-28 18:31:06 UTC <byorgey> let me try it in ghci and see what error I get
2012-06-28 18:31:28 UTC <tgeeky> still, that's sweet
2012-06-28 18:31:55 UTC <byorgey> yeah, it's basically the same error message.
2012-06-28 18:32:09 UTC <tgeeky> vindication for shapr
2012-06-28 18:32:10 UTC <byorgey> modulo the fact that there's not a Display constraint involved.
2012-06-28 18:32:59 UTC <byorgey> I don't remember what diagrams does with a negative line width, but it shouldn't be an error.
2012-06-28 18:33:17 UTC <byorgey> but lw -2 isn't a negative line width, it's subtracting two from the lw function =)
2012-06-28 18:33:21 UTC <tgeeky> hehe :)
2012-06-28 18:33:54 UTC <shapr> It works with lw (-2)
2012-06-28 18:34:01 UTC <tgeeky> byorgey: can you peek at http://hpaste.org/70578#line121
2012-06-28 18:34:22 UTC <byorgey> tgeeky: sure, what am I looking for?
2012-06-28 18:35:34 UTC <tgeeky> the errors at the bottom
2012-06-28 18:35:39 UTC <tgeeky> they are examples pulled from the paper
2012-06-28 18:35:59 UTC <tgeeky> hlist and list are on page 7
2012-06-28 18:36:09 UTC <tgeeky> (abstract syntax graphs and DSLs)
2012-06-28 18:36:10 UTC <byorgey> oh, this is from the Loh paper on ASGs?
2012-06-28 18:36:12 UTC <byorgey> right
2012-06-28 18:36:28 UTC <tgeeky> i basically started with the Algebra classes, and worked backwards
2012-06-28 18:36:48 UTC <tgeeky> but the examples for hlist and list aren't well typed (or I need to re-associate them, or something)
2012-06-28 18:37:30 UTC <byorgey> oh, you probably just need to specify that ::: is right-associative
2012-06-28 18:37:42 UTC <byorgey> I think the default is infixl 9 or something like that
2012-06-28 18:37:57 UTC <tgeeky> what/how would one check or guess which number to use?
2012-06-28 18:38:00 UTC <byorgey> make it infixr 5 to match (:)
2012-06-28 18:38:19 UTC <byorgey> I usually just pick a "similar" operator and give it the same precedence
2012-06-28 18:38:42 UTC <byorgey> but the precedence is not the issue here, just the L/R associativity
2012-06-28 18:38:55 UTC <tgeeky> yep
2012-06-28 18:39:13 UTC <byorgey> note how the error message says that the first argument of (:::) is  I 3 ::: I (\x -> x) ::: I False
2012-06-28 18:39:27 UTC <byorgey> which is clearly not the right way to parenthesize things
2012-06-28 18:40:22 UTC <byorgey> tgeeky: why give var, letrec, etc. default implementations of 'undefined' ?
2012-06-28 18:40:38 UTC <tgeeky> to stop the compiler from complaining when I was copying/pasting code in from the paper
2012-06-28 18:40:45 UTC <tgeeky> so I could focus on unicode errors and other things
2012-06-28 18:41:50 UTC <tgeeky> yep. as expected, infixr (any number) works fine, infixl (any number fails)
2012-06-28 18:41:51 UTC <byorgey> I mean, as opposed to just omitting them
2012-06-28 18:42:07 UTC <byorgey> you do not need to give default implementations of class methods
2012-06-28 18:42:41 UTC <byorgey> and I would not expect these particular class methods to have default implementations at all.
2012-06-28 18:43:19 UTC <tgeeky> certainly not bindAlg and lamAlg
2012-06-28 18:43:35 UTC <shapr> ACTION sends money to fund byorgey's educational career
2012-06-28 18:43:38 UTC <tgeeky> I'm not sure why. I removed them, and there are no complaints when compiling
2012-06-28 18:43:41 UTC <shapr> schmot guy!
2012-06-28 18:44:37 UTC <byorgey> shapr: you mean my education, or my career as an educator?
2012-06-28 18:44:52 UTC <shapr> hm, e) all of the above
2012-06-28 18:45:03 UTC <shapr> a) you know lots of stuff
2012-06-28 18:45:16 UTC <shapr> b) you do a good job of communicating that stuff to others
2012-06-28 18:45:46 UTC <shapr> So contributing to your education would improve a), and contributing to your career as an educator would improve b).
2012-06-28 18:46:02 UTC <shapr> ACTION considers trying to type-check that sentence...
2012-06-28 18:46:15 UTC <shapr> Nah, I'll just clean up the code and go on to the next feature.
2012-06-28 18:46:26 UTC <tgeeky> screw it, we'll do it live!
2012-06-28 18:47:36 UTC <byorgey> shapr: hehe, thanks!
2012-06-28 18:48:12 UTC <shapr> tgeeky: from that soccer guy?
2012-06-28 18:48:22 UTC <tgeeky> shapr: bill o'rielly
2012-06-28 18:48:27 UTC <tgeeky> when his prompter failed
2012-06-28 19:03:19 UTC <tgeeky> byorgey: so one of the cool things from that recent apollonian paper is a clear description of an isomorphism, whose variables I have renamed:
2012-06-28 19:03:23 UTC <tgeeky> https://gist.github.com/ff954b00733ea86396d5
2012-06-28 19:03:56 UTC <byorgey> tgeeky: oh, I just looked through that paper this morning
2012-06-28 19:04:26 UTC <tgeeky> thoughts?
2012-06-28 19:04:37 UTC <byorgey> tgeeky: hmm, why is it an isomorphism between "negate Nat" <-> Nat^4 ?
2012-06-28 19:05:16 UTC <tgeeky> because one of the terms would be an integer
2012-06-28 19:05:23 UTC <byorgey> one of which terms?
2012-06-28 19:05:26 UTC <tgeeky> the "root" gaskets
2012-06-28 19:05:38 UTC <tgeeky> are things like: (-1,2,2,3,3,6...)
2012-06-28 19:05:44 UTC <byorgey> right
2012-06-28 19:05:48 UTC <tgeeky> if you have the first five terms of any of them, you have them all
2012-06-28 19:06:04 UTC <tgeeky> you have all of the children of that root
2012-06-28 19:06:17 UTC <byorgey> in fact you only need four, right?
2012-06-28 19:06:26 UTC <tgeeky> you need five, but you only need four integers
2012-06-28 19:06:39 UTC <tgeeky> but yes, in fact you only need for
2012-06-28 19:06:56 UTC <byorgey> ok. I still don't see what isomorphism you're talking about
2012-06-28 19:07:42 UTC <byorgey> let's be concrete: which quadruple of Nats does -2 correspond to?
2012-06-28 19:07:52 UTC <tgeeky> (-2,3,6,7,..)
2012-06-28 19:07:57 UTC <tgeeky> but this fails at 3
2012-06-28 19:08:08 UTC <tgeeky> (-3,4,12,13,13) and (-3,5,8,8,12)
2012-06-28 19:08:15 UTC <tgeeky> but they are split (even/odd)
2012-06-28 19:08:26 UTC <tgeeky> so you're ok
2012-06-28 19:08:28 UTC <tgeeky> same for 5
2012-06-28 19:08:31 UTC <tgeeky> you have 3 of them for 6
2012-06-28 19:08:32 UTC <byorgey> huh?
2012-06-28 19:08:36 UTC <tgeeky> look at the table
2012-06-28 19:08:40 UTC <byorgey> then it's not an isomorphism, is it?
2012-06-28 19:08:56 UTC <tgeeky> it's a pair of isomorphisms :)
2012-06-28 19:08:56 UTC <byorgey> if there are two quadruples that correspond to -3
2012-06-28 19:09:11 UTC <byorgey> but you just said there are three of them for 6.
2012-06-28 19:09:22 UTC <tgeeky> yes, but all three of them have a seperate symmetry
2012-06-28 19:09:43 UTC <byorgey> what negative number corresponds to  [7,7,0,99]?
2012-06-28 19:10:22 UTC <tgeeky> hehe :)
2012-06-28 19:10:27 UTC <tgeeky> I see what you're getting at.
2012-06-28 19:10:39 UTC <tgeeky> there is context involved
2012-06-28 19:10:54 UTC <tgeeky> the kind of terms you can write are those shaped like B0,B1,B2,B3,B4
2012-06-28 19:11:00 UTC <byorgey> I certainly agree that the paper gives a nice algorithm for associating some quadruples with each negative number.
2012-06-28 19:11:16 UTC <byorgey> I just take issue with your use of the term "isomorphism" since it is nothing of the sort.
2012-06-28 19:12:13 UTC <luite> http://c-71-207-252-122.hsd1.al.comcast.net:3000/hint.html <- look what shapr made
2012-06-28 19:12:52 UTC <byorgey> yeah, shapr shared it in here earlier
2012-06-28 19:12:56 UTC <byorgey> pretty sweet =)
2012-06-28 19:13:14 UTC <luite> oh i was away for a while
2012-06-28 19:15:49 UTC <luite> shapr: you can make an instance Show a => Display a where display x = DisplayResult { result = T.pack (show a), clientType = "string", ... }
2012-06-28 19:16:09 UTC <luite> you'll likely need OverlappingInstances pretty quickly if you do that
2012-06-28 19:21:57 UTC <tgeeky> byorgey: oh! how about from:  (i + V, 0 - V,  r + V) and (V + i + r - 2*e , 0 - V , V + i + r + 2*e)
2012-06-28 19:22:39 UTC <tgeeky> that's from: (N,Z,N) <-> (N,Z,N) so there's a chance! :O
2012-06-28 19:25:10 UTC <tgeeky> byorgey: I agree that I was being stupid with the word 'isomorphism' earlier, as I know what that means and knew that I didn't have one :(
2012-06-28 19:28:23 UTC <luite> hmm
2012-06-28 19:29:47 UTC <tgeeky> though there is something decidedly binary about isomorphism
2012-06-28 19:39:23 UTC <luite> shapr: so what's next?
2012-06-28 19:57:01 UTC <shapr> luite: getLine most likely.
2012-06-28 19:57:17 UTC <shapr> Supposedly GHC.IO will let me redirect handles.
2012-06-28 20:07:03 UTC <luite> ah
2012-06-28 20:26:38 UTC <luite> hmm, i can't find how
2012-06-28 20:26:46 UTC <luite> do you know which functions you need for this?
2012-06-28 20:28:15 UTC <shapr> luite: I got distracted by lunch, but yes: http://hackage.haskell.org/package/silently-1.2.0.2
2012-06-28 20:28:52 UTC <luite> ah hDuplicateTo should do the trick
2012-06-28 20:29:42 UTC <shapr> ACTION reads http://hackage.haskell.org/packages/archive/base/4.2.0.0/doc/html/GHC-IO-Handle.html
2012-06-28 20:29:42 UTC <luite> ah that's exactly what silently does
2012-06-28 20:30:20 UTC <luite> dunno if hCapture is enough for this
2012-06-28 20:40:26 UTC <luite> shapr: are you going to ahve some special request to send ctrl-C things to terminate getLine etc?
2012-06-28 20:40:36 UTC <shapr> um
2012-06-28 20:40:43 UTC <shapr> I hadn't thought about it.
2012-06-28 20:41:32 UTC <luite> could be useful for quick demos, and make it less likely for users to ruin their session :)
2012-06-28 20:41:57 UTC <luite> you can do the IO in a forkIOd thread, and use throwTo to kill it
2012-06-28 20:43:22 UTC <shapr> hrm
2012-06-28 20:43:41 UTC <luite> but i have to admit that i don't really know the best way to do this, the DisplayResult things are clearly not enough for this
2012-06-28 20:44:10 UTC <shapr> yah, really.
2012-06-28 20:44:14 UTC <shapr> ACTION thinks
2012-06-28 20:44:33 UTC <shapr> Eh, I can push this feature to later and work on other stuff first.
2012-06-28 20:44:48 UTC <luite> i never planned to implement this myself, expected that every evaluation will produce at least a result
2012-06-28 20:44:58 UTC <luite> that should also make reactive user interfaces possible
2012-06-28 20:45:03 UTC <luite> but not a true ghci simulation
2012-06-28 20:45:25 UTC <shapr> Yah, I'm wondering how close is close enough.
2012-06-28 20:45:57 UTC <shapr> The primary goal is to get people to collaborate on learning Haskell.
2012-06-28 20:46:17 UTC <shapr> The secondary goal is to support richer output from interactive Haskell, for things like livecoding.
2012-06-28 20:46:20 UTC <luite> I think it is possible to do it though, when you eval something, you enter some stdout/stdin IO mode in the terminal, whcih remains until either you send the kill signal, or some result is produced
2012-06-28 20:48:01 UTC <luite> the type of the expression would be IO DisplayResult
2012-06-28 20:49:15 UTC <shapr> Apfelmus wants ghci-style "import Data.Char" to work on the console.
2012-06-28 20:49:31 UTC <shapr> ACTION digs around a bit
2012-06-28 20:50:35 UTC <shapr> * Better javascript api * split file load and expr send into separate calls * bind vars from IO action (let x <- readFile "foo")
2012-06-28 20:51:01 UTC <shapr> Those are features in the plan.
2012-06-28 20:51:20 UTC <luite> ah i personaly thought that wouldn't be necessary if you can already live-edit a haskell module in codemirror
2012-06-28 20:51:27 UTC <shapr> Personally, I want to implement the shared editing component so people can actually USE HyperHaskell!
2012-06-28 20:51:35 UTC <shapr> luite: explain?
2012-06-28 20:52:02 UTC <luite> shapr: just have the file you're editing as a top level module, and add your import statements there instead of on the console
2012-06-28 20:52:32 UTC <luite> i use autorefresh, so no :r required
2012-06-28 20:52:37 UTC <shapr> autorefresh?
2012-06-28 20:53:28 UTC <luite> yeah i reload the module you're editing automatically while you type
2012-06-28 20:53:30 UTC <shapr> Hm, the idea right now is that loading files into the interpreter is a separate operation from evaluating expressions or bringing modules into scope.
2012-06-28 20:53:52 UTC <shapr> And Hint does appear to support setImportsQ without reloading the file.
2012-06-28 20:54:01 UTC <shapr> That would effectively give :m + Data.Foo
2012-06-28 20:54:28 UTC <shapr> luite: So you pretty much ignore IO stuff then?
2012-06-28 20:54:35 UTC <shapr> No let bindings?
2012-06-28 20:55:48 UTC <luite> yeah no global IO bindings
2012-06-28 20:56:06 UTC <shapr> Hm, that would simplify many things.
2012-06-28 20:56:51 UTC <luite> but i was going for live .lhs editing with expressions, not a ghci session
2012-06-28 20:57:37 UTC <shapr> How did you do expressions?
2012-06-28 20:58:48 UTC <luite> load lhs, then eval expr, no local state. was looking into adding more state, but tht's difficult to combine with "webscale"
2012-06-28 20:59:08 UTC <shapr> Ah right, you were doing persistent server processes and all that.
2012-06-28 21:00:30 UTC <luite> shapr: yeah, problem with bindings is that they are lost after 2 minutes idle time
2012-06-28 21:00:39 UTC <shapr> hm, makes sense
2012-06-28 21:00:40 UTC <luite> or quicker if there's a lot of concurrent users
2012-06-28 21:00:41 UTC <shapr> otherwise they could pile up
2012-06-28 21:01:16 UTC <luite> you can keep the process running, so that should give you easier bindings and long-running computations with IO :)
2012-06-28 21:01:22 UTC <shapr> Right
2012-06-28 21:01:38 UTC <shapr> Hm, now I want to put in the shared editing component, that's the next step towards real usability.
2012-06-28 21:01:56 UTC <shapr> That's the next step towards being able to develop HyperHaskell inside HyperHaskell :-)
2012-06-28 21:05:10 UTC <luite> i wanted to be "webscale" not only for the website, but because it would make it easier to have distributed computations, have the gui on your client, choose some backend nodes to compute your stuff. bit like mathematica
2012-06-28 21:05:23 UTC <shapr> That would be nifty.
2012-06-28 21:05:24 UTC <luite> dunno if it's a god idea
2012-06-28 21:05:26 UTC <shapr> I'm aiming much lower than that.
2012-06-28 21:05:49 UTC <luite> dunno if it's lower, if gives you some other possibilities
2012-06-28 21:06:26 UTC <luite> and i'm not sure my stuff will get finished, i haven't exactly been making much progress
2012-06-28 21:06:54 UTC <shapr> Maybe you could figure out which parts you have that could be easily completed and released as a separate hackage?
2012-06-28 21:07:52 UTC <luite> there aren't really separate parts, some small stuff, a small package that implements some of the things you've already done now for example
2012-06-28 21:08:00 UTC <shapr> Then you could finish and release what you can, dump the rest onto github as "not gonna finish it", and go onto to something more fun.
2012-06-28 21:08:47 UTC <luite> meh not sure, your project is probably going to be a better basis anyway, and lots of other people are doing more interesting stuff with the editors
2012-06-28 21:08:51 UTC <shapr> Throw the whole thing onto github and get a job writing Xbox360 games in C# ? :-)
2012-06-28 21:09:09 UTC <luite> meh
2012-06-28 21:10:08 UTC <shapr> Hm, I have another meeting with apfelmus tomorrow... and the editing component isn't on the mid-term goals at all...
2012-06-28 21:10:11 UTC <shapr> but
2012-06-28 21:10:14 UTC <luite> tbh any programming isn't going great so i'm more likely to look for some (relatively) unskilled labor
2012-06-28 21:10:16 UTC <shapr> I think I want to do it anyway :-)
2012-06-28 21:10:33 UTC <shapr> luite: Fair enough. What about playing music?
2012-06-28 21:11:01 UTC <luite> i can only play the piano, a bit
2012-06-28 21:11:24 UTC <luite> but not good enough to get money, or girls
2012-06-28 21:12:19 UTC <shapr> haha
2012-06-28 21:12:25 UTC <shapr> Do you enjoy it?
2012-06-28 21:12:46 UTC <shapr> My brain gets unbalanced if I don't do a certain amount of things not for money/girls/others each day.
2012-06-28 21:13:13 UTC <alpounet> shapr, hey great job! :)
2012-06-28 21:13:26 UTC <shapr> yay!
2012-06-28 21:14:04 UTC <luite> shapr: hmm, not greatly
2012-06-28 21:14:25 UTC <shapr> alpounet: Thanks! The ghci part is working with rich return types, now I want to add the shared editing component so people will be able to *use* it!
2012-06-28 21:14:32 UTC <luite> i kind of don't really have a goal
2012-06-28 21:14:45 UTC <shapr> luite: fair enough
2012-06-28 21:15:05 UTC <luite> perhaps just enjoying playing should be the goal by itself, but dunno
2012-06-28 21:15:29 UTC <alpounet> shapr, yeah that'd be awesome
2012-06-28 21:15:36 UTC <shapr> That's been my goal for most of my life, to find what things I can do that are the mos fun, and then try to get paid to do that :-)
2012-06-28 21:15:49 UTC <alpounet> you're quite on schedule i think to complete what you proposed
2012-06-28 21:16:01 UTC <shapr> But the fun things change for me, first it was art, then Magic The Gathering, then programming Java, then Python, then Haskell
2012-06-28 21:16:09 UTC <shapr> alpounet: I certainly hope so!
2012-06-28 21:16:15 UTC <luite> hmm
2012-06-28 21:16:38 UTC <shapr> I don't want one of the GSoC haskell.org student slots to have been wasted on me.
2012-06-28 21:17:01 UTC <shapr> I would be much happier if at the end of GSoC people are able to say "It's a good thing we chose shapr, his project worked out!"
2012-06-28 21:17:10 UTC <alpounet> yeah
2012-06-28 21:17:31 UTC <alpounet> im a bit disappointed that only two of the GSoC students communicate about their project
2012-06-28 21:17:35 UTC <shapr> Oh?
2012-06-28 21:17:45 UTC <alpounet> (as far as i know at least)
2012-06-28 21:17:48 UTC <luite> i liked taking pictures, and now know most of the technical stuff pretty well, but i don't feel i'm creative enough
2012-06-28 21:17:52 UTC <shapr> I've been focussed on my own project, I haven't looked at any others.
2012-06-28 21:18:14 UTC <shapr> alpounet: Er, I assume I'm one of the communicative ones? :-)
2012-06-28 21:18:18 UTC <shapr> If yes, who's the other?
2012-06-28 21:18:27 UTC <alpounet> the one who works on "my" project
2012-06-28 21:18:40 UTC <alpounet> (scoutess)
2012-06-28 21:18:52 UTC <alpounet> well, the one i'm the mentor of, to be precise
2012-06-28 21:18:56 UTC <shapr> ACTION looks on alpounet's blog
2012-06-28 21:18:57 UTC <luite> i only know a bit about mark dittmers project, who announced the file watching lib last week or so
2012-06-28 21:19:13 UTC <alpounet> yeah
2012-06-28 21:19:20 UTC <alpounet> and then there's the sandboxed cabal one
2012-06-28 21:19:25 UTC <alpounet> which i haven't heard of at all
2012-06-28 21:19:46 UTC <alpounet> despite following the haskell reddit, planet haskell, -cafe,  ...
2012-06-28 21:20:02 UTC <shapr> Where's your student's communications?
2012-06-28 21:20:14 UTC <luite> the next step in mark's project is to get some autoreload bot, but i haven't heard about it, i'm suposed to help with this though :)
2012-06-28 21:20:25 UTC <byorgey> luite: nonsense.  in my experience, creativity mostly comes with intentional practice.  if you like taking pictures, then take lots of pictures, and be intentional about trying to improve, giving yourself various constraints and challenges, etc.
2012-06-28 21:20:26 UTC <alpounet> shapr, http://projectscoutess.blogspot.com/
2012-06-28 21:20:44 UTC <alpounet> shapr, it's lightweight, but still
2012-06-28 21:20:52 UTC <alpounet> i'm pushing him to write about his work
2012-06-28 21:20:57 UTC <alpounet> :p
2012-06-28 21:21:01 UTC <shapr> Awesome!
2012-06-28 21:21:03 UTC <byorgey> everyone is creative in a basic sense. and that's really all you need.
2012-06-28 21:21:14 UTC <shapr> Whoa, this guy wrote a dissertation using Haskell?
2012-06-28 21:21:31 UTC <alpounet> he studied Haskell at uni
2012-06-28 21:21:35 UTC <shapr> Wow, nifty!
2012-06-28 21:21:37 UTC <alpounet> with Graham Hutton i think
2012-06-28 21:21:39 UTC <alpounet> iirc
2012-06-28 21:21:40 UTC <shapr> WOW
2012-06-28 21:21:44 UTC <shapr> Even more impressive!
2012-06-28 21:21:51 UTC <shapr> I'd love to study with gmh
2012-06-28 21:21:56 UTC <alpounet> that's one of the things that caught my attention when he came to be to postulate for a scoutess GSoC :p
2012-06-28 21:22:01 UTC <shapr> I've had two C++ classes, that's the extent of my education.
2012-06-28 21:22:51 UTC <shapr> Not that I let that stop me.
2012-06-28 21:22:54 UTC <alpounet> i haven't had any programming class, and i prefer keeping it that way until i'm over with my studies :p
2012-06-28 21:22:59 UTC <shapr> haha!
2012-06-28 21:23:05 UTC <shapr> alpounet: What are you studying?
2012-06-28 21:23:26 UTC <alpounet> math
2012-06-28 21:23:34 UTC <shapr> Oh, neat!
2012-06-28 21:23:47 UTC <shapr> Oh hey, does scoutess output graphviz files?
2012-06-28 21:23:48 UTC <alpounet> specializing in cryptography next year, but have been focusing a lot on the abstract and funny maths so far :p
2012-06-28 21:24:01 UTC <alpounet> scoutess doesn't output much right now :-Â°
2012-06-28 21:24:01 UTC <shapr> Merkle is the man :-)
2012-06-28 21:24:36 UTC <luite> byorgey: hmm, i think what i really meant is that i didn't really get the results or satisfaction i hoped from trying to improve creatively
2012-06-28 21:26:06 UTC <byorgey> luite: ah, OK.
2012-06-28 21:26:08 UTC <shapr> luite: Did you get closer?
2012-06-28 21:26:35 UTC <byorgey> alpounet: what kind of abstract and funny maths?
2012-06-28 21:26:47 UTC <byorgey> ACTION likes abstract and funny maths
2012-06-28 21:26:54 UTC <alpounet> byorgey, my all-time favorite has been my algebraic topology course
2012-06-28 21:27:12 UTC <byorgey> ah, yeah, algebraic topology is cool
2012-06-28 21:27:16 UTC <byorgey> at least the little I know
2012-06-28 21:27:19 UTC <luite> shapr: dunno, it's kind of difficult to define closer, unless you have some metric space of course
2012-06-28 21:27:53 UTC <mgsloan> ACTION still needs to pitch in on the feature / design discussions regarding both Haskell-Type-Exts, and HyperHaskell...  The original requests for input were back when school was getting intense
2012-06-28 21:28:09 UTC <shapr> One of my new in-laws does topology: http://sofia.nmsu.edu/~ramras/
2012-06-28 21:28:12 UTC <alpounet> byorgey, actually, i had a "basic" topology & differential geometry course during the first semester, taking about manifolds, the fundamental group, etc, until we classified the surfaces
2012-06-28 21:28:34 UTC <alpounet> then during the second semester, we covered covering spaces, a few homologies and some cohomology
2012-06-28 21:29:01 UTC <alpounet> but the latter, we actually did the course ourselves, in turn, studying before the class for a few days, and then presenting the course to the others
2012-06-28 21:31:06 UTC <alpounet> for me it's been the kind of math that just breaks your brain in pieces when you first encounter it, but then, when you have the "aha!" moments, you really feel you've come a long way, you understood something quite important and quite ""hard""
2012-06-28 21:31:32 UTC <luite> i guess i should've taken more of those type of courses...
2012-06-28 21:31:43 UTC <shapr> luite: You still can, right?
2012-06-28 21:31:47 UTC <luite> no
2012-06-28 21:32:00 UTC <alpounet> luite, i suggest you buy "The Princeton Companion"
2012-06-28 21:32:04 UTC <luite> well, i can re-enroll, but i can't afford it
2012-06-28 21:32:08 UTC <luite> alpounet: oh already have it
2012-06-28 21:32:24 UTC <alpounet> it's what got me in this
2012-06-28 21:32:37 UTC <alpounet> :p
2012-06-28 21:32:38 UTC <luite> have read some of it, but the level of the individual sections varies greatly
2012-06-28 21:32:50 UTC <luite> some are really difficult to follow, while others are almost too easy
2012-06-28 21:32:51 UTC <alpounet> luite, well, i don't read it linearly
2012-06-28 21:32:56 UTC <alpounet> when i want to read some of it
2012-06-28 21:33:01 UTC <alpounet> i just look at the table of contents
2012-06-28 21:33:03 UTC <alpounet> and pick one section
2012-06-28 21:33:37 UTC <alpounet> luite, also
2012-06-28 21:33:47 UTC <alpounet> i can recommend some online and free texts, depending on the topics
2012-06-28 21:33:50 UTC <luite> i kinda didn't pick those courses because i was a bit afraid to fail
2012-06-28 21:34:00 UTC <luite> oh i already have lots of texts available, more than i could read
2012-06-28 21:34:27 UTC <alpounet> hm
2012-06-28 21:34:34 UTC <luite> and free lecture notes from utrecht and other universities
2012-06-28 21:34:40 UTC <mgsloan> shapr -  for collaborative editing, I've always thought it's best to avoid anything looking like complicated merge logic, because that can lead to some unexpected behaviors from the user perspective.  Instead, I think it'd be good to synchronize cursor information, and have a special style for changes that haven't been committed.  Then, a request to commit gets sent out, and the server / clients grant permission
2012-06-28 21:35:05 UTC <mgsloan> then, the style changes from being "uncommitted" change to being actually in the code
2012-06-28 21:35:30 UTC <alpounet> luite, what i told you a few weeks ago still holds
2012-06-28 21:35:35 UTC <mgsloan> it'd also be good to be able to see others' changes / fold them, while not having it effect your working copy
2012-06-28 21:35:46 UTC <shapr> mgsloan: I was just going to use CodeMirror or something.
2012-06-28 21:35:59 UTC <luite> alpounet: oh i probably have forgotten
2012-06-28 21:36:00 UTC <shapr> mgsloan: or perhaps http://sharejs.org/
2012-06-28 21:36:13 UTC <luite> sharejs uses codemirror!
2012-06-28 21:36:26 UTC <luite> at least i think in one oft he examples?
2012-06-28 21:36:36 UTC <shapr> oh, ok then!
2012-06-28 21:37:02 UTC <alpounet> i really think you should take a break from the pressure you're putting on yourself (like forcing yourself to know the most you can, learn again and again and again, also the pressure relative to your projects), really just call some friends, organize some cool stuffs that you like to do, get drunk every once in a while, just try to relax and give yourself a break
2012-06-28 21:37:16 UTC <shapr> Yah
2012-06-28 21:37:31 UTC <luite> oh i thought you meant something about math
2012-06-28 21:37:47 UTC <mgsloan> shapr: Ah, that's probably a good call!  It makes sense that someone would have solved this properly elsewhere
2012-06-28 21:37:57 UTC <alpounet> last year i've spent 3 months not writing a single line of code, not doing math at all, just went out during 3 months and had a summer job too
2012-06-28 21:38:53 UTC <luite> i don't really have friends i could call to organize some stuff, guess you don't really need them to get drunk though...
2012-06-28 21:38:56 UTC <shapr> mgsloan: Yah, most of my project is "stitch together libraries", but I don't know of any other webapps like mine.
2012-06-28 21:39:13 UTC <alpounet> i picked up girls (was after a hard break up), drank quite much, organized some cool weekends with friends camping etc, really that helped me a lot
2012-06-28 21:39:42 UTC <alpounet> luite, then meet such people and become friends with them
2012-06-28 21:39:44 UTC <alpounet> :p
2012-06-28 21:39:54 UTC <luite> hehe, hmm...
2012-06-28 21:40:04 UTC <shapr> Graduating from college is like a hard break up, I think :-)
2012-06-28 21:40:33 UTC <alpounet> ACTION thinks we are going to need a #diagrams-blah soon
2012-06-28 21:40:37 UTC <shapr> haha
2012-06-28 21:40:38 UTC <luite> hehe
2012-06-28 21:41:31 UTC <alpounet> otherwise luite telling about his smoking hot babes encounters will interfere with the serious discussions
2012-06-28 21:41:41 UTC <mgsloan> shapr: struth!
2012-06-28 21:41:50 UTC <shapr> haha!
2012-06-28 21:42:12 UTC <luite> bah
2012-06-28 21:43:12 UTC <shapr> Ugh, do I work on the shared editing component that's fun, or do I work on the stuff I said I would have done by the mid-term?
2012-06-28 21:43:14 UTC <shapr> ACTION thinks
2012-06-28 21:43:44 UTC <alpounet> ACTION clones shapr 
2012-06-28 21:43:53 UTC <alpounet> there you go buddy, err buddies
2012-06-28 21:43:59 UTC <shapr> Then there would be TWO shaprs who wouldn't want to do the boring parts :-)
2012-06-28 21:44:34 UTC <alpounet> yeah
2012-06-28 21:44:40 UTC <alpounet> but the shared editing would be done in half the time !
2012-06-28 21:44:59 UTC <shapr> that's true
2012-06-28 21:45:41 UTC <alpounet> mapM_ forkShapr tasks
2012-06-28 21:46:27 UTC <shapr> ha
2012-06-28 21:46:44 UTC <mgsloan> ACTION wishes he could fork a process off
2012-06-28 21:46:59 UTC <mgsloan> hella have type-diagrams by now
2012-06-28 21:47:14 UTC <luite> perhaps my fork would be more productive :p
2012-06-28 21:47:23 UTC <shapr> Bah, I think I'll go to the coffee shop, buy some coffee and attempt to integrate sharejs.org
2012-06-28 21:48:37 UTC <luite> shapr: oh you should know that you should probably need to bring some proof that you live in NL if you want to buy weed in a coffee shop here
2012-06-28 21:48:49 UTC <luite> if you want to move ;p
2012-06-28 21:49:00 UTC <alpounet> yeah that's new
2012-06-28 21:49:02 UTC <alpounet> heard about it
2012-06-28 21:49:15 UTC <luite> the coffee shops don't like it, perhaps there will be some changes
2012-06-28 21:49:32 UTC <alpounet> luite, i might call you if i come over in the NL again :p
2012-06-28 21:59:08 UTC <luite> alpounet: hehe i have to admit that i've never bought weed in a coffee shop though... only coffee. last time i've been to something like that was years ago with a guy who bought some stuff for space cake
2012-06-28 22:00:20 UTC <alpounet> hah
2012-06-28 22:00:23 UTC <alpounet> never tried weed?
2012-06-28 22:00:37 UTC <alpounet> (yes, we're open minded here, right?))
2012-06-28 22:00:47 UTC <tgeeky> open minded, but un-encrypted
2012-06-28 22:01:02 UTC <luite> alpounet: oh i tried, never bought
2012-06-28 22:02:08 UTC <mgsloan> #diaGRAMS
2012-06-28 22:03:48 UTC <luite> i don't know much of the jargon :p some time ago some kid who looked maybe 14 or 15 asked me to buy some for him (i think you need to be 18), but it took me a while before i understood what he meant...
2012-06-28 22:04:21 UTC <alpounet> hah
2012-06-28 22:05:22 UTC <luite> anyway i didn't feel it was right to buy it for a 14 year old stranger...
2012-06-28 22:06:34 UTC <alpounet> it was the right move i think
2012-06-28 22:09:20 UTC <shapr> luite: I'm a weirdo, I don't do weed, alcohol, nicotine, etc
2012-06-28 22:11:24 UTC <shapr> Just exercise and music.
2012-06-28 22:11:52 UTC <luite> i don't think i've tried properly actually, i've smoked a joint two or three times, had a slice of the aforementioned space cake, but never really noticed effects.
2012-06-28 22:12:10 UTC <shapr> I tried weed a few times about twenty years ago, wasn't impressed.
2012-06-28 22:12:45 UTC <luite> i do drink alcohol, not much, one or two bottles of beer a month or so
2012-06-28 22:13:03 UTC <alpounet> shapr, i do what you do and what you don't.
2012-06-28 22:13:22 UTC <alpounet> don't know what that reveals about me hah
2012-06-28 22:13:49 UTC <luite> shapr: what instrument do you play?
2012-06-29 04:31:02 UTC <shapr> luite: Guitar, but I want to buy a cajon: http://en.wikipedia.org/wiki/Cajon
2012-06-29 04:33:57 UTC <edwardk> heya shapr
2012-06-29 05:01:43 UTC <shapr> edwardk: y0 y0
2012-06-29 21:42:46 UTC <mgsloan> tgeeky / all else interested, I've got a mostly re-written version of my superclass-instances brainstorming doc: https://github.com/mgsloan/Haskell-Re-Syntaxed/blob/master/instanceTemplates.md
2012-06-29 22:13:08 UTC <luite> hmm
2012-06-29 22:16:15 UTC <mgsloan> yeah, I still really need to explain how this differs, and why it's better than prior superclass defaults proposals
2012-06-29 22:16:32 UTC <mgsloan> but I'm pleased with the new syntax - no new reserved names!
2012-06-29 22:19:56 UTC <luite> the new doc is certainly far more readable :)
2012-06-29 22:24:50 UTC <mgsloan> thanks :)  yeah, the old one was pretty much stream-of-consciousness
2012-06-29 22:29:57 UTC <tgeeky> mgsloan: I haven't read the document in order, but you need to find a more compelling example than breaking up Num
2012-06-29 22:30:10 UTC <tgeeky> mgsloan: especially when you don't actually propose a change in Num
2012-06-29 22:30:19 UTC <mgsloan> probably so
2012-06-29 22:30:43 UTC <mgsloan> I guess I figure that Haskellers are the sort that will be like "well, if I can do that, I can do _anything_ of that sort"
2012-06-29 22:30:46 UTC <tgeeky> perhaps include an example for breaking up (->) into a difunctor
2012-06-29 22:31:01 UTC <luite> oh i thought the num example was ok
2012-06-29 22:31:08 UTC <tgeeky> it's fine, it's just not compelling
2012-06-29 22:31:15 UTC <luite> perhaps a bit long with the Absable stuff
2012-06-29 22:31:27 UTC <tgeeky> mgsloan: also, check out:
2012-06-29 22:31:54 UTC <tgeeky> http://www.andres-loeh.de/ASGDSL/ASGDSL.pdf
2012-06-29 22:32:02 UTC <mgsloan> my issue with the other ways of breaking up Num is that I don't think the prelude should build in terminology from algebra
2012-06-29 22:32:33 UTC <tgeeky> mgsloan: check out section 6.2, 6.3, 6.4, 6.5
2012-06-29 22:32:34 UTC <tgeeky> of that paper
2012-06-29 22:33:04 UTC <luite> does anyone here have experience with protocols for realtime collaborative text editing?
2012-06-29 22:33:22 UTC <tgeeky> luite: like google Wave or whatever? No, but I've always been interested
2012-06-29 22:33:30 UTC <tgeeky> luite: and I saw your discussion about it
2012-06-29 22:33:40 UTC <luite> oh where did i discuss it?
2012-06-29 22:33:44 UTC <mgsloan> luite: not real experience, but it's one of my favorite conceptual problems
2012-06-29 22:33:56 UTC <tgeeky> luite: in #haskell-blah?
2012-06-29 22:34:23 UTC <luite> tgeeky: oh i must've forgotten...
2012-06-29 22:34:25 UTC <tgeeky> luite: which part of the problem are you focused on?
2012-06-29 22:37:55 UTC <luite> well, the end goal is kinda practical, get a working collaborative haskell code editor for shaprs gsoc project, with a haskell websocket server. the problems are also fairly general now: how to represent changes and versions to make it as robust as possible: signal unresolvable conflicts early and guarantee eventual consistency
2012-06-29 22:38:51 UTC <tgeeky> ok, so I'm to envision you and I working on a single haskell block of code
2012-06-29 22:38:54 UTC <tgeeky> both in the browser
2012-06-29 22:39:05 UTC <luite> are delete/insert/replace + position commands enough?
2012-06-29 22:39:12 UTC <luite> oh, you may assume that the server keeps a master copy
2012-06-29 22:39:25 UTC <fryguybob> luite: for n-collaborators or only for two?
2012-06-29 22:39:27 UTC <luite> so no fully distributed version needed
2012-06-29 22:39:30 UTC <luite> fryguybob: n
2012-06-29 22:39:48 UTC <tgeeky> by realtime, you mean that; when I type in something, you see it in your document
2012-06-29 22:39:52 UTC <tgeeky> as I type it
2012-06-29 22:39:54 UTC <fryguybob> oh, not fully distributed.
2012-06-29 22:40:25 UTC <tgeeky> or, weaker, you see blocks of changes which my session say will compile
2012-06-29 22:40:26 UTC <luite> fryguybob: clocks can be unique for each client, they don't need to know the other's
2012-06-29 22:40:36 UTC <luite> tgeeky: realtime as you type
2012-06-29 22:40:55 UTC <tgeeky> and does merge ever happen automatically?
2012-06-29 22:41:01 UTC <tgeeky> or only when someone hits a button?
2012-06-29 22:41:08 UTC <luite> tgeeky: while typing
2012-06-29 22:41:35 UTC <luite> automatically, although i think there could be a setting to delay changes until someone has finished typing a complete function
2012-06-29 22:41:46 UTC <tgeeky> yeah, that's what I was getting at
2012-06-29 22:42:00 UTC <tgeeky> if you imagine each of them sitting at an REPL session on top of an edited document
2012-06-29 22:42:06 UTC <tgeeky> then we only allow saves when the document compiles
2012-06-29 22:42:09 UTC <tgeeky> but either way
2012-06-29 22:42:43 UTC <tgeeky> luite: ok, let's assume that all typed in text is sitting in a structure we call a "cursor"
2012-06-29 22:42:48 UTC <tgeeky> we'll represent in the file as:
2012-06-29 22:43:00 UTC <luite> tgeeky: yeah this is for shaprs thing first, i hope to get a more low level changes-over-websockets-pushing library for this, that will not only work with texts but also with lists, arrays, of cells in a wolfgang doc
2012-06-29 22:43:04 UTC <tgeeky> {- >>> -}
2012-06-29 22:43:25 UTC <tgeeky> {- uuid >>> -} perhaps
2012-06-29 22:44:26 UTC <tgeeky> mgsloan: anything interesting in that paper for you?
2012-06-29 22:44:38 UTC <tgeeky> mgsloan: byorgey reccomended it to me, and I liked it quite a lot.
2012-06-29 22:45:58 UTC <tgeeky> luite: is there any shared-notepad kind of basic session that we can play with for this?
2012-06-29 22:46:52 UTC <luite> tgeeky: the only implementations i know of are not haskell, but you could look at sharejs
2012-06-29 22:47:30 UTC <fryguybob> luite: Group user actions into transactions and then have the server publish a final commit order.  Locally speculate on commits in order and commit the speculation when you see a matching commit order from the server.
2012-06-29 22:50:24 UTC <luite> fryguybob: hm, sounds good, client needs to keep an older version and a list of received commits to replay i guess
2012-06-29 22:50:45 UTC <luite> but some of its own commits might get destroyed when there's a merge problem
2012-06-29 22:51:11 UTC <fryguybob> Right.  Doesn't prevent weird things from happening, but you get consistency.
2012-06-29 22:51:12 UTC <luite> i guess they can be silently ignored, or with a user warning
2012-06-29 22:52:17 UTC <luite> but this is more inefficient than necessary if commits commute
2012-06-29 22:52:22 UTC <fryguybob> clever definitions of your actions can make most of the weird things go away, but not everything.
2012-06-29 22:53:19 UTC <luite> perhaps the server can compute which commits commute and then send each client an individual order
2012-06-29 22:54:00 UTC <fryguybob> For instance, instead of 'Append "blah" to line 23' have 'Append "blah" to the line that was "hello" in version X'
2012-06-29 22:54:49 UTC <fryguybob> Well if the server can figure out what commutes the client could too, so the client could do that optimization.
2012-06-29 22:55:17 UTC <luite> insert blah at position x at commit y, new commit is z
2012-06-29 22:55:47 UTC <luite> don't think you need diff-like things if you just modify based on known commits
2012-06-29 22:56:35 UTC <luite> commit ids may be client-server pair local
2012-06-29 22:57:07 UTC <fryguybob> You do want to be able to avoid huge memory leaks by limiting how far back in history you can reference.
2012-06-29 22:57:49 UTC <luite> not sure, it could be a feature to have history in shaprs application, so you can replay a session
2012-06-29 22:58:05 UTC <luite> but yeah it should be possible to limit history in general :)
2012-06-29 22:59:25 UTC <luite> hmm
2012-06-29 23:00:51 UTC <luite> the commits themselves will change if the order received from the server changes
2012-06-29 23:01:45 UTC <luite> so the client probably needs some way to match his own changes against the ones from the server
2012-06-29 23:03:39 UTC <luite> perhaps it's not necessary and it can be done with just a clock
2012-06-29 23:04:31 UTC <luite> a vector clock with a server version and client version?
2012-06-29 23:05:37 UTC <fryguybob> If you have a server then you have a definitive version.  You do not need to solve the consensus problem.  So the question is just how you will speculate on what consensus will be.
2012-06-29 23:06:54 UTC <luite> right, but the client still needs to know which changes by him are incororated in the latest version from the server
2012-06-29 23:07:21 UTC <luite> otherwise he might assue that his changes have been lost due to conflicts if the server hasn't processed them yet
2012-06-29 23:08:08 UTC <luite> the changes would eventually show up again, but it would probably be not pretty
2012-06-29 23:08:09 UTC <fryguybob> Right, the client sees that in the commited changes list.
2012-06-29 23:08:26 UTC <luite> yes, but the committed changes may differ from his own commits
2012-06-29 23:08:40 UTC <luite> insert x at line n may be changed into insert x at line n+1
2012-06-29 23:08:46 UTC <fryguybob> So you want to handle dropped submissions?
2012-06-29 23:09:49 UTC <fryguybob> Oh, you are saying that the final outcome depends on the commit order.  Yes, you have to rollback speculation.
2012-06-29 23:11:00 UTC <fryguybob> That's where the wierd things happen.  That gets mitagated by making your actions more sematically oriented.
2012-06-29 23:11:41 UTC <fryguybob> But that shouldn't change the overall protocol.
2012-06-29 23:12:09 UTC <edwardk> have you guys seen the without operational transform paper?
2012-06-29 23:12:23 UTC <edwardk> if you're talking about distributed edits and are working interactively then that pretty much solves it
2012-06-29 23:13:23 UTC <edwardk> http://hal.inria.fr/docs/00/07/12/40/PDF/RR-5580.pdf
2012-06-29 23:13:29 UTC <luite> oh i'd seen another one, perhaps this one is better
2012-06-29 23:13:52 UTC <edwardk> global eventual consistency, no vector clock nonsense, easy for use in collaborative editing
2012-06-29 23:14:10 UTC <edwardk> people can take a copy of the page with them, edit it, and connect later, etc.
2012-06-29 23:14:15 UTC <edwardk> and you get a canonical result
2012-06-29 23:14:36 UTC <edwardk> no client has to be considered the master, you can give copies to others, etc.
2012-06-29 23:14:48 UTC <shapr> ok then
2012-06-29 23:15:20 UTC <edwardk> (and it is easy)
2012-06-29 23:15:31 UTC <shapr> ACTION reads the earlier conversation
2012-06-29 23:15:52 UTC <fryguybob> So is Intention preservation specific to the sematics of the text being worked on?
2012-06-29 23:16:04 UTC <fryguybob> ACTION reads further :D
2012-06-29 23:16:56 UTC <edwardk> woot gives you collaborative editing, if you start trompling on each others text you'll see the same result after you merge no matter what order the merges happen, and since you're working interactively you can edit to fix it ;)
2012-06-29 23:18:03 UTC <edwardk> this was a precursor to the ideas that made up google wave. they ultimately decided they needed to add operational transform for efficiency and to support other goals
2012-06-29 23:18:13 UTC <edwardk> but in and of itself its pretty nice
2012-06-29 23:21:21 UTC <shapr> That was unusual.
2012-06-29 23:21:29 UTC <shapr> edwardk's computer has narcolepsy.
2012-06-29 23:21:47 UTC <luite> i'm only at section 3 atm, but it looks like it would not be very efficient to send transacitons this way
2012-06-29 23:22:18 UTC <fryguybob> Well they are also solving consensus.
2012-06-29 23:22:29 UTC <luite> yeah, it's doing more than needed
2012-06-29 23:22:50 UTC <fryguybob> It isn't that different from what I was saying about describing your actions with some semantic information.
2012-06-29 23:24:24 UTC <luite> i'm still not sure that context is needed at all :)
2012-06-29 23:24:31 UTC <luite> since this is a simpler situation
2012-06-29 23:24:34 UTC <fryguybob> Their semantic is insert between 'a' and 'b' (I assume where a and b are unique for that specific checkpoint.
2012-06-29 23:24:47 UTC <luite> yeah
2012-06-29 23:25:56 UTC <luite> all chars in the document are unique somehow, i think?
2012-06-29 23:29:55 UTC <fryguybob> In their case they only add new characters
2012-06-29 23:30:00 UTC <luite> ah yes, defn 1
2012-06-29 23:30:04 UTC <fryguybob> And mark existing ones invisiable
2012-06-29 23:30:28 UTC <luite> they only refer to character ids, not the values
2012-06-29 23:31:16 UTC <fryguybob> I think so.
2012-06-29 23:32:31 UTC <mgsloan> Sorry, got diverted by a call from my parents!
2012-06-29 23:32:35 UTC <luite> hah they've not proven converce :p
2012-06-29 23:32:36 UTC <fryguybob> Humm, if you do have an agreed on version, you can find the minimal unique prefix before an insert.
2012-06-29 23:32:38 UTC <luite> convergence
2012-06-29 23:33:26 UTC <mgsloan> tgeeky: wow, that's cool!!  Oleg used a similar trick in his class to have different interpretations for the lambda calculus.  I /really/ want to write a quasi-quoter that invokes these sorts of functions, so that you can build your own interpretation of different Haskell constructs
2012-06-29 23:33:35 UTC <tgeeky> oh, there you are
2012-06-29 23:33:42 UTC <tgeeky> i just got back too
2012-06-29 23:34:00 UTC <fryguybob> ACTION bbl
2012-06-29 23:34:51 UTC <mgsloan> edwardk: yeah, I like the CRDT approach to this stuff
2012-06-29 23:34:59 UTC <tgeeky> mgsloan: he's not here anymores
2012-06-29 23:35:05 UTC <mgsloan> doh :/
2012-06-29 23:35:07 UTC <shapr> What's CRDT?
2012-06-29 23:35:15 UTC <mgsloan> I wish I'd been here to divert the conversation earlier towards CRDTs
2012-06-29 23:35:17 UTC <tgeeky> commutative something something something
2012-06-29 23:35:19 UTC <shapr> oh
2012-06-29 23:35:26 UTC <shapr> @google commutative crdt
2012-06-29 23:35:30 UTC <mgsloan> pretty much, you make merge into a monoid
2012-06-29 23:35:37 UTC <mgsloan> err even better
2012-06-29 23:35:37 UTC <shapr> preflex: seen lambdabot
2012-06-29 23:35:40 UTC <shapr> ACTION grumbles
2012-06-29 23:35:42 UTC <mgsloan> commutative operation
2012-06-29 23:35:47 UTC <tgeeky> mgsloan: ok
2012-06-29 23:35:48 UTC <shapr> @google commutative crdt
2012-06-29 23:35:51 UTC <tgeeky> mgsloan: we need to work tonight
2012-06-29 23:35:51 UTC <lambdabot> http://hal.inria.fr/inria-00445975/PDF/icdcs09-treedoc.pdf
2012-06-29 23:36:52 UTC <mgsloan> tgeeky: definitely!  That's the plan
2012-06-29 23:37:11 UTC <mgsloan> I've been visiting my friend in NY, but I've pretty much got the weekend to myself
2012-06-29 23:37:21 UTC <tgeeky> mgsloan: ok
2012-06-29 23:37:26 UTC <mgsloan> so yeah, next 8hrs is coding time :P
2012-06-29 23:37:33 UTC <tgeeky> mgsloan: so, here's what I want to do right now:
2012-06-29 23:37:56 UTC <tgeeky> let's re-implement your code in the framework of BindAlg, LamAlg, ArithAlg, etc
2012-06-29 23:38:30 UTC <mgsloan> shapr: the idea can be abstracted from its actual efficient implementation to say that "we associate a unique real position to each character in the document"
2012-06-29 23:39:03 UTC <tgeeky> that's so silly
2012-06-29 23:39:05 UTC <mgsloan> shapr: this lets us always stably insert between two characters, without intermixing
2012-06-29 23:39:18 UTC <tgeeky> you should do that, but on a words or blocks of text
2012-06-29 23:39:40 UTC <mgsloan> yeah, that's what treedoc suggests.
2012-06-29 23:40:10 UTC <mgsloan> tgeeky: which code?  The AST splicers?
2012-06-29 23:40:44 UTC <mgsloan> another option would be to post-process TH or HSE trees into invocations of those classes
2012-06-29 23:40:53 UTC <tgeeky> the instance templates idea
2012-06-29 23:41:10 UTC <mgsloan> ahh gotcha
2012-06-29 23:41:20 UTC <mgsloan> well, my TH code for that is getting there
2012-06-29 23:41:34 UTC <mgsloan> it's theoretically done, but the code that it generates doesn't yet compile
2012-06-29 23:41:51 UTC <mgsloan> what would targetting those classes buy us?
2012-06-29 23:42:48 UTC <tgeeky> I'm not sure. For one, it would let us do all of the tricks listed (inlining, sharing, mutual recursion <-- (this is what's needed to make multiplate useful))
2012-06-29 23:43:28 UTC <mgsloan> luite: as far as the efficiency of transactions using this method, I think most CRDTs can be viewed from an operational (sending deltas) perspective, or a more pure data view
2012-06-29 23:43:56 UTC <mgsloan> the more pure perspective is nice for thinking about the eventual consistency properties, but deltas are of course better
2012-06-29 23:43:58 UTC <tgeeky> mgsloan: I'll work on that, you do you.
2012-06-29 23:44:13 UTC <mgsloan> www.github.com/mgsloan/crdts
2012-06-29 23:44:41 UTC <tgeeky> s/s//
2012-06-29 23:44:46 UTC <tgeeky> https://github.com/mgsloan/crdt
2012-06-29 23:44:50 UTC <mgsloan> ahh yeah
2012-06-29 23:45:09 UTC <mgsloan>  I didn't actually get around to implementing the more interesting text crdts
2012-06-29 23:45:18 UTC <tgeeky> mgsloan: so your class Function in crdt is "just" a difunctor?
2012-06-29 23:45:19 UTC <mgsloan> but this does some naive impls of the fundamental ones
2012-06-29 23:45:23 UTC <mgsloan> yeah
2012-06-29 23:45:37 UTC <mgsloan> I kinda ended up writing a new Prelude while writing that stuff :)
2012-06-29 23:45:53 UTC <mgsloan> because I was heavily leveraging newtype deriving
2012-06-29 23:47:28 UTC <mgsloan> tgeeky: so, not sure I understand the benefits of applying the concepts in the paper to instance templates
2012-06-29 23:47:47 UTC <mgsloan> I mean, I'm definitely relying on GHC to optimize the generated code
2012-06-29 23:47:57 UTC <tgeeky> mgsloan: so if you had a set of inequalities like this, what kind of "partial order" or whatever would you have?:
2012-06-29 23:48:01 UTC <luite> tnx i'll read that tomorrow
2012-06-29 23:48:15 UTC <mgsloan> (and even if it doesn't, all that's needed is a prototype)
2012-06-29 23:48:27 UTC <tgeeky> 0 <= e <= V `div` sqrt(3)    ;   2e <=  i  <=  r         where r = (v^2 + e^2) / i
2012-06-29 23:48:47 UTC <tgeeky> how many partial orders do you have there?
2012-06-29 23:49:17 UTC <mgsloan> luite: This is my favorite crdt's paper - the github repo above was my effort towards implementing it http://hal.inria.fr/docs/00/55/55/88/PDF/techreport.pdf
2012-06-29 23:49:18 UTC <tgeeky> all variables are Naturals
2012-06-29 23:50:23 UTC <luite> mgsloan: oh i was already reading that, did you link that earlier?
2012-06-29 23:50:32 UTC <mgsloan> oh, maybe edwardk did
2012-06-29 23:50:40 UTC <luite> oh i think your github thing
2012-06-29 23:50:54 UTC <mgsloan> ahh
2012-06-29 23:51:14 UTC <luite> it has french so it's good
2012-06-29 23:51:29 UTC <mgsloan> yeah, it's the same people as treedoc / the edwardk link, but it's nicely systematic
2012-06-29 23:51:45 UTC <mgsloan> tgeeky: hmm, not sure!
2012-06-29 23:52:07 UTC <tgeeky> mgsloan: maximum/minimum?
2012-06-29 23:52:07 UTC <luite> yes tnx, it's much more recent than edwardks, and looks interesting
2012-06-29 23:52:12 UTC <tgeeky> can you just count the <=
2012-06-29 23:52:16 UTC <luite> more pictures too
2012-06-29 23:55:07 UTC <mgsloan> tgeeky: well, I guess I'm not sure what you mean by "how many partial orders", because the instance templates stuff of course just gives you one per datatype
2012-06-29 23:56:00 UTC <tgeeky> mgsloan: yes, I had jumped topic becuase I was reading your partial order code in crdt
2012-06-29 23:56:33 UTC <mgsloan> ah, well, the partial ord stuff is always defined to have nice properties with whatever lattice we're talking about
2012-06-29 23:56:58 UTC <mgsloan> and in the case of CRDTs, that lattice is defined by the commutative merge operation
2012-06-29 23:57:30 UTC <mgsloan> so, the partial order is like "this thing has had more stuff done to it, and could have come from this other thing"
2012-06-29 23:58:34 UTC <mgsloan> so, it's not really very numerical at all (though could be used for numerical stuff)
2012-06-30 00:04:07 UTC <luite> oh i thought that tgeekys partial order example was just for the instances deriving proposal?
2012-06-30 00:04:19 UTC <luite> dunno if i'm missing some connection
2012-06-30 00:05:05 UTC <tgeeky> i was asking about the relationship of expressions of the form ... <= ... <= ...
2012-06-30 00:05:10 UTC <tgeeky> and partial orders
2012-06-30 00:05:24 UTC <tgeeky> I would like to implement such an example in a generic format (ala the abstract syntax graphs paper)
2012-06-30 00:06:33 UTC <luite> oh that's another paper i haven't read
2012-06-30 00:08:28 UTC <tgeeky> mgsloan: the equation I mentioned comes from a recent paper about my favorite thing, the circle fractal
2012-06-30 00:08:39 UTC <tgeeky> mgsloan: http://opensiuc.lib.siu.edu/cgi/viewcontent.cgi?article=1117&context=math_articles <--
2012-06-30 00:08:56 UTC <mgsloan> tgeeky: well, that'd explain why I couldn't make heads nor tails of it
2012-06-30 00:09:01 UTC <tgeeky> hehe
2012-06-30 00:09:05 UTC <tgeeky> it's also a renaming of it
2012-06-30 00:09:31 UTC <tgeeky> but the point remains, if I want to write this, and I'm going to have a (tupled) function of posets, how many do I have? :o
2012-06-30 00:20:47 UTC <mgsloan> hmm, not sure!  "function of posets" throws my mind for a loop :)
2012-06-30 00:20:54 UTC <mgsloan> clearly I'm no categoritician
2012-06-30 00:21:22 UTC <shapr> Hm, I need to actually read the Diagrams tutorial.
2012-06-30 00:21:23 UTC <tgeeky> I think another way to think about those equations is to just think about the middle term having a range
2012-06-30 00:21:57 UTC <mgsloan> I'm going to take a stroll before it gets much darker out! Probably be good for my productivity later
2012-06-30 00:22:05 UTC <tgeeky> true
2012-06-30 00:23:17 UTC <luite> i'm going to take a sleep since it cannot get much darker out
2012-06-30 00:23:19 UTC <luite> :)
2012-06-30 00:23:22 UTC <tgeeky> hehe
2012-06-30 00:26:31 UTC <shapr> ACTION waves to luite
2012-06-30 00:40:41 UTC <shapr> Wow, the graycode example produces 141697 characters of SVG output
2012-06-30 00:40:54 UTC <shapr> and looks terrible in my jquery-console widget :-(
2012-06-30 00:46:25 UTC <shapr> ACTION cackles cheerfully
2012-06-30 00:46:49 UTC <shapr> ACTION installs diagrams-contrib
2012-06-30 00:51:11 UTC <shapr> ACTION grumbles
2012-06-30 04:09:51 UTC <fryguybob> @botsnack
2012-06-30 04:09:52 UTC <lambdabot> :)
2012-06-30 04:16:00 UTC <fryguybob> shapr: You were asking for other interesting Display instances, I was thinking the other day that support for nice tables would be cool.
2012-06-30 04:19:09 UTC <mgsloan> yeah, that'd be pretty awesome.  Especially if they can be infinite, and it requests up to the bounds of the space available for the table
2012-06-30 04:19:29 UTC <mgsloan> and if you suddenly scroll somewhere, it'd evaluate just those indices
2012-06-30 04:20:18 UTC <mgsloan> (I dunno if there's already a datastructure for that..)
2012-06-30 04:20:42 UTC <mgsloan> (but these are more wowee-isn't-that-nifty features, than essential to the problem)
2012-06-30 04:20:57 UTC <fryguybob> ACTION secretly just wants to replace his day to day excel use.
2012-06-30 04:21:30 UTC <mgsloan> tgeeky: I'm starting the list of people who helped give feedback for the proposal and such, shall I put you on the list?
2012-06-30 04:23:37 UTC <mgsloan> fryguybob: here's a joke web spreadsheet implementation my IRL friend made: https://github.com/wcauchois/headsheet/blob/master/Main.hs
2012-06-30 04:24:25 UTC <mgsloan> the whole thing was an exercise in using loeb in anger
2012-06-30 04:28:07 UTC <fryguybob> hehe
2012-06-30 16:35:30 UTC <shapr> ACTION bops cheerfully
2012-06-30 17:11:40 UTC <fryguybob> shapr: I don't know if you saw my message about the Display tables..
2012-06-30 17:19:48 UTC <shapr> fryguybob: I did not, what was it?
2012-06-30 17:22:00 UTC <fryguybob> Nothing fancy, just display of tables where on the client side it is some level of fancy html table
2012-06-30 17:27:03 UTC <shapr> fryguybob: That makes sense, did you have something specific in mind?
2012-06-30 17:27:16 UTC <shapr> ACTION digs through Text.Blaze.Html5
2012-06-30 17:27:33 UTC <shapr> One nice thing about working in a Books-A-Million is that HTML5 books are always handy.
2012-06-30 17:28:25 UTC <fryguybob> shapr: So like  > table $ [[x,x^2] | x <- [1..10]]  and you get  http://www.datatables.net/
2012-06-30 17:29:10 UTC <fryguybob> (html table option chosen arbitrarally, not an endorsement)
2012-06-30 17:30:40 UTC <shapr> Oh I like it!
2012-06-30 17:32:43 UTC <fryguybob> It would probably be nice to be able to do tuples of things in the display class too.
2012-06-30 17:34:03 UTC <shapr> Like the standard Show classes, right?
2012-06-30 17:34:26 UTC <fryguybob> [(x, circle x) | x <- [10,12..100]]
2012-06-30 17:35:10 UTC <fryguybob> (Display a, Display b) => [(a,b)]  and friends.
2012-06-30 17:36:08 UTC <shapr> ?
2012-06-30 17:36:14 UTC <shapr> What's the circle x for?
2012-06-30 17:36:22 UTC <shapr> graphical display of Int values by size?
2012-06-30 17:36:28 UTC <shapr> ACTION thinks about that
2012-06-30 17:36:42 UTC <fryguybob> So the first column is a number and the second column is a diagram.
2012-06-30 17:37:04 UTC <shapr> that sounds awesome!
2012-06-30 17:37:22 UTC <shapr> The size of the circle would reflect the relative size of the number?
2012-06-30 17:37:40 UTC <shapr> https://developers.google.com/chart/interactive/docs/gallery/bubblechart ?
2012-06-30 17:37:41 UTC <fryguybob> Right
2012-06-30 17:38:13 UTC <shapr> Does diagrams support basic charting functionality, or have add-ons that do?
2012-06-30 17:38:18 UTC <shapr> fryguybob: I like that idea!
2012-06-30 17:38:59 UTC <fryguybob> You could write something to do bubblecharts, but nothing is directly supported.
2012-06-30 17:40:51 UTC <shapr> ACTION thinks
2012-06-30 17:44:32 UTC <shapr> So the simplest instances would be for ... Data.Map?
2012-06-30 17:44:38 UTC <shapr> ACTION digs through common datatypes.
2012-06-30 17:46:04 UTC <fryguybob> shapr: Where is your code again?  I haven't really been following the Display stuff.
2012-06-30 17:46:50 UTC <shapr> https://github.com/shapr/ghclive/blob/master/src/Network/Web/GHCLive/Display.hs
2012-06-30 17:47:02 UTC <shapr> It's not complicated :-)
2012-06-30 17:48:22 UTC <fryguybob> instance (Display a) => Display [[a]] where ... could be one.
2012-06-30 17:49:11 UTC <fryguybob> I don't know if it would make more sense to newtype wrap it though:  instance Display a => Display (TheTablz [[a]]) where ...
2012-06-30 17:49:30 UTC <shapr> Hm, sounds good to me.
2012-06-30 17:49:55 UTC <shapr> ACTION tries
2012-06-30 17:50:25 UTC <shapr> First I figure out how to make tables with Blaze.Html5
2012-06-30 17:50:45 UTC <fryguybob> Sounds like a good plan.
2012-06-30 17:50:56 UTC <shapr> :-)
2012-06-30 17:51:42 UTC <shapr> ACTION reads http://jaspervdj.be/blaze/tutorial.html
2012-06-30 17:58:37 UTC <fryguybob> > let tag t x=join["<",t,">",x,"</",t,">"];tr=tag"tr";td=tag"td";t=tag"table";f=t.join.map (tr.join.map (td.show))in f [[x,x^2]|x<-[1..10]]
2012-06-30 17:58:39 UTC <lambdabot>   "<table><tr><td>1</td><td>1</td></tr><tr><td>2</td><td>4</td></tr><tr><td>3...
2012-06-30 18:00:18 UTC <shapr> looks good
2012-06-30 18:03:17 UTC <shapr> ACTION fights with haskell-mode updates
2012-06-30 18:16:10 UTC <fryguybob> ACTION -> coffee...
2012-06-30 18:44:26 UTC <byorgey> ugh, haxr's Base64 constructor takes a String but then performs the base-64 encoding itself before sending.  So you have to read in the contents of a binary file into a bytestring, immediately unpack it into a String (!), and pass that to haxr which then does base64 encoding.
2012-06-30 18:44:49 UTC <byorgey> (trying to extend BlogLiterately to support image upload)
2012-06-30 18:45:30 UTC <shapr> is it easily fixed?
2012-06-30 18:45:57 UTC <shapr> Ok, I'm back from a detour into the land of student loan administrivia.
2012-06-30 18:46:05 UTC <byorgey> it would probably be better if the Base64 constructor took a bytestring instead of a String
2012-06-30 18:46:10 UTC <byorgey> and its behavior better documented.
2012-06-30 18:47:07 UTC <byorgey> bah, it works now for pngs but when I try with a jpg I get the very helpful "user error (ErrorClosed)"
2012-06-30 18:48:50 UTC <byorgey> oh, boo, it looks like it has to do with the *size* of the image
2012-06-30 18:48:53 UTC <byorgey> which is even worse.
2012-06-30 19:56:26 UTC <shapr> bah humbug, was going to read the #diagram logs to go over fryguybob's suggestion again, but patch-tag is down!
2012-06-30 19:57:11 UTC <byorgey> shapr: oh, boo
2012-06-30 19:57:29 UTC <byorgey> shapr: the IRC logs aren't automatically uploaded to patch-tag anyway, I have to manually record and update them every once in a while
2012-06-30 19:57:38 UTC <shapr> oh, ok
2012-06-30 19:58:06 UTC <byorgey> shapr: but I can do that right now and send you a patch for the diagrams-doc repo
2012-06-30 19:58:32 UTC <shapr> Nah, it's okay, but thanks for the offer!
2012-06-30 19:58:43 UTC <byorgey> hmm, patch-tag isn't down for me
2012-06-30 19:58:44 UTC <shapr> I'll work on a Display instance for Data.Map
2012-06-30 19:59:06 UTC <shapr> ACTION checks
2012-06-30 19:59:12 UTC <byorgey> I just pushed the latest logs
2012-06-30 19:59:18 UTC <shapr> yay! thanks!
2012-06-30 20:00:40 UTC <shapr> byorgey: Does the topic url work for you? http://patch-tag.com/r/byorgey/diagrams-doc/snapshot/current/content/pretty/logs/diagrams
2012-06-30 20:03:00 UTC <byorgey> shapr: hmm, no, it's just sitting there "loading"
2012-06-30 20:03:07 UTC <byorgey> shapr: but everything else seems to work
2012-06-30 20:03:16 UTC <shapr> ok, cool
2012-06-30 20:03:21 UTC <byorgey> shapr: you could also try  darcs get http://patch-tag.com/r/byorgey/diagrams-doc
2012-06-30 20:03:26 UTC <shapr> Yup, doing that now :-)
2012-06-30 20:03:29 UTC <byorgey> ok =)
2012-06-30 20:03:44 UTC <luite> shapr: how do you want to display a map/
2012-06-30 20:03:45 UTC <luite> ?
2012-06-30 20:04:08 UTC <shapr> I figured it would be a table of two columns with keys on the left and values on the right.
2012-06-30 20:04:08 UTC <byorgey> I mean, it is a 1MB text file after all!
2012-06-30 20:04:18 UTC <shapr> luite: Any other ideas?
2012-06-30 20:04:36 UTC <luite> nah sounds ok
2012-06-30 20:05:06 UTC <byorgey> oh, sorry, it's 1.8MB
2012-06-30 20:07:23 UTC <luite> oh it's too big for a 3.5" floppy then :(
2012-06-30 20:08:49 UTC <shapr> Unless it's an IBM 2.88MB floppy.
2012-06-30 20:09:07 UTC <luite> or you use one of the funky nonstandard formats
2012-06-30 20:42:02 UTC <shapr> ACTION thinks
2012-06-30 20:44:51 UTC <fryguybob> ACTION is back from getting coffee.
2012-06-30 20:45:41 UTC <byorgey> fryguybob: 1.5 hours to get coffee?
2012-06-30 20:46:16 UTC <fryguybob> Well, REI is having a sale...
2012-06-30 20:46:37 UTC <shapr> ACTION grins
2012-06-30 20:46:53 UTC <shapr> First you buy 50 pounds of coffee beans, then you lug them home...
2012-06-30 20:50:16 UTC <byorgey> if you give a fryguybob a coffee...
2012-06-30 20:57:20 UTC <shapr> haha
2012-06-30 20:57:23 UTC <shapr> I love those books.
2012-06-30 20:57:40 UTC <shapr> http://en.wikipedia.org/wiki/If_You_Give_a_Mouse_a_Cookie
2012-06-30 20:59:58 UTC <byorgey> =)
2012-06-30 21:05:36 UTC <mgsloan> ACTION heads to the guggenheim
2012-06-30 21:05:47 UTC <mgsloan> guggenheim++ for being open later on saturdays!
2012-07-01 02:00:42 UTC <tgeeky> mgsloan: back frm the guggenheim
2012-07-01 02:00:52 UTC <mgsloan> yuup!
2012-07-01 02:01:33 UTC <mgsloan> it was pretty good, a really awesome kandinsky exhibit
2012-07-01 02:01:38 UTC <mgsloan> among other things
2012-07-01 03:05:07 UTC <tgeeky> mgsloan: https://github.com/mgsloan/Haskell-Re-Syntaxed/blob/master/builtinReflection.md <--
2012-07-01 03:05:28 UTC <mgsloan> yeah, that's a very rough idea
2012-07-01 03:05:28 UTC <tgeeky> is there a way to do that, without requiring DatatypeContexts?
2012-07-01 03:05:53 UTC <mgsloan> there is!  EdwardKmett's reflection stuff does it
2012-07-01 03:06:06 UTC <edwardk> =)
2012-07-01 03:06:07 UTC <tgeeky> oh, so if I use his it will go away. interesting.
2012-07-01 03:06:45 UTC <edwardk> fyi- there is no runtime overhead at all any more
2012-07-01 03:06:48 UTC <tgeeky> mgsloan: that said, in practice, what you want as implicit paramters are the functions that you use in homomorphism
2012-07-01 03:06:51 UTC <mgsloan> but note that to get an actual value to your instance, you still need it to be stored in the type (if I understand correctly)
2012-07-01 03:06:57 UTC <mgsloan> edwardk: wow, awesome!
2012-07-01 03:07:06 UTC <edwardk> it literally casts the function into a dictionary now
2012-07-01 03:07:11 UTC <mgsloan> what do you think of the idea of building it into the language?
2012-07-01 03:07:27 UTC <edwardk> https://github.com/ekmett/reflection/blob/master/fast/Data/Reflection.hs runs on black magic
2012-07-01 03:07:31 UTC <edwardk> its 5 lines
2012-07-01 03:07:37 UTC <edwardk> doesn't really need to live in the language
2012-07-01 03:07:55 UTC <mgsloan> hmm, perhaps, but usage of the library confuses me a bit
2012-07-01 03:08:07 UTC <edwardk> i would be happy if the simons wanted to own it, but to be honest, they have enough on their plate
2012-07-01 03:08:20 UTC <tgeeky> I'm not sure if it's more or less confusing than Oleg's original paper on reflection
2012-07-01 03:08:56 UTC <edwardk> the way it is implemented is about 3 orders of magnitude faster than oleg's approach
2012-07-01 03:09:08 UTC <edwardk> even the 'slow' path is about 10x faster than oleg's
2012-07-01 03:09:57 UTC <tgeeky> edwardk: yes, I didn't associate any performance gradient with a performance one. I'm not that good with the Haskell
2012-07-01 03:10:37 UTC <edwardk> mgsloan: i definitely prefer the reflection approach with the phantom type to the implicit parameter like sketch you have.
2012-07-01 03:10:52 UTC <edwardk> the phantom type is actually important because it enforces a stack discipline to their use
2012-07-01 03:11:04 UTC <edwardk> that isn't encoded in the ?foo syntax you have there
2012-07-01 03:11:18 UTC <edwardk> the stack discipline is actually necessary for correctness
2012-07-01 03:12:25 UTC <mgsloan> ahh, interesting, yeah, the issue is that I don't fully understand the reflection stuff (haven't needed it yet), so this was more of a thought in the direction of "Hmm, if we provide values at declaration time to instances, how about at runtime?"
2012-07-01 03:12:59 UTC <tgeeky> mgsloan: I think you could even change the monoid at runtime, with that code
2012-07-01 03:13:01 UTC <edwardk> oleg's paper is quite a solid introduction to reflection.
2012-07-01 03:13:25 UTC <mgsloan> cool!  I've actually met him and Chung-shieh recently, awesome guys to talk to
2012-07-01 03:13:30 UTC <tgeeky> mgsloan: if you used the ?monoid at two different levels in a recursive mdo or whatever
2012-07-01 03:14:34 UTC <edwardk> mgsloan: also the ?foo syntax doesn't deal with multiple outstanding reified values of the same 'type'
2012-07-01 03:14:49 UTC <mgsloan> tgeeky: good point!  Yeah, the implicit would need to mean something very different for this to make any sense
2012-07-01 03:15:20 UTC <mgsloan> edwardk: or determining which reified values come from where, yeah
2012-07-01 03:15:22 UTC <tgeeky> mgsloan: I only looked it because I had been messing about with implicit paramters to write funtions that were very similar (list and tree homomorphisms)
2012-07-01 03:15:54 UTC <tgeeky> edwardk: is this a comprehensible question:  Would it be possible to tag a single fucntion with multiple tags?
2012-07-01 03:16:20 UTC <edwardk> mgsloan: reify :: a -> (forall s. Reifies s a => Proxy s -> r) -> r; reflect :: Reifies s a => p s -> a
2012-07-01 03:16:27 UTC <edwardk> mgsloan: that is the whole API ;)
2012-07-01 03:16:34 UTC <edwardk> afk a bit
2012-07-01 03:16:44 UTC <mgsloan> fair 'nough ;)
2012-07-01 03:16:58 UTC <mgsloan> might be fun to do some TH + reflection magic
2012-07-01 03:17:09 UTC <mgsloan> generate the dictionary ADTs and such like that
2012-07-01 03:17:17 UTC <tgeeky> mgsloan: so how about a directional typed 3 vector:
2012-07-01 03:17:53 UTC <tgeeky> [up || down] [left || right]  [in || out]  V x y z
2012-07-01 03:18:42 UTC <tgeeky> Data.Tagged looks deciptively simple
2012-07-01 03:19:44 UTC <tgeeky> anyway, until more, popd
2012-07-01 03:20:19 UTC <mgsloan> btw, I updated my doc
2012-07-01 03:20:21 UTC <mgsloan> https://github.com/mgsloan/Haskell-Re-Syntaxed/blob/master/instanceTemplates.md
2012-07-01 03:20:36 UTC <tgeeky> hehe
2012-07-01 03:20:39 UTC <tgeeky> Drew Day
2012-07-01 03:20:41 UTC <tgeeky> <tgeeky>
2012-07-01 03:20:41 UTC <mgsloan> new sections are "Resolving Overlap" and "API deltas"
2012-07-01 03:20:50 UTC <mgsloan> ahh, will substitute :)
2012-07-01 03:21:24 UTC <mgsloan> Here I thought your parents were particularly foretelling
2012-07-01 03:21:51 UTC <tgeeky> heh
2012-07-01 03:22:35 UTC <tgeeky> mgsloan: editorial advice: delete the stuff at the toplevel in Haskell-Re-Syntaxed
2012-07-01 03:22:50 UTC <tgeeky> in particular, just get rid of the "coffescript for haskell"
2012-07-01 03:23:23 UTC <mgsloan> yeaaah... this isn't actually how I'll be submitting it to the workshop
2012-07-01 03:23:35 UTC <tgeeky> people who are familar with either won't agree that you've done enough || done too much
2012-07-01 03:23:37 UTC <mgsloan> I wonder if there's a good way to preserve the git history of one file and obliterate the rest
2012-07-01 03:24:02 UTC <mgsloan> oh yeah, the coffeescript stuff isn't even me talking.  That's "colah", who I forked this from
2012-07-01 03:24:04 UTC <tgeeky> git destroy-evidence-of hehe
2012-07-01 03:24:08 UTC <mgsloan> the brainstorm.hs file is his
2012-07-01 03:24:09 UTC <tgeeky> mgsloan: I figured
2012-07-01 03:24:22 UTC <mgsloan> I do like the ideas he's talking about
2012-07-01 03:24:24 UTC <mgsloan> somewhat
2012-07-01 03:24:52 UTC <mgsloan> the instance stuff is kinda bonkers, but it inspired me to think again about the whole instances-as-results-of-applying-to-values thing
2012-07-01 03:25:40 UTC <mgsloan> but yeah, good advice
2012-07-01 03:26:03 UTC <mgsloan> I ought to make my TH implementation be standalone from quasi-extras (soon to be renamed quasi-meta :D )
2012-07-01 03:26:32 UTC <mgsloan> that way I can be like "200 line TH implementation right here next to the big doc"
2012-07-01 03:27:22 UTC <mgsloan> So yeah, probably ignore preserving history, and just move it over to a new repo
2012-07-01 04:14:16 UTC <tgeeky> mgsloan: https://github.com/technogeeky/pearl-sorting-with-bialgebras/blob/02-preliminaries/src/preliminaries.hs <-- here's an example of doctest catching things for me :O
2012-07-01 04:14:38 UTC <tgeeky> basically, I renamed the "f" in the Lf (lowest fix) and Gf (greatest fix)
2012-07-01 04:14:46 UTC <tgeeky> to be v and x, which stand (informally) for 5 and 10
2012-07-01 04:15:02 UTC <mgsloan> wow, Shin-Cheng Mu has a very appropriate last name
2012-07-01 04:15:03 UTC <tgeeky> and then tried to track which functions used which, by seeing which (x or v) was being used
2012-07-01 04:15:10 UTC <tgeeky> mgsloan: true that :o
2012-07-01 04:15:35 UTC <mgsloan> that's sweet!
2012-07-01 04:15:49 UTC <tgeeky> notice, that code isn't ... code
2012-07-01 04:16:03 UTC <tgeeky> it's doctest properly handling ghci :t
2012-07-01 04:16:23 UTC <mgsloan> gotcha
2012-07-01 04:16:48 UTC <tgeeky> mgsloan: actually, it's both properly and inproperly
2012-07-01 04:17:38 UTC <mgsloan> I definitely think that there's power in the idea that little examples, for use as unit and regression tests, can be used very powerfully at all stages of development
2012-07-01 04:18:01 UTC <tgeeky> well, what I *really* want (and it's a dead simple idea)
2012-07-01 04:18:02 UTC <mgsloan> they could be used for code generation, and they're definitely nice for docs and test
2012-07-01 04:18:11 UTC <tgeeky> is to, in haddock, just change the doctest-style REPL
2012-07-01 04:18:18 UTC <tgeeky> so that you get a code box like normal
2012-07-01 04:18:23 UTC <tgeeky> with code in it, like normal
2012-07-01 04:18:42 UTC <tgeeky> but on the bottom right, you get a little green dot if the doctest passed (that is, evaluating this code gives the result listed)
2012-07-01 04:18:45 UTC <mgsloan> that would be ideal.  Seems like an issue with doctest syntax, then?
2012-07-01 04:18:47 UTC <tgeeky> or a red dot if it does not
2012-07-01 04:18:50 UTC <mgsloan> ah right
2012-07-01 04:18:56 UTC <tgeeky> it's a haddock change
2012-07-01 04:19:03 UTC <tgeeky> to make a special style for REPL
2012-07-01 04:19:15 UTC <mgsloan> I hope the title "Deriving Class with Instance Templates" is punny enough for th symposium
2012-07-01 04:19:55 UTC <tgeeky> sounds just punny enough
2012-07-01 04:20:34 UTC <mgsloan> s/symposium/workshop
2012-07-01 04:21:00 UTC <tgeeky> yep :)
2012-07-01 05:55:37 UTC <tgeeky> hmmm
2012-07-01 05:55:38 UTC <tgeeky> edwardk: here?
2012-07-01 05:56:06 UTC <edwardk>  watching a movie
2012-07-01 05:56:14 UTC <tgeeky> edwardk: ok
2012-07-01 05:57:33 UTC <tgeeky> mgsloan: or anyone else:  do you understand the greatest/least-fixpoint coincide in Hask argument?
2012-07-01 06:12:45 UTC <mgsloan> noidea, but sounds like it might have to do with usual PL concepts of preservation?
2012-07-01 16:13:17 UTC <byorgey> tgeeky: hmm, good question.  I *should* understand it so let me see if I can remember how to explain it.
2012-07-01 16:18:39 UTC <byorgey> tgeeky: huh, actually, it seems I have never known how to explain it.  And a google search is turning up lots of people mentioning it but not proving it.
2012-07-01 16:24:30 UTC <byorgey> tgeeky: I found http://homepages.inf.ed.ac.uk/als/Teaching/MSfS/l2.ps  which looks like it walks you through the proof, though it leaves out a lot of details.
2012-07-01 16:25:00 UTC <byorgey> in any case it seems to involve some nontrivial CT.
2012-07-01 16:27:05 UTC <byorgey> apparently some papers of Freyd, and Fiore's thesis, are the ultimate references for this.
2012-07-01 23:32:45 UTC <tgeeky> byorgey: yow. that paper represents many hours of category theory :o
2012-07-01 23:35:42 UTC <tgeeky> whoops. gsview just crashed
2012-07-01 23:47:41 UTC <byorgey> tgeeky: yeah, it does, isn't it exciting? =)
2012-07-01 23:47:51 UTC <byorgey> I printed it out, and hope to try working through it
2012-07-02 01:06:21 UTC <cheater> hey guys
2012-07-02 01:06:33 UTC <cheater> has anyone here been following conal's composable guis idea?
2012-07-02 01:51:50 UTC <edwardk> i think a lot of us have seen it, not sure how many consider it a good idea ;)
2012-07-02 01:59:11 UTC <tgeeky_> I think we all love composition (and compsability, and denotational semantics)
2012-07-02 02:01:34 UTC <tgeeky_> byorgey: it is somewhat exciting. What I was wondering is if all of the same rules come out when you consider T (X,Y) = ... (or equivalently, I think:  Cppo_|_ (*) Cppo_|_ (*) Cppo_|_ -> ( Cppo_|_, Cppo_|_ ) )
2012-07-02 09:59:37 UTC <luite> cheater: hm, i haven't, is there something new?
2012-07-02 20:32:43 UTC <tgeeky__> https://github.com/technogeeky/pearl-sorting-with-bialgebras <-- that's up if anyone wants to look at it
2012-07-02 21:00:33 UTC <edwardk> preflex: xseen luite
2012-07-02 21:00:40 UTC <edwardk> er
2012-07-02 21:02:49 UTC <tgeeky_> NO
2012-07-02 21:02:52 UTC <tgeeky_> he hasn't
2012-07-02 21:02:58 UTC <tgeeky_> luite: seen luite
2012-07-02 21:25:12 UTC <luite> here
2012-07-02 21:28:52 UTC <shapr> howdy luite!
2012-07-02 21:30:06 UTC <luite> hi shapr
2012-07-02 21:30:30 UTC <shapr> How's life treating you?
2012-07-02 21:31:23 UTC <edwardk> =)
2012-07-02 21:38:01 UTC <shapr> luite: At the moment I'm working on the collaborative editing component
2012-07-02 21:38:22 UTC <shapr> luite: I installed sharejs and got the examples running, they use the ACE editor.
2012-07-02 21:39:06 UTC <shapr> Next step is to find out how to pull the text source out of the editor by URL, so I'm diving through the source to see if that's a normal editor command.
2012-07-02 21:39:53 UTC <luite> shapr: they have an example with codemirror, look in the cm directory in examples
2012-07-02 21:39:58 UTC <shapr> ACTION looks
2012-07-02 21:41:13 UTC <shapr> Yay, works!
2012-07-02 21:45:25 UTC <shapr> ACTION switches the cm example to haskell mode
2012-07-02 21:45:48 UTC <alpounet> <shapr> luite: At the moment I'm working on the collaborative editing component <<< hah, so you went down that road finally :p
2012-07-02 21:45:49 UTC <lambdabot> alpounet: You have 1 new message. '/msg lambdabot @messages' to read it.
2012-07-02 21:46:04 UTC <luite> shapr: but you'd need to synchronize the node.js server (which can use some external storage i think) with the ghclive daemon to reload code
2012-07-02 21:46:14 UTC <shapr> luite: What do you mean?
2012-07-02 21:46:22 UTC <shapr> alpounet: Yes I did :-)
2012-07-02 21:46:55 UTC <luite> shapr: well the sharejs server keeps a master copy of the edited document
2012-07-02 21:48:51 UTC <shapr> If I can access that master document by URL, then I just grab that and load it, the way I'm doing things now, right?
2012-07-02 21:50:29 UTC <alpounet> can't have the sharejs server sitting right next to ghclive?
2012-07-02 21:50:36 UTC <luite> wait, when you're editing the document you have a websocket connection to the sharejs server, so the sharejs server knows about the edits. you want to add a button "load in ghc" so the client (browser) submits the version to ghclive?
2012-07-02 21:50:37 UTC <alpounet> or integrated into
2012-07-02 21:50:49 UTC <shapr> luite: Pretty much
2012-07-02 21:51:35 UTC <luite> shapr: ok, that's going to be tricky, because of the same origin policy, you can only open http connections to the same host/post
2012-07-02 21:51:49 UTC <luite> port
2012-07-02 21:52:23 UTC <shapr> alpounet: Yah, it would be preferable to have a single hackage to install that does everything.
2012-07-02 21:52:27 UTC <luite> you pretty much need to have direct access to the node.js server
2012-07-02 21:52:42 UTC <shapr> alpounet: But first, something that works :-)
2012-07-02 21:53:03 UTC <shapr> Since the same server will be running both ghclive and node.js, it should be fine.
2012-07-02 21:53:24 UTC <shapr> Though it's not necessary, ghclive can make any http call to get the file.
2012-07-02 21:53:55 UTC <luite> shapr: no there's a problem, the browser needs the websocket connection to sharejs, but also the xmlhttprequest stuff for commands to the interpreter
2012-07-02 21:54:51 UTC <shapr> ohh
2012-07-02 21:55:55 UTC <alpounet> shapr, yeah, you're kind of applying the dons method i guess :p
2012-07-02 21:56:12 UTC <alpounet> and i think that's good, particularly in the context of a gsoc
2012-07-02 21:56:16 UTC <shapr> I think so too.
2012-07-02 21:56:18 UTC <shapr> :-)
2012-07-02 21:59:15 UTC <luite> ok, sharejs has a workaround for this, the browserchannel transport
2012-07-02 21:59:16 UTC <shapr> luite: So the quick hack is to multiplex them through scotty or something?
2012-07-02 21:59:22 UTC <shapr> oh goody!
2012-07-02 22:00:06 UTC <luite> no, it looks like it has some headers to allow the requests
2012-07-02 22:00:42 UTC <luite> the problem is not as bad as a thought, at least if most browsers support this ehader
2012-07-02 22:02:40 UTC <luite> http://caniuse.com/cors
2012-07-02 22:03:04 UTC <shapr> So, pretty much everything.
2012-07-02 22:04:54 UTC <luite> can you run sharejs without external persistent storage? there are some postgresql, redis and couchdb backends, but i'm not sure if they're required
2012-07-02 22:05:35 UTC <shapr> I'm pretty sure apt-get installed postgresql when I installed node.js, so not sure.
2012-07-02 22:06:22 UTC <luite> well if your sharejs install uses postgresql you probably had to configure the authentication :p
2012-07-02 22:06:36 UTC <shapr> I didn't configure anything.
2012-07-02 22:06:43 UTC <shapr> so maybe not!
2012-07-02 22:06:54 UTC <luite> it just works, the example?
2012-07-02 22:07:08 UTC <shapr> yup
2012-07-02 22:08:16 UTC <shapr> Without redis installed
2012-07-02 22:08:18 UTC <luite> will the file upload be removed if you have a live editor?
2012-07-02 22:08:45 UTC <shapr> Huh?
2012-07-02 22:09:01 UTC <luite> you have a "load file from url" right, at the moment?
2012-07-02 22:09:08 UTC <shapr> yup
2012-07-02 22:09:41 UTC <luite> is that still required with the editor?
2012-07-02 22:10:41 UTC <shapr> oh!
2012-07-02 22:10:47 UTC <shapr> Yes
2012-07-02 22:10:47 UTC <shapr> The URL box would be replaced with the editor component.
2012-07-02 22:10:47 UTC <shapr> Though that feature might be handy if you want to import files that aren't in packages?
2012-07-02 22:10:48 UTC <shapr> No, I don't think the file upload would be required once the shared editor is there.
2012-07-02 22:13:19 UTC <luite> ok, if you just run sharejs alongside the ghclive server it should be pretty straightforward to add.
2012-07-02 22:14:29 UTC <shapr> yay!
2012-07-02 22:14:54 UTC <luite> getting the haskell file loaded in ghclive would probably just be doing a POST request, and the haskell site is easier than downloading files since you just get the data in a parameter
2012-07-02 22:17:48 UTC <shapr> sounds good
2012-07-02 22:18:22 UTC <luite> but this will probably be done in a few days, any plans what to do after?
2012-07-02 22:21:12 UTC <shapr> How to do the shared ghci session via hint?
2012-07-02 22:21:58 UTC <shapr> I don't think this is a large problem, but it's not something I know how to solve immediately.
2012-07-02 22:22:08 UTC <shapr> ACTION thinks
2012-07-02 22:22:24 UTC <shapr> hm, might be easier than I thought
2012-07-02 22:23:02 UTC <luite> is it readonly for the viewers?
2012-07-02 22:23:17 UTC <shapr> Nah, I think they should be able to edit.
2012-07-02 22:23:32 UTC <luite> both the haskell file and run expressions in the interpreter?
2012-07-02 22:23:40 UTC <shapr> I think so, yes.
2012-07-02 22:26:53 UTC <luite> could be another sharejs document
2012-07-02 22:27:01 UTC <shapr> ACTION blinks
2012-07-02 22:27:09 UTC <shapr> That could simplify things.
2012-07-02 22:28:12 UTC <luite> if you have a separate input field, what clients would to is: enter input, send eval request to server, append expression and result to sharejs doc
2012-07-02 22:28:42 UTC <luite> individual clients could abuse it by manipulating results
2012-07-02 22:28:50 UTC <shapr> huh?
2012-07-02 22:28:53 UTC <luite> but if you trust clients it would be ok
2012-07-02 22:29:01 UTC <shapr> Yah, this model is based on complete trust :-)
2012-07-02 22:29:25 UTC <luite> shapr: since the client contacts ghclive and appends the result to the sharejs document
2012-07-02 22:29:35 UTC <shapr> Ah
2012-07-02 22:29:38 UTC <luite> a malicious client could append anything
2012-07-02 22:30:08 UTC <shapr> That makes sense.
2012-07-02 22:30:46 UTC <shapr> So, the simplest hack is to have THREE sharejs documents, one for the source code module(s), one for the GHCi output, and one for the shared GHCi input, right?
2012-07-02 22:31:13 UTC <luite> is having realtime shared GHCi input necessary? an irc-like model could work
2012-07-02 22:31:28 UTC <shapr> No, it's not necessary.
2012-07-02 22:31:42 UTC <shapr> Especially not for getting the simplest thing working as soon as possible.
2012-07-03 00:23:19 UTC <shapr> Well, at least the haskell-mode is working.
2012-07-03 15:05:29 UTC <tgeeky> byorgey: here?
2012-07-03 15:46:07 UTC <byorgey> hi tgeeky
2012-07-03 16:20:25 UTC <tgeeky> byorgey: ok, back. I had to write down all the notes from #haskell-blah
2012-07-03 16:20:36 UTC <byorgey> hehe, ok
2012-07-03 16:20:52 UTC <tgeeky> byorgey: can we discuss page 4 of the recent apollonian paper
2012-07-03 16:21:59 UTC <tgeeky> here's the gist of my notes from yesterday about this algorithim:
2012-07-03 16:24:00 UTC <tgeeky> well, there are two ways to state it:
2012-07-03 16:24:19 UTC <tgeeky> you have the internal iterated variables (so, in my mind, they behave somewhat like indexes in tensor notation)
2012-07-03 16:24:25 UTC <tgeeky> u, k, and n
2012-07-03 16:24:47 UTC <tgeeky> of the three, it's obvious that n starts at a maximum, and shrinks
2012-07-03 16:24:52 UTC <tgeeky> and that k and u start at a minimum, and grow
2012-07-03 16:25:24 UTC <tgeeky> and that both k and n, are cyclic (their shrinkining/growth) happens twice
2012-07-03 16:26:42 UTC <byorgey> "their shrinking/growth happens twice" -- are you looking at Figure 3?
2012-07-03 16:26:46 UTC <tgeeky> yes
2012-07-03 16:26:51 UTC <tgeeky> it could happen more times
2012-07-03 16:26:53 UTC <tgeeky> and I suspect it does
2012-07-03 16:26:56 UTC <tgeeky> but it happens at least twice
2012-07-03 16:27:00 UTC <tgeeky> in this case
2012-07-03 16:27:04 UTC <byorgey> yeah, I think that's just an artifact of the particular numbers chosen
2012-07-03 16:27:27 UTC <tgeeky> well, whatever the numbers, you can say this:
2012-07-03 16:27:31 UTC <tgeeky> in terms of rate of change
2012-07-03 16:27:32 UTC <byorgey> and the fact that they are only listing k which divide B^2 + u^2
2012-07-03 16:27:48 UTC <byorgey> there are lots of other "discarded" k which are not listed in the table
2012-07-03 16:28:16 UTC <tgeeky> yep, I know both of those facts. I'm not sure about mu
2012-07-03 16:28:22 UTC <tgeeky> u
2012-07-03 16:28:46 UTC <tgeeky> Anyway, the point is:  n changes at a "fast" rate, k changes at  "medium" rate, and u changes at  "slow" rate
2012-07-03 16:29:44 UTC <tgeeky> that's not the point, that's an observation. You have various kinds of orderings and bounds for all of these terms
2012-07-03 16:29:46 UTC <byorgey> right, but that's just because the loop for k is an inner loop inside the loop for u
2012-07-03 16:29:57 UTC <byorgey> also, n and k are dual.
2012-07-03 16:33:27 UTC <byorgey> sorry, continue
2012-07-03 16:33:32 UTC <byorgey> I am not sure where you are going with this
2012-07-03 16:33:37 UTC <tgeeky> no, don't apologize, I'm thinking.
2012-07-03 16:33:48 UTC <tgeeky> i want to understand what the "fixed point" of this equation is / would mean
2012-07-03 16:34:00 UTC <tgeeky> and how it involves the types in boxes on the bottom of figure 3
2012-07-03 16:35:20 UTC <tgeeky> it seems to me, that since you can do this process using a few random numbers and a triplet of internal interators
2012-07-03 16:35:30 UTC <tgeeky> that you should be able to write an Unfoldable instance which just... unfolds gaskets
2012-07-03 16:35:35 UTC <tgeeky> given the starting integer
2012-07-03 16:37:11 UTC <byorgey> doing it in terms of Unfoldable doesn't seem very interesting to me
2012-07-03 16:37:15 UTC <byorgey> it's just a list
2012-07-03 16:37:39 UTC <tgeeky> byorgey: it's a list... of streams
2012-07-03 16:37:53 UTC <byorgey> you mean one stream for each value of B?
2012-07-03 16:37:57 UTC <tgeeky> no
2012-07-03 16:38:13 UTC <tgeeky> some number of streams, for each b
2012-07-03 16:38:20 UTC <tgeeky> in this paper: Table 1
2012-07-03 16:38:33 UTC <tgeeky> every single B0 B1 B2 B3 B4 ... goes on forever B5 .. B6 ..
2012-07-03 16:38:48 UTC <tgeeky> and every term you get forever, is an integer
2012-07-03 16:39:14 UTC <byorgey> oh, right
2012-07-03 16:39:21 UTC <tgeeky> in fact, it's even better
2012-07-03 16:39:25 UTC <tgeeky> each stream, like:
2012-07-03 16:39:30 UTC <tgeeky> (-1,2,2,3)
2012-07-03 16:39:37 UTC <tgeeky> ban be inverted
2012-07-03 16:39:44 UTC <tgeeky> *can
2012-07-03 16:39:50 UTC <tgeeky> inverted is the wrong word, I think
2012-07-03 16:39:59 UTC <tgeeky> it's better to say:
2012-07-03 16:40:32 UTC <tgeeky> you can splice two copies of (-2, 3, 6, 7)  -- the second one
2012-07-03 16:40:36 UTC <tgeeky> into (-1, 2, 2, 3)
2012-07-03 16:41:29 UTC <tgeeky> byorgey: so what you'd be getting when you unfold is a family of streams
2012-07-03 16:41:45 UTC <tgeeky> or something, I don't know what the word 'family' should mean
2012-07-03 16:43:46 UTC <tgeeky> byorgey: oh, and the point of the Fuchs thesis about these gaskets (or at least, one of the primary point) was that the (-1,2,2,3) gasket is special, and that once you extend it far enough to the right (-1, 2, 2, 3, ...) -> such that you have pulled 28 primes (excluding 2 and 3!), then... something (some sort of algebraic / geometric thing) is "Zariski dense in the cone"
2012-07-03 16:44:42 UTC <tgeeky> byorgey: anyway, one specific plan I thought of was this:
2012-07-03 16:45:53 UTC <tgeeky> from the abstract syntax graphs thing, write a cousion to his 'ArithAlg' for each of the initial equations (-B, B + k, B + n, (B + k + n) +/- 2u)
2012-07-03 16:47:12 UTC <tgeeky> and then write a fixed point for all 5 at once.
2012-07-03 16:48:05 UTC <byorgey> which initial equations, exactly?
2012-07-03 16:48:16 UTC <byorgey> (-B, B + k, ...   is not an equation
2012-07-03 16:48:28 UTC <byorgey> I am trying to understand what you mean by fixed point here.
2012-07-03 16:50:10 UTC <tgeeky> if it's true that each of the lines in table 1 is a Stream (off to the right), then the minimum number of numbers (integers or naturals, take your pick), is the first four (or five).
2012-07-03 16:50:20 UTC <tgeeky> Which is to say, to uniquely describe the entire stream
2012-07-03 16:50:29 UTC <tgeeky> you need: (B0,B1,B2,B3)
2012-07-03 16:50:31 UTC <byorgey> right
2012-07-03 16:51:02 UTC <tgeeky> that is a fixed point in some sense, I assume (I hope) .. in the same way that the fixed point of the "one-at-a-time" naturals is a *single* natural, and a successor
2012-07-03 16:51:18 UTC <tgeeky> of the *entire* system of apollonian streams and gaskets and windows and whatnot
2012-07-03 16:51:36 UTC <tgeeky> that each B0 can be associated with more than one of these is not important
2012-07-03 16:51:44 UTC <byorgey> that is not a use of the term "fixed point" that I have ever heard
2012-07-03 16:52:21 UTC <byorgey> "the fixed point of the 'one-at-a-time' naturals is a single natural, and a successor" -- this does not make sense
2012-07-03 16:52:26 UTC <byorgey> only equations have fixed points.
2012-07-03 16:52:53 UTC <byorgey> er, sorry, only functions have fixed points.
2012-07-03 16:52:57 UTC <byorgey> expressed by an equation.
2012-07-03 16:53:36 UTC <byorgey> it sounds to me more like you are thinking about the "seed" which generates some sort of infinite structure by an unfolding process
2012-07-03 16:53:38 UTC <tgeeky> is a zero vector a fixed point of something?
2012-07-03 16:53:59 UTC <byorgey> sure, consider the vector function  f(v) = 5v
2012-07-03 16:54:08 UTC <byorgey> the zero vector is (the only) fixed point of f
2012-07-03 16:54:48 UTC <tgeeky> and that's true for the 0,1,2,3,4,...-vector (0), (0,0) ..
2012-07-03 16:54:57 UTC <tgeeky> yes?
2012-07-03 16:55:16 UTC <byorgey> sure
2012-07-03 16:56:41 UTC <tgeeky> hehe, looking up fixed point, I see that [0,1] has "the fixed-point property"
2012-07-03 16:56:51 UTC <tgeeky> and "shift", in the table, hs defined on that interval
2012-07-03 16:57:13 UTC <tgeeky> (but that's not what I'm after, yet)
2012-07-03 16:58:26 UTC <tgeeky> i should know better here, I've read all kinds of stuff about this
2012-07-03 17:07:15 UTC <tgeeky> byorgey: this was e-mailed to me: scan for interestingness; report back when available?  http://www.doc.ic.ac.uk/~wlj05/files/Deconstraining.pdf
2012-07-03 17:09:16 UTC <tgeeky> Our implementation makes use of many of the latest Haskell
2012-07-03 17:09:16 UTC <tgeeky> extensions, including kind polymorphism (Section 6), constraint
2012-07-03 17:09:16 UTC <tgeeky> kinds (Section 3) and promotion (Section 2) and thus serves
2012-07-03 17:09:16 UTC <tgeeky> to document the application of these extensions in a practical
2012-07-03 17:09:27 UTC <tgeeky> sometimes I want to kill mycomputer and/or myself.
2012-07-03 17:09:30 UTC <tgeeky> setting*
2012-07-03 17:10:01 UTC <byorgey> looks interesting
2012-07-03 17:10:07 UTC <byorgey> I don't have time to read it in detail now.
2012-07-03 17:10:58 UTC <edwardk> looks a lot like my little 'grid' dsl
2012-07-03 17:11:50 UTC <edwardk> the difference is they use a GADT and i went finally tagless
2012-07-03 17:12:49 UTC <tgeeky> edwardk: i don't know if the word 'finally' changes it
2012-07-03 17:13:33 UTC <tgeeky> they say it can be applied to "tagless" representations
2012-07-03 17:13:38 UTC <tgeeky> and rank-2 types
2012-07-03 17:14:11 UTC <tgeeky> does 'finally' tagless mean you have a finalization/normilization step that makes _____ tagless?
2012-07-03 17:16:13 UTC <byorgey> no, it means using an encoding based on a final coalgebra instead of an initial algebra
2012-07-03 17:16:49 UTC <tgeeky> oh
2012-07-03 17:16:57 UTC <tgeeky> sneaky
2012-07-03 18:07:40 UTC <shapr> ACTION chortles happily
2012-07-03 18:11:03 UTC <edwardk> how goes?
2012-07-03 18:36:36 UTC <shapr> edwardk: Life is good! How are you?
2012-07-03 18:37:11 UTC <shapr> @quote
2012-07-03 18:37:11 UTC <lambdabot> Aaron_Denney says: "Don't anthropomorphize computers.  They hate it when you do that."
2012-07-03 18:37:15 UTC <shapr> ACTION snickers
2012-07-03 18:37:42 UTC <edwardk> doing well. going through and swapping code from data-lens to lens-family
2012-07-03 18:37:54 UTC <shapr> Oh neat.
2012-07-03 18:38:03 UTC <shapr> What's the relationship between a lens and a zipper?
2012-07-03 18:38:04 UTC <edwardk> the nice thing is that the resulting code for the most part doesn't need to import anything
2012-07-03 18:38:09 UTC <shapr> Feels like there should be something.
2012-07-03 18:38:39 UTC <shapr> ACTION boings cheerfully
2012-07-03 18:38:41 UTC <shapr> Yay code!
2012-07-03 18:38:53 UTC <edwardk> one you should see through, the other, if you can see through it, you probably should be embarassed.
2012-07-03 18:39:11 UTC <edwardk> you can make a telescope of lenses that acts like a zipper
2012-07-03 18:39:12 UTC <shapr> Ok, so yesterday I got the basic sharejs+codemirror collaborative editing widget working, and the haskell-mode enabled.
2012-07-03 18:39:14 UTC <shapr> edwardk: haha!
2012-07-03 18:39:48 UTC <edwardk> you can also make a zipper into a traversable into a comonad which is fun
2012-07-03 18:40:04 UTC <shapr> So today I could either attempt to integrate that in place of the url to load, or I could work on the shared ghci session as a sharejs+codemirror widget.
2012-07-03 18:40:18 UTC <edwardk> http://hackage.haskell.org/packages/archive/comonad-extras/2.1.2/doc/html/Control-Comonad-Store-Zipper.html
2012-07-03 18:40:35 UTC <shapr> oh cool!
2012-07-03 18:41:06 UTC <edwardk> that gives you a comonad that can step through the positions of a traversable, and where you can use comonadic actions to redecorate
2012-07-03 18:41:26 UTC <shapr> So my GSoC project is also the deliverable for my CS490 Senior Seminar course, I talked to my faculty sponsor about that today.
2012-07-03 18:41:34 UTC <edwardk> peeks (+1) will get your neightbor to the right, etc.
2012-07-03 18:41:36 UTC <shapr> edwardk: Oh that's nifty!
2012-07-03 18:42:04 UTC <edwardk> how close are you to actually graduating?
2012-07-03 18:42:19 UTC <shapr> I think I'm three terms away, not including this summer.
2012-07-03 18:43:14 UTC <shapr> So I get to give a talk about GSoC, Haskell, and my project to a combined ACM/AIS meeting when the Fall term starts.
2012-07-03 18:44:17 UTC <shapr> Ok, so a codemirror 'instance' has a getValue() method that returns the current text of the editor...
2012-07-03 19:05:02 UTC <byorgey> > 2 + 2
2012-07-03 19:05:04 UTC <lambdabot>   4
2012-07-03 19:05:08 UTC <byorgey> huh, since when has lambdabot been in here? =)
2012-07-03 19:05:24 UTC <shapr> I asked politely :-)
2012-07-03 19:05:30 UTC <shapr> @listchans
2012-07-03 19:05:30 UTC <lambdabot> ##freebsd ##logic ##proggit ##villagegreen #agda #arch-haskell #codez #darcs #diagrams #esoteric #fedora-haskell #friendly-coders #functionaljava #gentoo-haskell #gentoo-uy #ghc #happs #haskell #
2012-07-03 19:05:31 UTC <lambdabot> haskell-blah #haskell-books #haskell-br #haskell-fr #haskell-freebsd #haskell-in-depth #haskell-overflow #haskell-pl #haskell.au #haskell.cz #haskell.de #haskell.dut #haskell.es #haskell.se #haskell.
2012-07-03 19:05:31 UTC <lambdabot> tw #learnanycomputerlanguage #macosx #macosxdev #rosettacode #scala #scalaz #scannedinavian #snapframework #stackoverflow #tanuki #teamunix #unicycling #uscs2010 #xmonad #yesod #yi weird#
2012-07-03 19:05:32 UTC <shapr> yow
2012-07-03 19:05:38 UTC <byorgey> nice =)
2012-07-03 19:05:58 UTC <shapr> I didn't even know #haskell.tw existed!
2012-07-03 19:06:07 UTC <shapr> Or that there was a #stackoverflow
2012-07-03 19:06:07 UTC <shapr> huh
2012-07-03 19:06:26 UTC <shapr> ACTION shrugs
2012-07-03 20:14:13 UTC <alpounet> tw is taiwan i guess?
2012-07-03 20:21:57 UTC <byorgey> yep
2012-07-03 20:22:24 UTC <byorgey> I ran the topic through Google translate =)
2012-07-05 20:27:11 UTC <shapr> luite: I discovered that tryhaskell.org is using jsonp, which is another way to do cors: http://en.wikipedia.org/wiki/JSONP
2012-07-05 20:27:33 UTC <shapr> That also explains why I was confused about tryhaskell's approach to loading results.
2012-07-05 20:32:55 UTC <luite> yeah but jsonp doesn't work for websockets
2012-07-05 20:33:24 UTC <shapr> Does this require websockets?
2012-07-05 20:33:42 UTC <luite> either that or some workaround like long polling
2012-07-05 20:34:16 UTC <shapr> ACTION checks his notes
2012-07-05 20:34:57 UTC <luite> you (probably?) want realtime updates, those don't really fit well in the usual http request/response model
2012-07-05 20:35:45 UTC <luite> long polling keeps connections open to the server, with a request. the server only sends the reply when it has something to tell
2012-07-05 20:35:45 UTC <shapr> Hm, the way I understand the basics of ajax, javascript asks the server for a result... the connection waits around until the server has something to send, or until a set timeout is passed.
2012-07-05 20:35:49 UTC <shapr> Right
2012-07-05 20:36:24 UTC <shapr> At the end of either branch, the request is re-opened.
2012-07-05 20:36:41 UTC <luite> yeah, but that requires more work to set up than websockets, since you need to maek sure that no events are missed
2012-07-05 20:37:21 UTC <luite> and more overhead of course, since there's a new request every time, but it will work better with http proxies
2012-07-05 20:37:47 UTC <shapr> So, how do websockets work? Do they wrap a 'real' tcp connection inside long polling?
2012-07-05 20:38:23 UTC <luite> no, they upgrade the http socket to a websocket, so you just use that tcp connection
2012-07-05 20:38:52 UTC <luite> basically you just do a http request with a connection: upgrade header and some handshake headers
2012-07-05 20:39:01 UTC <shapr> Wow, nifty. I didn't know about that.
2012-07-05 20:39:18 UTC <shapr> I know about SPDY, but I don't think that's the same thing.
2012-07-05 20:39:20 UTC <luite> but http proxies need ot handle upgraded connections of course
2012-07-05 20:39:58 UTC <luite> websockets are probably the best thing, and for non-proxied stuff they should work well
2012-07-05 20:40:19 UTC <luite> the host shouldn't need to forward more ports than the usual port 80 since the existing port 80 connections just get upgraded
2012-07-05 20:40:42 UTC <shapr> ACTION reads http://en.wikipedia.org/wiki/WebSocket
2012-07-05 20:44:07 UTC <luite> shapr: i'd personally use websocket and perhaps implement a fallback over long polling later if required for older browsers
2012-07-05 20:47:19 UTC <luite> but what are you doing atm? making a haskell implementation of what you have with sharejs?
2012-07-05 20:48:01 UTC <shapr> Not yet, how hard would that be?
2012-07-05 20:48:43 UTC <luite> not terribly easy, but it would be really cool if we had something like that
2012-07-05 20:49:47 UTC <luite> especially if it could synchronize "richer" data than just text. would make it possible to have easy shared calendars, shopping carts that are synchronized between browser sessions etc
2012-07-05 20:49:54 UTC <shapr> And that would cut it down to a single hackage, instead of a single hackage and a node.js install.
2012-07-05 20:50:00 UTC <luite> yes
2012-07-05 20:50:27 UTC <shapr> That's a good point, how will sharejs handle svg data?
2012-07-05 20:50:54 UTC <luite> i think it's a good enough thing to spend the rest of the project on, but i'm not sure if it's doable. i've been trying to design a haskell api for this today, but don't have much yet
2012-07-05 20:51:25 UTC <luite> i don't think results need to be shared through this
2012-07-05 20:51:30 UTC <luite> since they're not editable
2012-07-05 20:51:38 UTC <shapr> hm, point
2012-07-05 20:51:57 UTC <shapr> Will newly joined users want to see the history?
2012-07-05 20:52:00 UTC <shapr> Or should it be irc-like?
2012-07-05 20:52:14 UTC <shapr> irc-like is easiest, and would be usable.
2012-07-05 20:52:59 UTC <luite> but what i wanted to propose was to try to make a separate haskell packge for a shared collaborative data lib, and if there's not enough time to finish integrating everything in ghclive i'll help with that, borrowing wolfgang code
2012-07-05 20:54:39 UTC <shapr> So, get ghclive working with share.js, and then work on replacing the node.js part with Haskell?
2012-07-05 20:56:20 UTC <luite> yeah, the second part will probably involve working on a separate package first, integrating it later. if there's not enough time to completely finish it, i'll fix that. edwardk is ok with it if ghclive is not 100% finished at the end if there's some other thing to show for it
2012-07-05 20:57:14 UTC <shapr> That sounds good.
2012-07-05 20:58:17 UTC <shapr> On the good side, if we stick with an irc-like output where you only get what has been sent since you joined...
2012-07-05 20:58:28 UTC <shapr> Then the SVG functionality can stay, and a sharejs output isn't needed at all.
2012-07-05 20:59:11 UTC <luite> oh, right. uh, wait
2012-07-05 20:59:30 UTC <luite> i think you can do it with history if the shared object isn't just a text
2012-07-05 20:59:39 UTC <shapr> Oh
2012-07-05 20:59:41 UTC <shapr> Oh!!
2012-07-05 20:59:45 UTC <shapr> I like that!
2012-07-05 20:59:52 UTC <luite> but a json array of objects with something like { expr: "aaa", result: { .... } }
2012-07-05 20:59:57 UTC <shapr> So basically, just have a dynamically generated web page on the server.
2012-07-05 21:00:09 UTC <shapr> Append to the data when a new result is generated.
2012-07-05 21:00:14 UTC <luite> yeah
2012-07-05 21:00:25 UTC <luite> and perhaps remove old lines after a while
2012-07-05 21:00:31 UTC <shapr> super-ugly fast solution would be to reload that page every few seconds on every client.
2012-07-05 21:00:44 UTC <shapr> Since, as you say, it's pure output, unlike wolfgang.
2012-07-05 21:00:57 UTC <luite> oh that's even easier, but with the library, you can just stream updates to clients over websockets
2012-07-05 21:01:59 UTC <luite> (anyway that's the plan, don't have anythign concrete yet)
2012-07-05 21:04:01 UTC <shapr> Ok, so ugly hack the server output, sharejs for the source code editing, and some sort of input field for ghci input.
2012-07-05 21:05:26 UTC <luite> yeah sounds like a good plan. don't spend too long on sharejs if it doesn't work properly :)
2012-07-05 21:05:31 UTC <shapr> right
2012-07-05 21:05:44 UTC <shapr> I tried synchronizing between two browsers, and some events get dropped.
2012-07-05 21:05:53 UTC <shapr> Specifically, drag select and backspace doesn't go to the other browser.
2012-07-05 21:06:09 UTC <shapr> So I wonder if that's a problem with sharejs or something else is going on.
2012-07-05 21:06:13 UTC <shapr> ACTION shrugs
2012-07-05 21:08:04 UTC <shapr> ACTION ugly hacks the output
2012-07-05 21:08:15 UTC <luite> i'll try to make a bit more concrete api proposal and we can discuss that soon hopefully, the basic idea is to combine a few crtds from this paper: http://hal.inria.fr/docs/00/55/55/88/PDF/techreport.pdf , to implement sequences (arrays, strings), maps (json objs), sets, counters and some basic things like tuples
2012-07-05 21:09:09 UTC <shapr> So, you're talking about synchronized state that's native Haskell values?
2012-07-05 21:10:12 UTC <luite> not sure yet, but yeah the idea is to have some wrapper around a haskell thing to make it synchronized, perhaps by generating some code with TH if necessary
2012-07-05 21:12:11 UTC <luite> not all haskell data can be synchronized, and a Synchronized String does look different from a regular String, since it must have unique identifiers for each character
2012-07-05 21:12:21 UTC <luite> (see the paper for more info)
2012-07-05 21:12:25 UTC <shapr> ACTION downloads
2012-07-05 21:13:08 UTC <luite> but the idea is that you can convert a Synchronized String to a String to get the current version, and to apply modifications (operation or merge) to the synchronized ones
2012-07-05 21:15:17 UTC <luite> i haven't looked into mgsloans implementation in detail yet, but i think we can make a less general one
2012-07-05 21:16:36 UTC <shapr> optimistic replication sounds like STM
2012-07-05 21:17:57 UTC <luite> optimistic means that there can be temporary inconsistencies
2012-07-05 21:18:45 UTC <luite> clients could edit their source code while they're disconnected
2012-07-05 21:18:58 UTC <luite> and when they reconnect, everything will always merge fine
2012-07-05 21:19:01 UTC <shapr> neat
2012-07-05 21:19:17 UTC <luite> (although the merged result might be invalid of course)
2012-07-06 07:57:45 UTC <cheater__> luite: why not use world revisions?
2012-07-06 10:43:53 UTC <luite> cheater_: can you elaborate?
2012-07-06 19:59:46 UTC <cheater_> luite: like in datomic, where every transaction number describes a "world revision", i.e. the whole database at that point, and every transaction can be rolled back to at any time afterwards
2012-07-06 20:02:48 UTC <luite> cheater_: how does that work if two clients modify revision x simultaneously?
2012-07-06 20:41:13 UTC <tgeeky> luite: you have a few options: 1. ban simultaniety, or 2. use dWorld/dt instead of World
2012-07-06 21:01:25 UTC <cheater_> 3. let them diverge
2012-07-06 21:01:49 UTC <cheater_> hoping that they'll converge at some point (and quite often they will)
2012-07-06 21:02:48 UTC <cheater_> for example, if you have a list of messages, and store the latest time it was read (or null)
2012-07-06 21:03:17 UTC <cheater_> then if you want a list of all messages that have been read it doesn't matter if the time-message-was-read column diverges
2012-07-06 21:10:19 UTC <luite> cheater_: that's basically the idea of crdts, a "last read" integer is already a crdt, since it's just the max operation, so updates to the state commute
2012-07-06 21:11:07 UTC <luite> but for sequences, like text, you need a bit more metadata do do that, so that was the plan
2012-07-06 21:43:14 UTC <tgeeky> hm.
2012-07-06 21:43:19 UTC <tgeeky> that max operation thing sounds like a heap?
2012-07-06 21:48:15 UTC <cheater_> no idea what you mean luite
2012-07-07 06:46:28 UTC <cheater_> luite: can you explain in some other way?
2012-07-07 11:17:06 UTC <luite> cheater__: the idea is that instead of storing just the characters as text, you store text as a sequence of (char,visible,uniqueid)
2012-07-07 11:18:04 UTC <luite> cheater__: now every insertion is an insertAfter(uniqueid, (char,True,newUniqueId)), and every deletion simply sets visible to False
2012-07-07 11:20:03 UTC <luite> cheater__: if you now have a consistent way to handle simultaneous inserts after the same id, every client will eventually end up with the same document
2012-07-07 15:33:30 UTC <cheater__> luite: aha
2012-07-07 15:33:35 UTC <cheater__> luite: interesting
2012-07-07 15:35:49 UTC <cheater__> luite: so what is a crdt?
2012-07-07 15:36:57 UTC <cheater__> Commutative Replicated Data Type
2012-07-07 15:36:59 UTC <cheater__> found the paper
2012-07-07 15:37:01 UTC <cheater__> reading now
2012-07-07 15:41:57 UTC <cheater__> luite: so they need the updates to commute?
2012-07-07 15:42:23 UTC <cheater__> luite: that's an unusual requirement, i can't imagine a whole lot of practical applications for that, can you give some examples?
2012-07-07 15:57:00 UTC <luite> cheater__: it removes the need for synchronization, collaborative text editing can be a good example, where clients can be offline for some time, and there's no central authority or synchronization required but consistency is still guaranteed
2012-07-07 16:01:14 UTC <cheater__> yea but give me an example of data where updates actually are commutable
2012-07-07 16:19:00 UTC <luite> cheater__: the sequence data type described there works for text
2012-07-07 16:19:20 UTC <shapr> luite: Good morning!
2012-07-07 16:19:23 UTC <shapr> @localtime luite
2012-07-07 16:19:24 UTC <lambdabot> Local time for luite is Sat Jul  7 18:19:23 2012
2012-07-07 16:19:29 UTC <shapr> Or is that good evening?
2012-07-07 16:20:00 UTC <luite> something like that
2012-07-07 16:32:39 UTC <luite> shapr: how's the shared editor going?
2012-07-07 16:32:50 UTC <shapr> Slowly :-|
2012-07-07 16:33:18 UTC <shapr> luite: I'm still working on the big chunk of output.
2012-07-07 16:33:33 UTC <shapr> At this point, I think I can keep it as Html, and mappend new outputs.
2012-07-07 16:34:12 UTC <shapr> But, what sort of state is best to use?
2012-07-07 16:34:26 UTC <shapr> For my program, I think an MVar maybe?
2012-07-07 16:35:03 UTC <luite> IORef is probably easiest if you just want a mutable thing, no synchronization
2012-07-07 16:35:28 UTC <shapr> I figured IORef would be good, but then I started reading about the many flavors of 'variables'...
2012-07-07 16:37:22 UTC <luite> MVar would also work, it also does synchronization if you need that, it's some kind of box that can be empty, readers block, or can be full (writers block)
2012-07-07 16:37:35 UTC <shapr> Right.
2012-07-07 16:38:20 UTC <luite> you have IO and stuff, so a pure State monad probably wouldn't work, but you could use a StateT transformer.
2012-07-07 16:38:36 UTC <luite> same for ST (but there's no ST transformer)
2012-07-07 16:39:00 UTC <shapr> So the only downside for using MVar is that 'reading' it requires you to replace the value?
2012-07-07 16:39:33 UTC <luite> yeah, readMVar takes it and then puts it back
2012-07-07 17:40:57 UTC <cheater__> luite: i know that you can *store* text in that sequence type
2012-07-07 17:41:11 UTC <cheater__> luite: but it's not about whether the type is compatible, it's about the *updates* to the data are compatible
2012-07-07 17:41:30 UTC <cheater__> now describe please an application in which you make updates to text such that those updates are commutable
2012-07-07 17:42:05 UTC <cheater__> correction: it's about the *updates* to the data *being compatible
2012-07-07 18:55:52 UTC <tgeeky> hm
2012-07-07 18:56:23 UTC <tgeeky> cheater__: permission to speak loosely about this subject?
2012-07-07 18:57:15 UTC <cheater__> make it so
2012-07-07 18:58:04 UTC <tgeeky> let's imagine we're in luite's or shapr's environment on the web somewhere, and they have graciously provided the top 500 packages on hackage
2012-07-07 18:58:16 UTC <tgeeky> (by reverse deps, I suppose)
2012-07-07 18:58:22 UTC <tgeeky> which are well formed and compile
2012-07-07 18:58:45 UTC <tgeeky> then, they provide the ability for any user to edit any of that code (that is, suggest a change)
2012-07-07 18:58:54 UTC <tgeeky> as well as introduce new packages
2012-07-07 18:59:02 UTC <cheater__> where are you going with that
2012-07-07 18:59:39 UTC <tgeeky> cheater__: you and I are both attracted to the lens packages, and we start editing all three of these new polymorphic lens packages (just released) and we edit them both at the same time
2012-07-07 18:59:50 UTC <tgeeky> what kind of incompatabilities
2012-07-07 18:59:54 UTC <tgeeky> do you picture arising?
2012-07-07 19:01:10 UTC <cheater__> you can make patches commute in many cases if your patching program understand the programming language it's working on
2012-07-07 19:01:49 UTC <tgeeky> yep, but in a general hand-wavy sense, how sophisticated could you assume such a patching program could be
2012-07-07 19:01:57 UTC <tgeeky> do you suppose you and I could edit the same function at the same time
2012-07-07 19:02:00 UTC <tgeeky> and merge the results?
2012-07-07 19:02:15 UTC <cheater__> in the best possible world, probably yes
2012-07-07 19:03:03 UTC <tgeeky> my point is, that's a difficult thing to do (though not impossible)
2012-07-07 19:03:33 UTC <tgeeky> but just go a little bit lighter, and you still have a great system: if you can be sure that all patches will commute modulo the toplevel function definition (name, and type)
2012-07-07 19:03:38 UTC <cheater__> so why does luite want to use crdt's?
2012-07-07 19:04:15 UTC <tgeeky> I'm not even sure I think crdts are a correct idea, but I don't know
2012-07-07 19:04:22 UTC <tgeeky> and I don't know why he want to use them
2012-07-07 19:04:49 UTC <tgeeky> cheater__: oh!
2012-07-07 19:04:57 UTC <tgeeky> cheater__: you asked for an example where the updates are commutable
2012-07-07 19:05:14 UTC <tgeeky> cheater__: haskell files, modulo the toplevel function names (and types)
2012-07-07 19:05:28 UTC <tgeeky> cheater__: that is, you can freely reorder the functions in a Haskell module, and thus they commute
2012-07-07 19:05:51 UTC <tgeeky> and they all commute with introducing a new function (with a new name)
2012-07-07 19:06:28 UTC <tgeeky> top-level type signatures commute with everything within the module
2012-07-07 19:06:51 UTC <cheater__> not sure what you mean by that
2012-07-07 19:07:00 UTC <cheater__> wait i missed a line
2012-07-07 19:07:41 UTC <tgeeky> cheater__: so a function definition is closed:  it is well defined iff all cases are contiguious
2012-07-07 19:07:49 UTC <cheater__> right i see how you'd think patching is commutable, but it's not
2012-07-07 19:07:50 UTC <tgeeky> but its type signature neednt be
2012-07-07 19:07:59 UTC <tgeeky> cheater__: I never said patching was this way
2012-07-07 19:08:13 UTC <tgeeky> I'm just saying, theoretically, if you were "ideally smart" about the contents of haskell files
2012-07-07 19:08:46 UTC <cheater__> well the action of "add a complete function definition under a new name to a haskell file and never change it again" is not an actual situation
2012-07-07 19:08:52 UTC <cheater__> that's my issue here
2012-07-07 19:09:10 UTC <tgeeky> why are you assuming that time is involved?
2012-07-07 19:09:13 UTC <cheater__> i can make up things like that all day long, but where's an actual application people use?
2012-07-07 19:09:30 UTC <cheater__> no one ever works with code like this
2012-07-07 19:09:49 UTC <tgeeky> cheater__: no one ever flew an airplane, until they did
2012-07-07 19:10:41 UTC <cheater__> i'm not going to go on a diatribe about how talking about imaginary situations in place of actual applications arising from need ends up fruitless
2012-07-07 19:10:56 UTC <cheater__> but i think you can imagine twenty screens of arguing
2012-07-07 19:10:59 UTC <cheater__> :)
2012-07-07 19:11:01 UTC <tgeeky> hehe
2012-07-07 19:11:10 UTC <tgeeky> well, how about a specific scenario that I currently find myself in
2012-07-07 19:11:32 UTC <tgeeky> say I want to write a functional pearl Hackage module, in the spirit of Functional Pearl papers.
2012-07-07 19:11:48 UTC <tgeeky> (I have three of these in varying states of completeness, translated from real Pearls)
2012-07-07 19:11:58 UTC <tgeeky> but one in particular is challenging: Enumerating the Rationals
2012-07-07 19:12:09 UTC <tgeeky> http://www.cs.ox.ac.uk/jeremy.gibbons/publications/rationals.pdf
2012-07-07 19:12:23 UTC <tgeeky> it essentially consists of the same function, defined 10 times
2012-07-07 19:13:08 UTC <tgeeky> cheater__: Should I really need to make 11 different modules if I don't want to use the silly "ratsNN" naming scheme?
2012-07-07 19:15:18 UTC <cheater__> i don't see the connection
2012-07-07 19:15:46 UTC <tgeeky> the process of going from rats01 .. rats02 .. rats03 ..
2012-07-07 19:16:18 UTC <tgeeky> nevermind, it's not important enough
2012-07-07 19:16:21 UTC <tgeeky> carry on!
2012-07-07 19:22:01 UTC <cheater__> important or not
2012-07-07 19:22:10 UTC <cheater__> i'm not sure how it relates
2012-07-07 19:22:17 UTC <cheater__> can you try to clarify?
2012-07-07 19:24:51 UTC <tgeeky> cheater__: I see it as something which fails to commute (at the module level) because of naming
2012-07-07 19:25:06 UTC <cheater__> right
2012-07-07 19:25:21 UTC <cheater__> so after several attempts we still don't have a practical application involving text
2012-07-07 19:25:38 UTC <cheater__> i wonder what else we can try to come up with something worthwhile
2012-07-07 19:27:00 UTC <tgeeky> cheater__: what if it's impractical, but helps performance... if you have a structure that is fully commutative then you can often automatically divide and conquer
2012-07-07 19:28:24 UTC <cheater__> i don't know any fully commutative structures involving text
2012-07-07 19:28:32 UTC <tgeeky> I don't know if Google Wave was a CRDT (I doubt it), but does the failure of that as a program indicate that such techniques for collaborative IMing and document editing don't work?
2012-07-07 19:54:56 UTC <luite> hm
2012-07-07 19:57:07 UTC <tgeeky> hmm indeed
2012-07-07 19:58:03 UTC <cheater__> i never understood what google wave was about
2012-07-07 19:58:06 UTC <cheater__> what was it about?
2012-07-08 01:04:23 UTC <tgeeky> :r
2012-07-08 01:04:27 UTC <tgeeky> damn.
2012-07-08 01:04:43 UTC <tgeeky> anyone here have some of the links to source code doing typed-list using kinds? or typed strings?
2012-07-08 01:27:33 UTC <tgeeky> as always, the original is best
2012-07-10 04:27:00 UTC <tgeeky> woohoo! another hacakge package of someone else's code :o
2012-07-10 04:30:11 UTC <shapr> tgeeky: oh?
2012-07-10 04:34:45 UTC <tgeeky> yep. I've released: rivers, metamorphic, and relation
2012-07-10 04:34:56 UTC <tgeeky> all of which are largely other people's work
2012-07-10 04:35:23 UTC <tgeeky> and I have three more such packages in the pipeline! :O
2012-07-10 04:37:07 UTC <tgeeky> metamorphic is really neat though. There's a block in the code with about 20 data structures defined in a row, all 1 -liners
2012-07-10 04:37:25 UTC <tgeeky> list,tree,queue,pqueue,dlist,rosetree,graph,heap,pheap
2012-07-11 03:24:56 UTC <tgeeky> byorgey: I found some slides by the same author that I asked to "BS" check. These are much more useful looking: http://www.cs.le.ac.uk/people/pt95/leicester2009.pdf
2012-07-11 03:37:27 UTC <tgeeky> now if only I understood "the (linear) CoSpan (bi-)category [holding for any cocomplete category]"
2012-07-11 22:12:10 UTC <tgeeky_> guys guys guys guys guys
2012-07-11 22:12:17 UTC <tgeeky_> I have devestating news
2012-07-11 22:12:33 UTC <mgsloan> :/
2012-07-11 22:12:38 UTC <tgeeky_> The surafce S (0,3) is homeomorphic to the interior of a "pair of pants"
2012-07-11 22:12:45 UTC <mgsloan> :)
2012-07-11 22:13:00 UTC <tgeeky_> all this time, I thought I was just putting on some trousers
2012-07-11 22:13:24 UTC <tgeeky_> If P = "pair of pants", then Mod(P) = Z^3
2012-07-11 22:13:46 UTC <tgeeky_> annnway
2012-07-11 22:13:57 UTC <tgeeky_> mgsloan: how goes the symposium stuff?
2012-07-11 22:14:07 UTC <mgsloan> Good! Submitted the abstract yesterday
2012-07-11 22:14:20 UTC <mgsloan> the prototype didn't really make it to functioning in time
2012-07-11 22:14:25 UTC <mgsloan> so still working on it
2012-07-11 22:14:54 UTC <mgsloan> getting distracted for a bit laying down the skeleton for a code layout inference + re-formatter
2012-07-11 22:15:19 UTC <mgsloan> you know, the stuff that would try to auto-align when it makes sense, etc
2012-07-11 22:15:29 UTC <mgsloan> stick to 80 col, etc
2012-07-11 22:15:32 UTC <tgeeky_> the "where import ..." thing?
2012-07-11 22:15:37 UTC <mgsloan> naah
2012-07-11 22:15:37 UTC <tgeeky_> no, something more general
2012-07-11 22:15:43 UTC <tgeeky_> don't pick 80!
2012-07-11 22:15:48 UTC <mgsloan> I should probably do "where import"
2012-07-11 22:16:04 UTC <tgeeky_> mgsloan: I think I have been plaing with similar-ish ideas the last few days
2012-07-11 22:16:07 UTC <mgsloan> well, that's the point!  It would infer what column stop you're using
2012-07-11 22:16:17 UTC <tgeeky_> mgsloan: ah, i see
2012-07-11 22:16:34 UTC <mgsloan> might make it partially a GUI app
2012-07-11 22:16:44 UTC <mgsloan> it'd show you the frequency of different styling decisions
2012-07-11 22:16:53 UTC <tgeeky_> ie, over all haskell packages?
2012-07-11 22:16:57 UTC <mgsloan> and let you look at the exceptions quickly
2012-07-11 22:17:06 UTC <mgsloan> well, whatever set of directories you want to
2012-07-11 22:17:09 UTC <tgeeky_> yeah
2012-07-11 22:17:18 UTC <mgsloan> maybe special-casing the current diff
2012-07-11 22:17:42 UTC <mgsloan> so, if you're writing a patch to GHC, you can see if you're sticking to the style
2012-07-11 22:18:42 UTC <mgsloan> I'd like to write it in a Haskell agnostic way, but it'll probably be tied to it for the near future (if it happens at all)
2012-07-11 22:18:57 UTC <tgeeky_> have you published the code yet?
2012-07-11 22:19:14 UTC <mgsloan> naah, just started it 30 minutes ago :)
2012-07-11 22:19:25 UTC <tgeeky_> are you working for most of the night?
2012-07-11 22:19:54 UTC <mgsloan> hopefully!  Someone wanted to hang out, so I might be persuaded away from the comp, but probably not
2012-07-11 22:20:03 UTC <tgeeky_> hehe :)
2012-07-11 22:20:18 UTC <tgeeky_> hm. what's the visual-editor channel?
2012-07-11 22:20:32 UTC <tgeeky_> you're not in it :O
2012-07-11 22:20:35 UTC <mgsloan> #haskell-visual-programming
2012-07-11 22:20:53 UTC <tgeeky_> mgsloan: ok, let's discuss this stuff somewhere
2012-07-11 22:21:05 UTC <tgeeky_> too many people in these channels
2012-07-11 22:21:06 UTC <tgeeky_> how about #pee
2012-07-11 22:26:37 UTC <mgsloan> ACTION likes 80 col :)
2012-07-11 22:26:48 UTC <mgsloan> back when I started Haskell I loved writing 200 col lines
2012-07-11 22:27:15 UTC <mgsloan> then I interned at Google and it totally changed my Haskell style (despite being C++)
2012-07-11 22:28:44 UTC <tgeeky> back
2012-07-11 22:28:46 UTC <mgsloan> it makes even more sense with Haskell where your lines can be so terse
2012-07-11 22:29:06 UTC <tgeeky> yes, but on the other hand, there are circumstances where something is apparent when two lines are sitting next to each other, but not (when they aren't)
2012-07-11 22:29:08 UTC <mgsloan> the 80 col limit really reminds you to space things out and maybe comment them
2012-07-11 22:29:15 UTC <mgsloan> true
2012-07-11 22:29:21 UTC <tgeeky> let me find examples of my spacing
2012-07-11 22:29:26 UTC <mgsloan> I've seen it :)
2012-07-11 22:29:31 UTC <tgeeky> did you see metamorphic?
2012-07-11 22:29:55 UTC <mgsloan> The stuff about placing semantics on the characters used?
2012-07-11 22:30:02 UTC <tgeeky> oh, nope
2012-07-11 22:30:05 UTC <tgeeky> http://hackage.haskell.org/packages/archive/metamorphic/0.1.2.3/doc/html/src/Graph.html
2012-07-11 22:30:16 UTC <tgeeky> it's a rip/pull of code from Martin Erwig from 1999
2012-07-11 22:30:38 UTC <tgeeky> so, for instance, "addSucc, addPred, clearSucc, clearPred" both stand out
2012-07-11 22:30:45 UTC <tgeeky> when you explicitly space your 3-tuple
2012-07-11 22:31:22 UTC <mgsloan> so, yeah, those don't go too far beyond 80
2012-07-11 22:31:28 UTC <tgeeky> here's some bad ones:
2012-07-11 22:31:30 UTC <tgeeky> http://hackage.haskell.org/packages/archive/metamorphic/0.1.2.3/doc/html/src/Aprog.html
2012-07-11 22:31:33 UTC <tgeeky> "nodes .. grev"
2012-07-11 22:31:58 UTC <mgsloan> Interesting type sigs!  How long has Haskell had them out-of-line?
2012-07-11 22:32:12 UTC <mgsloan> I almost never do type sigs apart from their definitions
2012-07-11 22:32:12 UTC <tgeeky> mgsloan: hm? out of line?
2012-07-11 22:32:20 UTC <tgeeky> mgsloan: yeah, I find myself doing that a lot
2012-07-11 22:32:32 UTC <tgeeky> so, here's the observation I had the other day
2012-07-11 22:32:43 UTC <tgeeky> basically, if your library consists of writing a bunch of one-liners to define things
2012-07-11 22:32:45 UTC <mgsloan> I like it a lot, but I want a tool that does it for me, in a somewhat more graphical way
2012-07-11 22:33:26 UTC <tgeeky> then putting type signatures near the function definitions just adds visual noise that diminishes your ability to pick out the similarities
2012-07-11 22:33:29 UTC <tgeeky> of the code
2012-07-11 22:33:36 UTC <tgeeky> the problem is, so do comments
2012-07-11 22:33:43 UTC <mgsloan> yup
2012-07-11 22:34:01 UTC <mgsloan> Yeah, I never liked full inline docs
2012-07-11 22:34:16 UTC <mgsloan> I felt like it really distinctivenesses good docs
2012-07-11 22:34:18 UTC <tgeeky> furthermore, becuase of the way haddock parses things, it fails on cases where it shouldn't
2012-07-11 22:34:28 UTC <tgeeky> which is to say, you should be able to replace every -- | with a -- ^, but you can't
2012-07-11 22:34:34 UTC <mgsloan> what you really need is separate code and docs, with a utility that checks consistency
2012-07-11 22:34:54 UTC <tgeeky> mgsloan: or, something which links the code and docs, but which doesn't require the *basic textual description* of the code has them in the same place explicitly
2012-07-11 22:35:10 UTC <mgsloan> right
2012-07-11 22:36:57 UTC <tgeeky> mgsloan: I thought that this was the most impressive part of this library: http://hackage.haskell.org/packages/archive/metamorphic/0.1.2.3/doc/html/src/Alib.html
2012-07-11 22:37:15 UTC <tgeeky> mgsloan: the "familiar data structures"
2012-07-11 22:37:19 UTC <tgeeky> and the implementations thereof
2012-07-11 22:38:08 UTC <tgeeky> anyway
2012-07-11 22:38:56 UTC <tgeeky> my latest notes at a strategy for this process is to consider the target language (and the langauge's "reserved words") to be explicitly whitespaced
2012-07-11 22:40:04 UTC <mgsloan> interesting stuff!
2012-07-11 22:40:07 UTC <tgeeky> mgsloan: the tools i have been messing with are bnfc-meta. What it basically does, is takes a specification of a context-free language in BNF form
2012-07-11 22:40:36 UTC <mgsloan> yeah, I've got that package on my list of "interesting TH stuff"
2012-07-11 22:41:08 UTC <tgeeky> so it does a few "special" things. One, it selects a anti-quotation syntax that is supposed to be universal among all quasiquoters
2012-07-11 22:41:23 UTC <mgsloan> did you see the "sugar haskell" paper?  I haven't looked at it in detail, but it seemed fantastic
2012-07-11 22:41:35 UTC <tgeeky> yes, I looked at it. I need to read it in detail
2012-07-11 22:41:50 UTC <mgsloan> I'm just gonna wait for the finished version
2012-07-11 22:42:30 UTC <mgsloan> and focus my efforts elsewhere than creating "meta-haskell" just yet, in case I want to build on top of their implementation
2012-07-11 22:42:33 UTC <tgeeky> mgsloan: the other thing that bnfc-meta does, is starts with a minimum BNF language that includes regular expressions
2012-07-11 22:43:40 UTC <mgsloan> I'm starting to prefer {{ }} for anti-quotation
2012-07-11 22:43:44 UTC <tgeeky> nooo!
2012-07-11 22:43:53 UTC <tgeeky> you have to save that for nested contexts
2012-07-11 22:43:55 UTC <mgsloan> haven't come up with a preferred syntax for quotation
2012-07-11 22:44:01 UTC <mgsloan> hmm
2012-07-11 22:44:10 UTC <tgeeky> and all those hastasche peopel :O
2012-07-11 22:44:39 UTC <tgeeky> mgsloan: first of all, I think it's important to notice that you may want to have a set of antiquotation operators
2012-07-11 22:44:57 UTC <mgsloan> well, they put those in strings, so that's fine
2012-07-11 22:45:35 UTC <mgsloan> I figured {{ is fine because you can't currently do it in Haskell, but I guess there's likely counter-examples
2012-07-11 22:45:37 UTC <tgeeky> so bnfc-meta proposed antiqutation has two forms:
2012-07-11 22:46:07 UTC <tgeeky> [C : h :], where h is a Haskell expression of type C
2012-07-11 22:46:21 UTC <tgeeky> and [:h:]
2012-07-11 22:46:45 UTC <tgeeky> where h is an expression in the original BNF category (whatever is the lowest category available, in this case, regular expressions + BNF)
2012-07-11 22:46:57 UTC <tgeeky> mgsloan: http://www.cse.chalmers.se/~patrikj/papers/MetaDSL_preprint_20110325.pdf
2012-07-11 22:47:02 UTC <tgeeky> so on the topleft of page 10
2012-07-11 22:48:04 UTC <tgeeky> mgsloan: regardless, the really powerful thing of this technique I think is that of figure 3
2012-07-11 22:48:37 UTC <mgsloan> interesting!
2012-07-11 22:49:20 UTC <mgsloan> oh yeah, doing that is known to be very hard
2012-07-11 22:49:39 UTC <tgeeky> they are almost partway to genuine nested template haskell
2012-07-11 22:49:41 UTC <mgsloan> even after getting your grammars combined, how do you proceed in transforming?
2012-07-11 22:49:52 UTC <mgsloan> yeah, that's definitely on my list of needs-to-be-done
2012-07-11 22:50:23 UTC <mgsloan> While I've been defending TH as a good tool for a while (still need to write a blog-post summarizing my thoughts there..)
2012-07-11 22:50:23 UTC <tgeeky> mgsloan: so let me finish my example of explicitly spaced things
2012-07-11 22:50:47 UTC <mgsloan> I think moving to an external preprocessor could be a good idea
2012-07-11 22:51:21 UTC <tgeeky> mgsloan: so, for example, I think with this general bnfc-meta technique, you could tell the grammar that you have a set of external preprocessors (in fact, they do exactly this, but they only do it for TH and CPP)
2012-07-11 22:51:46 UTC <mgsloan> especially if you can take changes to code, and generalize them to procedures for modifying the generated output (and putting these transforms on the front of the compile time stuff in the source code)
2012-07-11 22:51:51 UTC <tgeeky> yeah!
2012-07-11 22:51:52 UTC <tgeeky> exactly!
2012-07-11 22:52:03 UTC <tgeeky> it's almost as if you're dealing with a langauge diff(haskell) instead of Haskell
2012-07-11 22:52:24 UTC <mgsloan> yeah, we discussed this in the context of using git for maintaining hashes of chunks, before
2012-07-11 22:53:16 UTC <mgsloan> could be really awesome, and there'd be no more "but only GHC has TH!"
2012-07-11 22:53:18 UTC <tgeeky> mgsloan: the cool thing about this process, is your resulting parser is exactly the same kind of parser Haskell uses anyway (happy and alex based)
2012-07-11 22:55:33 UTC <mgsloan> yup!
2012-07-11 22:55:59 UTC <mgsloan> now, one tricky thing is how to cleanup errors that happen post-pre-process
2012-07-11 22:56:00 UTC <tgeeky> mgsloan: in fact, I think there's potential for a *huge* performance gain
2012-07-11 22:56:12 UTC <tgeeky> because they include regexps in the BNF language, but don't actually implement them in a way which is fast
2012-07-11 22:56:58 UTC <mgsloan> so break out of the CFG into regex land when possible?
2012-07-11 22:57:28 UTC <tgeeky> no, they boostrap all BNFs with the BNF representation of regexes
2012-07-11 22:58:34 UTC <mgsloan> right.  I'm not too knowledgeable about parsing, but it seems like the BNF parsers would also be pretty darn fast
2012-07-11 22:58:47 UTC <mgsloan> using similar tricks as optimal regex parsing
2012-07-11 22:59:16 UTC <tgeeky> yep. That's why I have been trying to understand/merge this code with regex-applicative
2012-07-11 23:00:08 UTC <tgeeky> mgsloan: unfortauntely you can't see the soruce of bnfc-meta on hacakage without getting it (no docs at all)
2012-07-11 23:00:24 UTC <tgeeky> if you look at it, in CFtoPrinter (should be CFtoPretty), they have a function rules
2012-07-11 23:00:30 UTC <tgeeky> which strips out haskell reserved words
2012-07-11 23:00:59 UTC <tgeeky> these things exist all over the place (and the list of haskell reserved words technically depends on what extensions are enabled)
2012-07-11 23:01:08 UTC <mgsloan> awesome!  Have you seen trifecta?  It's a bit complex, but pretty cool stuff.  Something like that might be ideal - due to online parsing - but currently I don't think it's ready
2012-07-11 23:01:29 UTC <tgeeky> yeah. trifecta is probably the single best organized (abstracted) module I've seen
2012-07-11 23:02:06 UTC <mgsloan> It's pretty great.  I'm not sure if I 100% agree with that level of breaking code into files
2012-07-11 23:02:17 UTC <mgsloan> but a better editor would fix that being any bother :P
2012-07-11 23:02:24 UTC <tgeeky> hehe
2012-07-11 23:02:40 UTC <tgeeky> so, the general pattern I mean by explicit spaceing is this:
2012-07-11 23:03:05 UTC <tgeeky> actually, I know *just* the thing
2012-07-11 23:03:45 UTC <tgeeky> http://www.andres-loeh.de/ASGDSL/ASGDSL.pdf <-- page 10
2012-07-11 23:03:51 UTC <tgeeky> 6.7 printing terms
2012-07-11 23:04:05 UTC <tgeeky> the last part (in ...)
2012-07-11 23:05:28 UTC <tgeeky> if you imagine factoring out all of the concats
2012-07-11 23:05:44 UTC <mgsloan> ah, each ++ is a degree of freedom
2012-07-11 23:06:02 UTC <mgsloan> at least when used when whitespace is insignificant
2012-07-11 23:06:21 UTC <tgeeky> you'll have:  (  "let { "  , intercalate "; ", x , " } in " , text' (es vs c') , ")" )
2012-07-11 23:06:24 UTC <tgeeky> that's it!
2012-07-11 23:06:27 UTC <mgsloan> I /really/ want to make a quasi-quoter that targets ASGs
2012-07-11 23:06:28 UTC <tgeeky> explicitly make whitespace significant
2012-07-11 23:06:47 UTC <mgsloan> I've already got a good deal of TH de-sugaring, so fairly compact ASGs could be targeted
2012-07-11 23:07:03 UTC <tgeeky> so redfine your langauge such that the keywords that you had in strings necessarily have spaces on either side of them:
2012-07-11 23:07:12 UTC <tgeeky> "let" -> " let "
2012-07-11 23:07:17 UTC <tgeeky> "{" -> " { "
2012-07-11 23:07:26 UTC <tgeeky> ";" -> " ; "
2012-07-11 23:07:30 UTC <tgeeky> etc
2012-07-11 23:07:56 UTC <tgeeky> you may need to add more than one space to either side, and you may even need to sysematically bias the spaces
2012-07-11 23:08:12 UTC <tgeeky> but, you know that later, when you want to make valid haskell, that you have freedom to do whatever you want with the spaces
2012-07-11 23:08:33 UTC <tgeeky> in particular, you can always preform regex-like substitutions that reduce spaces: s/  / /
2012-07-11 23:09:16 UTC <tgeeky> the key compoent of this approach is that you can consider the resulting strings to be "cenered"
2012-07-11 23:09:31 UTC <tgeeky> meaning, you know that you can gobble up excess spacing on either side until you're left with the original keyword
2012-07-11 23:10:14 UTC <tgeeky> in this way, you write parsers and pretty printers who know to line up things in columns, such as the " :: " of type signatures, or " = " of definitions
2012-07-11 23:10:44 UTC <mgsloan> hmm, not sure I see the advantage of adding whitespace to the tokens!
2012-07-11 23:11:02 UTC <tgeeky> mgsloan: because it lets you bar 1 character tokens
2012-07-11 23:11:14 UTC <tgeeky> the smallest thing you can sensibly write is: " a "
2012-07-11 23:11:35 UTC <mgsloan> ahh, gotcha. so this gives more wiggle room for DSLs
2012-07-11 23:12:10 UTC <mgsloan> so, double spaced function application
2012-07-11 23:12:17 UTC <mgsloan> could lead to some interesting results
2012-07-11 23:12:28 UTC <mgsloan> (obfuscated, naturally)
2012-07-11 23:12:28 UTC <tgeeky> yes.. down this path fully leads to 2D haskell
2012-07-11 23:12:48 UTC <tgeeky> but that's way beyond this, and I don't even understand that yet (though I have written part of a 2D pretty printer)
2012-07-11 23:13:10 UTC <mgsloan> take while  ( < 20 )  [  1  ..  ]
2012-07-11 23:13:39 UTC <mgsloan> (single space between take and while means it's one token)
2012-07-11 23:17:12 UTC <tgeeky> so, as an example: http://hackage.haskell.org/packages/archive/metamorphic/0.1.2.3/doc/html/src/A.html
2012-07-11 23:17:17 UTC <tgeeky> the typesigs for fold, unfold, and via
2012-07-11 23:17:30 UTC <tgeeky> if you approach this problem normally, I find it hard to understand how you'd get such a result as I have typed out here
2012-07-11 23:17:43 UTC <tgeeky> but a few things seem clear
2012-07-11 23:18:20 UTC <tgeeky> first, the way I've spaced it, it's clear that *both* " :: " and " => " are column-centered tokens
2012-07-11 23:19:28 UTC <tgeeky> and second, it's clear how to get from the most compressed version of those signatures, say:
2012-07-11 23:19:49 UTC <tgeeky> fold :: (Functor g) => (g u ->   u) -> A    s  g   t -> (t -> u)
2012-07-11 23:20:27 UTC <tgeeky> to the expanded version, by ignoring everything except [" :: "," => "," -> "]
2012-07-11 23:21:27 UTC <tgeeky> and, for the paragraph of typesigs: by doing operations which are "ghc-will-accept-this-signature" idempodent
2012-07-11 23:22:14 UTC <tgeeky> because you have every one of: s/ (tok) /... (tok) .../
2012-07-11 23:22:30 UTC <tgeeky> where ... are any number of space or tab or newline characters
2012-07-11 23:23:22 UTC <tgeeky> (it's also clear that you can always reverse this regex substitution)
2012-07-11 23:23:48 UTC <tgeeky> ok, enough of that for now ;)
2012-07-11 23:25:33 UTC <tgeeky> there are actually cases where you have to be careful... I think they involve kinds
2012-07-11 23:25:51 UTC <tgeeky> things like (a::(*->*)->*)
2012-07-11 23:27:19 UTC <mgsloan> gotcha!  why's "column-centered" special?  I mean, it seems like you'd always have it set to the longest thing on the left + 1
2012-07-11 23:27:57 UTC <mgsloan> I suppose it might have something to do with the "jagged-ness" of the things to the left and right, but that's an emergent property of the alignmnet
2012-07-12 00:08:15 UTC <mgsloan> So, an interesting observation I had from instance-templates
2012-07-12 00:08:43 UTC <mgsloan> if you want to add an additional top-level declaration / new type of namespace, you can do that by creating a new typeclass
2012-07-12 00:09:05 UTC <mgsloan> especially in GHC 7.6 where there's type-level strings
2012-07-12 00:10:23 UTC <mgsloan> although using type-level strings makes it so that you can't hide them...  Empty datatypes (which is what I currently use) might be better
2012-07-12 02:14:28 UTC <tgeeky> ACTION is back for the moment
2012-07-12 02:15:05 UTC <tgeeky> it's my birthday I can't shrug off birthday dinner for code :O
2012-07-12 02:16:14 UTC <tgeeky> mgsloan: I thought it might be useful to typeclass-all-the-things (as in the ASG approach using PHOAS classes)
2012-07-12 02:16:30 UTC <tgeeky> but I read a post by Tekmo on reddit today that talks about how haskell is better at value-level programming
2012-07-12 02:25:15 UTC <fryguybob> tgeeky: Happy birthday!
2012-07-12 02:27:05 UTC <mgsloan> happy birthday!!
2012-07-12 02:27:22 UTC <mgsloan> tgeeky: Was it "Scrap your type classes"?
2012-07-12 02:28:20 UTC <mgsloan> I do think that typeclasses should de-sugar to implicit params + data dicts with type-specific defaults
2012-07-12 02:28:25 UTC <mgsloan> maybe :)
2012-07-12 02:36:01 UTC <tgeeky> perhaps. implicit params are another thing that is useful but nasty looking in code
2012-07-12 02:37:37 UTC <tgeeky> thanks for the birthday wishes :O
2012-07-12 02:38:00 UTC <tgeeky> mgsloan: yep, scrap your type classes
2012-07-12 02:41:08 UTC <mgsloan> I'm going to use that as another reference for "this is the kind of reasoning that falls out of not having instance templates" :)
2012-07-12 02:42:47 UTC <tgeeky> hehe
2012-07-12 02:43:08 UTC <tgeeky> how useful is the reducing-the-scope-of-imports aspect of instance templates?
2012-07-12 02:43:26 UTC <mgsloan> pretty sure instance templates resolves almost everything he points out
2012-07-12 02:43:57 UTC <mgsloan> hmm, what do you mean? I'm not including local imports in the instance template proposal
2012-07-12 02:44:47 UTC <mgsloan> though, with this extension and some of the recent extensions (constraint kinds, type families), and there are now some very interesting parallels between ADTs, classes, and modules.
2012-07-12 02:45:14 UTC <tgeeky> yeah, I keep getting intuitions of that sort, but I don't know what to do with them
2012-07-12 02:45:54 UTC <mgsloan> http://research.microsoft.com/en-us/um/people/simonpj/Papers/first-class-modules/first_class_modules.pdf
2012-07-12 02:46:21 UTC <mgsloan> here's an interesting take on unifying at least ADTs and modules.  Not sure what they do about typeclasses, though
2012-07-12 02:47:12 UTC <tgeeky> is this paper recent?
2012-07-12 02:47:27 UTC <mgsloan> what's interesting is that now typeclasses have type families and data families - we've got all other top-level decls except instances!  This means that we can transform many modules into an instance of the abstract schema for the module
2012-07-12 02:47:28 UTC <mgsloan> nope, 2001
2012-07-12 02:49:26 UTC <mgsloan> with instance templates, if all instantiations of a module schema have the same instance definitions (in terms of the stuff declared in the module), then we can abstract those too.
2012-07-12 02:50:03 UTC <tgeeky> can you be more specific about "module schema"?
2012-07-12 02:50:14 UTC <mgsloan> since we can make hidden identifiers, we can easily just proxy all of the instance methods
2012-07-12 02:50:24 UTC <mgsloan> module schema == lifting typeclasses to the module level
2012-07-12 02:50:39 UTC <mgsloan> it's just a typeclass that encompasses all of the contents of a module
2012-07-12 02:50:53 UTC <mgsloan> (I just made up this term)
2012-07-12 02:51:04 UTC <tgeeky> that's fine, I just need to understand what kind of thing we're talking about
2012-07-12 02:51:07 UTC <mgsloan> yup :)
2012-07-12 02:51:54 UTC <mgsloan> (everything after the link doesn't have too much to do with it)
2012-07-12 02:52:03 UTC <tgeeky> ugh. hackage is down?
2012-07-12 02:52:06 UTC <mgsloan> I think so
2012-07-12 02:52:11 UTC <tgeeky> that's so embarassing
2012-07-12 03:13:20 UTC <tgeeky> mgsloan: hmm!
2012-07-12 03:13:37 UTC <tgeeky> this sugar papar might actually have the same requirements as this bnfc-meta thing
2012-07-12 03:13:52 UTC <tgeeky> yeah, context-free, layout-sensitive
2012-07-12 03:14:35 UTC <tgeeky> and they say they require compisition (where as bnfc-meta has... I don't know? extension?
2012-07-12 03:14:38 UTC <tgeeky> )
2012-07-12 03:15:41 UTC <tgeeky> I bet I get knocked offline. There's lightning striking every 30 seconds or so
2012-07-12 03:27:22 UTC <mgsloan> wow, he called it!
2012-07-12 03:46:47 UTC <tgeeky> see
2012-07-12 03:46:53 UTC <tgeeky> prediction is easy, when you have evidence
2012-07-12 13:17:52 UTC <tgeeky__> byorgey: ping?
2012-07-12 13:20:02 UTC <tgeeky__> oops, nevermind, foudn it
2012-07-12 13:53:46 UTC <byorgey> tgeeky__: found what?
2012-07-12 14:05:19 UTC <tgeeky__> a link to your blog
2012-07-12 14:05:37 UTC <tgeeky__> byorgey: do you have an account for wolframalpha?
2012-07-12 14:10:50 UTC <byorgey> tgeeky__: an account?  isn't it free?
2012-07-12 14:11:27 UTC <tgeeky__> somewhat. They have made ads more frequent, and some computation (stuff that requires actual hard work, like differential geometry or mapping riemann spheres or whatever) it may not show you
2012-07-12 14:11:42 UTC <tgeeky__> either way, it's worth checking out (there's a trial, and it's cheap)
2012-07-12 14:14:54 UTC <tgeeky__> byorgey: oh, if you look in the backlog in #haskell-blah, I made a (pretty cool, I think) observation about egyptian fractions and the so-called "eye of horus" numbers
2012-07-12 14:15:44 UTC <byorgey> tgeeky__: nah, I don't care enough about Wolfram Alpha to sign up for anything even the slightest bit non-free
2012-07-12 14:15:47 UTC <byorgey> the interface sucks
2012-07-12 14:15:53 UTC <tgeeky__> yes, that is very true
2012-07-12 14:16:22 UTC <tgeeky__> however, it's nice for quickly trying to evaluate hairy polynomials
2012-07-12 14:16:26 UTC <byorgey> all this "natural language" BS seems to cycle back into vogue every 10 years or so before everyone realizes it's a bad idea
2012-07-12 14:16:40 UTC <byorgey> tgeeky__: that's true, I do use it for things like that
2012-07-12 14:16:44 UTC <byorgey> and for doing date arithmetic
2012-07-12 14:17:25 UTC <tgeeky__> you can also do things like: automorphism group of dual of 2-apollonian graph
2012-07-12 14:17:31 UTC <tgeeky__> and you get a nice matrix
2012-07-12 14:18:51 UTC <tgeeky__> byorgey: I was playing with the tools on the site, with a polynomial that in some sense represents the (integer) partition function
2012-07-12 14:19:22 UTC <tgeeky__> i noticed that the function looked like it was smooth through the entire paramter space, so I turned on circle inversions
2012-07-12 14:19:25 UTC <tgeeky__> http://i.imgur.com/2IPr9.png
2012-07-12 14:19:28 UTC <tgeeky__> and found that
2012-07-12 14:20:06 UTC <tgeeky__> you can drag the slider, and watch it swap sets of circles from left to right and so on, as you play through the paramter space of the function
2012-07-12 14:20:09 UTC <tgeeky__> I was impressed :)
2012-07-12 14:20:23 UTC <tgeeky__> it's choppy as *hell* though, totally not usable to produce anything but screenshots
2012-07-12 14:20:35 UTC <luite> NEW!!
2012-07-12 14:20:41 UTC <tgeeky__> luite: what's new!!
2012-07-12 14:20:59 UTC <luite> half your bookmark toolbar
2012-07-12 14:21:25 UTC <tgeeky__> oh yes, those are the recent updates in haskell, so I can be sure to understand the new features
2012-07-12 14:21:39 UTC <tgeeky__> mis-numbered, though
2012-07-12 14:21:41 UTC <luite> 7.4.1 twice?
2012-07-12 14:21:46 UTC <tgeeky__> 7.4.2 is the second
2012-07-12 14:21:48 UTC <luite> ah
2012-07-12 14:21:59 UTC <tgeeky__> i'm currently using HEAD, but it doesn't have any notes yet
2012-07-12 14:22:04 UTC <tgeeky__> I do know that they removed catch from the prelude
2012-07-12 14:22:30 UTC <luite> oh they did? which version?
2012-07-12 14:22:45 UTC <tgeeky__> well, it's missing now, so I presume it will be missing in 7.6
2012-07-12 14:22:52 UTC <tgeeky__> 7.5.20120703 I tink
2012-07-12 14:23:11 UTC <luite> ah cool
2012-07-12 14:23:14 UTC <tgeeky__> this breaks cabal-install, because it breaks text and network
2012-07-12 14:23:48 UTC <luite> oh i guess they'll be updated in time
2012-07-12 14:24:05 UTC <tgeeky__> text has a patch already, network doesn't (and the bugged code is inside a MINGW ifdef, so it may not get noticed if I don't speak up)
2012-07-12 16:29:30 UTC <fryguybob> byorgey: Does anyone have exciting diagrams things to do for hac-phi?
2012-07-12 16:29:56 UTC <byorgey> fryguybob: no one has specifically talked about exciting diagrams things to do.
2012-07-12 16:30:25 UTC <byorgey> But one of my tasks for the next month is to figure out what exciting things there are to do, and make sure things are in a state where others can usefully contribute
2012-07-12 16:30:58 UTC <byorgey> I have a few branches I need to finish up and merge back in; I hope to finally switch over to github; etc.
2012-07-12 16:31:29 UTC <fryguybob> Cool.  Which I could come.
2012-07-12 16:31:34 UTC <fryguybob> (wish)
2012-07-12 16:34:49 UTC <fryguybob> I need to work up some more higher level examples that I've been thinking about and see if that inspires some more general tools.
2012-07-12 16:46:11 UTC <byorgey> fryguybob: I wish you could come too!
2012-07-12 16:46:46 UTC <byorgey> fryguybob: yeah, higher-level examples are great for inspiring general tools.  more examples would be excellent.
2012-07-12 16:49:29 UTC <fryguybob> byorgey: Rebekah will be going back home for a week in two weeks, so I should do at least a diagram a day then :D.
2012-07-12 16:51:58 UTC <byorgey> ah, sounds good =)
2012-07-12 18:58:20 UTC <edwardk> alpounet: ping
2012-07-12 18:58:21 UTC <lambdabot> edwardk: You have 1 new message. '/msg lambdabot @messages' to read it.
2012-07-13 02:06:13 UTC <mgsloan> https://github.com/mgsloan/instance-templates/blob/master/Test.hs
2012-07-13 02:06:17 UTC <mgsloan> https://github.com/mgsloan/instance-templates/blob/master/TestUse.hs
2012-07-13 02:06:27 UTC <mgsloan> This ended up taking way more code than I'd anticipated:
2012-07-13 02:06:36 UTC <mgsloan> https://github.com/mgsloan/instance-templates/blob/master/src/Language/Haskell/InstanceTemplates.hs
2012-07-13 02:27:44 UTC <tgeeky_> ACTION always forgets what Typable does
2012-07-13 02:57:41 UTC <mgsloan> here I'm using it as a trick to let me use the type parameters over again in the generated instance
2012-07-13 02:58:01 UTC <mgsloan> so, we've got TH code in the definition of the "invokeTemplate" method
2012-07-13 02:58:50 UTC <mgsloan> (and deriving' produces instances of the Template class)
2012-07-13 02:59:35 UTC <mgsloan> so, when you're instantiating templates, you specify which template to invoke by passing a dummy value that determines which instance of Template to call
2012-07-13 02:59:48 UTC <tgeeky_> ok
2012-07-13 02:59:54 UTC <mgsloan> but then I need to actually build the same types that you passed in that dummy value
2012-07-13 03:00:54 UTC <tgeeky_> so in this file
2012-07-13 03:01:02 UTC <tgeeky_> it looks like foo is a sort of implicit paramter
2012-07-13 03:01:20 UTC <mgsloan> yup
2012-07-13 03:01:25 UTC <tgeeky_> where I don't think it would normally be allowed
2012-07-13 03:01:45 UTC <tgeeky_> ok, so I have some cool (non-trivial) things expressed using implicit params -- list homomorphisms
2012-07-13 03:02:13 UTC <tgeeky_> let me dig
2012-07-13 03:02:20 UTC <mgsloan> yupyup
2012-07-13 03:02:34 UTC <mgsloan> so, these aren't really implicit parameters - they're declaration time parameters
2012-07-13 03:02:54 UTC <tgeeky_> yeah, but you could have as many of them as you want
2012-07-13 03:03:17 UTC <tgeeky_> you could have a dozen things in place of foo, as longa s they all have type a
2012-07-13 03:03:47 UTC <mgsloan> Invocation is currently ugly:
2012-07-13 03:03:47 UTC <mgsloan> $(instantiate [instance' [t| () |] (classHead :: Foo_Template (Int, TV_a) TV_b) [d|
2012-07-13 03:03:47 UTC <mgsloan>      foo = (5, undefined)
2012-07-13 03:03:47 UTC <mgsloan>    |] ])
2012-07-13 03:03:58 UTC <tgeeky_> that's fine
2012-07-13 03:04:05 UTC <tgeeky_> my bnfc-meta work will help you kill that
2012-07-13 03:04:09 UTC <mgsloan> but this just means:
2012-07-13 03:04:09 UTC <mgsloan> instance Foo (Int, a) b where
2012-07-13 03:04:09 UTC <mgsloan>   foo = (5, undefined)
2012-07-13 03:04:11 UTC <mgsloan> yup
2012-07-13 03:04:19 UTC <tgeeky_> i have figured out a lot of things
2012-07-13 03:04:34 UTC <tgeeky_> the BNFC-meta guys took quite a lot out of the original BNFC
2012-07-13 03:04:40 UTC <tgeeky_> but it's still there for the picking
2012-07-13 03:04:47 UTC <mgsloan> well, I'd prefer that this was just a language feature.  If it's not built into the compiler, error messages can suck even more than they currently do
2012-07-13 03:05:16 UTC <tgeeky_> remember, with bnfc-meta we can provide a diff against haskell's current happy and alex configurations
2012-07-13 03:05:31 UTC <tgeeky_> how better to convince GHC to adopt something, then using their own tools?
2012-07-13 03:05:49 UTC <tgeeky_> mgsloan: I think this approach will ultimately be much better than that SugarSyntax approach, for exactly this reason
2012-07-13 03:06:10 UTC <tgeeky_> BNFC-meta has location tagging built into the language
2012-07-13 03:06:13 UTC <tgeeky_> nicely
2012-07-13 03:06:19 UTC <mgsloan> sweet!
2012-07-13 03:06:49 UTC <mgsloan> Well, I'd ideally like to see parts of the language start moving out of the compiler, but that's a pretty far-out dream at this point, unfortunately
2012-07-13 03:07:06 UTC <tgeeky_> the goal is to drive adoption of techniques
2012-07-13 03:07:10 UTC <tgeeky_> for me, at least
2012-07-13 03:07:19 UTC <tgeeky_> GHC are a very conservative bunch
2012-07-13 03:07:22 UTC <mgsloan> yup.  My goal is to make programming kick ass
2012-07-13 03:07:30 UTC <mgsloan> which I guess is another way of saying the same thing
2012-07-13 03:07:51 UTC <tgeeky_> so
2012-07-13 03:08:04 UTC <tgeeky_> ClassLaws on Hackage
2012-07-13 03:08:26 UTC <tgeeky_> http://hackage.haskell.org/packages/archive/ClassLaws/0.3.0.1/doc/html/src/Data-Monoid-Laws.html
2012-07-13 03:08:48 UTC <mgsloan> good to see it up and running again!  The world was so empty without hackage :O
2012-07-13 03:08:49 UTC <tgeeky_> *surely* you could always provide Laws instances, if laws are defined
2012-07-13 03:09:23 UTC <mgsloan> Yeah, that would be cool!
2012-07-13 03:09:52 UTC <tgeeky_> mgsloan: then, you can provide template haskell code that's value-level checked
2012-07-13 03:09:55 UTC <tgeeky_> !
2012-07-13 03:09:57 UTC <mgsloan> You could actually have a different namespace that re-exported the classes, but with instance templates that bundled them with the laws
2012-07-13 03:10:00 UTC <tgeeky_> yep
2012-07-13 03:10:14 UTC <tgeeky_> well, just assume it's the same name, with Laws appended or prepended
2012-07-13 03:10:19 UTC <mgsloan> so, change a namespace, and your instances come with laws
2012-07-13 03:10:31 UTC <mgsloan> sure
2012-07-13 03:10:44 UTC <tgeeky_> the classLaws utility will automatically generate quickcheck
2012-07-13 03:10:57 UTC <tgeeky_> if it can do that, than I'm pretty certain it could automatically generate Unfoldable instances
2012-07-13 03:11:05 UTC <mgsloan> what do you mean by value-level checked TH?
2012-07-13 03:11:28 UTC <tgeeky_> mgsloan: the purpose of class laws is to test the laws under both assumption of totality and partiality
2012-07-13 03:11:42 UTC <tgeeky_> and build (and run) quickcheck code to test both
2012-07-13 03:12:13 UTC <tgeeky_> (it uses ChasingBottoms, by the same people, to test for bottom everywhere in all kinds of ways)
2012-07-13 03:13:03 UTC <tgeeky_> so you can use template haskell to generate haskell classes and instances, which can always be checked to have satisfied the associated laws
2012-07-13 03:13:10 UTC <mgsloan> Hmm.  With unsafe global flags, you could use this to engage a mode in which tests are run on the values actually flowing through your program
2012-07-13 03:13:14 UTC <mgsloan> "uber-debug" mode
2012-07-13 03:13:25 UTC <mgsloan> catch things early, at the first invariant invalidation
2012-07-13 03:13:26 UTC <tgeeky_> which is to say, you should be able to derive an instance, and have haskell tell you if it will follow the class laws or not
2012-07-13 03:14:16 UTC <tgeeky_> mgsloan: one other thing -- from a pointfree-haskell perspective, if you have a class instance which has a collection of things like associativity and distributivity shifting operators
2012-07-13 03:14:22 UTC <mgsloan> (or once again use the namespace trick, but I'm not sure if modules-for-differently-configured-instance-templates is a good thing)
2012-07-13 03:14:23 UTC <tgeeky_> you can automatically use them to unfold more complex nestings
2012-07-13 03:14:59 UTC <mgsloan> ahh, interesting!
2012-07-13 03:15:31 UTC <mgsloan> Have I shown you this? https://github.com/mgsloan/instance-templates/blob/master/Extras.md#scope-restricted-weak-typing
2012-07-13 03:16:11 UTC <tgeeky_> essentially, I think what I'm suggesting is that you can try to compose/apply/fold/unfold/etc all of the methods inside of the deriving TH fragment and none outside
2012-07-13 03:16:20 UTC <tgeeky_> but who knows about that yet
2012-07-13 03:16:40 UTC <tgeeky_> yes, this is exactly the kind of thing I'm thinking of
2012-07-13 03:17:34 UTC <mgsloan> Well, I'm gonna go on a bike ride, but now instance-templates ought to actually do something!  It'll probably break for anything but trivial examples, though
2012-07-13 03:17:56 UTC <mgsloan> when I'm back I'm gonna launch into converting Examples.md into working code samples
2012-07-13 03:17:56 UTC <tgeeky_> hey, a seed is a seed
2012-07-13 03:18:22 UTC <mgsloan> yup :) and I built this one while thinking about most of the things that could go wrong
2012-07-13 03:18:45 UTC <mgsloan> though strange things did come up.  I did not anticipate the "TV_a" "TV_b", etc hack
2012-07-13 03:20:44 UTC <mgsloan> but yeah, after getting a few basic examples going, I might move on to hammering down a notation for the type --> expr structure rewriting rules
2012-07-13 03:20:59 UTC <tgeeky_> i think I might be able to help
2012-07-13 03:21:03 UTC <mgsloan> so, lemme know if you've got some thoughts there! (when I get back, etc)
2012-07-13 03:21:05 UTC <tgeeky_> all of that stuff is wrapped up in a few concepts
2012-07-13 03:21:30 UTC <tgeeky_> ok, ttyl
2012-07-13 03:21:46 UTC <mgsloan> Maybe send me an email orso?  Thanks for your help!  I've gotta get outside before there's no more daylight!
2012-07-13 03:21:52 UTC <mgsloan> been coding too late.. :D
2012-07-13 03:21:53 UTC <tgeeky_> hehe. I should be here
2012-07-13 05:12:21 UTC <mgsloan> Back.  Tekmo likes my proposal!
2012-07-13 07:08:52 UTC <mgsloan> arggggh!  I knew that Template Haskell can't reify constraint kinds yet
2012-07-13 07:08:57 UTC <mgsloan> but didn't realize that it couldn't generate them
2012-07-13 07:09:03 UTC <mgsloan> I thought I'd tested this...
2012-07-13 07:09:26 UTC <mgsloan> so ridiculous, because it's giving my the sort of error you'd expect if -XConstraintKinds wasn't enabled.
2012-07-13 07:11:25 UTC <mgsloan> the absurd thing is that non-tupled constraint synonyms work
2012-07-13 07:12:22 UTC <mgsloan> oh well, I'll pretend like the type synonyms are like type sigs for the instance templates
2012-07-13 18:28:16 UTC <tgeeky_> hm
2012-07-13 18:28:41 UTC <tgeeky_> i was assuming that it would be easy for me to fix TH to include constraint kinds, poly kinds, and promotion
2012-07-13 19:10:28 UTC <edwardk> tgeeky: hahaha
2012-07-13 19:10:40 UTC <edwardk> tgeeky: parts are easy
2012-07-13 19:10:47 UTC <edwardk> tgeeky: but its a fair bit of work
2012-07-13 19:11:00 UTC <edwardk> i haven't even thought about TH for turbohaskell =/
2012-07-14 01:29:39 UTC <tgeeky_> byorgey: you've been quiet for the past week or so. everything OK?
2012-07-14 01:51:32 UTC <tgeeky_> mgsloan: just ran across this in google: http://arxiv.org/pdf/1202.6593v1.pdf
2012-07-14 02:09:45 UTC <mgsloan> wow, cool stuff!  Very diagrams-ey
2012-07-14 02:11:11 UTC <tgeeky_> hehe
2012-07-14 02:11:13 UTC <tgeeky_> a little
2012-07-14 02:18:51 UTC <tgeeky_> mgsloan: for the record: I read this paper sometime last year, and didn't quite understand every part of it (and still don't for a few parts)
2012-07-14 02:18:58 UTC <tgeeky_> but I think it's worth reading nontheless
2012-07-14 02:18:59 UTC <tgeeky_> http://www.metu.edu.tr/~dpierce/Mathematics/Numbers/ordinals-2.2.pdf
2012-07-14 02:19:32 UTC <tgeeky_> it's interesting in many ways; one it highlights the difference between set (or class) thinking and categorical thinking.
2012-07-14 02:20:58 UTC <mgsloan> yeah, looks pretty interesting!
2012-07-14 02:21:04 UTC <tgeeky_> i re-read parts of it today, and found a nice little gem (on the bottom of page 14 and the top of 15)
2012-07-14 02:21:25 UTC <mgsloan> (that difference mainly being concern for the relationship between objects, rather than the objects themselves / their cardinality)
2012-07-14 02:21:30 UTC <tgeeky_> "Skolem makes the notion of a class precise..."
2012-07-14 02:21:45 UTC <mgsloan> at least that's what I've been lead to believe
2012-07-14 02:22:15 UTC <tgeeky_> I think he would agree. This guy is really a "model theorirst" which seems to mean: write down the kind of operators/operations you can use in a tuple, and them use them
2012-07-14 02:22:56 UTC <tgeeky_> but I think the point of this paper, is that there's more to it
2012-07-14 02:23:21 UTC <tgeeky_> at least, if you want to deal with categories which use some notion of indexing or numbering
2012-07-14 02:23:47 UTC <tgeeky_> he defines "simply infinite system" which I bet would be handy to introduce into the Haskell world
2012-07-14 02:24:51 UTC <tgeeky_> but the thin I was mentioning is: a formula in one free variable defines a class, while a formula in *two* defines a binary relation (which may still be a function, but no longer must be)
2012-07-14 02:25:17 UTC <tgeeky_> but to bring a binary relation up to a class, you identify ordered pairs as: (x,y) = { {x}, {x,y} }
2012-07-14 02:25:47 UTC <tgeeky_> (which it seems to me like we're already doing it that way anyway... :O
2012-07-14 02:26:40 UTC <tgeeky_> anyhoo, how is your work going?
2012-07-14 02:26:57 UTC <mgsloan> hmmm, interesting.  the other projection could work too
2012-07-14 02:27:07 UTC <mgsloan> (of course)
2012-07-14 02:27:08 UTC <tgeeky_> mgsloan: yes!
2012-07-14 02:27:09 UTC <mgsloan> it's going pretty good
2012-07-14 02:27:38 UTC <mgsloan> $(instantiate [instance' Foo_Template [t| forall b. Foo Int b |]
2012-07-14 02:27:38 UTC <mgsloan>    [d|
2012-07-14 02:27:38 UTC <mgsloan>      foo = 5
2012-07-14 02:27:38 UTC <mgsloan>    |] ])
2012-07-14 02:27:44 UTC <mgsloan> new syntax!
2012-07-14 02:28:14 UTC <tgeeky_> mgsloan: actually, btw, it does matter after binary relation
2012-07-14 02:28:30 UTC <tgeeky_> (x,y,z) = { {x}, {x,y}, {x,y,z} }
2012-07-14 02:28:57 UTC <tgeeky_> oh, no it doesn't
2012-07-14 02:29:05 UTC <tgeeky_> as long as the most-nested things are in the same order always
2012-07-14 02:29:11 UTC <mgsloan> working on making it so that you don't have to import the symbols associated with the classes that are being instantiated
2012-07-14 02:29:21 UTC <mgsloan> TH lets you build global names that work regardless of import
2012-07-14 02:29:36 UTC <mgsloan> which is _very_ convenient for my use case :)
2012-07-14 02:32:26 UTC <mgsloan> tgeeky_ that stuff kinda reminds me of the "residuals" of lenses
2012-07-14 02:32:48 UTC <mgsloan> the set is of the residual and the result of one of the projection lenses
2012-07-14 02:33:13 UTC <mgsloan> well, not quite. hmm
2012-07-14 02:33:16 UTC <tgeeky_> hehe
2012-07-14 02:33:23 UTC <tgeeky_> i was trying to parse that, but I don't know much about them
2012-07-14 02:33:25 UTC <mgsloan> it's actually not the residual - that's the thing that's left out of the set!
2012-07-14 02:33:28 UTC <tgeeky_> I assume this is Twan's words
2012-07-14 02:33:50 UTC <mgsloan> well, residual is around in the other lens literature, but probably
2012-07-14 02:34:08 UTC <mgsloan> it's the idea that you could represent, using a type, the stuff that's "left-over" from a projection
2012-07-14 02:34:25 UTC <mgsloan> e.g. everything that got left behind, that would be necessary to rebuild the original
2012-07-14 02:34:26 UTC <tgeeky_> I started my foray into lenses with multiplate, which was probably not a great idea
2012-07-14 02:34:49 UTC <mgsloan> the new lens families stuff looks pretty cool
2012-07-14 02:35:01 UTC <tgeeky_> yep, gotta inspect them soon too
2012-07-14 02:37:26 UTC <mgsloan> my favorite is still fclabels
2012-07-14 02:37:34 UTC <mgsloan> could just be familiarity though
2012-07-14 03:12:25 UTC <tgeeky_> woohoo! I got my segfault wittled down to a GHC error
2012-07-14 04:50:04 UTC <mgsloan> WooHoo!!
2012-07-14 04:50:16 UTC <mgsloan> I just instantiated an Applicative, and got a Functor for free :0
2012-07-14 04:52:32 UTC <mgsloan> https://github.com/mgsloan/instance-templates/tree/master/tests/monads
2012-07-14 04:53:04 UTC <mgsloan> even better is that now there's no QQ or haskell-src-exts
2012-07-14 04:53:25 UTC <mgsloan> though I do have plans to bring back the QQ
2012-07-14 04:53:33 UTC <mgsloan> in a separate package
2012-07-14 05:09:44 UTC <tgeeky> sweet!
2012-07-14 05:19:28 UTC <tgeeky> mgsloan: so I'm a little confused though
2012-07-14 05:20:10 UTC <mgsloan> oh?
2012-07-14 05:20:24 UTC <mgsloan> well, it'd be best if I made this stuff as clear as possible
2012-07-14 05:20:42 UTC <tgeeky> so you've got what I'll call "new Prelude" (but is really just the heiarchy you have in Classes
2012-07-14 05:20:45 UTC <tgeeky> )
2012-07-14 05:21:11 UTC <tgeeky> then you've got mkInstances for Functor and Applicative
2012-07-14 05:22:00 UTC <tgeeky> and then you have the instantiation  in the third file
2012-07-14 05:22:59 UTC <tgeeky> I guess I'm unclear on what is gained so far?
2012-07-14 05:23:02 UTC <mgsloan> yup.  Those are templates that allow you to use the old functor-applicative-monad hierarchy, but target the new
2012-07-14 05:23:13 UTC <tgeeky> use the old, target the new
2012-07-14 05:23:19 UTC <mgsloan> so, "Test.hs" has code that looks like it targets the old hierarchy
2012-07-14 05:23:24 UTC <mgsloan> but you get out instances of the new one
2012-07-14 05:24:02 UTC <mgsloan> The difference is quite a bit more profound with Monad, because then you get out (Functor, Applicative, Monad, and MonadFail)
2012-07-14 05:24:55 UTC <tgeeky> i almost typed that (but applicative isn't really any different, because it was pulled down from monad anyway
2012-07-14 05:25:45 UTC <tgeeky> in what way does the code in Test.hs look like it targets the old heiarchy?
2012-07-14 05:28:44 UTC <mgsloan> good point
2012-07-14 05:28:47 UTC <mgsloan> it doesn't
2012-07-14 05:29:01 UTC <mgsloan> it would more if I stuck in a Functor instance template
2012-07-14 05:29:18 UTC <mgsloan> but that would be suppressed (with warning) due to the overlap resolution
2012-07-14 05:29:34 UTC <mgsloan> * functor template invocation
2012-07-14 05:30:17 UTC <mgsloan> So, there's a syntactic re-writing from normal declarations to this form
2012-07-14 05:30:37 UTC <tgeeky> and, a suggestion: changed C. to D.
2012-07-14 05:31:03 UTC <tgeeky> D is versatile, and you can always say it means "Different" like, in another class heiarchy than "Prelude" :)
2012-07-14 05:31:13 UTC <tgeeky> but in thise case, you can remind them that these instances are Derived
2012-07-14 05:31:39 UTC <mgsloan> or "N" for new
2012-07-14 05:31:59 UTC <tgeeky> new is a bad one because it will be true some amount of time after
2012-07-14 05:32:02 UTC <tgeeky> s/true/false/
2012-07-14 05:32:58 UTC <tgeeky> but other than that, so far you've nicely done what was before a builtin haskell syntax/semantics but in TH?
2012-07-14 05:34:21 UTC <mgsloan> that's the idea.  Well, something that's not yet builtin
2012-07-14 05:34:38 UTC <mgsloan> but yeah :)  It's not perfect yet, lots of TODOs remain
2012-07-14 06:37:47 UTC <mgsloan> tgeeky_: https://github.com/mgsloan/instance-templates/blob/master/tests/monads/Test.hs
2012-07-14 06:37:59 UTC <mgsloan> Monad all the way to applicative :)
2012-07-14 06:38:44 UTC <mgsloan> that one declaration is creating all 4 instances for maybe
2012-07-14 08:26:00 UTC <mgsloan> whoah.  Instance templates could do family instances too - and not just associated ones
2012-07-14 15:59:21 UTC <byorgey> tgeeky: "you've been quiet for the past week or so. everything OK?"  -- have I? yeah, I'm totally fine.
2012-07-14 20:47:27 UTC <tgeeky_> byorgey: excellent
2012-07-14 20:48:02 UTC <tgeeky_> mgsloan is an impressive talent :)
2012-07-15 01:10:23 UTC <peterjoel> Any mac users can help me get cairo and gtk+ working?
2012-07-15 01:11:21 UTC <peterjoel> I got it all working a few months ago, now I have a new machine and against a brick wall
2012-07-15 01:33:46 UTC <tgeeky_> mgsloan: hey!
2012-07-15 01:34:00 UTC <tgeeky_> cool stuff. I forked earlier, but haven't installed. doing that now
2012-07-15 02:11:47 UTC <mgsloan> enjoy :D  I haven't tested the overlap stuff, but it shouldn't really be necessary
2012-07-15 02:12:58 UTC <peterjoel> anyone got some suggestions for where I can get help with installing cairo on a Mac?
2012-07-15 02:19:22 UTC <tgeeky_> mgsloan: derr.. packedstring doesn't compile because of..
2012-07-15 02:19:24 UTC <tgeeky_> but why use packedstrng?
2012-07-15 02:19:48 UTC <tgeeky_> oh, haskell-src-meta
2012-07-15 02:23:08 UTC <tgeeky_> wait, not it does't.
2012-07-15 02:23:14 UTC <tgeeky_> doesn't. what the heck is going on
2012-07-15 02:23:40 UTC <tgeeky_> mgsloan: you have to specify version ranges in cabal files!
2012-07-15 02:23:54 UTC <tgeeky_> cabal decided that haskell-src-meta v. 0.0.3 was appropriate
2012-07-15 02:24:53 UTC <mgsloan> oh, that's not good
2012-07-15 02:25:00 UTC <mgsloan> yeah, I'm lazy abou tit
2012-07-15 02:25:14 UTC <mgsloan> Why in the world would it default to the oldest
2012-07-15 02:25:20 UTC <mgsloan> that's a stupid default
2012-07-15 02:25:31 UTC <tgeeky_> it's not even the oldest
2012-07-15 02:25:34 UTC <tgeeky_> there are two or three odler
2012-07-15 02:25:35 UTC <tgeeky_> older*
2012-07-15 02:26:00 UTC <tgeeky_> i thought the version looked weird
2012-07-15 02:28:42 UTC <mgsloan> ACTION wishes that git was more like darcs
2012-07-15 02:28:59 UTC <tgeeky_> uhhhhh
2012-07-15 02:29:01 UTC <tgeeky_> A 31412921-tuple is too large for GHC
2012-07-15 02:29:41 UTC <tgeeky_> from trying to compile haskell-src-meta :o
2012-07-15 02:30:53 UTC <tgeeky_> there is some sort of serious bug in GHC HEAD or template haskell
2012-07-15 02:34:17 UTC <byorgey> peterjoel: have you read the stuff linked from http://www.haskell.org/haskellwiki/Diagrams/Install ?
2012-07-15 02:35:49 UTC <peterjoel> yes, but I didn't do exactly as it said. I see the instructions use brew, while I tried macports and fink
2012-07-15 02:35:58 UTC <peterjoel> so I'll remove all and try with homebrew
2012-07-15 02:37:38 UTC <peterjoel> although the google groups discussion is suggesting to use macports instead of homebrew :0
2012-07-15 02:39:10 UTC <peterjoel> could also be that I (followed installation advice and) installed 32bit HP instead of 64bit.
2012-07-15 02:39:13 UTC <byorgey> well, sorry, I don't really know anything about it =(
2012-07-15 02:39:46 UTC <byorgey> peterjoel: you could also try using some backend other than cairo
2012-07-15 02:39:58 UTC <byorgey> the SVG backend is pretty much complete
2012-07-15 02:40:23 UTC <peterjoel> ok I might do that
2012-07-15 02:40:34 UTC <peterjoel> but I think I'd like to get cairo working anyway
2012-07-15 02:40:58 UTC <byorgey> fair enough
2012-07-15 02:41:02 UTC <peterjoel> is it possible to install diagrams without installing cairo?
2012-07-15 02:41:08 UTC <peterjoel> how would I go about that?
2012-07-15 02:41:11 UTC <byorgey> yes
2012-07-15 02:41:27 UTC <byorgey> the 'diagrams' package actually has no content, it just depends on diagrams-core, diagrams-lib, and diagrams-cairo
2012-07-15 02:41:40 UTC <peterjoel> Oh, that should be easy then
2012-07-15 02:41:43 UTC <byorgey> so just install diagrams-lib directly (which will pull in diagrams-core as well)
2012-07-15 02:41:49 UTC <byorgey> and then install diagrams-svg or whatever you want
2012-07-15 02:41:55 UTC <peterjoel> gotcha
2012-07-15 02:42:31 UTC <peterjoel> also, did I make a mistake by installing 32bit HP? Should I uninstall and get 64bit instead?
2012-07-15 04:19:12 UTC <mgsloan> tgeeky_: success yet? do I need to update the deps (I'll do that either way, soon-ish, but I could do it sooner than later)
2012-07-15 17:45:15 UTC <byorgey> peterjoel: saw your Q on the haskell reddit, hope you get some good help with figuring it out
2012-07-15 17:47:35 UTC <peterjoel> about 5am last night I was about to throw my mac out of the window
2012-07-15 17:53:57 UTC <luite> hmm
2012-07-15 18:33:06 UTC <byorgey> peterjoel: I don't know much about macs, but I'm guessing that wouldn't help with getting gtk installed
2012-07-15 18:36:24 UTC <peterjoel> :D
2012-07-15 18:43:00 UTC <luite> yeah macs don't really like windows
2012-07-15 18:44:32 UTC <byorgey> haha
2012-07-15 21:01:22 UTC <cheater_> luite: text mode only? :)
2012-07-16 01:51:49 UTC <tgeeky_> mgsloan: yes, I got it working. I had to abandon GHC HEAD, which I was resisting to do.
2012-07-16 01:52:13 UTC <mgsloan> ah, really?  what was the problem? template-haskell dependencies?
2012-07-16 01:52:49 UTC <mgsloan> Maybe I should start using HEAD - I think there's some bug fixes that would allow me to do some stuff that I want to do with constraint kinds
2012-07-16 01:53:01 UTC <tgeeky_> I'm not sure. There seems to be something special with GHC (nightly?) builds and template-haskell (more special than base, integer-gmp, etc)
2012-07-16 01:53:11 UTC <mgsloan> ah
2012-07-16 01:53:16 UTC <tgeeky_> in that, you can't hide the version that comes with it, from anything
2012-07-16 01:53:39 UTC <tgeeky_> when I run ghci, I always see template-haskell...  without a version number, and you I can't seem to change that
2012-07-16 01:53:46 UTC <mgsloan> well, it wouldn't be surprising if ghc-src-meta broke on GHC head
2012-07-16 01:53:48 UTC <tgeeky_> reinstalling template-haskell breaks the package ghc
2012-07-16 01:53:56 UTC <tgeeky_> mgsloan: oh, no, it's template-haskell itself
2012-07-16 01:53:59 UTC <mgsloan> ah
2012-07-16 01:54:09 UTC <tgeeky_> (I think). I'm not dedicated enough to fix it
2012-07-16 01:54:19 UTC <mgsloan> maybe you need to install template-haskell-2.8.0.0 (not sure if this exists)
2012-07-16 01:54:27 UTC <mgsloan> well, thanks for going through all that!
2012-07-16 01:54:38 UTC <tgeeky_> well, GHC HEAD is compiled agains 2.6.0.0, and it should be 2.7.0.0
2012-07-16 01:54:48 UTC <tgeeky_> well, I wanted some new stuff too
2012-07-16 01:54:48 UTC <mgsloan> whaaaa, that's wack
2012-07-16 01:55:13 UTC <tgeeky_> that said, I may be able to get zeroth working again...
2012-07-16 01:55:20 UTC <mgsloan> right
2012-07-16 01:55:47 UTC <tgeeky_> yeah looks like it should build
2012-07-16 01:55:52 UTC <mgsloan> there's definitely a pressing need for a haskell-src-exts / haskell interpreter using clone of TH
2012-07-16 01:56:07 UTC <mgsloan> ideally the interpreter part would be pluggable
2012-07-16 01:56:28 UTC <tgeeky_> I think many of these packages should be merged
2012-07-16 01:56:51 UTC <mgsloan> which would dodge the whole "TH is GHC-only" business
2012-07-16 01:57:02 UTC <tgeeky_> the bottom line, imho, is this: GHC *requires* alex and happy, if you want to work with source.
2012-07-16 01:57:25 UTC <tgeeky_> bnfc-meta gives you: (alex-meta, happy-meta, bnfc-meta ) -> (unfinished) haskell-meta
2012-07-16 01:57:59 UTC <tgeeky_> I am pretty sure haskell is *specified* in a BNF grammar, isn't it?
2012-07-16 01:58:04 UTC <mgsloan> yup
2012-07-16 01:58:08 UTC <tgeeky_> isn't that the kind of thing that's in the Report?
2012-07-16 01:58:22 UTC <mgsloan> which I think is the reason for the ugly decision of having 10 tiers of operator fixities
2012-07-16 01:58:25 UTC <mgsloan> yup
2012-07-16 01:58:37 UTC <tgeeky_> well, 10 is just a number
2012-07-16 01:58:42 UTC <tgeeky_> and we need to remember
2012-07-16 01:58:55 UTC <tgeeky_> that we have negative numbers (and types) at our disposal, should we understand them
2012-07-16 01:59:14 UTC <tgeeky_> so there's no reason we can't genuinely shift: [0..10] to [-5..5]
2012-07-16 01:59:25 UTC <tgeeky_> I think you'll find there's already such a symmetry in the fixity table
2012-07-16 01:59:33 UTC <mgsloan> yeah
2012-07-16 01:59:46 UTC <tgeeky_> mgsloan: speaking of exactly which. Some guy told who is writing a paper about something parsing sent me a link
2012-07-16 01:59:57 UTC <tgeeky_> "Indentation Sensitive Parsing"
2012-07-16 02:00:05 UTC <tgeeky_> http://web.cecs.pdx.edu/~adamsmic/projects/layout/LayoutParsing-popl2013-submission.pdf
2012-07-16 02:00:07 UTC <mgsloan> the problem is what's important is the relationships between the ops not their absolute level
2012-07-16 02:00:25 UTC <mgsloan> ah, was that leading up to / part of the sugar stuff?
2012-07-16 02:00:29 UTC <mgsloan> think I've seen the link before
2012-07-16 02:00:36 UTC <tgeeky_> I doubt it?
2012-07-16 02:00:40 UTC <tgeeky_> I think he just uploaded it
2012-07-16 02:01:06 UTC <tgeeky_> mgsloan: this may be exactly the rules that we need to follow
2012-07-16 02:01:28 UTC <tgeeky_> I scanned through it, but it's a little hard for me to read. I need a table of terminology
2012-07-16 02:02:02 UTC <mgsloan> I met the author before, smart dude
2012-07-16 02:02:13 UTC <mgsloan> he was at the last oregon PL summer school
2012-07-16 02:02:24 UTC <mgsloan> which I'm actually on the train to get to right now
2012-07-16 02:02:37 UTC <mgsloan> OPLSS #2 here we come! time to get some learnins from Benjamin Pierce! :D
2012-07-16 02:03:17 UTC <luite> busy summer
2012-07-16 02:03:19 UTC <luite> :)
2012-07-16 02:03:38 UTC <mgsloan> yup :D  I graduated from college just to go right back to school
2012-07-16 02:04:23 UTC <mgsloan> finally I can start really learning! heh
2012-07-16 02:04:45 UTC <luite> i also graduated but no learnings for me
2012-07-16 02:06:30 UTC <mgsloan> whenever there's coding, there's learnings!
2012-07-16 02:09:06 UTC <tgeeky_> mgsloan: do you know if you can specify a tycon middle-fix, like (\l r -> l C r) ?
2012-07-16 02:09:15 UTC <tgeeky_> I assume not
2012-07-16 02:09:28 UTC <luite> not really doing much learnful coding... wolfgnag is still stalled, being 'promoted' to emergency mentor for shaprs gsoc (after apfelmus bailed) doesn't help either
2012-07-16 02:09:35 UTC <mgsloan> if it's prefixed with : I think you might be able to
2012-07-16 02:09:55 UTC <tgeeky_> infix operators. right.
2012-07-16 02:10:29 UTC <tgeeky_> mgsloan: so, it's a rather strenous test of haskell and TH to compile plumbers for arities [1..5].
2012-07-16 02:10:53 UTC <tgeeky_> mgsloan: in some cases, I think what you'd really want is the arities surrounding some number, say -- if it were 10, you might want [9,10,11].
2012-07-16 02:11:15 UTC <tgeeky_> but until we can automatically generate the infixl/r declerations
2012-07-16 02:12:00 UTC <mgsloan> luite: Is wolfgang going to use hyperhaskell stuff (yeah, I realize that's a joke name)?
2012-07-16 02:12:47 UTC <mgsloan> is there anything I can do to help with them (that seems like it might be related to my knowledge / interests)?
2012-07-16 02:13:40 UTC <luite> mgsloan: perhaps
2012-07-16 02:14:24 UTC <tgeeky_> mgsloan: one thing that I observed about plumbers (which actually stems from haskell/Prelude), is that it's not clear to me that for a long chains of functions, if it's appropriate or not to divide the thing up into 2-tuples
2012-07-16 02:15:31 UTC <tgeeky_> like: (sorry it's long)
2012-07-16 02:15:37 UTC <tgeeky_> ($*****) :: forall a b c d e f g h i j lF rF. (a -> c -> e -> g -> i -> rF -> lF) -> (b -> d -> f -> h -> j -> rF) -> (a, b) -> (c, d) -> (e, f) -> (g, h) -> (i, j) -> lF
2012-07-16 02:17:18 UTC <mgsloan> tgeeky_: There is a function for yielding certain arities of plumbers
2012-07-16 02:17:31 UTC <mgsloan> you can even build an individual op
2012-07-16 02:21:42 UTC <tgeeky_> mgsloan: will it do something like: ... -> (g,(a,c,e),h) -> (i,(b,d,f),j) -> lF
2012-07-16 02:22:27 UTC <tgeeky_> hehe.
2012-07-16 02:22:44 UTC <mgsloan> naaaa
2012-07-16 02:23:12 UTC <mgsloan> but you could pretty easily use the plumbers code as a template for extending it with that capability
2012-07-16 02:23:22 UTC <tgeeky_> yep
2012-07-16 02:23:30 UTC <tgeeky_> but first, I have to figure out what a trifunctor is
2012-07-16 17:11:55 UTC <byorgey> luite: oh, apfelmus bailed? why?
2012-07-16 18:51:44 UTC <tgeeky> byorgey: "apfelmus bailed? why?"  <-- my inquiring organ wants to know!
2012-07-16 21:40:14 UTC <peterjoel> Is diagrams still potentially moving to git, or has it been decided to stick with darcs? I remember a conversation about this a few months ago, but I didn't see the end result..
2012-07-16 21:42:57 UTC <mgsloan> currently still darcs, but I'm in favor of git
2012-07-16 21:44:07 UTC <byorgey> it is moving to git.
2012-07-16 21:44:23 UTC <byorgey> I hope to move it sometime in the next few weeks, before hac phi
2012-07-16 21:44:27 UTC <mgsloan> cool!
2012-07-16 21:44:39 UTC <mgsloan> I do like darcs's interactivity and patch model
2012-07-16 21:44:43 UTC <byorgey> I want to move the issue tracker to github as well
2012-07-16 21:44:49 UTC <mgsloan> but github is more pragmatic
2012-07-16 21:45:29 UTC <byorgey> yes, I still prefer darcs to git, but for diagrams in particular I've come to realize that encouraging contribution is more important, and github is the way to do that
2012-07-16 21:46:57 UTC <mgsloan> and git is really quite good
2012-07-16 21:47:06 UTC <mgsloan> at least we aren't back in the days of SVN
2012-07-16 21:48:40 UTC <byorgey> true.
2012-07-16 21:48:59 UTC <byorgey> I am impressed with the sheer amount of work and engineering that has gone into git.
2012-07-16 21:49:14 UTC <byorgey> I am just not as impressed with the fundamental theory behind it.
2012-07-16 21:49:43 UTC <byorgey> anyway, I'm off homeward
2012-07-16 23:49:38 UTC <peterjoel> I don't know enough about darcs, but I'm in favour of git because of the quality of the tooling
2012-07-16 23:55:38 UTC <fryguybob> byorgey: When you do get ready to move repos let me know I'll move mine over too.
2012-07-17 01:57:03 UTC <tgeeky_> I'm in favor of git because of the raw speed
2012-07-17 01:57:24 UTC <tgeeky_> and because, its adoption rate and style of use mandates stability
2012-07-17 02:09:34 UTC <tgeeky_> wow. How have I never seen this before: http://www.cs.uu.nl/wiki/pub/FP/CourseLiterature/haskellsyntax-main.pdf
2012-07-17 02:15:50 UTC <luite> hm that language looks familiar
2012-07-17 13:20:16 UTC <byorgey> luite: yep, it's Haskell ;)
2012-07-17 13:25:23 UTC <tgeeky_> haha.
2012-07-17 13:25:37 UTC <luite> i've never taken that course though
2012-07-17 13:25:43 UTC <tgeeky_> hehe
2012-07-17 13:25:55 UTC <tgeeky_> I wanted to make the "Yeah, it's haskell!" joke but I was afraid I'd have to explain it
2012-07-17 13:26:06 UTC <tgeeky_> because I don't know exactly which languages luite speaks :O
2012-07-17 13:26:26 UTC <tgeeky_> It's tought for Americans to make jokes about multilingualism, in general, as we do not usually participate
2012-07-17 13:26:38 UTC <luite> hehe, well Dutch is one of them
2012-07-17 13:27:02 UTC <luite> but there are grad students that don't speak Dutch at UU
2012-07-17 13:28:07 UTC <luite> for undergrad, speaking Dutch is pretty much required (but i didn't do undergrad at UU)
2012-07-17 13:30:47 UTC <byorgey> luite: right, but I mean, you actually grew up in the NL, right?
2012-07-17 13:32:14 UTC <luite> yeah :)
2012-07-17 13:33:37 UTC <byorgey> UU is one place I will probably apply for a postdoc, so good to know speaking Dutch is not required (though I would try to learn some =)
2012-07-17 13:40:05 UTC <tgeeky_> byorgey: hm. It occurs to me that "literate haskell" is really not a first class citizen, as documentation in .lhs is totally ignored by haddock :(
2012-07-17 13:41:12 UTC <byorgey> tgeeky_: as it should be, I think.  You wouldn't want several paragraphs of text showing up above every function in the Haddock documentation
2012-07-17 13:41:45 UTC <byorgey> tgeeky_: you can still write Haddock documentation in .lhs files by putting comments *in the code*
2012-07-17 13:42:04 UTC <byorgey> i.e.   > -- | this is a haddock comment
2012-07-17 13:42:14 UTC <tgeeky_> true enough.
2012-07-17 13:42:28 UTC <tgeeky_> the real shame, I guess, is that some GHC code is in literate (non-haddock-embedded) style
2012-07-17 13:42:39 UTC <tgeeky_> or maybe this is all haddock's fault, so to speak
2012-07-17 13:50:24 UTC <tgeeky_> hm. how about that.
2012-07-17 13:50:34 UTC <tgeeky_> data NT f g = NT { getNT :: forall a. f a -> g a }
2012-07-17 13:50:44 UTC <tgeeky_> that's the same definition as an idiom homomorphism
2012-07-17 14:04:07 UTC <byorgey> well, that is just the definition of a natural transformation from f to g.
2012-07-17 14:04:19 UTC <byorgey> every idiom homomorphism is a natural transformation
2012-07-17 14:04:31 UTC <byorgey> but which also preserves the idiom structure.
2012-07-17 15:46:53 UTC <tbelaire> Is there an easy way to make spirographs?
2012-07-17 15:47:39 UTC <tgeeky_> tbelaire: http://demonstrations.wolfram.com/search.html?query=spirographs
2012-07-17 15:47:52 UTC <tgeeky_> tbelaire: the topleft-thing?
2012-07-17 15:48:43 UTC <tbelaire> things like that, yes
2012-07-17 15:51:06 UTC <tgeeky_> hm. I don't know about easy. I know you can actually get these kinds of things using tuned orbits (using a solar system simulator, or whatever)
2012-07-17 15:51:12 UTC <tgeeky_> but I'm sure that's a very inefficient and complicated way
2012-07-17 15:52:04 UTC <tbelaire> Well, isn't it able to be reduced to a closed form?
2012-07-17 15:52:18 UTC <tgeeky_> I think so, but I'm not sure if that helps you draw it
2012-07-17 15:53:14 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/spjro/?a=7&b=4 has some closed form in its javascript
2012-07-17 15:53:36 UTC <tgeeky_> ClaudiusMaximus: very pretty
2012-07-17 15:54:35 UTC <tbelaire> if I just wanted to make pictures from Haskell, with something like that
2012-07-17 15:54:42 UTC <tbelaire> how would I do that
2012-07-17 15:56:08 UTC <tbelaire> ClaudiusMaximus: That site has some pretty cool stuff
2012-07-17 15:58:03 UTC <byorgey> a spirograph module for diagrams would be fun =)
2012-07-17 15:58:03 UTC <tgeeky_> tbelaire: yeah, that CladiusMaximus guy is quite talented
2012-07-17 15:59:16 UTC <byorgey> if you can generate a set of discrete points lying on a spirograph curve, you can just hand the points to fryguybob's spline generator
2012-07-17 16:00:14 UTC <byorgey> I guess simulating the actual working of a spirograph set wouldn't be too hard, with a bit of trig
2012-07-17 16:01:25 UTC <ClaudiusMaximus> thanks :)
2012-07-17 16:03:12 UTC <byorgey> ACTION adds it to the issue tracker =)
2012-07-17 16:04:37 UTC <tbelaire> alright, thanks
2012-07-17 16:10:16 UTC <fryguybob> I think you can represent each step of a spirograph with a couple transformations on homogenious coordinates.
2012-07-17 16:10:48 UTC <byorgey> ooooh nifty
2012-07-17 16:10:50 UTC <tbelaire> I don't quite understand what that means.
2012-07-17 16:11:03 UTC <byorgey> fryguybob: add a comment to the ticket: http://code.google.com/p/diagrams/issues/detail?id=85
2012-07-17 16:11:33 UTC <fryguybob> So it should all go down to a single matrix multiply.  The continuous version could be in terms of some derivative of that...
2012-07-17 16:11:53 UTC <byorgey> tbelaire: don't worry, I don't quite understand what it means either.  fryguybob is our resident expert in computational geometry =)
2012-07-17 16:12:11 UTC <tbelaire> Well, I want to understand
2012-07-17 16:12:39 UTC <byorgey> excellent!
2012-07-17 16:13:34 UTC <tbelaire> ah, well now that I've looked at the wikipedia page, I think I understard how that might work
2012-07-17 16:13:50 UTC <fryguybob> tbelaire: First consider an outer circle with a smaller wheel on the inside and the pen at the center of the inner wheel
2012-07-17 16:14:30 UTC <fryguybob> The point of contact of the inner wheel rotates around, that's the first rotation.
2012-07-17 16:14:52 UTC <tbelaire> ok
2012-07-17 16:15:03 UTC <fryguybob> The second rotation is the inner wheel, but since our pin is in the center the point doesn't move.
2012-07-17 16:15:51 UTC <fryguybob> If you moved the pen out from the center of that inner wheel you have a second rotation relative to the point of contact.
2012-07-17 16:15:57 UTC <byorgey> oh, I see, you're just composing transformations
2012-07-17 16:16:33 UTC <fryguybob> Homogenous coordinates let you frame that inner rotation with a rotation and translation that get you to that "Relative" frame of reference.
2012-07-17 16:16:48 UTC <tbelaire> so, it would be simple to has another circle on the inner circle and have a three layer spirograph?
2012-07-17 16:16:57 UTC <fryguybob> Yes
2012-07-17 16:17:04 UTC <tbelaire> cool
2012-07-17 16:17:04 UTC <byorgey> though it seems like that breaks down if you want to start using the funny non-circular things, like the football or triangly thing...
2012-07-17 16:17:38 UTC <fryguybob> Well other shapes shouldn't be too bad, you just have to add a non-uniform scaling to get to an ellipse from a circle.
2012-07-17 16:18:02 UTC <byorgey> oh, that works for the football shape.  But not for the triangly thing.
2012-07-17 16:18:35 UTC <fryguybob> ACTION never actually had a spirograph, only saw friends playing with them and had to imagine how they worked.
2012-07-17 16:20:40 UTC <byorgey> http://www.ebay.com/itm/VINTAGE-1973-KENNER-SPIROGRAPH-WHEEL-GEAR-PART-TRIANGLE-/310414807213?pt=LH_DefaultDomain_0&hash=item48462a10ad
2012-07-17 16:20:50 UTC <byorgey> http://www.ebay.com/itm/VINTAGE-SPIROGRAPH-GEAR-FOOTBALL-PART-PIECE-BLUE-KENNER-REPLACEMENT-SHAPE-HTF-/200776381154?pt=LH_DefaultDomain_0&hash=item2ebf3472e2
2012-07-17 16:21:39 UTC <byorgey> man, I wonder if my parents still have mine
2012-07-17 16:21:50 UTC <byorgey> I should tell them to bring it on vacation in August =D
2012-07-17 16:22:31 UTC <byorgey> ACTION imagines a ten-year-old fryguybob thinking about homogeneous coordinate transformations
2012-07-17 16:25:35 UTC <fryguybob> Humm for the triangle thing you can do it piecewise alternating between the round part and the corner.
2012-07-17 16:26:28 UTC <fryguybob> ACTION goes back to real work...
2012-07-17 16:27:43 UTC <byorgey> ah, true
2012-07-17 16:27:45 UTC <byorgey> well, enjoy =)
2012-07-17 16:36:36 UTC <fryguybob> We could do a whole diagrams-kids-toys package :D.
2012-07-17 16:37:04 UTC <byorgey> haha, sounds great =D
2012-07-17 16:37:16 UTC <byorgey> what other toys do you have in mind? etch-a-sketch?
2012-07-17 16:42:50 UTC <fryguybob> Lego like diagram building.
2012-07-17 17:54:18 UTC <tbelaire> Does Diagrams have support for Homogeneous coodinate stuff?
2012-07-17 17:54:31 UTC <tbelaire> I've been reading about it
2012-07-17 18:02:56 UTC <byorgey> tbelaire: well, it has support for affine transformations
2012-07-17 18:03:10 UTC <byorgey> I think that should be sufficient
2012-07-17 18:03:20 UTC <tbelaire> ok
2012-07-18 17:39:44 UTC <byorgey> woohoo, doing some diagrams hacking again finally!
2012-07-18 17:40:03 UTC <luite> yay
2012-07-18 17:49:16 UTC <mgsloan> :D
2012-07-18 18:19:26 UTC <fryguybob> byorgey: Super!
2012-07-18 18:19:59 UTC <fryguybob> Have there been any attepts at gradient support for svg?
2012-07-18 18:46:47 UTC <byorgey> fryguybob: not that I know of
2012-07-19 12:10:04 UTC <av> hi guys, I have a question, is anyone here (and awake) to help me?
2012-07-19 16:25:58 UTC <byorgey> heya edwardk, are you actually using diagrams for something, or just hanging out here for fun?
2012-07-19 16:26:04 UTC <byorgey> either is fine of course, I'm just curious =)
2012-07-19 16:26:20 UTC <edwardk> i mostly wandered in because luite and shapr were here
2012-07-19 16:26:21 UTC <edwardk> ;)
2012-07-19 16:26:28 UTC <byorgey> ah, fair enough =)
2012-07-19 16:26:36 UTC <edwardk> there was also a paper you wrote on monoids...
2012-07-19 16:26:45 UTC <byorgey> ah, right
2012-07-19 21:43:30 UTC <av> hi everyone
2012-07-19 21:44:23 UTC <av> anyone here that I can ask a question, by chance?
2012-07-19 21:45:05 UTC <byorgey> av: sure, ask away
2012-07-19 21:45:17 UTC <byorgey> is it the same question you asked in #haskell this morning?
2012-07-19 21:45:38 UTC <byorgey> (I saw it after you had already left)
2012-07-19 21:51:25 UTC <av> byorgey: yes, it is
2012-07-19 21:52:26 UTC <byorgey> the answer is yes, you can use Diagrams.TwoD.Arc.arc (or arcT) to create a Trail representing an arc, which you can combine with linear segments using the Monoid instance for Trail.
2012-07-19 21:53:38 UTC <byorgey> for example something like   strokeT $ arcT (10 :: Deg) (40 :: Deg) <> (origin ~~ p2 (2,3))
2012-07-19 21:53:40 UTC <av> byorgey: brilliant -- thanks, I'm wondering why I haven't come across this one yet
2012-07-19 21:54:02 UTC <byorgey> would create a trail with two segments, a circular arc and a straight segment
2012-07-19 21:54:30 UTC <byorgey> now, there isn't a nice way to automatically create circular segments which are tangent to straight segments at the ends
2012-07-19 21:54:37 UTC <byorgey> right now you just have to compute the angles yourself
2012-07-19 21:54:52 UTC <av> byorgey: never mind, I don't need tangents at the moment
2012-07-19 21:54:58 UTC <byorgey> ok.
2012-07-19 21:55:08 UTC <av> byorgey: thanks so much
2012-07-19 21:55:31 UTC <byorgey> av: out of curiosity, what are you using diagrams for?
2012-07-19 21:56:25 UTC <av> byorgey: for creating nice diagrams, preferably lots of them, for my boss to look at :)
2012-07-19 21:56:32 UTC <byorgey> hehe
2012-07-19 21:56:34 UTC <byorgey> sounds good =)
2012-07-19 21:57:15 UTC <byorgey> ok, I'm headed home
2012-07-19 21:57:28 UTC <av> byorgey: bye, thanks again
2012-07-19 21:57:30 UTC <byorgey> av: if you have any more questions, just ask them in here
2012-07-19 21:57:36 UTC <byorgey> I will see them eventually
2012-07-19 21:57:39 UTC <av> sure :)
2012-07-20 03:05:27 UTC <tgeeky> edwardk: secretly of course you are in #diagrams because you just *love* to field my infelicitous questions!
2012-07-20 03:05:46 UTC <edwardk> of coure
2012-07-20 03:05:49 UTC <edwardk> er course
2012-07-20 03:06:23 UTC <tgeeky> edwardk: also, I *may* be seeing you at Hac-Phi! I have registered, but am still not sure if I have the money and car to come. My mom recently totaled her car and she still hasn't bought one, and she *has* a day job, so ...
2012-07-20 03:06:27 UTC <tgeeky> hopefully I can work something out
2012-07-20 03:06:37 UTC <edwardk> ah nice
2012-07-20 03:06:47 UTC <edwardk> i've booked the flight but not the hotel so far
2012-07-20 03:07:04 UTC <tgeeky> i assume it's cheap, just a hop-skip-and-a-jump awaya?
2012-07-20 03:07:15 UTC <tgeeky> or maybe they just rail you because you're in the NE
2012-07-20 03:07:22 UTC <edwardk> surprisingly rather more expensive this year than last
2012-07-20 03:07:51 UTC <edwardk> i think last year was ~$70 to fly in/out and this year it was ~$300.
2012-07-20 03:07:56 UTC <tgeeky> yikes!
2012-07-20 03:08:03 UTC <tgeeky> that's almost as expensive as it is from here
2012-07-20 03:08:12 UTC <edwardk> i should have taken the copumpkin express -- he's coming in overnight on friday night for like $59
2012-07-20 03:08:21 UTC <tgeeky> hehe
2012-07-20 03:08:47 UTC <tgeeky> I also will be using my tired old laptop, since I don't want to be the only idiot there with a desktop :o
2012-07-20 03:09:09 UTC <edwardk> i'm a bit taller than he is though, so the prospect of shoehorning myself into a coach seat for several hours overnightâ¦ didn't really appeal
2012-07-20 03:09:15 UTC <edwardk> hahha
2012-07-20 03:09:40 UTC <tgeeky> hehe. I haven't flown in several years. I'm 6'5, so I don't fit well in planes
2012-07-20 03:09:54 UTC <edwardk> ah
2012-07-20 03:10:01 UTC <edwardk> 6'3 here
2012-07-20 03:10:45 UTC <edwardk> afk a bit
2012-07-20 03:10:47 UTC <tgeeky> k
2012-07-20 20:40:27 UTC <peterjoel> kind of stupid questionâ¦ is there a built-in skewX, skewY transformation, or do I have to use scale `under` rotation ?
2012-07-20 20:40:55 UTC <peterjoel> also, is there a generic matrix transformation?  I was expecting to find that, but didn't..
2012-07-20 20:46:35 UTC <fryguybob> peterjoel: Good questions :D.  I don't think there is a skew transformation, but I think that would be straight forward to make (without having to express it as a scale and rotation).
2012-07-20 20:47:41 UTC <fryguybob> peterjoel: I think the issue with a general matrix is that it is not necessarally affine and we can only do some of the diagrams computations under affine transformations.
2012-07-20 20:48:52 UTC <fryguybob> peterjoel: Barring scale 0 we should be affine by construction with the transformations in the library.  But I would have to look through the code to confirm all of this.
2012-07-20 20:49:43 UTC <byorgey> yes, that's right (re: affine-by-construction)
2012-07-20 20:50:48 UTC <fryguybob> Non-affine transformations can of course be fun too, but make things tricky :(.
2012-07-20 20:50:48 UTC <byorgey> peterjoel: is skew the same as shear?
2012-07-20 20:51:03 UTC <byorgey> peterjoel: there is shearX, shearY in Diagrams.TwoD.Transform
2012-07-20 20:51:29 UTC <fryguybob> Oh, I was assuming shear, and didn't know they were in there :D.
2012-07-20 20:52:17 UTC <byorgey> the problem with non-affine transformations is that they make it impossible to support envelopes.
2012-07-20 20:52:53 UTC <byorgey> peterjoel: the other reason there's no generic matrix transformation is that we need to maintain inverse and transpose transformations alongside the usual ones (for transforming envelopes)
2012-07-20 20:53:40 UTC <byorgey> and I'd rather not have to implement generic matrix inversion
2012-07-20 20:53:57 UTC <byorgey> (or introduce a dependency on some external linear algebra lib)
2012-07-20 20:57:21 UTC <fryguybob> byorgey: Just use this: ftp://download.intel.com/design/PentiumIII/sml/24504301.pdf :P
2012-07-20 20:58:04 UTC <byorgey> hahaha what
2012-07-20 20:58:24 UTC <byorgey> but then I'll need a separate pdf like that for every n
2012-07-20 21:00:35 UTC <fryguybob> byorgey: This is life on the bleeding edge of performance.
2012-07-20 21:02:52 UTC <fryguybob> Once everyone has upgraded to new cpu's we can use this: http://software.intel.com/en-us/articles/benefits-of-intel-avx-for-small-matrices/
2012-07-20 21:05:27 UTC <byorgey> ACTION can hardly contain his excitement
2012-07-21 15:25:26 UTC <realitygrill> i keep getting errors installing diagrams on OSX
2012-07-21 15:25:33 UTC <realitygrill> they look like this guy's: https://groups.google.com/group/diagrams-discuss/tree/browse_frm/thread/3d395c53761bd2c0/f9a44e751b1de7a7?rnum=1&_done=/group/diagrams-discuss/browse_frm/thread/3d395c53761bd2c0/f9a44e751b1de7a7?tvc%3D1%26&pli=1
2012-07-21 15:25:51 UTC <realitygrill> essentially some config error and then ExitFailure
2012-07-21 15:25:54 UTC <realitygrill> anyone familiar with this?
2012-07-21 15:26:58 UTC <luite> which package fails? if it's cairo, then try cabal install cairo and try the find the real reason
2012-07-21 15:27:53 UTC <realitygrill> glib, then cairo.. (tried multiple individual installs of packages)
2012-07-21 15:27:59 UTC <realitygrill> Cannot find gtk2hsC2hs is a constant
2012-07-21 15:29:31 UTC <fryguybob> sigh cairo...
2012-07-21 15:30:09 UTC <realitygrill> I'll try cairo again and see what the errors were, since I was trying this yesterday
2012-07-21 15:30:21 UTC <luite> realitygrill: cabal install gtk2hs-buildtols
2012-07-21 15:30:27 UTC <luite> gtk2hs-buildtools
2012-07-21 15:30:48 UTC <luite> you need to do that before installing any gtk2hs packag
2012-07-21 15:31:15 UTC <luite> and you'll probably want an installation guide for this on OS X
2012-07-21 15:31:23 UTC <realitygrill> pretty sure i tried that too
2012-07-21 15:31:32 UTC <realitygrill> oh
2012-07-21 15:32:04 UTC <ClaudiusMaximus> and iirc gtk2hs-buildtools also requires alex and happy
2012-07-21 15:33:11 UTC <luite> hm, could be, but at least those come with haskell platform
2012-07-21 15:33:11 UTC <realitygrill> well, cabal install gtk2hs-buildtools seems to have worked
2012-07-21 15:36:28 UTC <realitygrill> hm, still can't install glib though..
2012-07-21 15:36:47 UTC <realitygrill> nor cairo. damn.
2012-07-21 15:46:43 UTC <luite> can you paste the error on hpaste? and how did you install glib, is it for the same architecture as your ghc (i386 or x86_64)?
2012-07-21 15:50:22 UTC <realitygrill> i don't know. hold on..
2012-07-21 15:51:26 UTC <realitygrill> http://hpaste.org/71893
2012-07-21 15:53:11 UTC <realitygrill> gtk i installed with ports
2012-07-21 15:54:33 UTC <luite> ok that's just gtk2hs-buildtools missing again, check ~/.cabal/bin for gtk2hsC2hs and if it's there, make sure that it's in your PATH, otherwise find its location
2012-07-21 15:54:44 UTC <luite> could be in ~/Library somewhere but i'm not sure where exactly
2012-07-21 15:56:02 UTC <realitygrill> ~/Library/Haskell/bin, yeah
2012-07-21 16:02:45 UTC <realitygrill> added to path, trying again
2012-07-21 16:03:00 UTC <realitygrill> same error :/
2012-07-21 16:16:52 UTC <luite> realitygrill: you need to start a new shell
2012-07-21 16:17:44 UTC <realitygrill> oh
2012-07-21 16:23:55 UTC <realitygrill> STILL. :(
2012-07-21 16:40:53 UTC <luite> realitygrill: if it's the same error, then 'which gtk2hsC2hs' should give you the directory where it's installed, fix your PATH first if it doesn't
2012-07-21 16:41:50 UTC <realitygrill> yeah, nothing shows up. so it's still PATH
2012-07-21 16:41:56 UTC <realitygrill> yet, what? I added it..
2012-07-21 16:42:45 UTC <luite> check with echo $PATH
2012-07-21 16:48:13 UTC <realitygrill> got PATH right, now. testing cabal install glib
2012-07-21 16:49:13 UTC <realitygrill> yay! now trying cairo
2012-07-21 17:00:20 UTC <realitygrill> hm, diagrams install giving a lot of architecture (i386) warnings
2012-07-21 17:00:40 UTC <realitygrill> gonna try reinstalling gtk with cabal instead of ports
2012-07-21 17:01:58 UTC <luite> uh, that's probably wrong. ports only instals the (C) library, cabal installs just the haskell bindings
2012-07-21 17:12:30 UTC <realitygrill> hm...
2012-07-21 17:12:38 UTC <realitygrill> (but it worked?)
2012-07-21 17:12:40 UTC <realitygrill> or at least seemingly
2012-07-21 17:44:24 UTC <peterjoel> fryguybob, thanks for the response - I had to disappear almost immediately after asking the question.
2012-07-21 17:46:38 UTC <peterjoel> re: external matrix libs, byorgey, do you think it would be simple to integrate some external matrix library or would it need some deep concrete dependencies in diagrams?
2012-07-21 17:49:03 UTC <byorgey> peterjoel: adding a dependency on hmatrix (which calls out to BLAS/LAPACK via the FFI) wouldn't be hard, but it just makes it that much harder for people to get diagrams installed.
2012-07-21 17:49:25 UTC <byorgey> I would consider it if there is a really really good argument for it -- some sort of killer feature that we really can't do any other way.
2012-07-21 17:52:01 UTC <peterjoel> I meant, would it be possible to use diagrams + hmatrix, without any of the diagrams modules depending on it?
2012-07-21 17:52:36 UTC <byorgey> peterjoel: oh, I see
2012-07-21 17:52:38 UTC <byorgey> hmm
2012-07-21 17:53:07 UTC <byorgey> peterjoel: I guess it depends what you want hmatrix for
2012-07-21 17:53:12 UTC <peterjoel> or is there a small-ish change that could be made in diagrams to support that
2012-07-21 17:53:50 UTC <peterjoel> I think pretty much for applying a matrix transform to any diagram. Sometimes it's just easier to express that way
2012-07-21 17:54:19 UTC <peterjoel> also, if doing code generation from an existing vector graphics format, I think it would be necessary
2012-07-21 17:54:30 UTC <byorgey> that's true
2012-07-21 17:54:43 UTC <byorgey> yeah, I think I can see how that would work
2012-07-21 17:55:35 UTC <byorgey> it wouldn't be too hard to make an external package -- without making any changes to diagrams -- that takes a matrix as input and produces a diagrams Transformation as output (using hmatrix to do the required computation)
2012-07-21 17:55:55 UTC <peterjoel> ok that would be cool
2012-07-21 17:56:07 UTC <byorgey> could make a nice little project for someone
2012-07-21 17:57:11 UTC <peterjoel> I was thinking it could just be a Matrix type class, with no instances actually defined in diagrams packages
2012-07-21 17:57:51 UTC <peterjoel> but that would be more changes within diagrams. But your suggestion sounds like fewer change points
2012-07-21 17:58:32 UTC <byorgey> yeah, I could see how that would work, but I'm not even sure what benefit there would be to adding a Matrix type class to diagrams
2012-07-21 17:58:55 UTC <byorgey> as long as you can produce a Transformation you can use that in any way you like
2012-07-21 17:59:04 UTC <peterjoel> yep, it sounds better
2012-07-21 17:59:28 UTC <byorgey> if you're interested in working on this I could send you an email with more details about how Transformation are stored and what would be required
2012-07-21 17:59:36 UTC <byorgey> or maybe put it on the wiki
2012-07-21 18:00:19 UTC <peterjoel> yes that would be great. I fully expect to try and fail, but I wouldn't mind trying anyway :)
2012-07-21 18:01:15 UTC <byorgey> hehe, ok =)
2012-07-21 18:02:12 UTC <byorgey> I'll send that to you soon
2012-07-21 18:06:28 UTC <peterjoel> cool thanksa
2012-07-21 18:18:23 UTC <peterjoel> you have my email address?
2012-07-21 19:05:11 UTC <realitygrill> aw, crap: http://hpaste.org/71909
2012-07-21 19:50:53 UTC <byorgey> peterjoel: the one at memorphic.com?
2012-07-21 19:51:24 UTC <byorgey> realitygrill: oh, boo =(
2012-07-21 19:51:44 UTC <byorgey> realitygrill: have you tried the SVG backend?
2012-07-21 20:03:08 UTC <peterjoel> byorgey, yes that on is ok
2012-07-21 20:03:23 UTC <byorgey> is there a better one?
2012-07-21 20:20:28 UTC <realitygrill> byorgey: the svg backened?
2012-07-21 20:31:25 UTC <peterjoel> byorgey, no that one is fine
2012-07-21 20:31:35 UTC <byorgey> realitygrill: http://hackage.haskell.org/package/diagrams%2Dsvg
2012-07-21 20:32:05 UTC <byorgey> I think it is almost feature-complete except for being able to embed images
2012-07-21 20:32:27 UTC <byorgey> the goal is to replace the cairo backend with SVG as the "out-of-the-box" backend
2012-07-21 20:32:37 UTC <byorgey> because people have so much trouble installing cairo
2012-07-21 20:33:10 UTC <realitygrill> oh, it's a common stumbling block, huh?
2012-07-21 20:33:57 UTC <peterjoel> HTML canvas backend might also be nice. Any work being done on that?
2012-07-21 20:34:29 UTC <realitygrill> https://github.com/byorgey/diagrams-canvas/
2012-07-21 20:34:32 UTC <realitygrill> lol, I guess so
2012-07-21 20:35:11 UTC <byorgey> yes, I recently ported it to use the blank-canvas library
2012-07-21 20:35:25 UTC <byorgey> but I hear there are some big cool changes afoot for that library
2012-07-21 20:35:41 UTC <peterjoel> nice
2012-07-21 20:35:41 UTC <byorgey> eventually I'd like to have nice support for animation + interactivity via some sort of HTML canvas backend
2012-07-21 20:53:12 UTC <luite> yes
2012-07-21 20:53:42 UTC <byorgey> luite: yes what?
2012-07-21 20:54:14 UTC <luite> yes sir
2012-07-21 20:54:19 UTC <byorgey> hehehe
2012-07-21 20:54:57 UTC <byorgey> not exactly what I meant =)
2012-07-21 20:55:40 UTC <luite> hehe nah interactive animation would be nice to have :)
2012-07-21 21:02:35 UTC <byorgey> indeed =)
2012-07-21 21:02:57 UTC <byorgey> huzzah!  I just pushed some patches.  We now have *real* support for named subdiagrams.
2012-07-21 21:03:17 UTC <byorgey> You can give a certain diagram a name, and later extract it from a diagram in which it is embedded.
2012-07-21 21:03:35 UTC <byorgey> before, you could only extract its origin and envelope.  Now you get a real honest-to-goodness Diagram.
2012-07-21 21:07:18 UTC <luite> \o/
2012-07-21 22:05:03 UTC <tgeeky> byorgey: whoa... begin the recursive diagram madness!
2012-07-21 22:37:39 UTC <luite> is that possible with the current implementation?
2012-07-21 23:00:08 UTC <byorgey> luite: recursive diagrams? no
2012-07-21 23:00:29 UTC <byorgey> I mean, you can certainly *construct* a recursive diagram.  But if you try to render it you will get infinite recursion =)
2012-07-21 23:15:19 UTC <fryguybob> Humm can a lazy backend choose not to render based on some scale?
2012-07-21 23:16:00 UTC <luite> yeah the envelope can help with clipping
2012-07-21 23:16:08 UTC <luite> oh
2012-07-21 23:16:18 UTC <luite> i guess it might become impossible to calculate the envelope....
2012-07-21 23:17:33 UTC <fryguybob> Yeah, so only infinite text :P
2012-07-22 00:16:57 UTC <mgsloan> Check this out!
2012-07-22 00:16:57 UTC <mgsloan> https://github.com/mgsloan/api-compat/blob/master/examples/diagrams-core.api.diff
2012-07-22 00:17:20 UTC <mgsloan> the idea is simple: print out module exports in a way that supports slightly more semantic diffs
2012-07-22 00:17:34 UTC <mgsloan> bbl - gotta go play some ultimate at OPLSS :D
2012-07-22 00:17:43 UTC <mgsloan> well, actually, bb tomorrow
2012-07-22 00:17:50 UTC <mgsloan> don't have wireless password...
2012-07-22 00:18:07 UTC <mgsloan> actually, not even tomorrow - we're going to the beach
2012-07-22 00:18:35 UTC <luite> naisu
2012-07-22 00:18:41 UTC <luite> i should add that to hdiff
2012-07-22 00:19:23 UTC <mgsloan> that'd be awesome!
2012-07-22 00:19:38 UTC <mgsloan> I'm working towards an interactive utility that lets you tell it about the diffs
2012-07-22 00:19:54 UTC <mgsloan> so, you tell it that a name changed
2012-07-22 00:20:49 UTC <mgsloan> and it'll output a delta module
2012-07-22 00:20:56 UTC <mgsloan> (using instance templates of course)
2012-07-22 00:21:09 UTC <luite> it does this by reading the hi files?
2012-07-22 00:21:16 UTC <mgsloan> nope
2012-07-22 00:21:23 UTC <mgsloan> currently it is kinda hacky
2012-07-22 00:21:27 UTC <mgsloan> I could use the GHC API
2012-07-22 00:21:38 UTC <mgsloan> but instead I use HINT, enumerate the names of the declarations
2012-07-22 00:21:54 UTC <byorgey> mgsloan: cool!
2012-07-22 00:21:54 UTC <mgsloan> then I take those names, stick them in a TH splice
2012-07-22 00:21:59 UTC <mgsloan> run that file
2012-07-22 00:22:05 UTC <mgsloan> and the file generates the API summary
2012-07-22 00:22:12 UTC <mgsloan> canonically sorted
2012-07-22 00:22:36 UTC <mgsloan> byorgey: thanks!
2012-07-22 00:23:27 UTC <luite> mgsloan: ah that's less ideal for hdiff, it'd have to build and install everything, and i still don't have the scripts for that
2012-07-22 00:24:04 UTC <luite> same for reading .hi files i guess
2012-07-22 12:45:32 UTC <byorgey> test (making sure the logging bot is still working)
2012-07-22 12:45:54 UTC <luite> hi bot!
2012-07-22 12:46:25 UTC <byorgey> it works =)
2012-07-22 12:50:59 UTC <luite> my code too
2012-07-22 13:13:39 UTC <byorgey> yay!
2012-07-22 13:34:40 UTC <luite> byorgey: http://hdiff.luite.com:3000/edit
2012-07-22 13:41:34 UTC <luite> it could be a bit buggy, i've only tested in chrome so far
2012-07-22 13:42:27 UTC <byorgey> fair enough, still pretty cool =)
2012-07-22 13:42:43 UTC <byorgey> is this something for integrating with shapr's project?
2012-07-22 13:42:59 UTC <luite> yes
2012-07-22 13:43:02 UTC <byorgey> cool
2012-07-22 13:43:10 UTC <luite> also with other stuff later hopefully
2012-07-22 13:43:25 UTC <luite> atm it only synchronizes text, but i'm goign to add a few more types and a better api
2012-07-22 13:43:44 UTC <luite> so you're using firefox?
2012-07-22 13:43:51 UTC <byorgey> sounds awesome
2012-07-22 13:44:01 UTC <byorgey> yes, I'm using firefox
2012-07-22 13:44:16 UTC <luite> ok, i'll test that next then
2012-07-22 13:44:28 UTC <luite> IE won't work because of no websocket support yet
2012-07-22 13:44:42 UTC <byorgey> no one uses IE though
2012-07-22 13:44:46 UTC <luite> hehe
2012-07-22 13:44:52 UTC <byorgey> at least no one *important* ;)
2012-07-22 13:45:02 UTC <luite> well there's a compatibility thing that uses other transports if websockets aren't available
2012-07-22 13:45:13 UTC <byorgey> but it doesn't work very well or something?
2012-07-22 13:45:19 UTC <luite> but the bindings for wai aren't ready yet
2012-07-22 13:45:35 UTC <luite> shaprs project uses a javascript server atm
2012-07-22 13:46:02 UTC <luite> this is a yesod server
2012-07-22 13:47:02 UTC <byorgey> I see
2012-07-22 13:48:06 UTC <luite> hm interesting, firefox doesn't work at all here
2012-07-22 13:48:46 UTC <byorgey> hmm, strange
2012-07-22 13:48:54 UTC <byorgey> what version of firefox?
2012-07-22 13:51:55 UTC <luite> i think i've found the problem, some race condition loading the scripts
2012-07-22 13:54:17 UTC <luite> hmm
2012-07-22 13:54:25 UTC <luite> strange, it works fine now, no double returns
2012-07-22 13:55:09 UTC <luite> ah but there still is a bug removing blank lines
2012-07-22 13:59:41 UTC <byorgey> I still get the double return thing
2012-07-22 13:59:51 UTC <byorgey> (assuming you updated the code running at that URL you linked)
2012-07-22 14:02:51 UTC <luite> no no updates yet
2012-07-22 14:04:00 UTC <luite> looks like your client des actually send two insert actions for '\n'
2012-07-22 14:04:02 UTC <luite> does
2012-07-22 14:04:23 UTC <byorgey> oh, really?
2012-07-22 14:04:27 UTC <byorgey> I wonder why it would do that
2012-07-22 14:04:50 UTC <byorgey> oh, interesting, if I do Shift-Return it only creates one new line
2012-07-22 14:04:57 UTC <byorgey> but Return by itself creates two
2012-07-22 14:05:08 UTC <luite> oh, strange keymap?
2012-07-22 14:05:17 UTC <byorgey> backspace always deletes one line
2012-07-22 14:05:36 UTC <byorgey> I haven't done anything out of the ordinary with my keymap
2012-07-22 14:05:45 UTC <byorgey> unless xmonad is messing it up somehow
2012-07-22 14:06:40 UTC <luite> http://codemirror.net/demo/activeline.html <- what happens here if you hit return?
2012-07-22 14:07:40 UTC <byorgey> same thing, Return -> two lines, Shift+Return -> one line
2012-07-22 14:07:55 UTC <luite> ok good, then at least it's not a problem with my code :)
2012-07-22 14:08:14 UTC <byorgey> hehe, good =)
2012-07-22 14:09:04 UTC <byorgey> to be more specific, it looks like Return creates one indented line (i.e. with leading spaces) followed by one unindented line; Shift+Return just creates a new line with no indentation
2012-07-22 14:09:15 UTC <byorgey> so maybe it's a problem with codemirror's auto-indent code
2012-07-22 14:09:23 UTC <byorgey> dunno
2012-07-22 14:11:01 UTC <luite> hmm, i can't reproduce it here, so i don't know.
2012-07-22 14:12:08 UTC <luite> i've stopped the server now, going to try to fix the line removal bug first
2012-07-22 14:13:13 UTC <luite> i still need to come up with some API, atm it only supports sequences, but things like sets/maps, mutable registers and counters should also be added
2012-07-22 14:13:39 UTC <luite> for it to be truly useful for synchronizing work on wolfgang pages etc
2012-07-22 14:14:51 UTC <luite> perhaps shapr can help out
2012-07-22 14:20:04 UTC <luite> if i just add deletion timestamps (already used on the server, just not sent to clients), the whole history will be stored in the document, so a client could download and replay a session
2012-07-22 14:27:42 UTC <luite> not sure about how well this would work for a wiki, i think realtime collaborative editing could be done by joining a session, and when the users are happy with the result, and then save the current snapshot as a wiki revision
2012-07-22 14:40:51 UTC <luite> yay fixed line removal bug
2012-07-22 14:50:46 UTC <byorgey> yay =)
2012-07-22 14:51:02 UTC <byorgey> yeah, collaboratively editing a wiki page then saving it when happy sounds good
2012-07-22 15:16:00 UTC <byorgey> greetings sleepyMonad
2012-07-22 15:18:53 UTC <luite> goedemiddag sleepyMonad
2012-07-22 15:35:35 UTC <sleepyMonad> greetings / goedemiddag
2012-07-22 16:10:43 UTC <sleepyMonad> Manual says: mappend is composition of transformations; yet rect 5 1 # (rotate (Rad tau/8) <> translateX 10 ) does not give me the same result as rect 5 1 # translateX 10 # rotate (Rad tau/8)
2012-07-22 16:10:43 UTC <sleepyMonad> I end up with 2 rectangles instead of one in the former case
2012-07-22 16:23:50 UTC <sleepyMonad> cf. http://www.ipaste.org/ytj for an example
2012-07-22 16:52:30 UTC <byorgey> sleepyMonad: hmm, let me take a look
2012-07-22 16:54:43 UTC <byorgey> sleepyMonad: oh! heh, I see what's going on.  Note that  rotate (Rad tau/8)  and  translateX 10  are *functions*, so  rotate (Rad tau/8) <> translateX 10 is using the  Monoid m => Monoid (a -> m)  instance
2012-07-22 16:54:57 UTC <byorgey> in particular  (f <> g) x = f x <> g x
2012-07-22 16:55:37 UTC <byorgey> so  rect 5 1 # (rotate (Rad tau/8) <> translateX 10)  =  (rect 5 1 # rotate (Rad tau/8)) <> (rect 5 1 # translateX 10)
2012-07-22 16:56:08 UTC <byorgey> it's doing exactly what it should, but it is certainly true that it can be tricky keeping track of all the different Monoid instances.
2012-07-22 16:56:27 UTC <byorgey> if you wanted to actually use the monoid instance for transformations you would have to do something like
2012-07-22 16:56:44 UTC <byorgey> rect 5 1 # transform (rotation (Rad tau/8) <> translationX 10)
2012-07-22 16:56:58 UTC <byorgey> which should give the result you wanted.
2012-07-22 16:59:21 UTC <sleepyMonad> thanks, that is most enlightening.
2012-07-22 17:00:18 UTC <byorgey> I added a ticket to the bug tracker to improve the documentation since it seems like this might be a common confusion (which I had not considered before)
2012-07-22 17:00:52 UTC <byorgey> sleepyMonad: is there a particular place in the documentation it would have helped you to see a discussion of this?
2012-07-22 17:04:14 UTC <sleepyMonad> byorgey: user manual: section: 2D transformations > transformations in general
2012-07-22 17:04:35 UTC <byorgey> ok, thanks.
2012-07-22 17:04:48 UTC <sleepyMonad> no thank you very much
2012-07-22 17:05:25 UTC <byorgey> ok, thanks all round =)
2012-07-22 17:05:37 UTC <byorgey> out of curiosity, what are you using diagrams for?  or just playing around?
2012-07-22 17:06:42 UTC <sleepyMonad> just playing around for now, to become familiar with the toolset
2012-07-22 23:57:33 UTC <mgsloan> https://github.com/mgsloan/api-compat/blob/master/examples/diagrams-core.api.diff
2012-07-22 23:58:27 UTC <luite> mgsloan: crdts http://hdiff.luite.com:3000/edit
2012-07-23 00:02:35 UTC <mgsloan> luite: can you put that on port 80 somewhere?
2012-07-23 00:02:40 UTC <mgsloan> I'm in a library
2012-07-23 00:02:55 UTC <mgsloan> and actually using webchat irc client
2012-07-23 00:07:18 UTC <luite> oh port 80 of this server is already in use :(
2012-07-23 00:08:30 UTC <luite> anyway it's fairly boring to see, and still a bit flaky :)
2012-07-23 00:09:04 UTC <mgsloan> yeah, that stuff is tricky!  Cool that you got it going, though :D
2012-07-23 00:09:08 UTC <luite> hopefully shapr can iron out the kinks
2012-07-23 00:09:32 UTC <luite> mgsloan: oh it doesn't use your lib btw
2012-07-23 00:09:47 UTC <mgsloan> oh yeah, I wouldn't expect it to
2012-07-23 00:10:09 UTC <luite> it's rather hacky at this point, i need to think a bit about the api
2012-07-23 00:10:31 UTC <mgsloan> that lib was very much so an exercise in "look!  I can take each section of a paper and have a straightforward expression of it in haskell
2012-07-23 00:10:59 UTC <mgsloan> I was actually planning to do a post where the code is directly juxtaposed with the relevant sections
2012-07-23 00:11:03 UTC <luite> yeah i went for a more concrete thing, just fixed atom ids and timestamps to integers etc
2012-07-23 00:11:12 UTC <luite> instead of wacky semilattices :)
2012-07-23 00:11:19 UTC <mgsloan> :D
2012-07-23 00:11:38 UTC <mgsloan> so, I'd love to see this tool on hdiff
2012-07-23 00:12:02 UTC <mgsloan> the problem is that you need to have the package installed to get its API
2012-07-23 00:12:09 UTC <luite> your api diff tool right? do you know a safe way to run it?
2012-07-23 00:12:47 UTC <mgsloan> if you disable TemplateHaskell it should work
2012-07-23 00:13:15 UTC <luite> but you still need to cabal install everything
2012-07-23 00:13:17 UTC <mgsloan> (what I mean is, don't install any packages that use TH)
2012-07-23 00:13:19 UTC <mgsloan> yup
2012-07-23 00:13:43 UTC <mgsloan> I could definitely add a mode that parses code (but not .lhs)
2012-07-23 00:14:28 UTC <mgsloan> and it wouldn't report APIs for things that don't have signatures
2012-07-23 00:14:56 UTC <mgsloan> and interaction with TH and CPP would be funky
2012-07-23 00:15:53 UTC <mgsloan> maybe I can get it added to hackage 2 :)
2012-07-23 00:16:16 UTC <mgsloan> probably a better spot - because they compile code anyway
2012-07-23 00:18:04 UTC <luite> is hackage2 close to release no? last i heard is that they were having memory usage problems with acid-state
2012-07-23 00:18:08 UTC <luite> now
2012-07-23 00:20:42 UTC <mgsloan> hmm, who knows, we'll see!
2012-07-23 00:20:54 UTC <mgsloan> I think it was stalled for a long while, but I think someone got back to it recently
2012-07-23 00:21:02 UTC <mgsloan> after the recent hackage outages
2012-07-23 00:21:51 UTC <mgsloan> I'm not sure why they don't just use the filesystem as a database
2012-07-23 00:22:23 UTC <mgsloan> and have a lot of ram for virtual memory / keep the whole thing mounted in ram
2012-07-23 00:22:36 UTC <luite> dunno i'd just use postgresql i think
2012-07-23 00:32:46 UTC <mgsloan> yeah, I suppose
2012-07-23 00:32:56 UTC <mgsloan> I guess I'm just thinking about simplicity
2012-07-23 00:33:11 UTC <mgsloan> I could never really imagine using a database
2012-07-23 00:33:28 UTC <mgsloan> well, I can imagine it, but for whatever reason I prefer flat files
2012-07-23 00:33:40 UTC <mgsloan> gtg!
2012-07-24 01:59:05 UTC <luite> byorgey: can you release a diagrams-lib that accepts data-default 0.4 ?
2012-07-24 02:43:43 UTC <luite> if possible before shapr comes back online :p
2012-07-24 03:00:48 UTC <fryguybob> luite: like hackage release or just push a patch?
2012-07-24 03:06:34 UTC <luite> hackage, it's just a dependency bump
2012-07-24 03:09:44 UTC <fryguybob> luite: I figured.
2012-07-24 13:11:11 UTC <byorgey> luite: done
2012-07-24 13:27:02 UTC <luite> tnx!
2012-07-24 13:34:16 UTC <byorgey> make sure it works =P
2012-07-24 13:36:34 UTC <luite> the only thing 0.4 and 0.5 did was adding some instances, ghc should've caught it if there's a conflict :)
2012-07-24 13:37:41 UTC <byorgey> no, I meant, make sure I didn't screw up the updating+uploading process =)
2012-07-24 13:38:48 UTC <luite> hdiff says it's ok :)
2012-07-24 13:39:02 UTC <byorgey> excellent =)
2012-07-24 13:57:49 UTC <mietek> Has anyone thought about a native Quartz backend?
2012-07-24 13:58:09 UTC <mietek> cairo on OS X is a bit painful
2012-07-24 14:05:56 UTC <byorgey> mietek: Yeah, we are sadly well aware that cairo on OS X is painful.  I've not heard anyone talk about a Quartz backend.
2012-07-24 14:06:11 UTC <byorgey> mietek: note there is an SVG backend (diagrams-svg).
2012-07-24 14:06:33 UTC <byorgey> so using the cairo backend is not required.
2012-07-24 14:06:51 UTC <byorgey> the next release of diagrams (hopefully soon) will have diagrams-svg as the "out-of-the-box" backend
2012-07-24 14:06:59 UTC <mietek> OK, I thought the SVG one wasn't quite as supported
2012-07-24 14:08:16 UTC <byorgey> It is still missing one or two features
2012-07-24 14:08:20 UTC <mietek> I did manage to get cairo working through MacPorts, barring the libiconv problem
2012-07-24 14:08:27 UTC <byorgey> oh, good
2012-07-24 14:08:33 UTC <mietek> But I'm thinking I'd like to try doing the Quartz backend
2012-07-24 14:08:45 UTC <byorgey> sure, have at it!
2012-07-24 14:09:00 UTC <byorgey> I'm always happy to support efforts towards new backends
2012-07-24 14:11:59 UTC <mietek> BTW, just wanted to say I'm really grateful for diagrams
2012-07-24 14:12:14 UTC <byorgey> thanks, glad you like it =D
2012-07-24 14:12:17 UTC <byorgey> what are you using it for?
2012-07-24 14:12:21 UTC <mietek> It's exactly what I needed to replace the horror that is ContextFree
2012-07-24 14:12:28 UTC <byorgey> haha
2012-07-24 14:12:35 UTC <byorgey> I remember ContextFree
2012-07-24 14:12:37 UTC <mietek> Just doing some generative graphics
2012-07-24 14:12:43 UTC <byorgey> I even contributed some code to it once upone a time
2012-07-24 14:12:49 UTC <byorgey> cool
2012-07-24 14:12:54 UTC <mietek> Yeah, I added a TextMate mode for it... totally ad-hoc language
2012-07-24 14:13:11 UTC <byorgey> man, that was before I even knew Haskell
2012-07-24 14:13:25 UTC <mietek> https://dl.dropbox.com/u/95029/uwr-wmii.png
2012-07-24 14:13:28 UTC <mietek> One thing I did with CF
2012-07-24 14:13:45 UTC <byorgey> very neat =)
2012-07-24 14:13:51 UTC <mietek> Thanks
2012-07-24 14:14:10 UTC <byorgey> if you have any cool examples of stuff you've done with diagrams, send them to me and I'll add them to the website gallery
2012-07-24 14:14:24 UTC <mietek> Cool, I'll let you know
2012-07-24 14:15:29 UTC <byorgey> mietek: hmm, you probably don't live anywhere near Philadelphia, do you
2012-07-24 14:15:51 UTC <mietek> Currently Cambridge, UK
2012-07-24 14:16:25 UTC <byorgey> too bad, we're going to be hacking on diagrams at Hac Phi in a couple weeks =)
2012-07-24 14:16:37 UTC <mietek> Ahh, sadly it's a bit far
2012-07-24 14:16:44 UTC <byorgey> Cambridge is nice, I lived there a couple summers ago
2012-07-24 14:16:53 UTC <mietek> I'll do my best to get to Copenhagen for the ICFP and associated stuff, though
2012-07-24 14:17:03 UTC <byorgey> ah, sounds good, I will be there
2012-07-24 14:36:52 UTC <mietek> byorgey: one thing which is confusing me a bit is why "rotate" takes a circle fraction, while "arc" seems to want radians
2012-07-24 14:38:00 UTC <byorgey> mietek: rotate and arc both take any angle measure
2012-07-24 14:38:05 UTC <byorgey> rotateBy takes a CircleFrac
2012-07-24 14:38:53 UTC <byorgey> mietek: I'm not sure what is causing the confusion, but if you paste some code I could take a look
2012-07-24 14:39:34 UTC <mietek> Thanks, I just didn't notice rotate
2012-07-24 14:39:41 UTC <byorgey> ah, ok
2012-07-24 14:39:42 UTC <mietek> This is better
2012-07-24 14:40:08 UTC <byorgey> rotateBy is just rotate with a less polymorphic type, for convenience
2012-07-24 14:40:16 UTC <byorgey> since using a CircleFrac with rotate is common
2012-07-24 14:53:57 UTC <mietek> byorgey: oh! And thanks for including tau :)
2012-07-24 14:54:19 UTC <byorgey> hehe, you're welcome =)
2012-07-24 21:17:16 UTC <tgeeky__> byorgey: these are pretty neat, and fun to play with: http://hackage.haskell.org/package/cyclotomic-0.2
2012-07-24 21:17:31 UTC <tgeeky__> also rather fast
2012-07-24 21:22:00 UTC <tgeeky__> i've already got a version that has much nicer output, and I'm going to try and hook in Bird's fast inversion algorithim
2012-07-24 22:25:50 UTC <fryguybob> oooOOOooo diagrams organization.
2012-07-24 23:37:07 UTC <byorgey> fryguybob: yep.  Thus begins the Great Diagrams Migration of 2012.
2012-07-24 23:37:35 UTC <byorgey> tgeeky__: oh, neat
2012-07-24 23:37:46 UTC <byorgey> tgeeky__: the author of that package will be at hac phi =)
2012-07-24 23:38:54 UTC <byorgey> tgeeky__: do these have something to do with cyclotomic polynomials?
2012-07-24 23:46:21 UTC <fryguybob> byorgey: Are you going to use a tool to import the repos from darcs?
2012-07-24 23:46:32 UTC <byorgey> fryguybob: I already did
2012-07-24 23:47:07 UTC <byorgey> http://wiki.darcs.net/DarcsBridgeUsage , to be precise
2012-07-24 23:48:57 UTC <fryguybob> ok, I'll try that out on my repos tonight.
2012-07-24 23:51:10 UTC <byorgey> I'm not sure what the procedure is for including them in the diagrams organization
2012-07-24 23:52:10 UTC <fryguybob> I think that can happen later without much effort if I have them under my user for now.
2012-07-24 23:52:41 UTC <byorgey> sure, I think so
2012-07-24 23:55:48 UTC <fryguybob> I should start the ball rolling for a hackage account for myself too.
2012-07-24 23:56:38 UTC <byorgey> ah, yes
2012-07-24 23:56:51 UTC <byorgey> those can take a while to be processed =(
2012-07-24 23:58:18 UTC <fryguybob> Well, the "I know, I'll wait for Hackage 2" option hasn't beet the slowness of the processing yet =P.
2012-07-24 23:59:15 UTC <byorgey> true =)
2012-07-25 01:09:47 UTC <tgeeky__> byorgey: uh, yes, I think they are one and the same, at least for the fields ajoined with sqrt(-1)
2012-07-25 01:12:07 UTC <tgeeky__> byorgey: I know that you can express some invariants on the classical finite groups (G2,F4,E6,E7,E8) using cyclotomic polynomials
2012-07-25 01:56:21 UTC <luite> bah can't sleep
2012-07-25 01:57:22 UTC <edwardk> then stay up and solve my arcade auth problem ;)
2012-07-25 01:57:42 UTC <edwardk> you know you want to
2012-07-25 01:57:53 UTC <luite> hehe
2012-07-25 01:58:52 UTC <edwardk> right now the best solution i have involves an actual extra server (but at least it is one that can be replicated by third parties)
2012-07-25 01:59:37 UTC <luite> i was thinking before that if you can openid or oauth sign user-supplied fields, you can have them sign a public key, but at least browserid doesn't support that
2012-07-25 01:59:46 UTC <edwardk> yeah
2012-07-25 01:59:54 UTC <edwardk> the public key had crossed my mind
2012-07-25 02:00:07 UTC <edwardk> with browserid it could _be_ the audience
2012-07-25 02:00:10 UTC <edwardk> if it'd fit ;)
2012-07-25 02:00:59 UTC <luite> but i really don't know anything about the more complex multilevel oauth stuff, for wolfgang i was using browserid because it's nice and simple and always gives you a verified email
2012-07-25 02:01:12 UTC <edwardk> yeah
2012-07-25 02:01:16 UTC <edwardk> thats exactly what i want
2012-07-25 02:01:29 UTC <edwardk> a verified email address and the lack of impersonation when i pass credentials from site to site
2012-07-25 02:02:18 UTC <edwardk> also the browser id auth has limited duration
2012-07-25 02:02:33 UTC <edwardk> i could possibly sign a hash of the private key
2012-07-25 02:02:36 UTC <edwardk> er public key
2012-07-25 02:03:11 UTC <edwardk> i mean send the hash of the public key as the audience
2012-07-25 02:03:26 UTC <edwardk> then when i present the public key, validating the hash is enough
2012-07-25 02:03:43 UTC <edwardk> and ssh can take care of the rest
2012-07-25 02:06:55 UTC <luite> hmm, i hope that works
2012-07-25 02:09:24 UTC <edwardk> still pretty heavy and then there is the need for keygen
2012-07-25 02:09:36 UTC <edwardk> and browserid would timeout
2012-07-25 02:09:52 UTC <edwardk> so i'm hunting through openid or oauth for a place to stuff an identifier =)
2012-07-25 02:10:44 UTC <luite> right, browserid seems a bit limited. you could verify the assertion on the client and ignore the timeout, but then it would be even heavier on the client...
2012-07-25 02:11:09 UTC <luite> also feels wrong :)
2012-07-25 02:11:27 UTC <edwardk> trying to see if i can just oauth for the user's email address from google and include a hash of a key in the request as part of the audience ;)
2012-07-25 02:12:10 UTC <edwardk> then i'd get back a signed thing from google (without even requiring the user to enter their password most likely) just click a button, that can be used to proceed at client startup
2012-07-25 02:12:21 UTC <edwardk> that would be pretty much the gold standard
2012-07-25 02:12:28 UTC <luite> are there oauth providers that can use any email, not just their own?
2012-07-25 02:12:55 UTC <edwardk> not sure what oauth substandards there are for user data
2012-07-25 02:13:24 UTC <edwardk> i'm currently just trying to get the https://www.googleapis.com/auth/userinfo.email oauth protocol to work
2012-07-25 02:13:32 UTC <edwardk> and see what i can stuff in the request
2012-07-25 02:14:37 UTC <edwardk> oh, google is out i think
2012-07-25 02:14:53 UTC <edwardk> the api console requires me to specify an exact url, and i doubt they'd like 'localhost' as the url ;)
2012-07-25 02:15:38 UTC <edwardk> i can probably follow the 'application' registration process with them, but that only gets one provider
2012-07-25 02:18:29 UTC <edwardk> sweet. i was able to build a client id for google's apis that can redirect to localhost
2012-07-25 02:18:50 UTC <edwardk> now to figure out how to smash the info i want into the oauth token
2012-07-25 02:20:58 UTC <luite> will it actually accept requests if you try to login from localhost?
2012-07-25 02:25:23 UTC <edwardk> got it
2012-07-25 02:25:24 UTC <edwardk> yeah
2012-07-25 02:25:26 UTC <edwardk> https://accounts.google.com/o/oauth2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&state=publickeyhash&redirect_uri=http%3A%2F%2Flocalhost%3A8000%2Foauth-callback&response_type=token&client_id=866865470933.apps.googleusercontent.com
2012-07-25 02:25:37 UTC <edwardk> where i pass an appropriate publickeyhash
2012-07-25 02:26:03 UTC <luite> hm does this mean that you'll have to distribute google application ids with your server? or should every server op just request one?
2012-07-25 02:26:08 UTC <edwardk> will callback to the localhost on port 8000/oauth-callback with the token including the nonce
2012-07-25 02:26:32 UTC <edwardk> it distributes a google installed application client id, the secrets for those are not assumed to be secure
2012-07-25 02:27:35 UTC <luite> hm cool :) it does redirect to #error=unsupported_response_type for me
2012-07-25 02:27:54 UTC <edwardk> i probably put in the wrong code there
2012-07-25 02:29:27 UTC <edwardk> oh i need to ask for a code not a token
2012-07-25 02:29:50 UTC <edwardk> https://accounts.google.com/o/oauth2/auth?scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email&state=publickeyhash&redirect_uri=http%3A%2F%2Flocalhost%2Foauth-callback&response_type=code&client_id=866865470933.apps.googleusercontent.com
2012-07-25 02:30:46 UTC <luite> ah
2012-07-25 02:32:21 UTC <edwardk> so once i have that code i can exchange it with google for an access token and refresh token
2012-07-25 02:32:54 UTC <luite> and those contain the key hash?
2012-07-25 02:34:45 UTC <edwardk> yeah
2012-07-25 02:34:47 UTC <edwardk> =)
2012-07-25 02:35:05 UTC <edwardk> feel like banging out a snaplet to actually do this? =)
2012-07-25 02:35:47 UTC <luite> hehe i haven't made any snaplets yet :(
2012-07-25 02:36:13 UTC <luite> actually snaplets were the reason that i switched to yesod
2012-07-25 02:36:18 UTC <edwardk> doh
2012-07-25 02:36:48 UTC <edwardk> they are the reason i like snap ;)
2012-07-25 02:37:41 UTC <luite> :) i wanted easy authentication for my site, and last year there were no snaplets yet, but mightybyte kept telling that everythign would be different once we had snaplets
2012-07-25 02:38:32 UTC <luite> unfortunately the code wasn't in a public repository, and i didn't feel like waiting anymore, yesod had yesod-auth for this.
2012-07-25 02:39:05 UTC <luite> but i really should try them :)
2012-07-25 02:46:10 UTC <edwardk> gah
2012-07-25 02:46:13 UTC <edwardk> there may be a problem
2012-07-25 02:46:23 UTC <edwardk> the state parameter comes back separate from the code
2012-07-25 02:46:29 UTC <edwardk> and doesn't appear to be contained in the access_token
2012-07-25 02:46:31 UTC <edwardk> =(
2012-07-25 02:47:42 UTC <edwardk> oh wait, maybe i can do it as part of the redirect-uri
2012-07-25 02:47:53 UTC <edwardk> this is getting progressively more subversive
2012-07-25 02:48:10 UTC <edwardk> the redirect-uri has to be specified the same when obtaining the access token
2012-07-25 02:49:52 UTC <edwardk> apparently not =/
2012-07-25 02:49:54 UTC <edwardk> hrmm
2012-07-25 02:50:01 UTC <edwardk> so close to a perfect solution
2012-07-25 02:51:21 UTC <luite> if you have a haskellarcade.org domain and you resolve *.user.haskellarcade.org to 127.0.0.1 you can have the key in the browserid audience by just letting them open keyhash.user.haskellarcade.org ;)
2012-07-25 02:53:51 UTC <luite> oh but it still expires :(
2012-07-25 02:57:07 UTC <edwardk> i have chiptoons.com i can use for that purpose
2012-07-25 02:57:22 UTC <edwardk> (for now)
2012-07-25 02:57:29 UTC <edwardk> but yeah browserid is too short lived
2012-07-25 03:06:36 UTC <edwardk> ok, i get two tokens back from the server
2012-07-25 03:06:42 UTC <edwardk> i get an access token and a refresh token
2012-07-25 03:06:56 UTC <edwardk> i can pass along the access token to the game server
2012-07-25 03:07:09 UTC <edwardk> and the refresh token lets me get new access tokens
2012-07-25 03:07:37 UTC <edwardk> the question is can i use that to build a protocol where the access tokens aren't reusable
2012-07-25 03:07:51 UTC <edwardk> e.g. use the access token once, and then publish that its used
2012-07-25 03:07:56 UTC <edwardk> and refresh to get a new one
2012-07-25 03:08:16 UTC <edwardk> the trick is how to publish the fact that the token has been consumed
2012-07-25 03:08:57 UTC <edwardk> that seems to need a central registry of used tokens
2012-07-25 03:09:12 UTC <edwardk> maybe after blinding/hashing them?
2012-07-25 03:09:42 UTC <edwardk> hash the access id and dump it on the main arcade website in a restful bin somewhere?
2012-07-25 03:09:55 UTC <edwardk> you only have to hold onto them for their timeout anyways
2012-07-25 03:10:29 UTC <luite> why can't it be reused?
2012-07-25 03:10:50 UTC <edwardk> well, the problem is if i can hand the access token to someone they can hand it to someone else
2012-07-25 03:11:23 UTC <edwardk> unless i block that by saying something like 'this access token is for this one use on this one server'
2012-07-25 03:11:42 UTC <luite> yeah but what can they do with it? they can just get an email address and a pubkey hash?
2012-07-25 03:11:57 UTC <edwardk> they can pretend to be you to another server
2012-07-25 03:12:20 UTC <luite> why? they need the private key for that
2012-07-25 03:12:24 UTC <edwardk> i don't want to face the situation where logging into a server is trusting the server not to run off with your credentials
2012-07-25 03:12:30 UTC <edwardk> no, the public key/private key thing didn't work
2012-07-25 03:12:37 UTC <luite> oh i missed that
2012-07-25 03:12:42 UTC <edwardk> the state is only included in the initial response
2012-07-25 03:12:55 UTC <edwardk> so i get it back, but its not tied to the access/refresh token i get
2012-07-25 03:13:11 UTC <edwardk> so now i just have a naked pair of access and refresh tokens
2012-07-25 03:13:24 UTC <edwardk> and am trying to come up with a way to keep the servers from recycling the access token
2012-07-25 03:15:22 UTC <edwardk> checking other oauth providers to see if i can get something more useful out of them, twitter is the next on my list
2012-07-25 03:17:04 UTC <luite> urgh, forcing users to have a twitter account?
2012-07-25 03:26:12 UTC <edwardk> twitter fails
2012-07-25 03:26:17 UTC <edwardk> next, facebook ;)
2012-07-25 03:26:24 UTC <edwardk> facebook looks like its failing too
2012-07-25 03:27:27 UTC <edwardk> so so far the best answer has been to provide some kind of access token replay avoidance service on chiptoons that can be used to keep the servers from impersonating you
2012-07-25 03:27:33 UTC <luite> that's a relief, since i don't have accounts for either :p
2012-07-25 03:27:37 UTC <edwardk> hah
2012-07-25 03:27:50 UTC <edwardk> i'm kind of willing to do the google oauth thing, thats pretty uninvasive
2012-07-25 03:28:07 UTC <edwardk> and at least for me it reduces the game startup to clicking a couple of buttons ;)
2012-07-25 03:30:06 UTC <luite> it still sounds like a horrible hack though...
2012-07-25 03:30:16 UTC <edwardk> so it'd be something like hit google, get the access/refresh token to start, when you want to connect to a server, talk to the server get some identifier it has for itself, access google for a refreshed access token, register a hash of that access token as tied to the server identifier on chiptoons, then send the access token to the server
2012-07-25 03:30:30 UTC <edwardk> who can check to make sure the hash of the token isn't already taken by someone else
2012-07-25 03:30:40 UTC <edwardk> ooh
2012-07-25 03:30:42 UTC <edwardk> even better
2012-07-25 03:30:46 UTC <edwardk> i can avoid constantly refreshing
2012-07-25 03:31:03 UTC <edwardk> by just letting the user rebind the hash
2012-07-25 03:31:26 UTC <edwardk> so the workflow becomes
2012-07-25 03:31:35 UTC <edwardk> connect to google, get an access and refresh token
2012-07-25 03:33:01 UTC <edwardk> send the hash of the access token to chiptoons and get back a key that can be used to associate servers with that access token up until it expires
2012-07-25 03:34:15 UTC <edwardk> then when you talk to a server, it sends an identifier with a diffie-hellman-style exchange to avoid MITM, you add it to the approved list, and it connects to see that its there
2012-07-25 03:35:18 UTC <edwardk> its a bodge admittedly
2012-07-25 03:35:25 UTC <luite> hehe
2012-07-25 03:36:11 UTC <edwardk> i don't like that its using another server
2012-07-25 03:36:22 UTC <edwardk> i was happier when i thought i could get google to do it all
2012-07-25 05:16:04 UTC <tgeeky__> hm. that might be a good find. "Combinatory Logic - Pure, Applied, and Typed"
2012-07-25 07:25:34 UTC <mietek> How do I draw a simple line between two points?
2012-07-25 07:29:08 UTC <fryguybob> mietek: The ~~ operator can build a path between two points.
2012-07-25 07:32:11 UTC <mietek> Unfortunately I can't figure out how to combine whatever ~~ returns with another drawing
2012-07-25 07:32:21 UTC <mietek> Say,  arc u v <> straight (0, 1)
2012-07-25 07:32:31 UTC <mietek> While  arc u v <> circle 1  works
2012-07-25 07:34:12 UTC <fryguybob> Are you wanting the line on top or as part of a path that includes the arc?
2012-07-25 07:34:57 UTC <mietek> It would be nice to know both ways
2012-07-25 07:35:12 UTC <mietek> But separate paths would be fine for now
2012-07-25 07:36:53 UTC <fryguybob> If you treat something like  a ~~ b  as a diagram (a ~~ b # lw 0.01) for instances, then <> will be combining diagrams (same as `atop`).
2012-07-25 07:40:36 UTC <mietek> I see, thanks
2012-07-25 07:40:39 UTC <fryguybob> It can also be a Trail or a Path or a list of points.  All of these have monoid instances (where <> gets its meaning).
2012-07-25 07:42:12 UTC <mietek> So how do you actually construct a point?
2012-07-25 07:42:36 UTC <mietek>     Couldn't match expected type `Point (V a0)' with actual type `(t0, t1)'
2012-07-25 07:42:37 UTC <mietek>     In the first argument of `(~~)', namely `(0, 0)'
2012-07-25 07:45:26 UTC <mietek> Using p2 fails...
2012-07-25 07:45:39 UTC <mietek> http://projects.haskell.org/diagrams/manual/diagrams-manual.html#couldn-t-match-type-v-p2-with-r2
2012-07-25 07:45:49 UTC <mietek> And this workaround doesn't seem to help
2012-07-25 07:47:58 UTC <fryguybob> mietek: Humm, try the P constructor?
2012-07-25 07:49:09 UTC <fryguybob> ACTION has to go to bed.
2012-07-25 11:00:04 UTC <byorgey> mietek: hmm, what do you mean 'using p2 fails'?
2012-07-25 11:05:52 UTC <luite> http://hackage.haskell.org/packages/archive/hoopl/3.8.7.4/doc/html/Compiler-Hoopl.html <- how can i pattern match on BCat, BHead, BTail and BClosed? f (BFirst n) works, but if i try something like that for BCat it says "Not in scope: data constructor `BCat'"
2012-07-25 11:12:32 UTC <mietek> byorgey: could you tell me how to make a straight line diagram?
2012-07-25 11:27:11 UTC <byorgey> mietek: using ~~
2012-07-25 11:27:45 UTC <byorgey> mietek: if you're having trouble using that I'd have to take a look at your code
2012-07-25 11:28:25 UTC <byorgey> mietek: you can also use  fromVertices  or  fromOffsets
2012-07-25 11:28:42 UTC <byorgey> in fact (~~) is implemented as   p1 ~~ p2 = fromVertices [p1,p2]
2012-07-25 11:30:08 UTC <byorgey> luite: maybe you need to explicitly import Compiler.Hoopl.Graph ?
2012-07-25 11:30:14 UTC <byorgey> maybe Compiler.Hoopl doesn't re-export all the constructors
2012-07-25 11:30:19 UTC <byorgey> ACTION really has no idea
2012-07-25 11:30:49 UTC <luite> byorgey: that's a hidden module, and Compiler.Hoopl does export Block(..)
2012-07-25 11:31:32 UTC <luite> ooh
2012-07-25 11:31:33 UTC <luite> wait
2012-07-25 11:31:35 UTC <luite> i'm wrong
2012-07-25 11:32:03 UTC <luite> the Block(..) export is from .Graph
2012-07-25 11:32:27 UTC <luite> Compiler.Hoopl doesn't reexport all
2012-07-25 11:33:29 UTC <byorgey> boo, I wonder why
2012-07-25 11:37:51 UTC <luite> I think you're supposed to use the supplied foldBlockNodes or blockToNodeList things
2012-07-25 11:38:42 UTC <luite> the latter comes in 4 variants of which 3 have the same type
2012-07-25 11:43:01 UTC <byorgey> ah, probably
2012-07-25 14:04:19 UTC <mietek> byorgey: let myarc3 = arc 0 (tau/4 :: Rad) <> (p2 (0, 0) ~~ p2 (0, 1))
2012-07-25 14:04:23 UTC <mietek> byorgey: so this works
2012-07-25 14:04:33 UTC <mietek> byorgey: I had to use -XNoMonomorphismRestriction for ghci
2012-07-25 14:04:47 UTC <mietek> byorgey: when I said using p2 fails, I meant the result you get without the extension
2012-07-25 14:05:22 UTC <mietek> byorgey: how do I use `straight` instead of (~~)?
2012-07-25 14:19:49 UTC <byorgey> mietek: `straight` is specifically for constructing Segments, so you don't want that (it's too low-level)
2012-07-25 14:19:54 UTC <byorgey> mietek: instead, use  fromOffsets [v]
2012-07-25 14:20:29 UTC <byorgey> arc 0 (tau/4 :: Rad) <> fromOffsets [unitX]   -- this should work
2012-07-25 14:21:14 UTC <fryguybob> byorgey: I put my repos on github.
2012-07-25 14:21:18 UTC <mietek> byorgey: thanks
2012-07-25 14:21:25 UTC <byorgey> fryguybob: I saw that, excellent
2012-07-25 14:21:54 UTC <byorgey> I was trying to figure out how to import issues from google code into github
2012-07-25 14:22:18 UTC <byorgey> but it's going to be a bit annoying since there's no such thing as an organization-wide issue tracker
2012-07-25 14:22:25 UTC <fryguybob> Yeah, I was wondering if there was a wayto make that happen nicely.
2012-07-25 14:22:34 UTC <fryguybob> I see.
2012-07-25 14:22:43 UTC <byorgey> but no tools that I found can import just a subset of google code tickets (by tag) into a github tracker
2012-07-25 14:23:15 UTC <byorgey> so for now I am going to solve the problem by ignoring it.
2012-07-25 14:23:20 UTC <fryguybob> Humm, I bet it could be as simple as adding a search term to some url.
2012-07-25 14:23:30 UTC <byorgey> it probably is =)
2012-07-25 14:26:09 UTC <fryguybob> I didn't check that what I put up compiles at this point as core wouldn't build for me.
2012-07-25 14:27:10 UTC <fryguybob> "Not in scope: `unsplit'"  Is this from a newer version of monoid-extras?
2012-07-25 14:28:19 UTC <byorgey> fryguybob: humm, not sure, I'll look into it
2012-07-25 14:29:46 UTC <mietek> byorgey: https://dl.dropbox.com/u/95029/circle5.png yay
2012-07-25 14:30:35 UTC <byorgey> fryguybob: unsplit is exported in the latest commit to monoid-extras: https://github.com/diagrams/monoid-extras/commit/44c220482a07665e7bf2dd56f00dda1c1a5ee392
2012-07-25 14:30:43 UTC <byorgey> maybe you just hacen't pulled recently?
2012-07-25 14:30:45 UTC <byorgey> *haven't
2012-07-25 14:30:51 UTC <mietek> Needs to be more labyrinthine, though
2012-07-25 14:31:00 UTC <byorgey> mietek: oooh, very nice!
2012-07-25 14:31:35 UTC <mietek> The symmetry is parametric
2012-07-25 14:31:46 UTC <byorgey> neat
2012-07-25 14:31:52 UTC <mietek> I need to write a maze solver
2012-07-25 14:32:13 UTC <mietek> So that I can randomize the layout and still keep it solvable
2012-07-25 14:32:50 UTC <byorgey> you mean generate a random layout and throw it away if it isn't solvable, then repeat?
2012-07-25 14:33:06 UTC <byorgey> seems easier to generate only solvable layouts in the first place
2012-07-25 14:33:31 UTC <mietek> I was thinking to generate a labyrinth framework, and add blockages at random while checking it's still solvable
2012-07-25 14:33:46 UTC <mietek> The framework being just the circles
2012-07-25 14:33:50 UTC <mietek> In this case
2012-07-25 14:34:16 UTC <mietek> Is this what you have in mind?
2012-07-25 14:36:55 UTC <byorgey> see http://code.haskell.org/~byorgey/code/mazegen/  for one approach I've used in the past, which is based on http://www.ccs.neu.edu/home/shivers/mazes.html
2012-07-25 14:37:27 UTC <byorgey> i.e. start with all blockages and a big set of disjoint regions, then randomly delete blockages and keep track of the regions using a union-find data structure
2012-07-25 14:37:36 UTC <byorgey> until you have only one region
2012-07-25 14:38:16 UTC <byorgey> with small mazes it probably isn't a big deal, checking solvability at each step will not be that bad
2012-07-25 14:38:17 UTC <mietek> Cool, thanks
2012-07-25 14:38:33 UTC <byorgey> but if you want to scale up to large mazes you need something like this
2012-07-25 14:38:40 UTC <byorgey> see also the Wikipedia page on maze generation algorithms
2012-07-25 14:40:27 UTC <mietek> BTW, I really like the Gray code diagram
2012-07-25 14:40:34 UTC <mietek> It looks strikingly like an eyeball
2012-07-25 14:40:39 UTC <byorgey> hehe, thanks
2012-07-25 14:41:11 UTC <byorgey> The Eye of Diagron is watching you!!
2012-07-25 14:41:19 UTC <mietek> :)
2012-07-25 14:43:04 UTC <byorgey> ooh, I should make an animation with the gray code circle and a red line traveling around it, with a "readout" of what's under the red line off to the side
2012-07-25 14:48:31 UTC <fryguybob> byorgey: Oh! when I looked before I didn't see monoid-extras on github
2012-07-25 14:49:01 UTC <byorgey> oh, that's because I hadn't uploaded it yet, I only remembered this morning =)
2012-07-25 14:50:08 UTC <byorgey> I don't think there have been any major changes recently which would break diagrams-postscript
2012-07-25 14:51:57 UTC <fryguybob> ok, should be building in a minute.
2012-07-25 14:52:28 UTC <fryguybob> ACTION navigates the unfamiliar messages of cabal 1.14 for the first time.
2012-07-25 14:56:37 UTC <fryguybob> Woohoo it works (as usual).  http://www.cs.rochester.edu/u/ryates/temp/test.pdf
2012-07-25 14:57:48 UTC <fryguybob> ACTION goes to work...
2012-07-25 15:04:49 UTC <byorgey> yay!
2012-07-25 15:38:11 UTC <fryguybob> byorgey: It took a whole hour for me to get a response with my Hackage info.  I must have time things right.
2012-07-25 15:38:39 UTC <luite> \o/
2012-07-25 15:38:45 UTC <luite> took a few days for me
2012-07-25 15:39:44 UTC <fryguybob> Also, I may have been converted against my will to vi.
2012-07-25 15:53:07 UTC <luite> :(
2012-07-25 15:53:45 UTC <fryguybob> byorgey: I can't test it right now, but I think that modifying the query in this line should let us limit the scope of importing: https://github.com/arthur-debert/google-code-issues-migrator/blob/master/migrateissues.py#L100
2012-07-25 17:36:57 UTC <byorgey> fryguybob: cool, thanks, I added that link to the wiki: http://www.haskell.org/haskellwiki/Diagrams/Dev#Darcs.2Fpatch-tag_-.3E_git.2Fgithub_migration
2012-07-25 19:40:59 UTC <abernstein> hi
2012-07-25 19:41:21 UTC <abernstein> when i call boundingBox (unitSquare :: D R2)
2012-07-25 19:41:31 UTC <abernstein> the size of the bounding box is 1 times 1 as expected
2012-07-25 19:41:52 UTC <abernstein> but when i call boundingBox (translate (r2 (10,10)) unitSquare :: D R2)
2012-07-25 19:42:01 UTC <abernstein> the size is suddenly 10.5 times 10.5
2012-07-25 19:42:15 UTC <abernstein> why is that ?
2012-07-25 19:42:53 UTC <fryguybob> abernstein: It is including the origin.  Why, I'm not sure exactly.
2012-07-25 19:43:08 UTC <abernstein> ok
2012-07-25 19:43:28 UTC <abernstein> fryguybob: so, do i have to move the origin ?
2012-07-25 19:44:26 UTC <fryguybob> abernstein: What is the bigger picture of what you are trying to do?
2012-07-25 19:45:24 UTC <abernstein> fryguybob: i need the bounding box of a translated diagram
2012-07-25 19:45:45 UTC <fryguybob> Translate the bounding box instead?
2012-07-25 19:47:32 UTC <abernstein> mmh, "No instance for (Transformable (BoundingBox R2))
2012-07-25 19:49:18 UTC <fryguybob> Humm, that's too bad.  I'll add that to the list of things to fix later.
2012-07-25 19:49:43 UTC <fryguybob> What version of diagrams are you running?
2012-07-25 19:50:22 UTC <abernstein> version 0.5.0.1 of diagrams-lib
2012-07-25 19:53:11 UTC <abernstein> that would be really useful
2012-07-25 19:53:26 UTC <abernstein> i am programming a small breakout clone using diagrams
2012-07-25 19:55:14 UTC <fryguybob> abernstein: I understand.  byorgey might be able to give you a "why" or "that's a bug" off the top of his head.  When I have time later, I can look into it.
2012-07-25 19:55:59 UTC <fryguybob> At the least I think there should be a transformable instance for BoundingBox (or some other form that is transformable).
2012-07-25 20:05:28 UTC <abernstein> fryguybob: thanks
2012-07-25 20:08:40 UTC <fryguybob> abernstein: I just looked at  boundingBox  a little and I think I'm leaning "that's a bug" at the moment.
2012-07-25 20:09:21 UTC <abernstein> :)
2012-07-25 20:09:37 UTC <abernstein> fryguybob: ok
2012-07-25 20:32:14 UTC <mgsloan> oops
2012-07-25 20:32:23 UTC <mgsloan> what's wrong with it? I think I may have written it
2012-07-25 20:33:59 UTC <fryguybob> mgsloan: fromPoints doesn't seem appropriate there.  That will only work when the origin is inside the diagram.
2012-07-25 20:35:10 UTC <fryguybob> mgsloan: For each unit vector and +/- only one value should be used, not all values.
2012-07-25 20:36:42 UTC <mgsloan> ahh
2012-07-25 20:37:03 UTC <mgsloan> but envelope returns negative numbers, right?
2012-07-25 20:37:09 UTC <mgsloan> so it should work anyway
2012-07-25 20:37:24 UTC <mgsloan> but you're right, that this is probably less efficient than possible
2012-07-25 20:38:38 UTC <fryguybob> envelopeP gives a point, nothing negative going on there.
2012-07-25 20:44:59 UTC <mgsloan> right, but it'll still work if the envelope does not contain the origin
2012-07-25 20:45:13 UTC <mgsloan> I'm not gitting the new repos :)  https://github.com/defunkt/hub
2012-07-25 20:45:28 UTC <mgsloan> now that we are using github, I recommend this utility script ^
2012-07-25 20:45:55 UTC <mgsloan> I can do "git clone diagrams/cairo diagrams-cairo"
2012-07-25 20:46:08 UTC <mgsloan> and then go into that directory, and do "git fork"
2012-07-25 20:46:45 UTC <byorgey> sounds like a bug in boundingBox, though I haven't looked into the details
2012-07-25 20:46:59 UTC <byorgey> however, the fact that there is no Transformable instance for BoundingBox is NOT a bug
2012-07-25 20:47:14 UTC <byorgey> in fact, there used to be one and I removed it.  Applying affine transformations to bounding boxes does not make sense.
2012-07-25 20:47:17 UTC <fryguybob> byorgey: I can see that.
2012-07-25 20:47:36 UTC <byorgey> However, there IS a HasOrigin instance for BoundingBox (or at least there should be) so you can still translate them
2012-07-25 20:48:00 UTC <byorgey> but using 'moveTo' and friends instead of 'translate'
2012-07-25 20:49:10 UTC <mgsloan> right, if you want to apply affine transforms, you should use getAllCorners, transform those, and use fromPoints
2012-07-25 20:49:40 UTC <byorgey> sure, that will give a conservative approximation to a transformed bounding box
2012-07-25 20:49:48 UTC <byorgey> but it's not compositional
2012-07-25 20:50:09 UTC <byorgey> abernstein: can you file a bug report at http://code.google.com/p/diagrams/issues/list ?  That would be great.
2012-07-25 20:50:19 UTC <byorgey> I don't want to forget about it
2012-07-25 20:50:29 UTC <abernstein> i tried boundingBox (moveTo (p2 (10,10)) unitSquare :: D R2), but i still get a 10.5 times 10.5 box
2012-07-25 20:50:35 UTC <abernstein> byorgey: ok
2012-07-25 20:50:58 UTC <abernstein> byorgey: i'll do that
2012-07-25 20:51:02 UTC <byorgey> abernstein: thanks.
2012-07-25 20:51:13 UTC <byorgey> abernstein: and what happens if you do  (moveTo (p2 (10,10)) (boundingBox (unitSquare :: D R2))) ?
2012-07-25 20:52:58 UTC <abernstein> byorgey: that works :)
2012-07-25 20:53:20 UTC <byorgey> oh, I see what the problem is
2012-07-25 20:53:30 UTC <byorgey> I think
2012-07-25 20:54:34 UTC <fryguybob> byorgey: envelopP give a point on the hyperplane, not a point on the bounding box.
2012-07-25 20:54:40 UTC <byorgey> yes, exactly
2012-07-25 20:54:42 UTC <fryguybob> (as it should)
2012-07-25 20:54:52 UTC <byorgey> and in this case it happens to be giving points on each of the four axes.
2012-07-25 20:55:00 UTC <fryguybob> Right
2012-07-25 20:55:30 UTC <byorgey> hmm, so what's the right way to implement it
2012-07-25 20:56:24 UTC <fryguybob> if you take the magnitudes (or use some basis function for efficiency) you can take the combinations of mins an maxs to get the box
2012-07-25 21:01:04 UTC <fryguybob> If no one figures out something before tonight I'll come up with a fix when I'm not at work :D.
2012-07-25 21:01:12 UTC <byorgey> ok =)
2012-07-25 21:01:24 UTC <byorgey> yes, I guess you can use http://hackage.haskell.org/packages/archive/vector-space/0.8.2/doc/html/Data-Basis.html#v:decompose
2012-07-25 21:02:10 UTC <byorgey> just use envelopeV then call decompose and extract the proper coordinates
2012-07-25 21:04:12 UTC <byorgey> ugh, it looks like *I* wrote that code, last May!
2012-07-25 21:04:22 UTC <mgsloan> really? I don't think so
2012-07-25 21:04:25 UTC <byorgey> mgsloan is off the hook.  Also, we need more tests. =(
2012-07-25 21:04:34 UTC <byorgey> https://github.com/diagrams/lib/commit/7d9f32f4712294f54428e072d01cdf9c4cfc30da
2012-07-25 21:04:35 UTC <mgsloan> you might have edited that code last may
2012-07-25 21:05:12 UTC <fryguybob> /tests/types/ =P
2012-07-25 21:05:53 UTC <byorgey> well, it's not really important who wrote it.  I was just curious how long the bug has existed.
2012-07-25 21:06:28 UTC <mgsloan> oh yeah, I guess you're right! here's the utils I wrote: https://github.com/diagrams/lib/commit/f654b52684b9dc627a53c89c9636ddb7f9e1bc9d
2012-07-25 21:07:03 UTC <byorgey> yup, boundingBox was already there, and you wrote those in December
2012-07-25 21:10:37 UTC <mgsloan> is there a reason that "diameter" is implemented in terms of envelopeV? seems inefficient - introduces scaling vectors and getting magnitudes
2012-07-25 21:11:18 UTC <mgsloan> I can fix it - I feel like giving the new githubs a whirl :D
2012-07-25 21:12:33 UTC <byorgey> mgsloan: go for it =)
2012-07-25 21:12:42 UTC <byorgey> mgsloan: also, thanks for the link to 'hub'! that looks super useful.
2012-07-25 21:13:25 UTC <byorgey> mgsloan: what's the better way to implement diameter?
2012-07-25 21:13:35 UTC <fryguybob> Speaking of git, is there an equivalent of  hg serve  in the git world?
2012-07-25 21:13:59 UTC <mgsloan> yes, it's very very nice.  I can fork someone's repo, create a patch, and submit a github pull request all through the command line
2012-07-25 21:14:50 UTC <byorgey> mgsloan: I'd like to create a page on the diagrams wiki explaining "best practices" for using git/github and contributing to diagrams.  Is that something you could help with?
2012-07-25 21:15:00 UTC <byorgey> I don't even really know what best practices are.
2012-07-25 21:15:06 UTC <mgsloan> byorgey: well, you'd query along the vector, and query along the negation.  Then, you'd take the result of the query along the vector and add it to the result of the query in the opposite direction
2012-07-25 21:15:41 UTC <mgsloan> byorgey: Sure!  I'm not a git expert, but I suppose I use it a decent amount
2012-07-25 21:16:43 UTC <byorgey> mgsloan: that doesn't sound right.  Note that the result of an envelope query is a scalar *relative to the length of the input vector*, not an absolute distance
2012-07-25 21:17:45 UTC <byorgey> fryguybob: http://stackoverflow.com/questions/377213/git-serve-i-would-like-it-that-simple ?
2012-07-25 21:18:34 UTC <fryguybob> ACTION wonders if vector-space handles non-orthogonal basis.
2012-07-25 21:19:01 UTC <mgsloan> fryguybob: If you're using github / hub, then you can do "git create", and it'll be created on your account
2012-07-25 21:20:54 UTC <mgsloan> byorgey: ahh, didn't realize that.  I suppose it's a matter of efficiency.  We could convert to a unit vector.  That'd be a magnitude + two divisions + one addition.  Currently we have a magnitude, four multiplications, and two additions (for 2d)
2012-07-25 21:21:30 UTC <byorgey> right, I don't think you can get away without calling magnitude at some point
2012-07-25 21:21:30 UTC <mgsloan> divisions are traditionally expensive, but I've heard that they are pretty darn fast these days
2012-07-25 21:21:34 UTC <mgsloan> yup
2012-07-25 21:21:45 UTC <byorgey> sure, I don't know.
2012-07-25 21:21:55 UTC <byorgey> If you care, try benchmarking it, and we can see which is faster
2012-07-25 21:53:05 UTC <mgsloan> I'm amazed!  The current one is faster
2012-07-25 21:53:39 UTC <mgsloan> current mean: 653.1291 us, lb 650.7195 us, ub 655.8391 us, ci 0.950
2012-07-25 21:53:39 UTC <mgsloan> my mean: 760.2543 us, lb 757.1752 us, ub 763.7376 us, ci 0.950
2012-07-25 21:53:53 UTC <mgsloan> (this is for computing 360 diameters of a unitSquare)
2012-07-25 21:56:55 UTC <mgsloan> soo, what bounding box do we report for the empty diagram?
2012-07-25 21:57:06 UTC <mgsloan> perhaps it'd be good to proliferate "Option" throughout?
2012-07-25 22:06:10 UTC <byorgey> huh, what do you know
2012-07-25 22:08:24 UTC <byorgey> mgsloan: oh, right, bounding boxes don't form a monoid
2012-07-25 22:08:58 UTC <byorgey> hmmm
2012-07-25 22:10:10 UTC <byorgey> mgsloan: maybe the thing to do is to make them one by defining  BoundingBox = BoundingBox (Option (Point v, Point v))
2012-07-25 22:10:30 UTC <byorgey> i.e. add the Option directly to the definition of BoundingBox rather than sprinking it everywhere through the API
2012-07-25 22:12:26 UTC <mgsloan> yup, that was our solution in lib2geom
2012-07-25 22:12:34 UTC <mgsloan> we even called it optional :)
2012-07-25 22:16:52 UTC <mgsloan> so, the following functions in BoundingBox already use "Maybe BoundingBox":  fromPoints, unions, intersections, intersection, combine.  Everything else except boxTransform has a meaning that makes sense for the Nothing case
2012-07-25 22:23:05 UTC <mgsloan> so yeah, currently "boundingBox (mempty :: D R2)" is the box around the origin
2012-07-25 23:31:52 UTC <mgsloan> byorgey: if BoundingBox is now a monoid / semigroup, should union still be exported?
2012-07-25 23:39:09 UTC <byorgey> mgsloan: sure, why not
2012-07-25 23:39:52 UTC <byorgey> with a note in the documentation stating that this is the <> operation for the semigroup/monoid instances
2012-07-25 23:40:03 UTC <mgsloan> Yup!
2012-07-25 23:40:05 UTC <byorgey> because if people see 'intersection' they will wonder where 'union' is
2012-07-25 23:45:56 UTC <mgsloan> currently "fromCorners" is just like fromPoints except for two points - e.g. it doesn't care about order
2012-07-25 23:46:15 UTC <mgsloan> how about changing it so that if the points are out of order, the result is empty?
2012-07-25 23:53:00 UTC <byorgey> wait, you're saying currently fromCorners doesn't care about order and fromPoints does?
2012-07-25 23:53:14 UTC <mgsloan> no, I'm saying currently both don't care
2012-07-25 23:54:05 UTC <byorgey> oh, and fromCorners takes exactly two points, and fromPoints takes a set?
2012-07-25 23:54:12 UTC <mgsloan> yup
2012-07-25 23:55:30 UTC <byorgey> I suppose I could see that being useful
2012-07-25 23:55:51 UTC <byorgey> "that" being making fromCorners care about order
2012-07-25 23:56:42 UTC <byorgey> just to make sure I understand what you are proposing: the new fromCorners would only produce a non-empty bounding box if the coordinates of the first point are elementwise <= the coordinates of the second point?
2012-07-25 23:57:30 UTC <mgsloan> yup
2012-07-25 23:58:21 UTC <byorgey> ok, sure, that sounds good to me (as long as it is clearly explained of course)
2012-07-25 23:59:08 UTC <mgsloan> I hope noone has used boundingbox extensively - I guess we'll have to make it pretty clear in the announcement that things are changing there
2012-07-25 23:59:09 UTC <fryguybob> I'm not sure empty makes the most sense there.  Negative bounding boxes do have an interpretation.
2012-07-25 23:59:40 UTC <byorgey> fryguybob: oh? what's that?
2012-07-26 00:00:19 UTC <fryguybob> "Inside" a negative bounding box is the outside of a normal one.
2012-07-26 00:00:56 UTC <mgsloan> what about "inside" a doubley negative bounding box? :)  (if we're considering winding)
2012-07-26 00:02:12 UTC <byorgey> fryguybob: but wouldn't you need special cases then for containment tests?  using the usual >= the lower bound && <= the upper bound, if any coordinates are switched you just get that no points test as being contained in it
2012-07-26 00:02:18 UTC <byorgey> i.e. exactly the same as the empty box
2012-07-26 00:03:23 UTC <mgsloan> yeah, you'd need special cases for intersection / union as well
2012-07-26 00:03:32 UTC <byorgey> having "inverted" bounding boxes sounds neat but it doesn't seem to me like the math works out to represent them by just switching the order of the corners
2012-07-26 00:04:56 UTC <fryguybob> byorgey: No it is not simple anymore, union of positive and negative gives holes.
2012-07-26 00:05:21 UTC <byorgey> oh, right, yikes
2012-07-26 00:05:36 UTC <byorgey> let's not go there just yet =)
2012-07-26 00:05:55 UTC <mgsloan> yeaaa, that's a compound structure :D
2012-07-26 00:06:11 UTC <fryguybob> I think mapping to empty is like mapping subtraction that would be negative to zero with nats.
2012-07-26 00:06:15 UTC <mgsloan> when doing boolops in lib2geom, I had to sanitize into a structure that properly separated holes and fills
2012-07-26 00:07:14 UTC <byorgey> mgsloan: as for anyone using boundingbox extensively -- I know ClaudiusMaximus used it for some stuff (he's the one who wrote the initial version), but given that this bug with 'boundingBox' went undetected for over a year I think it's safe to say that it's not used much =)
2012-07-26 00:07:15 UTC <fryguybob> Mapping to the same but positive is abs.
2012-07-26 00:07:39 UTC <mgsloan> byorgey: yup, seems like a good time to change the meaning of some things
2012-07-26 00:08:09 UTC <byorgey> Also, I want to not worry about backwards compatibility for as long as possible =)
2012-07-26 00:08:43 UTC <byorgey> fryguybob: yes, makes sense.
2012-07-26 00:08:55 UTC <byorgey> the point here is that if you want abs you can use fromPoints and pass it two points.
2012-07-26 00:09:13 UTC <alpounet> ACTION will have to draw poker cards... was thinking about sketching up some simplistic and shitty ones with diagrams =P
2012-07-26 00:09:30 UTC <byorgey> previously, it would have been more annoying to use fromPoints because it gave you a Maybe, whereas fromCorners didn't
2012-07-26 00:09:53 UTC <byorgey> but now the Maybe-ness will be embodied in the BoundingBox type itself, so there's no difference
2012-07-26 00:10:17 UTC <byorgey> so we ought to get rid of fromCorners, or make it do something more interesting
2012-07-26 00:10:55 UTC <fryguybob> bbl
2012-07-26 00:12:28 UTC <mgsloan> ACTION bb tomorrow
2012-07-26 00:12:42 UTC <mgsloan> nearly done with the Option (Point v, Point v) conversion :D
2012-07-26 00:13:02 UTC <byorgey> great =)
2012-07-26 00:46:36 UTC <fryguybob> I'm back.
2012-07-26 00:47:51 UTC <byorgey> \o/
2012-07-26 00:47:57 UTC <luite> \o/
2012-07-26 00:48:10 UTC <byorgey> ACTION is perpetrating yet more overly polymorphic typeclass nonsense
2012-07-26 00:48:33 UTC <byorgey> which will allow you to write  things like  5 & 6  to create either a point or a vector
2012-07-26 00:48:44 UTC <byorgey> and   5 & 6 & 7    to create a 3D point or vector
2012-07-26 00:48:45 UTC <byorgey> etc.
2012-07-26 00:48:57 UTC <luite> and then you must remove all typeclasses from diagrams to get fay support!
2012-07-26 00:49:06 UTC <byorgey> haha
2012-07-26 00:49:32 UTC <byorgey> if you remove all the typeclasses from diagrams I think all that would be left is a .cabal file
2012-07-26 00:52:03 UTC <luite> hm this mountain lion update does feel snappy, but perhaps it's just that i finally rebooted my laptop :)
2012-07-26 01:20:08 UTC <byorgey> *Diagrams.Prelude> 2 & 3 :: R2
2012-07-26 01:20:08 UTC <byorgey> R2 {unR2 = (2.0,3.0)}
2012-07-26 01:20:08 UTC <byorgey> *Diagrams.Prelude> 2 & 3 :: P2
2012-07-26 01:20:08 UTC <byorgey> P (R2 {unR2 = (2.0,3.0)})
2012-07-26 01:20:11 UTC <byorgey> =D
2012-07-26 01:20:28 UTC <byorgey> I *think* this is a good idea...
2012-07-26 01:20:41 UTC <byorgey> now you don't have to do all that  r2 (3,5)  nonsense
2012-07-26 01:20:46 UTC <byorgey> you can just write  3 & 5
2012-07-26 01:30:40 UTC <tgeeky__> bah. I still vote to banish the use of && and ||, and reclaim them for other purposes
2012-07-26 01:30:54 UTC <tgeeky__> and use 3 || 5 || 8
2012-07-26 01:30:55 UTC <tgeeky__> etc
2012-07-26 01:31:48 UTC <tgeeky__> byorgey: but that's not nonsense!
2012-07-26 01:33:16 UTC <byorgey> =)
2012-07-26 01:34:21 UTC <tgeeky__> byorgey: hm. this cyclotomic package is nice and interesting. My version of factorize (from Bird) is not faster because they don't return all factors when asked (just prime factors)
2012-07-26 01:34:37 UTC <byorgey> ah
2012-07-26 01:34:38 UTC <tgeeky__> that is, it uses arithmoi's "factorize" which quickly returns all prime factors of an integer.
2012-07-26 01:34:54 UTC <tgeeky__> However, bird's is a much more general function ... it returns all factors, and over any arithmetic expression, not just "x*x"
2012-07-26 01:34:57 UTC <byorgey> tgeeky__: did you see when I mentioned before that the author of cyclotomic will be at hac phi?
2012-07-26 01:34:58 UTC <tgeeky__> or "x"
2012-07-26 01:35:08 UTC <tgeeky__> byorgey: yes. I hope to have some patches back to him before then.
2012-07-26 01:35:14 UTC <byorgey> ok, cool
2012-07-26 01:37:10 UTC <tgeeky__> I'm a little confused by something, though -- he provides a Num, Fractional, and Show instances (as well as a derived Eq instance)
2012-07-26 01:37:51 UTC <tgeeky__> I tried to define the additional (Enum , Real) => Integral cases
2012-07-26 01:39:30 UTC <tgeeky__> suffice it to say I don't think it makes sense to do so. I got the farthest with enum
2012-07-26 01:39:49 UTC <tgeeky__> but no matter what numbers you put in the enum, you always get back [0,0,0,0] or [0,1,2,3..]
2012-07-26 02:15:13 UTC <byorgey> I'd love feedback/code review on my new feature before it's merged: https://github.com/diagrams/lib/pull/1
2012-07-26 02:15:22 UTC <byorgey> if anyone feels like taking a look
2012-07-26 02:15:30 UTC <byorgey> anyway, I'm off to bed
2012-07-26 02:16:24 UTC <edwardk> cute. the addition is the :& ?
2012-07-26 02:28:37 UTC <byorgey> edwardk: and &
2012-07-26 02:28:42 UTC <edwardk> ah
2012-07-26 02:28:45 UTC <edwardk> nice
2012-07-26 02:28:47 UTC <edwardk> go sleep
2012-07-26 02:28:52 UTC <byorgey> ok =)
2012-07-26 13:27:25 UTC <sleepyMonad> is there a nice way to set the background of a PNG image (instead of leaving it transparant)? I could of course place the diagram explicitly `atop` a background layer, but that seems a bit lame...
2012-07-26 13:30:04 UTC <byorgey> sleepyMonad: the HEAD version of diagrams-lib exports some functions to help you do that, but they are not in the 0.5 release
2012-07-26 13:30:14 UTC <byorgey> sleepyMonad: but you can just copy them into your .hs file for now: http://hpaste.org/66446
2012-07-26 13:30:53 UTC <byorgey> ultimately it does work by putting the diagram `atop` a background layer, but it calculates the proper dimensions for you
2012-07-26 13:31:39 UTC <byorgey> oh, except we just found a bug in boundingBox... but it will work fine as long as your diagram contains the origin
2012-07-26 13:31:50 UTC <byorgey> otherwise the background might be too big
2012-07-26 13:35:25 UTC <sleepyMonad> OK, thanks, I'll give it a try.
2012-07-26 14:46:45 UTC <tgeeky> byorgey: did you see my note from last night? re: showing off cyclotomic changes
2012-07-26 14:51:30 UTC <byorgey> tgeeky: uh, which note? about Enum, Real, Integral?
2012-07-26 14:56:31 UTC <tgeeky> hm. nope, it was in main.
2012-07-26 14:56:33 UTC <tgeeky> i'll repost
2012-07-26 14:56:55 UTC <tgeeky> byorgey: http://hpaste.org/72133
2012-07-26 15:15:23 UTC <tgeeky> byorgey: so i played with the cyclotomic code a lot last night; I primarily improved the showing of functions (so that you can get all the information available from a expression) and threading through the cyclotomic numbers (using as patterns in the Show instance
2012-07-26 15:15:54 UTC <tgeeky> that's a joy in haskell - threading down an additional binding that you get from an as-pattern
2012-07-26 18:16:27 UTC <fryguybob> byorgey: I'm wondering what naming conventions we should use for organization repos?
2012-07-26 18:16:58 UTC <fryguybob> does svg, postscript, etc make sense?
2012-07-26 18:18:02 UTC <fryguybob> And would the associated hackage packages always be prefixed with diagrams- ?
2012-07-26 18:18:18 UTC <fryguybob> Humm we need to start a monoid organization :D.
2012-07-26 18:22:42 UTC <byorgey> fryguybob: yeah, I was just wondering whether I did the names wrong
2012-07-26 18:22:59 UTC <byorgey> diagrams/core looks so nice, but then when people clone it it looks like  byorgey/core, etc., which makes no sense
2012-07-26 18:23:24 UTC <byorgey> diagrams/diagrams-core is probably better
2012-07-26 18:23:41 UTC <byorgey> and that way the repo name matches the package name too
2012-07-26 18:24:06 UTC <byorgey> well, I guess I'd better fix them now, before too many people clone them =)
2012-07-26 18:25:28 UTC <fryguybob> byorgey: ok.  The names themeselves don't have any real "meaning" right?  As in, if I mv my clones no harm is done?
2012-07-26 18:25:50 UTC <fryguybob> Well I guess changing what remote repo it points to changes.
2012-07-26 18:25:54 UTC <byorgey> fryguybob: right, but you have to update them to point to the ... right
2012-07-26 18:26:47 UTC <luite> right
2012-07-26 18:26:56 UTC <byorgey> ok, renaming now, hold tight...
2012-07-26 18:27:06 UTC <luite> are you going to have every package in a separate repo?
2012-07-26 18:27:10 UTC <luite> <- holding tight
2012-07-26 18:27:59 UTC <byorgey> yes, every package in a separate repo
2012-07-26 18:28:00 UTC <fryguybob> Isn't there some github sugar for "sub repos" or something?
2012-07-26 18:28:16 UTC <luite> git has submodules
2012-07-26 18:28:22 UTC <fryguybob> ACTION does not want to complicate things.
2012-07-26 18:28:26 UTC <byorgey> oh?
2012-07-26 18:28:45 UTC <byorgey> one thing I want though is package-grained access control
2012-07-26 18:28:59 UTC <byorgey> e.g. I want to be able to give some contributor push access to packages X and Y but not Z
2012-07-26 18:29:08 UTC <byorgey> can the submodules thing handle that?
2012-07-26 18:29:20 UTC <luite> ah i guess you can't do megarepositories then
2012-07-26 18:29:32 UTC <luite> yeah a submodule refers to a revision in another repository
2012-07-26 18:29:49 UTC <fryguybob> lets just add a sync-all perl script...
2012-07-26 18:30:16 UTC <luite> so i think you can make a large one with all packages as submodules, and if you do git submodule init, git submodule update, you have updated repositories of those
2012-07-26 18:30:42 UTC <luite> but when someone commits something in one of the subrepos directly, i think you have to update the reference manually or something
2012-07-26 18:31:02 UTC <luite> not sure what the git command for that is
2012-07-26 18:31:21 UTC <fryguybob> diagrams/monolith
2012-07-26 18:32:52 UTC <byorgey> ok, renaming complete
2012-07-26 18:40:14 UTC <fryguybob> Ok, to point to the new location I did:  $ git remote set-url origin git@github.com:diagrams/diagrams-core.git
2012-07-26 18:51:26 UTC <byorgey> yes, that ought to do it
2012-07-26 18:51:46 UTC <byorgey> woohoo, my new kinesis advantage arrived!
2012-07-26 19:01:20 UTC <luite> hmm, are they really more comfortable to type on?
2012-07-26 19:01:37 UTC <byorgey> quite
2012-07-26 19:01:43 UTC <byorgey> for me at least
2012-07-26 19:02:40 UTC <luite> hmm, i had a regular split keyboard (microsoft) but found the difference not that great
2012-07-26 19:03:20 UTC <fryguybob> ACTION only stares at the screen.
2012-07-26 19:04:03 UTC <luite> do they have a version with short travel keys?
2012-07-26 19:04:09 UTC <byorgey> ff
2012-07-26 19:04:31 UTC <byorgey> whoops, meant to hit backspace instead of enter =)
2012-07-26 19:04:39 UTC <byorgey> still getting used to it
2012-07-26 19:04:41 UTC <luite> hehe
2012-07-26 19:04:57 UTC <byorgey> re: short travel keys, I don't know.
2012-07-26 19:07:00 UTC <fryguybob> byorgey: I was going to try out that python comment migration tool yesterday, but I don't think I have the google api key.
2012-07-26 19:11:49 UTC <byorgey> fryguybob: the google api key, or github api key?
2012-07-26 19:13:53 UTC <fryguybob> Oh, I guess it is the github one, I think I can get that.  I probabaly don't even need it for a dry run.
2012-07-26 19:16:08 UTC <fryguybob> Humm it may not work anyway as the API changed for github.
2012-07-26 19:17:06 UTC <byorgey> ooh, boo
2012-07-26 20:43:22 UTC <byorgey> hehe
2012-07-26 20:43:39 UTC <byorgey> ok, yeah, makes sense, I'll just do IRC
2012-07-26 20:44:24 UTC <tgeeky> byorgey: do you have the wolfram CDF viewer installed, by chance?
2012-07-26 20:44:41 UTC <byorgey> tgeeky: I'm not sure
2012-07-26 20:44:46 UTC <byorgey> I don't think so
2012-07-26 20:46:18 UTC <tgeeky> I think I have discovered quite possibly the coolest recursive function ever
2012-07-26 20:46:29 UTC <tgeeky> ACTION wonders how to make a quick video screencap
2012-07-26 20:46:43 UTC <mgsloan> xvidcap?
2012-07-26 20:46:57 UTC <tgeeky> ACTION is a windows user
2012-07-26 20:48:26 UTC <byorgey> a video camera?
2012-07-26 20:48:56 UTC <fryguybob> hit print scrn and paste into paint reallly fast.
2012-07-26 20:49:01 UTC <tgeeky> hehe
2012-07-26 20:49:11 UTC <tgeeky> what doth that mean, minus n
2012-07-26 20:50:25 UTC <byorgey> I'm not sure
2012-07-26 20:50:52 UTC <byorgey> I'm trying to figure out how to set up auto IRC notifications from github
2012-07-26 20:56:07 UTC <mgsloan> With a quick google search I get a lot of Travis CI stuff - might be something to think about anyway!  Especially when there is more tests
2012-07-26 20:56:25 UTC <mgsloan> s/is/are/
2012-07-26 20:57:55 UTC <byorgey> hey, it worked!
2012-07-26 20:58:33 UTC <byorgey> yeah, I was looking into travis-ci a bit earlier today, looks cool
2012-07-26 20:59:27 UTC <byorgey> one complication is that to build, say, diagrams-cairo you first have to check out and build diagrams-core and diagrams-lib
2012-07-26 21:00:22 UTC <byorgey> since it certainly won't be the case that HEAD diagrams-cairo always builds against the versions of core and lib on Hackage
2012-07-26 21:00:45 UTC <byorgey> (btw, did others also see the commit notification from github?)
2012-07-26 21:00:52 UTC <fryguybob> yes
2012-07-26 21:01:23 UTC <tgeeky> ok
2012-07-26 21:01:25 UTC <tgeeky> i have the video
2012-07-26 21:01:25 UTC <byorgey> ok. it was surprisingly easy to set up =)
2012-07-26 21:01:28 UTC <tgeeky> anywhere I should uplod it?
2012-07-26 21:02:05 UTC <byorgey> youtube? vimeo? hpaste?
2012-07-26 21:02:11 UTC <tgeeky> hehehe
2012-07-26 21:02:12 UTC <tgeeky> hpaste
2012-07-26 21:07:26 UTC <mgsloan> so, here's an interesting problem.  Now that BoundingBox has a mempty, we can have unions return mempty when provided []
2012-07-26 21:07:37 UTC <mgsloan> e.g. this is bottom (the identity for join)
2012-07-26 21:07:49 UTC <byorgey> right
2012-07-26 21:07:53 UTC <mgsloan> this means that intersections should yield top
2012-07-26 21:08:02 UTC <byorgey> hehe,
2012-07-26 21:08:16 UTC <byorgey> I see where you're going
2012-07-26 21:08:21 UTC <mgsloan> do we want to add the constraint that Scalar is a RealFloat (or whatever has infinities)?
2012-07-26 21:09:17 UTC <mgsloan> similarly to my feedback on the monoids paper, most monoids are lattices - but we've chosen a useful default (usually considered to be join)
2012-07-26 21:09:57 UTC <mgsloan> maybe one way to do lattices would be to have a newtype Meet a = Meet a ?
2012-07-26 21:10:14 UTC <mgsloan> and then define either semigroup or monoid (for bounded)
2012-07-26 21:11:17 UTC <byorgey> RealFloat sounds icky
2012-07-26 21:11:22 UTC <mgsloan> agreed
2012-07-26 21:11:54 UTC <mgsloan> I guess I can go back to having Maybe (BoundingBox v) for intersections
2012-07-26 21:12:11 UTC <byorgey> sure, that's one option
2012-07-26 21:12:19 UTC <mgsloan> but only use the Maybe for empty list (and use the Maybe inside BoundingBox for actual lack of intersection)
2012-07-26 21:12:31 UTC <byorgey> infinite bounding boxes seem less useful to me than empty ones.
2012-07-26 21:12:46 UTC <byorgey> mgsloan: right, exactly
2012-07-26 21:13:06 UTC <byorgey> it's not an Option inside BoundingBox?
2012-07-26 21:13:21 UTC <mgsloan> nope, I had that at first, should it be?
2012-07-26 21:13:30 UTC <mgsloan> having it be option did not give me a Monoid for free
2012-07-26 21:13:35 UTC <tgeeky> byorgey: http://www.youtube.com/watch?v=QLnqwdeoK10&feature=youtu.be
2012-07-26 21:13:39 UTC <tgeeky> and mgsloan
2012-07-26 21:13:40 UTC <byorgey> really, why not?
2012-07-26 21:14:06 UTC <tgeeky> byorgey: you can actually see something that looks like lorentz invariance
2012-07-26 21:14:26 UTC <mgsloan> byorgey: well, currently it'd be BoundingBox (Option (Point v, Point v))
2012-07-26 21:14:41 UTC <mgsloan> Points don't have Monoids
2012-07-26 21:14:51 UTC <mgsloan> but now that I think of it, something like Min / Max could work here
2012-07-26 21:16:08 UTC <byorgey> well, I don't think points have an Ord instance
2012-07-26 21:16:25 UTC <byorgey> tgeeky: cool!
2012-07-26 21:16:38 UTC <tgeeky> byorgey: byorgey does the structure ring any bells?
2012-07-26 21:16:45 UTC <byorgey> no
2012-07-26 21:16:56 UTC <mgsloan> they could have an Ord instance though - pointwise comparison is not so unreasonable
2012-07-26 21:17:16 UTC <tgeeky> byorgey: those are the roots of the circle fractal!
2012-07-26 21:17:21 UTC <byorgey> it would be sort of an abuse of Ord though, since it's not a total order
2012-07-26 21:17:36 UTC <mgsloan> right
2012-07-26 21:17:54 UTC <byorgey> I'd rather not do that
2012-07-26 21:18:48 UTC <tgeeky> hm. i have a generating function. I wonder if I can convert that to haskell
2012-07-26 21:18:50 UTC <byorgey> the other option would be to define  NonEmptyBoundingBox = (Point, Point), and give it a semigroup instance
2012-07-26 21:19:12 UTC <mgsloan> Ooh, that's a good one
2012-07-26 21:19:12 UTC <byorgey> then Option on top of that will get you a free Monoid instance
2012-07-26 21:19:23 UTC <byorgey> even if we can't get semigroup for free
2012-07-26 21:23:45 UTC <mgsloan> also, I'm going to remove "deriving Functor" because that could encourage violation of the invariants
2012-07-26 21:24:18 UTC <mgsloan> also, make the ADTs abstract and have custom read / show in terms of functions
2012-07-26 21:28:13 UTC <byorgey> yes, getting rid of the Functor instance makes sense
2012-07-26 21:29:31 UTC <byorgey> BoundingBox was already abstract, agree with keeping it that way
2012-07-26 21:31:54 UTC <mgsloan> yup, I was just about to mention that
2012-07-26 21:32:18 UTC <mgsloan> I guess I'll avoid exporting NonEmptyBoundingBox
2012-07-26 21:32:33 UTC <mgsloan> someone might want it, but may as well just have them store (Point v, Point v)
2012-07-26 21:38:49 UTC <tgeeky> byorgey: so, it was totally dumb luck, but I stumbled upon an equation that (is surely) related to, if not the generator of, the circle fractal
2012-07-26 21:39:05 UTC <tgeeky> byorgey: in the kocik paper, he mentions that the regular apollonian gasket
2012-07-26 21:39:23 UTC <tgeeky> has no integral curvatures, and that its bends are (to scale):
2012-07-26 21:39:46 UTC <tgeeky> (1 - sqrt(3))  ,  2  ,  2  ,  2  ,  (10 + 2*sqrt(3))
2012-07-26 21:40:11 UTC <tgeeky> that's fine and dandy, but:
2012-07-26 21:40:15 UTC <tgeeky> 2 / (1 - sqrt(3))  ,  2  ,  2  ,  2  ,  (10 + 2*sqrt(3)) / 2
2012-07-26 21:40:26 UTC <tgeeky> is a recursive closed form equation
2012-07-26 21:42:17 UTC <mgsloan> byorgey: is it ok to use the "s ~ Scalar v" trick for shorter constraint types?
2012-07-26 21:43:07 UTC <tgeeky> byorgey: http://imgur.com/a/zjtA1 <-- note the first two images
2012-07-26 21:50:42 UTC <mgsloan> byorgey: do you want to avoid a dependency on Newtype in monoid-extras?
2012-07-26 21:58:49 UTC <byorgey> mgsloan: sure, s ~ Scalar v  is fine
2012-07-26 21:59:13 UTC <byorgey> mgsloan: and no, a newtype dependency in monoid-extras is fine
2012-07-26 21:59:36 UTC <byorgey> ACTION -> home
2012-07-26 21:59:42 UTC <mgsloan> figured so, I just thought I vaguely remember hearing that it led to some funny stuff
2012-07-26 22:00:02 UTC <mgsloan> cool! I don't really need newtype, but it might be somewhat prettier to use "pack . pack" and such
2012-07-26 22:00:31 UTC <byorgey> well, ~ requires TypeFamilies
2012-07-26 22:01:04 UTC <byorgey> there were some bugs related to it in early 7.0.x versions of ghc but I think they're all fixed now.
2012-07-26 22:10:51 UTC <mgsloan> yeah, I know :) the funny stuff was just that you could do things that would otherwise require FlexibleContexts
2012-07-26 22:10:59 UTC <mgsloan> maybe TypeFamilies -> FlexibleContexts
2012-07-26 22:25:19 UTC <edwardk> byorgey: around?
2012-07-26 23:12:04 UTC <mgsloan> byorgey: https://github.com/diagrams/diagrams-lib/pull/2
2012-07-27 01:57:07 UTC <fryguybob> ACTION is in the process of making a lion: http://www.cs.rochester.edu/u/ryates/temp/lion.pdf
2012-07-27 02:59:16 UTC <fryguybob> update: http://www.cs.rochester.edu/u/ryates/temp/lion2.pdf
2012-07-27 11:29:30 UTC <byorgey> fryguybob: heh, nice lion =)
2012-07-27 11:31:39 UTC <luite> hehe cool
2012-07-27 11:32:07 UTC <luite> does anyone here know the program that replaces type3 bitmap fonts in latex-generated ps files?
2012-07-27 11:32:10 UTC <luite> with outline fonts
2012-07-27 11:42:28 UTC <byorgey> luite: is it this? http://www.ctan.org/pkg/pkfix
2012-07-27 11:44:53 UTC <luite> ah that looks familiar, i thought the one i used before relied on metrics instead of comments to find the fonts though
2012-07-27 11:45:52 UTC <byorgey> ok, I don't know, I just tried some googling
2012-07-27 11:56:43 UTC <luite> hm doesn't work on this file
2012-07-27 11:58:58 UTC <luite> ah, it's pkfix-helper! that inserts the PS comments necessary for pkfix to substitute the fonts
2012-07-27 11:59:01 UTC <luite> tnx
2012-07-27 14:49:54 UTC <fryguybob> byorgey: I don't think there is a drop in replacement for the github api part of that python script, so I think I will just make the google code reading side of it dump everything and then we can import using some github api tool of our choice.
2012-07-27 15:28:24 UTC <fryguybob> byorgey: I haven't checked that it doesn't have anything wierd with it, but the raw data is here: http://www.cs.rochester.edu/u/ryates/temp/issue.json
2012-07-27 15:29:10 UTC <fryguybob> Humm, that might not work out so well as it is all flat.
2012-07-27 15:29:47 UTC <fryguybob> I think I can add some nesting.
2012-07-27 15:36:03 UTC <fryguybob> Oh, it is a list of objects with only one item each so nothing is getting shadowed.  I don't have any more time to work on it so that will have to do for now.
2012-07-27 15:38:19 UTC <fryguybob> I'm going to be gone this weekend to a bike ride/fund raiser.  Don't have too much fun with diagrams without me :D.
2012-07-27 16:05:25 UTC <byorgey> fryguybob: thanks!  and have fun this weekend.  We'll be visiting my grandmother so I won't be doing much with diagrams. =)
2012-07-27 16:06:02 UTC <luite> can't you teach her diagrams?
2012-07-27 16:06:33 UTC <byorgey> hehe, well, my family did recently get her an ipad...
2012-07-27 16:07:21 UTC <luite> my own grandma is more interested in knot theory ;p
2012-07-27 16:07:27 UTC <luite> well, practice actualy
2012-07-27 16:07:44 UTC <byorgey> hehe
2012-07-27 16:07:54 UTC <byorgey> crocheting?
2012-07-27 16:08:02 UTC <byorgey> knitting?
2012-07-27 16:08:09 UTC <luite> both
2012-07-27 16:08:22 UTC <byorgey> =)
2012-07-27 16:08:26 UTC <luite> knitting is mostly an elaborate way to make unknots though
2012-07-27 16:08:36 UTC <fryguybob> My family just got my grandma an ipad too.
2012-07-27 16:08:57 UTC <byorgey> ok, need to go finish getting ready for my talk
2012-07-27 16:09:07 UTC <luite> dunno about chrocheting, it's probably similar?
2012-07-27 16:09:08 UTC <fryguybob> ACTION wonders if his grandma has a secret life as byorgey's grandma.
2012-07-27 16:09:12 UTC <luite> hehe
2012-07-27 16:09:48 UTC <luite> i wanted my family to give here an ipad last year but they thought it'd still be too intimidating to use
2012-07-27 16:10:02 UTC <luite> guess i should try again this year
2012-07-27 16:10:52 UTC <luite> perhaps they're just scared of finding her internet history after a year ;)
2012-07-27 16:11:04 UTC <fryguybob> I was indifferent to the idea, but she was super excited to get it.
2012-07-27 16:12:25 UTC <luite> why indifferent? afraid that your grandma would poke you all the time on facebook?
2012-07-27 16:14:34 UTC <luite> (i don't have facebook, so i have no idea if this is a thing, i only got it from south park)
2012-07-27 16:15:12 UTC <fryguybob> ha, no.  She has never showed interest in any technological things and I won't want to force her into it.
2012-07-27 16:15:54 UTC <fryguybob> She has had a tremor for a long time and I worried that a touch interface would just frustrate her.
2012-07-27 16:16:26 UTC <luite> buttons are fairly big though
2012-07-27 16:17:05 UTC <fryguybob> Yeah.  The problem is more that it doesn't handle much motion during a touch to register a "click"
2012-07-27 16:17:29 UTC <fryguybob> So there are many things that she can't do very easily, but scrolling around works great.
2012-07-27 16:18:03 UTC <luite> does she like it now that se has it though?
2012-07-27 16:18:16 UTC <fryguybob> Yes very much.  Voice recognition does well enough for her to post on facebook.
2012-07-27 16:18:39 UTC <luite> oh cool
2012-07-27 16:18:58 UTC <luite> that's only possible with the latest ipad, right?
2012-07-27 16:19:03 UTC <fryguybob> I think so.
2012-07-27 16:20:02 UTC <fryguybob> In the end I think the thing that makes it work is that someone else can very easily assist her for the parts that she cannot do.
2012-07-27 16:20:36 UTC <fryguybob> I can click and type random things from upside down while she is still holding it.
2012-07-27 16:20:49 UTC <luite> hm, only english, american, australian, french, german and japanese supported
2012-07-27 18:03:11 UTC <byorgey> edwardk: were you looking for me?
2012-07-27 18:12:45 UTC <edwardk> back
2012-07-27 18:13:04 UTC <edwardk> had some slides on bound i was figuring i'd run past you before the talk ;)
2012-07-27 18:13:21 UTC <edwardk> but as i gave the talk already the pressure is off =)
2012-07-27 18:14:04 UTC <edwardk> http://www.slideshare.net/ekmett/bound-making-de-bruijn-succ-less is pretty close to what the final slides were
2012-07-27 18:14:23 UTC <byorgey> ok =)
2012-07-27 18:14:32 UTC <byorgey> I'll take a look anyway
2012-07-27 18:15:02 UTC <edwardk> appreciate it =)
2012-07-27 18:16:23 UTC <edwardk> i may update the talk for hac phi, either that or go into 'lens' and the use of traversals
2012-07-27 18:25:09 UTC <byorgey> edwardk: talking about lens seems more practical for the average Haskell programmer
2012-07-27 18:25:15 UTC <edwardk> probably
2012-07-27 18:25:21 UTC <edwardk> but it means preparing slides ;)
2012-07-27 18:25:37 UTC <byorgey> heh, good point =)
2012-07-27 18:25:40 UTC <edwardk> actually i'm really liking the way the traversal code turned out in lens, so i'll probaby do that
2012-07-27 18:28:26 UTC <byorgey> bound certainly sounds interesting, but I'd personally be more interested to hear about lens stuff
2012-07-27 18:28:39 UTC <edwardk> sounds good
2012-07-27 18:28:51 UTC <edwardk> besides i'll have video of the bound talk up soon
2012-07-27 18:33:21 UTC <byorgey> edwardk: when will you be arriving in philly?
2012-07-27 18:39:20 UTC <edwardk> sometime early friday
2012-07-27 18:39:27 UTC <edwardk> i still need to book the hotel
2012-07-27 18:39:37 UTC <edwardk> i booked the flght though
2012-07-27 18:39:44 UTC <edwardk> sheesh its more expensive this year!
2012-07-27 18:40:17 UTC <byorgey> what, the hotel, or the flight?  (or both?)
2012-07-27 18:42:07 UTC <byorgey> hahaha, I had forgotten about conor's code from "I am not a number"
2012-07-27 18:42:08 UTC <byorgey>  
2012-07-27 18:42:19 UTC <byorgey>   | otherwise = F you
2012-07-27 18:42:39 UTC <luite> :)
2012-07-27 18:55:55 UTC <mgsloan> byorgey: So I'm fixing up my pull request.  One thing is that it seems strange to export "isEmpty", especially because boundingBox is exported from Diagrams.Prelude
2012-07-27 18:56:38 UTC <byorgey> mgsloan: I'm not sure I understand what you mean.
2012-07-27 18:57:53 UTC <mgsloan> well, it seems strange for diagrams to export such a generic sounding thing, but have it only be for bounding boxes
2012-07-27 18:58:09 UTC <byorgey> mgsloan: ohh, I see what you're saying
2012-07-27 18:58:16 UTC <byorgey> sure, I agree
2012-07-27 18:58:17 UTC <mgsloan> "isEmptyBox" could work, but maybe it would make sense to have a typeclass for "IsEmpty"
2012-07-27 18:58:28 UTC <byorgey> hmm
2012-07-27 18:59:10 UTC <mgsloan> with the invariant that (IsEmpty a, Monoid a) => isEmpty mempty == True
2012-07-27 18:59:54 UTC <byorgey> mgsloan: you know, the other thing that occurred to me is that perhaps we should export NonEmptyBoundingBox after all, and that boxFit should take one of those instead
2012-07-27 19:01:01 UTC <byorgey> hmm, let me add a comment about boxFit
2012-07-27 19:01:21 UTC <mgsloan> yeah, I could see that, I thought about that too, but the problem is that we wouldn't export any other operations for NonEmptyBoundingBox
2012-07-27 19:01:36 UTC <byorgey> right, hmm
2012-07-27 19:01:49 UTC <mgsloan> and we certainly don't want to wrap it up in a typeclass
2012-07-27 19:03:16 UTC <mgsloan> class BBox a where getCorners :: a -> Maybe (Point (V a), Point (V a)); fromCorners :: (Point (V a), Point (V a)) -> a
2012-07-27 19:03:24 UTC <mgsloan> this wouldn't be so bad
2012-07-27 19:08:31 UTC <byorgey> it seems like there ought to be a simpler solution.
2012-07-27 19:21:03 UTC <mgsloan> this is a pretty common problem with trying to lift knowledge about datatype invariants into the typesystem
2012-07-27 19:21:52 UTC <mgsloan> either you end up introducing some boilerplate to transform to the more restrictive type and back, (Newtype.over), or you make polymorphic functions
2012-07-27 19:25:36 UTC <byorgey> good point.
2012-07-27 19:26:43 UTC <byorgey> well, anyway, I don't have super strong opinions on this.  Do something that seems most reasonable.
2012-07-27 19:30:47 UTC <mgsloan> sounds good :)
2012-07-27 19:31:04 UTC <mgsloan> I think I'm leaning towards not exposing, for the above reasons, and the huge name
2012-07-27 19:38:49 UTC <mgsloan> https://github.com/mgsloan/api-compat/blob/master/examples/diagrams-lib-0.5.1.api
2012-07-27 19:38:49 UTC <mgsloan> here's the full exports of Diagrams.Prelude
2012-07-27 19:41:33 UTC <byorgey> wow
2012-07-27 19:41:46 UTC <mgsloan> I think I might also do a mode that just focuses on names
2012-07-27 19:41:54 UTC <mgsloan> instead of giving you full signatures
2012-07-27 19:42:04 UTC <byorgey> maybe we should start thinking about things to NOT export from Diagrams.Prelude =)
2012-07-27 19:42:13 UTC <mgsloan> maybe so :)
2012-07-27 19:42:52 UTC <byorgey> after all, the Haskell Prelude doesn't export everything in base =)
2012-07-27 19:43:26 UTC <byorgey> well, BoundingBox would be a good candidate for not exporting, I suppose
2012-07-27 19:43:32 UTC <mgsloan> I think os
2012-07-27 19:43:34 UTC <mgsloan> *so
2012-07-27 19:43:59 UTC <mgsloan> might also consider exporting the important subsets of modules
2012-07-27 19:44:06 UTC <mgsloan> that can get a little bit messy, though
2012-07-27 19:44:14 UTC <byorgey> right
2012-07-27 19:44:49 UTC <mgsloan> problem is that it's easy to add some utilities to a module without realizing that it's also getting exported from the Prelude
2012-07-27 19:45:40 UTC <byorgey> that's true
2012-07-27 19:47:12 UTC <byorgey> but on the flip side, if the Prelude has an explicit list of exports, it's easy to add a function to a module without realizing that it *isn't* getting exported from the Prelude
2012-07-27 19:47:39 UTC <byorgey> so I think exports is just always going to be a fiddly thing no matter what
2012-07-27 19:53:21 UTC <mgsloan> right
2012-07-27 19:53:30 UTC <mgsloan> I like modules better, I think
2012-07-27 19:53:44 UTC <mgsloan> maybe anything that doesn't belong in being exported from the prelude should go in contrib
2012-07-27 19:54:05 UTC <mgsloan> time to go eat!
2012-07-27 20:27:33 UTC <byorgey> http://www.haskell.org/haskellwiki/Diagrams/Contributing
2012-07-27 20:27:51 UTC <byorgey> just a stub so far, help filling it in welcome/appreciated
2012-07-27 20:31:58 UTC <fryguybob> "Getting involved\   EDIT ME" <-- Editing the wiki is one way to get involved :D
2012-07-27 21:36:04 UTC <byorgey> fryguybob: indeed =)
2012-07-27 21:36:16 UTC <byorgey> mgsloan: http://www.haskell.org/haskellwiki/Diagrams/Contributing
2012-07-27 21:37:18 UTC <mgsloan> Cool! such a page is a good idea
2012-07-27 21:37:41 UTC <mgsloan> where do you think a file similar to "https://github.com/mgsloan/gtk-toy-diagrams/blob/master/INSTALL.md"
2012-07-27 21:37:45 UTC <mgsloan> should go?
2012-07-27 21:38:04 UTC <mgsloan> I wish cabal could actually use the repository info
2012-07-27 21:38:55 UTC <byorgey> mgsloan: see https://github.com/haskell/cabal/pull/2
2012-07-27 21:38:57 UTC <mgsloan> e.g. "cabal pull --all" would pull all of the repositories of the given project and its dependencies
2012-07-27 21:38:59 UTC <mgsloan> noice
2012-07-27 21:39:33 UTC <byorgey> mgsloan: I guess that should go on the wiki somewhere
2012-07-27 21:40:13 UTC <byorgey> mgsloan: by the way, you can replace most of that with  'cabal install monoid-extras/ dubl-tree/ diagrams-core/ ...'
2012-07-27 21:40:30 UTC <mgsloan> oh? nice.
2012-07-27 21:40:33 UTC <byorgey> with the slashes it installs the local packages instead of from hackage
2012-07-27 21:40:45 UTC <mgsloan> The reason I don't do that is that cabal install tries to install the dependencies
2012-07-27 21:40:54 UTC <byorgey> i.e. it interprets them as directories rather than package names
2012-07-27 21:41:03 UTC <byorgey> not if you do them all at once like that.
2012-07-27 21:41:16 UTC <byorgey> it topo sorts them first
2012-07-27 21:41:31 UTC <mgsloan> gotcha
2012-07-27 21:41:35 UTC <mgsloan> that's cool
2012-07-27 21:43:29 UTC <byorgey> ACTION -> home
2012-07-30 17:42:32 UTC <luite> ooh a bot
2012-07-30 17:42:48 UTC <fryguybob> byorgey: I hope that worked :D
2012-07-30 17:44:31 UTC <luite> now that it's on github i don't have a good excuse for not contributing anymore ;)
2012-07-30 17:45:30 UTC <fryguybob> :D
2012-07-30 17:45:58 UTC <fryguybob> Now that it is on github I should probably remember my github password.
2012-07-30 17:46:22 UTC <luite> hehe i never remember my password, so i always have to switch to the browser that has a logged in session
2012-07-30 19:39:48 UTC <byorgey> fryguybob: looks like it worked =)
2012-07-30 19:45:01 UTC <fryguybob> byorgey: excellent.  I tried to do it with hub but it asked for the web password so I followed the steps that it said that it's merge would do (making guesses along the way).
2012-07-30 19:45:27 UTC <fryguybob> Later I found that there is a switch that does ssh instead of web passwords, so I can try that next time :D.
2012-07-30 19:46:18 UTC <fryguybob> (-p I think)
2012-07-30 19:47:41 UTC <byorgey> ah, yes, -p
2012-07-30 19:47:54 UTC <byorgey> I use -p when cloning using hub also
2012-07-30 19:48:20 UTC <byorgey> it sets up the remote urls to be git@github:blahblah or whatever instead of https://github.com...
2012-07-30 19:49:00 UTC <byorgey> fryguybob: for stuff that can be automerged you can also just click the big green button at the bottom of the pull request, I think
2012-07-30 19:53:37 UTC <fryguybob> Ah, ok, I cloned without hub so I was already there.
2012-07-30 19:53:48 UTC <fryguybob> Right, but I have to be signed in for that.
2012-07-30 19:54:03 UTC <byorgey> oh, hehe, right =)
2012-07-30 19:54:32 UTC <fryguybob> At least I think they closed the admin rights for anyone hole :D
2012-07-30 19:54:45 UTC <byorgey> haha, what
2012-07-30 19:55:38 UTC <fryguybob> https://github.com/rails/rails/issues/5228 -- quite amusing.
2012-07-30 20:02:33 UTC <byorgey> haha, https://github.com/rails/rails/commit/b83965785db1eec019edf1fc272b1aa393e6dc57
2012-07-30 20:05:04 UTC <mgsloan> lol@ github allowing images in comments
2012-07-30 20:11:05 UTC <luite> oh they do?
2012-07-30 20:11:30 UTC <luite> cool :)
2012-07-30 20:17:31 UTC <byorgey> good to know, that might come in handy with diagrams =)
2012-07-30 20:42:34 UTC <tgeeky> I think they have for a while, since they allow markdown (and markdown allows images?)
2012-07-30 20:48:35 UTC <byorgey> well, they allow 'github flavored markdown'
2012-07-30 20:48:47 UTC <byorgey> which means they can basically do whatever they want =)
2012-07-30 20:49:03 UTC <byorgey> but yes, probably it's been supported for a while
2012-07-30 23:20:44 UTC <fryguybob> byorgey: I should have a few hours this evening to get the issues migrated.
2012-07-31 13:11:52 UTC <byorgey> fryguybob: thanks!  I just went through and made sure that every issue has exactly one Component tag, which you can use to route them into repo-specific issue trackers on github
2012-07-31 17:10:51 UTC <fryguybob> byorgey: I made some progress, but didn't get all the way.
2012-07-31 17:12:38 UTC <byorgey> fryguybob: ok, what's still left to do?
2012-07-31 17:12:39 UTC <fryguybob> ACTION always feels like he is doing something wrong as every time he touches ByteString he ends up with some long string of decode, packs, and unpacks involving lazy strict and Text...
2012-07-31 17:12:46 UTC <byorgey> hehehe
2012-07-31 17:13:01 UTC <byorgey> why bother using ByteString for this?
2012-07-31 17:13:24 UTC <fryguybob> To get from JSON.
2012-07-31 17:13:29 UTC <byorgey> oh.
2012-07-31 17:13:31 UTC <byorgey> right
2012-07-31 17:13:36 UTC <fryguybob> At the time it seemed like the straight forward thing to do...
2012-07-31 17:13:48 UTC <byorgey> heh
2012-07-31 17:14:18 UTC <fryguybob> But the github package uses Strings in its structures.
2012-07-31 17:15:12 UTC <byorgey> oh, there's a github paackage? nice.
2012-07-31 17:15:21 UTC <fryguybob> I still need to figure out what I need to do to map all the stuff, but I have the data from gcode as some form of string in haskell taged with label, body, title, comment.
2012-07-31 17:16:06 UTC <byorgey> if you didn't already, be sure to re-grab the data following my cleanup of the Component tags
2012-07-31 17:16:18 UTC <byorgey> now every issue has exactly one
2012-07-31 17:16:36 UTC <fryguybob> byorgey: Yeah I was planning on doing that once I was close.
2012-07-31 17:16:44 UTC <byorgey> makes sense.
2012-07-31 17:19:54 UTC <fryguybob> I won't have any time to work on it tonight though as it is Rebekah and my anniversary.
2012-07-31 17:20:08 UTC <byorgey> oh, happy anniversary!
2012-07-31 17:20:12 UTC <fryguybob> Thanks
2012-07-31 17:20:52 UTC <byorgey> no worries.  it would be ideal to get it done before hac phi starts, but even that is not really a big deal.
2012-07-31 17:21:38 UTC <byorgey> there are many things that would be ideal to get done before hac phi starts.  most of them will not get done. ce'st la vie.
2012-07-31 17:24:15 UTC <fryguybob> That's the benefit of punchcard computing.  Programs can only get sooo big and then they become physically impractical.
2012-07-31 17:24:46 UTC <byorgey> um, what? =)
2012-07-31 17:25:22 UTC <fryguybob> You always have time to get things done because your programs are small ;D
2012-07-31 21:13:44 UTC <fryguybob> gahh.  I never have the passwords I want when I want them :D (this summer at least...)
2012-07-31 21:16:01 UTC <fryguybob> byorgey: I was going to add to the ReviewingAndMerging wiki something about making the action needed clear in reviews.
2012-08-01 01:03:03 UTC <byorgey> fryguybob: don't have your Haskellwiki password, eh? =)
2012-08-01 01:03:11 UTC <byorgey> fryguybob: good idea. I can add that.
2012-08-01 01:16:14 UTC <byorgey> fryguybob: OK, I updated it, what do you think?
2012-08-01 01:36:17 UTC <tgeeky> ACTION likey github bot!
2012-08-01 01:46:28 UTC <byorgey> tgeeky: yeah, me too!
2012-08-01 01:46:42 UTC <byorgey> ACTION <3 github
2012-08-01 01:46:51 UTC <byorgey> ACTION </3 git
2012-08-01 01:49:01 UTC <byorgey> It's not a bot, really, I just configured the repositories so that commits trigger IRC messages
2012-08-01 01:51:32 UTC <edwardk> byorgey: heya did you get my msg that i'll probably be getting in a bit late for the PL lunch to work?
2012-08-01 01:51:45 UTC <byorgey> edwardk: yeah, I did, too bad
2012-08-01 01:51:46 UTC <edwardk> i get in philly around noon, so not sure the time to get from the airport, etc
2012-08-01 01:52:01 UTC <byorgey> edwardk: I roped mgsloan into giving a talk instead =)
2012-08-01 01:52:08 UTC <edwardk> score
2012-08-01 01:52:24 UTC <edwardk> i still have to put together slides for lens
2012-08-01 01:53:57 UTC <byorgey> yeah, if your plane lands at noon, you won't get to campus until after the lunch is over
2012-08-01 01:54:06 UTC <edwardk> yeah
2012-08-01 01:54:19 UTC <byorgey> anyway, looking forward to seeing you
2012-08-01 01:55:23 UTC <edwardk> likewise. need to figure out how to switch diagrams over to use lens ;)
2012-08-01 02:08:10 UTC <luite> what's mgsloan going to talk about?
2012-08-01 02:08:49 UTC <tgeeky> ACTION still doesn't even know if will be going to hac-phi. :/
2012-08-01 02:09:13 UTC <edwardk> tgeeky is an it?
2012-08-01 02:09:26 UTC <tgeeky> hehe
2012-08-01 02:09:31 UTC <tgeeky> s//he/
2012-08-01 02:09:40 UTC <mgsloan> oh noes, you forgot the entire!
2012-08-01 02:09:49 UTC <edwardk> you know you want to
2012-08-01 02:09:56 UTC <edwardk> i had better book my hotel room soon
2012-08-01 02:10:04 UTC <luite> ACTION does know if he will be going to hac phi
2012-08-01 02:10:11 UTC <tgeeky> not!
2012-08-01 02:10:27 UTC <luite> yeah
2012-08-01 02:10:34 UTC <mgsloan> luite: I'm going to talk about instance templates + more
2012-08-01 02:10:40 UTC <luite> ah cool
2012-08-01 02:13:35 UTC <mgsloan> I'm thinking instance templates + API Diffs + ideas for its relevance to interface-limited coercion functions (kinda like weak typing - can generalize GeneralizedNewtypeDeriving)
2012-08-01 02:14:32 UTC <mgsloan> (while making GeneralizedNewtypeDeriving sound, at the "cost" of making it more explicit)
2012-08-01 02:17:07 UTC <mgsloan> I've also got some open questions regarding using types to dispatch to different instance templates / using this as a mechanism for checking minimal definitions of records
2012-08-01 02:17:19 UTC <mgsloan> s/records/methods/
2012-08-01 02:19:24 UTC <mgsloan> byorgey: does this sound reasonable for an hour?  I will allocate time based on audience feedback.  If everyone just "gets" instance templates, then that leaves plenty of time for the other stuff
2012-08-01 02:30:52 UTC <tgeeky> hm. first time that's happened. I have stumbled upon something which I have calculated which wolframalpha can't (or won't)
2012-08-01 02:30:58 UTC <tgeeky> !
2012-08-01 02:32:15 UTC <tgeeky> and it took a good three or so minutes to run :o
2012-08-01 02:32:27 UTC <tgeeky> ACTION assumed the calc would crash
2012-08-01 03:16:19 UTC <fryguybob> byorgey: Your addition is well put.  Now we just need to bikeshed on a how to prevent bikesheding section.
2012-08-01 13:35:05 UTC <byorgey> fryguybob: hehe
2012-08-01 20:32:54 UTC <tgeeky> byorgey: not going to make it :\
2012-08-01 20:33:15 UTC <luite> :(
2012-08-01 20:34:26 UTC <tgeeky> on top of the normal trobles, I've been sick since Sunday. I went Monday, got a prescription for antibiotics (which he told me to wait a day to fill, in case it was just a overnight nose virus or something...)
2012-08-01 20:34:46 UTC <tgeeky> and I got much, much worse, as expected. So I started them yesterday evening.
2012-08-01 20:34:57 UTC <tgeeky> I don't think I'm going to be responsible for getting all of you guys sick :o
2012-08-01 20:39:12 UTC <tgeeky> edwardk: do you know where multiplate fits into things, since the lens evolution that's happened in the last few months?
2012-08-01 20:39:21 UTC <edwardk> yes
2012-08-01 20:39:33 UTC <edwardk> i've been working on a variation on it ;)
2012-08-01 20:39:41 UTC <tgeeky> varying how?
2012-08-01 20:39:43 UTC <edwardk> its tricky though because i want type changing multiplates
2012-08-01 20:40:33 UTC <edwardk> well, if you've been following the 'lens' chatter, i want to be able to compose them like i can the lenses an traversals
2012-08-01 20:40:40 UTC <edwardk> but that is somewhat complicated by their structure
2012-08-01 20:40:54 UTC <tgeeky> they only have the id and composure?
2012-08-01 20:41:17 UTC <edwardk> well, no the issue is that if we take traverse
2012-08-01 20:41:30 UTC <edwardk> traverse :: (c -> f d) -> t c -> f (t c)
2012-08-01 20:41:41 UTC <edwardk> and we generate a traversal
2012-08-01 20:42:00 UTC <edwardk> type Traversal a b c d = forall f. Applicative f => (c -> f d) -> a -> f b
2012-08-01 20:42:18 UTC <edwardk> then we can see how multiplates are just the limited case where c = d, a = b, and that we have multiple input functions
2012-08-01 20:42:33 UTC <edwardk> (b -> f b) -> (c -> f c) -> (d -> f d) -> a -> f a
2012-08-01 20:42:44 UTC <edwardk> those are usually tupled up and called a plate
2012-08-01 20:43:32 UTC <edwardk> the trick is finding the way to permit type varying multiplates so i can have say something that takes an Exp a and gives me back an Exp b
2012-08-01 20:43:45 UTC <edwardk> that becomes analogous to making lens families/traversal families
2012-08-01 20:43:51 UTC <edwardk> but then mkPlate breaks down
2012-08-01 20:44:13 UTC <edwardk> so i've been working on how to rebuild that from first principles
2012-08-01 20:45:17 UTC <edwardk> basically i'm trying to make applying the plate into the plate like how applying the traversal is the traversal
2012-08-01 20:45:25 UTC <edwardk> if that is at all coherent
2012-08-01 20:45:40 UTC <tgeeky> i know a finite number of those words
2012-08-01 20:45:51 UTC <tgeeky> i have never actually tried plate composition/application in detail
2012-08-01 20:46:40 UTC <edwardk> anyways i may be able to build a form of 'uniplate' that works with just taking a traversal and applying it to itself recursively
2012-08-01 20:46:52 UTC <edwardk> e.g. everywhere :: Simple Traversal a a -> Simple Traversal a a
2012-08-01 20:47:03 UTC <edwardk> those cease to be quite legal traversals
2012-08-01 20:47:09 UTC <edwardk> so i need to come up with laws for them
2012-08-01 20:47:18 UTC <tgeeky> edwardk: btw, have you looked at unfoldable and making putting some of that into your lens package?
2012-08-01 20:47:41 UTC <edwardk> is there an Unfoldable class somewhere?
2012-08-01 20:48:03 UTC <tgeeky> sjeord visscher (sp??)
2012-08-01 20:48:05 UTC <edwardk> my focus right now has been generalizing Functor, Foldable, Traversable, functions and isomorphisms
2012-08-01 20:48:18 UTC <byorgey> tgeeky: oh, sad =(
2012-08-01 20:48:23 UTC <byorgey> tgeeky: hope you feel better soon
2012-08-01 20:48:34 UTC <edwardk> icky
2012-08-01 20:48:38 UTC <edwardk> looking at it
2012-08-01 20:50:01 UTC <tgeeky> edwardk: my guess is this: the power of something like multiplate will come when it is equipped with a mechanism for both unfolding and folding (along with apos)
2012-08-01 20:50:20 UTC <tgeeky> that is, you have a multiplate with some number of fields
2012-08-01 20:50:23 UTC <edwardk> possibly, but i think its outside of the purview of lens
2012-08-01 20:50:34 UTC <tgeeky> well, the lenses would be the projections I assumed?
2012-08-01 20:50:42 UTC <tgeeky> excuse me, the invariants of the projections
2012-08-01 20:50:45 UTC <tgeeky> would themselves be lenses
2012-08-01 20:50:55 UTC <edwardk> one way to think about a multiplate is that a plate is a representable indexed functor
2012-08-01 20:51:15 UTC <tgeeky> i don't understand those (representable, or indexed)
2012-08-01 20:51:16 UTC <edwardk> thats the other approach i've been toying with
2012-08-01 20:51:26 UTC <edwardk> have lens installed?
2012-08-01 20:51:31 UTC <edwardk> look at Control.Lens.Representable
2012-08-01 20:51:42 UTC <tgeeky> open
2012-08-01 20:51:46 UTC <edwardk> in particular when working with lenses i spend a lot of time working in a funny category
2012-08-01 20:52:00 UTC <edwardk> the category is the category of haskell types of the form (a -> f b)
2012-08-01 20:52:24 UTC <tgeeky> covariant in a?
2012-08-01 20:52:24 UTC <edwardk> thats why you can compose lenses, folds, traversals, etc. with (.) they are just composing functions between types of that form
2012-08-01 20:52:53 UTC <edwardk> type Lens a b c d = forall f. Functor f => (c -> f d) -> (a -> f b)
2012-08-01 20:52:57 UTC <tgeeky> oh
2012-08-01 20:53:02 UTC <tgeeky> i have to keep that naming in mind
2012-08-01 20:53:36 UTC <edwardk> so the different lens-like things are just different choices of constraints on 'f'
2012-08-01 20:53:42 UTC <edwardk> if you choose Functor you get a Lens
2012-08-01 20:53:48 UTC <edwardk> Applicative yields a Traversal
2012-08-01 20:54:01 UTC <edwardk> if it is Const r for any r then its a Getter
2012-08-01 20:54:06 UTC <edwardk> Const r for Monoid r then its a Fold
2012-08-01 20:54:09 UTC <edwardk> Identity its a Setter
2012-08-01 20:54:31 UTC <edwardk> and if i permit the outer arrow to vary as an isomorphism and f is a Functor we have an Iso
2012-08-01 20:54:51 UTC <edwardk> type Iso a b c d = forall k f. (Isomorphic k, Functor f) => k (c -> f d) (a -> f b)
2012-08-01 20:54:56 UTC <tgeeky> that's pretty f*ing amazing
2012-08-01 20:54:57 UTC <tgeeky> isn't it
2012-08-01 20:55:02 UTC <tgeeky> this list
2012-08-01 20:55:08 UTC <edwardk> it made me happy as shit =)
2012-08-01 20:55:26 UTC <tgeeky> so let's do this all over, with a trifunctor
2012-08-01 20:55:35 UTC <tgeeky> so we can capture all three parts of the isomorphism :o
2012-08-01 20:55:44 UTC <edwardk> Traversal is like traversable, getter is just a cps'd function, folds are foldables, setters are functors
2012-08-01 20:55:52 UTC <edwardk> all of these can work for monomorphic containers, etc.
2012-08-01 20:56:11 UTC <tgeeky> this single package is like a little typeclassopedia
2012-08-01 20:56:33 UTC <tgeeky> edwardk: I have a project-in-the making called "ghh" -- gotta have haskell
2012-08-01 20:57:05 UTC <tgeeky> needless to say, one of the subdirectories is "from-edward-kmett"
2012-08-01 20:57:25 UTC <tgeeky> it's an answer to those questions -- which packages should you install?
2012-08-01 20:57:52 UTC <edwardk> =)
2012-08-01 20:58:07 UTC <edwardk> i'm hoping to use it to replace the use of generators in my reducers package
2012-08-01 20:58:17 UTC <tgeeky> I found it easier to chunk up the available packages on hackage by adding a tag of "reliable producer of excellent code"
2012-08-01 20:58:19 UTC <edwardk> and the notion of representable here lets me kill representable-functors
2012-08-01 20:58:52 UTC <tgeeky> edwardk: seriously, though, what is a bifunctor (f g)? a lens transformer?
2012-08-01 20:58:57 UTC <tgeeky> a bilens?
2012-08-01 20:59:13 UTC <edwardk> haven't fiddled with bifunctors here, not sure how they'd work
2012-08-01 20:59:37 UTC <edwardk> maybe useful to avoid having to instantiate things polymorphically when working with isomorphisms, i'll have to think about it
2012-08-01 21:00:16 UTC <tgeeky> edwardk: well, my input from my genuine recent research is that when you have an isomorphism, you want it, *at least* both of the two homomorphisms that made it
2012-08-01 21:00:47 UTC <edwardk> tgeeky: you can rederive them actually
2012-08-01 21:01:17 UTC <edwardk> its a tricky but fun exercise to take a Simple Iso lens and rederive the a -> b and b -> a
2012-08-01 21:01:36 UTC <edwardk> you have to instantiate it and its inverse with different versions of Const
2012-08-01 21:02:03 UTC <edwardk> (b -> Const b b) -> a -> Const b a       -- pass it id, and it gives you a -> b
2012-08-01 21:02:09 UTC <edwardk> and flip and do the same thing with Const a
2012-08-01 21:02:13 UTC <edwardk> and you get b -> a
2012-08-01 21:02:41 UTC <edwardk> of course you can just do this directly, by using ^.foo and ^.from foo
2012-08-01 21:03:49 UTC <edwardk> an of course the mapping from a pair of functions to an Iso is an isomorphism itself ;)
2012-08-01 21:04:05 UTC <edwardk> but alas i can't typecheck that predicatively
2012-08-01 21:04:07 UTC <tgeeky> edwardk: right, but that breaks down when it's a 3-tuple
2012-08-01 21:04:11 UTC <tgeeky> i mean, all of this does
2012-08-01 21:04:32 UTC <edwardk> i don't understand your 3-tuple concept
2012-08-01 21:04:51 UTC <edwardk> can you describe it further?
2012-08-01 21:06:00 UTC <tgeeky> maybe, but I'll probably just waste time. I can think of examples that one might want to encode, that have 2-tuples, and 3-tuples:
2012-08-01 21:06:22 UTC <tgeeky> Gaussian Integers: { +|- 1 , +/- i }
2012-08-01 21:06:34 UTC <edwardk> not following at all
2012-08-01 21:06:35 UTC <tgeeky> Eisenstein Int: { +/- 1 , +/- w, +/- w^2 }
2012-08-01 21:06:57 UTC <edwardk> using lenses into them?
2012-08-01 21:07:07 UTC <edwardk> e.g. real and imaginary in Data.Complex.Lens?
2012-08-01 21:07:24 UTC <tgeeky> nope, you need to handle +/- first, but yes, I intend to try that
2012-08-01 21:08:01 UTC <tgeeky> I want to encode the field itself as a n-tuple of lenses
2012-08-01 21:08:02 UTC <tgeeky> err
2012-08-01 21:08:09 UTC <tgeeky> as a lens family of a certain n-tuple width
2012-08-01 21:08:37 UTC <tgeeky> this is just a concerete example of something to do, not a general explanation of my focus on at least 3-tuples
2012-08-01 21:09:16 UTC <edwardk> well, i do something pretty weak but at least of this sort in physics
2012-08-01 21:09:37 UTC <edwardk> instance Representable V3 where rep f = V3 (f x) (f y) (f z) -- x y and z are lenses
2012-08-01 21:10:03 UTC <edwardk> but thats not to the operations, its to the positions, so you can view the set of polymorphic lenses as the basis for my vector space
2012-08-01 21:10:12 UTC <tgeeky> that's a good start!
2012-08-01 21:10:17 UTC <edwardk> i don't encode a field this way but a vector space over the field i can encode
2012-08-01 21:10:33 UTC <tgeeky> well, I need the field, but if you have the lens you could at least be sure which field it's frome
2012-08-01 21:10:33 UTC <edwardk> you get an Applicative, Monad, Distributive, etc for free by being Representable
2012-08-01 21:11:00 UTC <edwardk> https://github.com/ekmett/physics/blob/master/Physics/Quaternion.hs#L48
2012-08-01 21:11:27 UTC <tgeeky> edwardk: you don't happen to have code for the hyperbolic laplacian somewhere do you?
2012-08-01 21:12:04 UTC <alp> whaaaaaaaaaat
2012-08-01 21:12:23 UTC <edwardk> alp: ?
2012-08-01 21:12:55 UTC <alp> i choked on hyperbolic laplacian
2012-08-01 21:12:57 UTC <alp> sorry
2012-08-01 21:12:59 UTC <edwardk> the d'alembert operator and stuff?
2012-08-01 21:13:46 UTC <tgeeky> edwardk: yep, fixed
2012-08-01 21:13:47 UTC <tgeeky> uhh
2012-08-01 21:14:03 UTC <tgeeky> edwardk: i'm working on this: http://www.aimath.org/news/partition/brunier-ono.pdf
2012-08-01 21:14:20 UTC <tgeeky> using cyclotomic and some bits from old-haskell-for-maths (eisenstein series, and dedekind eta)
2012-08-01 21:14:50 UTC <tgeeky> I have F(z) defined
2012-08-01 21:15:02 UTC <edwardk> ah, not very familiar with that stuff
2012-08-01 21:15:10 UTC <tgeeky> i just need that laplacian
2012-08-01 21:15:22 UTC <tgeeky> the -y^2 (d^2 / dx^2 + d^2 / dy^2)
2012-08-01 21:17:06 UTC <tgeeky> edwardk: I've alrady got the cylotomic package extended to work over the guassian and eisenstein fields (sqrt(-4) and sqrt(-3) resp)
2012-08-01 21:17:09 UTC <tgeeky> http://hpaste.org/72452
2012-08-01 21:17:51 UTC <edwardk> cute
2012-08-01 21:18:14 UTC <tgeeky> I have some of the code in place to cover all of the complex quadratic (class = 1) fields
2012-08-01 21:19:33 UTC <tgeeky> i didn't think about looking at any of the eliptic curve packages. that stuff always scares me away
2012-08-01 21:20:28 UTC <tgeeky> edwardk: btw, your packages are highlighted not only as good examples of good code, and being well maintained, but also as you know your struggles with getting haskell98 in many places means, I can add +*-from-edwardk to the list of hackage packages, and there's a good chance there won't be any weird deps
2012-08-01 21:20:32 UTC <fryguybob> byorgey: I've made some progress on the issue importing.  I should be able to test against a dummy repo tonight.
2012-08-01 21:20:58 UTC <edwardk> heh, well, lens is pretty bad in that it uses a lot of extensions
2012-08-01 21:21:27 UTC <edwardk> but i've decided to just go for a decent library design, minimizing extensions so it doesn't need fundeps etc. for its own internal types, but is willing to use them for external deps
2012-08-01 21:21:45 UTC <tgeeky> yeah, but as a side effect I can just automatically recommend your work :O
2012-08-01 21:21:51 UTC <tgeeky> which I can't (yet) do for brent's :O
2012-08-01 21:21:56 UTC <edwardk> uhoh
2012-08-01 21:22:02 UTC <tgeeky> diagrams deps :(
2012-08-01 21:22:14 UTC <fryguybob> moar extensions!
2012-08-01 21:22:27 UTC <tgeeky> I'm fine with GHC only, but edwardk's code is very modular
2012-08-01 21:23:10 UTC <tgeeky> here are the people who have packages by personal name instead of by specific reason:  brent-yorgey, daniel-fischer, daniel-schussler, edward-kmett, max-bolingbroke, michael-sloan, neil-mitchell, twan-van-laarhoven
2012-08-01 21:23:57 UTC <alpounet> tgeeky, during next semester i'm going to do a lot of ECC crypto
2012-08-01 21:24:02 UTC <alpounet> gonna be fun!
2012-08-01 21:24:06 UTC <tgeeky> ! :)
2012-08-01 21:24:12 UTC <alpounet> err
2012-08-01 21:24:19 UTC <tgeeky> there has been some amazing progress in the field in the last few years
2012-08-01 21:24:24 UTC <tgeeky> after Wiles
2012-08-01 21:24:26 UTC <alpounet> EC crypto or ECC, not ECC crypto, obviously
2012-08-01 21:24:26 UTC <edwardk> i have some old eliptic curve stuff from my crypto-in-java days, maybe i can port it to haskell at some point
2012-08-01 21:24:36 UTC <tgeeky> bbiaf
2012-08-01 21:24:44 UTC <alpounet> edwardk, hah, cool
2012-08-01 21:24:55 UTC <alpounet> the few bits of ECC in haskell i've seen don't look very appealing
2012-08-01 21:25:02 UTC <edwardk> i used to sell a JCA/JCE engine around the java 1.3-1.4 transition
2012-08-01 21:25:20 UTC <edwardk> and i went out of my way to add a bunch of elliptic curve support by the end
2012-08-01 21:25:39 UTC <edwardk> right before sun decided to stop renewing provider keys for anyone who wasn't on the scale of symantec
2012-08-01 21:25:58 UTC <edwardk> and i decided to go do something else with my life after dumping most of the interesting hashes, and tricks on gnu crypto
2012-08-01 21:26:09 UTC <alpounet> hah
2012-08-01 21:26:39 UTC <edwardk> had they done differently i might still be doing that =P
2012-08-01 21:26:53 UTC <alpounet> if nothing really satisfying is out there on hackage by then, i'll most likely write my own package
2012-08-02 00:21:12 UTC <byorgey> fryguybob: awesome, thanks!
2012-08-02 00:37:42 UTC <byorgey> hey mgsloan
2012-08-02 00:38:00 UTC <mgsloan> 'lo byorgey :D
2012-08-02 01:01:38 UTC <mgsloan> tgeeky: sorry to hear that you can't make it!!  We'll miss ya, but see you some other time
2012-08-02 01:08:25 UTC <luite> :(
2012-08-02 01:34:52 UTC <tgeeky> mgsloan: i'll still be hacking, for sure, but I'll miss you guys too
2012-08-02 02:38:22 UTC <tgeeky> byorgey: here?
2012-08-02 02:38:42 UTC <byorgey> tgeeky: yep
2012-08-02 02:42:57 UTC <edwardk> tgeeky: you really should go ;)
2012-08-02 02:43:08 UTC <tgeeky> :)
2012-08-02 02:43:14 UTC <edwardk> whats keeping you away?
2012-08-02 02:43:45 UTC <tgeeky> the biggest problem is a bad cold-flu-infection thing
2012-08-02 02:43:51 UTC <edwardk> ah
2012-08-02 02:44:01 UTC <edwardk> should room with copumpkin he's pretty miserable too ;)
2012-08-02 02:44:09 UTC <tgeeky> and I am still symtomatic, and just started antibiotics, so I don't want to get all you guys sick :o
2012-08-02 02:44:15 UTC <edwardk> fair nuff
2012-08-02 02:47:56 UTC <luite> hm antibiotics for a cold, that's usually viral isn't it?
2012-08-02 02:51:47 UTC <edwardk> well, that settles it, he's just ditching us =P
2012-08-02 02:52:45 UTC <luite> either that or us healthcare is irresponsibly prescribing antibiotics!
2012-08-02 02:53:06 UTC <edwardk> well, we do basically drown our cows in them
2012-08-02 02:53:51 UTC <fryguybob> gahh, the feed from the code.google.com website has more data then is documented in the api.
2012-08-02 02:54:55 UTC <luite> hm i hope js engines are good at optimizing array operations, otherwise this "i'll make my own closures" wasn't a good idea
2012-08-02 02:55:24 UTC <edwardk> heh
2012-08-02 02:55:31 UTC <fryguybob> luite: Yeah, "js" and "good at optimizing" go hand in hand :P
2012-08-02 02:55:32 UTC <edwardk> using typed arrays or just normal ones?
2012-08-02 02:56:07 UTC <luite> normal ones, since the arguments are objects (other arrays being other closures)
2012-08-02 03:00:22 UTC <luite> i have a big array with all heap objects now
2012-08-02 03:02:36 UTC <luite> fryguybob: they all have tracing jit compilers now, some low level code without too much branching should be optimizable, i hope...
2012-08-02 03:08:47 UTC <fryguybob> Humm stabbing in the dark at python seems to have worked.  I have a sinking feeling that that is how all python code is written...
2012-08-02 03:27:28 UTC <luite> yeah that's why developing python is faster than developing haskell, you only have to stab until it works, not until the compiler accepts it ;)
2012-08-02 03:29:12 UTC <fryguybob> hehe
2012-08-02 03:32:57 UTC <luite> hmm, it's getting light again... i should get some sleep, like you said, code is best written stabbing in the dark
2012-08-02 03:33:10 UTC <tgeeky> hehe
2012-08-02 03:36:32 UTC <luite> also i have no idea what i'm doing
2012-08-02 03:36:55 UTC <tgeeky> i get that feeling too
2012-08-02 03:37:09 UTC <tgeeky> i am also beginning to think I've made a genuine mathematics discovery
2012-08-02 03:37:17 UTC <tgeeky> but I keep fumbling around with this bunsen burner
2012-08-02 15:25:54 UTC <luite> yay i can eval simple expressions now :)
2012-08-02 15:34:06 UTC <byorgey> yay =)
2012-08-02 16:00:11 UTC <luite> byorgey: thunks are not properly updated yet though, and i'm not really sure how to implement that. and how lazy blackholing can be implemented here
2012-08-02 16:00:27 UTC <byorgey> luite: what are you working on? ghcjs?
2012-08-02 16:00:32 UTC <luite> yeah
2012-08-02 16:01:01 UTC <luite> just an experiment to see if i can get better performance by not using javascript closures for haskell heap closures
2012-08-02 16:01:11 UTC <luite> but instead just arrays with free variables
2012-08-02 16:01:47 UTC <luite> that ~15 seconds that the diagram sample took to render really was much too long for interactive applications
2012-08-02 16:02:10 UTC <byorgey> ah, I see
2012-08-02 16:02:34 UTC <luite> what i now have is much lower level, passing around arrays, only top level functions
2012-08-02 16:03:12 UTC <luite> all heap objects are in an array, so it should be easier to see which ones are live
2012-08-02 16:03:46 UTC <luite> the version in github now passes around arrays of live variables
2012-08-02 16:04:24 UTC <luite> unfortunately just relying on the javascript garbage collector to clean up stuff isn't enough, since heap objects can have finalizers associated with them
2012-08-02 16:04:45 UTC <luite> and there are no weak maps in javascript that can do this
2012-08-02 16:05:05 UTC <luite> and finalizers are necessary for bytestring
2012-08-02 16:06:47 UTC <byorgey> ah
2012-08-02 16:06:59 UTC <byorgey> bytestring ruins everything =(
2012-08-02 16:07:49 UTC <luite> hehe it's also possible to do a different implementation of bytestring for ghcjs, but i'm afraid that the need for finalizers would crop up eventually anyway
2012-08-02 16:09:20 UTC <byorgey> fair enough.
2012-08-02 16:11:26 UTC <luite> does mean that a garbage collector for haskell heap objects is now required though
2012-08-02 16:11:59 UTC <luite> so atm i can only do expressions that have fewer than 10000 heap allocations, because then a gc is needed
2012-08-02 16:12:36 UTC <luite> anyway enough to do for hac phi :p
2012-08-02 16:13:00 UTC <byorgey> hehe
2012-08-02 16:13:22 UTC <fryguybob> luite: Are you going to Hac phi?
2012-08-02 16:13:39 UTC <byorgey> he is attending in spirit
2012-08-02 16:14:08 UTC <fryguybob> Ah.  I'm not sure I can even do that :(
2012-08-02 16:14:53 UTC <luite> well i heard there's a free spot ;p
2012-08-02 16:16:18 UTC <byorgey> fryguybob: ah, too bad, but understood
2012-08-02 16:16:41 UTC <luite> byorgey: this array also has the advantage that all heap can be preallocated, running the haskell stuff hardly needs dynamic allocation with this
2012-08-02 16:17:34 UTC <fryguybob> I discovered there was extra data that I had to modify the python gdata api to get at, but now I think all the data is in the right place and ready for mapping to Github.
2012-08-02 16:17:40 UTC <fryguybob> Only one last layer of glue :D.
2012-08-02 16:18:22 UTC <luite> but it may well turn out to be less efficient than allocating news arrays all the time
2012-08-02 16:18:33 UTC <luite> fortunately it's still easy to replace it
2012-08-02 16:18:46 UTC <byorgey> fryguybob: yay!
2012-08-02 16:18:55 UTC <luite> the garbage collector then would just test reachability for every heap object to run finalizers
2012-08-02 16:19:00 UTC <byorgey> fryguybob: thanks for your work on that, it's much appreciated
2012-08-02 16:19:32 UTC <fryguybob> byorgey: No problem.  I really should have used lenses though :P.
2012-08-02 16:19:49 UTC <byorgey> hehe, nah, we don't need to translate back!
2012-08-02 16:19:59 UTC <fryguybob> But for free!
2012-08-02 16:20:01 UTC <luite> hm i should try to understand these new fancy lens families one day
2012-08-02 16:21:07 UTC <luite> hehe i wonder what language the Knight Capital trading software is written in :)
2012-08-02 16:22:06 UTC <byorgey> hehe, whoops
2012-08-02 16:29:45 UTC <fryguybob> luite: I keep trying to think of a way for something like Intel's rivertrail to be helpful to you, but I'm not sure it would help much for general purpose things.
2012-08-02 16:34:53 UTC <luite> dunno, maybe dph can be mapped to it?
2012-08-02 16:35:06 UTC <fryguybob> Yeah I was wondering that.
2012-08-02 16:35:45 UTC <fryguybob> If all your heap is in a big array maybe there is some crazy GPU GC you could do.
2012-08-02 16:35:49 UTC <luite> NaCl would give easier results :)
2012-08-02 16:36:53 UTC <luite> do you know a good javascript graph drawing thing btw? i think this can be extended to some really cool realtime reduction animations in the browser
2012-08-02 16:38:12 UTC <fryguybob> luite: I don't know of any specific ones, but the ones bos uses in criterion seem nice.
2012-08-02 16:38:25 UTC <fryguybob> I'm sure there are more complicated ones out there.
2012-08-02 16:39:06 UTC <luite> i'm just doing single threaded without IO and exceptions now btw
2012-08-02 16:39:40 UTC <luite> only if i can get it fast enough to get diagrams running at acceptable sped i'm going to continue working on this
2012-08-02 16:39:49 UTC <fryguybob> Just becase it is single threaded doesn't mean it can't be parallel ;D
2012-08-02 16:40:19 UTC <luite> yeah i know, but i just wanted to say that it's more experimental than a proper ghcjs backend at this point
2012-08-02 16:40:27 UTC <fryguybob> yeah
2012-08-02 16:40:36 UTC <luite> actually so far 99% of the code is either rts or stg stuff manually compiled to javascript :)
2012-08-02 17:08:00 UTC <byorgey> luite: diagrams can probably be optimized too.  So if there's any way you can profile and get a sense of which parts are actually taking the longest maybe we can work on optimizing them.
2012-08-02 18:47:29 UTC <luite> byorgey: diagrams does mostly already use double, doesn't it?
2012-08-02 18:47:56 UTC <luite> instead of rational or int, integer?
2012-08-02 18:48:06 UTC <luite> double is by far the fastest in javascript
2012-08-02 18:48:30 UTC <luite> and it will probably help to specialize some code
2012-08-02 18:48:34 UTC <luite> with pragmas
2012-08-02 18:48:57 UTC <luite> if double calculations are inlined, the result should be acceptable
2012-08-02 18:50:05 UTC <luite> since it's easy to combine a lot of unboxed primops in one function
2012-08-02 18:56:28 UTC <fryguybob> luite: I think the only use of values other then double are in testing.  All the backends are double though (as far as I know).
2012-08-02 18:58:35 UTC <luite> yeah but code is generated per module, if you have something that's fully polymorphic and the functions aren't inlined, you're going to end up with a lot of dictionary passing
2012-08-02 19:03:18 UTC <luite> unless you SPECIALIZE
2012-08-02 19:03:28 UTC <byorgey> luite: ah, I don't know about inlining/specialize, good question
2012-08-02 19:03:37 UTC <byorgey> lots of stuff in diagrams is polymorphic
2012-08-02 19:03:46 UTC <byorgey> but lots uses Double eventually.
2012-08-02 19:04:26 UTC <tgeeky_> byorgey: GHC 7.6 support pragma passthrough
2012-08-02 19:04:29 UTC <tgeeky_> in TH
2012-08-02 19:10:08 UTC <byorgey> tgeeky_: hmmm?
2012-08-02 19:10:43 UTC <tgeeky_> byorgey: it will be convenient in the future to write TH code which writes INLINE and specialize pragmas
2012-08-02 19:10:55 UTC <byorgey> oh, I see, indeed
2012-08-02 19:11:01 UTC <tgeeky_> as the version of TH in HEAD supports putting those pragmas ..
2012-08-02 19:11:02 UTC <tgeeky_> yes
2012-08-02 19:11:47 UTC <luite> hmm, do you think it would be a good idea to write TH that spits out those?
2012-08-02 19:12:16 UTC <tgeeky_> I think it's a great idea
2012-08-02 19:12:46 UTC <luite> but TH can't enumerate functions in a module, can it?
2012-08-02 19:13:11 UTC <luite> and it can't see the type of the thing below
2012-08-02 19:13:15 UTC <tgeeky_> oh, I don't know, but if you are generating a DSL I am sure you can figure something out
2012-08-02 19:13:38 UTC <luite> yeah if you generate everything it's possible, but diagrams is plain haskell code
2012-08-02 19:14:08 UTC <tgeeky_> luite: so, my though process was this: say you have a function which has a fold fusion law -- and you have an (automatically generated) class law instance which quickchecks the fold fusion law
2012-08-02 19:14:17 UTC <byorgey> yeah, but I'm thinking of switching to having diagrams all generated by TH
2012-08-02 19:14:28 UTC <tgeeky_> then you could add code which says: if the quickcheck law passes, admit this pragma to do the fold fusion
2012-08-02 19:14:51 UTC <byorgey> basically I write down what I want in a .txt file, and then a general AI with a TH backend reads it in and spits out diagrams
2012-08-02 19:15:08 UTC <tgeeky_> ACTION can't tell if serious
2012-08-02 19:15:13 UTC <tgeeky_> hehe
2012-08-02 19:15:14 UTC <tgeeky_> :)
2012-08-02 19:15:30 UTC <tgeeky_> edwardk inline's like... all of his code, and he does it by hand :(
2012-08-02 19:15:39 UTC <edwardk> hah
2012-08-02 19:15:58 UTC <edwardk> as dolio says its the only way to make it work ;)
2012-08-02 19:16:06 UTC <luite> byorgey: yeah and then you can run it overnight to let it optimize the api for combinations of ease of use, conciseness of code, and performance, and it gives you all pareto optimal solutions
2012-08-02 19:16:16 UTC <edwardk> with lenses is really critical because after inlining most of them simplify to nothing
2012-08-02 19:16:21 UTC <edwardk> without inlining they suck pretty hard
2012-08-02 19:16:33 UTC <tgeeky_> edwardk: that makes perfect sense, however
2012-08-02 19:16:40 UTC <edwardk> yeah
2012-08-02 19:16:53 UTC <tgeeky_> but this is a good state of afairs
2012-08-02 19:16:58 UTC <edwardk> because you want the code to move to the use site where the functor choice is known, etc. and it can turn all the cps'd code back right side out
2012-08-02 19:17:07 UTC <byorgey> luite: ooh, nice
2012-08-02 19:17:11 UTC <edwardk> i have the new template haskell for lenses actually emit inline pragmas for you too
2012-08-02 19:17:51 UTC <luite> hmm
2012-08-02 19:18:40 UTC <luite> i hope they actually reduce to nothing, otherwise you get stuff like Data.Text.Lazy where the generated code is in the megabytes (for ghcjs at least)
2012-08-02 19:18:47 UTC <edwardk> so close to usable indexed traversals
2012-08-02 19:18:54 UTC <edwardk> heh
2012-08-02 19:19:09 UTC <luite> it's been liberally sprinkeld with inline
2012-08-02 19:19:09 UTC <edwardk> well, ghcjs isn't my principal optimization target at this time ;)
2012-08-02 19:19:21 UTC <luite> aw :(
2012-08-02 19:19:36 UTC <tgeeky_> ^^^ byorgey: yeah and then you can run it overnight to let it optimize the api for combinations of ease of use, conciseness of code, and
2012-08-02 19:19:40 UTC <tgeeky_>                performance, and it gives you all pareto optimal solutions
2012-08-02 19:19:44 UTC <luite> hehe well it generates code from the stg, so if plain old ghc does proper inlining, ghcjs should benefit equally
2012-08-02 19:19:51 UTC <edwardk> i'd be curious to see how the current version of lens does under ghcjs
2012-08-02 19:19:53 UTC <tgeeky_> the fact that such a statement isn't totally absurd in principle is amazing (haskell gods)
2012-08-02 19:20:14 UTC <byorgey> hehe
2012-08-02 19:20:36 UTC <byorgey> except that no one has any idea how to quantify "ease of use" =)
2012-08-02 19:20:50 UTC <tgeeky_> you could easily write code which just appliest INLINE and NOINLINE to each function, does a performance test, and picks the fastest
2012-08-02 19:20:58 UTC <tgeeky_> byorgey: yeah, but we can quantify performance
2012-08-02 19:20:59 UTC <luite> but it would be nice if ghc could do a little more global optimization by itself
2012-08-02 19:21:12 UTC <luite> without all this guidance
2012-08-02 19:21:29 UTC <edwardk> its hard to do so in a 'work safe' manner, in that you can do lots of optimizations that are pessimizations in many use cases
2012-08-02 19:21:31 UTC <tgeeky_> the key is building the most guidence from the least information :o
2012-08-02 19:21:50 UTC <tgeeky_> i think I spelled that one wrong
2012-08-02 19:22:01 UTC <edwardk> another fun one to try in ghcjs would be vector-algorthms
2012-08-02 19:22:23 UTC <edwardk> vector-algorithms overoaded ghc's inlining ability at one point
2012-08-02 19:22:35 UTC <luite> oh interesting
2012-08-02 19:22:52 UTC <edwardk> at some point the simons added a specialization/inlining cap
2012-08-02 19:22:58 UTC <edwardk> and vector algorithms went _way_ over it
2012-08-02 19:23:56 UTC <luite> right, this fusion that only works with agressive inlining doesn't look terribly scabale
2012-08-02 19:24:05 UTC <luite> scalable
2012-08-02 19:24:16 UTC <tgeeky_> i read an interesting thing on haskell weekly about explicit un-sharing
2012-08-02 19:24:25 UTC <tgeeky_> which I found interesting
2012-08-02 19:25:02 UTC <luite> someone mailed me this week about how they could help with ghcjs, i said test/benchmark suite, i hope they do it :)
2012-08-02 19:27:19 UTC <edwardk> yeah sclv explained it at some point, not sure about the current banter
2012-08-02 19:27:35 UTC <edwardk> how much can ghcjs handle at this point anyways?
2012-08-02 19:27:41 UTC <edwardk> i haven't really looked at it
2012-08-02 19:42:40 UTC <luite> edwardk: uh well, the current version can run diagrams, so it does support a fair bit, like foreign pointers with finalizers for bytestring, and threading with mvars
2012-08-02 19:44:28 UTC <luite> but it uses javascript closures, so it's probably rather leaky on most (all?) js engines, if you only keep a thunk with one free variable, it will probably hold on the whole javascript closure that contains it
2012-08-02 19:44:48 UTC <luite> and it's tricky to keep track of live heap objects to run finalizers
2012-08-02 19:46:40 UTC <luite> since javascript has no way to do weak references
2012-08-02 19:48:45 UTC <alpounet> you already did an insane amount of work luite
2012-08-02 19:48:48 UTC <alpounet> congrats on that
2012-08-02 19:49:26 UTC <luite> nah 99% of this was done by victor nazarov and hamish mackenzie
2012-08-02 19:49:58 UTC <luite> but if this new heap thing works out, it will probably be more or less a complete rewrite
2012-08-02 19:52:21 UTC <luite> alpounet: lack of tail calls is annoying :(
2012-08-02 19:52:34 UTC <luite> since most of stg assumes that you have them
2012-08-02 19:53:03 UTC <alpounet> you'll just end up writing your own JS engine and then submiting it to the major browsers
2012-08-02 19:53:07 UTC <luite> hehe
2012-08-02 19:53:25 UTC <luite> i want to experiment with dynamic translation one day
2012-08-02 19:53:37 UTC <luite> from stg to machine code or something
2012-08-02 19:55:04 UTC <luite> alpounet: it does call depth counting now, and throws back to the trampoline when depth has been reached. but i try to do as much regular function calls as possible, so it's not completely cps
2012-08-02 19:56:12 UTC <alpounet> luite, are the different js engines consistent in the way they treat js code?
2012-08-02 19:56:22 UTC <alpounet> or do you have to cope with their inconsistency as well?
2012-08-02 19:56:29 UTC <luite> but of course if you do x = a(y); ... then a may throw somehwere, so you have to push a continuation in case it does throw
2012-08-02 19:56:52 UTC <luite> alpounet: nah that's relatively consistent
2012-08-02 19:57:18 UTC <luite> maximum call stack is rather variable
2012-08-02 19:57:37 UTC <luite> but most browsers can handle 10000 at least
2012-08-02 19:57:43 UTC <luite> the modern ones all can
2012-08-02 19:59:34 UTC <luite> it's also annoying that javascript doesn't have suspensions, you need to push all arguments on the stack, bah... and no jumping back to the middle of functions either
2012-08-02 20:01:58 UTC <luite> i'm trying eager blackholing now, that seems easier than lazy
2012-08-02 20:03:24 UTC <luite> but probably slower (?)
2012-08-02 20:05:16 UTC <luite> at least as i understand it, with eager blackholing, you replace the thunk function with blackhole immediately when you evaluate it. with lazy you only do that when switching to another thread
2012-08-02 20:06:27 UTC <luite> anyway i don't really have an idea what i'm doing
2012-08-02 20:17:05 UTC <alpounet> hah
2012-08-02 20:17:13 UTC <alpounet> as long as you're having some kind of fun it's cool i guess
2012-08-02 20:30:53 UTC <luite> :)
2012-08-02 21:24:18 UTC <fryguybob> There is an airshow next door.  F-16s are loud...
2012-08-02 21:58:58 UTC <tgeeky_> not as loud as F22s
2012-08-02 21:59:15 UTC <tgeeky_> (I live near Lockheed Martin's Atlanta facility, which is where they make them)
2012-08-02 21:59:32 UTC <tgeeky_> they are notoriously loud (and larger than you think)
2012-08-02 21:59:44 UTC <tgeeky_> I can sympathize :)
2012-08-02 22:00:37 UTC <fryguybob> They stopped, but now there is some harddrive going bad right next to me.
2012-08-02 22:10:34 UTC <alpounet> luite, why are you guys (with chrisdone) not working together on a haskell->js compiler?
2012-08-02 22:10:49 UTC <tgeeky_> chris done is a free spirit!
2012-08-02 22:10:54 UTC <luite> because chrisdone should work on ghcjs ;p
2012-08-02 22:11:26 UTC <luite> nah chrisdone is going for faster results, doing a subset of haskell, generating small readable code
2012-08-02 22:12:24 UTC <alpounet> readable as opposed to blazingly fast?
2012-08-02 22:13:09 UTC <luite> to being a buch of unreadable array manipulations generated by macros for low level operations
2012-08-02 22:13:45 UTC <alpounet> hah
2012-08-02 22:13:51 UTC <alpounet> got it
2012-08-02 22:17:38 UTC <alpounet> luite, so your goals are not compatible?
2012-08-02 22:19:23 UTC <luite> they're similar, but i think chrisdone wants to have typesafer way to do javascript
2012-08-02 22:19:29 UTC <luite> and i want haskell
2012-08-02 22:20:01 UTC <luite> chrisdone wants lightweight code for regular sites
2012-08-02 22:20:22 UTC <luite> i don't really care that much about code size as long as modern js engines don't choke too much on it
2012-08-02 22:21:16 UTC <luite> chrisdones goal is far more pragmatic, he can use it now, extend stuff... even if it has some problems like memory leaks, for regular sites it should be not too bad
2012-08-02 22:21:32 UTC <luite> but it won't run diagrams
2012-08-02 22:25:30 UTC <alpounet> luite, and i guess it's not possible for you guys to kind of find a common agreement in between what you do now? :p
2012-08-02 22:26:00 UTC <alpounet> it's "sad" to see you doing many similar stuffs
2012-08-02 22:26:11 UTC <luite> it's a bit difficult, chrisdone compiles directly from haskell AST
2012-08-02 22:26:20 UTC <luite> ghcjs from STG
2012-08-02 22:26:56 UTC <alpounet> ah yeah right
2012-08-02 22:26:59 UTC <luite> STG benefits from all the core transformations that ghc does, like inlining and specialization
2012-08-02 22:27:08 UTC <luite> but the code is not close to the original haskell anymore
2012-08-02 22:28:45 UTC <luite> if you have STG, you automatically get support for all of haskell (at least what you want to support within your RTS), and the current ghcjs makes a fairly direct transformation of stg to js
2012-08-02 22:28:57 UTC <luite> using js closures
2012-08-02 22:37:26 UTC <alpounet> ok
2012-08-02 22:37:34 UTC <luite> see he wants to get stuff done
2012-08-02 22:38:02 UTC <alpounet> yeah
2012-08-02 22:38:09 UTC <alpounet> and waits for you to rock the hell out of ghcjs
2012-08-02 22:45:34 UTC <luite> :(
2012-08-02 22:45:49 UTC <luite> i need to find someone who'd pay for ghcjs :p
2012-08-03 03:07:32 UTC <tgeeky_> byorgey: have an hour to spare?
2012-08-03 03:52:38 UTC <tgeeky_> just for reference, has hac phi started yet?
2012-08-03 03:52:42 UTC <tgeeky_> officially or not?
2012-08-03 03:54:50 UTC <mgsloan> not yet, tomorrow!
2012-08-03 04:01:12 UTC <edwardk> i'm frantically trying to finish the design of lens before i get there ;)
2012-08-03 04:01:22 UTC <edwardk> it can't start yet!
2012-08-03 04:01:24 UTC <tgeeky_> hehe!
2012-08-03 04:02:48 UTC <tgeeky_> edwardk: I have run some caluclations (I calculcated the coefficients of gerard t'hooft's lagragian's, and stuffed it into a single coupling constant sqrt(-g))
2012-08-03 04:02:58 UTC <edwardk> gesundheit
2012-08-03 04:03:06 UTC <tgeeky_> hehe
2012-08-03 04:03:10 UTC <tgeeky_> gerard t'hooft = nobel winner
2012-08-03 04:03:17 UTC <mgsloan> yeah, I'm thinking about / somewhat working on my presentation for tomorrow
2012-08-03 04:03:35 UTC <edwardk> i haven't started
2012-08-03 04:03:41 UTC <tgeeky_> he wrote a theory which was conformal (the base symmetry of string theory) -- the general lagrangian for any number of dimensions
2012-08-03 04:03:46 UTC <edwardk> i need to break up makeLenses into makeLenses, makeIso and makeClassy
2012-08-03 04:03:50 UTC <tgeeky_> but it has *no* real paramters
2012-08-03 04:03:56 UTC <tgeeky_> it has only one imaginary paramter
2012-08-03 04:04:01 UTC <edwardk> and then i need to get indexed traversals into the package
2012-08-03 04:04:18 UTC <tgeeky_> edwardk: anyway, I have run lots of calculations with lots of different paramters, including many popular choices of dimensions
2012-08-03 04:04:23 UTC <edwardk> ah
2012-08-03 04:04:40 UTC <tgeeky_> and it seems like something very strange is going on in the dimension range 24..32
2012-08-03 04:04:55 UTC <edwardk> i have no frame of reference, so i'll sit here and smile and nod
2012-08-03 04:05:02 UTC <tgeeky_> in particular, the theory suddenly starts spitting out results which mix up *all* of the quadratic imaginary fields (instead of just the sqrt(-1) field)
2012-08-03 04:05:36 UTC <tgeeky_> edwardk: this list: http://en.wikipedia.org/wiki/Stark%E2%80%93Heegner_theorem
2012-08-03 04:05:50 UTC <tgeeky_> sqrt(-1) == sqrt(-4) == Gaussian integers = complex i = sqrt(-1) lattice
2012-08-03 04:06:07 UTC <edwardk> yep. i've managed to flush almost all the number theory i knew
2012-08-03 04:06:12 UTC <edwardk> that confirms it
2012-08-03 04:06:16 UTC <tgeeky_> hehe
2012-08-03 04:06:22 UTC <tgeeky_> edwardk: just think of the complex lattice.
2012-08-03 04:06:29 UTC <tgeeky_> sqrt(-1) is the square lattice
2012-08-03 04:06:35 UTC <tgeeky_> sqrt(-3) is the triangular lattice
2012-08-03 04:09:04 UTC <tgeeky_> anyhoo, for n=28 dimensions (2 more than string theory usually), my fancy algorithim says that his equation does produce elements of those other fields!
2012-08-03 04:09:24 UTC <tgeeky_> that is, the coupling constant that I get (think fine structure constant, but there's only one)
2012-08-03 04:09:46 UTC <tgeeky_> is sitting in the fields: sqrt(-3), sqrt(-4), sqrt(-11), and sqrt(-19)!
2012-08-03 04:09:58 UTC <tgeeky_> how bizarre!
2012-08-03 16:57:36 UTC <edwardkbot> is anyone here at hac phi?
2012-08-03 16:57:46 UTC <edwardkbot> i'm wandering around levine hall, its a ghost town ;)
2012-08-03 17:00:22 UTC <luite> does it start today?
2012-08-03 17:00:43 UTC <edwardk> typically
2012-08-03 17:02:31 UTC <luite> :)
2012-08-03 17:02:57 UTC <edwardk> at least it did the last 3 times i time traveled to this date
2012-08-03 18:53:02 UTC <cheater__> luite.com?
2012-08-03 18:53:06 UTC <cheater__> lol
2012-08-03 18:53:10 UTC <cheater__> i thought it would at least be
2012-08-03 18:53:21 UTC <cheater__> stegeman.com
2012-08-03 18:53:22 UTC <cheater__> :D
2012-08-03 18:53:34 UTC <luite> is already in use
2012-08-03 18:53:41 UTC <cheater__> has a nice ring to it, like a character from seinfeld
2012-08-03 18:54:04 UTC <luite> stegeman meat products has the domain
2012-08-03 19:06:49 UTC <luite> i've never really liked seinfeld though :p
2012-08-03 22:33:31 UTC <fryguybob> booo.  The Github API is pretty weak.
2012-08-03 22:50:24 UTC <luite> hm you're not at hac phi?
2012-08-03 22:58:40 UTC <fryguybob> luite: Sadly no.
2012-08-03 23:00:21 UTC <fryguybob> byorgey: It turns out much of the data isn't settable via the Github API, so all the imported issues will be under the name of the importer and won't have the correct date etc.
2012-08-03 23:00:37 UTC <fryguybob> I can try putting those fields in and see if it just takes it, but it probably won't.
2012-08-03 23:01:39 UTC <fryguybob> An example of an imported issue: https://github.com/fryguybob/DiagramsIssueSandbox/issues/1
2012-08-03 23:01:51 UTC <fryguybob> I still have to get labels and assigned users working.
2012-08-03 23:02:30 UTC <fryguybob> But it should be a matter of small tweaks from here.
2012-08-04 00:18:02 UTC <fryguybob> Comments now work.  I'm not sure why labels are not up.
2012-08-04 00:20:32 UTC <byorgey> fryguybob: yeah, don't worry too much if we can't quite get all the metadata set properly
2012-08-04 00:21:09 UTC <byorgey> fryguybob: can you automatically create closed issues?  The example imported issue you linked to is actually closed on google code
2012-08-04 01:21:42 UTC <fryguybob> byorgey: Yeah, I have not done that bit yet.
2012-08-04 01:21:52 UTC <byorgey> fryguybob: ok, no worries
2012-08-04 01:22:00 UTC <byorgey> fryguybob: got lots of people here interested in diagrams =)
2012-08-04 01:22:05 UTC <byorgey> sad you're not here
2012-08-04 01:22:09 UTC <fryguybob> Woohoo!
2012-08-04 01:22:23 UTC <fryguybob> I wish I could be.
2012-08-04 01:23:45 UTC <byorgey> fryguybob: maybe we'll have to organize a diagrams mini-hackathon sometime prior to next summer.
2012-08-04 01:24:20 UTC <fryguybob> That would be fun
2012-08-04 01:25:07 UTC <fryguybob> In other news Rebekah's cousin is going to be working at the Green Line coffee shop in a week.
2012-08-04 01:25:42 UTC <byorgey> haha, awesome
2012-08-04 01:25:46 UTC <byorgey> fryguybob: which one?
2012-08-04 01:27:30 UTC <fryguybob> She didn't know there was more then one so she didn't disambiguate.
2012-08-04 01:27:49 UTC <byorgey> ah, ok
2012-08-04 01:27:53 UTC <byorgey> they have three locations
2012-08-04 01:28:38 UTC <byorgey> ACTION will now accost random Green Line employees asking whether they have a cousin-in-law named Ryan
2012-08-04 01:28:44 UTC <byorgey> it won't be awkward at all
2012-08-04 01:29:04 UTC <fryguybob> Ha, well if you did find the right one, he would think it was awesome.
2012-08-04 01:29:23 UTC <fryguybob> He is fun to talk Calculus and ancient languages with.
2012-08-04 01:29:42 UTC <fryguybob> Based on the context of the conversation Rebekah thinks it is the one closest to your house.
2012-08-04 01:30:05 UTC <fryguybob> (as in she described that location and he didn't say that was not where he was going to work.)
2012-08-04 01:30:14 UTC <byorgey> calculus and ancient languages, sounds fun =)
2012-08-04 01:30:20 UTC <byorgey> ok, cool
2012-08-04 01:30:29 UTC <byorgey> if there are any new employees at our location I will notice.
2012-08-04 01:30:40 UTC <fryguybob> He has crazy blond curly hair.
2012-08-04 01:31:00 UTC <byorgey> noted.
2012-08-04 03:20:27 UTC <tgeeky> has anyone seen my cousin-in-law, Ryan?
2012-08-04 16:14:51 UTC <fryguybob> byorgey: I'm about to declare the import good enough.  For some reason I can't get it to close an issue automatically, but that will be easy to do by hand.  They will all have some sort of tag that makes it clear that it is closed.
2012-08-04 16:15:37 UTC <fryguybob> Can someone look for any obvious issues with the top four issues here: https://github.com/fryguybob/DiagramsIssueSandbox/issues?page=1&state=open
2012-08-04 17:09:56 UTC <luite> doesn't look so bad :)
2012-08-04 17:47:02 UTC <fryguybob> ACTION does a final round of testing...
2012-08-04 17:51:45 UTC <fryguybob> Ah, it appears the spec lies.
2012-08-04 18:16:46 UTC <fryguybob> byorgey: I think I'm ready to push the issues.  I'll pull down the one that just showed up first though.
2012-08-04 18:41:54 UTC <byorgey> fryguybob: yay! thanks!
2012-08-04 18:42:16 UTC <fryguybob> It looks like everything worked except it lost one comment due to a random internal server error
2012-08-04 18:42:35 UTC <byorgey> not bad!
2012-08-04 18:43:00 UTC <fryguybob> Yeah.  Good thing I didn't just try to do both halves in python :D
2012-08-04 18:43:08 UTC <byorgey> hehe
2012-08-04 18:43:41 UTC <fryguybob> We should turn off the google code issues now.  I don't think I have access to that.
2012-08-04 18:44:17 UTC <byorgey> I'll see if there's a way to make it read-only
2012-08-04 18:44:19 UTC <luite> :r
2012-08-04 18:44:54 UTC <fryguybob> :help
2012-08-04 18:46:17 UTC <fryguybob> byorgey: I didn't bother with importing the milestone stuff and in the google code an issue could be tagged as multiple projects, so there was some small data loss.
2012-08-04 18:46:25 UTC <luite> hm my video driver is glitchy again, sometimes it doesn't refresh the terminal
2012-08-04 18:49:29 UTC <fryguybob> It's a good thing issues and comments to github are not posted here like commits :D
2012-08-04 19:10:05 UTC <tgeeky> byorgey: how's the hackathon going?
2012-08-04 19:11:24 UTC <mgsloan> good! we've got a few people diagrams-ing away
2012-08-04 19:11:35 UTC <mgsloan> one guy's done scale-invariant diagrams (for arrow heads and the like)
2012-08-04 19:11:51 UTC <mgsloan> one guy's working on adding animation support to diagrams-ghci
2012-08-04 19:12:35 UTC <luite> any pics of the hackathon?
2012-08-04 19:12:51 UTC <mgsloan> I guess I could take some :D  Tubad I didn't bring my t3i
2012-08-04 19:13:05 UTC <mgsloan> (I dunno if I reported that it came back to life a few days after getting turbo soaked)
2012-08-04 19:14:40 UTC <luite> oh cool
2012-08-04 19:15:06 UTC <luite> my mother has one too now, i like it, far better screen than mine
2012-08-04 19:15:16 UTC <luite> and live view is usable for manual focussing
2012-08-04 19:15:35 UTC <luite> much more precice with 5x or 10x live view than with viewfinder
2012-08-04 19:20:42 UTC <fryguybob> luite: Nice.  I've only played with early SLR liveview and they had a lot of problems.
2012-08-04 19:20:53 UTC <luite> focus is still rather slow
2012-08-04 19:21:06 UTC <luite> but most new slrs have 640x480 screens, or better
2012-08-04 19:22:31 UTC <luite> for macro it's particularly useful, very accurate manual focussing, no mirror slap
2012-08-04 19:24:43 UTC <luite> but better bring an extra battery if you want to use it extensively :)
2012-08-04 20:29:27 UTC <mgsloan> luite: some cell phone pics here https://plus.google.com/103514231937116060754/posts
2012-08-04 20:30:24 UTC <luite> ah i recognize byorgey
2012-08-04 20:30:31 UTC <luite> edwardk is the guy with the small laptop right?
2012-08-04 20:31:38 UTC <tgeeky> lol
2012-08-04 20:31:40 UTC <tgeeky> is there a child there?
2012-08-04 20:32:37 UTC <tgeeky> mgsloan: which one is the guy who made "cyclotomic"
2012-08-04 20:35:53 UTC <byorgey> tgeeky: Scott Walck is the balding one in a pink shirt in the second photo
2012-08-04 20:36:28 UTC <tgeeky> byorgey: is daniel the one standing up and drinking in that photo?
2012-08-04 20:36:48 UTC <byorgey> tgeeky: yes, there is an 8-year old learning Haskell =)
2012-08-04 20:36:51 UTC <luite> i don't recognize anyone else :( which are the ones i should know?
2012-08-04 20:36:59 UTC <byorgey> luite: I've tagged a few people now
2012-08-04 20:37:03 UTC <tgeeky> luite: brent is the chillaxing guy
2012-08-04 20:37:11 UTC <byorgey> tgeeky: yes, daniel is the one standing up drinking
2012-08-04 20:37:55 UTC <alpounet> hah
2012-08-04 20:37:58 UTC <luite> ah, doug beardsley, mightybyte, doesn't look so mighty next to edwardk
2012-08-04 20:38:25 UTC <tgeeky> if that's the leftmost guy in the first pic
2012-08-04 20:38:34 UTC <alpounet> would have enjoyed being around
2012-08-04 20:38:35 UTC <luite> yeah green shirt
2012-08-04 20:38:36 UTC <tgeeky> it looks a tiny bit like justin timberlake from that angle :o
2012-08-04 20:43:20 UTC <luite> byorgey/mgsloan: ah gershomb is there, tell him i like his changes to jmacro that i requested in june, but that i'm going to bug him again to make identifier generation more flexible (shorter ids, restart sequence for local vars)
2012-08-04 20:43:24 UTC <luite> :)
2012-08-04 20:43:49 UTC <tgeeky> tell all of those people to install IRC damnit!
2012-08-04 20:44:55 UTC <luite> i have to admit that i don't even know most real names
2012-08-04 21:15:12 UTC <tgeeky> byorgey: can you make sure scott checks his email sometime in the next hour or eight? Hopefully he's the one at Lebanon Valley
2012-08-04 21:22:46 UTC <tgeeky> s/make sure/ask
2012-08-04 21:38:20 UTC <byorgey> tgeeky: ok, will do
2012-08-04 21:39:36 UTC <tgeeky> maybe even try to convince him to install an IRC client so we can work on here in the future
2012-08-04 21:39:40 UTC <tgeeky> bbiaf
2012-08-04 23:18:01 UTC <byorgey> hrrrrm, I can't find any way to give a publicly accessible URL that shows all of an organization's issues at once
2012-08-04 23:28:02 UTC <byorgey> oh well
2012-08-04 23:36:52 UTC <fryguybob> byorgey: Oh, strange.
2012-08-04 23:37:27 UTC <byorgey> yeah, you can only see all the issues at once on your "dashboard" if you are (a) logged in AND (b) a member of the diagrams organization
2012-08-04 23:37:41 UTC <byorgey> but the individual issue trackers are publicly accessible.
2012-08-04 23:40:08 UTC <fryguybob> I suppose you could make your own page that aggrigates it all.
2012-08-05 00:04:55 UTC <luite> everyone still programming there? :)
2012-08-05 00:07:59 UTC <alpounet> luite, hey, how is shapr's gsoc going by the way?
2012-08-05 00:08:23 UTC <luite> he's still working on it
2012-08-05 00:09:24 UTC <luite> it's not going at incredible speed... but i think something usable could come out of it
2012-08-05 00:11:07 UTC <alpounet> cool :)
2012-08-05 00:11:18 UTC <alpounet> will he likely continue working on it after the GSoC ends?
2012-08-05 00:12:02 UTC <luite> dunno
2012-08-05 00:12:25 UTC <luite> i think he expects to be busy with classes
2012-08-05 00:12:35 UTC <alpounet> ok
2012-08-05 00:14:25 UTC <luite> probably better to ask him :)
2012-08-05 01:22:34 UTC <byorgey> no more programming at the moment, everyone has gone to dinner
2012-08-05 01:22:42 UTC <byorgey> we shall resume tomorrow =)
2012-08-05 01:40:58 UTC <luite> no 24h coding sessions? slackers!
2012-08-05 01:42:09 UTC <luite> now why does ghc have so many primops
2012-08-05 01:45:54 UTC <alpounet> did i mention i can't stand the time API?
2012-08-05 01:45:56 UTC <alpounet> well, done
2012-08-05 01:46:31 UTC <alpounet> everytime i have to use it i'm like "wait, no, i still have that other thing i can write before opening the time haddocks and writing that time code"
2012-08-05 01:53:27 UTC <byorgey> alpounet: it is pretty difficult to use.
2012-08-05 01:53:43 UTC <byorgey> I think some better documentation and a tutorial would go a long way.
2012-08-05 01:53:51 UTC <alpounet> yeah...
2012-08-05 01:54:05 UTC <byorgey> I think the API itself is fairly good, given how complicated it is to deal with time properly
2012-08-05 01:54:19 UTC <alpounet> it's been written with too much interest in accuracy/preciseness and not enough in usability, in my opinion
2012-08-05 01:54:34 UTC <alpounet> precision* uh
2012-08-05 01:57:25 UTC <luite> i usually do not have enough recall of the api :p
2012-08-05 01:58:08 UTC <luite> only 300 more primops to implement...
2012-08-05 01:58:43 UTC <alpounet> same yeah, i just can't remember any bit of the API, thus my mention to opening the haddocks
2012-08-05 02:01:55 UTC <luite> meh you didn't get my information retrieval (or classification algorithms) reference :p
2012-08-05 02:03:59 UTC <alpounet> indeed, sorry
2012-08-05 02:04:17 UTC <alpounet> i believe we're in the same timezone
2012-08-05 02:04:52 UTC <alpounet> so you have an idea why i didn't :p
2012-08-05 02:07:01 UTC <luite> hehe
2012-08-05 02:07:44 UTC <luite> france, right?
2012-08-05 02:07:53 UTC <alpounet> yeah
2012-08-05 02:08:32 UTC <alpounet> will enjoy the sea tomorrow, so i'm off to bed
2012-08-05 02:08:39 UTC <alpounet> night guys!
2012-08-05 20:46:55 UTC <mgsloan> byorgey: diagrams-ghci now prints nicer errors, supports saving and restoring expressions, and can display normal haskell values mixed with diagrams
2012-08-05 20:47:08 UTC <mgsloan> e.g.  map circle [1..10] actually draws list syntax around 10 circles
2012-08-05 20:47:33 UTC <mgsloan> zip [1..] $ map circle [1..10],  draws cicles paired with their size
2012-08-05 20:48:17 UTC <tgeeky> pics?
2012-08-05 20:52:00 UTC <luite> is hac phi still going?
2012-08-05 20:54:23 UTC <mgsloan> I left a few hrs before the end of yesterday (had to get home - starting work tomorrow)
2012-08-05 20:54:30 UTC <mgsloan> I think it's just barely still going
2012-08-05 20:54:35 UTC <mgsloan> 5 min from the end I think
2012-08-05 20:54:57 UTC <luite> hehe guess i can't expect an updated jmacro then ;p
2012-08-05 20:55:24 UTC <mgsloan> have y'all been following edwardk's lens stuff?
2012-08-05 20:55:28 UTC <mgsloan> it's _awesome_
2012-08-05 20:56:03 UTC <luite> i've been doing other thigns, so i'm way behind
2012-08-05 20:56:49 UTC <mgsloan> pretty much it allows flexibly composing lenses, traversals, folds, and monad actions, all using plain old Prelude (.)
2012-08-05 20:57:28 UTC <mgsloan> it's a system of type synonyms with very good properties of interactions
2012-08-05 20:58:43 UTC <luite> hmm
2012-08-05 21:02:57 UTC <mgsloan> tgeeky: https://github.com/mgsloan/diagrams-ghci/tree/master/screens
2012-08-05 21:03:53 UTC <tgeeky> i have been following, but haven't yet used
2012-08-05 21:04:01 UTC <mgsloan> https://github.com/mgsloan/diagrams-ghci/blob/master/screens/2012-08-05-140016_1280x800_scrot.png
2012-08-05 21:04:18 UTC <mgsloan> yeah, I think I'm going to make lenq primarily target it'
2012-08-05 21:04:33 UTC <mgsloan> before using a subset of Haskell to describe lenses / bijections etc just didn't feel clean
2012-08-05 21:04:40 UTC <mgsloan> now I think it works out beautifully
2012-08-05 21:05:00 UTC <tgeeky> well
2012-08-05 21:05:06 UTC <tgeeky> there are some generalizations in the pipeline
2012-08-05 21:05:08 UTC <tgeeky> multiplate, for one
2012-08-05 21:05:26 UTC <tgeeky> but yeah, I think I might just jump right in
2012-08-05 21:13:48 UTC <mgsloan> gtg!
2012-08-05 22:14:34 UTC <mgsloan> https://github.com/mgsloan/diagrams-ghci/blob/master/screens/2012-08-05-151237_1280x800_scrot.png
2012-08-05 22:18:39 UTC <mgsloan> scratch that; https://github.com/mgsloan/diagrams-ghci/blob/master/screens/2012-08-05-151606_1280x800_scrot.png
2012-08-05 22:21:15 UTC <luite> very cool :
2012-08-05 22:21:17 UTC <luite> :)
2012-08-07 01:11:27 UTC <notthemessiah> anyone get the ghci interpreter working other than mgsloan himself?
2012-08-07 01:11:58 UTC <notthemessiah> whoa redundant acronym
2012-08-07 01:12:04 UTC <notthemessiah> sorry
2012-08-07 01:25:58 UTC <fryguybob> notthemessiah: I don't have a working cairo or I would try.
2012-08-07 01:31:35 UTC <notthemessiah> appreciate the thought
2012-08-07 01:33:31 UTC <fryguybob> do you have a paricular error when you try?
2012-08-07 01:35:37 UTC <notthemessiah> cabal: Could not resolve dependencies:, trying: diagrams-core-0.5.1 (user goal), next goal: dubl-tree (dependency of diagrams-core-0.5.1)
2012-08-07 01:45:03 UTC <fryguybob> notthemessiah: Maybe you just need the latest of all the diagrams reops on github?
2012-08-07 03:06:24 UTC <fryguybob> ACTION goes back to making his lion diagram.
2012-08-07 04:25:12 UTC <fryguybob> progress: http://www.cs.rochester.edu/u/ryates/temp/lion3.pdf
2012-09-21 19:35:57 UTC <luite> oh that's great!
2012-09-21 19:36:09 UTC <luite> OS X has cairo preinstalled, right?
2012-09-21 19:36:18 UTC <luite> (an old version if i remember correctly)
2012-09-21 19:47:28 UTC <byorgey> I don't know
2012-09-21 19:47:40 UTC <byorgey> but anecdotally it's much easier to get just cairo installed than all of gtk
2012-09-21 19:54:23 UTC <pr> the thing about gtk on OS X is that it's not actually clear what the best way to build it is (homebrew? macports? official os x distribution?). and even if you build it according to diagrams wiki, i.e. you build it via homebrew, you still may end up with weird errors
2012-09-21 19:54:55 UTC <pr> (what actually failed building for me was gtk2hs)
2012-09-21 20:07:48 UTC <pr> 21:36:18 < luite> (an old version if i remember correctly)
2012-09-21 20:07:57 UTC <pr> yeah, i think it's 1.8.x or something
2012-09-23 16:01:47 UTC <byorgey> sorry for all the noise, trying to get an 0.6 release together =)
2012-09-23 16:03:58 UTC <ClaudiusMaximus> \o/
2012-09-23 16:04:20 UTC <byorgey> hi ClaudiusMaximus, good to have you around again =)
2012-09-23 16:04:23 UTC <ClaudiusMaximus> ACTION -> afk, rehearsing performance for /dev/art paris 2nd october
2012-09-23 16:04:37 UTC <byorgey> cool, will it be recorded?
2012-09-23 16:05:07 UTC <ClaudiusMaximus> fingers crossed
2012-09-23 16:05:19 UTC <ClaudiusMaximus> giving a talk and a mini live-coding perf in C
2012-09-23 16:05:54 UTC <ClaudiusMaximus> will have my own recording, but hopefully they have a nice camera + cameraperson to take care of that side of things too
2012-09-23 16:06:42 UTC <ClaudiusMaximus> was in hospital for 2 months - extreme technology detox...  but i feel a lot better now  so it worked out ok
2012-09-23 16:06:49 UTC <ClaudiusMaximus> some pics on my website, http://mathr.co.uk
2012-09-23 16:07:10 UTC <ClaudiusMaximus> gotta practice my shizzle, hope to code up some diagrams mid-late october / early november
2012-09-23 16:07:23 UTC <ClaudiusMaximus> laters, keep up the coding!
2012-09-23 16:07:33 UTC <byorgey> ClaudiusMaximus: cool, good luck!
2012-09-23 16:07:49 UTC <ClaudiusMaximus> ty
2012-09-23 16:07:58 UTC <byorgey> ClaudiusMaximus: very glad to hear you're doing better now
2012-09-23 17:39:52 UTC <ClaudiusMaximus> byorgey: it feels good to be healthy again :)
2012-09-23 17:40:44 UTC <ClaudiusMaximus> now i have ~8 days to prepare a presentation - as LaTeX/Beamer n00b i might give up and just do it plain text with a large font in a text editor...
2012-09-23 17:40:50 UTC <ClaudiusMaximus> and take screenshots
2012-09-23 17:40:55 UTC <luite> oh it's not that bead
2012-09-23 17:40:56 UTC <luite> bad
2012-09-23 17:41:01 UTC <luite> if you have some examples to work from
2012-09-23 17:41:39 UTC <luite> (acutally it's pretty bad but you learn to accept it ;p )
2012-09-23 17:41:50 UTC <ClaudiusMaximus> the main problem i have so far with the defaults is: text is way too small, itemized lists cut off the start of my long item labels - essentially i want 3 or 4 short lines of big text per slide
2012-09-23 17:42:14 UTC <ClaudiusMaximus> so oldschool text editor might end up quicker, it's only an hour so ~30 slides should be way too many :P
2012-09-23 17:42:40 UTC <ClaudiusMaximus> especially as it's in france and i'll be speaking english...
2012-09-23 17:42:57 UTC <ClaudiusMaximus> ...so will probably have to speak slower than my normal hyperactiveness
2012-09-23 17:47:44 UTC <ClaudiusMaximus> and i definitely need to rehearse more, currently sounds like http://mathr.co.uk/devart/session-2012-09-23-162612-excerpt-finale.ogg 3mins after 45mins of almost white noise and mic feedback,,,  (compared with the last real performance: http://archive.org/details/ClaudiusMaximus_-_Live_At_The_Schip_2012-02-18 )
2012-09-23 17:48:22 UTC <ClaudiusMaximus> now i have an urgent need for dinner, bbl
2012-09-24 14:35:38 UTC <luite> ooh fun combinatorics mailing list :)
2012-09-24 14:37:10 UTC <byorgey> =)
2012-09-24 21:41:37 UTC <fryguybob> Gah, so little time to teach so much...
2012-09-24 23:32:25 UTC <byorgey> fryguybob: distill it to the essentials.
2012-09-24 23:32:35 UTC <byorgey> then, ruthlessly cut material.
2012-09-24 23:33:55 UTC <luite> practice talking twice as fast
2012-09-24 23:36:23 UTC <fryguybob> luite: Ok, I'll tell the students to practice letting it soak in twice as fast too :D
2012-09-24 23:38:23 UTC <byorgey> an important life skill, that
2012-09-24 23:49:49 UTC <luite> f  lv t th vwls  cn tlk  lt fstr
2012-09-24 23:49:58 UTC <luite> hmm, that doesn't work very well in english
2012-09-24 23:50:06 UTC <luite> if you leave out the vowels you can talk a lot faster
2012-09-24 23:50:26 UTC <luite> in dutch it probably would've been readable
2012-09-24 23:51:52 UTC <fryguybob> I could just skip words and scroll code for the whole time.
2012-09-24 23:52:48 UTC <luite> let's skip the next 15 slides, read chapters 3-27 at home before the next lexture
2012-09-24 23:52:51 UTC <luite> lecture
2012-09-24 23:54:35 UTC <luite> or like those math books that require nothing but basic calculus and mathematical maturity, and then go through 4 years worth of definitions and theorems in 25 pages before starting with really complicated stuff
2012-09-25 02:52:43 UTC <luite> blah, /me has done too much coding lately, stressed
2012-09-25 03:11:34 UTC <mgsloan> :(
2012-09-25 13:16:09 UTC <fryguybob> ACTION is disappointed that byorgey doesn't want to regression test the irc logs.
2012-09-25 13:16:42 UTC <byorgey> hahaha
2012-09-25 13:18:13 UTC <byorgey> maybe we should write a script to automatically build a syntax-highlighted, searchable version of the IRC logs and stick it on the website
2012-09-25 13:18:25 UTC <byorgey> then we would have to regression test them =)
2012-09-25 13:19:06 UTC <fryguybob> Yeah, or template haskell into diagrams and output a word cloud.
2012-09-25 13:19:17 UTC <byorgey> oh, nice =)
2012-09-25 13:21:53 UTC <byorgey> haha, I pasted the logs into wordle.net and got a word cloud with an enormous "UTC" smack in the middle, flanked by some nicks and lots of tiny other words =)
2012-09-25 13:21:58 UTC <byorgey> then firefox crashed =(
2012-09-25 13:22:01 UTC <fryguybob> HA
2012-09-25 13:22:35 UTC <fryguybob> Fitting that irc is dominated by time :D
2012-09-25 13:26:09 UTC <ClaudiusMaximus> vaguelly related: http://archive.org/details/ClaudiusMaximus_-_Haskell_IRC_Fractal )
2012-09-25 13:26:56 UTC <fryguybob> ClaudiusMaximus: Ha, that's a fun idea.
2012-09-25 13:30:31 UTC <byorgey> http://www.wordle.net/show/wrdl/5762752/%23diagrams_logs
2012-09-25 13:31:30 UTC <ClaudiusMaximus> byorgey: will that crash my firefox?
2012-09-25 13:31:56 UTC <byorgey> ClaudiusMaximus: I hope not.  Mine seems unusually buggy.
2012-09-25 13:32:08 UTC <byorgey> ClaudiusMaximus: awesome video =)
2012-09-25 13:32:31 UTC <ClaudiusMaximus> byorgey: ty
2012-09-25 13:32:48 UTC <byorgey> ClaudiusMaximus: how did you make it?
2012-09-25 13:32:55 UTC <ClaudiusMaximus> byorgey: the current iteration (before my 2 months abscence in hospital) started looking more like http://img26.imageshack.us/img26/7627/gg2large.png
2012-09-25 13:32:56 UTC <fryguybob> Gah... fire alarm.
2012-09-25 13:33:04 UTC <ClaudiusMaximus> with circles fading out as they get larger
2012-09-25 13:33:16 UTC <byorgey> oh, neat =)
2012-09-25 13:33:20 UTC <byorgey> fryguybob: run!!
2012-09-25 13:34:04 UTC <ClaudiusMaximus> byorgey: markov chain type thing, filter logs to strip dates/nicks and pick top 1000 words, then make a chain of which words follow which, and build graph-directed iterated function system from it
2012-09-25 13:34:27 UTC <ClaudiusMaximus> byorgey: https://gitorious.org/maximus/graphgrow code
2012-09-25 13:34:42 UTC <byorgey> oh! woah
2012-09-25 13:34:43 UTC <ClaudiusMaximus> it's the one with the gtk toy diagrams node editor thing i started too
2012-09-25 13:34:48 UTC <byorgey> right, I remember that
2012-09-25 13:35:09 UTC <byorgey> very cool!
2012-09-25 13:35:19 UTC <ClaudiusMaximus> then use symbolic sequences to renormalize periodically to visible parts, to avoid needing more than Double precision
2012-09-25 13:35:29 UTC <ClaudiusMaximus> (that's the clever bit imo)
2012-09-25 13:37:59 UTC <byorgey> right, I was wondering how you figure out when to cut off
2012-09-25 13:38:19 UTC <byorgey> clearly you can't just render the whole thing including all the exponentially tiny nested nested nested nested ... words
2012-09-25 13:42:36 UTC <ClaudiusMaximus> there's two modes, one where there's a "pixel size cutoff"
2012-09-25 13:42:52 UTC <ClaudiusMaximus> and another that tries to render "as detailed as possible without dropping frames"
2012-09-25 13:43:13 UTC <ClaudiusMaximus> which latter mode relies on OpenGL sync-to-vblank being operational and behaving sensibly, and is still buggy/needs work
2012-09-25 13:43:19 UTC <fryguybob> ACTION is back.
2012-09-25 13:44:05 UTC <ClaudiusMaximus> next step is to split the generation / animation into two phases, so the animation + culling is done on the GPU and the CPU just uploads new points/circles when they become visible
2012-09-25 13:44:49 UTC <ClaudiusMaximus> but that's an optimisation, and so many other projects....
2012-09-25 13:45:25 UTC <ClaudiusMaximus> lunch, bbiab
2012-09-25 13:48:56 UTC <byorgey> enjoy lunch
2012-09-25 13:49:16 UTC <byorgey> fryguybob: they put out the fire that quickly?
2012-09-25 13:50:10 UTC <fryguybob> byorgey: I know.  Probably the ECE people letting out magic smoke.
2012-09-25 13:52:16 UTC <byorgey> how unprofessional.
2012-09-25 14:16:28 UTC <byorgey> https://github.com/diagrams/diagrams-lib/issues/49
2012-09-26 06:08:17 UTC <cmears> I just submitted a pull request for this pretty gallery example: http://www.csse.monash.edu.au/~cmears/cicrle.png
2012-09-26 06:20:10 UTC <mgsloan> pretty!  L-system?
2012-09-26 06:20:44 UTC <cmears> No idea (:
2012-09-26 06:23:46 UTC <mgsloan> http://en.wikipedia.org/wiki/L-system
2012-09-26 06:24:00 UTC <mgsloan> now that I think of it - silly question
2012-09-26 06:25:00 UTC <mgsloan> (as L systems would really just be a way of describing the recursion you used)
2012-09-26 06:40:29 UTC <luite> yay just over 10% of native ghc speed now in firefox \o/
2012-09-26 06:42:17 UTC <luite> might already be fast enough to run diagrams properly client side
2012-09-26 06:48:21 UTC <luite> how do generational garbage collectors usually track writes to the old generation?
2012-09-26 08:32:33 UTC <ClaudiusMaximus> nice Pythagoras tree, bonus points if you get the diagrams version animatable (changing ratios of the triangle)  (referring to cmears' cicrle.png)
2012-09-26 08:33:17 UTC <ClaudiusMaximus> http://en.wikipedia.org/wiki/Pythagoras_tree_%28fractal%29  (well, variant of such)
2012-09-26 14:15:08 UTC <byorgey> ClaudiusMaximus: shouldn't be hard to animate it in principle, though looking at the actual code cmears submitted it has lots of hardcoded magic numbers
2012-09-26 14:15:16 UTC <byorgey> so it would have to be generalized a bit first
2012-09-26 14:54:03 UTC <ClaudiusMaximus> byorgey: http://hpaste.org/75371
2012-09-26 14:54:23 UTC <ClaudiusMaximus> byorgey: a bash/svg version of parameterizable pythagoras tree i wrote a while ago
2012-09-26 14:55:02 UTC <byorgey> ClaudiusMaximus: ah, cool
2012-09-26 14:55:05 UTC <byorgey> doesn't look too bad
2012-09-26 14:56:05 UTC <byorgey> woah, I didn't know you could have here-docs in bash o.O
2012-09-26 14:57:01 UTC <ClaudiusMaximus> $ man bash | cat -n | grep Here\ Documents 1903     Here Documents
2012-09-26 14:57:10 UTC <ClaudiusMaximus> so it's quite a way down the huge man page
2012-09-26 14:57:21 UTC <ClaudiusMaximus> that might actually be broken w.r.t. tabs/spaces
2012-09-26 14:57:38 UTC <byorgey> ClaudiusMaximus: what's with the leading zeros like  0${aa}  ?
2012-09-26 14:57:42 UTC <ClaudiusMaximus> but i figure you just want the algorithm and not to run it
2012-09-26 14:58:21 UTC <ClaudiusMaximus> byorgey: iirc, bc prints out like ".123" instead of "0.123"
2012-09-26 14:59:02 UTC <ClaudiusMaximus> byorgey: which SVG dislikes strongly
2012-09-26 14:59:09 UTC <ClaudiusMaximus> yep, that's exactly the issue
2012-09-26 14:59:26 UTC <byorgey> aha
2012-09-26 14:59:36 UTC <ClaudiusMaximus> (something that should be documented in the source code, but you know my steez ;)
2012-09-26 15:00:25 UTC <byorgey> =)
2012-09-26 15:01:25 UTC <byorgey> yeah, no worries, I'm just trying to understand the algorithm
2012-09-26 17:21:13 UTC <MagneticDuck> hiah
2012-09-26 17:21:20 UTC <MagneticDuck> learning diagrams for the first time
2012-09-26 17:21:26 UTC <MagneticDuck> is it a very bad idea to use diagrams for a game?
2012-09-26 17:22:20 UTC <MagneticDuck> because I, as a good haskell programmer, don't want to use some sort of ugly C library to draw graphics
2012-09-26 17:22:22 UTC <MagneticDuck> :(
2012-09-26 17:22:32 UTC <MagneticDuck> so it'd be nice if I could use diagrams or something
2012-09-26 17:22:37 UTC <MagneticDuck> is it really too slow though?
2012-09-26 17:22:39 UTC <ClaudiusMaximus> MagneticDuck: try gtk-toy examples
2012-09-26 17:22:48 UTC <ClaudiusMaximus> MagneticDuck: sae if they are fast enough for you
2012-09-26 17:22:50 UTC <MagneticDuck> okay
2012-09-26 17:23:01 UTC <ClaudiusMaximus> MagneticDuck: there's some nice particle simulation where you drag a net around
2012-09-26 17:23:26 UTC <MagneticDuck> I see
2012-09-26 17:23:27 UTC <ClaudiusMaximus> depends what kind of game, it should be fine for puzzle type games, but 3d fps shooter probably not
2012-09-26 17:23:45 UTC <MagneticDuck> haha
2012-09-26 17:23:51 UTC <MagneticDuck> I'm not going to make anything complicated
2012-09-26 17:23:55 UTC <MagneticDuck> simple graphics
2012-09-26 17:23:57 UTC <MagneticDuck> I like simple graphics
2012-09-26 17:23:59 UTC <MagneticDuck> :P
2012-09-26 17:24:10 UTC <ClaudiusMaximus> there may already be a tic-tac-toe example
2012-09-26 17:24:13 UTC <ClaudiusMaximus> not sure
2012-09-26 17:24:21 UTC <ClaudiusMaximus> vague memories...
2012-09-26 17:24:28 UTC <MagneticDuck> hn
2012-09-26 17:24:28 UTC <ClaudiusMaximus> maybe that was some FRP thing though
2012-09-26 17:25:28 UTC <ClaudiusMaximus> you'll probably end up using some ugly C library underneath eventually though, but sufficiently hidden behind beautiful haskell veils
2012-09-26 17:27:16 UTC <byorgey> yeah, it should be OK for simple games
2012-09-26 17:27:20 UTC <MagneticDuck> :P
2012-09-26 17:29:19 UTC <MagneticDuck> why would it be slow?
2012-09-26 17:29:28 UTC <MagneticDuck> is there really a whole lot of computation going on?
2012-09-26 17:29:36 UTC <MagneticDuck> processing the data structure
2012-09-26 17:29:41 UTC <MagneticDuck> and rendering it?
2012-09-26 17:30:08 UTC <MagneticDuck> well
2012-09-26 17:30:22 UTC <MagneticDuck> I guess even a small inefficiency
2012-09-26 17:30:26 UTC <MagneticDuck> would have consequences
2012-09-26 17:32:34 UTC <ClaudiusMaximus> afaik each small change requires recomputing the whole thing, as it currently stands (though i believe work is taking place on caching?)
2012-09-26 17:35:09 UTC <ClaudiusMaximus> the good news (from my biased perspective, and also having not paid attention for a couple of months)  is that diagrams is actively developed and looks like it will be for some time, while other alternatives seem slow/stagnant (and you don't want opengl or cairo if you don't want ugly c-style stuff)
2012-09-26 17:41:01 UTC <byorgey> ACTION agrees! =)
2012-09-26 17:41:17 UTC <ClaudiusMaximus> dinner time, bbl
2012-09-26 17:41:29 UTC <byorgey> MagneticDuck: diagrams hasn't really been designed with efficiency in mind.  There's lots of low-hanging fruit efficiency-wise.
2012-09-26 17:41:54 UTC <byorgey> MagneticDuck: but I have seen it used for real-time animation, frame-by-frame
2012-09-26 17:42:08 UTC <byorgey> as long as there's not a ton of stuff in each frame
2012-09-26 17:42:21 UTC <byorgey> and if you run into particular inefficiencies I'm definitely interested in trying to address them
2012-09-26 17:43:08 UTC <luite> great :)
2012-09-26 17:44:11 UTC <luite> byorgey: i can now run simple benchmarks with ghcjs -O2 "only" 10x slower than ghc -O2, with some extra ghcjs optimization later and optimization of diagrams, that could be enough for browser animation :)
2012-09-26 17:44:37 UTC <byorgey> luite: yay!
2012-09-26 17:45:16 UTC <byorgey> luite: Andy Gill is also working on his Sunroof thing, with one explicit goal of supporting diagrams animation in the browser
2012-09-26 17:47:13 UTC <byorgey> it's not as general as ghcjs, but might actually give better results for diagrams since we can compile a diagram directly to special-purpose js running in a canvas, instead of having to actually compile the diagrams libs and all dependencies
2012-09-26 17:48:46 UTC <luite> i'm a bit worried that simple things you take for granted in haskell won't work there, like a zipWith [1..] somehing. or does it work?
2012-09-26 17:49:36 UTC <byorgey> luite: yeah, good question, I have no idea
2012-09-26 17:51:19 UTC <byorgey> strangely enough, the diagrams repo with the most dependencies is diagrams-doc
2012-09-26 17:51:59 UTC <luite> blaze for diagrams-svg is a bit tricky :)
2012-09-26 17:52:11 UTC <byorgey> luite: I bet =)
2012-09-26 17:52:34 UTC <luite> but the rest is not too bad, the GHC front end translates everything to nice and simple core. still a lot of code though
2012-09-26 17:53:24 UTC <luite> but i'm pretty sure the current ghcjs, and haste, fay, don't correctly remove CAFs that are not referenced anymore
2012-09-26 17:53:52 UTC <luite> which, in combination with GHCs let floating, will lead to huge memory leak
2012-09-26 17:53:52 UTC <luite> s
2012-09-26 17:54:33 UTC <byorgey> ah, I see
2012-09-26 17:54:41 UTC <byorgey> that sounds tricky
2012-09-26 17:54:58 UTC <luite> so i'm redoing memory management now with a garbage collector written in js
2012-09-26 18:00:45 UTC <luite> fortunately haskell makes it relatively easy to write a generational collector without hardware support (no write traps needed to mark which old-gen objects might refer to new-gen, since only mutable cells/arrays and thunks can be updated on the heap, at only a few locations in the code)
2012-09-27 02:28:54 UTC <byorgey> argh, I really hate that git can't properly handle moving files
2012-09-27 02:29:31 UTC <shachaf> It can't?
2012-09-27 02:30:26 UTC <byorgey> no, it can't.  There is no way to tell git 'I am moving this file'. It just does its best job to figure out that "gee, file B sure looks similar to what A used to look like, so I'll assume it was moved"
2012-09-27 02:30:53 UTC <byorgey> the problem is that if you move a file and edit it "too much", chances are it won't be able to figure it out and will record it as a wholesale deletion and creation
2012-09-27 02:30:59 UTC <byorgey> and then you lose all the history.
2012-09-27 02:31:44 UTC <byorgey> the workaround of course is to just move the files and commit that, then edit them in a separate commit.  But it's annoying.
2012-09-27 02:31:51 UTC <shachaf> byorgey: git mv?
2012-09-27 02:32:26 UTC <luite> that's a shortcut for remvoing and adding
2012-09-27 02:32:30 UTC <shachaf> Oh, yes.
2012-09-27 02:32:32 UTC <shachaf> I see what you mean.
2012-09-27 02:33:01 UTC <byorgey> shachaf: git mv is a lie.  It is just a wrapper around mv.
2012-09-27 02:33:14 UTC <byorgey> the fact that you put 'git' in front of it pretty much means nothing.
2012-09-27 02:36:42 UTC <shachaf> That doesn't seem right.
2012-09-27 02:37:02 UTC <luite> git isn't about right ;)
2012-09-27 02:38:07 UTC <shachaf> I mean, my test with git seems to indicate differently.
2012-09-27 02:38:38 UTC <luite> it does add it to the index at the new location
2012-09-27 13:11:47 UTC <byorgey> shachaf: hmm, actually, you're right, git mv and mv are certainly different
2012-09-27 13:11:54 UTC <byorgey> perhaps it's improved in more recent version of git
2012-09-27 13:13:20 UTC <ClaudiusMaximus> byorgey: did you figure out hte algotihtm from my script?
2012-09-27 13:51:27 UTC <byorgey> ClaudiusMaximus: yes,
2012-09-27 13:51:31 UTC <byorgey> I think so
2012-09-27 13:51:59 UTC <byorgey> I spent like five minutes trying to generalize the example but failed so I gave up for now
2012-09-27 13:52:04 UTC <byorgey> I have bigger fish to fry =)
2012-09-27 14:15:33 UTC <ClaudiusMaximus> http://www.youtube.com/watch?v=b1QfXQakX2w
2012-09-27 14:18:28 UTC <byorgey> =)
2012-09-27 14:20:49 UTC <luite> :)
2012-09-27 14:22:59 UTC <luite> hm i wonder how common functions with more than 24 arguments are in haskell
2012-09-27 14:24:50 UTC <ClaudiusMaximus> "uncommon"
2012-09-27 14:24:50 UTC <byorgey> wat
2012-09-27 14:24:58 UTC <byorgey> I don't think I've ever seen one.
2012-09-27 14:26:52 UTC <luite> since i use a single 31 bit value to store partial applications, that needs to  contain both the length of the heap/stack frame and a bitmap of pointers in the frame.... i guess i can skip support for now then
2012-09-27 14:27:59 UTC <byorgey> ah, hehe
2012-09-27 14:28:05 UTC <byorgey> yeah, I wouldn't worry about it =)
2012-09-27 14:31:05 UTC <luite> (strictly speaking you could run into the limit much faster if you had lots of unboxed Word64# arguments, since they take up two javascript variables)
2012-09-27 15:19:36 UTC <byorgey> yay, I beat Nikki and the Robots story mode =)
2012-09-27 15:19:41 UTC <byorgey> now back to work!
2012-09-27 16:23:33 UTC <fryguybob> byorgey: You did indeed have bigger fish to fry :D.
2012-09-27 17:29:10 UTC <byorgey> hehehe
2012-09-27 17:29:15 UTC <byorgey> busted!
2012-09-27 19:43:13 UTC <luite> lol my new code generator is 200x faster than the old one at calculating fibonaccis :)
2012-09-27 19:45:04 UTC <luite> booh only 70x faster in firefox
2012-09-27 19:45:53 UTC <alpounet> wow
2012-09-27 19:45:56 UTC <alpounet> what did you change?
2012-09-27 19:46:09 UTC <luite> uh everything
2012-09-27 19:46:26 UTC <luite> rewrite from scratch :)
2012-09-27 19:47:31 UTC <alpounet> uh
2012-09-27 19:47:35 UTC <alpounet> still using the trampoline?
2012-09-27 19:47:39 UTC <luite> yes
2012-09-27 19:48:03 UTC <luite> can't really get around that, until javascript gets tail-call optimization
2012-09-27 19:48:18 UTC <luite> but how it's handled is completely different
2012-09-27 19:48:32 UTC <luite> the evaluation stack is an array now
2012-09-27 19:48:39 UTC <luite> and the heap is also an array
2012-09-27 19:48:51 UTC <luite> and a garbage collector written in javascript is required to clean it up
2012-09-27 19:49:16 UTC <alpounet> what actually make the generated code *that significantly* faster?
2012-09-27 19:49:21 UTC <alpounet> what does*
2012-09-27 19:52:13 UTC <luite> the fact that allocation is handled completely different now
2012-09-27 19:52:52 UTC <alpounet> alright, cool then
2012-09-27 19:52:52 UTC <luite> stack allocation is actually done on a stack (array), instead of by returning javascript closures that capture the required stuff
2012-09-27 19:53:10 UTC <luite> heap allocation is also an array now, which makes it more efficient, but that's not as big a difference
2012-09-27 19:53:16 UTC <alpounet> how does the generate code compare to Fay's?
2012-09-27 19:53:20 UTC <alpounet> generated*
2012-09-27 19:53:35 UTC <luite> 10-40x faster on the n-queens benchmark from the ghc suite
2012-09-27 19:53:54 UTC <luite> even though fay doesn't have trampoline or general tco
2012-09-27 19:54:19 UTC <luite> V8 / IonMonkey
2012-09-27 19:54:19 UTC <luite> GHCJS: 6.2s / 5.0s  ( 26MB / 22MB )
2012-09-27 19:54:19 UTC <luite> Haste: 25s / 71s ( 98MB / 1.8GB)
2012-09-27 19:54:19 UTC <luite> Fay: 63s / 220s ( 49MB / 129MB )
2012-09-27 19:54:19 UTC <luite> GHCJS current generator: 118s / 223s
2012-09-27 19:54:21 UTC <luite> GHC Native: 0.5s (2.6MB)
2012-09-27 19:54:32 UTC <luite> thats the n-queens benchmark on a 12x12 field
2012-09-27 19:57:22 UTC <luite> Haste is a sort-of hybrid, it uses the javascript stack the same way as ghc uses the evaluation stack
2012-09-27 19:57:54 UTC <luite> but that does mean that they can't implement green threads and async io
2012-09-27 20:00:17 UTC <alpounet> wow, ghcjs is really doing great!
2012-09-27 20:00:35 UTC <alpounet> barely 12x native
2012-09-27 20:00:36 UTC <luite> it better be, i spent way too much time ont his already ;p
2012-09-27 20:00:41 UTC <alpounet> it's really not bad i think
2012-09-27 20:00:58 UTC <luite> with javascript tco and pointer tagging, another 2x speedup should be possible
2012-09-27 20:01:06 UTC <luite> i'd be really happy with that
2012-09-27 20:01:20 UTC <alpounet> you still have the fastest impl around
2012-09-27 20:02:22 UTC <luite> ionmonkey also does great with this generator, always faster than v8
2012-09-27 20:02:37 UTC <luite> 10x native here, only 7x or so on the really simple fibs benchmark
2012-09-27 20:02:53 UTC <luite> some v8 dev already wanted to see my code because of the speed difference :)
2012-09-27 20:06:53 UTC <alpounet> hah
2012-09-27 20:30:31 UTC <byorgey> luite: awesome!
2012-09-27 20:42:05 UTC <luite> hm the latest chrome made the old generator much faster, just insatlled the update to 22
2012-09-27 20:42:41 UTC <luite> which takes 50s now (vs 1.2 new gen)
2012-09-27 20:43:01 UTC <luite> still not bad i guess
2012-10-13 22:43:42 UTC <bigfg> hello, i'm trying to understand some compiler error when using Diagrams.Transform
2012-10-13 22:44:05 UTC <bigfg> ACTION pastebins...
2012-10-13 22:44:50 UTC <bigfg> http://hpaste.org/76247
2012-10-13 22:58:30 UTC <fryguybob> bigfg: Can you paste the error too?
2012-10-13 22:58:55 UTC <bigfg> yes sorry
2012-10-13 22:59:11 UTC <bigfg> http://hpaste.org/76249 fryguybob
2012-10-13 23:01:46 UTC <fryguybob> bigfg: I think you need to use v2 instead of p2 to translate.
2012-10-13 23:02:24 UTC <fryguybob> There is a type separation between vectors and points in diagrams.  Vectors are "relative" directions and points are "absolute".
2012-10-13 23:02:46 UTC <fryguybob> http://projects.haskell.org/diagrams/manual/diagrams-manual.html#vectors-and-points
2012-10-13 23:04:17 UTC <bigfg> alright, makes sense
2012-10-13 23:05:12 UTC <bigfg> i don't see p2 in the index-all
2012-10-13 23:05:15 UTC <bigfg> http://hackage.haskell.org/packages/archive/diagrams-lib/0.5.0.1/doc/html/doc-index-All.html
2012-10-13 23:05:40 UTC <bigfg> r2 maybe?
2012-10-13 23:05:52 UTC <bigfg> ACTION tries
2012-10-13 23:06:15 UTC <fryguybob> It's in there:  p2    Diagrams.TwoD.Types, Diagrams.TwoD, Diagrams.Prelude
2012-10-13 23:06:27 UTC <bigfg> err, i don't see v2
2012-10-13 23:06:45 UTC <fryguybob> Oh, yeah r2
2012-10-13 23:07:08 UTC <fryguybob> Which will be d2 in the future.
2012-10-13 23:40:14 UTC <bigfg> why d2?
2012-10-13 23:45:34 UTC <fryguybob> Right now r2 is with doubles, but it could be generalized to include other numbers so d2 would be the specialized version of r2 to doubles.
2012-10-14 00:10:46 UTC <bigfg> wouldn't that overload the [a-z]2 convention too much?
2012-10-14 00:10:49 UTC <bigfg> :p
2012-10-14 00:34:46 UTC <fryguybob> :D
2012-10-14 20:15:05 UTC <fryguybob> We really should have a basic "plot a function in 2d" example.
2012-10-14 21:25:24 UTC <alpounet> yup
2012-10-14 21:59:21 UTC <luite> yes!
2012-10-14 22:00:32 UTC <luite> hm if i keep my sleep schedule as it is now i'll hardly have any jet lag when i arrive in CA ;p
2012-10-14 22:01:11 UTC <fryguybob> I might be the only person who has done that so perhaps it should be "I really need to ..."
2012-10-14 22:03:13 UTC <luite> I've done some javascript plots (zoomable), would be fun if that was possible with diagrams later
2012-10-14 22:04:18 UTC <luite> hm already almost 50 people for bahug
2012-10-14 22:42:30 UTC <bfgun> i'm having trouble scaling text... at which point in the pipeline should i scale it?
2012-10-14 22:43:25 UTC <bfgun> i want to name the vertexes, so i `mconcat $ zipWith translate coordinates texts`
2012-10-14 22:44:09 UTC <bfgun> afterwards i want to apply a scaling function to everyone so i just do `scale 5 $ <previous stuff>`
2012-10-14 22:44:28 UTC <bfgun> ohh i see the problem i think... resolution is fixed on the print
2012-10-14 22:44:32 UTC <bfgun> ACTION tests
2012-10-14 22:45:44 UTC <bfgun> text looks really big anyway :(
2012-10-14 22:47:03 UTC <bfgun> (i'm using a very small scale it seems... maybe if i multiply everything by 10...)
2012-10-14 23:03:54 UTC <fryguybob> bfgun: Humm, I think there is a separte font size attribute.  I haven't done much with text and I usually just tweek things until they work.
2012-10-14 23:04:46 UTC <fryguybob> if you search for fontSize in here there is an example: http://projects.haskell.org/diagrams/manual/diagrams-manual.html
2012-10-14 23:45:58 UTC <bfgun> yeah gonna try that now. What's the scale anyway, when relating vector space units to pixels for text?
2012-10-14 23:46:07 UTC <bfgun> 1 vector space unit = 1 pixel?
2012-10-14 23:46:42 UTC <bfgun> or is text height measured in vector space units?
2012-10-14 23:48:01 UTC <fryguybob> bfgun: Which backend?
2012-10-14 23:49:12 UTC <bfgun> cairo?
2012-10-14 23:49:22 UTC <bfgun> i am not sure if my question even makes sense
2012-10-14 23:50:47 UTC <bfgun> printing at 500 x 500 (with defaultMain) i get huge text
2012-10-14 23:50:52 UTC <fryguybob> bfgun: I don't remember what Cairo does, but I think in my Postscript backend the font size is in the same unit space as the output size, so Adobe points (1/72 in).
2012-10-14 23:50:53 UTC <bfgun> same as printing at 100x 100
2012-10-14 23:52:36 UTC <fryguybob> bfgun: So if I output 12 point text atop a  circle 1  with output size 120 I get text 1/10 the size of the circle.
2012-10-14 23:53:05 UTC <bfgun> ok, i'll have to reduce my text sizes then
2012-10-14 23:55:49 UTC <fryguybob> I don't remember if scaling interacts with fontSize or not.  There is a transformable instance for text, so that probably applies as you would expect.
2012-10-14 23:56:46 UTC <fryguybob> Perhaps the strange thing then is that the fontSize is relative to the output size, so doubling the output size will cut the font's relative appearence by half.
2012-10-14 23:57:51 UTC <fryguybob> There is also the freeze function that potentially would change that behavior, but I wouldn't trust that it does the right thing at this point.
2012-10-14 23:58:52 UTC <bfgun> i'll just reduce the font size using that function till i get the size i want
2012-10-15 00:04:02 UTC <bfgun> :)
2012-10-15 00:34:52 UTC <byorgey> no, the fontSize is relative to the final size of the diagram before rendering, not the output size
2012-10-15 00:35:14 UTC <byorgey> at least it should be...
2012-10-15 00:36:32 UTC <luite> anyone using magit here?
2012-10-15 00:48:06 UTC <byorgey> luite: no, but I probably should
2012-10-15 00:48:24 UTC <byorgey> I wanted to just do everything from the command line at first so I got comfortable with it
2012-10-15 00:48:32 UTC <byorgey> but some automation would be nice
2012-10-15 00:49:37 UTC <luite> yeah same here :) but now i'm struggling with some merge conflicts in magit/ediff
2012-10-15 00:54:49 UTC <byorgey> luite: ah, boo
2012-10-15 00:55:18 UTC <luite> i guess i'll have to read the manual then
2012-10-15 00:56:19 UTC <byorgey> oh, the horror
2012-10-15 00:56:56 UTC <fryguybob> byorgey: Ah, that might be a difference with the Postscript backend.
2012-10-15 00:57:23 UTC <byorgey> fryguybob: yeah, I think so
2012-10-15 00:57:37 UTC <byorgey> mind you, I'm not particularly happy with the way text is currently handled
2012-10-15 00:57:47 UTC <fryguybob> me neither :D
2012-10-15 00:58:50 UTC <fryguybob> It is already much better then dealing with text with a cutting machine however.
2012-10-15 01:01:06 UTC <byorgey> hahaha
2012-10-15 01:28:07 UTC <luite> ah i got the hang of it i think, this works pretty well :)
2012-10-15 01:34:29 UTC <byorgey> excellent =)
2012-10-15 02:47:30 UTC <frustratedwinuse> hi
2012-10-16 01:31:53 UTC <byorgey> anyone brave want to try the user manual + website building instructions at the bottom of https://github.com/diagrams/diagrams-doc ?
2012-10-16 01:32:24 UTC <byorgey> I want to make it as easy as possible for people to contribute to the documentation
2012-10-16 01:32:41 UTC <byorgey> so I'd like to iron out any snags in the building instructions
2012-10-16 01:45:05 UTC <fryguybob> byorgey: Does it require Cairo?
2012-10-16 01:45:21 UTC <byorgey> fryguybob: yes =(
2012-10-16 01:46:02 UTC <fryguybob> :(
2012-10-16 01:46:09 UTC <byorgey> so I guess that's another thing we can do, try building the documentation using diagrams-svg and see how far we get
2012-10-16 01:46:34 UTC <byorgey> that would be good concrete motivation for implementing the last remaining features
2012-10-16 01:46:48 UTC <fryguybob> Sadly I don't have any time right now.  Currently burried in wiring a MIPS together.
2012-10-16 01:47:12 UTC <byorgey> fryguybob: no worries.  good luck!
2012-10-16 01:51:01 UTC <luite> hm, cairo stuff needed :(
2012-10-16 16:13:08 UTC <dimka> Is there a possibility that diagrams-cairo will be buildable with ghc-7.6
2012-10-16 16:13:08 UTC <dimka> ?
2012-10-16 17:05:39 UTC <byorgey> dimka: eventually, yes.  Right now the thing holding it back is that gtk2hs itself does not build under ghc-7.6.
2012-10-16 17:06:11 UTC <byorgey> dimka: for now you could try the version of diagrams-svg on github: http://github.com/diagrams/diagrams-svg
2012-10-17 11:29:08 UTC <byorgey> trying to set up virtualbox so that I can compile stuff on ubuntu lucid 64 so that I can deploy ghclive to heroku so I can use it in my class tomorrow.
2012-10-17 11:29:30 UTC <byorgey> the yaks have no hair left whatsoever.
2012-10-17 12:42:26 UTC <fryguybob> byorgey: Any luck?
2012-10-17 12:45:08 UTC <byorgey> fryguybob: so far so good.  got virtualbox working, ubuntu instance built, HP installed on it.
2012-10-17 12:59:00 UTC <byorgey> now doing 'cabal install' of ghclive.  this ought to take a while.
2012-10-17 13:10:21 UTC <byorgey> still cabal installing
2012-10-17 13:44:07 UTC <byorgey> argh, well, I got ghclive running on a VM, but now it seems ghclive is too buggy to really use in class =(
2012-10-17 13:44:33 UTC <byorgey> e.g. sometimes when there are type errors it deletes the shared document =(
2012-10-17 13:44:40 UTC <ClaudiusMaximus> eep
2012-10-17 13:45:06 UTC <byorgey> and instead of Show you need Display but it's unclear how to make an instance of Display for your own data types.
2012-10-17 13:45:21 UTC <byorgey> e.g. if you want to declare a data type and then evaluate expressions involving it.
2012-10-17 13:47:24 UTC <byorgey> also it's annoying that you have to explicitly import Prelude and Network.Web.GHCLive.Display
2012-10-17 13:48:10 UTC <ClaudiusMaximus> sounds like it needs more love
2012-10-17 13:48:36 UTC <byorgey> yep, I plan to poke shapr and/or send some patches =)
2012-10-17 13:48:47 UTC <ClaudiusMaximus> still, a sleek yak is nice i guess
2012-10-17 13:48:53 UTC <byorgey> but in the meantime looks like it's back to just plain old ghci for class tomorrow
2012-10-17 13:48:56 UTC <byorgey> hehe, indeed
2012-10-17 13:49:15 UTC <byorgey> I mean, I learned a lot so it wasn't a waste of time.
2012-10-17 13:49:52 UTC <ClaudiusMaximus> i can vaguely relate, was up until almost 4am trying to get this to work with Rank2Types http://hpaste.org/76392
2012-10-17 13:50:16 UTC <ClaudiusMaximus> then up at 8am to let builders in
2012-10-17 13:50:31 UTC <byorgey> heh
2012-10-17 13:50:47 UTC <ClaudiusMaximus> failed miserably, ended up with all kinds of other extensions
2012-10-17 13:50:54 UTC <ClaudiusMaximus> and type errors a mile long
2012-10-17 13:52:30 UTC <ClaudiusMaximus> starting to wonder whether it's possible at all
2012-10-17 19:16:17 UTC <nand`> byorgey: I'm in #diagrams, what are you talking about?
2012-10-17 19:16:25 UTC <byorgey> hehehe
2012-10-17 19:16:36 UTC <nand`> (though I didn't know of the channel's existence up to and not including just about now)
2012-10-17 19:16:59 UTC <byorgey> ah, sorry about that
2012-10-17 19:17:11 UTC <nand`> was it mentioned in the user manual or tutorial somewhere?
2012-10-17 19:17:19 UTC <nand`> if so, I may have glossed over it
2012-10-17 19:17:56 UTC <byorgey> yes, I think so
2012-10-17 19:19:20 UTC <byorgey> both of them near the beginning say something like "other resources" and list the mailing list, IRC channel, et.c
2012-10-17 19:19:40 UTC <byorgey> also it's on the front page of the website =P
2012-10-17 19:20:07 UTC <nand`> I skipped most of the early sections of each, since they seemed to be related to how to get diagrams running and/or learn Haskell, at least the former of which I seem to have already accomplished
2012-10-17 19:20:25 UTC <nand`> but fair enough
2012-10-17 19:20:26 UTC <byorgey> fair enough.
2012-10-17 19:20:29 UTC <byorgey> =)
2012-10-17 19:57:54 UTC <bfgun> cool, this channel is slowly growing :p
2012-10-17 19:58:05 UTC <bfgun> a couple days ago it had ~12 people :p
2012-10-17 19:58:28 UTC <nand`> maybe it will approach the growth behavior of #haskell
2012-10-17 20:46:40 UTC <nand`> byorgey: is it okay if I blame you and your paper should my performance in tomorrow's exams unexpectedly drop due to lack of sleep?
2012-10-17 20:47:03 UTC <nand`> I was planning on getting around 3 hours more
2012-10-17 21:31:12 UTC <byorgey> nand`: hehe, why not =)
2012-10-17 22:29:21 UTC <luite> so what's a good place to eat in sf :)
2012-10-18 14:27:44 UTC <nand`> byorgey: would .~^ be fine for âpath from point via vectorâ ?
2012-10-18 14:28:12 UTC <nand`> though then .~. would be an interesting mnemonic for the current ~~
2012-10-18 14:38:17 UTC <byorgey> hmm, indeed
2012-10-18 14:38:28 UTC <byorgey> and that fits well with the naming scheme from vector-space
2012-10-18 14:38:35 UTC <byorgey> e.g. .+^, .-., etc.
2012-10-18 16:47:53 UTC <nand`> byorgey: oh, I actually deleted that comment since I realized just after posting it that, 1. it was already mentioned and 2. as you mentioned, stuff like Isomorphism wouldn't get included
2012-10-18 16:48:13 UTC <nand`> err, as mgsloan mentioned at any rate
2012-10-18 16:48:14 UTC <byorgey> nand`: heh, fair enough
2012-10-18 16:48:41 UTC <byorgey> it's still useful to write these things down
2012-10-18 17:02:04 UTC <nand`> I looked at the code for âfreezeâ to see if I could puzzle together why the SVG backend would not freeze properly, and was immensely puzzled
2012-10-18 17:02:19 UTC <byorgey> nand`: yes, it's immensely puzzling
2012-10-18 17:02:30 UTC <byorgey> even I am still puzzled sometimes
2012-10-18 17:05:09 UTC <byorgey> nand`: ah, well, essentially it comes down to the fact that the SVG backend hasn't implemented freezing at all!
2012-10-18 17:05:26 UTC <byorgey> the place to look is the 'withStyle' function in the Backend instance
2012-10-18 17:05:59 UTC <byorgey> https://github.com/diagrams/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L78
2012-10-18 17:06:26 UTC <byorgey> The first argument to withStyle is supposed to be ignored, it's just a token to help type inference.
2012-10-18 17:06:34 UTC <nand`> so what's wrong with it? ignoring the Transformation?
2012-10-18 17:06:43 UTC <byorgey> But the third argument is a transformation to be applied to the style
2012-10-18 17:06:52 UTC <byorgey> which it currently ignores, right
2012-10-18 17:07:40 UTC <byorgey> now, figuring out the correct thing to do with that transformation may be quite tricky, and depends on the semantics of SVG transformations and stroking etc.
2012-10-18 17:08:51 UTC <byorgey> looking at how the cairo backend is implemented probably won't help, because it's very specific to cairo
2012-10-18 17:09:27 UTC <byorgey> nand`: for more info you could try reading http://www.haskell.org/haskellwiki/Diagrams/Dev/Freezing
2012-10-18 17:50:17 UTC <nand`> ACTION wonders what a GUI toolkit in the spirit of diagrams (monoids, monoids everywhere) would look like
2012-10-18 17:53:16 UTC <fryguybob> byorgey: There is a whole page on freezing? wow. I'm behind.
2012-10-18 17:55:16 UTC <fryguybob> I should check and see if the Postscript specification allows the naive implementation of freeze (i.e. let the backend do it) to work.  My guess is that it does and that's why Cairo works that way.
2012-10-18 17:58:05 UTC <byorgey> fryguybob: ah, yes, I would guess so.
2012-10-18 17:59:05 UTC <byorgey> the SVG specification must allow it as well, for the same reason.
2012-10-18 18:01:06 UTC <fryguybob> The trick though is that SVG is more declarative so while in Postscript you can just transpose the scale and the transform, that may not work in SVG.
2012-10-18 18:01:46 UTC <byorgey> true.
2012-10-18 18:01:57 UTC <fryguybob> As in, implementations (of SVG render) would be tempted to just compute the entire transform on values, and then on scalars.
2012-10-18 18:02:08 UTC <fryguybob> Rather then transforming strokes.
2012-10-18 18:03:11 UTC <fryguybob> So you may have to "force" it by explicitly describing the brush and the transform on the brush.
2012-10-18 18:04:15 UTC <byorgey> fryguybob: you mean that might be the only way to do it, or that might be the only way that doesn't run into bugs in implementations of SVG?
2012-10-18 18:09:30 UTC <fryguybob> byorgey: Well, I'm not sure you can actually describe that in SVG.  If you can, then you would be more likely to have it work (because why implement that part of SVG if you don't get it right).
2012-10-18 18:10:07 UTC <fryguybob> If you want something that works more broadly then we would want to implement in diagrams the transformation that freeze turns a stroke into a fill of a complex region.
2012-10-18 18:10:28 UTC <fryguybob> (Where complex region is something with a hole)
2012-10-18 18:12:05 UTC <byorgey> fryguybob: but the cairo backend always produces outputs that look the same, no matter whether producing SVG, PDF, PS, or PNG!
2012-10-18 18:12:14 UTC <byorgey> at least, I have never observed an example where they are different
2012-10-18 18:12:28 UTC <byorgey> so it's doing *something* with the SVGs.
2012-10-18 18:13:52 UTC <byorgey> fryguybob: check out http://www.cis.upenn.edu/~byorgey/hosted/Fat.hs which produces http://www.cis.upenn.edu/~byorgey/hosted/Fat.svg
2012-10-18 18:14:40 UTC <fryguybob> byorgey: Oh, good point we should be able to figure out what it is doing there.
2012-10-18 18:14:44 UTC <byorgey> however, I totally agree it would be nice to be able to turn strokes into fills of complex regions, independently of freezing.
2012-10-18 18:15:10 UTC <fryguybob> Cairo has the abilities to do that, so that might be what it is doing.
2012-10-18 18:15:30 UTC <byorgey> nope, it isn't
2012-10-18 18:15:35 UTC <byorgey> look at the SVG source
2012-10-18 18:15:54 UTC <byorgey> it's just a single path with stroke-width 2 and a 'transform' attribute
2012-10-18 18:16:47 UTC <fryguybob> humm that shows as all black for me.
2012-10-18 18:16:57 UTC <byorgey> yes, that's what it's supposed to look like =)
2012-10-18 18:17:04 UTC <fryguybob> oh ok.
2012-10-18 18:17:08 UTC <fryguybob> Let me try something then.
2012-10-18 18:17:09 UTC <byorgey> it's a radius-1 circle drawn with a line width of 2.
2012-10-18 18:17:32 UTC <nand`> admittedly, the example would have probably been better as a radius-5 circle or so
2012-10-18 18:17:45 UTC <nand`> I just picked something based on how it renders with diagrams-svg
2012-10-18 18:17:57 UTC <byorgey> yes, that would have been better
2012-10-18 18:22:32 UTC <byorgey> ok, check out http://www.cis.upenn.edu/~byorgey/hosted/Fat.{hs,png,svg} (improved example) and http://www.cis.upenn.edu/~byorgey/hosted/Freeze.{hs,png,svg}  (with freezing)
2012-10-18 18:22:33 UTC <fryguybob> Perhaps what we need is the two diagrams from the freeze section of the manual both run through Cairo SVG.
2012-10-18 18:22:57 UTC <byorgey> fryguybob: the above Freeze.svg is a start
2012-10-18 18:23:07 UTC <fryguybob> yeah you beat me too it :D
2012-10-18 18:23:35 UTC <byorgey> again it's just a path node with a transform attribute
2012-10-18 18:24:57 UTC <fryguybob> Oh, I see.  The matrix parameter is applying to the final stroked image.
2012-10-18 18:25:12 UTC <fryguybob> That is the `transform` attribute.
2012-10-18 18:26:17 UTC <fryguybob> So the inverse of the "freeze" transform is applied to the path and the freeze transform is applied to the output transform.
2012-10-18 18:28:17 UTC <fryguybob> Saddly I must go back to my MIPS processor.  It is due tonight and it can't run C++ yet :D.
2012-10-18 18:28:22 UTC <byorgey> yes, something like that.
2012-10-18 18:28:34 UTC <byorgey> ah, good luck!  thanks for helping think about this.
2012-10-18 18:28:42 UTC <byorgey> looks like it actually shouldn't be too hard to implement.
2012-10-18 18:29:28 UTC <fryguybob> Yeah
2012-10-18 18:30:13 UTC <byorgey> ACTION checks to make sure the logger bot was still running...
2012-10-18 18:30:19 UTC <byorgey> oh good
2012-10-18 18:31:50 UTC <nand`> âACTION checks to make sure the logger bot was still running...+2012-10-18 18:30:13 UTC <byorgey>â
2012-10-18 18:31:52 UTC <nand`> yuck
2012-10-18 18:32:17 UTC <byorgey> hehe
2012-10-18 18:32:42 UTC <byorgey> oh well
2012-10-19 04:57:59 UTC <byorgey> huh, IRC notification seems to not work for diagrams-svg, not sure why
2012-10-19 04:58:59 UTC <byorgey> huh, there we go
2012-10-19 06:13:31 UTC <mgsloan> nand`: RE a GUI toolkit in the spirit of diagrams, I sorta started one here: https://github.com/mgsloan/gtk-toy-diagrams
2012-10-19 06:14:02 UTC <mgsloan> https://github.com/mgsloan/gtk-toy-diagrams/blob/master/src/Graphics/UI/Toy/Transformed.hs
2012-10-19 06:14:44 UTC <mgsloan> You can juxtapose UI elements and such, and the mouse events get appropriately un-transformed
2012-10-19 10:32:57 UTC <nand`> maybe when GtkHs starts working I'll have a look
2012-10-20 03:19:26 UTC <byorgey> andyjgill: do I recall correctly that you had some kind of tool to help spit out parallel images for a bunch of example diagrams (i.e. with different backends, for easy comparison)?
2012-10-20 03:21:11 UTC <andyjgill> Yes, I did - it was a large HTML file. I used linux to generate the golden. -- I'll look for it.
2012-10-20 03:35:24 UTC <byorgey> was thinking of using something like that to work on getting the SVG backend on par with the cairo backend
2012-10-20 09:37:26 UTC <nand`> do you know if diagrams-svg has any form of animation support?
2012-10-20 09:38:17 UTC <nand`> I'd like to simulate some rolling shutter artifacts by generating a sequence of diagrams at different rotations, then taking one line out of each
2012-10-20 13:47:37 UTC <andyjgill> https://github.com/ku-fpg/diagrams-tests
2012-10-20 14:42:17 UTC <byorgey> nand`: diagrams-svg doesn't have any animation support built-in yet, but it's not too hard to create an Animation and use it to generate a sequence of SVGs with the SVG backend
2012-10-20 14:43:05 UTC <byorgey> andyjgill: awesome, thanks!
2012-10-20 14:49:27 UTC <nand`> byorgey: okay
2012-10-20 14:50:40 UTC <andyjgill> byorgey: glad to be of help. From what I remember, it was pretty simple.
2012-10-20 15:35:14 UTC <luite> hm
2012-10-20 15:35:58 UTC <byorgey> hey luite
2012-10-20 15:36:01 UTC <byorgey> what's up?
2012-10-20 15:36:56 UTC <luite> hi, i'm at the gsoc summit
2012-10-20 15:45:49 UTC <byorgey> oooh
2012-10-20 15:46:02 UTC <byorgey> luite: how is it?  how was the trip?
2012-10-20 15:46:53 UTC <luite> oh i arrived a few days ago actually
2012-10-20 15:47:04 UTC <luite> stayed for 2 nights in a hostel in san francisco
2012-10-20 15:47:20 UTC <byorgey> cool
2012-10-20 18:30:11 UTC <luite> my feed still hurt from walking around in SF too much
2012-10-20 18:30:49 UTC <luite> feet
2012-10-20 18:31:17 UTC <luite> i'm in some large google cafetaria now
2012-10-20 18:33:55 UTC <luite> and they have free shirts in sizes XS and 3XL
2012-10-20 20:24:14 UTC <byorgey> luite: hehe.  I have never even seen a picture of you, but just statistically speaking I am guessing you are neither of those sizes.
2012-10-20 20:25:28 UTC <alpounet> luite, google tshirts or gsoc tshirts?
2012-10-20 20:25:31 UTC <alpounet> i've received the gsoc one
2012-10-20 20:30:21 UTC <bigfg> hey, i was wondering, is there a vectorized backend?
2012-10-20 20:33:52 UTC <byorgey> bigfg: what do you mean by "vectorized"?
2012-10-20 20:34:01 UTC <byorgey> bigfg: the cairo backend can output PDF, PS, and SVG
2012-10-20 20:34:06 UTC <byorgey> there is also a native SVG backend
2012-10-20 23:16:37 UTC <bigfg> byorgey, how can i use defaultMain to output svg? i'm getting a png
2012-10-21 01:17:23 UTC <luite> alpounet: a few different ones, i think all gsoc related, not sure though
2012-10-21 01:33:12 UTC <luite> hm i guess he might be asleep now :)
2012-10-21 01:45:10 UTC <fryguybob> bigfg: defaultMain chooses the output based on the file extension.
2012-10-21 01:45:39 UTC <bigfg> awesome, let's try
2012-10-21 01:46:25 UTC <bigfg> :)
2012-10-21 01:46:35 UTC <bigfg> although ristretto crashed :p
2012-10-21 01:48:02 UTC <bigfg> awesome, now everything looks right :)
2012-10-21 02:47:30 UTC <luite> bluh
2012-10-21 11:58:51 UTC <alpounet> luite, indeed, we apparently do not share the same timezone anymore, until you're back in Europe :)
2012-10-21 18:23:44 UTC <BlackShift> from the tutorial I learned how to use the CmdLine backend
2012-10-21 18:24:11 UTC <BlackShift> I'm trying to use one of the other backends, but can't figure out how
2012-10-21 18:24:38 UTC <BlackShift> for example, this isn't allowed:
2012-10-21 18:24:43 UTC <BlackShift> main =  renderDia Cairo (CairoOptions "foo.png" (Width 250) PNG) myDiagram
2012-10-21 18:24:52 UTC <BlackShift> can someone enlighten me?
2012-10-21 18:25:45 UTC <BlackShift> I'm missing some basic Haskell knowledge I'm afraid
2012-10-21 18:57:50 UTC <byorgey> BlackShift: renderDia doesn't necessarily return a value of type  IO ()
2012-10-21 18:58:08 UTC <byorgey> the kind of thing returned by renderDia depends on the particular backend
2012-10-21 18:58:17 UTC <byorgey> BlackShift: which other backend are you trying to use?
2012-10-21 18:58:21 UTC <BlackShift> ok
2012-10-21 18:59:40 UTC <BlackShift> it apparently returns `(IO (), Graphics.Rendering.Cairo.Internal.Render ())'
2012-10-21 18:59:49 UTC <BlackShift> so I did
2012-10-21 18:59:59 UTC <BlackShift> (o,a) = renderDia Cairo (CairoOptions "foo.png" (Width 250) PNG) myDiagram
2012-10-21 19:00:02 UTC <BlackShift> main = o
2012-10-21 19:00:07 UTC <BlackShift> and now it works :)
2012-10-21 19:00:21 UTC <byorgey> right =)
2012-10-21 19:00:32 UTC <byorgey> you could also do   main = fst $ renderDia ...
2012-10-21 19:00:49 UTC <BlackShift> a, from 'first'?
2012-10-21 19:01:22 UTC <byorgey> hmm?  I don't understand your question
2012-10-21 19:01:27 UTC <BlackShift> the 'fst'
2012-10-21 19:01:46 UTC <byorgey> what about it?
2012-10-21 19:02:15 UTC <BlackShift> 'fst' is an abbreviation for 'first'?
2012-10-21 19:02:30 UTC <byorgey> no, fst is not an abbreviation
2012-10-21 19:02:50 UTC <byorgey> oh!  you mean is it an abbreviation for the English word "first"? yes.
2012-10-21 19:02:54 UTC <BlackShift> yes
2012-10-21 19:03:07 UTC <byorgey> fst projects out the first element of a pair
2012-10-21 19:03:10 UTC <byorgey> fst :: (a,b) -> a
2012-10-21 19:03:11 UTC <BlackShift> I don't know many of the basic functions in Haskell yet :)
2012-10-21 19:03:15 UTC <byorgey> ok =)
2012-10-21 19:03:36 UTC <BlackShift> as an example I really appreciated the explanation of '#' in the tutorial
2012-10-21 19:03:53 UTC <byorgey> cool
2012-10-21 19:03:54 UTC <BlackShift> I did know $ already
2012-10-21 19:04:04 UTC <byorgey> though note # is not really standard, it's specific to diagrams
2012-10-21 19:04:11 UTC <byorgey> $ is standard
2012-10-21 19:04:49 UTC <BlackShift> ah
2012-10-21 19:05:29 UTC <BlackShift> it makes it quite readable
2012-10-21 19:07:59 UTC <BlackShift> I feel like a kid again learning, when I thought 'fork' was actually a command in C64 basic, while it was 'for k'
2012-10-21 19:10:05 UTC <BlackShift> as in, experimenting with syntax and functions
2012-10-21 19:12:59 UTC <BlackShift> except that now there is no 'for' to be seen anywhere :)
2012-10-21 19:15:48 UTC <byorgey> haha =)
2012-10-22 00:18:59 UTC <byorgey> pr: ping?
2012-10-22 01:14:59 UTC <byorgey> fryguybob: ah, thanks for taking a look at those
2012-10-22 01:15:08 UTC <fryguybob> byorgey: No problem.
2012-10-22 01:15:47 UTC <fryguybob> Let me know if you have some thing runing with the side by side comparison thing and I'll hook the postscript up to it and make sure it is all working.
2012-10-22 01:18:05 UTC <byorgey> fryguybob: ah, sure, will do.  Yeah, I plan to try to get that set up soon.
2012-10-22 01:19:31 UTC <fryguybob> ACTION must be tired.
2012-10-22 01:19:56 UTC <byorgey> why is that?
2012-10-22 01:20:05 UTC <byorgey> (though I don't doubt it)
2012-10-22 01:21:06 UTC <fryguybob> I reread my sentence and it has a lot of generic specifiers :D
2012-10-22 01:21:32 UTC <byorgey> hehe
2012-10-22 01:21:35 UTC <byorgey> I knew what you meant =)
2012-10-22 01:37:47 UTC <tgeeky> I read that sentence as "it has a lot of generic specifics"
2012-10-22 01:37:53 UTC <tgeeky> and thought the comedy hour was going on
2012-10-22 02:48:04 UTC <luite> back from gsoc!
2012-10-22 02:49:36 UTC <luite> still in california though, but now google doesn't pay my hotel room anymore, so it's a lot smaller and has no private bathroom anymore :)
2012-10-22 14:13:04 UTC <tgeeky> hehe
2012-10-23 01:20:24 UTC <fryguybob> Is it crazy that edwardk's lens operators are starting to make sense? :D
2012-10-23 01:49:20 UTC <luite> i think he designed them to make sense :p
2012-10-23 01:50:09 UTC <luite> bah i'm cold, cycled through SF for 6 hours
2012-10-23 02:00:33 UTC <fryguybob> ACTION sometimes wishes he lived in SF.
2012-10-23 02:10:32 UTC <luite> it looks like a nice place to live
2012-10-23 02:13:11 UTC <luite> I guess I'll be going now
2012-10-23 02:13:24 UTC <luite> get some coffee and then back to the hotel, tired :)
2012-10-23 02:13:31 UTC <fryguybob> Enjoy!
2012-10-23 02:14:41 UTC <luite> they have hills here, and my phone battery was almost dead, so i turned off my phone. apparently i have great skill in choosing the wrong way that goes up the steepest/highest hill
2012-10-23 14:09:59 UTC <pr> byorgey: sorry, but last couple of weeks + next couple of weeks i was/am really busy, haven't had the time to look at it again. decoupling gtk from cairo isn't that big of a deal and for a gtk backend one just has to write a sensible Backend instance, i guess. but i don't know if i'll have time to spare on this in the near future, so i hope i haven't delayed your release too much
2012-10-23 14:10:17 UTC <byorgey> pr: ok, no worries!
2012-10-23 14:10:41 UTC <byorgey> I took a look at it last night, it shouldn't be too bad, I'll just do it myself
2012-10-23 14:11:01 UTC <byorgey> pr: I just didn't want to duplicate effort if you were already in the middle of it.
2012-10-23 14:11:32 UTC <byorgey> and you haven't held up the release at all, there are still other things that need finishing up too
2012-10-23 14:11:49 UTC <byorgey> pr: good luck with whatever you are really busy with!
2012-10-23 19:52:26 UTC <tgeeky> byorgey: there are two new videos on one of my favorite lecture sites (IAS lectures): http://video.ias.edu/all
2012-10-23 19:52:38 UTC <tgeeky> one of them is by Vladimir Voevodsky on Type Systems and Proof Assistant
2012-10-23 19:53:24 UTC <tgeeky> looks like he gave a talk about something similar at UPenn last year
2012-10-23 20:44:56 UTC <luite> hmm, i don't know what to do anymore... i think i visited the things i wanted to see
2012-10-23 21:35:41 UTC <fryguybob> luite: Did you eat sourdough bread?
2012-10-23 21:53:17 UTC <tgeeky_> luite: did you finish the internet?
2012-10-23 21:53:52 UTC <tgeeky_> i think after that, e-suicide is the only option
2012-10-23 21:54:25 UTC <luite> fryguybob: not yet
2012-10-23 21:55:04 UTC <luite> but isn't it more or less the same as the sourdough you can get everywhere in europe?
2012-10-23 22:12:15 UTC <luite> hm, interesting that they use haskell at JET
2012-10-23 22:13:14 UTC <luite> i guess i'm not really qualified for the job though :/
2012-10-23 22:48:10 UTC <fryguybob> luite: In my experience the quality of SF sourdough is unsurpassed in the US.  I cannot speak for europe.
2012-10-23 22:48:44 UTC <fryguybob> I will admit that I am biased being a native of northern California.
2012-10-23 23:27:46 UTC <luite> ah
2012-10-24 04:15:38 UTC <luite> hmz
2012-10-24 05:05:26 UTC <cmears> Hello diagrammers! Is there a neat way to get an R2 vector's angle from horizontal?
2012-10-24 05:46:03 UTC <cmears> OK, an easier question:
2012-10-24 05:46:14 UTC <cmears> Should translateX work on points (e.g. P2)?
2012-10-24 05:46:32 UTC <cmears> Like "translateX 1 (p2 (10,20))"
2012-10-24 11:39:05 UTC <byorgey> cmears: yes, translateX should work on points.  if you're getting "Can't match V P2 with R2", that's https://github.com/diagrams/diagrams-core/issues/17, which you can work around by importing Graphics.Rendering.Diagrams.Points
2012-10-24 11:39:20 UTC <byorgey> or Diagrams.Core.Points if you're using the latest version from github for some reason
2012-10-24 11:42:20 UTC <byorgey> cmears: you can get a vector's angle using the 'direction' function
2012-10-24 11:54:42 UTC <fryguybob> byorgey: How is the recursion class going?
2012-10-24 11:59:32 UTC <byorgey> fryguybob: it seems to be going well, thanks!  Though right this moment I've got a homework assignment to write, and two homeworks and a midterm to grade =P
2012-10-24 12:00:03 UTC <byorgey> fryguybob: did you give your lecture on functional programming yet?
2012-10-24 12:00:38 UTC <fryguybob> byorgey: Yeah the first one went well, and the second one was fine, but I think I lost some people.
2012-10-24 12:01:16 UTC <fryguybob> byorgey: They were able to get their homework done :D.
2012-10-24 12:01:59 UTC <fryguybob> byorgey: (given a parser generator make an interpreter)
2012-10-24 12:02:26 UTC <byorgey> ah, fun =)
2012-10-24 12:02:42 UTC <byorgey> I guess losing some people is probably inevitable, though of course one should strive not to
2012-10-24 12:03:22 UTC <fryguybob> Yeah, I think I inspired some of them though as in class they now often ask "how would that work in Haskell".
2012-10-24 12:04:10 UTC <fryguybob> (I say "I", but I hope it was Haskell that inspired them :D_
2012-10-24 14:16:48 UTC <fryguybob> ACTION tries to see how far he can get with installing gtk on linux.
2012-10-24 14:44:55 UTC <byorgey> fryguybob: I've never had any trouble installing gtk on linux, what's the worry?
2012-10-24 14:46:09 UTC <fryguybob> byorgey: Our systems here are missing a lot of packages or -dev packages that one might expect to be there.
2012-10-24 14:46:17 UTC <fryguybob> I've never figured out why...
2012-10-24 15:00:58 UTC <byorgey> ah =(
2012-10-24 15:01:14 UTC <byorgey> how responsive are the IT people if you ask them to install more packages?
2012-10-24 15:03:00 UTC <alpounet> luite, they do not use haskell at JET *yet*. as to you being qualified for the job, well, are you really sure? feel free to pm me to talk a bit about it :)
2012-10-24 15:05:04 UTC <fryguybob> byorgey: I asked once and they said, "thats a lot of packages".  I was able to work around locally, so I didn't ask again.
2012-10-24 15:05:47 UTC <byorgey> heh
2012-10-24 15:06:17 UTC <byorgey> yeah, I end up installing a bunch of stuff locally too
2012-10-24 15:19:03 UTC <fryguybob> ACTION sees Cabal's "dangerous" and raises "--force-reinstall".
2012-10-24 15:19:47 UTC <fryguybob> And now we get to the gtk errors...
2012-10-24 15:56:40 UTC <fryguybob> It looks like at least cairo installed.
2012-10-24 16:00:04 UTC <byorgey> ah.  more motivation for me to split diagrams-cairo into the purely cairo part and a separate diagrams-gtk backend
2012-10-24 16:00:40 UTC <byorgey> I took a look at it the other day, it shouldn't be too bad.  Looks like there's also some code simplification that can be done at the same time.
2012-10-24 17:12:44 UTC <luite> alpounet: oh right
2012-10-24 17:29:28 UTC <luite> sorry i'm busy packing my bags etc, need to check out soon
2012-10-24 17:30:10 UTC <byorgey> luite: have a good trip back
2012-10-24 17:30:41 UTC <luite> not going back yet, next destination is mountain view, again :)
2012-10-24 17:31:15 UTC <byorgey> ah =)
2012-10-24 17:31:42 UTC <luite> to greg weber (yesod developer), who wants to go to yosemite, camping, this weekend :)
2012-10-24 17:34:40 UTC <alpounet> cool
2012-10-24 17:35:03 UTC <alpounet> luite, get back to me when you're back in NL, in case you're interested by the position and what to talk about it a bit further
2012-10-24 17:37:49 UTC <byorgey> luite: sweet, sounds fun!
2012-10-24 17:37:54 UTC <byorgey> ACTION hsa never been to yosemite
2012-10-24 17:38:22 UTC <byorgey> alpounet: I haven't forgotten about factorization diagrams, btw =)
2012-10-24 17:39:07 UTC <alpounet> byorgey, heh, don't worry i've been pretty busy too, with scoutess, hnn, my kind-of-consulting work, etc
2012-10-24 17:39:16 UTC <byorgey> cool
2012-10-24 17:39:18 UTC <alpounet> just ping me with the new Factorization.hs
2012-10-24 17:39:22 UTC <byorgey> will do =)
2012-10-24 17:39:26 UTC <alpounet> i'll rebuild my app and relaunch it, and that's about it
2012-10-24 17:39:30 UTC <alpounet> not much burden on me :]
2012-10-24 17:39:35 UTC <byorgey> right =)
2012-10-24 17:40:19 UTC <alpounet> you're the one with all the pressure, that has to get pretty diagrams out of numbers
2012-10-24 17:40:30 UTC <byorgey> hehehe
2012-10-24 17:40:44 UTC <byorgey> it's a tough job, let me tell you
2012-10-24 17:41:37 UTC <nand`> I should use diagrams to generate slides for my school presentation
2012-10-24 17:41:38 UTC <alpounet> and it's not like there are manuals or books about that job, like "Factorization diagrams for dummies"
2012-10-24 17:41:45 UTC <alpounet> this really is some kind of R&D
2012-10-24 17:42:10 UTC <byorgey> nand`: try diagrams-latex.sty, which you can get from the diagrams-builder tarball
2012-10-24 17:42:43 UTC <nand`> is that what I think it is?
2012-10-24 17:43:18 UTC <byorgey> it depends what you think it is.
2012-10-24 17:43:40 UTC <alpounet> also, do you believe it really is byorgey you're talking to?
2012-10-24 17:44:03 UTC <byorgey> did you, perhaps, think it is a latex package that lets you insert diagrams code inline in your latex file and have images inserted automatically into the output pdf?
2012-10-24 17:44:16 UTC <byorgey> if so: yes! =D
2012-10-24 17:45:02 UTC <byorgey> nand`: it's still a bit rough around the edges -- I need to do some work to make it prettier/easier to use/more configurable/etc., but it works
2012-10-24 17:45:15 UTC <byorgey> I used it for my "monoids" paper
2012-10-24 17:45:53 UTC <nand`> A LaTeX backend for diagrams that just outputs something I can copy/paste into my LaTeX documents and have them print out the way they should
2012-10-24 17:46:19 UTC <byorgey> ah! no, it isn't that
2012-10-24 17:46:41 UTC <byorgey> there is https://github.com/mahrz/diagrams-tikz but I can't vouch for it
2012-10-24 17:47:14 UTC <byorgey> though personally I think what it actually is, is better than what you thought it is =)
2012-10-24 17:47:22 UTC <byorgey> no copy-pasting required
2012-10-24 17:47:22 UTC <nand`> why, what is it?
2012-10-24 17:47:37 UTC <byorgey> nand`: read the scrollback
2012-10-24 17:47:57 UTC <nand`> I got disconnected, my log goes from âit dependsâ to âA LaTeX backendâ to âit's still a bit roughâ
2012-10-24 17:48:10 UTC <alpounet> <byorgey> did you, perhaps, think it is a latex package that lets you insert diagrams code inline in your latex file and have images inserted automatically into the output pdf?
2012-10-24 17:48:11 UTC <alpounet> <byorgey> if so: yes! =D
2012-10-24 17:48:19 UTC <nand`> I
2012-10-24 17:48:21 UTC <nand`> that's even cooler
2012-10-24 17:48:38 UTC <nand`> I can inline Haskell into my LaTeX documents now?
2012-10-24 17:48:42 UTC <byorgey> yep
2012-10-24 17:49:07 UTC <alpounet> so naughty
2012-10-24 17:49:30 UTC <byorgey> you just build it with  pdflatex --enable-write18  and when it gets to a diagram section, it calls out to diagrams-builder-cairo to generate a pdf, then sticks a reference to it in the output
2012-10-24 17:50:24 UTC <nand`> sort of makes me wish cairo actually worked on my machine
2012-10-24 17:50:39 UTC <nand`> hopefully it'll be updated before my presentation is due :)
2012-10-24 17:50:52 UTC <nand`> (I distinctly remember asking dmwit if he had an estimate but never received a reply)
2012-10-24 17:53:02 UTC <byorgey> oh, you have 7.6?
2012-10-24 17:53:09 UTC <byorgey> yeah, I don't know
2012-10-24 18:01:19 UTC <luite> blugh some lady with a louis vuitton bag accused me of stealing her iphone
2012-10-24 18:03:24 UTC <alpounet> unsafePerformIO $ steal iPhone
2012-10-24 18:04:57 UTC <luite> the fact that it's a "seven hundred dollar phone" doesn't automatically give her the right to search my bags/pockets, just because i sat down at some spot where she shouthg she left it
2012-10-24 18:15:20 UTC <luite> meh so now i have a few hours to kill before going to mv
2012-10-24 19:24:21 UTC <fryguybob> nand`: The postscript backend has even more hackish support for inline diagrams in latex.
2012-10-24 19:26:35 UTC <byorgey> oh yeah, I was going to add postscript to the backends supported by diagrams-builder
2012-10-24 19:27:33 UTC <fryguybob> even better.
2012-10-24 19:48:58 UTC <luite> bluh, bored, can concentrate on reading
2012-10-24 19:49:53 UTC <luite> <- in some upscale westfield shopping center now, first place i found where they have comfortable benches that don't belong to something that sells food or drinks
2012-10-24 19:50:45 UTC <luite> and where $3 gets you a lot less coffee than elsewhere :)
2012-10-24 23:13:18 UTC <cmears> byorgey: Thanks very much!
2012-10-24 23:18:53 UTC <cmears> Is there any interest in lines/arcs/bezier curves with arrowheads?
2012-10-24 23:20:57 UTC <fryguybob> cmears: Yes.  We descussed it a bit several times.
2012-10-24 23:22:09 UTC <fryguybob> I think several of the supporting parts are there, but I'm not sure what is left.
2012-10-24 23:26:50 UTC <cmears> fryguybob: OK, thanks
2012-10-24 23:27:03 UTC <cmears> It seems easy enough to do by hand
2012-10-24 23:27:16 UTC <cmears> Maybe the tricky part is getting to work well in general, and have a good interface
2012-10-24 23:27:38 UTC <cmears> (for example, how the arrowhead thickness changes with line width)
2012-10-24 23:28:26 UTC <fryguybob> cmears: Right.
2012-10-25 02:37:16 UTC <byorgey> cmears: yup. that's on the list.  I think we have a good idea how to do it.  At this point it's just an issue of sitting down and putting together some of the existing pieces.
2012-10-25 02:37:25 UTC <byorgey> I hope to do it sometime soon after the 0.6 release.
2012-10-25 02:37:44 UTC <byorgey> or if someone else wants to do it I can do a brain dump into a wiki page with guidance.
2012-10-25 02:39:33 UTC <cmears> I'd be willing to try, but I don't want to distract you from making the release
2012-10-25 02:41:17 UTC <byorgey> nah, you wouldn't distract me
2012-10-25 02:41:31 UTC <byorgey> I'll write up some notes for you soon
2012-10-25 02:42:44 UTC <cmears> Great!
2012-10-25 02:42:49 UTC <byorgey> thanks! =)
2012-10-25 02:43:03 UTC <cmears> I made these nice arrowheads for my Bezier curves: http://www.csse.monash.edu.au/~cmears/n-queens.png
2012-10-25 02:43:22 UTC <cmears> That is what got me thinking about it
2012-10-25 02:44:18 UTC <byorgey> ah, nice
2012-10-25 02:44:28 UTC <byorgey> wait, did you make that using diagrams?
2012-10-25 02:44:51 UTC <cmears> Yes
2012-10-25 02:46:28 UTC <byorgey> cool =)
2012-10-25 02:48:51 UTC <cmears> Each arrowhead is just a 4-sided polygon oriented along the vector from the curve's control point to its end point
2012-10-25 02:49:08 UTC <byorgey> right, makes sense
2012-10-25 02:49:20 UTC <cmears> Unfortunately it's not the same notion of "orient" that the polygon code uses
2012-10-25 02:49:30 UTC <byorgey> right.
2012-10-25 02:49:50 UTC <cmears> But it's just a rotation by (direction vector)
2012-10-25 02:50:08 UTC <byorgey> it's not clear how to automatically orient arbitrary polygons in the "right" way to be arrowheads.
2012-10-25 02:50:30 UTC <byorgey> but we could just have a convention that if you specify an arbitrary polygon as an arrowhead it "points" along the positive x-axis, or something like that
2012-10-25 02:50:36 UTC <cmears> In this case the polygon's natural direction is along the positive x-axis
2012-10-25 02:50:37 UTC <cmears> Exactly
2012-10-25 04:33:37 UTC <cmears> If I want to try the development versions of diagrams-*, what is the best way to do it without breaking the released version?
2012-10-25 04:33:42 UTC <cmears> Something like cabal-dev?
2012-10-25 04:36:13 UTC <byorgey> cmears: Yes, but instead of cabal-dev, use hsenv, it's much more convenient when working with multiple packages.  https://github.com/Paczesiowa/hsenv
2012-10-25 04:36:54 UTC <byorgey> basically you start a new environment, then any commands you run in that shell are sandboxed
2012-10-25 04:37:09 UTC <byorgey> so just start up a new dev environment and then do cabal install etc. as usual
2012-10-25 04:37:26 UTC <byorgey> then when you deactivate the environment you're back to the released version.
2012-10-25 04:37:37 UTC <byorgey> cmears: see also http://www.haskell.org/haskellwiki/Diagrams/Contributing
2012-10-25 04:37:58 UTC <cmears> Great, that's what I was looking for
2012-10-25 04:38:26 UTC <cmears> I was trying Google for all sorts of combinations of "cabal local packages" when I should have just read the wiki (:
2012-10-25 04:38:35 UTC <byorgey> hehe
2012-10-25 04:53:26 UTC <cmears> Does hsenv do anything strange with the Haddock documentation?
2012-10-25 04:54:56 UTC <byorgey> uhh, good question, I don't actually know
2012-10-25 04:55:16 UTC <byorgey> wait, let me check
2012-10-25 04:55:34 UTC <byorgey> oh, well, doesn't it say in the build output where it's installing the documentation?
2012-10-25 04:55:57 UTC <cmears> I'm getting "cabal: Run the 'configure' command first." I think when it tries to run "cabal haddock"
2012-10-25 04:56:18 UTC <byorgey> cmears: and what command are you running that gives you that error?
2012-10-25 05:23:49 UTC <cmears> cabal -v3 install --enable-documentation diagrams-core/ diagrams-lib/ --force-reinstalls
2012-10-25 05:24:56 UTC <byorgey> hmm, weird
2012-10-25 05:33:22 UTC <cmears> OK, even from the diagrams-core directory doing "cabal configure && cabal install --enable-documentation" doesn't work
2012-10-25 05:33:24 UTC <cmears> That is weird
2012-10-25 05:33:44 UTC <byorgey> this is inside an active hsenv environment?
2012-10-25 05:34:07 UTC <cmears> Yeah
2012-10-25 05:34:16 UTC <byorgey> weird indeed
2012-10-25 05:34:23 UTC <byorgey> can you paste the output with -v3?
2012-10-25 05:34:27 UTC <cmears> But just "cabal haddock" works
2012-10-25 05:35:19 UTC <cmears> ... but no "all packages index" apparently
2012-10-25 05:36:16 UTC <byorgey> boo
2012-10-25 05:36:48 UTC <byorgey> I guess I've never run into this because hsenv creates a sandboxed version of cabal with a fresh config, and hence documentation isn't on by default
2012-10-25 05:36:56 UTC <byorgey> and I've never bothered to pass --enable-documentation
2012-10-25 05:37:09 UTC <cmears> http://hpaste.org/76739
2012-10-25 05:37:26 UTC <cmears> line 474
2012-10-25 05:38:27 UTC <cmears> I guess you don't need to refer to the documentation very often like I do (:
2012-10-25 05:38:47 UTC <byorgey> exactly =)
2012-10-25 05:39:25 UTC <byorgey> hmm, but after line 474 it looks like it's doing a bunch of copying of documentation
2012-10-25 05:40:18 UTC <cmears> I think because I had successfully run cabal haddock before that run
2012-10-25 05:40:23 UTC <cmears> The documentation was already made
2012-10-25 05:40:44 UTC <byorgey> ahh
2012-10-25 05:41:25 UTC <byorgey> well, I need to go to bed
2012-10-25 05:41:47 UTC <byorgey> but we should file an hsenv bug
2012-10-25 05:41:49 UTC <cmears> Thanks again for all your help
2012-10-25 05:41:54 UTC <byorgey> you're welcome
2012-10-25 05:41:56 UTC <cmears> Yeah, I'll check with hsenv
2012-10-25 12:23:59 UTC <fryguybob> byorgey: cmears: Arrow head orrientation on Beziers might be best matching the angle a little bit back from the start in some cases.
2012-10-25 12:24:21 UTC <fryguybob> cmears: Excellent diagram by the way!
2012-10-26 00:23:06 UTC <cmears> fryguybob: thanks (:
2012-10-26 04:33:41 UTC <cmears> I see "clampBefore" in active is not so safe to call (:
2012-10-26 05:00:20 UTC <cmears> Can someone please test this animation: http://www.csse.monash.edu.au/~cmears/anim/anim.html
2012-10-31 14:07:56 UTC <fryguybob> byorgey: FillRule is missing an Eq instance, do we have any conventions for what instances something like that should have?
2012-10-31 14:07:57 UTC <fryguybob> I need it as I switched to tracking state at render time and eventually can use that to avoid emitting code that would do nothing (due to it being equal to the current state).
2012-10-31 14:45:12 UTC <byorgey> fryguybob: ah, right, makes sense
2012-10-31 14:50:10 UTC <byorgey> we don't have any conventions about that, but certainly Eq is reasonable
2012-10-31 14:51:35 UTC <byorgey> and Ord, Enum, Bounded
2012-10-31 14:52:01 UTC <fryguybob> byorgey: Ok, I have a pull request for the types that made sense to me.  The ceiling thing is trickier then I thought.
2012-10-31 14:52:16 UTC <byorgey> fryguybob: oh? what makes it tricky?
2012-10-31 14:52:24 UTC <byorgey> I had a proof and everything!
2012-10-31 14:53:20 UTC <fryguybob> Hehe, so it needs to be `fromIntegral . ceiling` which would have to be via Integer so we don't have some weird overflow.
2012-10-31 14:53:39 UTC <fryguybob> But then can we overflow double on the way back?
2012-10-31 14:54:07 UTC <byorgey> ohh, I see, right
2012-10-31 14:54:12 UTC <byorgey> stupid types
2012-10-31 14:54:19 UTC <fryguybob> I guess that's still in a better place then adding 1 when that could be a noop against some large e anyway.
2012-10-31 14:54:20 UTC <byorgey> always getting in the way =P
2012-10-31 14:54:36 UTC <fryguybob> hehe, I said "yeah types" when I got the type error.
2012-10-31 14:54:58 UTC <byorgey> I mean, I don't really envision people calling  arcT 298673.77 1  or whatever
2012-10-31 14:55:11 UTC <byorgey> but it just seems like the Right Way (tm) to do it
2012-10-31 14:55:42 UTC <fryguybob> Yeah, I don't think we introduce any new Double weirdness.
2012-10-31 14:56:41 UTC <byorgey> Prelude Test.QuickCheck> quickCheck (\s (e :: Double) -> e < s ==> ceiling (s - e) > 0)
2012-10-31 14:56:44 UTC <byorgey> +++ OK, passed 100 tests.
2012-10-31 14:56:52 UTC <fryguybob> ACTION now has a whole new reading of 1984 with IEEE 754 in mind.
2012-10-31 14:56:54 UTC <byorgey> see, it must be OK
2012-10-31 14:56:59 UTC <fryguybob> hehe
2012-10-31 14:57:17 UTC <byorgey> "some Doubles are more equal than others"?
2012-10-31 14:57:47 UTC <fryguybob> doubleplusungood!
2012-10-31 14:58:34 UTC <byorgey> hehehe
2012-10-31 14:59:07 UTC <byorgey> if there are e < s with ceiling (s - e) > 0, it would be  doubleminusungood
2012-10-31 15:13:21 UTC <fryguybob> Ok those changes are now up.  Postscript now has even-odd, dashing and join styles.
2012-10-31 15:13:31 UTC <fryguybob> All that's left is fonts!
2012-10-31 15:20:42 UTC <byorgey> yay!
2012-10-31 15:20:59 UTC <byorgey> I'll re-generate the test matrix this afternoon
2012-10-31 23:31:05 UTC <fryguybob> Humm, there are some extensions for getting PDF transparency in a Postscript file, but it appears that ghostscript does not support them :(
2012-11-01 00:01:44 UTC <byorgey> aww =(
2012-11-01 00:05:18 UTC <byorgey> updated backend test results: http://projects.haskell.org/diagrams/backend-tests/all-index.html
2012-11-01 00:06:21 UTC <byorgey> also, repo for generating backend tests is now here:  github.com/diagrams/diagrams-backend-tests
2012-11-01 00:09:26 UTC <luite> hm svg line width looks off in chrome
2012-11-01 00:09:46 UTC <byorgey> luite: svg line width looks off everywhere
2012-11-01 00:09:51 UTC <byorgey> because it is wrong =)
2012-11-01 00:10:05 UTC <byorgey> I'm going to fix it soon
2012-11-01 00:10:14 UTC <luite> oh safari displays it ok
2012-11-01 00:10:39 UTC <byorgey> oh really?  you mean it looks the same as the others?
2012-11-01 00:11:03 UTC <luite> yeah, maybe a very light difference
2012-11-01 00:11:27 UTC <luite> line-attributes is still wrong though
2012-11-01 00:11:34 UTC <luite> and grey things seem to be displayed black
2012-11-01 00:11:47 UTC <luite> (or thin lines)
2012-11-01 00:11:53 UTC <byorgey> I'd love to see a screenshot
2012-11-01 00:12:16 UTC <luite> sure, one moment
2012-11-01 00:17:28 UTC <byorgey> well, in any case, I know for a fact that SVG is wrong, because there's a function that completely ignores one of its arguments
2012-11-01 00:17:36 UTC <fryguybob> Humm svg text only shows when you change the color.
2012-11-01 00:17:51 UTC <byorgey> oh, interesting
2012-11-01 00:18:00 UTC <byorgey> yeah, I was wondering why that green "world" was there
2012-11-01 00:18:47 UTC <byorgey> ah, https://github.com/diagrams/diagrams-svg/issues/15
2012-11-01 00:30:06 UTC <fryguybob> byorgey: Also, compare can can do image differences
2012-11-01 00:31:54 UTC <byorgey> oh, interesting
2012-11-01 00:35:44 UTC <fryguybob> I guess it is called compare in that case :D.
2012-11-01 00:38:16 UTC <luite> byorgey: http://hdiff.luite.com/tmp/diagrams/
2012-11-01 00:39:59 UTC <byorgey> luite: thanks
2012-11-01 00:41:05 UTC <byorgey> off to bake some apple crisp, will look at this later
2012-11-01 00:42:07 UTC <luite> oh apple crumble :)
2012-11-01 00:42:51 UTC <fryguybob> byorgey: convert also has the stroke on svg.
2012-11-01 00:43:33 UTC <fryguybob> trying inkscape...
2012-11-01 00:44:33 UTC <fryguybob> inkscape shows stroke width set to 0.01px
2012-11-01 00:51:54 UTC <cmears> Next iteration of animated diagrams, now with everything in one big file: http://www.csse.monash.edu.au/~cmears/anim/pythag.html
2012-11-01 00:53:15 UTC <luite> cute
2012-11-01 01:11:04 UTC <byorgey> cmears: nice!
2012-11-01 01:12:36 UTC <cmears> The file is about 350 kilobytes
2012-11-01 01:12:48 UTC <byorgey> yikes
2012-11-01 01:12:48 UTC <cmears> But it compresses to about 8 kilobytes
2012-11-01 01:13:01 UTC <byorgey> ah, not too bad
2012-11-01 01:13:05 UTC <cmears> So if the server sends it compressed, it's fine
2012-11-01 01:13:13 UTC <cmears> (I guess)
2012-11-01 01:13:39 UTC <fryguybob> byorgey: If I zoom in with Chrome I see faint lines :D.
2012-11-01 01:13:59 UTC <byorgey> hehe =)
2012-11-01 01:14:30 UTC <fryguybob> So I think it is just a difference of how to interpret really thin lines.
2012-11-01 01:14:42 UTC <fryguybob> (clearly the lines should not be so thin)
2012-11-01 01:14:57 UTC <byorgey> luite: I just added a new test at the very end of http://projects.haskell.org/diagrams/backend-tests/all-index.html, what does it look like in Safari?
2012-11-01 01:17:21 UTC <luite> http://hdiff.luite.com/tmp/diagrams/Screen%20Shot%202012-11-01%20at%202.15.59%20AM.png
2012-11-01 01:17:51 UTC <byorgey> ok, that's what I thought.
2012-11-01 01:18:30 UTC <byorgey> yes, it just looks like a difference in how to render very thin lines
2012-11-01 01:19:31 UTC <byorgey> luite: thanks!
2012-11-01 01:19:59 UTC <byorgey> this is not the first time we've run into differences in SVG rendering across browsers
2012-11-01 01:20:03 UTC <byorgey> and I'm sure it won't be the last =P
2012-11-01 01:20:14 UTC <fryguybob> I'm sure everyone is waiting on the edge of their seat to know what IE does.
2012-11-01 01:20:34 UTC <byorgey> it probably crashes or something
2012-11-01 01:20:52 UTC <fryguybob> Every svg is supposed to be a red x right?
2012-11-01 01:21:15 UTC <byorgey> hahaha
2012-11-01 01:22:12 UTC <cmears> I think some versions of IE will do SVG, but not with an IMG element
2012-11-01 15:40:39 UTC <alpounet> byorgey, type matrices! omg
2012-11-01 15:40:46 UTC <alpounet> ACTION stars the repo
2012-11-01 16:06:59 UTC <fryguybob> "Matrices of types are sweet"
2012-11-01 17:37:59 UTC <byorgey> hehehe
2012-11-01 17:41:49 UTC <byorgey> alpounet: http://blog.sigfpe.com/2010/08/divided-differences-and-tomography-of.html http://byorgey.wordpress.com/2010/08/12/on-a-problem-of-sigfpe/ http://blog.sigfpe.com/2010/08/constraining-types-with-regular.html
2012-11-01 17:42:06 UTC <byorgey> alpounet: basically we're going to properly write this stuff up
2012-11-01 17:51:16 UTC <byorgey> but please don't publicize it yet
2012-11-01 17:51:34 UTC <byorgey> though I guess with a public repo on github it's already out there =)
2012-11-01 17:58:00 UTC <alpounet> byorgey, no problem for not publicizing it
2012-11-01 17:58:07 UTC <alpounet> but that's some cool stuffs there!
2012-11-01 17:58:14 UTC <byorgey> yes indeed!
2012-11-01 18:02:27 UTC <alpounet> a bit mind bending, but still, very cool
2012-11-01 18:02:47 UTC <byorgey> agreed =)
2012-11-01 18:08:23 UTC <alpounet> i used to do similar stuffs with C++ template metaprogramming
2012-11-01 18:08:38 UTC <alpounet> but mixing these stuffs with derivatives of types and the likes are giving me a bit of a hard time :]
2012-11-01 18:10:00 UTC <luite> hm oh interesting
2012-11-01 18:12:41 UTC <ClaudiusMaximus> when's the HCAR deadline?
2012-11-01 18:14:16 UTC <ClaudiusMaximus> oh, today :S
2012-11-01 18:15:09 UTC <luite> oh
2012-11-01 18:17:16 UTC <luite> blugh i have no concentration
2012-11-01 18:21:45 UTC <byorgey> yeah, HCAR dealine is today.  though Janis will usually take stuff a day or two late.
2012-11-01 18:21:56 UTC <byorgey> but does not advertise that fact for obvious reasons.
2012-11-01 21:01:44 UTC <luite> \o/
2012-11-01 21:04:03 UTC <byorgey> \o/
2012-11-01 21:04:17 UTC <byorgey> what are we \o/ing about?
2012-11-01 21:04:21 UTC <luite> dunno
2012-11-01 21:04:35 UTC <byorgey> I see, cool
2012-11-01 21:04:54 UTC <byorgey> (...) [x] = repeat x
2012-11-01 21:05:00 UTC <byorgey> (...) x@(x0:xs) = scanl (+) x0 ((zipWith (-) xs x)...)
2012-11-01 21:05:19 UTC <byorgey> coolest code I've seen in a long time =)
2012-11-01 21:08:59 UTC <luite> where did you find that?
2012-11-01 21:09:24 UTC <byorgey> someone pasted a link to it in #haskell a few days ago
2012-11-01 21:09:32 UTC <byorgey> http://codepad.org/WDXeV59b
2012-11-01 21:09:46 UTC <byorgey> I guess rwbarton wrote it
2012-11-01 21:11:50 UTC <luite> ah i think i
2012-11-01 21:11:56 UTC <luite> 've seen it before, without the (...) :)
2012-11-01 21:15:41 UTC <byorgey> yeah, I meant to paste a different version
2012-11-01 21:16:08 UTC <byorgey> the (...) is cute but requires -XPostfixOperators
2012-11-01 21:16:36 UTC <byorgey> I'm going to put it on my students' homework, as an optional exercise: "explain what this code does." =)
2012-11-01 21:19:54 UTC <alpounet> byorgey, i wish that worked for metaprogramming, like figuring out the rest of the code for a module or smth
2012-11-01 21:20:13 UTC <byorgey> alpounet: oh, it does!
2012-11-01 21:20:18 UTC <alpounet> cool
2012-11-01 21:20:29 UTC <byorgey> alpounet: unfortunately it only works for metaprograms which are described by polynomials
2012-11-01 21:20:35 UTC <alpounet> going to try: module Scoutess where ...
2012-11-01 21:23:16 UTC <alpounet> ACTION is staring at calls to "fix" in Hackage2's code base
2012-11-01 21:24:00 UTC <byorgey> oooh
2012-11-01 21:25:02 UTC <alpounet> http://hpaste.org/77132
2012-11-01 21:27:19 UTC <byorgey> alpounet: that just means that within the body, r is bound to the value of the entire  RestoreBackup ...  value itself
2012-11-01 21:27:47 UTC <byorgey> so it's a slightly obfuscated way of saying   let r = RestoreBackup ... r ...  in  r
2012-11-01 21:28:00 UTC <alpounet> yeah
2012-11-01 21:28:03 UTC <alpounet> neat trick though
2012-11-01 21:28:13 UTC <byorgey> indeed =)
2012-11-01 21:28:53 UTC <byorgey> oh, maybe you already knew that
2012-11-01 21:29:04 UTC <byorgey> by 'staring' I thought you meant you were confused by it
2012-11-01 21:29:48 UTC <alpounet> before your comment, i didn't "do the math" to know why that works
2012-11-01 21:30:00 UTC <byorgey> ah, ok =)
2012-11-01 21:30:08 UTC <alpounet> so you have been helpful :)
2012-11-01 21:30:14 UTC <byorgey> excellent =)
2012-11-01 21:30:22 UTC <alpounet> i'm trying to help a bit on the hackage2 front
2012-11-01 21:30:31 UTC <alpounet> i'm sick of seeing people whining about cabal/hackage
2012-11-01 21:30:36 UTC <alpounet> without any of them doing anything about it
2012-11-01 21:37:02 UTC <byorgey> excellent =)
2012-11-01 22:29:25 UTC <tgeeky> alpounet: well; several people have done "their own thing" about it
2012-11-01 22:29:48 UTC <alpounet> yeah yeah i know
2012-11-01 22:30:01 UTC <tgeeky> the issue is; how does the community advance under that model?
2012-11-01 22:30:04 UTC <alpounet> i'm myself writing something to help with that (scoutess)
2012-11-01 22:30:27 UTC <alpounet> (it's not like cabal-dev, cabal-nirvana or whatever, it's a build-bot-on-steroids kind of thing for cabal-powered projects)
2012-11-01 22:31:07 UTC <alpounet> we're converging on providing the right tools for 1/ users 2/ package maintainers
2012-11-01 22:31:38 UTC <alpounet> by we, i mean at most 20 people actively working on these problems.
2012-11-01 22:32:15 UTC <tgeeky> I get rather frustrated by some of the ranting that goes on about cabal and hackage on reddit
2012-11-01 22:35:34 UTC <alpounet> same here yes, i mean we almost all know what the problems are. the cabal/hackage devs know what to do, and they do it whenever they find some spare time. so, the usual "whinings" from people who don't even dare to contribute anything are getting *really* annoying.
2012-11-01 22:37:19 UTC <tgeeky> yes; as well as getting facts wrong about policies (PVP) and causes and effects
2012-11-01 22:37:19 UTC <tgeeky> it's not as though these problems aren't identified
2012-11-01 22:38:33 UTC <tgeeky> also, it's important to recognize that some of these things operate on the thinnest of shoestring budgets
2012-11-01 22:39:05 UTC <alpounet> yeah...
2012-11-01 22:43:35 UTC <alpounet> oh: http://softwaresimply.blogspot.fr/2012/11/why-cabal-has-problems.html?utm_source=twitterfeed&utm_medium=twitter&utm_campaign=Feed:+SoftwareSimply+(Software+Simply)
2012-11-02 02:48:21 UTC <fryguybob> byorgey: How goes the HCAR?
2012-11-02 02:50:42 UTC <byorgey> fryguybob: fine, but I'm now working on stuff for my class since Janis said he would still take entries until the middle of next week.
2012-11-02 02:51:06 UTC <byorgey> fryguybob: I hope to submit it sometime tomorrow or Saturday.  feel free to take a look at what's there so far and make edits/additions
2012-11-02 02:51:34 UTC <fryguybob> Oh, is it in a repo?
2012-11-02 02:51:57 UTC <byorgey> diagrams-doc/HCAR
2012-11-02 02:52:10 UTC <fryguybob> Excellent.
2012-11-02 02:52:31 UTC <fryguybob> ACTION tries to ignore the strange noises in his spice drawer...
2012-11-02 02:54:07 UTC <byorgey> ACTION is unsure what sense of "strange" fryguybob is using
2012-11-02 02:55:42 UTC <fryguybob> false alarm
2012-11-02 02:56:50 UTC <byorgey> fryguybob: what, it was a friendly spice gnome?
2012-11-02 02:57:58 UTC <fryguybob> I think it is just getting colder outside and that is causing poping noises for some reason.
2012-11-02 02:58:16 UTC <fryguybob> Which of course sound like a mouse flopping around in the spice drawer.
2012-11-02 03:02:05 UTC <byorgey> fryguybob: so I surmise you all made it through the storm fine?  no loss of power, trees on things trees shouldn't be on, etc.?
2012-11-02 03:03:23 UTC <fryguybob> byorgey: We have worse storms every year.
2012-11-02 03:04:01 UTC <fryguybob> The last leaves blew off the trees, but not much else around home.  Some power was out in a few places in Rochester.
2012-11-02 03:04:19 UTC <fryguybob> How's it around there?
2012-11-02 03:05:11 UTC <byorgey> fine, it really wasn't too bad in Philly
2012-11-02 03:05:22 UTC <byorgey> we know a few friends who lost power but most (including us) didn't
2012-11-02 04:13:13 UTC <byorgey> hooray for cabal install -j =)
2012-11-02 04:55:44 UTC <byorgey> haha, mgsloan's interactive Extrude toy is fun =)
2012-11-02 05:28:30 UTC <byorgey> there, that's all the outstanding pull requests!
2012-11-02 05:28:42 UTC <byorgey> coming soon, a feature freeze for 0.6
2012-11-02 05:28:45 UTC <byorgey> but now, to bed.
2012-11-02 12:18:06 UTC <fryguybob> ACTION makes another attempt to get a working GTK.
2012-11-02 12:20:22 UTC <ClaudiusMaximus> fryguybob: the patch bundle posted to the gtk list worked for me with ghc-7.6
2012-11-02 12:20:29 UTC <ClaudiusMaximus> gtk2hs list
2012-11-02 12:21:02 UTC <fryguybob> My issues start before that unfortunately.
2012-11-02 12:21:07 UTC <ClaudiusMaximus> oh
2012-11-02 12:21:12 UTC <fryguybob> I don't have complete control over the system.
2012-11-02 12:21:15 UTC <ClaudiusMaximus> ACTION made false assumptions
2012-11-02 12:44:51 UTC <fryguybob> ACTION gets one lib closer.
2012-11-02 18:48:07 UTC <fryguybob> byorgey: When I get a chance I'll put up a pull request that just changes the name of `expandPath` to make way for better things when they are ready.
2012-11-02 18:48:27 UTC <byorgey> fryguybob: ok, sounds good
2012-11-02 18:48:53 UTC <byorgey> there, I just sent an email about preparing for the 0.6 release
2012-11-03 18:34:23 UTC <ezyang> I wonder if a D3.js like model would be a good fit for 'animated diagrams'
2012-11-03 18:43:06 UTC <luite> hmm d3 still looks fairly imperative right, with chained functiones?
2012-11-03 18:44:01 UTC <ezyang> It's very imperative, but that's not really the point
2012-11-03 18:45:08 UTC <luite> ah do you have an example of what you mean then?
2012-11-03 18:45:17 UTC <ezyang> D3 proposes a very peculiar notion of reactivity, where the underlying data is always an array and you have different reactions per whether or not an element of the array is added, deleted or modified
2012-11-03 18:45:53 UTC <luite> I'm still working on the low level bits, but i really want to have interactive digrams in the browser in a few months :)
2012-11-03 18:46:34 UTC <ezyang> Nice!
2012-11-03 18:46:50 UTC <ezyang> Actually, it sort of feels like it would be more profitable to port the diagrams API to JavaScript. Except *bleh javascript*
2012-11-03 18:46:51 UTC <luite> (low level bits = ghcjs code generator that's fast enough for this)
2012-11-03 18:47:48 UTC <luite> hm, you're at mit right, are you following some courses at stanford?
2012-11-03 18:49:27 UTC <ezyang> No, I'm at Stanford now :)
2012-11-03 18:49:32 UTC <luite> oh cool
2012-11-03 18:49:42 UTC <ezyang> (actually, I'm doing pretty poorly in the class, but whatever, I'm a grad student now, I get to not care ^_^)
2012-11-03 18:49:47 UTC <luite> hehe
2012-11-03 18:50:25 UTC <luite> meh i visisted the stanford campus last week, museum etc, but i'm back in holland now
2012-11-03 18:50:34 UTC <ezyang> Aw.
2012-11-03 18:54:22 UTC <luite> anyway if you have specific ideas of how reactivity should work, please tell me :) ghcjs should support green threads soon-ish, so threading and blocking on events should be supported
2012-11-03 18:55:29 UTC <ezyang> I haven't thought about it in enough detail
2012-11-03 18:55:49 UTC <luite> (in the current generator, threads are already supported, but it's way too slow and leaks too much memory to do anything complex with diagrams)
2012-11-03 18:56:04 UTC <ezyang> But you should read up on http://bost.ocks.org/mike/constancy/ (object constancy) which is a really big deal as far as efficiency and animation goes
2012-11-03 18:56:42 UTC <luite> ah tnx
2012-11-03 18:58:05 UTC <luite> there were some gloss-like examples with fay on reddit, but to do the same with diagrams, the whole lib would need be be rewritten without type classes
2012-11-03 18:58:24 UTC <luite> i don't think anyone would want that :)
2012-11-03 18:59:37 UTC <ezyang> I'm still kind of skeptical about the compiling to JavaScript thing, I must admit ^_^
2012-11-03 19:00:14 UTC <luite> hehe we'll see, it's surely a lot of work. but simple benches from the ghc bench suite run only 10x slower than native ghc
2012-11-03 19:00:31 UTC <luite> (while older ghcjs, hast and fay are usually 10x slower than that)
2012-11-03 19:01:58 UTC <ezyang> :)
2012-11-03 19:52:15 UTC <byorgey> ezyang: we have some cool stuff with animated/interactive diagrams hopefully coming down the pipeline, but I can't promise anything quite yet =)
2012-11-03 20:05:53 UTC <romildo> Hi.
2012-11-03 20:09:22 UTC <byorgey> hi romildo
2012-11-03 20:10:41 UTC <romildo> I am trying to run the first example from the diagrams-contrib module  Diagrams.TwoD.Layout.Tree
2012-11-03 20:11:13 UTC <romildo> I am getting a compilation error
2012-11-03 20:11:34 UTC <byorgey> romildo: ah, hmm, can you paste the error somewhere?
2012-11-03 20:12:19 UTC <romildo> The program : http://dpaste.com/823888/
2012-11-03 20:13:11 UTC <byorgey> oh, I see you figured out to add the missing lf function and import Data.Tree
2012-11-03 20:13:56 UTC <romildo> The error: http://dpaste.com/823889/
2012-11-03 20:14:30 UTC <byorgey> oh, I see, that is only because GHC does not know what backend type to use for 'example'
2012-11-03 20:15:32 UTC <romildo> In fact, I do not know how to do anything with diagrams. This is my first attempt. I want to layout a tree and save it to a file.
2012-11-03 20:15:53 UTC <romildo> Would you please show how to do that with this example?
2012-11-03 20:15:56 UTC <byorgey> romildo: sure
2012-11-03 20:16:00 UTC <byorgey> romildo: do you have diagrams-cairo installed?
2012-11-03 20:16:06 UTC <romildo> yes.
2012-11-03 20:16:29 UTC <byorgey> romildo: ok. so import it with    import Diagrams.Backend.Cairo.CmdLine
2012-11-03 20:16:35 UTC <romildo> I have successfully run the first example from the diagrams from the tutorial.
2012-11-03 20:16:43 UTC <byorgey> and then add    main = defaultMain example
2012-11-03 20:17:01 UTC <byorgey> that will actually make the type of example unambiguous because now GHC can infer that you are using the cairo backend.
2012-11-03 20:17:30 UTC <byorgey> then compile and run with ./RenderTree -o RenderTree.png -w 400  or something like that
2012-11-03 20:20:28 UTC <romildo> that worked.
2012-11-03 20:21:27 UTC <romildo> And what about if I need to save the image from inside my program, without passing the file name as a command line argument?
2012-11-03 20:22:15 UTC <romildo> That is, I want a function that is given a diagram (like "example" in this demo) and a string (a file name), and renders the diagram to the file name.
2012-11-03 20:24:01 UTC <ClaudiusMaximus> romildo: quick hack is "withArgs", otherwise see how defaultMain is implemented
2012-11-03 20:29:12 UTC <romildo> ' withArgs ["-o","test.pdf","-w","400"] (defaultMain example) ' worked.
2012-11-03 20:29:30 UTC <romildo> Thanks for the help.
2012-11-03 20:30:18 UTC <romildo> Maybe it would be a good idea to complete the examples so that it have 'main'.
2012-11-04 08:36:41 UTC <romildo> Hi.
2012-11-04 08:37:11 UTC <romildo> Please, help me with this module: http://dpaste.com/824210/
2012-11-04 08:39:51 UTC <romildo> It does not work: http://dpaste.com/824211/
2012-11-04 20:59:51 UTC <luite> hm
2012-11-04 21:26:05 UTC <fryguybob> hmm
2012-11-04 21:27:26 UTC <luite> :)
2012-11-04 23:56:18 UTC <cmears> Hi everyone. I suppose people have seen the animated factorisation diagrams (http://www.datapointed.net/2012/10/animated-factorization-diagrams/) -- does anyone know if it's generated via the diagrams package?
2012-11-05 01:08:17 UTC <byorgey> cmears: no, it isn't, I think it's just javascript
2012-11-05 01:08:30 UTC <byorgey> pretty cool though
2012-11-05 01:09:01 UTC <byorgey> I certainly envision a day when we'll be able to quickly hack up something like that using diagrams, but that day isn't here yet
2012-11-05 01:09:03 UTC <cmears> Yeah, it's javascript using canvas, but I wondered if he had used the diagrams code or just mimicked it
2012-11-05 01:09:19 UTC <byorgey> yeah, as far as I know he just mimicked it
2012-11-05 01:09:32 UTC <cmears> Pretty good copy (:
2012-11-05 01:09:34 UTC <luite> :(
2012-11-05 01:10:14 UTC <byorgey> :( ?
2012-11-05 01:10:42 UTC <luite> because that day isn't here yet
2012-11-05 01:15:33 UTC <cmears> If I get some time I will try to mimic it with diagram's animation stuff
2012-11-05 01:16:15 UTC <cmears> By the way, what is broken about the SVG backend? I'm using Cairo to produce SVG frames for animations, but maybe the SVG backend would be better
2012-11-05 01:16:37 UTC <byorgey> cmears: cool, keep a list of features/enhancements that would make the animation stuff better/easier to use
2012-11-05 01:17:08 UTC <byorgey> cmears: https://github.com/diagrams/diagrams-svg/issues?state=open
2012-11-05 01:17:31 UTC <byorgey> the biggest thing is https://github.com/diagrams/diagrams-svg/issues/24  which is really due to  https://github.com/diagrams/diagrams-svg/issues/19
2012-11-05 01:18:08 UTC <byorgey> cmears: you can also see a comparison of the current state of backends at  http://projects.haskell.org/diagrams/backend-tests/all-index.html
2012-11-05 01:18:28 UTC <byorgey> cmears: also, I haven't forgotten about writing up some notes re: arrows for you, I just haven't found time to do it yet
2012-11-05 01:22:24 UTC <cmears> Thanks, that's great, I'll take a look at those
2012-11-05 01:22:35 UTC <cmears> Don't feel rushed on the arrow stuff (:
2012-11-05 01:23:18 UTC <carter> cool
2012-11-05 01:23:29 UTC <carter> byorgey: hows that refactor by that student going?
2012-11-05 01:23:32 UTC <carter> on the points side?
2012-11-05 01:23:52 UTC <byorgey> carter: going well, apparently
2012-11-05 01:23:56 UTC <carter> cool
2012-11-05 01:24:00 UTC <byorgey> he's in the middle of it
2012-11-05 01:24:05 UTC <carter> the past 2 weeks on my side have been crazy :)
2012-11-05 01:24:12 UTC <carter> even the NYC disaster zone piece aside :)
2012-11-05 04:38:34 UTC <byorgey> alpounet: http://mathlesstraveled.com/2012/11/05/more-factorization-diagrams/
2012-11-05 04:38:50 UTC <byorgey> sorry I didn't tell you about it before publishing
2012-11-05 04:39:15 UTC <byorgey> I had to publish before midnight or lose at my goal of blogging twice a week ( https://www.beeminder.com/byorgey/goals/blogging )
2012-11-05 04:39:19 UTC <byorgey> =)
2012-11-05 04:40:19 UTC <byorgey> man, two blog posts a week doesn't sound like much but it's hard work.  it's been great though.
2012-11-05 04:50:28 UTC <luite> ah cool pics :)
2012-11-05 04:53:32 UTC <luite> i saw the irrationals book in my amazon suggestions earlier, but didn't order it because i thought it wouldn't contain enough that i didn't already know... maybe it's more intereting than i thought at first :)
2012-11-05 05:00:15 UTC <byorgey> luite: which irrationals book?
2012-11-05 05:00:27 UTC <luite> that you reviewed
2012-11-05 05:00:32 UTC <byorgey> oh! hehe, right
2012-11-05 05:00:55 UTC <byorgey> yeah, it actually goes into quite a bit of depth.
2012-11-05 05:09:26 UTC <luite> hm bleh can't sleep
2012-11-05 05:12:53 UTC <byorgey> =(
2012-11-05 05:13:43 UTC <luite> hm you seem to get a lot of books from princeton university press :)
2012-11-05 05:19:11 UTC <byorgey> yes, I do =)
2012-11-05 05:20:04 UTC <byorgey> they publish a lot of cool math books, and somehow I made it onto their list of "people we should send free copies of books to"
2012-11-05 05:20:33 UTC <luite> hehe i should try to get on that list :p
2012-11-05 05:21:32 UTC <luite> i've almost finished 'elliptic tales' by ash and gross, published by them, but they have lots more interesting stuff :)
2012-11-05 05:30:42 UTC <luite> (it kind of has the same problem as 'fearless symmetry' by the same authors, in that it starts relatively slowly, but the last few chapters take a lot more concentration and effort to understand)
2012-11-05 05:32:00 UTC <luite> kind of reminds me of penrose's road to reality :)
2012-11-05 05:40:23 UTC <byorgey> luite: yeah, they sent me a copy of "elliptic tales" too
2012-11-05 05:40:54 UTC <byorgey> I learned some interesting stuff from it but overall I wasn't that impressed.  I think they are confused about who their audience is.
2012-11-05 05:41:45 UTC <byorgey> and by that I think I mean something similar to your criticism.
2012-11-05 05:47:16 UTC <luite> i guess there aren't that many other 'popular math' books on the same subject though :)
2012-11-05 23:38:10 UTC <fryguybob> luite: Images in svg are already diagrams-svg issue #11.
2012-11-05 23:39:13 UTC <luite> ah
2012-11-06 00:09:17 UTC <byorgey> fryguybob, luite: though one could also imagine loading an SVG and getting a Path R2 instead of just an image.
2012-11-06 00:09:30 UTC <byorgey> (obviously it wouldn't work for all SVGs).
2012-11-06 00:10:05 UTC <luite> as long as it works for most thigns produced in inkscape it should be ok :)
2012-11-06 00:10:29 UTC <fryguybob> byorgey: Yeah, there are some other shades inbetween too like load and know a bounding box.
2012-11-06 00:11:15 UTC <fryguybob> ACTION has in the passed written very complicated code to extract paths from postscript/eps/pdf.
2012-11-06 00:11:29 UTC <fryguybob> Oh and AI too.
2012-11-06 00:12:04 UTC <luite> hm i've never worked with AI directly
2012-11-06 00:12:36 UTC <luite> is it similar to svg in structure?
2012-11-06 00:12:51 UTC <fryguybob> luite: It has a Postscript fallback of sorts but the libraries are not baked into each file (sometimes)
2012-11-06 00:14:09 UTC <byorgey> you have written code to extract artificial intelligence from postscript/eps/pdf? o.O
2012-11-06 00:15:39 UTC <fryguybob> I'm quite thoroughly convinced there is little intelligence to some of the hacks in the postscript family.
2012-11-06 00:17:21 UTC <byorgey> hehe
2012-11-06 00:17:54 UTC <fryguybob> The underlying theme is that you can send any of the files to a compliant printer and the right document will come out.  So half the time the files contain vast libraries to support the lastest features in some Adobe product.
2012-11-06 00:18:25 UTC <fryguybob> Under two or three layers of compression and encoding of course.
2012-11-06 00:19:24 UTC <fryguybob> And most of these libraries interact with some global state that each printer will have probing for features and building functionality based on the available features.
2012-11-06 00:20:07 UTC <fryguybob> So if you want to extract paths and you do things slightly wrong it will think you don't support some feature and give you a rasterized version of part of the document.
2012-11-06 00:21:32 UTC <fryguybob> Or it will adapt path resolution based on your reported DPI.  In some cases if you claim high DPI you get a good path, other cases you just get something really slow and redundant paths with way too many points.
2012-11-06 00:22:00 UTC <luite> that's all postscript code that does that?
2012-11-06 00:23:09 UTC <fryguybob> Most postscript code is rather nice, it is AI files that do most of the strange stuff in their postscript fall back (which they also use to be able to be future compatible).
2012-11-06 00:27:28 UTC <byorgey> wow, craaaazy
2012-11-06 00:28:41 UTC <luite> so when can i expect full AI support in diagrams, including future compatibility? ;)
2012-11-06 00:29:12 UTC <byorgey> I was hoping to have that done by February 30
2012-11-06 00:29:19 UTC <fryguybob> :D
2012-11-06 00:30:20 UTC <luite> hehe, is dan doel going to implement it?
2012-11-06 00:31:28 UTC <byorgey> If someone implements it by February 30, it will be dan doel
2012-11-06 00:31:52 UTC <fryguybob> I was thinking earlier today that there are probably some other interesting data sources that we could support.
2012-11-06 00:32:01 UTC <fryguybob> Along the lines of the open street map stuff.
2012-11-06 00:32:12 UTC <byorgey> yeah, sounds awesome =)
2012-11-06 00:32:19 UTC <byorgey> don't you already have a package for that?
2012-11-06 00:32:34 UTC <fryguybob> Yeah http://github.com/fryguybob/diagrams-osm
2012-11-06 00:33:04 UTC <fryguybob> It doesn't do anything very interesting at this point, but could easily do lots of neat stuff.
2012-11-06 00:36:09 UTC <byorgey> yeah
2012-11-06 00:36:49 UTC <byorgey> sounds fun.
2012-11-06 00:38:04 UTC <fryguybob> Circuit layout would be (yet) another useful thing to have.
2012-11-06 00:38:34 UTC <byorgey> you mean a little diagrams-based DSL for drawing circuit layouts?
2012-11-06 00:38:41 UTC <byorgey> yes, that sounds awesome
2012-11-06 00:39:08 UTC <luite> mask layout or circuit diagram layout? :)
2012-11-06 00:39:31 UTC <byorgey> eventually I hope if we can make diagrams attractive enough and provide enough tutorials and support etc., people will start creating those sorts of things
2012-11-06 00:39:42 UTC <fryguybob> Yeah, there is a transactional memory based parallel algorithm that I've looked, but it turns out to be incorrect.
2012-11-06 00:40:21 UTC <fryguybob> (As in it does not produce the same results as the sequential version for certain situations)
2012-11-06 00:41:53 UTC <fryguybob> The Kansas people should write that one.
2012-11-06 00:44:16 UTC <byorgey> ah, indeed =)
2012-11-06 00:44:44 UTC <byorgey> though I think Andy himself is the only one working on both diagrams *and* Lava.
2012-11-06 00:44:51 UTC <byorgey> and his interest in diagrams is more pedagogical.
2012-11-06 00:45:44 UTC <fryguybob> Humm, if I work STM into it I can proabably make it into a benchmark.
2012-11-06 00:49:05 UTC <luite> ACTION looks up Kansas on the USA map... some day i will know where all these states are ;)
2012-11-06 00:51:42 UTC <fryguybob> My wife's family has a US states jello mold and at family gatherings you had to correctly name the state before you could get your piece.
2012-11-06 00:52:01 UTC <fryguybob> (correctly name the state's captial, actually, the state would be too easy)
2012-11-06 00:55:39 UTC <byorgey> haha, awesome =)
2012-11-06 00:56:00 UTC <fryguybob> diagrams-hog: Save this link for later when I want to look at routing -- http://users.eecs.northwestern.edu/~haizhou/357/lec6.pdf
2012-11-06 00:56:16 UTC <luite> oh bah, so they have capitals too! ;)
2012-11-06 00:57:17 UTC <fryguybob> ACTION cannot come up with the capital of Kansas at the moment.
2012-11-06 00:57:39 UTC <byorgey> Topeka
2012-11-06 00:58:02 UTC <fryguybob> Right!  (you were faster then Rebekah)
2012-11-06 00:58:07 UTC <byorgey> yesssss
2012-11-06 00:58:29 UTC <byorgey> I used to know them all.  I think I still remember most.
2012-11-06 00:59:08 UTC <luite> i remember the capitals of the dutch provinces ;p
2012-11-06 01:01:15 UTC <fryguybob> I know one of the dutch provences is friesland? (Ok, so I don't know how to spell it).
2012-11-06 01:02:09 UTC <luite> yes, it's the correct spelling in dutch
2012-11-06 01:02:30 UTC <luite> its official name, and spelling in frisian, is FryslÃ¢n
2012-11-06 02:42:22 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-Bd.pdf
2012-11-06 02:42:41 UTC <byorgey> here's what I propose to submit to the HCAR, comments or patches welcome
2012-11-06 02:43:09 UTC <fryguybob> moar pages!
2012-11-06 02:45:27 UTC <byorgey> =)
2012-11-06 02:47:39 UTC <luite> :)
2012-11-06 02:52:50 UTC <fryguybob> byorgey: The only comment I have is that the http://www.cis.upenn.edu/~byorgey/hosted/diagrams-Bd.pdf
2012-11-06 02:52:54 UTC <fryguybob> oops
2012-11-06 02:53:49 UTC <byorgey> drat, the hotel bar isn't open on Mondays.
2012-11-06 02:53:58 UTC <fryguybob> byorgey: The only comment I have is that the line "Other plans for the near future include support for drawing arrows" sounds funny to me.
2012-11-06 02:54:20 UTC <fryguybob> It would be better if arrows had a friend in that sentence.
2012-11-06 02:54:29 UTC <fryguybob> Multi-page diagrams?
2012-11-06 02:55:12 UTC <luite> svg font support
2012-11-06 02:55:18 UTC <luite> wordart support
2012-11-06 02:55:28 UTC <byorgey> hmm, also, I guess "support" and "drawing" are both redundant.
2012-11-06 02:55:44 UTC <byorgey> what else is a drawing library going to do than support drawing.
2012-11-06 02:55:58 UTC <fryguybob> heat up your CPU?
2012-11-06 02:56:15 UTC <byorgey> "Other plans for the near future include making your CPU fan work even harder."
2012-11-06 02:56:42 UTC <fryguybob> "We are putting a lot of energy into your diagrams"
2012-11-06 02:57:17 UTC <byorgey> seriously, how about "Features planned for the near future include better support for arrows, multi-page diagrams, and ___"
2012-11-06 02:57:40 UTC <byorgey> but we need three things.  Quick! Someone commit to implementing something in the near future!
2012-11-06 02:58:11 UTC <fryguybob> "... and text blanks."
2012-11-06 02:58:43 UTC <fryguybob> (I already have multi-page postscript diagrams)
2012-11-06 02:58:47 UTC <byorgey> no, the SVG backend already supports blank text
2012-11-06 02:58:59 UTC <byorgey> ah, excellent
2012-11-06 02:59:00 UTC <fryguybob> hehe
2012-11-06 02:59:22 UTC <luite> have gradients been implemented yet?
2012-11-06 02:59:41 UTC <byorgey> nope
2012-11-06 02:59:46 UTC <fryguybob> That's a good one.
2012-11-06 03:00:03 UTC <byorgey> https://github.com/diagrams/diagrams-lib/issues/9
2012-11-06 03:00:26 UTC <byorgey> ok, I'll add it.  It's not like anyone is going to hold us to this list anyway. ;)
2012-11-06 03:02:21 UTC <byorgey> ahhhh, I just realized why git keeps complaining about whitespace errors, it's because this diagrams-Bd.tex uses DOS line endings
2012-11-06 03:02:30 UTC <fryguybob> ACTION senses byorgey has no hope for gradients.
2012-11-06 03:02:43 UTC <fryguybob> silly DOS
2012-11-06 03:03:02 UTC <byorgey> haha, I have plenty of hope for gradients.  They shouldn't be that hard, really.
2012-11-06 03:03:10 UTC <byorgey> they're just not a priority for me personally.
2012-11-06 03:03:36 UTC <fryguybob> byorgey: Rebekah came across this today: http://mathmamawrites.blogspot.com/2012/11/factor-diagrams.html
2012-11-06 03:04:01 UTC <fryguybob> She can't remember why she follows that blog, but clearly they have good taste :D
2012-11-06 03:04:24 UTC <byorgey> hah, excellent =)
2012-11-06 03:04:51 UTC <luite> :)
2012-11-06 03:05:23 UTC <byorgey> yeah, Sue (the author of that blog) and I actually correspond quite a bit via blog comments and email etc.
2012-11-06 03:05:24 UTC <fryguybob> She saw the title before she followed the link and said "whatever they are they can't be as cool as Brent's" :D
2012-11-06 03:05:37 UTC <byorgey> hahaha =D
2012-11-06 03:17:29 UTC <byorgey> HCAR submitted!
2012-11-06 03:17:34 UTC <byorgey> and now to write my talk for tomorrow
2012-11-06 03:33:48 UTC <luite> talk for when you win the elections?
2012-11-06 03:34:00 UTC <byorgey> right, right
2012-11-10 21:28:43 UTC <ClaudiusMaximus> i want to conformally map a long thin rectangle into the neighbourhood of a smooth curve (bezier spline or somesuch), such that the mid-line of the rectangle is along the curve - not sure how to proceed...
2012-11-10 21:30:17 UTC <ClaudiusMaximus> ...other than some numerical mesh model
2012-11-10 21:30:34 UTC <ClaudiusMaximus> maybe i should try it and see how it works
2012-11-10 21:45:48 UTC <mgsloan> Does it need to be efficient?
2012-11-10 21:46:46 UTC <ClaudiusMaximus> not necessarily at this stage
2012-11-10 21:47:14 UTC <ClaudiusMaximus> i don't really even have much of a clue where to start with a mesh model either
2012-11-10 21:47:39 UTC <mgsloan> An inefficient way to do it would be to step along the curve, computing the points that would be on the rectangle, and fit a spline to the results
2012-11-10 21:48:38 UTC <ClaudiusMaximus> other than a vague intuition that the pseudo-squares on the inside of a wiggle would be smaller than the pseudo-squares on the outside of a wiggle
2012-11-10 21:50:09 UTC <ClaudiusMaximus> not sure what you mean by "compute the points that would be on the rectangle"
2012-11-10 21:50:18 UTC <mgsloan> At some point it'd be really awesome to have some haskell written to do closed calculations on curve representations, but it'd take a bit of work.  I started working on such a library once, but I've got too many projects :D
2012-11-10 21:52:57 UTC <ClaudiusMaximus> some experiment with conformal mapping (poincare disc to strip)
2012-11-10 21:52:59 UTC <ClaudiusMaximus> http://mathr.co.uk/bolix/2012-11-10_arrows.gif
2012-11-10 21:55:22 UTC <mgsloan> Hmm, don't think I know how to do that!  Is it like this? http://en.flossmanuals.net/inkscape/live-path-effects/pattern-along-path/
2012-11-10 21:56:21 UTC <ClaudiusMaximus> sorta like the top screenshot, but that is clearly not conformal (the angles are distorted)
2012-11-10 21:59:09 UTC <ClaudiusMaximus> for a circle it's the difference between regular polar coordinates and exponential-radius polar coordinates, so maybe if i assume each bit of the curve is approximated by an arc..
2012-11-10 22:06:25 UTC <mgsloan> yeah, that'd probably be a good way to go!  One issue is what about when the width of the thin rectangle is larger than the radius of curvature?
2012-11-10 22:09:55 UTC <ClaudiusMaximus> the inside edge gets closer to the curve the tighter the curve turns, and the outside edge gets further away
2012-11-10 22:10:33 UTC <ClaudiusMaximus> so that's not the problem really - the problem is changes in the radius of curvature
2012-11-10 22:11:10 UTC <ClaudiusMaximus> but as a first approximation i think i'll write some calculations and plot some points, and see what it looks like
2012-11-10 22:39:05 UTC <ClaudiusMaximus> http://mathr.co.uk/superscript/2012-11-10_quasiconformal.png  bit buggy, mainly because the input points weren't equidistant along the curve...
2012-11-10 22:49:07 UTC <mgsloan> Cool!   Maybe arc-length re-parametrize? In diagrams terms, you'd step from 0 to "arcLength", and for each value call "arcLengthToParam" to compute the "t" parameter
2012-11-10 22:50:50 UTC <ClaudiusMaximus> yep that's the plan
2012-11-10 23:29:37 UTC <fryguybob> ClaudiusMaximus: I'll have to read up on confromal maps, but I do know how to give you things like curvature at a point for cubic splines or beziers.
2012-11-10 23:30:16 UTC <ClaudiusMaximus> conformal maps preserve angles (but not distances)
2012-11-10 23:31:05 UTC <ClaudiusMaximus> yeah my further tests without taking curvature into account are full of glitches and look terrible
2012-11-10 23:31:12 UTC <fryguybob> There isn't a closed form for an offset of a bezier curve (where all the points on the new curve are are a constant distance to the original), but there are good ways to approximate it.
2012-11-10 23:31:47 UTC <fryguybob> As in, we can subdivide until the obvious (but wrong) thing to do is close enough.
2012-11-10 23:32:09 UTC <ClaudiusMaximus> mm, sure
2012-11-10 23:32:15 UTC <ClaudiusMaximus> binary search?
2012-11-10 23:32:39 UTC <fryguybob> Yeah if you want to get close to the minimal number of segments you can search for it.
2012-11-10 23:32:57 UTC <ClaudiusMaximus> oh, i don't need an offset by a constant distance
2012-11-10 23:33:37 UTC <ClaudiusMaximus> though i did a quick hack for that some time ago
2012-11-10 23:35:47 UTC <fryguybob> Wikipedia says: "If the Jacobian matrix of the transformation is everywhere a scalar times a rotation matrix, then the transformation is conformal." which seems to imply you might be able to constructively start with the rotations and scaling and build a transformation.
2012-11-10 23:38:03 UTC <ClaudiusMaximus> ah, interesting - so i could have some kind of continuity condition on the Jacobian and a boundary condition along the curve, then extrapolate?
2012-11-10 23:39:37 UTC <fryguybob> Yeah that might translate to a nice thing to do with a mesh
2012-11-10 23:40:19 UTC <fryguybob> So maping from some rectangle to a polar rectangle would be conformal right?
2012-11-10 23:41:06 UTC <fryguybob> If so, bezier curves won't work out in any exact form.
2012-11-10 23:43:46 UTC <ClaudiusMaximus> exp is conformal, but the standard polar transform isn't...  exp (x:+y) = exp |x:+y| * (cos y :+ sin y)  vs polar (x:+y) = x * (cos y :+ sin y)
2012-11-10 23:43:52 UTC <ClaudiusMaximus> oops
2012-11-10 23:43:57 UTC <ClaudiusMaximus> exp is conformal, but the standard polar transform isn't...  exp (x:+y) = exp x * (cos y :+ sin y)  vs polar (x:+y) = x * (cos y :+ sin y)
2012-11-10 23:44:43 UTC <ClaudiusMaximus> at least, as far as i understood it :/
2012-11-10 23:45:09 UTC <fryguybob> Ok, but still a vertical line would map to an arc with exp
2012-11-10 23:45:14 UTC <ClaudiusMaximus> yep
2012-11-10 23:45:31 UTC <fryguybob> Beziers can represent any line, but no arcs.
2012-11-10 23:45:47 UTC <fryguybob> So you need NURBs :D
2012-11-10 23:45:52 UTC <ClaudiusMaximus> :)
2012-11-10 23:46:44 UTC <byorgey> NURBs sounds like a junior-high insult
2012-11-10 23:46:49 UTC <byorgey> "what a nurb"
2012-11-10 23:46:56 UTC <fryguybob> hehe
2012-11-10 23:47:30 UTC <fryguybob> I wonder if hackage has any NURBs
2012-11-10 23:48:18 UTC <byorgey> hah, I hadn't realized that Bezier and de Casteljau both worked for car makers =)
2012-11-10 23:49:02 UTC <fryguybob> Yes, must have C^\inf smooth car bodies!!!
2012-11-10 23:49:55 UTC <byorgey> http://hackage.haskell.org/package/splines
2012-11-11 00:08:21 UTC <luite> oh i only knew about bezier :)
2012-11-11 00:11:44 UTC <alpounet> byorgey, i've learned that a few days ago
2012-11-11 00:11:50 UTC <alpounet> in a seminar by INRIA guys
2012-11-11 00:11:52 UTC <alpounet> :)
2012-11-11 00:39:38 UTC <byorgey> alpounet: fun =)
2012-11-11 00:46:53 UTC <alpounet> computational geometry group
2012-11-11 00:46:58 UTC <alpounet> they're doing pretty crazy stuffs
2012-11-11 00:47:07 UTC <alpounet> wondering about doing my thesis on that :)
2012-11-11 00:49:10 UTC <fryguybob> The next assignment for the class I'm TA for has some mesh generation.  I shoud make a haskell version of that.
2012-11-11 00:51:34 UTC <alpounet> they also do stuffs like Manifold Learning
2012-11-11 01:38:49 UTC <luite> alpounet: ah what's some of the crazy stuff they're doing?
2012-11-11 01:39:46 UTC <byorgey> what's Manifold Learning?
2012-11-11 01:40:28 UTC <luite> apparenly it's non-linear dimensionality reduction
2012-11-11 01:40:51 UTC <luite> get high dimensional data and fit a lower-dimensional manifold to that
2012-11-11 01:44:49 UTC <byorgey> mgsloan: just filed a bug re: Diagrams.Backend.Cairo.Text: https://github.com/diagrams/diagrams-cairo/issues/19
2012-11-11 01:45:13 UTC <mgsloan> yikes!
2012-11-11 01:45:40 UTC <mgsloan> it's wrong vertically as well, strange!
2012-11-11 01:46:00 UTC <luite> what
2012-11-11 01:46:13 UTC <luite> no love for descenders!
2012-11-11 01:47:31 UTC <luite> looks like the line height is correct though, just shifted a bit
2012-11-11 01:48:35 UTC <byorgey> mgsloan: I think it's correct vertically
2012-11-11 01:49:09 UTC <byorgey> I mean, given what textLineBoundedIO claims to do
2012-11-11 01:49:58 UTC <luite> does it give the same width for "WWWWWWWWWW" as "iiiiiiiiii" ?
2012-11-11 01:50:58 UTC <mgsloan> byorgey: yup, given the distinction between "textVisualBounded" and "textLineBounded"
2012-11-11 01:51:27 UTC <luite> oh bah you tried iiiii :)
2012-11-11 01:51:47 UTC <byorgey> yeah, it crashed =)
2012-11-11 01:52:04 UTC <byorgey> mgsloan: I can confirm that "iiiiiiiiii" returns an envelope of width 0
2012-11-11 01:53:34 UTC <luite> hm interesting, wolfgang has as many repo viewers as diagrams-lib :p
2012-11-11 01:53:43 UTC <byorgey> hehe =)
2012-11-11 01:56:50 UTC <mgsloan> hmm, strange.  I get a different result for "Washington", but also a crash on "iiiii" bizarre
2012-11-11 01:57:17 UTC <byorgey> weird
2012-11-11 01:57:37 UTC <byorgey> fryguybob may have a point about switching to the "real" cairo text API
2012-11-11 01:57:59 UTC <mgsloan> I didn't realize there was one!  unless you mean switching to pango
2012-11-11 01:58:38 UTC <fryguybob> ACTION does not remember what the "real" one is.
2012-11-11 01:59:05 UTC <fryguybob> All I know is after delving into the Cairo code I came back a different person.
2012-11-11 01:59:10 UTC <byorgey> yeah, I guess it means pango
2012-11-11 01:59:24 UTC <byorgey> though I really don't know anything about what pango is or how we might use it
2012-11-11 01:59:56 UTC <mgsloan> from http://www.cairographics.org/manual/cairo-text.html:
2012-11-11 01:59:56 UTC <mgsloan>  The functions with glyphs in their name form cairo's low-level text API.  The low-level API relies on the user to convert text to a set of glyph indexes and positions.  This is a very hard problem and is best handled by external libraries, like the pangocairo that is part of the Pango text layout and rendering library. Pango is available from http://www.pango.org/.
2012-11-11 02:00:13 UTC <luite> hehe more dependencies
2012-11-11 02:00:35 UTC <mgsloan> the good news is http://hackage.haskell.org/package/pango-0.12.3 :D
2012-11-11 02:01:05 UTC <luite> yeah i guess if you manage to install gtk2hs you should have a working installation
2012-11-11 02:01:26 UTC <byorgey> ah, cool
2012-11-11 02:01:26 UTC <fryguybob> Which I have not managed to do for a while now...
2012-11-11 02:01:33 UTC <luite> :)
2012-11-11 02:01:35 UTC <luite> me neither...
2012-11-11 02:01:48 UTC <byorgey> if we go that route (pango) we should split it out into a diagrams-pango package I think
2012-11-11 02:02:02 UTC <mgsloan> probably so
2012-11-11 02:02:08 UTC <byorgey> I have some patches here (unpushed so far) to split out the gtk stuff into a separate diagrams-gtk package
2012-11-11 02:02:17 UTC <byorgey> so diagrams-cairo depends ONLY on the 'cairo' package again
2012-11-11 02:02:25 UTC <byorgey> which may help a bit with installation
2012-11-11 02:04:30 UTC <fryguybob> I wonder if pango will give you text if you target a PDF.
2012-11-11 02:05:38 UTC <luite> does the current backend?
2012-11-11 02:06:57 UTC <fryguybob> I think so.
2012-11-11 02:07:17 UTC <byorgey> yes, the current backend does
2012-11-11 02:07:17 UTC <fryguybob> Not that I can test :P
2012-11-11 02:08:13 UTC <byorgey> "This package provides a wrapper around the Pango C library that allows high-quality rendering of Unicode text. It can be used either with Cairo to output text in PDF, PS or other documents or with Gtk+ to display text on-screen."
2012-11-11 02:08:23 UTC <byorgey> from the 'pango' package header
2012-11-11 02:08:32 UTC <byorgey> so at least it claims to work when targeting PDF.
2012-11-11 02:09:20 UTC <fryguybob> Excellent.
2012-11-11 12:32:51 UTC <fryguybob> byorgey: I think I do have Cairo without GTK here that I can test against.  I can also build on Windows, but get no output.
2012-11-11 12:39:48 UTC <alpounet> luite: among other things, they are the guys behind CGAL
2012-11-11 12:39:52 UTC <alpounet> http://www-sop.inria.fr/geometrica/index.php?option=com_content&view=section&id=11&Itemid=14
2012-11-11 12:52:36 UTC <fryguybob> alpounet: When you mentioned them I browsed through CGAL.  Lots of cool stuff there.
2012-11-11 12:52:52 UTC <alpounet> fryguybob, yeah!
2012-11-11 12:53:01 UTC <alpounet> they showed us a few ongoing stuffs
2012-11-11 12:53:05 UTC <alpounet> really cool people at INRIA Nice
2012-11-11 12:53:13 UTC <alpounet> much cooler than the OCaml team :-]
2012-11-11 14:49:52 UTC <fryguybob> byorgey: I had to remove gtk from the .cabal file and change from old-time to time for it to build for me.
2012-11-11 14:57:11 UTC <fryguybob> I think it is due to the directory package being dependent on time with 7.6 (I don't have this problem on Windows because we CPP out the looped building).
2012-11-11 15:08:55 UTC <alpounet> yeah we've had the same pb with scoutess
2012-11-11 15:10:21 UTC <fryguybob> Humm, perhaps it is time to scrap the looping and just use builder?
2012-11-11 16:06:30 UTC <byorgey> fryguybob: ah, I removed gtk from the .cabal file but I guess in a different commit that I didn't include in the pull request
2012-11-11 16:06:46 UTC <byorgey> and I thought we already changed old-time to time?
2012-11-11 16:06:55 UTC <byorgey> or am I confused?
2012-11-11 16:07:38 UTC <byorgey> fryguybob: as for the looping, we still would need some code to check if the source file has changed
2012-11-11 16:08:22 UTC <byorgey> fryguybob: but yeah, probably the thing to do is make a separate diagrams-loop which uses builder
2012-11-11 16:08:36 UTC <byorgey> rather than baking the looping into each backend
2012-11-11 16:08:54 UTC <byorgey> we've had that on the list of things to do for a long time anyway =)
2012-11-11 16:09:18 UTC <byorgey> (I'm not sure what you mean by "scrap the looping" though)
2012-11-11 16:09:59 UTC <byorgey> also, I just made some quick manual updates to the website, hopefully people won't get directed to google code or patch-tag any more
2012-11-11 16:10:30 UTC <byorgey> I hadn't updated the website because I wanted to wait until releasing 0.6 which was going to be "Real Soon Now"
2012-11-11 16:10:36 UTC <byorgey> but of course it's been months now
2012-11-11 16:11:07 UTC <byorgey> ok, off for a family bike ride =)
2012-11-11 16:13:58 UTC <byorgey> fryguybob: oh, wait, I see what you mean about removing gtk, I missed those
2012-11-11 16:14:16 UTC <byorgey> I will look into the old-time/time thing later
2012-11-11 17:35:26 UTC <fryguybob> byorgey: By scrap I just meat move to somewhere else.
2012-11-11 17:48:45 UTC <alpounet> also had people from this team though http://www-sop.inria.fr/galaad/
2012-11-11 21:50:38 UTC <fryguybob> byorgey: I'll just port over the fix from svg for CMDLOOP and 7.6.
2012-11-11 22:06:19 UTC <fryguybob> strange... git says Everything up-to-date but I don't see my changes on github.
2012-11-11 22:08:43 UTC <fryguybob> Ah, I had to specify the branch name.  I thought I tried that but I guess I hadn't.
2012-11-11 23:58:12 UTC <byorgey> fryguybob: ah, I knew I had seen a relevant fix somewhere! thanks =)
2012-11-12 00:00:24 UTC <cmears> byorgey: I've been spending some time trying to figure out how the Diagram type is implemented, to try to fix the SVG attributes + transformations
2012-11-12 00:00:42 UTC <byorgey> cmears: ah, cool
2012-11-12 00:00:46 UTC <byorgey> any questions?
2012-11-12 00:01:00 UTC <cmears> Is the use of DUALTree and so on for diagrams documented anywhere? If not I could write some notes about it
2012-11-12 00:01:10 UTC <cmears> (unless you are planning to change the implementation (:  )
2012-11-12 00:01:57 UTC <byorgey> cmears: it is not yet documented.  It's one of those things I have been meaning to Get Around To, but if you wrote some notes on it that would be great!
2012-11-12 00:02:09 UTC <byorgey> I am not planning to change the implementation yet again anytime soon =)
2012-11-12 00:02:10 UTC <cmears> Is there any nice way to print the internal structure of the tree? That would help to understand how the transformations are combined, and what freeze does
2012-11-12 00:02:19 UTC <cmears> It's easy-ish to print the leaves of the tree, at least
2012-11-12 00:02:51 UTC <cmears> But by that point the transformations are combined, so you have to infer from that what happened
2012-11-12 00:03:25 UTC <cmears> The fold function for DUALtree expressly says that you don't get access to the internal nodes (:
2012-11-12 00:03:37 UTC <byorgey> gotta go put my son to bed, back later
2012-11-12 00:04:12 UTC <cmears> OK
2012-11-12 00:52:06 UTC <fryguybob> ACTION invesitages text in Postscript.
2012-11-12 01:36:07 UTC <byorgey> cmears: right, at some point we're probably going to want to start duplicating Transformations in the 'a' annotations
2012-11-12 01:36:36 UTC <cmears> Yes, that would do it
2012-11-12 01:38:12 UTC <byorgey> and also attributes
2012-11-12 01:38:37 UTC <luite> anyone know how to do a git pull --rebase with magit?
2012-11-12 01:39:09 UTC <cmears> In the "Split (Transformation V)", is it right that the first transformation is the one before the freeze, and the second transformation is the one after (the "frozen" one) ?
2012-11-12 01:41:10 UTC <byorgey> luite: I can type  F-rF  to  pull --rebase
2012-11-12 01:41:52 UTC <byorgey> luite: but my version of magit doesn't seem to always match the documentation, I'm not sure if that's because mine is newer or older
2012-11-12 01:43:05 UTC <luite> ah tnx
2012-11-12 01:44:27 UTC <byorgey> cmears: I think it's the other way round.  basically if you imagine applying  t1 <> t2 <> t3 <> freeze <> t4 <> t5,  t5 is the "innermost" transformation and t1 is outermost
2012-11-12 01:44:55 UTC <cmears> I should say what I mean by "before" and "after" (:
2012-11-12 01:45:07 UTC <cmears> I am looking from the root and going down
2012-11-12 01:45:41 UTC <byorgey> because  transform (t1 <> t2) == transform t1 . transform t2
2012-11-12 01:46:36 UTC <byorgey> oh in that case, yes, though I would call the first transformation the "frozen" one
2012-11-12 01:47:04 UTC <cmears> Oh
2012-11-12 01:47:07 UTC <byorgey> because that is the one which is supposed to apply to things like line width etc.
2012-11-12 01:47:44 UTC <cmears> Yes, I was thinking the other way
2012-11-12 01:47:56 UTC <byorgey> I like to think of it from the leaves up, because that's the order in which you would apply transformations to a starting diagram
2012-11-12 01:48:16 UTC <byorgey> so you apply t5, then t4, then you freeze, then after that the transformations affect the line width etc.
2012-11-12 01:48:52 UTC <cmears> So you would say, in "scale 3 $ freeze $ scale 2 $ unitSquare" that the "scale 3" is the frozen one
2012-11-12 01:50:22 UTC <byorgey> yes
2012-11-12 01:52:05 UTC <byorgey> cmears: one other thing I was going to say: fixing the stuff with paths may be as simple as applying the *inverse* of the frozen transformation to the path points, and then emitting <path ... transform=...>
2012-11-12 01:52:12 UTC <byorgey> but I am not really sure
2012-11-12 01:52:23 UTC <cmears> Yes, that seemed like it would work
2012-11-12 01:52:36 UTC <cmears> But it feels a bit strange to apply the transformation, invert it, then apply it again
2012-11-12 01:52:51 UTC <byorgey> yes, I know
2012-11-12 01:53:39 UTC <byorgey> this is why we should duplicate transformations in the 'a' annotations, so eventually we can have backends which can actually do things with internal tree nodes instead of just getting a list of all the primitives
2012-11-12 01:53:59 UTC <byorgey> but that's a longer-term goal.
2012-11-12 01:54:45 UTC <byorgey> for now I'd just like to get things working as simply as possible
2012-11-12 01:54:53 UTC <cmears> So that, for example, SVG can do the internal transformations just by adding <g transform=...> as it goes down the tree?
2012-11-12 01:56:22 UTC <byorgey> exactly
2012-11-12 01:56:45 UTC <byorgey> same for attributes
2012-11-12 02:00:43 UTC <fryguybob> byorgey: Is BoxAlignedText or BaselineText default? (if you know off the top of your head, I can look it up).
2012-11-12 02:00:55 UTC <byorgey> I don't know
2012-11-12 02:04:05 UTC <fryguybob> It is BoxAlignedText.
2012-11-12 02:10:20 UTC <byorgey> good to know.
2012-11-12 02:23:37 UTC <cmears> The default implementation of renderDia does t1 <> t2, then gives t1 to withStyle
2012-11-12 02:24:14 UTC <byorgey> cmears: ah, true, so we might be able to do something slightly smarter there
2012-11-12 02:24:19 UTC <cmears> What if I changed it to only apply t2, then just wrap the generated svg in "<g transform=t1>"
2012-11-12 02:24:40 UTC <cmears> This actually seems to work
2012-11-12 02:24:58 UTC <byorgey> really? nice
2012-11-12 02:25:12 UTC <byorgey> of course you can't just change the default implementation of renderDia, other backends depend on that
2012-11-12 02:25:15 UTC <cmears> At least for the backend-tests cases
2012-11-12 02:25:19 UTC <cmears> No, I just did it for the SVG backend (:
2012-11-12 02:25:29 UTC <byorgey> oh, you mean you just overrode renderDia?
2012-11-12 02:25:32 UTC <cmears> Right
2012-11-12 02:25:35 UTC <byorgey> cool
2012-11-12 02:25:38 UTC <byorgey> yeah, sounds good
2012-11-12 02:26:15 UTC <cmears> Seems to have broken the clipping test
2012-11-12 02:26:50 UTC <byorgey> well, I'd rather have broken clipping than broken path transformation ;-)
2012-11-12 02:27:02 UTC <cmears> Ah, the clip path definition is inside the "g transform"
2012-11-12 02:27:14 UTC <byorgey> ah, right
2012-11-12 02:29:15 UTC <cmears> I'd have to learn how clip paths are supposed to work in SVG to fix that I reckon
2012-11-12 02:30:05 UTC <byorgey> perhaps
2012-11-12 02:30:22 UTC <byorgey> but you don't necessarily need to worry about it for now
2012-11-12 02:30:40 UTC <cmears> At least how transformation affects them: is the transformation important around the definition, or the use of the path, or both?
2012-11-12 02:30:46 UTC <cmears> No, not terribly urgent
2012-11-12 02:30:48 UTC <byorgey> I was really serious when I said I'm happy to trade off a bug in clipping for the current bug =)
2012-11-12 02:31:38 UTC <cmears> I will package up the rendering change and make a pull request
2012-11-12 02:31:42 UTC <byorgey> yeah, I am not clear on SVG semantics myself
2012-11-12 02:31:56 UTC <byorgey> awesome =)
2012-11-12 02:32:14 UTC <byorgey> Deepak (vyom), who wrote diagrams-svg, knowss it much better, but he hasn't been around recently
2012-11-12 02:32:32 UTC <cmears> Are the pictures at http://projects.haskell.org/diagrams/backend-tests/all-index.html updated regularly?
2012-11-12 02:33:10 UTC <byorgey> cmears: no, only when I push a new version out
2012-11-12 02:33:23 UTC <byorgey> but it ought to be automated
2012-11-12 02:35:13 UTC <cmears> Text is still a bit broken in SVG too
2012-11-12 02:37:27 UTC <byorgey> yeah, not too surprising
2012-11-12 02:37:27 UTC <byorgey> text is broken everywhere
2012-11-12 02:38:02 UTC <byorgey> at some point we really need to all put our heads together and write down a specification of how text Ought To Work
2012-11-12 02:38:29 UTC <byorgey> because I think even diagrams-cairo doesn't work the way I think it ought to sometimes
2012-11-12 02:39:27 UTC <fryguybob> Postscript text is perfect :P
2012-11-12 02:47:16 UTC <byorgey> OK, I guess we can just take diagrams-postscript as a reference implementation
2012-11-12 03:05:15 UTC <fryguybob> That is, after I write myself some Postscript to do all the work, it will be perfect :D
2012-11-12 03:06:37 UTC <fryguybob> The downside to this is I have to write it in postscript instead of Haskell.  Perhaps luite can make a ghcpostscript when he is done with ghcjs.
2012-11-12 03:07:02 UTC <fryguybob> Because we *need* to write Haskell code that runs on printers.
2012-11-12 03:39:01 UTC <cmears> https://github.com/diagrams/diagrams-svg/pull/25
2012-11-12 03:40:50 UTC <luite> hehe
2012-11-12 03:40:52 UTC <luite> noooh
2012-11-12 03:41:38 UTC <luite> debugging this javascript rts is bad enough as it is...
2012-11-12 03:42:20 UTC <luite> i'm trying to get some code running that combines type classes with partial applications and it ends up in a loop
2012-11-12 03:43:01 UTC <luite> in theory type classes should be easy, they're just converted to some dictionary, but apparently this triggers some bug somewhere
2012-11-12 03:58:47 UTC <cmears> Note to everyone: don't use geeqie to test SVG; it doesn't render it properly
2012-11-12 03:59:23 UTC <cmears> Neither does emacs
2012-11-12 04:11:56 UTC <cmears> Ha, text in SVG seemed so broken because by default it doesn't fill
2012-11-12 04:12:07 UTC <cmears> Throw in a few "fc black" attributes and it works much better
2012-11-12 04:12:15 UTC <cmears> (i.e. text actually appears)
2012-11-12 04:14:12 UTC <cmears> Now the only thing broken is alignment
2012-11-12 06:17:01 UTC <luite> phew bug smashed
2012-11-12 06:17:09 UTC <luite> typeclasses work \o/
2012-11-12 06:17:20 UTC <luite> and it's only 7am
2012-11-12 11:57:52 UTC <co-dan> Hi
2012-11-12 12:13:55 UTC <byorgey> luite: yay =)
2012-11-12 12:18:17 UTC <ClaudiusMaximus> my brain hurts.. seems a scalar field satisfying laplace's equation generates a conformal map (equipotentials and their perpendiculars), but i can't figure out the boundary conditions i need
2012-11-12 12:24:15 UTC <ClaudiusMaximus> something like gradient of field along a curve is perpendicular to the curve?  dunno, maybe i should wander off and do something totally unrelated to clear my heads..
2012-11-12 12:24:18 UTC <ClaudiusMaximus> -s
2012-11-12 12:51:50 UTC <byorgey> ClaudiusMaximus: if you think you have multiple heads, then you definitely need to clear them
2012-11-12 12:53:11 UTC <ClaudiusMaximus> :)
2012-11-12 14:52:28 UTC <fryguybob> byorgey: I have a fix for clip on svg.
2012-11-12 14:52:57 UTC <byorgey> yay!
2012-11-12 14:53:58 UTC <ClaudiusMaximus> ugh.  i got this conformal thingy working, but the results are the opposite of what i wanted, so i guess my intuition was wrong
2012-11-12 14:54:18 UTC <fryguybob> :(
2012-11-12 14:54:20 UTC <ClaudiusMaximus> it's closer to the curve at convex points than concave points
2012-11-12 14:54:33 UTC <byorgey> aww
2012-11-12 14:54:43 UTC <byorgey> well, at least you learned something I guess
2012-11-12 14:54:47 UTC <ClaudiusMaximus> yep
2012-11-12 14:56:11 UTC <fryguybob> byorgey: I'm not sure where I should put my fix :D.  Should I apply the pull request and open a new one?
2012-11-12 14:56:13 UTC <ClaudiusMaximus> my new intuition has to do with fluid flow across the curve, converging stream lines have to flow faster to avoid compression, or something
2012-11-12 14:56:30 UTC <byorgey> fryguybob: hehe, yeah, there's no way to have "contingent pull requests" =)
2012-11-12 14:56:53 UTC <byorgey> fryguybob: of course you are welcome to review and apply cmears's patch
2012-11-12 14:57:25 UTC <fryguybob> Ok, I'll do that.
2012-11-12 15:00:51 UTC <fryguybob> byorgey: Oh, here is the clippling: http://www.cs.rochester.edu/u/ryates/diagrams/all-index.html
2012-11-12 15:01:25 UTC <byorgey> sweet!
2012-11-12 15:01:39 UTC <byorgey> that page is a thing of beauty
2012-11-12 15:02:00 UTC <byorgey> I'm glad I put that together, it gives us something concrete to work towards =)
2012-11-12 15:02:10 UTC <ClaudiusMaximus> http://mathr.co.uk/superscript/2012-11-12_equipotentials.png
2012-11-12 15:02:16 UTC <ClaudiusMaximus> is the output of my code...
2012-11-12 15:02:36 UTC <fryguybob> byorgey: Yes it is extreemly helpful.
2012-11-12 15:02:52 UTC <byorgey> ClaudiusMaximus: well, it looks neat, even if it's not what you had in mind =)
2012-11-12 15:03:05 UTC <ClaudiusMaximus> :)
2012-11-12 15:03:29 UTC <ClaudiusMaximus> also slow (over 4mins for that)
2012-11-12 15:03:48 UTC <ClaudiusMaximus> anywy, must get ready to go out to dentist..
2012-11-12 15:05:47 UTC <luite> hmm, adding transparency to postscript will be tricky
2012-11-12 15:06:10 UTC <byorgey> ClaudiusMaximus: good luck, may your teeth be well
2012-11-12 15:07:02 UTC <fryguybob> luite: Yeah I don't think that is going to happen
2012-11-12 15:07:30 UTC <luite> the only way is doing all blending manually, right?
2012-11-12 15:07:45 UTC <fryguybob> There are some postscript engines that handle some extentions from PDF for transparency, but as far as I know it is only Adobe that supports them
2012-11-12 15:08:01 UTC <luite> ah
2012-11-12 15:08:18 UTC <fryguybob> Manually doing the blending also works but that requires union/intersection of paths (which we do want anyway)
2012-11-12 15:08:25 UTC <fryguybob> And a lot of state.
2012-11-12 15:08:53 UTC <fryguybob> I suppose you could do that on the postscript side, but that would be a lot of work.
2012-11-12 15:09:24 UTC <fryguybob> Another option is to render PDF.  That isn't too hard.
2012-11-12 15:09:57 UTC <luite> yeah i had some haskell code to output pdf files, but there is probably already better code on hackage :)
2012-11-12 15:09:59 UTC <byorgey> ah, so maybe the postscript backend could give us a haskell-native way to generate PDF?  that would be nice
2012-11-12 15:10:53 UTC <byorgey> http://hackage.haskell.org/package/HPDF ?
2012-11-12 15:10:54 UTC <luite> hm, you do need some extra stuff to generate a proper pdf file (wrap instructions in objects and make an index)
2012-11-12 15:11:07 UTC <luite> and the pdf drawing instructions are not quite postscript
2012-11-12 15:11:59 UTC <fryguybob> Yeah it is a subset so we might not be able to do the postscript side computations that we do right now (adding more for text at the moment)
2012-11-12 15:12:06 UTC <luite> ah that looks usable
2012-11-12 15:12:21 UTC <fryguybob> Beyond that it is just some encoding.
2012-11-12 15:12:38 UTC <luite> yeah that lib should handle that fine :)
2012-11-12 15:13:06 UTC <fryguybob> Is zlib in the platform?
2012-11-12 15:13:30 UTC <byorgey> yes
2012-11-12 15:13:44 UTC <byorgey> so maybe someone should just make a new backend on top of HPDF?
2012-11-12 15:13:50 UTC <fryguybob> ah, I see it includes the c source for Windows anyway.
2012-11-12 15:14:13 UTC <byorgey> if it's in the platform then presumably it works on Windows.
2012-11-12 15:15:46 UTC <luite> if it ends up being a problem, it's probably not that hard to remove the dependency later, generate uncompressed pdf documents
2012-11-12 15:16:55 UTC <fryguybob> I don't think it will be a problem at all.
2012-11-12 15:17:08 UTC <byorgey> fryguybob: oh, don't forget to close #19 and #24 if you merge cmears's patch
2012-11-12 15:17:21 UTC <luite> yeah, me neither. only people installing ghc without the platform will probably need msys to build zlib
2012-11-12 15:17:24 UTC <fryguybob> Ah, will do
2012-11-12 15:17:32 UTC <luite> but that's still quite doable, i've done it a few times
2012-11-12 15:17:59 UTC <byorgey> presumably people installing ghc without the platform can figure things out for themselves.
2012-11-12 15:18:17 UTC <byorgey> I'm not interested in bending over backwards to make sure diagrams works without the platform =)
2012-11-12 15:24:54 UTC <fryguybob> Humm HPDF calls out to C for text metrics.  I wonder what it is doing.
2012-11-12 15:26:45 UTC <fryguybob> Humm, just a big lookup table.
2012-11-12 15:27:11 UTC <fryguybob> Strange.
2012-11-12 15:48:04 UTC <luite> for the built-in fonts?
2012-11-12 15:57:24 UTC <fryguybob> luite: Yeah.  Maybe they are placeholders for some future library call.
2012-11-12 18:37:59 UTC <byorgey> hi notdan, welcome
2012-11-12 19:54:41 UTC <notdan> Hi! Just read your paper on monoids in FP, got interested :)
2012-11-12 20:20:52 UTC <tgeeky> notdan: there is an associated (video) lecture
2012-11-12 21:58:03 UTC <byorgey> just updated http://projects.haskell.org/diagrams/backend-tests/all-index.html
2012-11-12 21:58:47 UTC <luite> so everything works except text?
2012-11-12 22:00:17 UTC <byorgey> yep, looks like it
2012-11-12 22:01:15 UTC <byorgey> with the SVG text I think the issues are (1) setting a black fill color explicitly and (2) implementing alignment
2012-11-12 22:01:53 UTC <byorgey> (1) should be pretty easy
2012-11-12 22:01:58 UTC <byorgey> no idea about (2)
2012-11-12 22:03:14 UTC <byorgey> weird, I just pushed a commit to diagrams/diagrams-backend-tests and it says it succeeded, but the commit hasn't shown up on github
2012-11-12 22:03:52 UTC <luite> hehe
2012-11-12 22:04:08 UTC <byorgey> maybe it's just behind or something
2012-11-12 22:04:15 UTC <luite> oh i guess it's not exactly the same as what fryguybob had yesterday
2012-11-12 22:05:33 UTC <byorgey> what did fryguybob have?
2012-11-12 22:06:13 UTC <luite> oh he pushed but he had to specify the branch
2012-11-12 22:06:46 UTC <byorgey> oh, yeah, that's not it
2012-11-12 22:06:54 UTC <byorgey> I was just pushing to master
2012-11-12 22:06:59 UTC <byorgey> and it says it succeeded
2012-11-12 22:07:09 UTC <byorgey> and if I try to push again it says "everything up-to-date"
2012-11-12 22:29:15 UTC <fryguybob> byorgey: are you pushing from a branch?
2012-11-12 22:29:36 UTC <byorgey> no
2012-11-12 22:29:42 UTC <byorgey> oh, the commit showed up now
2012-11-12 22:29:51 UTC <byorgey> I guess github was just a bit behind
2012-11-12 22:30:04 UTC <fryguybob> I blame Ruby
2012-11-12 22:30:09 UTC <byorgey> hahaha
2012-11-12 22:30:17 UTC <byorgey> is github written in ruby?
2012-11-12 22:30:18 UTC <fryguybob> Oh wait, it's webscale.
2012-11-12 22:30:29 UTC <byorgey> oh, wait, I knew that, it's RoR
2012-11-12 22:30:55 UTC <fryguybob> Yeah that security bug is how I learned how the sausage is made.
2012-11-12 22:31:08 UTC <byorgey> hehe
2012-11-12 22:36:04 UTC <byorgey> it's still behind, actually, it shows the new commit but it is just hung saying 'loading commit data...'
2012-11-12 22:36:21 UTC <byorgey> and now it's finally done
2012-11-12 22:37:45 UTC <byorgey> github must be using some dark magic to make the page slide left and right like that when you press the browser's back and forward buttons
2012-11-12 22:39:24 UTC <luite> yeah they use the browser history API to add them to the history
2012-11-12 22:39:27 UTC <luite> history.pushState
2012-11-12 22:42:38 UTC <byorgey> but I mean, how does the browser know that when you hit "back" instead of just switching to some previous page, it should instead display a slick animation?
2012-11-12 22:43:09 UTC <byorgey> is it really possible to just program the "back" button to do whatever you want? (and if so, how is that not a giant security hole?)
2012-11-12 22:46:01 UTC <luite> looks like it's the window.popstate event
2012-11-13 00:32:43 UTC <fryguybob> cmears: We got the clip bug fixed.
2012-11-13 00:34:52 UTC <cmears> Yeah, I just saw the commit
2012-11-13 00:34:53 UTC <cmears> Thanks!
2012-11-13 00:35:14 UTC <byorgey> \o/
2012-11-13 00:35:14 UTC <cmears> Is the problem that the transforms were being applied to the clip path?
2012-11-13 00:35:28 UTC <cmears> (during freeze)
2012-11-13 00:36:01 UTC <fryguybob> Yes, so I just apply the inverse of the freeze when we emit the clip path.
2012-11-13 00:36:15 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/text.pdf
2012-11-13 00:36:17 UTC <cmears> Yeah, it should get the same transforms at the thing it's clipping
2012-11-13 00:37:48 UTC <cmears> Is it possible to not apply those transformations in the first place, so they don't need to be inverted?
2012-11-13 00:42:53 UTC <byorgey> fryguybob: is that what I think it is?
2012-11-13 00:46:52 UTC <fryguybob> cmears: I didn't look too far into that possibility.
2012-11-13 00:47:11 UTC <fryguybob> byorgey: Yes, but that was written by hand.  I'm integrating the changes now.
2012-11-13 00:48:02 UTC <cmears> I was looking at it this morning, to figure out where the transformation is applied to the style: is it in applyD (called from freeze)?
2012-11-13 00:57:12 UTC <byorgey> cmears: no, freeze doesn't really do anything
2012-11-13 00:57:18 UTC <byorgey> it just adds a 'split'
2012-11-13 00:57:41 UTC <byorgey> applyD is just a generic function for applying a new 'd' annotation
2012-11-13 00:58:16 UTC <cmears> That part I didn't really understand (obviously (:  )
2012-11-13 00:58:45 UTC <byorgey> cmears: transformations and attributes are collected in a value of type  (Split (Transformation v) :+: Style v)
2012-11-13 00:58:48 UTC <byorgey> which is part of DownAnnots
2012-11-13 00:59:06 UTC <byorgey> basically it consists of a list of alternating transformations and styles
2012-11-13 00:59:07 UTC <cmears> Yes
2012-11-13 00:59:22 UTC <byorgey> the transformations are actually applied when this gets collapsed... let me find where that is...
2012-11-13 00:59:59 UTC <byorgey> oh, it's in the 'prims' function
2012-11-13 01:00:28 UTC <byorgey> prims = (map . second) (untangle . option mempty id . fst) . D.flatten . unQD
2012-11-13 01:00:42 UTC <byorgey> it's the 'untangle' that sorts out the transformations + styles
2012-11-13 01:01:30 UTC <byorgey> you could probably do something different there
2012-11-13 01:01:59 UTC <byorgey> which treated pre-freeze and post-freeze transformations differently, i.e. applied pre-freeze transformations to styles but just collected post-freeze transformations separately
2012-11-13 01:02:18 UTC <cmears> Maybe it's better to wait until the transformations are in the "a" part of the tree
2012-11-13 01:02:29 UTC <byorgey> yeah, probably
2012-11-13 01:02:53 UTC <byorgey> at this point it's not clear what the benefit would really be
2012-11-13 01:03:12 UTC <byorgey> other than that it just "feels wrong" to apply a transformation and then unapply it
2012-11-13 01:03:16 UTC <cmears> Yeah
2012-11-13 01:03:36 UTC <cmears> For now I can live with that feeling
2012-11-13 01:03:50 UTC <byorgey> me too =)
2012-11-13 01:04:19 UTC <cmears> I think only the text alignment is broken now in SVG
2012-11-13 01:04:42 UTC <cmears> It has an interesting difference from Cairo's SVG output, in that the native SVG backend uses a text element to show the text
2012-11-13 01:04:50 UTC <cmears> But Cairo actually draws a path to make the letters
2012-11-13 01:04:58 UTC <cmears> I'm not sure which is better
2012-11-13 01:05:13 UTC <byorgey> cmears: also there's the bug where text is drawn with a transparent fill
2012-11-13 01:05:22 UTC <byorgey> oh, interesting
2012-11-13 01:05:28 UTC <fryguybob> It is usually better to have the text as "native" as it can be.
2012-11-13 01:05:45 UTC <cmears> Yes, the fill too
2012-11-13 01:05:56 UTC <fryguybob> This allows for things like searching for the text in a PDF for exxample.
2012-11-13 01:06:08 UTC <byorgey> though having text be as native as it can be makes it really hard to make things consistent across backends + platforms
2012-11-13 01:06:13 UTC <byorgey> but I'm OK with that when it comes to text.
2012-11-13 01:06:14 UTC <fryguybob> And better rendering.
2012-11-13 01:12:48 UTC <cmears> Can the text fill bug be fixed by just having a default "fc black" on all text?
2012-11-13 01:14:59 UTC <byorgey> cmears: what do you mean "on all text"?
2012-11-13 01:16:04 UTC <byorgey> if you mean making that change in diagrams-lib, then no.  The problem is that inner attributes override outer ones.  So if every text object is automatically wrapped in 'fc black' then you can never set the color to anything else.
2012-11-13 01:16:21 UTC <cmears> Ah
2012-11-13 01:16:24 UTC <byorgey> it would be like Henry Ford's famous saying: "they can have any color they want, as long as it's black."
2012-11-13 01:17:37 UTC <byorgey> in the SVG backend, at the point that you discover you are drawing some text, you have to check if there's already a non-default fill in effect, and if not set the fill to black
2012-11-13 01:17:43 UTC <byorgey> or something like that
2012-11-13 01:17:51 UTC <byorgey> it's a bit tricky, actually, now that I think about it
2012-11-13 01:20:52 UTC <fryguybob> We already have state for the clip id right?
2012-11-13 01:44:25 UTC <byorgey> true, so we do
2012-11-13 01:44:51 UTC <byorgey> but I'm not sure that helps
2012-11-13 01:45:01 UTC <byorgey> because SVG itself is not inherently stateful the way cairo is
2012-11-13 01:45:12 UTC <byorgey> or postscript
2012-11-13 01:47:18 UTC <byorgey> hmm, Deepak has an interesting point in  https://github.com/diagrams/diagrams-svg/commit/7f98ad48ff7c154ad6da9948fc2056268dc53263
2012-11-13 01:47:28 UTC <byorgey> in some sense cairo's current behavior is inconsistent
2012-11-13 01:47:45 UTC <byorgey> because fill color is used for text, and the default fill color is indeed transparent
2012-11-13 01:47:54 UTC <byorgey> but cairo text is black by default nonetheless.
2012-11-13 01:48:46 UTC <byorgey> so in a sense we are going through contortions to change the SVG backend from its current (sensible) behavior to match a quirk of the cairo backend
2012-11-13 01:49:57 UTC <fryguybob> Ah, yes.  I think this comes from text being treated differently, you don't stroke or fill it, it is shown.
2012-11-13 01:50:13 UTC <fryguybob> Or converted to a path.
2012-11-13 01:51:17 UTC <fryguybob> So from that perspective it isn't sensable to "show" and have nothing happen.
2012-11-13 15:05:06 UTC <byorgey> ooh, http://hackage.haskell.org/package/fsnotify
2012-11-13 15:05:30 UTC <byorgey> maybe we should try using that for the looping
2012-11-13 15:19:09 UTC <luite> ah that was mark dittmers gsoc project :)
2012-11-13 15:24:48 UTC <byorgey> oh, was it? nice =)
2012-11-13 15:28:38 UTC <luite> yeah, he failed the second term though
2012-11-13 15:29:15 UTC <luite> and if you use OS X, the underlying platform-specific lib it uses is by me ;p
2012-11-13 15:30:38 UTC <shapr`> yay code!
2012-11-13 15:30:52 UTC <byorgey> luite: hehe, nice =)
2012-11-13 15:30:58 UTC <byorgey> hi shapr` !
2012-11-13 15:31:28 UTC <shapr`> howdy byorgey !
2012-11-13 15:33:20 UTC <fryguybob> byorgey: One text option that I think all the backends could support now is where you declare the bounding box for the text at declaration time and at render it scales the text to fit (doing the right thing with respect to the baseline).
2012-11-13 15:33:50 UTC <fryguybob> Of course we should wait for our "rethink text" time to consider it.
2012-11-13 15:34:18 UTC <byorgey> fryguybob: yes, that should work
2012-11-13 15:34:42 UTC <byorgey> fryguybob: the only problem with that is it would be difficult to get different text objects to look the same size.
2012-11-13 15:35:11 UTC <byorgey> I suppose it would just be a tradeoff.
2012-11-13 15:40:11 UTC <fryguybob> byorgey: Yeah, it would have its uses but wouldn't "solve everything"
2012-11-13 16:55:11 UTC <sleepyMonad> does diagrams really need transformers-0.2.2.0? my ghc 7.6 upgrade on archlinux brought me transformers 0.3...
2012-11-13 16:58:07 UTC <byorgey> sleepyMonad: no, the released version of diagrams does not work with ghc 7.6
2012-11-13 16:58:50 UTC <byorgey> sleepyMonad: so cabal goes back in time to try to find a version of diagrams which works with base-4.6, and it comes up with diagrams-0.2.something, which is the last time it *didn't* have an upper bound on 'base'
2012-11-13 17:00:02 UTC <byorgey> sleepyMonad: you can either build diagrams from github, or wait for us to release 0.6 in early December
2012-11-13 17:00:29 UTC <sleepyMonad> OK I'll use the github version then for the time being
2012-11-13 17:00:32 UTC <byorgey> there's also a chance I may try to make an 0.5-series release that works with 7.6, but it's an annoyingly large amount of work
2012-11-13 17:00:50 UTC <sleepyMonad> living on the cutting edge...
2012-11-13 17:00:56 UTC <byorgey> sleepyMonad: OK, you'll want diagrams-core, diagrams-lib, and diagrams-cairo, maybe also diagrams-svg and diagrams-contrib
2012-11-13 17:01:21 UTC <byorgey> sleepyMonad: the new gtk2hs release should work with GHC 7.6, but Hackage actually reports a build failure so I'm not sure.  I haven't tested it yet.
2012-11-13 17:01:35 UTC <byorgey> if it doesn't work, then you can't use diagrams-cairo, but you can still use diagrams-svg
2012-11-13 17:02:02 UTC <sleepyMonad> perhaps a good occasion to get rid of the hardcoded cairo dependency in my code ;-)
2012-11-13 17:02:06 UTC <byorgey> hehe
2012-11-13 17:02:18 UTC <sleepyMonad> thanks, will try this approach
2012-11-13 17:02:33 UTC <byorgey> you might have to adjust the upper bounds on the gtk2hs dependencies, I haven't done that yet
2012-11-13 17:02:59 UTC <byorgey> actually, maybe I will work on that right now.  I was going to spend some time hacking on diagrams but hadn't decided what yet.
2012-11-13 17:03:11 UTC <sleepyMonad> you are too kind
2012-11-13 17:03:18 UTC <byorgey> ok, 7.6 + gtk2hs testing, here we come =)
2012-11-13 17:03:47 UTC <sleepyMonad> (but that's perhaps the hidden sauce that makes diagrams so attractive)
2012-11-13 17:03:56 UTC <sleepyMonad> ^secret^
2012-11-13 17:04:02 UTC <byorgey> I hope so =)
2012-11-13 17:14:47 UTC <byorgey> ah, no, the version bounds on gtk2hs stuff should be OK
2012-11-13 17:14:58 UTC <byorgey> they only bumped the minor number, from 0.12.3 to 0.12.4
2012-11-13 17:15:27 UTC <byorgey> I'm still testing though
2012-11-13 17:24:53 UTC <byorgey> yep, looks like everything works fine
2012-11-13 17:24:54 UTC <byorgey> as-is
2012-11-13 17:33:13 UTC <byorgey> sleepyMonad: http://www.haskell.org/haskellwiki/Diagrams/GHC7.6
2012-11-13 17:54:14 UTC <byorgey> haha, looking through the diagrams-core repo I came across this: https://github.com/diagrams/diagrams-core/blob/master/old/Diagrams.hs
2012-11-13 17:54:37 UTC <byorgey> it's so cute and little!
2012-11-13 17:55:09 UTC <byorgey> it's fun to see how far things have come
2012-11-13 18:41:48 UTC <fryguybob> hehe
2012-11-13 18:42:19 UTC <fryguybob> byorgey: Does the Cairo backend declare a default font size or does it use Cairo's default state for that?
2012-11-13 20:10:53 UTC <sleepyMonad> byorgey: installed without the slightest problem; thanks
2012-11-14 02:05:04 UTC <byorgey> fryguybob: I don't remember
2012-11-14 02:09:04 UTC <fryguybob> It its a little strange.  Made Cairo spit out the values as it was rendering and I'm still trying to make sense of it.
2012-11-14 02:10:20 UTC <byorgey> heh
2012-11-14 02:15:04 UTC <fryguybob> ACTION may have found the magic formula.
2012-11-14 02:19:26 UTC <fryguybob> ACTION also suppresses the urge to make a Postscript EDSL so he can write real expressions...
2012-11-14 02:19:38 UTC <byorgey> hehe
2012-11-14 02:21:59 UTC <luite> hmm
2012-11-14 02:38:19 UTC <fryguybob> ...
2012-11-14 02:39:13 UTC <luite> meh no concentration
2012-11-14 02:39:45 UTC <fryguybob> \o/ progress http://www.cs.rochester.edu/u/ryates/diagrams/all-index.html
2012-11-14 02:40:44 UTC <luite> how do you generate the expected output?
2012-11-14 02:42:53 UTC <fryguybob> They are the png's blessed by byorgey.  I just assumed he write them with a hex editor.
2012-11-14 02:43:29 UTC <byorgey> actually I wrote them by waving a magnetized needle over my hard drive
2012-11-14 02:44:03 UTC <byorgey> fryguybob: yay!!
2012-11-14 02:44:17 UTC <byorgey> fryguybob: what's the deal with the "Hello there world" one?
2012-11-14 02:45:02 UTC <byorgey> luite: actually the "expected outputs" are just copied from the cairo outputs =P
2012-11-14 02:45:28 UTC <fryguybob> byorgey: I need to handle font size slightly differently.  Also I know how to fix the "baseline" one.
2012-11-14 02:45:36 UTC <byorgey> sweet
2012-11-14 02:46:03 UTC <fryguybob> I have a different font then you do for my Cairo "there"
2012-11-14 02:46:29 UTC <fryguybob> Or did your HDD spin throw you off on that one.
2012-11-14 02:47:20 UTC <fryguybob> (what is byorgey going to do when he gets a SSD?)
2012-11-14 02:47:29 UTC <byorgey> hehe
2012-11-14 02:48:11 UTC <byorgey> fryguybob: wave a high-power gamma ray emitter over it, of course
2012-11-14 02:48:39 UTC <byorgey> I'm not too worried about font differences
2012-11-14 02:52:02 UTC <byorgey> great, now I'm getting a python error when trying to build the diagrams manual =P
2012-11-14 02:52:05 UTC <fryguybob> byorgey: Oh, I wasn't worried, I just noticed.
2012-11-14 02:52:18 UTC <byorgey> yep
2012-11-14 02:52:27 UTC <fryguybob> At least you got an error?
2012-11-14 02:53:31 UTC <byorgey> it's not very comforting
2012-11-14 02:53:43 UTC <luite> hm, do gamma rays help in programming flash?
2012-11-14 02:53:48 UTC <byorgey> it appears to be telling me that a certain file (which exists) does not exist
2012-11-14 02:54:06 UTC <luite> you need to tunnel electrons through a SiO2 layer
2012-11-14 02:54:21 UTC <fryguybob> byorgey: Oh, that's just the third value in trinary logic.
2012-11-14 02:54:35 UTC <byorgey> oh! of course
2012-11-14 02:55:07 UTC <fryguybob> data Troolian = False | True | FileNotFound
2012-11-14 03:00:28 UTC <byorgey> hah, for some reason I had some version of docutils installed manually in my home directory, with $PYTHONPATH pointing to it
2012-11-14 03:00:37 UTC <byorgey> but I have docutils installed through my package manager too
2012-11-14 03:00:47 UTC <byorgey> so I just deleted PYTHONPATH, and voila, it works now =)
2012-11-14 03:01:03 UTC <fryguybob> woohoo!
2012-11-14 14:49:24 UTC <byorgey> blargh, generating combined haddocks for multiple packages is super fiddly and frustrating
2012-11-14 14:56:11 UTC <fryguybob> Sounds like a tricky problem
2012-11-14 16:59:41 UTC <fryguybob> More progress: http://www.cs.rochester.edu/u/ryates/temp/text.pdf
2012-11-14 17:11:49 UTC <fryguybob> byorgey: All tests pass: http://www.cs.rochester.edu/u/ryates/diagrams/all-index.html
2012-11-14 17:13:00 UTC <fryguybob> The font has to be a built-in postscript font so the "freeserif" doesn't resolve to the expected font, but there isn't a lot of non-hack things to do about that.
2012-11-14 17:52:54 UTC <byorgey> fryguybob: huzzah!
2012-11-14 17:54:32 UTC <byorgey> fryguybob: so should we make postscript an "officially supported" diagrams backend?
2012-11-14 17:55:08 UTC <fryguybob> byorgey: Yeah that's fine with me at this point.
2012-11-14 17:55:16 UTC <byorgey> cool
2012-11-14 17:55:45 UTC <fryguybob> ACTION pushes his latest changes.
2012-11-14 18:00:44 UTC <byorgey> http://projects.haskell.org/diagrams/backend-tests/all-index.html   yay!
2012-11-14 21:27:56 UTC <jbracker_> I am currently generalising reflectionAbout but I am constantly getting a type error I do not understand: http://hpaste.org/77754
2012-11-14 21:28:51 UTC <jbracker_> I am getting the fleeling that I am missing the forest for the trees.
2012-11-18 19:03:15 UTC <fryguybob> you could try converting it up to 32-bit and see if they look the same after that.
2012-11-18 19:03:49 UTC <byorgey> fryguybob: how would I do that?
2012-11-18 19:05:22 UTC <nand`> hmm
2012-11-18 19:05:24 UTC <byorgey> fryguybob: https://groups.google.com/forum/?fromgroups=#!msg/comp.graphics/tylpVt2y9s8/eHWKNVLYMREJ
2012-11-18 19:05:34 UTC <byorgey> looks like Portable Network Graphics is a backronym =)
2012-11-18 19:05:35 UTC <nand`> Int -> Int -> Diagram Cairo R2 -> [[Colour Double]] -- could work
2012-11-18 19:05:45 UTC <fryguybob> byorgey: ah
2012-11-18 19:05:57 UTC <nand`> I don't know how I'd do this with repa after all
2012-11-18 19:06:33 UTC <fryguybob> Would juicypixel make more sense?
2012-11-18 19:06:50 UTC <nand`> maybe, but with the [[Colour Double]] version it could be put into daigrams-cairo
2012-11-18 19:06:52 UTC <nand`> dia*
2012-11-18 19:06:55 UTC <nand`> without pulling in any dependencies
2012-11-18 19:07:07 UTC <nand`> and I've often wanted interfaces as simple as that
2012-11-18 19:07:38 UTC <nand`> it does mean âPtrâ is not the best name for the module though
2012-11-18 19:08:36 UTC <fryguybob> Humm, I can't seem to get convert to do it for me.
2012-11-18 19:08:48 UTC <byorgey> nand`: well, I haven't applied the pull request yet
2012-11-18 19:09:24 UTC <byorgey> you can close it or add a note saying not to apply it yet
2012-11-18 19:09:36 UTC <byorgey> and push more changes once you have figured out a better API
2012-11-18 19:10:03 UTC <byorgey> a function to give you a [[Colour Double]] would be neat
2012-11-18 19:10:29 UTC <nand`> it's mainly a function of figuring out a good name for the module
2012-11-18 19:11:53 UTC <fryguybob> byorgey: http://www.cs.rochester.edu/u/ryates/temp/spc.png
2012-11-18 19:13:06 UTC <byorgey> fryguybob: that one looks purple too
2012-11-18 19:13:25 UTC <byorgey> I guess we can just conclude that firefox sucks and move on
2012-11-18 19:15:01 UTC <byorgey> it's times like these when I'm really glad that there are people who actually know something about graphics working on diagrams too
2012-11-18 19:15:08 UTC <byorgey> "how hard can it be?" I thought
2012-11-18 19:15:46 UTC <fryguybob> hehe
2012-11-18 19:18:55 UTC <byorgey> ok, I've got some other things I need to do, back later
2012-11-18 19:32:07 UTC <nand`> byorgey: would you be okay with adding a âcolourâ dependency to diagrams-cairo; since diagrams-lib already has one?
2012-11-18 19:57:13 UTC <byorgey> nand`: yes, of course.  diagrams-cairo already transitively depends on colour anyway, so explicitly listing it in the .cabal doesn't make much difference
2012-11-18 20:21:50 UTC <nand`> okay
2012-11-18 20:21:59 UTC <nand`> this issue is starting to really, really confuse me
2012-11-18 20:22:18 UTC <nand`> two pieces of code that should be identical; one inside the library (diagrams-cairo), one in a separate testfile; the one in the testfile works, the one called via the library does not
2012-11-18 20:27:49 UTC <nand`> hmm
2012-11-18 20:27:52 UTC <nand`> I think laziness may be involved
2012-11-18 20:28:09 UTC <nand`> in particular, âfreeâ freeing the memory before âpeekArrayâ is reading it
2012-11-18 20:28:31 UTC <nand`> the strictness optimizer might be responsible for why one code works and one does not
2012-11-18 20:47:24 UTC <nand`> byorgey: it seems that if I render two images in a row, the second one is corrupted
2012-11-18 21:33:50 UTC <nand`> fixed it
2012-11-18 21:42:07 UTC <nand`> byorgey: excellent, renderToList seems to work, I've re-opened the pull request
2012-11-18 21:48:25 UTC <nand`> byorgey: is there a way to, given a diagram and a SizeSpec2D, figure out the actual size it's going to render at?
2012-11-18 21:49:11 UTC <nand`> if I can query that then I'd be able to re-use it for the buffer allocation; instead of having the user specify width/height; in particular, it would work for ânative-sizeâ diagrams, which might come in handy for a use case I've been keeping in the back of my head
2012-11-19 00:55:03 UTC <cmears> A short post on the internals of Diagrams:
2012-11-19 00:55:05 UTC <cmears> http://www.cmears.id.au/articles/diagrams-internals.html
2012-11-19 00:55:30 UTC <cmears> Feedback welcome (especially on gross errors)
2012-11-19 01:10:33 UTC <fryguybob> cmears: I'll look through it when I have time.  It is always good to get more things written up! :D
2012-11-19 01:20:10 UTC <cmears> Yeah, that's what I thought -- even if it's not perfect, it's better than nothing (:
2012-11-19 05:35:28 UTC <Ralith> are arcs as generated by TwoD.Arc.arc on a unit circle?
2012-11-19 05:41:21 UTC <Ralith> looks like yes
2012-11-19 05:46:45 UTC <Ralith> is there any sort of boolean operation support?
2012-11-19 05:47:04 UTC <Ralith> e.g. intersection of two circles, minus a rectangle
2012-11-19 06:13:11 UTC <cmears> You could use clipping to do intersection
2012-11-19 06:13:41 UTC <cmears> Not sure about subtraction
2012-11-19 06:19:41 UTC <cmears> In some cases it would be enough to just put a white-coloured rectangle on top
2012-11-19 06:24:06 UTC <Ralith> ACTION prefers to retain accurate transparency information
2012-11-19 06:24:10 UTC <Ralith> brb
2012-11-19 06:26:04 UTC <Ralith> (I can probably use splines in this case; you can accurately represent circular arcs with them right?)
2012-11-19 06:27:57 UTC <cmears> I think Diagrams already draws arcs as Bezier curvers
2012-11-19 06:44:27 UTC <Ralith> cmears: any way I can reflect a segment?
2012-11-19 06:49:09 UTC <cmears> You can reflect a diagram -- I'm don't think you could reflect just a segment within a path
2012-11-19 06:49:15 UTC <cmears> http://hackage.haskell.org/packages/archive/diagrams-lib/0.5.0.1/doc/html/Diagrams-TwoD-Transform.html
2012-11-19 06:50:21 UTC <Ralith> I'm having trouble getting anything to appear at all with paths :/
2012-11-19 06:51:15 UTC <Ralith> reflectX typechecks fine on a Trail
2012-11-19 06:53:41 UTC <cmears> You might have to consider the line width
2012-11-19 06:53:49 UTC <cmears> By default it is 0.01
2012-11-19 06:54:16 UTC <cmears> For a unit circle, that's fine, but if you scale it up by 200x, it's too thin to be seen
2012-11-19 06:54:25 UTC <Ralith> well, I can see a unit circle fine
2012-11-19 06:54:54 UTC <Ralith> or perhaps not
2012-11-19 06:55:05 UTC <Ralith> blah
2012-11-19 06:55:36 UTC <Ralith> okay, getting stuff now
2012-11-19 06:58:29 UTC <Ralith> connecting the wrong bits together :/
2012-11-19 06:59:53 UTC <cmears> The user guide has some examples that might help
2012-11-19 07:02:53 UTC <Ralith> got it \o/
2012-11-19 07:06:00 UTC <cmears> Great (:
2012-11-19 07:41:58 UTC <Ralith> why do I sometimes get errors like:
2012-11-19 07:41:59 UTC <Ralith> Draw: user error (invalid value (typically too big) for the size of the input (surface, pattern, etc.))
2012-11-19 07:42:30 UTC <Ralith> when e.g. specifying a relatively large hrule and only constraining vertical size
2012-11-19 07:42:41 UTC <Ralith> (but not when specifying the same hrule and constraining horizontal size)
2012-11-19 07:42:46 UTC <Ralith> (size of output, that is)
2012-11-19 07:47:22 UTC <cmears> Hmm, never seen that one before
2012-11-19 07:49:38 UTC <Ralith> ACTION gets it when the hrule is on the order of 1k times larger than anything else
2012-11-19 07:49:45 UTC <Ralith> (for example)
2012-11-19 07:50:10 UTC <Ralith> of course, that's not actually a desirable circumstance, so it's not a serious problem, but it seemed worth mentioning
2012-11-19 08:29:14 UTC <cmears> Yeah, it's worth looking into
2012-11-19 08:37:15 UTC <Ralith> ACTION tries to work out why scaling his diagram up is making most of it invisible
2012-11-19 08:39:31 UTC <cmears> Possibly because the line width doesn't get scaled
2012-11-19 08:39:35 UTC <cmears> Try freezing it first
2012-11-19 08:39:36 UTC <cmears> e.g.
2012-11-19 08:39:47 UTC <cmears> scale 10 $ freeze $ myDiagram
2012-11-19 08:43:00 UTC <Ralith> turned out to be another shape growing unexpectedly large with regard to everything else
2012-11-19 08:45:08 UTC <cmears> Ah, that would do it
2012-11-19 20:43:46 UTC <byorgey> oh nice, someone just uploaded  http://hackage.haskell.org/package/diagrams-tikz-0.1.1.0
2012-11-19 20:43:51 UTC <byorgey> was it someone in this channel? =)
2012-11-19 20:45:26 UTC <fryguybob> Wasn't me :D
2012-11-19 21:43:55 UTC <nand`> byorgey: I can confirm that line widths are now fixed in diagrams-svg
2012-11-19 21:45:21 UTC <nand`> byorgey: also, I'd be willing to give https://github.com/diagrams/diagrams-lib/issues/66 a try, but I probably can't/won't update all of the various backends; at least -cairo and -svg
2012-11-19 21:53:57 UTC <byorgey> nand`: sure, though we should probably hold off on merging that until after the 0.6 release
2012-11-19 21:54:19 UTC <byorgey> I suppose it's time to fork off 0.6 branches so we can continue working on cool new features while still preparing the release
2012-11-19 21:55:35 UTC <byorgey> I will try to do that soon
2012-11-19 23:09:30 UTC <tgeeky> diagrams-tikz is authored by Scott Walck (isn't that the physics professor?)
2012-11-19 23:09:36 UTC <tgeeky> but uploaded by AriePeterson (who!?)
2012-11-19 23:10:07 UTC <tgeeky> he (Arie) has several other packages.
2012-11-20 00:48:00 UTC <fryguybob> ACTION is amused by his student who wrote that their code has "no fancy pants stuff".
2012-11-20 02:13:38 UTC <Ralith> I'm trying to build a (sub)diagram for technical illustration style linear dimension annotations, but I'm having trouble getting it to behave properly in the presence of scaling--my data is small, but I'd like to be able to scale the complete diagram at once, rather than hardcoding magic numbers to get things to line up. Can anyone describe what the usual approach to something like this might be?
2012-11-20 02:16:12 UTC <Ralith> |-----28.7mm-----| sort of thing
2012-11-20 02:44:52 UTC <fryguybob> Ralith: Sorry, I'm kind of buried in work at the moment.  If you can paste some code on hpaste I'll take a look when I get a chance.
2012-11-20 02:47:26 UTC <Ralith> so far all I've got is code which wrong for fairly self-explanatory reasons
2012-11-20 02:47:45 UTC <Ralith> I'm more wondering what approach someone experienced with the library would take here
2012-11-20 02:53:09 UTC <fryguybob> Ralith: Ah, well byorgey might have some pointers in that direction.  I only recently got text working with Postscript so before that I knew it was wrong and just played with the numbers until things worked out :(
2012-11-20 05:06:42 UTC <luite> grmblz bugs
2012-11-20 05:57:57 UTC <luite> #@
2012-11-20 06:02:12 UTC <luite> blugh
2012-11-20 08:17:23 UTC <luite> hm looks like my own fault, i need to implement exception handling
2012-11-20 11:46:57 UTC <byorgey> Ralith: I'm not sure I understand exactly what you're trying to achieve, can you explain a bit more?
2012-11-20 11:48:09 UTC <Ralith> byorgey: do you know what I mean when I refer to linear dimension annotations like |-----this-----| in diagrams?
2012-11-20 11:48:32 UTC <Ralith> (diagrams as in technical diagrams, not as in the package)
2012-11-20 11:48:36 UTC <byorgey> yes, I think so
2012-11-20 11:49:15 UTC <Ralith> right, basically I just want to produce those in a way that doesn't force me to scale everything else to a certain size
2012-11-20 11:49:18 UTC <byorgey> oh, hmm, so you want the number to change when you scale it?
2012-11-20 11:49:23 UTC <Ralith> oh, no
2012-11-20 11:49:25 UTC <Ralith> nothing so elaborate
2012-11-20 11:49:46 UTC <byorgey> ok, so I still don't understand the problem
2012-11-20 11:51:12 UTC <Ralith> well, let me describe what I've tried and the trouble I've had doing that
2012-11-20 11:51:17 UTC <byorgey> ok
2012-11-20 11:51:55 UTC <byorgey> (by the way, I might need to go at any minute, but if so I will see what you write and respond later)
2012-11-20 11:51:58 UTC <Ralith> I'm drawing objects with dimension information in units of 'meters' but whose actual size is on the order of centimeters
2012-11-20 11:52:02 UTC <Ralith> (no worries)
2012-11-20 11:52:50 UTC <Ralith> I'd like to be able to describe the diagram in those units directly, i.e. without manually scaling the dimensions before passing them to the diagramming function
2012-11-20 11:53:07 UTC <Ralith> so, the resulting diagram of a single object might have a bounding box of 0.01^2
2012-11-20 11:54:29 UTC <Ralith> I also want to draw dimension annotations aligned with that object, with the bars being the correct distance apart and so on
2012-11-20 11:55:42 UTC <Ralith> I'd like the dimension annotation diagram to be general, i.e. not specialized for the case of annotating things that start out really small
2012-11-20 11:55:56 UTC <Ralith> (for some specific value of 'really small', no less)
2012-11-20 11:57:57 UTC <byorgey> ok
2012-11-20 11:58:14 UTC <Ralith> if I draw the annotation on the same scale as the objects, so that I can use the actual dimension information from the object directly, I can't work out how to e.g. define a consistent height for the | parts, or size for the padding; I could do something as a function of the dimension being measured, but that ends up with everything being padded differently and looks really bad.
2012-11-20 11:59:21 UTC <Ralith> if I draw the annotation after scaling the objects up, then I can no longer use the real dimension information to determine the width of the annotation; I have to scale it by the same factor, which may be more or less arbitrary.
2012-11-20 11:59:27 UTC <Ralith> that's doable, but seems really ugly.
2012-11-20 12:00:20 UTC <Ralith> (but I can do things like set vertical padding to '1' and get sane results)
2012-11-20 12:01:16 UTC <Ralith> (which has the end result that I *must* select a more or less magic number for the scaling of everything else for it to come out looking right...)
2012-11-20 12:01:44 UTC <Ralith> byorgey: so, neither of those approaches seem Right; can you suggest an alternative?
2012-11-20 12:03:52 UTC <byorgey> honestly, I am still having trouble understanding exactly what the problem is
2012-11-20 12:04:16 UTC <byorgey> I am getting lost in all the actual vs notional dimensions, scaling, etc.
2012-11-20 12:04:31 UTC <byorgey> could you perhaps give some actual code that illustrates the problem?
2012-11-20 12:04:56 UTC <Ralith> yeah, though it'll probably include a variety of unrelated errors
2012-11-20 12:05:00 UTC <byorgey> e.g. "this code is what I'd like to do but it looks bad", "this code makes a diagram that looks OK but the code is ugly", that sort of thing
2012-11-20 12:05:07 UTC <Ralith> ACTION nod
2012-11-20 12:06:01 UTC <Ralith> may take a little bit
2012-11-20 12:06:41 UTC <byorgey> no worries
2012-11-20 12:14:02 UTC <Ralith> d'you want something runnable, or just excerpts?
2012-11-20 12:20:11 UTC <Ralith> this is the former case, where the size of the annotation is that of the actual unscaled dimension: http://i.imgur.com/K8wAE.png http://hpaste.org/77960
2012-11-20 12:21:32 UTC <Ralith> (omitted the | parts for simplicity; the line at the bottom is what we're looking at)
2012-11-20 12:21:41 UTC <Ralith> (and associated text)
2012-11-20 12:27:35 UTC <Ralith> this is the latter case, where it actually looks like what I want, but I need to scale both the objects and the *input to* (but not actual diagram of) the annotations by a magic value to get it looking right: http://i.imgur.com/lKnpk.png http://hpaste.org/77961
2012-11-20 12:33:31 UTC <cmears> Are they actually aligned in the second picture?
2012-11-20 12:33:48 UTC <cmears> Or is it just that scaling them up a lot hides the small differences?
2012-11-20 12:51:53 UTC <Ralith> dammit, missed him
2012-11-20 12:51:58 UTC <Ralith> but yes, they are actually aligned
2012-11-20 12:52:12 UTC <Ralith> (because they have a constant offset instead of relative-to-input-width)
2012-11-20 13:19:52 UTC <Ralith> ACTION sleeps for now
2012-11-20 14:08:13 UTC <nand`> byorgey: okay, I'll wait for the 0.6 fork
2012-11-20 17:17:39 UTC <nand`> byorgey: what's the style guide for diagrams-lib? I have a type signature that's 78 colums wide, which seems wider than the 70 col or whatever your code conforms to
2012-11-20 17:17:54 UTC <nand`> what's the appropriate way to split it? I've never found a way that I like
2012-11-20 17:19:05 UTC <nand`> the signature is of the form (F a, G b) => Foo a -> b -> (a, a, a, a)
2012-11-20 17:19:26 UTC <nand`> do I pull the â=>â below the â::â?
2012-11-20 17:27:26 UTC <fryguybob> nand`: like this? https://github.com/diagrams/diagrams-lib/blob/master/src/Diagrams/Backend/Show.hs#L46
2012-11-20 17:28:11 UTC <nand`> yeah fair enough
2012-11-20 17:32:08 UTC <nand`> byorgey: I'm concerned about a lack of proper operational semantics for colors, blending, scaling and so forth in diagrams; especially when it comes to cairo, because cairo's extremely dumb when it comes to color spaces
2012-11-20 17:32:41 UTC <nand`> the output we're getting from cairo is probably fairly non-ideal, but without proper semantics, it's hard to justify the effort it would take to fix it
2012-11-20 17:33:23 UTC <nand`> but arguably that's a cairo bug
2012-11-20 17:44:41 UTC <fryguybob> nand`: I thought the change was moving to the ability to choose the color semantics you want.
2012-11-20 17:45:03 UTC <nand`> not quite
2012-11-20 17:45:23 UTC <nand`> the change was moving to the ability to abide by what the backend requires
2012-11-20 17:45:42 UTC <nand`> cairo wants sRGB as backend, other implementations may want linear light or XYZ or other representations
2012-11-20 17:45:49 UTC <nand`> the previous behavior was to use sRGB everywhere
2012-11-20 17:46:05 UTC <fryguybob> nand`: So just choose a different backend?
2012-11-20 17:46:35 UTC <nand`> what do you mean?
2012-11-20 17:46:52 UTC <nand`> also, is it okay to use Double everywhere instead of (Floating a, Ord a) => a or whatever?
2012-11-20 17:47:02 UTC <nand`> I noticed the old code does that as well, so I might as well keep it that way
2012-11-20 17:47:46 UTC <fryguybob> nand`: With the proposed changes am I now enabled to write a backend with the color semantics that I want?
2012-11-20 17:48:47 UTC <nand`> fryguybob: technically, yes; since âdaigramsâ doesn't have any specification regarding this
2012-11-20 17:48:52 UTC <nand`> diagrams*
2012-11-20 17:49:34 UTC <nand`> note that while theoretically, it doesn't matter what color space the backend requires; as long as colors are mapped to it correctly (which is done by package âcolourâ); there is one problem that arises when interchanging color spaces:
2012-11-20 17:49:35 UTC <fryguybob> Right now it doesn't specify or with the changes it won't specify?
2012-11-20 17:49:46 UTC <nand`> the issue of gamma-correct scaling and blending
2012-11-20 17:50:08 UTC <nand`> fryguybob: it's specified neither now nor with the changes
2012-11-20 17:50:50 UTC <fryguybob> ok, then I miss understood.  I'll reread the issue.
2012-11-20 17:52:47 UTC <nand`> I'll note that the new patch is relatively easy to adapt existing code for
2012-11-20 17:53:07 UTC <nand`> I export a helper function âcolorToSRGBAâ which does what the old âcolorToRGBAâ did
2012-11-20 17:53:25 UTC <nand`> in fact, if I dropped the âSâ all current backends would be compatible; if you think that's a good idea I'll do so
2012-11-20 17:54:32 UTC <nand`> perhaps I could name it colorToSRGBA and provide colorToRGBA as a {-# DEPRECATED #-} alias for it, so existing code would still compile
2012-11-20 17:54:38 UTC <nand`> because âcolorToRGBAâ is a misleading name
2012-11-20 18:02:38 UTC <byorgey> nand`: I don't really care all that much about number of columns
2012-11-20 18:03:51 UTC <byorgey> nand`: as for proper operational semantics for colors and so forth, I will defer to you.  Having something specified would be great.
2012-11-20 18:04:31 UTC <byorgey> so far diagrams has in some ways played fast and loose with semantics.  But now that we really do have multiple viable backends it would be good to be a bit more precise about the intended semantics.
2012-11-20 18:04:46 UTC <byorgey> I certainly don't want to go the route of treating cairo as a reference implementation
2012-11-20 18:04:47 UTC <nand`> byorgey: the âhard workâ is done for us by the brilliant Data.Colour library; which already represents colors unambiguously
2012-11-20 18:04:52 UTC <byorgey> indeed
2012-11-20 18:05:00 UTC <nand`> really the only concern is linear light blending/scaling
2012-11-20 18:05:34 UTC <nand`> for example, cairo right now blends and scales in companded space; which is incorrect and cause color artifacts for select test cases
2012-11-20 18:05:46 UTC <byorgey> I believe you
2012-11-20 18:05:58 UTC <nand`> the problem is, I don't know how easy fixing this would be, the worst case scenario would be rendering out to a buffer and doing the conversions to PNG etc. manually
2012-11-20 18:06:21 UTC <fryguybob> nand`: The wrong space being 32-bit right?
2012-11-20 18:06:49 UTC <nand`> fryguybob: what do you mean by âwrong spaceâ here?
2012-11-20 18:07:20 UTC <fryguybob> nand`: Where it blends and scales.
2012-11-20 18:07:32 UTC <nand`> ah; I don't know, that would depend on the internal workings of cairo
2012-11-20 18:07:38 UTC <nand`> best case scenario: 32 bit, worst case scenario: 8 bit
2012-11-20 18:07:49 UTC <fryguybob> Oh, I meant 8-bit per color.
2012-11-20 18:08:21 UTC <nand`> (that actually complicates matters further, if it uses 8 bit colors then linear light blending could great the sort of banding you usually like to avoid by companding)
2012-11-20 18:08:47 UTC <nand`> fryguybob: to be unambiguous, I was talking about per channel; ie. 8 bits * 4 channels = 32 bits per color
2012-11-20 18:09:08 UTC <fryguybob> I don't really see doing the blending on the diagrams side as an option (at this point).
2012-11-20 18:09:25 UTC <nand`> but rendering and so forth should ideally be done with more precision than that since rounding errors accumulate fast in 8bpc; so 32 bits (floating point) per channel would amount to 128 bits per color overall
2012-11-20 18:09:49 UTC <nand`> fryguybob: yes, blending correctly would be the job of the backend implementors
2012-11-20 18:10:40 UTC <fryguybob> Right, so is the question do we give backends a uniform color space of its choice or all the various color spaces used by the user?
2012-11-20 18:11:12 UTC <nand`> everything the user provides is in the same space, technically
2012-11-20 18:11:24 UTC <fryguybob> I don't know if Cairo can handle the latter, but Postscript should be fine with that.
2012-11-20 18:11:28 UTC <nand`> it's converted to whatever space the backend needs at render time by Data.Colour
2012-11-20 18:11:36 UTC <fryguybob> Ok, so the former.
2012-11-20 18:12:46 UTC <nand`> (there's another limitation creeping its way in here but I don't think that one has a solution, ultimately; namely what happens if the user specifies a colour that is outside the color space a backend physically supports)
2012-11-20 18:13:09 UTC <byorgey> THE MONITOR EXPLODES
2012-11-20 18:13:24 UTC <fryguybob> Unless your monitor goes to 11.
2012-11-20 18:13:29 UTC <nand`> for example, if I render to a PNG file or something, I'm limited to a certain set of values - I can't escape the gamut and use negative colors or anything
2012-11-20 18:13:47 UTC <nand`> while PNG does allow arbitrary color spaces, the backend would need to know what color space the user is using
2012-11-20 18:13:59 UTC <nand`> like, where to set the limit
2012-11-20 18:14:30 UTC <fryguybob> nand`: Backends have a record of options.
2012-11-20 18:14:51 UTC <nand`> (what could be done here is maybe carrying along the color space information of each color and merging the gamuts when combining diagrams, the same way the envelopes are merged)
2012-11-20 18:15:05 UTC <nand`> fryguybob: yes, but I mean, it's not configurable - it comes from the diagram itself
2012-11-20 18:15:24 UTC <nand`> what you mention would be a fair workaround though, ie. having the user specify if he wants a larger color space
2012-11-20 18:16:10 UTC <nand`> worse; it doesn't look like Data.Colour.RGBSpace has functions for merging colour spaces
2012-11-20 18:16:20 UTC <nand`> (which isn't exactly trivial either)
2012-11-20 18:16:24 UTC <fryguybob> If we let the backends choose the color space I don't think there is anything we can do to make Cairo better, but we can make Postcript give whatever space is valid for Postscript
2012-11-20 18:16:33 UTC <nand`> yes
2012-11-20 18:16:41 UTC <nand`> (I don't know anything about postscript)
2012-11-20 18:17:43 UTC <fryguybob> So I think I'm saying, I don't see any way to make Cairo better.
2012-11-20 18:17:55 UTC <fryguybob> Without doing blending ourselves.
2012-11-20 18:18:11 UTC <nand`> I'll need to take a closer look at diagrams-cairo, it may be salvageable
2012-11-20 18:20:11 UTC <nand`> actually, I think cairo maybe genuinely fixable
2012-11-20 18:20:23 UTC <nand`> may be*
2012-11-20 18:20:44 UTC <nand`> maybe in the next patch
2012-11-20 18:21:12 UTC <nand`> have a look at https://github.com/nandykins/diagrams-lib/commit/bfc8be9b0d83d3e394fb19c224461afde1ac87c0 if you will, it may be backwards compatible enough to just include as-is
2012-11-20 18:21:34 UTC <nand`> the only thing that would readily break is new Color instances
2012-11-20 18:22:36 UTC <byorgey> right, that looks reasonable to me
2012-11-20 18:22:49 UTC <byorgey> I highly doubt anyone has been writing custom Color instances
2012-11-20 18:23:52 UTC <fryguybob> ACTION hides his crayon name color space.
2012-11-20 18:24:37 UTC <byorgey> hehe
2012-11-20 18:25:01 UTC <nand`> (incidentally, the names Data.Colour provides can be a bit misleading at times, when âredâ comes out as orange ;)
2012-11-20 18:25:12 UTC <byorgey> hehe
2012-11-20 18:25:27 UTC <nand`> sRGB's red isn't that red at all
2012-11-20 18:25:30 UTC <byorgey> maybe we need a Diagrams.Color.Crayola module =)
2012-11-20 18:25:54 UTC <fryguybob> nand`: I think those changes would let the user specify CMYK and set an option in PostscriptOptions and the resulting ps file would have CMYK that never went throught RGB.
2012-11-20 18:26:05 UTC <byorgey> ooh, nice
2012-11-20 18:26:07 UTC <nand`> fryguybob: yes that's very possible
2012-11-20 18:26:21 UTC <nand`> you just have to find some function for AlphaColour a -> CMYK a
2012-11-20 18:26:30 UTC <nand`> ACTION doesn't have one
2012-11-20 18:26:32 UTC <byorgey> http://en.wikipedia.org/wiki/List_of_Crayola_crayon_colors
2012-11-20 18:26:49 UTC <fryguybob> Right and presumibly you would want the user to be specifying CMYK to begin with but they would know that.
2012-11-20 18:27:19 UTC <nand`> the thing about CMYK is that it's a compl-- actually, a brilliant idea would be to send it through an ICC profile or something
2012-11-20 18:27:22 UTC <fryguybob> For Postscript the Alpha parts get thrown out anyway.
2012-11-20 18:27:44 UTC <nand`> --completely redundant color space, our vision model is defined by three variables; so in theory, all of our colors will be mathematically converted to CMY colors
2012-11-20 18:27:51 UTC <fryguybob> The actual use of those colors would depend on what the user does with their ps file.
2012-11-20 18:28:16 UTC <nand`> speaking of alpha, AlphaColour is unnecessarily hard to work with
2012-11-20 18:28:32 UTC <fryguybob> I know that extra u and all.
2012-11-20 18:28:41 UTC <nand`> there should be a function AlphaColour a -> Colour a, but there isn't; and the implementation we provide in Attributes.hs is needlessly complex
2012-11-20 18:28:54 UTC <nand`> it would be as simple as three multiplications internally
2012-11-20 18:40:50 UTC <nand`> I did some testing
2012-11-20 18:40:56 UTC <nand`> looks like cairo internally blends in linear light
2012-11-20 18:41:20 UTC <nand`> it seems like they assume the intput is sRGB and decompand it manually during blending
2012-11-20 18:41:22 UTC <nand`> input*
2012-11-20 18:41:36 UTC <nand`> s/decompand/expand/ -- interesting neologism there
2012-11-20 18:46:05 UTC <nand`> ah, actually, it's a bit different
2012-11-20 18:46:19 UTC <nand`> cairo uses companded color channels, but *linear* alpha
2012-11-20 18:46:44 UTC <nand`> so it does alpha blending operations in linear light
2012-11-20 18:51:01 UTC <nand`> byorgey: I fear there is some issue lurking here; even without my patch, I seem to be getting some output that I am not expecting from the cairo backend
2012-11-20 18:51:23 UTC <nand`> main = defaultMain $ unitCircle # fcA (red `withOpacity` 0.5)
2012-11-20 18:51:49 UTC <nand`> if I render this as png; I get a circle with a foreground color of (128,0,0) at opacity 50%
2012-11-20 18:52:01 UTC <nand`> expected would be (255,0,0) at opacity 50%
2012-11-20 18:52:04 UTC <nand`> since the opacity is already there
2012-11-20 18:56:14 UTC <fryguybob> nand`: I saw something about Cario wanting premultiplied alpha.. I'll try to find this.
2012-11-20 19:05:56 UTC <nand`> it seems to be fine with the svg backend though
2012-11-20 19:06:15 UTC <nand`> like, the .svg comes out as (100%,0%,0%);fill-opacity:0.5
2012-11-20 19:30:52 UTC <nand`> here, a minimal test case to reproduce it: http://hpaste.org/77977
2012-11-20 19:48:15 UTC <nand`> byorgey: looks like it was a false alarm, my image editor is broken
2012-11-20 19:48:34 UTC <byorgey> hehe, ok =)
2012-11-20 19:48:46 UTC <byorgey> nand`: thanks for looking into all this
2012-11-20 19:49:01 UTC <byorgey> I might not have time to sit down and look at it carefully until this weekend
2012-11-20 19:56:43 UTC <nand`> byorgey: one thing that's not entirely clear to me either are the semantics of what happens when overlaying transparent diagrams with `atop`
2012-11-20 19:57:11 UTC <nand`> is the intended result color c1 `over` c2?
2012-11-20 20:12:49 UTC <nand`> I did lots of testing; looks like cairo does indeed do color blending in companded space, will need to fix
2012-11-20 20:40:30 UTC <nand`> byorgey: upon further investigation, it seems cairo does not have the capability of sRGB companding an entire surface with the operations available to it; not even with exponentiation as an approximation - the next best solution would indeed be rendering to a region of memory, then companding that manually
2012-11-20 20:40:58 UTC <nand`> I'll have to profile it to be sure, but I can only expect this to slow things down, so I'm not sure if it's worth it in the eyes of users
2012-11-20 20:41:03 UTC <nand`> maybe it could be a toggleable option
2012-11-20 20:41:33 UTC <nand`> the next problem is that cairo would render it out using an 8 bit format; which would introduce lots of banding
2012-11-20 23:13:01 UTC <Ralith> byorgey: you still up?
2012-11-21 00:03:59 UTC <Ralith> hm, looks like (one of) the problem(s) with SVG text is that it gets set to zero opacity.
2012-11-21 00:37:29 UTC <cmears> I thought it was empty fill colour rather than zero opacity
2012-11-21 00:37:49 UTC <cmears> maybe it's the same thing
2012-11-21 02:35:38 UTC <cmears> Can you use a String as a name?  (e.g.   dia = square 2 #named "my diagram")
2012-11-21 02:35:47 UTC <cmears> I get overlapping instances
2012-11-21 03:35:43 UTC <cmears> See here for arrowheads in motion:
2012-11-21 03:35:45 UTC <cmears> http://www.csse.monash.edu.au/~cmears/pent.html
2012-11-21 03:36:33 UTC <luite> whoah
2012-11-21 03:46:50 UTC <cmears> I hope that is a "whoah" of admiration (:
2012-11-21 03:48:39 UTC <fryguybob> cmears: very nice!
2012-11-21 03:55:27 UTC <luite> cmears: yes!
2012-11-21 03:58:02 UTC <cmears> thanks (:
2012-11-21 10:45:33 UTC <byorgey> cmears: yes, you can use a String as a name
2012-11-21 10:45:37 UTC <byorgey> I just did it yesterday!
2012-11-21 10:45:52 UTC <byorgey> curious to see what error yo uget
2012-11-21 10:46:20 UTC <cmears> I'll get the actual message
2012-11-21 10:46:39 UTC <cmears> it says there's an instance for String and another for (IsName a => [a])
2012-11-21 10:50:19 UTC <byorgey> huh, so there is.  so why don't I get an overlapping instances error?
2012-11-21 10:50:24 UTC <byorgey> what version of GHC do you have?
2012-11-21 10:51:30 UTC <cmears> hpaste.org/78004
2012-11-21 10:51:44 UTC <cmears> ghc 7.4.1
2012-11-21 10:53:31 UTC <byorgey> I also have ghc 7.4.1
2012-11-21 10:53:37 UTC <byorgey> and I don't get an error o.O
2012-11-21 10:55:00 UTC <cmears> I only get the error with the dev version of diagrams-*
2012-11-21 10:55:12 UTC <cmears> (i.e. inside the hsenv environment)
2012-11-21 11:04:11 UTC <byorgey> I have the dev version too
2012-11-21 11:04:23 UTC <cmears> Ah
2012-11-21 11:04:40 UTC <cmears> In Diagrams.Core.Names, the "OverlappingInstances" seems to have gone away at some stage
2012-11-21 11:05:28 UTC <cmears> Ah
2012-11-21 11:05:32 UTC <cmears> In the commit with log message
2012-11-21 11:05:49 UTC <cmears> "remove unnecessary imports and LANGUAGE pragmas"
2012-11-21 11:06:03 UTC <byorgey> hah
2012-11-21 11:06:04 UTC <byorgey> oops
2012-11-21 11:06:17 UTC <cmears> (:
2012-11-21 11:06:25 UTC <byorgey> just a second, I'll put it back
2012-11-21 11:06:48 UTC <byorgey> I guess I must not actually be using the dev version, I thought I was
2012-11-21 11:08:32 UTC <byorgey> it's an interesting point: I had naively assumed that if you remove a pragma and it still compiles, that pragma must have been unnecessary
2012-11-21 11:08:58 UTC <cmears> OverlappingInstances takes effect where the instance is defined rather than where it is used
2012-11-21 11:09:05 UTC <cmears> (so adding it to my user code does not help)
2012-11-21 11:09:22 UTC <cmears> So unless you have some test example that uses IsName String, you'd never notice
2012-11-21 11:10:15 UTC <byorgey> right
2012-11-21 11:12:19 UTC <byorgey> cmears: oh, and thanks for writing that article on diagrams internals!
2012-11-21 11:13:32 UTC <byorgey> it's quite terse, but I think it will a good starting place for anyone wanting to learn more about the internals
2012-11-21 11:13:38 UTC <cmears> I hope it made some sense
2012-11-21 11:13:44 UTC <byorgey> yes, definitely
2012-11-21 11:13:46 UTC <cmears> Yeah, it is a bit terse
2012-11-21 11:13:50 UTC <byorgey> I did not spot any inaccuracies
2012-11-21 11:13:56 UTC <cmears> That's good!
2012-11-21 11:14:13 UTC <cmears> At the very least it could do with some actual diagrams (:
2012-11-21 11:14:23 UTC <byorgey> hehe, perhaps =)
2012-11-21 11:14:46 UTC <cmears> it was the result of my digging into the clipping in svg
2012-11-21 11:14:55 UTC <cmears> it seems there is a fundamental difference between cairo and svg
2012-11-21 11:15:08 UTC <cmears> cairo wants the clip paths to be transformed, and svg doesn't
2012-11-21 11:15:37 UTC <cmears> for example, i tried just making it a non-transformed attribute
2012-11-21 11:15:42 UTC <cmears> and that worked pretty well with svg
2012-11-21 11:15:46 UTC <cmears> but not cairo ):
2012-11-21 11:17:59 UTC <byorgey> heh, interesting
2012-11-21 11:18:28 UTC <byorgey> ah, hence why we have to unapply the transformation to clipping paths in the SVG backend?
2012-11-21 11:18:50 UTC <cmears> Yes, we do it the cairo way at the moment, so we just have to untransform it in svg
2012-11-21 11:19:34 UTC <cmears> Is it right that clipPath is the only transformed attribute at the moment?
2012-11-21 11:21:49 UTC <byorgey> yes, I think so
2012-11-21 11:24:30 UTC <cmears> I think the current way of fixing it is fine
2012-11-21 11:24:57 UTC <cmears> you could do it the other way around -- make it non-transformable -- and then you'd have the special case in cairo instead
2012-11-21 11:25:09 UTC <cmears> (you'd apply the transformation when rendering a clip path)
2012-11-21 11:25:18 UTC <cmears> it doesn't seem to matter either way
2012-11-21 11:25:37 UTC <cmears> (apply rather than invert, that is)
2012-11-21 14:31:39 UTC <nand`> ACTION is still thinking about how to best form a color space monoid
2012-11-21 14:32:22 UTC <nand`> one possibility, while ugly; is to start with sRGB and consider only linear expansions of it; the identity would be â1xâ and the operation would be âmaxâ
2012-11-21 14:32:57 UTC <nand`> certainly more practicable than doing a Set (Colour a) or something and having the backend attempt to match a color space around it (especially given the fact that there are infinitely many)
2012-11-21 14:33:40 UTC <nand`> byorgey: is there a reason the CairoOptions record isn't an instance of Default?
2012-11-21 14:52:11 UTC <byorgey> nand`: no, no particular reason
2012-11-21 15:02:42 UTC <nand`> byorgey: is it okay if I take out the StateT (); I'm adding a ReaderT instead
2012-11-21 15:02:49 UTC <nand`> (it's not like the () is used right now)
2012-11-21 15:19:17 UTC <nand`> I'm also not exactly sure what the separation between cairoStrokeStyle and cairoMiscStyle is there for
2012-11-21 15:19:40 UTC <nand`> it would be great if âfill colorâ and âfont stuffâ could be separated
2012-11-21 16:35:39 UTC <byorgey> nand`: taking out the StateT () is fine =)
2012-11-21 16:35:44 UTC <byorgey> dunno why I kept that there, really
2012-11-21 16:36:15 UTC <byorgey> I honestly don't remember exactly why I organized things the way they are (re: cairoStrokeStyle and cairoMiscStyle)
2012-11-21 16:36:19 UTC <byorgey> feel free to reorganize
2012-11-21 17:34:16 UTC <nand`> I'm not sure what to do with this patch for diagrams-cairo; I'm missing two key components: 1. a library to properly read and write PNG files, including tags; 2. a library for handling ICC profiles
2012-11-21 17:34:54 UTC <nand`> I guess what I can do is, for now, skip full ICC support and only add a flag to enable linear light processing; and only write out sRGB PNGs as end result, instead of allowing the user to specify custom (arbitrary) color spaces
2012-11-21 17:35:26 UTC <byorgey> nand`: and is that still an improvement over the current situation?
2012-11-21 17:35:50 UTC <byorgey> to be honest, I really don't understand any of this stuff
2012-11-21 17:35:57 UTC <byorgey> maybe you can point me to some places I can read up on it?
2012-11-21 17:36:00 UTC <nand`> it has both benefits and drawbacks, which is why I'd make it a flag and default it off
2012-11-21 17:36:12 UTC <byorgey> oh, ok, fair enough
2012-11-21 17:37:00 UTC <nand`> I'm not sure of any good catch-all resources, wikipedia has some decent articles but they don't go into depth that well, http://argyllcms.com/ has some info as well
2012-11-21 17:37:10 UTC <nand`> the problem is mainly that you really need to see the whole picture to make sense of it
2012-11-21 17:38:12 UTC <byorgey> right
2012-11-21 17:38:42 UTC <byorgey> well, in any case, I'm happy to accept patches that just add new non-default flags, even for stuff I don't understand =)
2012-11-21 17:42:02 UTC <nand`> I'm not sure what to name the flag; â--linearâ collides with â--loopâ for the â-lâ short form
2012-11-21 17:45:06 UTC <byorgey> hmm, isn't there a way to be explicit about which option you want the short form to belong to when they collide?
2012-11-21 17:45:23 UTC <nand`> maybe; I don't know System.Console.CmdArgs.Implicit
2012-11-21 17:45:33 UTC <byorgey> maybe try adding  &= name "l"  to the loop option?
2012-11-21 17:55:23 UTC <nand`> I.. huh, I think I accidentally included the rendering code twice (left-over from debugging) in https://github.com/diagrams/diagrams-cairo/commit/7086e506127ce2a81fa4f8ca14a18802af2a089c
2012-11-21 17:56:16 UTC <byorgey> huh? where?
2012-11-21 17:56:30 UTC <byorgey> I don't see any repeated code
2012-11-21 17:56:46 UTC <byorgey> oh, it calls renderPtr twice you mean?
2012-11-21 17:57:01 UTC <byorgey> oh, hehe, wait, I see now
2012-11-21 17:57:23 UTC <byorgey> so the first four lines can be deleted?
2012-11-21 17:57:30 UTC <nand`> lines 21-24 should be removed
2012-11-21 17:57:32 UTC <byorgey> yes, that 'return l' is certainly useless
2012-11-21 17:57:33 UTC <byorgey> right
2012-11-21 17:57:50 UTC <byorgey> should have looked at it more carefully =)
2012-11-21 17:58:20 UTC <nand`> I only realized it because I changed the signature of renderPtr and suddenly it didn't compile after I changed only one..
2012-11-21 17:59:00 UTC <byorgey> hahaha
2012-11-21 17:59:14 UTC <byorgey> so maybe you should submit a patch fixing it first
2012-11-21 18:07:37 UTC <nand`> hmm I should do that but I'm having trouble with git
2012-11-21 18:20:13 UTC <byorgey> nand`: do you already have some other commits recorded?
2012-11-21 18:20:34 UTC <byorgey> if so, don't worry about it
2012-11-21 18:20:35 UTC <nand`> no, but apparently my âmasterâ tree is dirty; even though I *should* be working on a branch
2012-11-21 18:20:53 UTC <nand`> the confusing thing is, the master branch seems to contain some edits that I was pretty sure were only in the branch
2012-11-21 18:21:07 UTC <nand`> I'll just finish this up so it works then I can reset --hard HEAD my master without worrying
2012-11-21 18:21:16 UTC <byorgey> nand`: if you've made some edits but not committed them, they will show up in any branch you switch to
2012-11-21 18:21:29 UTC <byorgey> i.e. uncommitted modifications are not per-branch
2012-11-21 18:21:40 UTC <byorgey> nand`: use  'git stash' to save your modifications first
2012-11-21 18:21:57 UTC <byorgey> then 'git pop' to restore them after you make and submit the patch to master
2012-11-21 18:22:04 UTC <nand`> ah
2012-11-21 18:22:24 UTC <nand`> hrm, I've run into an unexpected problem
2012-11-21 18:22:32 UTC <byorgey> oh?
2012-11-21 18:22:48 UTC <nand`> I forgot I can only fix up the gamma in IO, not in Cairo.Render
2012-11-21 18:23:32 UTC <nand`> but actually that isn't so bad
2012-11-21 18:36:54 UTC <nand`> ugh, github
2012-11-21 18:37:16 UTC <nand`> I'm going to close my pull request; can you cherry-pick? github's pull requests don't work very well
2012-11-21 18:37:29 UTC <nand`> https://github.com/nandykins/diagrams-cairo/commit/0ee96750709fe44063648924f5a4ccd05a5cab61
2012-11-21 18:39:51 UTC <nand`> byorgey: how do I copy the contents of one surface to another?
2012-11-21 18:40:25 UTC <byorgey> yes, I can cherry-pick
2012-11-21 18:40:37 UTC <byorgey> I don't know how to copy surfaces
2012-11-21 18:54:08 UTC <byorgey> oh, looks like withImageSurfaceForData was only just added in cairo-0.12.4
2012-11-21 18:54:34 UTC <byorgey> so I'm jacking up the lower bound on the required version of cairo
2012-11-21 19:44:14 UTC <nand`> apparently I managed to break âgit stashâ as well
2012-11-21 19:44:28 UTC <nand`> oh well, guess that just means I have to finish this commit
2012-11-21 19:45:23 UTC <nand`> hrm, except I managed to break my working copy as well
2012-11-21 19:45:45 UTC <nand`> I'll just delete the file and make sure not to include that change in the commit..
2012-11-21 19:56:17 UTC <nand`> byorgey: this is getting horrendeously complicated, but it's starting to work :)
2012-11-21 19:56:42 UTC <byorgey> hehe
2012-11-21 19:56:55 UTC <byorgey> nand`: are you just learning git?
2012-11-21 19:57:51 UTC <nand`> byorgey: I used to know more, I think; but it seems every thing I thought I learned is now working against me, when I enter some previously unexplored state that I don't know how to escape from
2012-11-21 19:58:03 UTC <nand`> ACTION really can't stand git :)
2012-11-21 19:58:06 UTC <byorgey> heh, yeah, I know the feeling
2012-11-21 19:58:11 UTC <byorgey> I don't like git either
2012-11-21 19:58:23 UTC <nand`> darcs person, personally; simple enough for me to understand
2012-11-21 19:58:31 UTC <byorgey> magit for emacs makes it bearable (even pleasant at times)
2012-11-21 19:58:35 UTC <byorgey> me too
2012-11-21 19:59:16 UTC <byorgey> I moved diagrams to git/github just to encourage more contributions and to take advantage of github's features
2012-11-21 19:59:26 UTC <byorgey> but reluctantly
2012-11-21 20:02:37 UTC <nand`> okay
2012-11-21 20:02:47 UTC <nand`> I'm fairly confident with my linear light logic
2012-11-21 20:02:55 UTC <nand`> doing some tests it corresponds exactly with what it should
2012-11-21 20:03:24 UTC <nand`> now comes the hard part of revising every tiny change, I wish âgit diffâ had colored diff output like darcs'
2012-11-21 20:11:14 UTC <nand`> alright, I'll need some external testing on this before I can be confident releasing it into the wild
2012-11-21 20:12:25 UTC <nand`> byorgey: you can cherry-pick https://github.com/nandykins/diagrams-cairo/commit/ead00cc5de73d6adb2cb9baeb42d83fd98e7080b ; that's a horrible bug that I'm completely ashamed I managed to oversee
2012-11-21 20:12:48 UTC <nand`> actually, let me change one more thing
2012-11-21 20:19:35 UTC <nand`> byorgey: okay, here: https://github.com/nandykins/diagrams-cairo/commit/6ef30aecc0769a38fb667e4f3fbd8d3fe29e542e
2012-11-21 20:27:42 UTC <nand`> here's the big change: https://github.com/nandykins/diagrams-cairo/commit/f13bd574bf6eaa85448a467780aa938f390d4f20 <- needs testing
2012-11-21 20:44:41 UTC <byorgey> nand`: and what sort of testing is needed for the big change?
2012-11-21 20:45:05 UTC <byorgey> I can test that it compiles but I'm not sure how to test that it does what it's supposed to
2012-11-21 20:45:13 UTC <byorgey> (because I don't understand what it's supposed to do)
2012-11-21 20:45:29 UTC <nand`> you could start by comparing the output (without --linear) before and after
2012-11-21 20:45:38 UTC <nand`> I already found a bug, it incorrectly handles alpha for the usual (non-linear) mode
2012-11-21 20:46:23 UTC <byorgey> ok, maybe I'll first let you test it yourself a bit more =)
2012-11-21 20:52:29 UTC <nand`> I thought I was being clever with the decompanded alpha but turns out cairo was calculating it correctly after all. Now the code shouldn't affect the old workings anymore :)
2012-11-21 20:53:21 UTC <nand`> I guess this is the part where I upload an example to show the difference
2012-11-21 20:53:56 UTC <nand`> I took the example here http://projects.haskell.org/diagrams/manual/images/068c05866196c2eb1a70e9c97de6f95b.png and added a white background (so cairo actually does the rendering, instead of the browser)
2012-11-21 20:55:12 UTC <nand`> here's the standard output (no --linear), which should probably match what you're getting with the old behavior: http://sadpanda.us/images/1260037-EVKNVDZ.png
2012-11-21 20:56:10 UTC <nand`> here's the linear light output: http://sadpanda.us/images/1260038-9HYXFBY.png
2012-11-21 20:57:21 UTC <nand`> you'll notice it's slightly lighter; in fact, what's happening is that the light increase is now linear - the darker portions get the same 70% fade as the lighter portions
2012-11-21 20:58:03 UTC <nand`> here's the calculation for reaffirmation:
2012-11-21 20:58:06 UTC <nand`> Î» toSRGB24 $ red `withOpacity` (0.7*0.7*0.7) `over` white
2012-11-21 20:58:15 UTC <nand`> RGB {channelRed = 255, channelGreen = 212, channelBlue = 212}
2012-11-21 20:58:37 UTC <nand`> you'll notice that the --linear image has 255/212/212 for the âredâ square in the last image
2012-11-21 20:58:56 UTC <nand`> the old (non-linear) image has 255/168/168
2012-11-21 20:59:56 UTC <nand`> this may seem incorrect at first, since 255 - (255*0.7*0.7*0.7) is 168; but that's because those calculations are done in gamma companded space, which is not a representation of the actual luminosity
2012-11-21 21:00:21 UTC <nand`> this may seem correct at first*
2012-11-21 21:00:47 UTC <nand`> there's a more interesting example as well
2012-11-21 21:02:31 UTC <nand`> this diagram is just a red square and blue sqare, both at 50% opacity, slightly overlapping. Here's the old (non-linear) output: http://sadpanda.us/images/1260041-CTCGJBF.png and here's the --linear output: http://sadpanda.us/images/1260043-KZ7QNZE.png
2012-11-21 21:02:48 UTC <Ralith> ACTION pings byorgey 
2012-11-21 21:06:26 UTC <nand`> again the calculation, to prove I'm not senile:
2012-11-21 21:06:28 UTC <nand`> Î» (red `withOpacity` 0.5) `Data.Colour.over` (blue `withOpacity` 0.5)
2012-11-21 21:06:28 UTC <nand`> Data.Colour.SRGB.Linear.rgb 0.6666666666666666 0.0 0.3333333333333333 `withOpacity` 0.75
2012-11-21 21:06:29 UTC <nand`> Î» toSRGB24 $ Data.Colour.SRGB.Linear.rgb 0.6666666666666666 0.0 0.3333333333333333
2012-11-21 21:06:32 UTC <nand`> RGB {channelRed = 213, channelGreen = 0, channelBlue = 156}
2012-11-21 21:06:50 UTC <nand`> 255*0.75 opacity = 191.25
2012-11-21 21:07:06 UTC <nand`> the --linear image has the expected 214/0/157/192
2012-11-21 21:10:53 UTC <nand`> here's the patch in case you want to play around it: https://github.com/nandykins/diagrams-cairo/commit/2af4888eb18d84ac49bd3f4c9a2e993355817c77
2012-11-21 21:12:07 UTC <byorgey> Ralith: sorry, I haven't forgotten about you, just haven't had time to look at your code yet
2012-11-21 21:13:02 UTC <Ralith> kk
2012-11-21 21:13:06 UTC <Ralith> no particular hurry
2012-11-21 21:14:07 UTC <Ralith> unrelatedly, I've noticed that text in the SVG backend seems to be set to 0 opacity by default; is this something I might be able to fix with a reasonably bounded amount of poking around?
2012-11-21 21:56:48 UTC <byorgey> Ralith: https://github.com/diagrams/diagrams-svg/issues/15
2012-11-21 21:56:53 UTC <byorgey> no, it is not easy to fix
2012-11-21 21:58:27 UTC <Ralith> hm.
2012-11-21 21:59:38 UTC <nand`> byorgey: some food for thought: http://lists.cairographics.org/archives/cairo/2010-June/020111.html
2012-11-21 21:59:40 UTC <nand`> the links at the bottom are useful too
2012-11-22 02:34:38 UTC <byorgey> if Ralith comes back tell them this is exactly why I originally intended for text to work like line width (i.e. unaffected by transformations) except it doesn't actually work that way given how things are currently implemented.
2012-11-22 02:35:00 UTC <byorgey> but in the meantime try using the new ScaleInv wrapper which prevents things from being scaled
2012-11-22 02:35:19 UTC <byorgey> i.e. wrap the text in ScaleInv
2012-11-22 02:37:02 UTC <byorgey> in Diagrams.TwoD.Transform
2012-11-22 08:55:32 UTC <nand`windows> byorgey: do you know if diagrams-cairo runs on windows?
2012-11-22 09:00:05 UTC <nand`windows> byorgey: also, huh? if I try to submit a pull request for the gamma changes, github includes two commits that you already cherry-picked, but your versions have different commit IDs for some reason
2012-11-22 09:00:14 UTC <nand`windows> I can't seem to exclude them from the pull request
2012-11-22 09:00:31 UTC <nand`windows> ACTION wishes this was on hub.darcs.net
2012-11-22 10:10:30 UTC <byorgey> nand`: pull requests are always per-branch
2012-11-22 10:10:38 UTC <byorgey> not per-commit
2012-11-22 10:11:51 UTC <byorgey> nand`: they have different commit IDs because they are different commits.  The commit ID is identifying an object in git's graph.  It's not like a hash of just the changes or something.
2012-11-22 10:12:56 UTC <byorgey> nand`: I'm not sure of the status of diagrams-cairo on windows; ask fryguybob
2012-11-22 10:16:34 UTC <byorgey> Ralith: I looked at your code, BTW
2012-11-22 10:16:48 UTC <byorgey> this is exactly why I originally intended for text to work like line width (i.e. unaffected by transformations) except it doesn't actually work that way given how things are currently implemented.
2012-11-22 10:17:25 UTC <byorgey> but in the meantime, you could try using the new ScaleInv wrapper (in Diagrams.TwoD.Transform) which prevents things from being scaled
2012-11-22 10:17:31 UTC <byorgey> i.e. wrap the text objects
2012-11-22 10:18:11 UTC <Ralith> ACTION noticed that the documentation seemed inaccurate there
2012-11-22 10:18:26 UTC <Ralith> I'll give that ago; it sounds promising
2012-11-22 10:18:27 UTC <Ralith> thanks
2012-11-22 10:19:21 UTC <Ralith> there's also the spacing problem, but that might be solvable with the same approach
2012-11-22 10:19:27 UTC <Ralith> well, hm
2012-11-22 10:19:31 UTC <Ralith> maybe not
2012-11-22 10:20:06 UTC <Ralith> byorgey: I want the annotations to have a fixed real screenspace padding; any way to accomplish that?
2012-11-22 10:22:15 UTC <Ralith> really, I want to define the whole thing in screenspace.
2012-11-22 10:23:13 UTC <byorgey> if you want to define the whole thing in screenspace you can try setting the 'cairoBypassAdjust' option to True, perhaps?
2012-11-22 10:23:47 UTC <Ralith> I'm actually using the SVG backend at present >_>
2012-11-22 10:24:06 UTC <byorgey> but if you want the annotations to have a fixed padding, would it work to put the annotations on top of invisible rectangles of a certain size (or just a strut) and then wrap the whole thing (annotation + strut) in ScaleInv ?
2012-11-22 10:24:10 UTC <Ralith> works just fine for my purposes with explicit text fill color, and I have another contributor on windows who doesn't want the trouble of compiling cairo
2012-11-22 10:24:19 UTC <byorgey> oh, ok, sure
2012-11-22 10:24:28 UTC <Ralith> I think it might
2012-11-22 10:24:45 UTC <Ralith> I'll need to play with it to be sure
2012-11-22 10:24:57 UTC <byorgey> ok, let me know how it works
2012-11-22 10:25:16 UTC <Ralith> recall that my dimensions tend to be in the range of 1e-3, so if I have something unscalable at size 1 then it's going to be awkward to work with.
2012-11-22 10:25:57 UTC <byorgey> well, you can scale them down by 100 or whatever before putting them in ScaleInv
2012-11-22 10:26:10 UTC <byorgey> the point is that you can do it uniformly for all annotations
2012-11-22 10:26:22 UTC <byorgey> even though the things they are annotating will not be scaled uniformly
2012-11-22 10:26:58 UTC <byorgey> (if I've understood correctly)
2012-11-22 10:27:40 UTC <Ralith> sounds right, but I'll still have to derive 100 or whatever by trial and error to see what works well, won't I?
2012-11-22 10:28:01 UTC <Ralith> though even then it's an improvement in that I need only one magic number
2012-11-22 10:28:04 UTC <byorgey> yes, I suppose so, but I don't see any way around that
2012-11-22 10:28:10 UTC <Ralith> kk
2012-11-22 10:28:11 UTC <Ralith> thanks!
2012-11-22 10:28:33 UTC <Ralith> it seems to be that general support for doing things in screenspace might be useful, but I have no idea how hard that might be to achieve.
2012-11-22 10:28:47 UTC <byorgey> I mean, fundamentally it seems there is no way to automate finding a size for text that "looks good"
2012-11-22 10:29:07 UTC <byorgey> Ralith: it would be very easy to achieve actually
2012-11-22 10:29:10 UTC <Ralith> I'm more concerned about finding a size for text (and struts) that doesn't result in the entire rest of the diagram being scald down to a pixel
2012-11-22 10:29:18 UTC <Ralith> oh?
2012-11-22 10:29:20 UTC <byorgey> it just means NOT calling a certain function =)
2012-11-22 10:29:32 UTC <Ralith> huh.
2012-11-22 10:29:33 UTC <byorgey> the only difficulty is that "screen space" means something different for each backend
2012-11-22 10:29:47 UTC <Ralith> even SVG has a notion of a default mapping to pixels
2012-11-22 10:29:51 UTC <Ralith> well
2012-11-22 10:29:56 UTC <Ralith> I guess there are non-pixel backends, aren't there
2012-11-22 10:30:04 UTC <byorgey> sure
2012-11-22 10:30:05 UTC <Ralith> tikz and postscript and stuff
2012-11-22 10:30:21 UTC <byorgey> anyway, I'm off to catch a train
2012-11-22 10:30:24 UTC <Ralith> kk
2012-11-22 10:30:25 UTC <Ralith> \o
2012-11-22 10:30:27 UTC <byorgey> later
2012-11-22 12:39:05 UTC <fryguybob> nand`: Cairo on Windows is fine until you want text, or easy install.
2012-11-23 13:18:00 UTC <luite> \o/
2012-11-23 13:18:12 UTC <byorgey> \o/
2012-11-23 13:18:15 UTC <luite> :)
2012-11-23 13:18:20 UTC <byorgey> what are we celebrating?
2012-11-23 13:20:06 UTC <luite> dunno. do you have cool ideas for demos with diagrams wit ghcjs? maybe something that you've blogged about and thought that it would be cool if it was interactive? i have to do a ghcjs demo presentation in feb
2012-11-23 13:22:21 UTC <luite> dunno how complicated it can be, i'm working fulltime on this but it's a lot of work
2012-11-23 13:24:59 UTC <byorgey> hmm, not sure off the top of my head
2012-11-23 13:25:05 UTC <byorgey> if I think of something I'll let you know
2012-11-23 13:28:54 UTC <luite> i'd like to demo wolfgang obviously, but i'm not sure it will be ready in time
2012-11-23 13:32:50 UTC <luite> hopefully this year i'll have an icfp / haskell symposium submission :)
2012-11-23 13:33:05 UTC <luite> err, next year
2012-11-23 13:42:48 UTC <byorgey> luite: sounds great =)
2012-11-23 13:43:04 UTC <byorgey> luite: let me know if there are any ways I can help
2012-11-23 13:46:13 UTC <luite> maybe some inline pragmas would be nice later, but i'm still doing more low-level things atm, memory management has to work better before blaze can work.
2012-11-23 15:04:06 UTC <luite> hmm, 2 functional programming phd positions at chalmers
2012-11-23 15:29:42 UTC <byorgey> chalmers sounds like a great place
2012-11-23 15:30:05 UTC <byorgey> luite: why, are you thinking of applying for a PhD?
2012-11-23 15:40:02 UTC <luite> byorgey: well i'd like to do a PhD
2012-11-23 15:40:13 UTC <byorgey> cool
2012-11-23 15:44:15 UTC <luite> but i'm not sure if applying there would be useful, i don't have any academic experience with FP (and i'm more interested in combinatorics, graph theory and algorithms etc actually, but there might be enough overlap, and good coworkers/students can help you get more interested in new stuff of course)
2012-11-23 15:44:56 UTC <byorgey> I don't know if "academic" experience matters
2012-11-23 15:45:03 UTC <byorgey> practical experience works just as well
2012-11-23 15:45:13 UTC <luite> i've already spend 6 months at chalmers btw, but not that department
2012-11-23 15:45:16 UTC <luite> spent
2012-11-23 15:45:21 UTC <byorgey> ah, I forgot that
2012-11-23 15:45:45 UTC <luite> gothenburg is a nice place to live, not cheap though
2012-11-23 15:46:20 UTC <byorgey> but yeah, if you're interested in other stuff... good colleagues is a necessary, but not sufficient, criterion =)
2012-11-23 15:48:13 UTC <luite> hehe right, well i do like fp obviously, but i don't know that much about the theory beyond some basic TaPL level :)
2012-11-23 15:50:02 UTC <byorgey> right, fair enough
2012-11-23 15:50:35 UTC <byorgey> I guess there's also a difference in US vs. European PhDs, in the US you wouldn't necessarily be expected to know much more than that (I didn't)
2012-11-23 15:50:51 UTC <byorgey> but maybe since european PhDs are usually shorter you are expected to come in knowing more
2012-11-23 15:51:06 UTC <luite> in the US you usually combine the master and phd in one program, right?
2012-11-23 15:51:11 UTC <byorgey> right, yeah
2012-11-23 15:51:21 UTC <luite> the chalmers program is 5 years
2012-11-23 15:51:24 UTC <luite> for just PhD
2012-11-23 15:51:30 UTC <byorgey> oh, that's pretty long then
2012-11-23 15:51:52 UTC <luite> which includes 20% teaching, 80% research, should be enough time to get started :)
2012-11-23 15:51:59 UTC <byorgey> I should think so =)
2012-11-23 15:55:53 UTC <luite> in the netherlands it's usually 4 years
2012-11-23 16:00:59 UTC <luite> bleh
2012-11-23 16:25:33 UTC <byorgey> what in the heck, the cairo backend seems to be flaking out and generating empty PDF files sometimes
2012-11-23 16:25:44 UTC <byorgey> but if you ask it to generate PNG or SVG they look fine
2012-11-23 19:05:54 UTC <byorgey> `nand`: if someone asks me to create a diagram using the color ff6600, what's the right way to construct it?  Using the 'rgb' function from Data.Colour.SRGB.Linear ?
2012-11-23 19:06:17 UTC <byorgey> I will accept "it depends" as an answer =)
2012-11-23 19:12:27 UTC <byorgey> oh! haha, the arguments have to be between 0 and 1, not 0x00 to 0xff =P
2012-11-23 19:12:48 UTC <luite> ff6600 is only a color if you have some color space in which it's specified ;p
2012-11-23 19:13:12 UTC <byorgey> right.
2012-11-23 19:13:24 UTC <byorgey> I mean I don't think this guy really knows anything about color either.
2012-11-23 19:13:52 UTC <luite> usually a gamma of 2.0 or 2.2 is assumed, does the Linear thing mean that it's 1.0 gamma?
2012-11-23 19:14:02 UTC <byorgey> I guess the question is really "if someone who doesn't really understand color asks for a PDF with something having color ff6600, what should I do in order to produce what they are most likely to actually mean"
2012-11-23 19:14:56 UTC <byorgey> hmm, yes, probably I should actually use  Data.Colour.SRGB
2012-11-23 19:15:22 UTC <luite> right, sRGB is an ok default
2012-11-23 19:15:32 UTC <luite> sRGB24 seems to do what you're asking
2012-11-23 19:16:57 UTC <byorgey> makes sense
2012-11-23 19:16:58 UTC <byorgey> thanks!
2012-11-23 19:17:24 UTC <byorgey> we should write up something for the diagrams user manual, "color for dummies"
2012-11-23 19:28:36 UTC <fryguybob> Wait Williams colors are purple and gold?
2012-11-23 19:29:05 UTC <fryguybob> ACTION really has some questions about byorgey's webbrowser's colors...
2012-11-23 19:31:21 UTC <byorgey> fryguybob: http://archives.williams.edu/williamshistory/groups/williams-college-color.php
2012-11-23 19:37:28 UTC <fryguybob> byorgey: But the mastodon looks purple and gold? https://www.facebook.com/photo.php?fbid=10152281359730643&set=p.10152281359730643&type=1&theater#
2012-11-23 19:38:15 UTC <luite> oh it's without a 't' in english, didn't know that :)
2012-11-23 19:38:30 UTC <luite> ("mastodont" in dutch)
2012-11-23 19:39:02 UTC <byorgey> fryguybob: it looks purple and orange
2012-11-23 19:39:21 UTC <luite> more blue than purple here
2012-11-23 19:39:48 UTC <fryguybob> It's supposed to be blue and orange.
2012-11-23 19:41:25 UTC <byorgey> so Google tells me
2012-11-23 19:42:20 UTC <byorgey> hah, I saved the image and opened it in Gimp
2012-11-23 19:42:35 UTC <byorgey> gimp says, "this image has an embedded color profile, would you like to convert it to sRGB?"
2012-11-23 19:42:38 UTC <byorgey> so I clicked "convert"
2012-11-23 19:42:46 UTC <byorgey> and now it looks blue
2012-11-23 19:43:12 UTC <byorgey> I am coming to the conclusion that firefox is really confused about colors too
2012-11-23 19:44:18 UTC <byorgey> this would also explain why every time I edit some photos and then upload them to smugmug the color looks wrong after they're uploaded
2012-11-23 19:45:58 UTC <luite> hm, usually untagged files are assumed to be sRGB, but not all programs correctly map images correctly to the display device space
2012-11-23 19:46:19 UTC <byorgey> I think maybe Firefox and I are through.  The only reason I was still using it was pentadactyl, but that still hasn't been updated for the latest firefox anyway
2012-11-23 19:47:10 UTC <luite> do you have a monitor display profile configured?
2012-11-23 19:48:33 UTC <luite> (i have to admit that i have no idea how to do that on linux)
2012-11-23 19:50:13 UTC <byorgey> I wouldn't know
2012-11-23 19:50:15 UTC <byorgey> I doubt it
2012-11-23 19:50:23 UTC <fryguybob> byorgey: Judah is happy you now see his true colors :D
2012-11-23 19:50:29 UTC <byorgey> excellent =)
2012-11-23 19:51:38 UTC <luite> if you have a recent TFT screen with LED backlight, and you have two programs that display an image differently, the one that shows the most saturated image is probably the one not doing color management
2012-11-23 19:52:01 UTC <luite> if it's an sRGB image
2012-11-23 19:52:06 UTC <byorgey> that would be firefox
2012-11-23 19:52:47 UTC <luite> hmm, odd, i thought firefox did color management if the file is tagged with a profile
2012-11-23 19:53:51 UTC <luite> oh there's a bug in firefox where it doesn't use the configured monitor profile on X11
2012-11-23 19:53:55 UTC <luite> but sRGB
2012-11-23 19:54:40 UTC <luite> which means that the images are displayed too saturated on many screens
2012-11-23 19:56:15 UTC <byorgey> yeah, that sounds like what I'm seeing
2012-11-24 02:51:55 UTC <fryguybob> byorgey: Rebekah reminds me that purple and gold are the colors of Houghton... you know the school we live at... so at some point there will be some picture of Judah in Williams colors.
2012-11-24 02:52:37 UTC <byorgey> excellent =)
2012-11-24 02:53:37 UTC <byorgey> although probably firefox will show it as navy blue and fuchsia
2012-11-24 02:54:02 UTC <fryguybob> I'll have to make several variations with color profiles baked in.
2012-11-24 02:56:39 UTC <byorgey> but I think that picture with the mastodon *did* have a color profile baked in
2012-11-24 03:02:00 UTC <fryguybob> Oh, I mean baked into the color bits.
2012-11-24 03:02:11 UTC <byorgey> oh, right =)
2012-11-24 12:44:31 UTC <`nand`> byorgey: I'll go with what luite said
2012-11-24 12:44:44 UTC <`nand`> luite: yes the .Linear module is for linear light values
2012-11-24 12:45:26 UTC <`nand`> byorgey: firefox has CMS support, but you need to enable it explicitly iirc; I don't know what the default is
2012-11-24 12:45:52 UTC <`nand`> on the other hand, the only browser besides firefox that is color aware in the slightest is safari
2012-11-24 12:46:34 UTC <`nand`> luite: firefox does CMS for everything if you set gfx.color_management.mode to a certain value, I think it was 4
2012-11-24 12:46:47 UTC <`nand`> and only for tagged files in some other mode (the default, iirc)
2012-11-24 12:47:19 UTC <`nand`> luite: you can also set the profile via gfx.color_management.display_profile
2012-11-24 12:47:21 UTC <`nand`> and gfx.color_management.enablev4 to enable ICCv4 profiles
2012-11-24 12:55:21 UTC <fryguybob> http://www.petapixel.com/2012/06/25/is-your-browser-color-managed/
2012-11-24 12:56:12 UTC <fryguybob> Looks fine in Chrome for me.
2012-11-24 12:56:26 UTC <luite> hm both chrome and firefox do it correctly here, no settings customized
2012-11-24 12:57:11 UTC <luite> opera is wrong
2012-11-24 12:57:39 UTC <`nand`> okay
2012-11-24 12:57:45 UTC <`nand`> sounds like they decided to re-add it since the last time I had a look at chrome
2012-11-24 12:57:48 UTC <`nand`> they originally removed it because it âslowed down rendering timesâ
2012-11-24 12:59:38 UTC <luite> i doubt that's much noticeable, most display profiles are a 3x3 matrix and either a gamma function or a 1d gamma lut
2012-11-24 12:59:46 UTC <luite> can easily be offloaded to the gpu even
2012-11-24 13:00:12 UTC <`nand`> I did actually try it out with the ICC profile I usually used for firefox at the time
2012-11-24 13:00:29 UTC <`nand`> it took a few minutes to render one image, then crashed on the next one
2012-11-24 13:00:39 UTC <luite> that must be a terrible implementation o_O
2012-11-24 13:09:25 UTC <fryguybob> links doesn't show the picture at all...
2012-11-24 13:09:53 UTC <luite> hehe
2012-11-24 13:14:35 UTC <`nand`> links is not compliant with the CSS color specifications :)
2012-11-25 09:21:41 UTC <Ralith_> ACTION would be interested to read a basic intro to colors
2012-11-25 09:24:27 UTC <luite> do you have any application in mind? or are you mainly interested in the theory?
2012-11-25 09:31:44 UTC <Ralith_> the latter
2012-11-25 09:31:59 UTC <Ralith_> though I tinker with graphics on occasion, so I might apply the knowledge at some point
2012-11-28 06:07:48 UTC <luite> morning mgsloan \o.
2012-11-28 06:08:06 UTC <mgsloan> 'evening luite!
2012-11-28 06:09:16 UTC <mgsloan> how's it going?  What have you been working on lately?
2012-11-28 06:09:20 UTC <luite> ghcjs
2012-11-28 06:10:02 UTC <luite> you?
2012-11-28 06:10:54 UTC <luite> i'm going to work on ghcjs until feb, then integrate it in wolfgang
2012-11-28 06:12:14 UTC <mgsloan> awesome!!!
2012-11-28 06:46:13 UTC <luite> trying to implement part of iconv now, in js, to get the GHC test suite running
2012-11-28 07:04:15 UTC <mgsloan> sorry, got distracted!!
2012-11-28 07:04:26 UTC <mgsloan> I'd be more in favour of wolfgang sooner than later, but if it's mind blowingly awesome from ghcjs, more power to you!
2012-11-28 07:04:49 UTC <mgsloan> Last week I was cleaning up gtk-toy-diagrams a bit
2012-11-28 07:05:05 UTC <mgsloan> hoping to get it release worthy in time for the next diagrams release
2012-11-28 07:05:45 UTC <mgsloan> but got sucked back into working on some lens stuff a couple days ago  (the lens TH DSL, and last night re-writing Control.Newtype in a lensy style)
2012-11-28 07:19:50 UTC <luite> ah that's arguably more interesting code than low-level ghcjs stuff :p
2012-11-28 07:21:50 UTC <mgsloan> question is, which is more impactful!  My bet's on ghcjs
2012-11-28 07:22:21 UTC <mgsloan> though lens is pretty awesome, I'm just pitching in a little bit
2012-11-28 07:22:24 UTC <luite> the code is really ugly now, but i don't want to do any major refactoring until the test suite works
2012-11-28 07:23:15 UTC <luite> which means stdout has to work, which means locale and output buffering need tow ork
2012-11-28 07:30:39 UTC <mgsloan> hehe, oh the things we take for granted in native development
2012-11-28 07:31:51 UTC <luite> yeah GHC uses some annoying stuff in the base package for this, pointers are still relatively easy to implement in javascript (just an array and an offset), but pointers to pointers are causing some problems
2012-11-28 07:32:38 UTC <luite> eventually, we can hopefully get this as an extra platform in base, with some #ifdef
2012-11-28 07:32:42 UTC <luite> but atm it's easier just to emulate it on a lower level
2012-11-28 07:34:55 UTC <luite> most end users probably wouldn't really use stdout in web applications
2012-11-28 07:35:54 UTC <luite> although it's possible to do stdout.write = function(array, offset, len) { window.alert(decodeUtf8(array, offset, len)); }
2012-11-30 16:33:28 UTC <byorgey> my son appears to have typed his own name: https://github.com/byorgey/noah-emacs/blob/master/noah.txt#L291
2012-11-30 16:35:02 UTC <fryguybob> hehe
2012-11-30 16:35:58 UTC <fryguybob> Clearly we need to make a diagrams based cross platform version of Baby Smash.
2012-11-30 16:41:06 UTC <byorgey> woah, I didn't know about baby smash
2012-11-30 16:45:06 UTC <fryguybob> It needs a feature where you get some nice factor diagrams when you type your own name.
2012-11-30 16:45:06 UTC <byorgey> oh, .NET =(
2012-11-30 16:45:06 UTC <fryguybob> In his defence he was one on the .NET design team.
2012-11-30 16:45:07 UTC <byorgey> oh, I have nothing against .NET, except that I can't run it =P
2012-11-30 16:48:55 UTC <fryguybob> ACTION is sad that that is often the case, yet usually you can run Java :(
2012-12-01 02:44:38 UTC <byorgey> fryguybob: are you planning to release diagrams-postscript on Hackage?
2012-12-01 02:46:06 UTC <fryguybob> byorgey: Yeah what would be good timing for that?
2012-12-01 02:46:47 UTC <byorgey> fryguybob: oh, right, I guess it depends on unreleased versions of diagrams-core and -lib, duh
2012-12-01 02:47:37 UTC <byorgey> but I wanted to add it to the 'diagrams' package so you can install it with  'cabal install diagrams -fpostscript'
2012-12-01 02:47:45 UTC <byorgey> if it's going to be official
2012-12-01 02:48:01 UTC <byorgey> so the best timing would be right *after* I upload diagrams-lib but right *before* I upload diagrams ;)
2012-12-01 02:48:51 UTC <fryguybob> :D
2012-12-01 02:50:29 UTC <byorgey> so I don't know what December 11 looks like for you, but that's when I (plan to be) uploading stuff
2012-12-01 02:50:44 UTC <byorgey> alternatively you could just generate a tarball and send it to me, and I could upload it
2012-12-01 02:52:48 UTC <fryguybob> byorgey: I have an out of order superscalar processor with some form of fancy branch prediction due on the 12th.
2012-12-01 02:53:03 UTC <fryguybob> I don't expect to be getting much done until after that :(
2012-12-01 02:53:04 UTC <byorgey> ah.
2012-12-01 02:55:01 UTC <byorgey> well, I can upload it for you if you like.  In fact you don't even have to generate a tarball, I can easily do that too
2012-12-01 02:55:28 UTC <byorgey> unless there's other stuff you still want to do with it before releasing.
2012-12-01 02:55:41 UTC <byorgey> we can also easily wait and release it later.  there's no rush.
2012-12-01 02:56:21 UTC <fryguybob> I think the only think I wanted to do was some Haddockifying.
2012-12-01 02:59:14 UTC <byorgey> OK. we can just wait to release it until you have some time to do Haddockifying.
2012-12-01 02:59:46 UTC <fryguybob> ok sounds good.
2012-12-01 02:59:57 UTC <fryguybob> Sorry our timing is slighgly off.
2012-12-01 03:01:58 UTC <byorgey> fryguybob: no worries.  I probably should have consulted you before scheduling the release.
2012-12-01 03:03:48 UTC <fryguybob> byorgey: Might not have helped as our assignments got shuffled and merged anyway.
2012-12-01 03:04:21 UTC <byorgey> hehe, I see
2012-12-01 03:04:50 UTC <fryguybob> The 12th is approaching too quickly...
2012-12-01 03:06:30 UTC <fryguybob> I am getting even more motivated to do a circuit layout module for diagrams-contrib though :D
2012-12-01 03:06:52 UTC <byorgey> sounds fun =)
2012-12-01 03:08:06 UTC <fryguybob> I really should checkout lava now that I have some sense of what goes on in the architecture world.
2012-12-01 19:03:00 UTC <fryguybob> ACTION writes an EDSL to test his branch predictor ... in C :(
2012-12-01 20:10:48 UTC <luite> hm
2012-12-01 20:17:24 UTC <fryguybob> And it works!
2012-12-01 20:34:13 UTC <luite> my stuff doesn't :/
2012-12-01 20:40:23 UTC <fryguybob> luite: Most of everything else doesn't work for me either...
2012-12-02 13:42:13 UTC <byorgey> http://hackermonthly.com/issue-31.html
2012-12-02 13:42:20 UTC <byorgey> diagrams made the cover of Hacker Monthly! =D
2012-12-02 16:55:56 UTC <mekeor> hey folks, i'm using the "rotate" function and wonder how exactly it works. i don't quite get how it rotates the object it's applied onâ¦ â so my precise question is which is the fix-point (around which it's rotated)?
2012-12-02 16:59:58 UTC <morel> oh okayâ¦ it rotates around the "local origin"â¦
2012-12-02 17:00:15 UTC <morel> was a little hidden in the docsâ¦ but now it's clear. thanks :)
2012-12-02 17:00:57 UTC <morel> i'm gonna use rotateAbout, i think =)
2012-12-02 17:10:30 UTC <byorgey> morel: glad you figured it out =)
2012-12-02 17:13:26 UTC <byorgey> ACTION improves the documentation
2012-12-02 17:14:29 UTC <morel> :)
2012-12-02 17:14:59 UTC <morel> i actually still don't quite get where the local origin of my object isâ¦ :/
2012-12-02 17:15:26 UTC <morel> ACTION goes afk, will come backâ¦
2012-12-02 17:15:28 UTC <byorgey> morel: you can use 'showOrigin' to show it
2012-12-02 17:37:10 UTC <morel> cooool! thanks, byorgey :D
2012-12-02 18:12:54 UTC <morel> how are overlapping objects organised?
2012-12-02 18:46:33 UTC <fryguybob> byorgey: Awesome!
2012-12-02 19:31:50 UTC <luite> rf=werghwq
2012-12-02 21:33:06 UTC <luite> hm oops didn't notice that, for some reason my server has load spikes today
2012-12-02 21:33:10 UTC <luite> so it becomes unresponsive
2012-12-02 21:38:33 UTC <luite> hm looks like one of the hdds is dying
2012-12-02 21:38:52 UTC <luite> [6841600.870117] ata1.00: failed command: READ FPDMA QUEUED
2012-12-02 22:00:46 UTC <luite> disabled the drive in the array
2012-12-03 17:24:27 UTC <`nand`> byorgey: can I write literate haskell latex papers using that diagrams thing without them conflicting with the haskell program being literately included?
2012-12-03 19:01:15 UTC <byorgey> `nand`: yes
2012-12-03 19:01:51 UTC <byorgey> `nand`: the diagrams are defined in special blocks which are "comments" as far as the literate Haskell preprocessor is concerned
2012-12-03 19:01:59 UTC <`nand`> ah
2012-12-03 19:02:14 UTC <`nand`> ACTION was not quite sure how literate haskell + latex works
2012-12-03 19:02:42 UTC <byorgey> code blocks are marked with \begin{code} ... \end{code}
2012-12-03 19:02:53 UTC <byorgey> everything else is a comment
2012-12-03 19:07:31 UTC <`nand`> speaking of which; I have no idea how to write nice latex documents for Haskell code. I'm supposed to be writing a project documentation for âJugend Forscht 2012/13â, but I want it to look as pretty as the papers often produced by the likes of SPJ and friends
2012-12-03 19:07:52 UTC <`nand`> with next to zero LaTeX experience beyond the absolute basics :)
2012-12-03 19:09:31 UTC <byorgey> `nand`: well, you'll want to use lhs2TeX
2012-12-03 19:09:49 UTC <byorgey> http://hackage.haskell.org/package/lhs2tex
2012-12-03 19:10:03 UTC <byorgey> that's what everyone uses, it's quite nice
2012-12-03 19:10:17 UTC <`nand`> awesome
2012-12-03 19:11:10 UTC <byorgey> `nand`: I'm also happy to provide feedback/answer questions, like "how do I do X" or "here's what I have so far, how can I make it look better"
2012-12-03 19:12:19 UTC <`nand`> there doesn't seem to be a link to the manual for version 1.8 on the homepage
2012-12-03 19:12:25 UTC <`nand`> 1.18
2012-12-03 19:13:04 UTC <`nand`> I'll just use the manual for 1.17 and assume the API hasn't changed
2012-12-03 19:21:19 UTC <byorgey> yeah, I don't think it's changed much
2012-12-03 19:30:13 UTC <`nand`> hmm
2012-12-03 19:30:31 UTC <byorgey> hmm?
2012-12-03 19:31:06 UTC <`nand`> am I expected to hide stuff like imports and LANGUAGE pragmas, if I only want to demonstrate the code, and not give the full file? (but it should still be runnable)
2012-12-03 19:32:47 UTC <byorgey> sure, you can do   %if False \n \begin{code} ... \end{code} \n %endif
2012-12-03 19:33:09 UTC <`nand`> ah
2012-12-03 19:35:44 UTC <`nand`> whoa
2012-12-03 19:35:59 UTC <`nand`> vim has a lhs mode, that actually highlights the LaTeX stuff correctly and the haskell stuff inside it correctly too
2012-12-03 19:39:13 UTC <byorgey> oh, neat =)
2012-12-03 19:40:38 UTC <`nand`> is it common to use the two-column format? I have no idea what the expectations for this thing I'm supposed to write are
2012-12-03 19:41:05 UTC <`nand`> all I know is I'm not supposed to use a font smaller than 10pt and I must provide a ToC, references, etc.
2012-12-03 19:46:03 UTC <`nand`> I'm looking at the paper âGiving Haskell a Promotionâ, for example; and I like how it looks
2012-12-03 19:47:03 UTC <`nand`> is that using lhs2TeX? I see for example that the kind * looks funny (it gets turned into some star); and PolyKinds variables do too (there's some squiggly X)
2012-12-03 20:12:37 UTC <byorgey> `nand`: two-column is common for papers published in conferences
2012-12-03 20:13:10 UTC <byorgey> `nand`: for a document that's supposed to be project documentation I would use one column and a bigger font size (i.e. just the default font size)
2012-12-03 20:13:54 UTC <byorgey> `nand`: and yes, the promotion paper uses lhs2TeX.  I can send you the sources if you'd like to see how it's done
2012-12-03 20:14:11 UTC <`nand`> sure
2012-12-03 20:14:25 UTC <byorgey> `nand`: special symbols, etc. can be accomplished with the %format directive, which is explained in the lhs2tex manual
2012-12-03 20:20:32 UTC <byorgey> `nand`: what's your email?
2012-12-03 20:20:37 UTC <`nand`> nand@lavabit.com
2012-12-03 20:29:19 UTC <byorgey> `nand`: send
2012-12-03 20:29:22 UTC <byorgey> *sent
2012-12-03 20:36:15 UTC <`nand`> looks good, thanks :)
2012-12-04 15:33:26 UTC <`nand`> byorgey: I'm having some difficulties with LaTeX and German umlauts
2012-12-04 15:33:45 UTC <`nand`> What's the proper procedure for getting them to render properly?
2012-12-04 15:34:40 UTC <`nand`> in particular, I want to be able to input them directly, without using the "a "s representations
2012-12-04 15:34:54 UTC <`nand`> if I use those, it works fine; but if I just input Ã¤Ã, they don't get displayed
2012-12-04 15:35:39 UTC <fryguybob> \"a ?
2012-12-04 15:36:17 UTC <fryguybob> I think there is a TeX varient that avoids the pain perhaps: http://en.wikipedia.org/wiki/XeTeX ?
2012-12-04 15:36:22 UTC <`nand`> I'm using XeTeX
2012-12-04 15:37:31 UTC <fryguybob> Maybe you need to include some package to "turn on" the unicode support.
2012-12-04 15:38:33 UTC <fryguybob> `nand`: I'm sure someone in -blah would know.
2012-12-04 15:56:15 UTC <`nand`> I worked around it :)
2012-12-04 15:56:20 UTC <`nand`> using sed to replace Ã¤ by "a
2012-12-04 18:23:10 UTC <byorgey> `nand`: \usepackage[german]{babel}
2012-12-04 18:23:25 UTC <byorgey> that should let you use Ã¤ directly
2012-12-04 18:23:27 UTC <`nand`> byorgey: I had that; actually, [ngerman] for the new german
2012-12-04 18:23:32 UTC <byorgey> oh, ok
2012-12-04 18:23:35 UTC <byorgey> and it didn't work?
2012-12-04 18:25:04 UTC <byorgey> oh, you also need to load  inputenc  or something like that
2012-12-04 18:25:21 UTC <byorgey> \usepackage[utf8]{inputen[}
2012-12-04 18:25:26 UTC <byorgey> err, \usepackage[utf8]{inputenc}
2012-12-04 18:25:32 UTC <`nand`> \usepackage[utf8]{inputenc} errors in XeTeX
2012-12-04 18:25:32 UTC <byorgey> assuming you are using UTF-8
2012-12-04 18:25:36 UTC <`nand`> which apparently isn't supposed to be used at all
2012-12-04 18:25:37 UTC <byorgey> o.O
2012-12-04 18:25:47 UTC <`nand`> I actually found a âproperâ solution
2012-12-04 18:25:54 UTC <`nand`> or rather, -blah did
2012-12-04 18:26:10 UTC <`nand`> \usepackage{fontspec}
2012-12-04 18:26:12 UTC <`nand`> \defaultfontfeatures{Mapping=tex-text}
2012-12-04 18:26:23 UTC <byorgey> wat
2012-12-04 18:26:32 UTC <byorgey> ok, I believe you =)
2012-12-04 18:26:34 UTC <byorgey> glad you got it to work =)
2012-12-05 22:03:47 UTC <byorgey> fryguybob: so did the documentation for ScaleInv make sense?
2012-12-05 22:22:55 UTC <fryguybob> byorgey: Yes.  Much better then before :D.
2012-12-05 22:25:44 UTC <fryguybob> byorgey: I think there might be some properties that show that it has good behavior that we could show.  Such as showing that scaleInv gives the same result regardless of how you associate the transform applicaions.
2012-12-05 22:26:22 UTC <fryguybob> ACTION is not sure he can make much sense right now as his brain is concentrated on an out of order pipeline at the moment.
2012-12-05 23:38:06 UTC <byorgey> fryguybob: good thinking.  I suppose that should even be a law of the Transformable class.
2012-12-05 23:38:27 UTC <byorgey> well, at least  transform t1 . transform t2 = transform (t1 <> t2)  should be a law
2012-12-06 00:43:52 UTC <fryguybob> byorgey: Yeah, I think that gets to the heart of it.
2012-12-10 23:39:55 UTC <fryguybob> byorgey: No good.  At this point I'll be lucky to get just OoO.
2012-12-11 00:25:09 UTC <mightybyte> byorgey: ping
2012-12-11 00:51:56 UTC <byorgey> fryguybob: aww =(
2012-12-11 00:52:05 UTC <byorgey> hi mightybyte, how's it going?
2012-12-11 01:09:25 UTC <fryguybob> My current hang up is the instruction cache is not giving me the instruction I ask for (even though it gave the right value a few cycles ago...)
2012-12-11 01:18:40 UTC <byorgey> fryguybob: threaten it with gamma rays?
2012-12-11 01:19:19 UTC <fryguybob> hehe
2012-12-11 01:29:16 UTC <fryguybob> ACTION tries a fix.
2012-12-11 01:32:30 UTC <fryguybob> Woohoo, that worked.  Now I can successfully execute over 835 instructions in a row.
2012-12-11 01:36:49 UTC <fryguybob> And now I finally reach the part where I'm to a known issue that I have to fix.
2012-12-11 01:36:58 UTC <fryguybob> (diagrams is soooo much more fun)
2012-12-11 01:42:38 UTC <byorgey> let me tell you, changing a bunch of text files into Markdown format is not really that much fun =P
2012-12-11 01:43:00 UTC <byorgey> (but necessary for getting nice-looking release notes on the web...)
2012-12-11 01:48:11 UTC <fryguybob> Ooooo fancy markdown changes changes.
2012-12-11 02:04:48 UTC <fryguybob> ACTION celebrates hitting the milestone that he had hoped to hit a week ago.
2012-12-11 02:04:54 UTC <byorgey> yay!
2012-12-11 02:05:24 UTC <fryguybob> Over 1000 instructions including halt!
2012-12-11 16:38:08 UTC <mightybyte> Just about ready to release?
2012-12-11 16:40:04 UTC <byorgey> mightybyte: yep, later today
2012-12-11 16:40:10 UTC <mightybyte> Woo hoo!
2012-12-11 16:40:11 UTC <byorgey> still got some documentation to update and so on
2012-12-11 16:40:14 UTC <mightybyte> Perfect timing
2012-12-11 16:40:21 UTC <byorgey> =)
2012-12-11 16:40:25 UTC <byorgey> what are you using diagrams for?
2012-12-11 16:40:46 UTC <mightybyte> FYI, when I tried to change the split version bound by hand yesterday I got the following error.
2012-12-11 16:40:49 UTC <mightybyte> src/Diagrams/Backend/Cairo/Text.hs:145:53:
2012-12-11 16:40:49 UTC <mightybyte>     Couldn't match expected type `Point v0' with actual type `R2'
2012-12-11 16:41:07 UTC <byorgey> mightybyte: that is fixed now
2012-12-11 16:41:11 UTC <mightybyte> Ok
2012-12-11 16:41:15 UTC <byorgey> that was due to a change in vector-space
2012-12-11 16:41:48 UTC <mightybyte> I'm actually not sure.  I just started a new job and diagrams is a dependency in our largest project.
2012-12-11 16:41:58 UTC <byorgey> hah, nice
2012-12-11 18:19:10 UTC <luite> \o/
2012-12-11 18:20:06 UTC <byorgey> `=D
2012-12-11 18:20:17 UTC <byorgey> huh, where did that ` come from?
2012-12-11 21:38:48 UTC <byorgey> building building building...
2012-12-11 22:53:18 UTC <byorgey> sigh, not QUITE ready to upload...
2012-12-11 22:53:41 UTC <byorgey> gotta go home and make dinner, but after dinner I should be able to continue... I still hope to have 0.6 out before midnight!
2012-12-11 22:55:03 UTC <fryguybob> Woohoo!
2012-12-12 01:12:32 UTC <fryguybob> ACTION brews some lambda tea to help byorgey with the final details.
2012-12-12 01:16:11 UTC <byorgey> =D  thanks!
2012-12-12 02:33:01 UTC <byorgey> updated website is live: projects.haskell.org/diagrams/
2012-12-12 02:36:04 UTC <alpounet> nice!
2012-12-12 02:36:09 UTC <byorgey> preview of release announcement is here: http://byorgey.wordpress.com/?p=1023&preview=true
2012-12-12 02:36:32 UTC <byorgey> any feedback on the announcement in the next few minutes (while I go upload all the packages) is welcome
2012-12-12 02:37:59 UTC <alpounet> Not Found
2012-12-12 02:37:59 UTC <alpounet> Apologies, but the page you requested could not be found. Perhaps searching will help.
2012-12-12 02:38:05 UTC <alpounet> byorgey ^^^
2012-12-12 02:43:27 UTC <byorgey> alpounet: oh, huh, maybe you have to be logged in as me to see it
2012-12-12 02:43:59 UTC <byorgey> oh well
2012-12-12 02:45:34 UTC <alpounet> ACTION starts holding his breath
2012-12-12 02:51:02 UTC <byorgey> commencing uploads...
2012-12-12 02:51:20 UTC <byorgey> my internet connection is being flaky =(
2012-12-12 02:53:43 UTC <fryguybob> :(
2012-12-12 02:59:39 UTC <byorgey> all uploaded!
2012-12-12 02:59:46 UTC <byorgey> blog post published!
2012-12-12 03:00:06 UTC <byorgey> email sent!
2012-12-12 03:02:44 UTC <byorgey> the sweet, sweet sound of being beeped repeatedly by hackagebot
2012-12-12 03:07:11 UTC <jbracker> Congrats to the release ;)
2012-12-12 03:09:34 UTC <byorgey> thanks =)
2012-12-12 03:09:54 UTC <byorgey> sorry we couldn't get the generalized R2 stuff into this one
2012-12-12 03:09:59 UTC <byorgey> but hopefully we can get that sorted out
2012-12-12 03:10:31 UTC <byorgey> jbracker: actually, I hope to meet you in a week or so =)
2012-12-12 03:11:25 UTC <jbracker> I am looking forward to that
2012-12-12 03:11:39 UTC <jbracker> I am still far from finished with generalising that stuff
2012-12-12 03:11:49 UTC <jbracker> currently I am working on sunroof
2012-12-12 03:14:30 UTC <byorgey> cool, sounds good
2012-12-12 03:41:22 UTC <fryguybob> byorgey: \o/ \o\ \o/ /o/ _o/ \o_ <-- release dance.
2012-12-12 03:52:05 UTC <byorgey> =)
2012-12-12 03:52:07 UTC <byorgey> ACTION -> bed
2012-12-12 18:17:56 UTC <alpounet> byorgey, hey, how's the type matrices paper going?
2012-12-12 18:23:34 UTC <byorgey> alpounet: it's coming along!  you can take a look at what's there in the repo
2012-12-12 18:54:14 UTC <fryguybob> "wait until we implement better built-in support for arrows in diagrams (soon)" -- hehe
2012-12-12 18:54:33 UTC <alpounet> byorgey, cool thanks
2012-12-12 18:59:37 UTC <fryguybob> Arrow heads have been coming soon for faaaar too long (it's my fault... I'm ashamed).
2012-12-12 19:49:20 UTC <byorgey> fryguybob: hehe, no worries
2012-12-12 19:49:41 UTC <byorgey> fryguybob: but we have ScaleInv now!
2012-12-12 19:50:01 UTC <byorgey> which was one of the biggest missing pieces
2012-12-12 20:04:10 UTC <fryguybob> Well I hope to do some circuit diagrams and that will need arrow heads of course.  Only < 9 hours left...
2012-12-12 20:52:37 UTC <jbracker> how do I introduce scoped type variables in a type class instance?
2012-12-12 20:58:25 UTC <jbracker> oh... forget it was a version error...
2012-12-12 21:31:46 UTC <jbracker> byorgey: I just noticed that the Color type class is restricting me to double. Should I add another type parameter for the Double or do you have a nicer idea for that one? The first time I have to generalize simething outside of Diagrams.TwoD
2012-12-12 21:33:51 UTC <byorgey> jbracker: I don't understand why the Double in the Color type class would have anything to do with generalizing R2?
2012-12-12 21:35:34 UTC <jbracker> Diagrams.TwoD.Model : showOrigin', OriginOpts : I had to generalize this because it does math and style stuff with the Path (D2 a
2012-12-12 21:37:14 UTC <jbracker> byorgey: this problem basically occures everytime some datatype contains a Double and that double is used to manipulate some generalized graphical object
2012-12-12 21:37:36 UTC <byorgey> jbracker: sure, but it shouldn't be a problem to leave oColor having type  Colour Double ?
2012-12-12 21:37:37 UTC <jbracker> byorgey: Then the type checker want to do a ~ Double
2012-12-12 21:38:12 UTC <jbracker> yeah ok that works
2012-12-12 21:38:17 UTC <jbracker> was a bit fast there
2012-12-12 21:38:20 UTC <byorgey> =)
2012-12-12 21:38:55 UTC <jbracker> thanks
2012-12-12 22:24:35 UTC <fryguybob> 7.5 out of 9 tests working isn't bad right?
2012-12-12 22:25:09 UTC <byorgey> sounds pretty good to me
2012-12-12 22:26:01 UTC <fryguybob> Too bad it's slow :D
2012-12-12 22:26:36 UTC <fryguybob> It doesn't have much hope of being fast without branch prediction unfortunately.
2012-12-12 22:31:28 UTC <byorgey> you should claim that your processor is actually running a simulation of itself
2012-12-12 22:31:32 UTC <byorgey> that should throw them off the scent
2012-12-12 22:33:28 UTC <fryguybob> "It may look slow, but...I N C E P T I O N..."
2012-12-12 22:33:37 UTC <byorgey> exactly =)
2012-12-13 00:58:22 UTC <fryguybob> 8.5/9
2012-12-13 02:34:34 UTC <byorgey> fryguybob: \o/
2012-12-13 02:34:52 UTC <byorgey> turn it in before the number goes down again!
2012-12-13 03:06:38 UTC <fryguybob> hehe
2012-12-13 03:07:12 UTC <fryguybob> I'm sooo close on the last one.  It (as usual) is doing things it shouldn't be doing!
2012-12-13 03:08:41 UTC <byorgey> the nerve!
2012-12-13 03:19:57 UTC <fryguybob> ACTION adds yet more logging...
2012-12-13 03:23:49 UTC <fryguybob> ACTION wades through the 837M logfile...
2012-12-13 03:27:56 UTC <byorgey> you should whip up some diagrams code to visualize it
2012-12-13 03:34:01 UTC <fryguybob> I may have found the right thing to log.
2012-12-13 04:14:13 UTC <fryguybob> I'm going to call it 8.8/9
2012-12-13 04:43:41 UTC <fryguybob> And it is turned in.  Now sleep and at some point in the nearish future.   Diagrams.
2012-12-13 11:56:22 UTC <byorgey> fryguybob: huzzah! sleep well.
2012-12-13 19:06:23 UTC <luite> going to budapest next week \o/
2012-12-13 19:16:46 UTC <byorgey> yay!
2012-12-13 19:16:48 UTC <byorgey> for what?
2012-12-13 19:41:05 UTC <fryguybob> I'm only aware of people going to Budapest for mathematics.
2012-12-13 19:41:46 UTC <luite> hehe giving a ghcjs talk
2012-12-13 19:42:11 UTC <byorgey> cool
2012-12-13 19:42:17 UTC <byorgey> fryguybob is awake!
2012-12-13 19:42:22 UTC <fryguybob> :D
2012-12-13 19:42:30 UTC <byorgey> fryguybob: so was that the last thing you had this semester?
2012-12-13 19:42:45 UTC <fryguybob> Only sort of.  I didn't sleep much due to my cold :(
2012-12-13 19:42:51 UTC <luite> aw :/
2012-12-13 19:42:52 UTC <byorgey> aww, boo =(
2012-12-13 19:42:57 UTC <fryguybob> I still have a final for that class, but that will be easy.
2012-12-13 19:42:59 UTC <luite> ACTION headache
2012-12-13 19:43:02 UTC <byorgey> sweet
2012-12-13 19:43:11 UTC <byorgey> congrats then.
2012-12-13 19:43:21 UTC <fryguybob> And grading.  There is always more grading.
2012-12-13 19:43:46 UTC <fryguybob> And I need to finish documenting how Haskell's STM works.
2012-12-13 19:44:53 UTC <byorgey> ah, grading.  yes, I have a bunch of that to do too.
2012-12-13 19:44:59 UTC <fryguybob> byorgey: How did you recursive class go?
2012-12-13 19:45:07 UTC <byorgey> it went really well
2012-12-13 19:45:16 UTC <byorgey> the students seemed to really enjoy it
2012-12-13 19:45:16 UTC <fryguybob> Excellent!
2012-12-13 19:46:00 UTC <byorgey> I still have some homework and a bunch of final projects to grade
2012-12-13 19:47:19 UTC <fryguybob> Just grade the base case and show that grading a small part implies the grade for a slightly bigger part.
2012-12-13 19:48:14 UTC <byorgey> oh, good idea =D
2012-12-13 19:48:38 UTC <byorgey> the base case would be 0 I suppose
2012-12-14 12:58:38 UTC <MasseR> Hi. There seems to be some problem with text alignment. No matter if I use text "foo", topLeftText "foo", or alignedText 1 1 "foo", the text always ends up in the same place
2012-12-14 13:01:03 UTC <MasseR> Ah it's a known issue (from 6 months back)
2012-12-14 14:10:32 UTC <byorgey> MasseR: you're using the SVG backend?
2012-12-14 14:11:17 UTC <byorgey> yeah, sorry, it's simply not implemented yet =)
2012-12-14 14:13:16 UTC <byorgey> MasseR: if you really need text alignment your options are (1) use the cairo backend (hard to install), (2) use https://github.com/fryguybob/diagrams-postscript (easy to install, postscript output only) (3) wait for it to be implemented (4) implement it yourself =)
2012-12-14 14:15:40 UTC <byorgey> re (4), I actually don't know what would be necessary to implement it.  It's probably non-trivial to implement fully
2012-12-14 14:18:21 UTC <MasseR> (5) manually align with translate :)
2012-12-14 14:22:07 UTC <fryguybob> hehe
2012-12-14 14:23:02 UTC <fryguybob> ACTION sadly due to time constraints often does (6) fix it in "post-production"
2012-12-14 14:48:07 UTC <byorgey> ah yes, I forgot about (5) and (6)  =)
2012-12-14 15:13:23 UTC <fryguybob> Humm seems like there is a lot of incompatability with text alignment and SVG.
2012-12-14 15:13:29 UTC <fryguybob> Shocking, I know.
2012-12-14 15:28:15 UTC <fryguybob> It looks like you can apply effects relative to the size of an object, but I don't see a way to apply a transform relative to the size of an object.
2012-12-14 15:29:01 UTC <fryguybob> Maybe there are some magic variables...
2012-12-14 20:15:41 UTC <byorgey> oooh, a patch from Deepak!
2012-12-14 22:32:59 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/IterLineFractal.png
2012-12-14 22:33:01 UTC <byorgey> http://hpaste.org/79208
2012-12-14 23:40:58 UTC <fryguybob> Nice
2012-12-14 23:45:40 UTC <fryguybob> ACTION has a slowwww circuit router.
2012-12-14 23:45:47 UTC <fryguybob> But it isn't hooked up to Diagrams yet.
2012-12-15 15:31:19 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Wibble.png
2012-12-15 15:34:03 UTC <fryguybob> Ooo splines?
2012-12-15 15:43:40 UTC <byorgey> yep
2012-12-15 15:44:22 UTC <byorgey> iteratively replacing segments by trails is no harder when the trails happen to have bezier segments =)
2012-12-15 15:44:55 UTC <byorgey> I mean, as long as you're not trying to lay out the trails "along the segments", but just rotating and scaling so the trail has the same endpoints as the old segment
2012-12-15 15:48:51 UTC <fryguybob> I figured out why my circuit routing was slow.  I was accounting for duplicate points for only half of the data.
2012-12-15 15:51:48 UTC <byorgey> heh, oops
2012-12-15 15:58:23 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Wibble2.png
2012-12-15 15:58:57 UTC <luite> cool :)
2012-12-15 16:52:44 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/RandomIters.pdf
2012-12-15 16:58:52 UTC <fryguybob> ACTION sees the self-similarity of self-similar things.
2012-12-15 16:58:53 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/RandomIters2.pdf
2012-12-15 16:59:03 UTC <byorgey> ACTION is having way too much fun with this
2012-12-15 16:59:49 UTC <byorgey> on the other hand it's probably good for me.  On occasion I realize that I have spent several weeks hacking on diagrams, writing documentation, etc., without actually making a single diagram
2012-12-15 17:00:40 UTC <byorgey> on the other other hand I really do need to get some work done today =)
2012-12-15 17:00:41 UTC <fryguybob> hehee
2012-12-16 03:33:34 UTC <fryguybob> byorgey: Here is what I have so far: http://hpaste.org/79262
2012-12-16 03:33:54 UTC <fryguybob> (shield your eyes)
2012-12-16 14:11:15 UTC <byorgey> fryguybob: ...what is it?
2012-12-16 14:12:42 UTC <fryguybob> byorgey: It finds the shortest path between two points in a grid that includes blocked cells.
2012-12-16 14:12:54 UTC <byorgey> ah, cool
2012-12-16 14:13:15 UTC <fryguybob> So circuit layout uses this for each wire.
2012-12-16 14:13:26 UTC <byorgey> -- TODO: ah yeah.
2012-12-16 14:13:43 UTC <fryguybob> You can also have a cost to any cell, but that doesn't work quit right yet.
2012-12-16 14:13:48 UTC <fryguybob> Yeah, that line got a little long.
2012-12-16 14:14:00 UTC <byorgey> hehe
2012-12-16 14:14:19 UTC <byorgey> fryguybob: is this for the same class you were designing the processor for?
2012-12-16 14:14:23 UTC <byorgey> or just for fun?
2012-12-16 14:14:28 UTC <fryguybob> for fun
2012-12-16 14:15:19 UTC <fryguybob> The next step is to let you define a diagram with some named points and give a diagram with those points wired together.
2012-12-16 14:20:46 UTC <fryguybob> It should be easy to generate all shortest paths, then pick the one that gives the fewest path segments.
2012-12-16 14:21:03 UTC <byorgey> ah! cool =)
2012-12-16 16:22:56 UTC <somadivad> Hi, is it possible to render an SVG diagram from within ghci, rather than having to runHaskell and pass in command line arguments?
2012-12-16 16:39:52 UTC <byorgey> somadivad: yes, it is possible
2012-12-16 16:40:07 UTC <somadivad> great - how?
2012-12-16 16:40:14 UTC <byorgey> hmm, I guess the diagrams-svg Haddocks need some improvement =P
2012-12-16 16:41:30 UTC <byorgey> somadivad: just a minute
2012-12-16 16:42:52 UTC <byorgey> somadivad: you can use the 'renderDia' function, which takes three arguments: the first must be SVG, the second is an SVGOptions record which takes a SizeSpec2D, the third is a diagram
2012-12-16 16:42:59 UTC <byorgey> like here: https://github.com/diagrams/diagrams-svg/blob/master/src/Diagrams/Backend/SVG/CmdLine.hs#L138
2012-12-16 16:43:20 UTC <byorgey> so maybe something like  renderDia SVG (SVGOptions (Width 400)) myDiagram
2012-12-16 16:44:05 UTC <byorgey> that will result in some sort of Builder value, and you can call renderSvg from Text.Blaze.Svg.Renderer.Utf8 on that
2012-12-16 16:44:19 UTC <byorgey> which gives you a ByteString, which you can write to a file
2012-12-16 16:44:29 UTC <byorgey> so I guess the answer is "yes, but not easily"
2012-12-16 16:45:23 UTC <byorgey> we should probably add a function of type   FilePath -> Diagram -> IO ()  which just writes a diagram directly to a file
2012-12-16 16:46:21 UTC <somadivad> yeah, that would be good. ok, well that's a few clues anyway, I'll have a play around. Thanks
2012-12-16 16:49:44 UTC <byorgey> https://github.com/diagrams/diagrams-svg/issues/28  -- just added this so I won't forget about it!
2012-12-16 16:50:04 UTC <byorgey> patches welcome too, of course, if you decide you want to take a stab at it yourself
2012-12-16 16:50:21 UTC <byorgey> I hope it shouldn't be too hard using that code I linked as an example
2012-12-16 17:30:32 UTC <somadivad> byorgey: The following seems to work:
2012-12-16 17:30:35 UTC <somadivad> BS.writeFile "circle1.svg" $ renderSvg (renderDia SVG (SVGOptions (mkSizeSpec (Just 400) (Just 500))) (circle 1 :: Diagram SVG R2))
2012-12-16 17:30:52 UTC <somadivad> I'm not sure why the type annotation was required on circle 1 though
2012-12-16 17:31:08 UTC <byorgey> yes, that looks like it should work
2012-12-16 17:31:26 UTC <byorgey> oh, yes, the type annotation... I forget why that is required
2012-12-16 17:32:19 UTC <somadivad> anyway thanks for your help - that sets me up to do what I want
2012-12-16 17:32:31 UTC <byorgey> great =)
2012-12-16 19:56:05 UTC <luite> hm edwardk has some travis script to fall back to hdiff when hackage is down
2012-12-16 19:57:30 UTC <luite> bleh does working with tikz ever get better? :)
2012-12-16 19:57:59 UTC <byorgey> dunno, I've never worked with tikz
2012-12-16 19:58:35 UTC <byorgey> hdiff fallback sounds cool
2012-12-17 03:03:15 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/permutations4.mp4
2012-12-17 03:16:09 UTC <fryguybob> oooOOOooo
2012-12-17 03:36:06 UTC <byorgey> made with subdiagrams and keyframing =D
2012-12-17 03:37:38 UTC <byorgey> and here's one that goes through all 24 permutations using only adjacent swaps: http://www.cis.upenn.edu/~byorgey/hosted/permutations4-sjt.mp4
2012-12-17 03:37:41 UTC <byorgey> using http://en.wikipedia.org/wiki/Steinhaus%E2%80%93Johnson%E2%80%93Trotter_algorithm
2012-12-17 03:38:13 UTC <fryguybob> Is that related to grey code?
2012-12-17 03:39:01 UTC <fryguybob> ACTION notices the wikipedia article has a section "Relation to Gray codes"
2012-12-17 03:39:11 UTC <byorgey> yes, I was just reading that =)
2012-12-17 03:42:37 UTC <fryguybob> Is the order of the first one the way that the usual Haskell permutations definition goes?
2012-12-17 03:42:56 UTC <byorgey> yes
2012-12-17 03:43:03 UTC <byorgey> I don't quite understand what order it uses
2012-12-17 03:43:20 UTC <byorgey> it's something a bit strange because it's designed to work for infinite lists too
2012-12-17 03:43:32 UTC <fryguybob> I remember wondering before it if maximized sharing.
2012-12-17 03:44:55 UTC <byorgey> I think it has the property that  permutations [1..n] == take (product [1..n]) . map (take n) $ permutations [1..]
2012-12-17 03:46:04 UTC <fryguybob> Yeah
2012-12-17 03:47:19 UTC <fryguybob> Gah, doesn't conal know it is hard to get things done when he writes interesting blog posts just as I'm about to finish :D
2012-12-17 03:47:50 UTC <byorgey> haha, did he write a blog post about circuit timing or something?
2012-12-17 03:48:44 UTC <fryguybob> Matrix multiplication this time.  But I'm on the verge of getting to the bottom of an STM bug so I can't look.
2012-12-17 03:50:32 UTC <byorgey> then you definitely shouldn't spend 120 seconds watching http://www.cis.upenn.edu/~byorgey/hosted/permutations5-sjt.mp4
2012-12-17 03:51:06 UTC <fryguybob> :D
2012-12-17 03:52:12 UTC <fryguybob> We discovered the stacking cups someone got for Judah and I opened them up and said "watch towers of hanoi".  Rebekah may have rolled her eyes at me.
2012-12-17 03:52:23 UTC <byorgey> haha, awesome =)
2012-12-17 03:52:39 UTC <fryguybob> (At least, she rolled her eyes at me when I went for four)
2012-12-17 03:53:00 UTC <byorgey> hmm, I think Noah has a set of like 12 stacking bath cups
2012-12-17 03:53:12 UTC <byorgey> should make for fun (and very long) bath time =)
2012-12-17 12:30:13 UTC <byorgey> I love watching all the dependencies of, say, diagrams-contrib get built.  For most of them I have no idea exactly why they are a transitive dependency.
2012-12-17 12:30:48 UTC <byorgey> But that's what makes it cool---we get to build on all this great code that other people wrote.
2012-12-17 12:31:44 UTC <alpounet> lens probably brings in a few packages yeah :p
2012-12-17 12:33:09 UTC <byorgey> hehe, yes, a few, but I think most of them were already dependencies anyway
2012-12-17 12:55:13 UTC <luite> what's a good way to do some simple syntax highlighting of haskell code in tikz nodes?
2012-12-17 12:56:04 UTC <shachaf> diagrams uses lens?
2012-12-17 12:56:13 UTC <byorgey> diagrams-contrib uses lens
2012-12-17 12:56:14 UTC <shachaf> Oh, diagrams-contrib does.
2012-12-17 12:56:31 UTC <shachaf> Lots of chaos in #-lens these days.
2012-12-17 12:56:31 UTC <byorgey> luite: no clue.
2012-12-17 12:56:52 UTC <byorgey> hmm? what's  #-lens ?
2012-12-17 12:56:53 UTC <luite> hm, maybe some lhs2tex and including a file
2012-12-17 12:58:04 UTC <luite> #-lens is everytime is read it i need to look up more things... costrength this time :p
2012-12-17 12:58:07 UTC <fryguybob> byorgey: #haskell-lens the channel with way too much going on to follow.
2012-12-17 12:59:55 UTC <byorgey> oh, I know what #haskell-lens is, I wasn't sure what #-lens meant, now I get it =)
2012-12-17 20:09:48 UTC <byorgey> hi conal =)
2012-12-17 20:10:24 UTC <conal> byorgey: hi! my first time here.
2012-12-17 20:10:30 UTC <byorgey> welcome!
2012-12-17 20:11:12 UTC <conal> :)
2012-12-17 20:11:32 UTC <conal> i'm starting on the tutorial now.
2012-12-17 20:12:08 UTC <conal> hurray for monoids!
2012-12-17 20:12:33 UTC <conal> and vector spaces.
2012-12-17 20:15:14 UTC <byorgey> =D
2012-12-18 01:40:20 UTC <cmears> byorgey: congratulations on the new release!
2012-12-18 01:41:44 UTC <fryguybob> Hi cmears
2012-12-18 01:41:56 UTC <cmears> Hi fryguybob
2012-12-18 01:45:02 UTC <cmears> hmm, what is one supposed to pass as the first argument to textVisualBounded?
2012-12-18 01:45:17 UTC <cmears> (in Diagrams.Backend.Cairo.Text)
2012-12-18 01:48:19 UTC <fryguybob> Humm, some attributes.
2012-12-18 01:52:39 UTC <fryguybob> cmears: There is a note about it at the top of http://projects.haskell.org/diagrams/doc/Diagrams-Backend-Cairo-Text.html#v:getExtents
2012-12-18 01:53:48 UTC <cmears> Ah, thanks
2012-12-18 01:53:55 UTC <cmears> I really should read more carefully
2012-12-18 01:54:00 UTC <fryguybob> hehe
2012-12-18 01:54:27 UTC <fryguybob> The style thing often throws me for a loop as my normal mode of digging for defintions leads me astray there.
2012-12-18 02:01:13 UTC <cmears> http://hpaste.org/79403
2012-12-18 02:01:14 UTC <cmears> gives
2012-12-18 02:01:22 UTC <cmears> http://imgur.com/peP7U
2012-12-18 02:01:29 UTC <cmears> so obviously I am misunderstanding something
2012-12-18 02:01:40 UTC <cmears> I thought the red box would go around the text
2012-12-18 02:42:09 UTC <fryguybob> cmears: I'm not sure why that doesn't work, I don't have a working Cairo, so I can't test it here :(
2012-12-18 02:44:50 UTC <cmears> Alas
2012-12-18 02:56:53 UTC <byorgey> cmears: that's very odd.
2012-12-18 02:56:58 UTC <byorgey> cmears: what happens if you don't set the font?
2012-12-18 02:57:38 UTC <byorgey> cmears: also, see https://github.com/diagrams/diagrams-cairo/issues/19, textLineBoundedIO at least is known to be buggy
2012-12-18 03:29:45 UTC <byorgey> testing
2012-12-18 03:41:55 UTC <cmears> looks essentially the same without the font specified
2012-12-18 03:45:12 UTC <cmears> but different font, of course (:
2012-12-18 03:45:39 UTC <cmears> and very slightly different alignment of the box and the text, probably because the font makes them have slightly different sizes
2012-12-18 03:49:24 UTC <byorgey> ok, yeah
2012-12-18 03:54:54 UTC <cmears> having "fontSize 1" makes it much better, but not perfect (like the example in the bug report)
2012-12-18 03:57:00 UTC <cmears> font "Times" seems to make the extent twice as tall
2012-12-18 03:57:17 UTC <cmears> just generally strange (:
2012-12-18 03:57:45 UTC <cmears> I have done some basic work on generating text via TeX and then including it in a diagram as an image
2012-12-18 03:58:00 UTC <byorgey> oh, nice
2012-12-18 03:58:20 UTC <byorgey> you can also do it the other way and use diagrams-tikz to embed diagram output in a TeX file
2012-12-18 03:58:59 UTC <cmears> Yes, I was doing that previously to get nice TeX labels in diagrams
2012-12-18 12:18:45 UTC <ClaudiusMaximus> something i made last year but only just uploaded http://mathr.co.uk/incidents/2012-12-18_packed_tracklisting.png
2012-12-18 12:20:21 UTC <ClaudiusMaximus> tempted to recreate it using diagrams (with a diagram for each glyph instead of text, because that's how the original did it)
2012-12-18 13:10:30 UTC <ClaudiusMaximus> ugh, powercut :(
2012-12-18 14:19:44 UTC <ClaudiusMaximus> i want to make a diagram with 4 circles with arrows between them along a larger circle that passes through all their centres - best way to do this?
2012-12-18 14:44:47 UTC <byorgey> ClaudiusMaximus: position the 4 circles using decoratePath, and give them names using 'named'
2012-12-18 14:44:54 UTC <byorgey> superimpose atop the larger circle
2012-12-18 14:45:00 UTC <byorgey> then use the names to draw arrows
2012-12-18 14:45:11 UTC <byorgey> (I can provide more detail on that last step if you like)
2012-12-18 14:45:16 UTC <ClaudiusMaximus> yes please
2012-12-18 14:45:25 UTC <byorgey> ok, just a minute
2012-12-18 14:45:34 UTC <ClaudiusMaximus> the arrows need to end at the circle boundary..
2012-12-18 14:45:46 UTC <ClaudiusMaximus> which is the main thing i wasn't sure on
2012-12-18 14:45:51 UTC <byorgey> right, you can do that using the trace
2012-12-18 14:46:10 UTC <byorgey> check out this example: http://projects.haskell.org/diagrams/manual/diagrams-manual.html#subdiagrams
2012-12-18 14:46:52 UTC <byorgey> we need to make some better convenience functions so you don't have to write code like   fromMaybe origin (traceP blah blah
2012-12-18 14:46:57 UTC <byorgey> but the functionality is all there.
2012-12-18 14:47:35 UTC <ClaudiusMaximus> cool, but would i still manually have to find the intersections of the larger circle with each smaller one?
2012-12-18 14:47:50 UTC <ClaudiusMaximus> and then sort them by angle to pick the right one?
2012-12-18 14:48:02 UTC <ClaudiusMaximus> i know how to do it, but i'm lazy
2012-12-18 14:48:18 UTC <byorgey> you would have to manually find intersections, yes
2012-12-18 14:48:23 UTC <ClaudiusMaximus> and all this reminds me i should port my konstrukt.svg to diagrams at some point
2012-12-18 14:48:29 UTC <byorgey> we don't yet have any code to compute path intersections
2012-12-18 14:48:48 UTC <ClaudiusMaximus> http://claudiusmaximus.goto10.org/cm/2010-11-09_konstrukt_3.html
2012-12-18 14:48:50 UTC <byorgey> ClaudiusMaximus: but I don't understand why you would have to sort by angle?  I'm not sure what you mean
2012-12-18 14:49:06 UTC <ClaudiusMaximus> circle-circle intersection results in 2 points
2012-12-18 14:49:11 UTC <byorgey> oh, cool =)
2012-12-18 14:49:59 UTC <ClaudiusMaximus> i need to have all the arrows going clockwise, for example, so i want the intersection on the anticlockwise side of the circle
2012-12-18 14:50:07 UTC <ClaudiusMaximus> and draw an arrowhead there
2012-12-18 14:51:09 UTC <ClaudiusMaximus> would be cool to have a humanize feature that strokes paths with slightly randomized position and thickness...
2012-12-18 14:51:29 UTC <ClaudiusMaximus> to make your diagrams look like they took a lot of human effort to render :)
2012-12-18 14:51:40 UTC <byorgey> hehe
2012-12-18 14:52:40 UTC <byorgey> that wouldn't be all that hard to implement actually
2012-12-18 14:53:39 UTC <ClaudiusMaximus> oo, can't wait :)
2012-12-18 14:54:13 UTC <ClaudiusMaximus> "patches welcome" heh
2012-12-18 14:54:19 UTC <ClaudiusMaximus> :)
2012-12-18 15:03:01 UTC <luite> :)
2012-12-18 15:17:04 UTC <byorgey> ClaudiusMaximus: dangit, this konstrukt thing is addictive =)
2012-12-18 15:26:39 UTC <ClaudiusMaximus> :)
2012-12-18 15:26:58 UTC <ClaudiusMaximus> the lack of undo is something that would be easier to fix if i port it to gtk/diagrams
2012-12-18 15:27:15 UTC <byorgey> yes, undo would be nice
2012-12-18 15:29:13 UTC <ClaudiusMaximus> and i'd probably make it use quad-double arithmetic so that you don't get as many annoying artifacts from rounding errors
2012-12-18 15:29:14 UTC <luite> what's konstrukt?
2012-12-18 15:29:27 UTC <ClaudiusMaximus> luite: see link i pasted
2012-12-18 15:30:42 UTC <luite> ah cool :)
2012-12-18 15:30:51 UTC <luite> i mean kool
2012-12-18 15:36:28 UTC <luite> usability kould be a bit better though
2012-12-18 15:39:46 UTC <luite> hm lhs2tex doesn't typeset @arg and Some# nicely
2012-12-18 15:40:48 UTC <byorgey> luite: if you escape?  \@arg and Some\# ?
2012-12-18 15:42:18 UTC <luite> hm that just shows the \ :)
2012-12-18 15:42:51 UTC <luite> if i have x = \ @a @b @c d e f -> there are no spaces between a b c
2012-12-18 15:43:26 UTC <byorgey> luite: oh, I just remembered you have to use @@
2012-12-18 15:43:30 UTC <luite> maybe i should use the uppercase lambda notation instead instead of the core one
2012-12-18 15:43:44 UTC <byorgey> @ means something special to lhs2TeX, I forget what
2012-12-18 15:44:07 UTC <luite> oh this is in a code block
2012-12-18 15:44:14 UTC <luite> @@ show two @
2012-12-18 15:44:17 UTC <byorgey> oh, ok
2012-12-18 15:44:25 UTC <luite> i'm trying to show what core haskell is tranlated to
2012-12-18 15:44:31 UTC <byorgey> right
2012-12-18 15:44:45 UTC <byorgey> well, you can manually insert some spaces
2012-12-18 15:44:46 UTC <luite> so you get the type variables explicitly, core uses @a etc, the math notation is uppercase lambda
2012-12-18 15:45:04 UTC <byorgey> %format ^ = " "  or something like that
2012-12-18 15:45:17 UTC <byorgey> oh, I see
2012-12-18 15:45:49 UTC <luite> i guess i'm abusing lhs2TeX for this since it's not really lhs anymore :)
2012-12-18 15:46:45 UTC <alpounet> luite, is this for a talk?
2012-12-18 15:46:53 UTC <luite> yeah
2012-12-18 15:47:22 UTC <byorgey> luite: hehe, right =)
2012-12-18 15:47:24 UTC <luite> i said i'd give an overview of the ghc pipeline and how ghcjs uses it
2012-12-18 15:49:06 UTC <alpounet> luite, at your uni? or a local user group?
2012-12-18 15:49:30 UTC <luite> not local
2012-12-18 15:50:03 UTC <luite> and i'm not on a uni anymore :(
2012-12-18 15:50:29 UTC <alpounet> oh right
2012-12-18 15:54:41 UTC <luite> byorgey: tnx, i did the %format trick with tv_a/tv_b/tv_c etc (for type variable)
2012-12-18 15:54:58 UTC <luite> and it renders them as properly spaced @a etc now
2012-12-18 15:55:03 UTC <byorgey> great!
2012-12-18 15:55:27 UTC <luite> alpounet: it's in budapest
2012-12-18 15:55:36 UTC <alpounet> you're in hungary now?
2012-12-18 15:55:46 UTC <luite> not yet, flying thursday
2012-12-18 15:56:06 UTC <alpounet> going there for a while or just for the talk and some lookaround?
2012-12-18 15:56:08 UTC <luite> and back home sunday
2012-12-18 15:56:19 UTC <luite> just talk :)
2012-12-18 15:56:30 UTC <alpounet> alright
2012-12-18 15:56:34 UTC <alpounet> enjoy the trip nonetheless :)
2012-12-18 15:56:52 UTC <luite> hehe i'll have a few days to see the city etc, have never been there
2012-12-18 16:01:24 UTC <alpounet> i heard it was beautiful from a friend, but never been either
2012-12-18 16:01:52 UTC <luite> i assume it will be cold :)
2012-12-18 16:02:04 UTC <luite> hmm, i want to go skiing :p
2012-12-18 16:02:44 UTC <fryguybob> We haven't had enough snow yet :(
2012-12-18 16:03:56 UTC <alpounet> we haven't had snow at all here :/
2012-12-18 16:04:25 UTC <luite> the lifts on the closest hills here are already open, but those are really flat terrain. have to go to the alps for proper skiing :)
2012-12-18 16:04:39 UTC <alpounet> if you go to the alps
2012-12-18 16:04:43 UTC <alpounet> drop by Marseille
2012-12-18 16:04:56 UTC <alpounet> (well, French side of the Alps)
2012-12-18 16:05:02 UTC <alpounet> it's a 3 hour drive
2012-12-18 16:05:15 UTC <luite> hehe that's not quite en route :p
2012-12-18 16:05:36 UTC <luite> the french alps are already further away than most of austria and switzerland
2012-12-18 16:06:20 UTC <luite> but sometimes you can go there relatively cheaply by bus
2012-12-18 16:06:32 UTC <alpounet> driving is funnier
2012-12-18 16:06:45 UTC <luite> i don't have my own car though
2012-12-18 16:06:53 UTC <alpounet> i think that if i ever go to Hungary, Czech Republic etc, I'll do it on a road trip
2012-12-18 16:07:32 UTC <alpounet> i need a whole clear month at the very least and quite a lot of money though :/
2012-12-18 16:07:35 UTC <luite> i've been to prague by car
2012-12-18 16:07:58 UTC <alpounet> must have been nice
2012-12-18 16:08:00 UTC <luite> but not really a road trip... more like a really long day of driving :)
2012-12-18 16:08:19 UTC <alpounet> and i've heard prague's night life is awesome
2012-12-18 16:08:30 UTC <alpounet> and that you have many beautiful stuffs to visit during the day
2012-12-18 16:09:34 UTC <luite> hmm, i still need to figure out what to visit in budapest :)
2012-12-18 16:13:47 UTC <byorgey> nah, just get a map when you arrive and start wandering around =)
2012-12-18 16:17:06 UTC <luite> dunno if i want to walk around that much, i bought new shoes last week and now i have lots of blisters
2012-12-18 16:22:52 UTC <byorgey> boo =(
2012-12-18 18:40:42 UTC <conal> I went through the diagrams tutorial yesterday and poked through parts of the library (haddock) documentation. I'm impressed. A lot of thought went into the design.
2012-12-18 18:41:32 UTC <byorgey> thanks =)
2012-12-18 18:41:55 UTC <conal> :)
2012-12-18 18:42:02 UTC <byorgey> that means a lot to me, coming from you
2012-12-18 18:42:59 UTC <conal> I saw a Functor instance for QDiagram but no Applicative instance. Is there one? Is there an obstacle?
2012-12-18 18:43:18 UTC <byorgey> conal: good question.
2012-12-18 18:43:41 UTC <byorgey> there was an obstacle.  But I don't remember what it was, or whether it still applies.
2012-12-18 18:43:59 UTC <conal> ah. okay.
2012-12-18 18:44:30 UTC <byorgey> I haven't ever found myself wanting one though.
2012-12-18 18:44:58 UTC <conal> the Monoid instance suggests one as a generalization.
2012-12-18 18:45:20 UTC <byorgey> indeed.
2012-12-18 18:46:08 UTC <conal> my other main question so far is the usual one: is there a semantic (denotational) model? if so, that model would suggest existence & meaning of various class instances.
2012-12-18 18:46:54 UTC <byorgey> right.  I don't think I have a clear denotational model for QDiagram in all its generality.
2012-12-18 18:47:44 UTC <conal> i'd expect the upward and downward annotations to disappear in the semantic model and reappear in the implementation as an efficiency measure.
2012-12-18 18:48:03 UTC <byorgey> indeed.
2012-12-18 18:48:50 UTC <conal> which would be good news, since users would then not have to think about the annotations.
2012-12-18 18:49:41 UTC <byorgey> my "Monoids" paper from the HS does exactly that: starts with a simple denotational model (lists of primitives) and then derives the upward and downward annotations, etc. from that.
2012-12-18 18:49:57 UTC <conal> oh, nice!
2012-12-18 18:50:08 UTC <conal> i guess i haven't finished that paper. thx for the reminder.
2012-12-18 18:50:46 UTC <conal> without a denotational discipline, it's easy for implementation issues to leak through, and people get attached to them. based on my painful past experience.
2012-12-18 18:50:57 UTC <conal> so hard to get programmers to stop thinking operationally.
2012-12-18 18:52:01 UTC <byorgey> oh look: https://github.com/diagrams/diagrams-core/blob/master/src/Diagrams/Core/Types.hs#L402  a commented-out Applicative instance!
2012-12-18 18:52:19 UTC <byorgey> that code corresponds to an old implementation though
2012-12-18 18:52:59 UTC <byorgey> I think the semantics of an Applicative instance are clear, but I was having trouble figuring out how to implement it.
2012-12-18 18:53:15 UTC <conal> oh, hm.
2012-12-18 18:53:17 UTC <byorgey> and since I've never wanted one I've never bothered to work it out.
2012-12-18 18:54:04 UTC <byorgey> note the type argument to QDiagram is the type of "queries", and most of the time it is Any.
2012-12-18 18:54:20 UTC <conal> oh, hm. i guessed i'd want one immediately if i used anything beyond monoidally-valued diagrams.
2012-12-18 18:54:44 UTC <conal> just as i made Image be polymorphic in Pan.
2012-12-18 18:54:58 UTC <conal> which was terrifically useful.
2012-12-18 18:55:24 UTC <conal> maybe different issues in diagrams, however.
2012-12-18 19:23:33 UTC <fryguybob> @hogsnack
2012-12-18 19:24:02 UTC <conal> it's just this sort of thing that got me back into linear algebra (on semirings) recently. i just published my first in a series of blog posts.
2012-12-18 19:24:41 UTC <fryguybob> :D
2012-12-18 19:25:43 UTC <conal> oops! i tried to copy the chat window contents and deleted/closed the window instead.
2012-12-18 19:26:09 UTC <conal> via M-w crossover from emacs. i've been bitten by that one before.
2012-12-18 19:27:14 UTC <conal> fryguybob: would you do me the kindness of emailing or private-message-pasting the transcript above from "fryguybob: byorgey: The hog died." ? there are a few goodies i want to capture.
2012-12-18 19:27:30 UTC <fryguybob> Yeah, no problem
2012-12-18 19:27:58 UTC <conal> thanks!
2012-12-18 19:28:48 UTC <conal> i bet there's some lovely functional parallelism to be extracted from these linear-algebra-in-disguise problems.
2012-12-18 19:30:27 UTC <fryguybob> Yes.
2012-12-18 19:31:37 UTC <conal> is the hog back? i still get a happstack error: "repo not found"
2012-12-18 19:32:48 UTC <fryguybob> Oh, the logs are here: https://github.com/diagrams/diagrams-doc/tree/master/logs
2012-12-18 19:33:09 UTC <byorgey> yeah, I'm trying to figure out how to modify the /topic
2012-12-18 19:34:06 UTC <fryguybob> byorgey:  /topic #diagrams ... ?
2012-12-18 19:34:21 UTC <byorgey> oh, indeed.
2012-12-18 19:34:35 UTC <conal> i can never remember how to do op things on irc.
2012-12-18 19:34:40 UTC <conal> fryguybob: thx.
2012-12-18 19:35:13 UTC <conal> byorgey: how did you set up this logging?
2012-12-18 19:35:55 UTC <conal> nice
2012-12-18 19:36:21 UTC <fryguybob> conal: btw, your occasional tweets with pictures of California remind me of home :D.  I grew up in Grass Valley.
2012-12-18 19:36:36 UTC <byorgey> conal: I use http://hackage.haskell.org/package/hog
2012-12-18 19:36:37 UTC <conal> fryguybob: oh, hey. :)
2012-12-18 19:36:48 UTC <conal> byorgey: cool. thx.
2012-12-18 19:37:15 UTC <byorgey> conal: unfortunately I don't have a good solution for making the logs immediately available.  I just occasionally record a commit with the updated logs and push it.
2012-12-18 19:37:42 UTC <conal> byorgey: got it. i was wondering.
2012-12-18 19:38:05 UTC <byorgey> but I'm always happy to do so on demand if you want to refer to something recent.
2012-12-18 19:38:34 UTC <byorgey> also, the log file is rather large at this point, which may become a problem...
2012-12-18 19:38:46 UTC <byorgey> but we'll cross that bridge when we come to it I suppose
2012-12-18 19:39:27 UTC <byorgey> looks like it's now 2.4MB
2012-12-18 19:39:33 UTC <byorgey> of text!
2012-12-18 19:39:35 UTC <conal> yeah
2012-12-18 19:42:23 UTC <conal> fryguybob: got your email (log snippet). exactly what i wanted. thanks a bunch.
2012-12-18 19:44:55 UTC <fryguybob> conal: no problem.
2012-12-18 19:45:03 UTC <conal> :)
2012-12-19 01:22:20 UTC <ClaudiusMaximus> ended up using konstrukt + gimp to make that diagram i was wanting earlier...  http://mathr.co.uk/lifecycles/
2012-12-19 01:23:57 UTC <byorgey> ACTION takes that as a challenge to reconstruct it using diagrams
2012-12-19 03:16:30 UTC <ClaudiusMaximus> i found a bug
2012-12-19 03:16:31 UTC <ClaudiusMaximus> newtype CircleFrac = CircleFrac { getCircleFrac :: Double } deriving (Read, Show, Eq, Ord, Enum, Floating, Fractional, Num, Real, RealFloat, RealFrac)
2012-12-19 03:17:14 UTC <ClaudiusMaximus> i think, anyway - the trig doesn't work out
2012-12-19 03:18:14 UTC <ClaudiusMaximus> nope, i was too eager and confused
2012-12-19 03:28:04 UTC <ClaudiusMaximus> err, i think i was right after all
2012-12-19 03:28:05 UTC <ClaudiusMaximus> sin (0.5 :: CircleFrac)
2012-12-19 03:28:05 UTC <ClaudiusMaximus> CircleFrac {getCircleFrac = 0.479425538604203}
2012-12-19 03:28:25 UTC <ClaudiusMaximus> when if trig was working properly it'd give 0
2012-12-19 03:28:36 UTC <ClaudiusMaximus> i go back to radians
2012-12-19 03:38:15 UTC <fryguybob> ClaudiusMaximus: Yeah those derived instances are not going to work with trig.
2012-12-19 03:39:47 UTC <fryguybob> But really we want the trig functions to change the type as well.
2012-12-19 03:40:29 UTC <fryguybob> Something like: sin :: (Angle a, Floating b) => a -> b
2012-12-19 03:41:58 UTC <ClaudiusMaximus> true
2012-12-19 03:42:21 UTC <ClaudiusMaximus> radians are the one true way anyway
2012-12-19 03:42:50 UTC <ClaudiusMaximus> at least for trig
2012-12-19 04:00:05 UTC <ClaudiusMaximus> http://mathr.co.uk/haskell/2012-12-19_wheee_diagrams.png only took 4 hours \o/  (mostly confused about paths/trails/etc)
2012-12-19 04:02:45 UTC <byorgey> oh, huh, I hadn't considered what happens when you do trig on CircleFrac =(
2012-12-19 04:03:17 UTC <byorgey> ClaudiusMaximus: oh, very cool =)
2012-12-19 04:04:13 UTC <ClaudiusMaximus> byorgey: much headscratching confusion when calculated arc end points don't match...
2012-12-19 04:04:32 UTC <ClaudiusMaximus> the code is also there, just s/png/hs/
2012-12-19 04:04:51 UTC <byorgey> heh
2012-12-19 04:05:30 UTC <byorgey> huh, neat how a recursive binary subdivision leads to *three* interleaved infinite binary trees
2012-12-19 04:05:38 UTC <byorgey> I mean, it makes sense looking at it
2012-12-19 04:05:40 UTC <byorgey> just a bit surprising
2012-12-19 04:10:08 UTC <byorgey> ClaudiusMaximus: want me to put that diagram in the gallery on the diagrams web page?
2012-12-19 04:11:09 UTC <byorgey> conal: thanks for the patch!
2012-12-19 04:11:21 UTC <byorgey> I'll be curious to see how you use it
2012-12-19 04:11:48 UTC <ClaudiusMaximus> well, i wanted to add a few more layers and use it as the banner on my website...
2012-12-19 04:11:48 UTC <conal> byorgey: i think you'll like it. nice & algebraic.
2012-12-19 04:12:01 UTC <byorgey> =)
2012-12-19 04:12:14 UTC <byorgey> ClaudiusMaximus: oh! well, by all means
2012-12-19 04:13:11 UTC <conal> byorgey: like so: http://en.wikipedia.org/wiki/Conjugation_%28group_theory%29
2012-12-19 04:13:39 UTC <byorgey> conal: yep, I know about conjugation
2012-12-19 04:13:46 UTC <conal> byorgey: ah. :)
2012-12-19 04:13:53 UTC <byorgey> I already like the new instance a lot!
2012-12-19 04:14:06 UTC <byorgey> just curious to see how you make use of it.
2012-12-19 04:14:46 UTC <byorgey> conal: in fact, see http://projects.haskell.org/diagrams/doc/Diagrams-Transform.html
2012-12-19 04:15:02 UTC <conal> oh!
2012-12-19 04:16:23 UTC <byorgey> don't worry, you couldn't have used that in implementing the instance anyway because the instance is in -core and that's in -lib =)
2012-12-19 04:16:37 UTC <conal> okay. i was wondering.
2012-12-19 04:17:25 UTC <byorgey> I guess 'under' is a restricted variant of your Transformable (a -> b) instance
2012-12-19 04:18:11 UTC <byorgey> hmm, except maybe the transformation goes the other way?
2012-12-19 04:19:07 UTC <byorgey> anyway. good stuff.  I'm off to bed and then to the airport early tomorrow.  Probably won't be on IRC much until after the 25th.
2012-12-19 04:19:11 UTC <conal> byorgey: i'm working on a library for composable circuit drawings. signals have spatial positions. a circuit drawing is a function from incoming signals to a picture and outgoing signals. (a writer arrow transformer applied to a function on signal structures.) when such a function gets applied, it adds wires from the incoming signals. i want to transform those functions, and i think conjugation is exactly the thing for the j
2012-12-19 04:19:49 UTC <conal> the whole thing will be an arrow.
2012-12-19 04:19:50 UTC <byorgey> conal: ah, I see, cool
2012-12-19 04:19:55 UTC <conal> yeah :)
2012-12-19 04:20:43 UTC <conal> and it'll tie into the linear algebra stuff i've been toying with.
2012-12-19 04:21:05 UTC <ClaudiusMaximus> merry xmas, byorgey!
2012-12-19 04:21:38 UTC <byorgey> ClaudiusMaximus: thanks, and to you as well!
2012-12-19 04:21:47 UTC <ClaudiusMaximus> :)
2012-12-19 20:57:40 UTC <luite> bleh
2012-12-19 20:58:03 UTC <luite> my presentation for tomorrow is unfinishd and i cna't concentrate :/
2012-12-19 21:17:36 UTC <alpounet> coffe!
2012-12-19 21:17:38 UTC <alpounet> +e
2012-12-19 21:19:29 UTC <luite> didn't really help, only made me more stressed
2012-12-19 21:25:30 UTC <luite> and i should probably get at least a few hours of sleep
2012-12-27 19:05:50 UTC <sleepyMonad> q
2012-12-27 19:06:20 UTC <sleepyMonad> oops
2012-12-28 21:47:45 UTC <jbracker> byorgey: I am currently trying to generalize the booleans of TwoD.Segment (last case of getTrace fpr FixedSegment). The problem is that filter is used there. Which causes some problems with the deep embedding. So I am trying to get rid of it by just mapping directly and then taking the minimum out of those values. Is there some maximum value they will not exceed  so that I can set them to that value and eliminate the need to filter
2012-12-28 21:48:24 UTC <jbracker> Line 113 in https://github.com/jbracker/diagrams-lib/blob/master/src/Diagrams/TwoD/Segment.hs
2012-12-28 21:50:35 UTC <byorgey> jbracker: no, there isn't
2012-12-28 21:50:47 UTC <jbracker> thought so
2012-12-28 21:50:58 UTC <byorgey> why does filter cause problems?
2012-12-28 21:51:41 UTC <jbracker> because you basically need to evaluate the boolean to know if something stays in the haskell list or not, but for example with JS you can't just do that because your generating code
2012-12-28 21:52:40 UTC <jbracker> filter does not just mingle the list into some computation like minimum for example it need to execute the boolean and return to haskell land afterwards
2012-12-28 21:56:55 UTC <byorgey> hmm
2012-12-28 21:59:47 UTC <byorgey> jbracker: can you do something like mapping to Maybe and then taking the minimum Just value?
2012-12-28 22:00:16 UTC <byorgey> I don't think I really understand the problem so I am not sure what is allowed and what isn't
2012-12-28 22:08:21 UTC <jbracker> well when using the predicate in filter we generate a boolean value
2012-12-28 22:09:07 UTC <jbracker> this boolean value can be some arbitrary piece of javascript that be cannot execute at this stage, we don't know if it is true or false while compiling it with haskell
2012-12-28 22:10:06 UTC <jbracker> so we cannot createh the list without the elements we want to filter because we don't know if the create boolean is true or false
2012-12-28 22:10:42 UTC <jbracker> I think the same problem would occure translating the value into Nothing or Just
2012-12-28 22:10:57 UTC <jbracker> you still would need to know wether we have a true or not
2012-12-28 22:11:46 UTC <jbracker> so basically: the list is on haskell level, the booleans are on javascript level, but we cannot execute javascript on haskell level
2012-12-28 22:15:56 UTC <jbracker> I think I got a solution: map (\x -> (p x, x)) (cubForm a b c d) :: [(BooleanOf a, a)]
2012-12-28 22:16:39 UTC <jbracker> with that I could write a special minimum function that ignores a value in the list if the predicate is not true
2012-12-28 22:20:44 UTC <byorgey> this still seems weird to me.
2012-12-28 22:21:14 UTC <byorgey> it seems to me you are trying to write the code in such a way that the definition of filter (essentially) gets inlined into the generated javascript code
2012-12-28 22:21:20 UTC <byorgey> because filter cannot be run on the Haskell level.
2012-12-28 22:21:39 UTC <jbracker> yes exactly
2012-12-28 22:21:45 UTC <byorgey> clearly I don't understand how the reifying works very well since I would have hoped that just happens automatically.
2012-12-28 22:22:14 UTC <byorgey> maybe filter should be a method of the Boolean type class?
2012-12-28 22:22:59 UTC <jbracker> I don't think that would change the basic problem that you want to handle a haskell list on javascript level
2012-12-28 22:24:20 UTC <jbracker> I think the only really good approach would be to generalize list so they can be represented on the javascript level
2012-12-28 22:24:32 UTC <byorgey> thinking a bit more broadly, OK, maybe we can rewrite this particular case in such a way that it will work.
2012-12-28 22:24:40 UTC <byorgey> but won't we run into issues like this in other places as well?
2012-12-28 22:24:53 UTC <ClaudiusMaximus> sounds vaguely like the accelerate arrays on GPU stuff?
2012-12-28 22:25:11 UTC <ClaudiusMaximus> maybe a similar approach could work, though i don't know what they did
2012-12-28 22:25:13 UTC <byorgey> I don't like the idea of having to write code in funny/contorted ways
2012-12-28 22:25:23 UTC <byorgey> it's harder to maintain and makes things even harder for potential contributors
2012-12-28 22:25:32 UTC <jbracker> that is true
2012-12-28 22:26:01 UTC <byorgey> jbracker: maybe can you write up a more detailed description of the issue and send it to the mailing list, or make a ticket on the bug tracker?
2012-12-28 22:26:23 UTC <byorgey> I still don't feel like I understand the problem that well, and also perhaps other people will have some good ideas
2012-12-28 22:26:31 UTC <jbracker> and I just noticed it does not work because it is pattern matching to see if the list is empty or not. And I don't see a way to get around that pattern match
2012-12-28 22:27:12 UTC <jbracker> ok I will do that
2012-12-28 22:27:35 UTC <byorgey> thanks
2013-01-06 20:49:21 UTC <luite> :)
2013-01-06 20:52:37 UTC <byorgey> =)
2013-01-07 09:53:18 UTC <mahrz> byorgey, the paste regarding the not drawn circles: http://hpaste.org/80420 generates a completely white pdf for me, switching to PNG however shows a black circle
2013-01-07 14:19:53 UTC <fryguybob> mahrz: Can you try going to Postscript (via Cairo), it should be the same code path as PDF (on the Cairo side for at lest part of it) and is a little easier to decypher then PDF.
2013-01-07 14:20:19 UTC <fryguybob> I don't have a working Cairo or I would try myself
2013-01-07 17:19:41 UTC <byorgey> mahrz: interesting, when I run that I get a quarter of a filled black circle in the upper left (as I would expect)
2013-01-07 17:20:13 UTC <byorgey> ok, it's system specs time!
2013-01-07 17:20:45 UTC <byorgey> I'm using GHC 7.6, cairo-0.12.4, and I'll have to check on the version of the actual cairo lib
2013-01-07 17:20:54 UTC <byorgey> I can test on other versions of GHC too, later
2013-01-07 17:21:01 UTC <byorgey> mahrz: what versions of stuff do you have?
2013-01-07 17:21:39 UTC <byorgey> mahrz: also, can you create a new issue at http://github.com/diagrams/diagrams-cairo/issues ?  I want to have a place to keep track of all of this
2013-01-07 19:16:56 UTC <mahrz> i'll do that tomorrow and let you know, i'm having a friend visiting this day, so I'm rarely at the pc :)
2013-01-07 19:26:00 UTC <byorgey> mahrz: ok, enjoy your friend's visit =)
2013-01-07 21:22:14 UTC <byorgey> sorry for the noise, dealing with the new semigroups release =)
2013-01-07 21:24:41 UTC <luite> the noise, it's unbearable!
2013-01-07 21:26:40 UTC <byorgey> hehe =)
2013-01-07 22:00:35 UTC <byorgey> whew, all done =)
2013-01-07 23:07:02 UTC <tgeeky_> a SEA OF VIOLET
2013-01-07 23:07:11 UTC <tgeeky_> assaults thine eyes
2013-01-07 23:17:04 UTC <luite> must be pink noise
2013-01-08 16:55:52 UTC <mahrz> ok, I filed a bug, specs, description and code are in there: https://github.com/diagrams/diagrams-cairo/issues/28
2013-01-08 16:57:04 UTC <byorgey> mahrz: awesome, thanks!
2013-01-08 16:57:19 UTC <byorgey> it is a very mysterious bug
2013-01-08 16:58:13 UTC <mahrz> it is indeed ... especially that PS works but PDF doesn't makes me suspect libcairo or the cairo bindings itself ...
2013-01-08 16:58:25 UTC <byorgey> yeah, me too
2013-01-08 16:58:37 UTC <byorgey> hopefully we can figure out which
2013-01-09 01:45:38 UTC <alpounet> byorgey, great post on species, this is a cool series of post :)
2013-01-09 02:38:37 UTC <byorgey> thanks alpounet! =)
2013-01-09 03:00:55 UTC <luite> ah looks like i have more reading to do :)
2013-01-09 23:59:37 UTC <peterjoel> hi, I know this has been asked before, and probably in the docs. But.. is there a shorter way to write a diagram's type?
2013-01-09 23:59:45 UTC <peterjoel> shape :: (HasStyle b, Transformable b, PathLike b, V b ~ R2) => b
2013-01-09 23:59:45 UTC <peterjoel> shape = circle 1 # fc red
2013-01-10 00:00:03 UTC <peterjoel> is it usually best to just omit the type annotation?
2013-01-10 02:38:32 UTC <fryguybob> ACTION waves hello from San Diego.
2013-01-10 02:41:25 UTC <luite> hello
2013-01-10 03:48:23 UTC <byorgey> peterjoel: I usually just omit the type, or give a more specific type
2013-01-10 03:48:46 UTC <byorgey> not necessarily ideal... it's a tricky problem
2013-01-10 20:24:32 UTC <pr> byorgey: happy birthday!
2013-01-10 20:52:47 UTC <byorgey> pr: thanks! =D
2013-01-10 21:36:38 UTC <pr> let's hope that numbergossip.com/YourAgeHere provides you with some interesting facts, hehe
2013-01-10 21:38:33 UTC <byorgey> apparently, it's the number of integers that cannot be expressed as the sum of distinct squares
2013-01-10 21:38:44 UTC <byorgey> and it's a Mersenne prime
2013-01-10 21:38:50 UTC <byorgey> =)
2013-01-10 21:39:53 UTC <pr> mersenne prime, lovely!
2013-01-10 21:44:00 UTC <byorgey> That's a dead giveaway I guess (not that I mind revealing my age =)
2013-01-10 21:44:27 UTC <byorgey> don't think I'll survive to the next Mersenne prime.
2013-01-10 21:47:20 UTC <pr> yeah, probably not
2013-01-10 21:49:29 UTC <pr> but sophie germain primes are cool, too! so you have something to look forward to :)
2013-01-10 21:50:22 UTC <carter> oh yeah, happy bday byorgey
2013-01-10 21:50:34 UTC <byorgey> thanks carter!
2013-01-10 21:51:06 UTC <byorgey> pr: good point!
2013-01-10 21:52:25 UTC <alpounet> happy birthday byorgey !
2013-01-10 21:52:42 UTC <byorgey> thanks alpounet!
2013-01-10 22:36:53 UTC <luite> congrats byorgey :)
2013-01-11 00:01:43 UTC <ClaudiusMaximus> happy b;day
2013-01-11 00:03:28 UTC <ClaudiusMaximus> working on diagrams to explain my tessellation/colouring code https://gitorious.org/maximus/butterflies/blobs/master/flat/diagram.hs - the area of the red triangle divided by the area of the green grid triangles equals the number of vertices in the purple rhombus - i don't know why that is so, but it is
2013-01-11 00:04:07 UTC <ClaudiusMaximus> code is really horrible, generates a huge grid then trims the edges off (which gives huge SVG files and is slow)
2013-01-11 00:05:27 UTC <ClaudiusMaximus> oops, parallelogram not rhombus
2013-01-11 00:05:43 UTC <ClaudiusMaximus> anyway, abed
2013-01-11 16:47:23 UTC <ClaudiusMaximus> updated and pushed my tessellation/colouring diagram code (it's still horrible though..), now to write a blog post :)
2013-01-11 18:36:01 UTC <ClaudiusMaximus> http://mathr.co.uk/blog/2013-01-11_butterfly_variations.html  text is rambling and unclear, but the diagrams turned out nice
2013-01-11 18:37:07 UTC <luite> and that's what matters!
2013-01-11 18:37:31 UTC <ClaudiusMaximus> :)
2013-01-11 18:40:34 UTC <ClaudiusMaximus> could still be improved (mainly by tweaking the line styles to be monochrome printer friendly)
2013-01-11 18:41:25 UTC <luite> do people still print? :p
2013-01-11 18:43:58 UTC <byorgey> ooooh, pretty!!
2013-01-11 18:45:03 UTC <ClaudiusMaximus> luite: it's on my mind, since i today inherited my dad's old printer (he got a new computer and new windows doesn't support old printer, works fine with cups though)
2013-01-11 18:45:16 UTC <ClaudiusMaximus> thanks :)
2013-01-11 18:45:30 UTC <luite> hm i hardly print anymore :)
2013-01-11 18:46:13 UTC <ClaudiusMaximus> i tend to print out a couple of papers when i have a trip planned to read while travelling
2013-01-11 18:46:32 UTC <ClaudiusMaximus> before i had to beg favours, not having my own printer
2013-01-11 18:46:33 UTC <luite> tablet!
2013-01-11 18:47:01 UTC <ClaudiusMaximus> i don't even have a mobile phone :P
2013-01-11 18:47:11 UTC <luite> makes life much easier for chaotic people like me, no more huge piles of printed papers ;p
2013-01-11 18:47:43 UTC <luite> hm running the ghcjs test suite really drains my battery :/
2013-01-11 18:47:54 UTC <luite> in better news, ghcjs has a working test suite now!
2013-01-11 18:48:12 UTC <ClaudiusMaximus> :)
2013-01-11 18:48:23 UTC <byorgey> ACTION prints stuff a lot
2013-01-11 18:48:25 UTC <luite> that tests with the v8 and spidermonkey javascript engines
2013-01-11 18:48:31 UTC <byorgey> luite: yay!
2013-01-11 18:48:52 UTC <luite> byorgey: yeah the main problem with tablet is that you can't easily write notes and other stuff on the papers
2013-01-11 18:48:55 UTC <luite> for me
2013-01-11 18:49:00 UTC <byorgey> yep
2013-01-11 18:49:12 UTC <byorgey> that's the main reason I print stuff
2013-01-11 18:49:29 UTC <byorgey> also I want to be able to read without the distraction of potential internet =)
2013-01-11 18:49:40 UTC <luite> hehe
2013-01-11 18:50:33 UTC <luite> i used to have that, because my access point would sometimes not let my ipad connect
2013-01-11 18:50:56 UTC <luite> but it develoed more problems so i had to replace it, now there's always potential internet :/
2013-01-11 21:57:26 UTC <luite> alpounet: i should mention ghcjs more often, people only know fay :/ :p
2013-01-13 17:55:32 UTC <byorgey> roadfish: not in general.  There is an (incomplete) one for this channel at https://github.com/diagrams/diagrams-doc/blob/master/logs/diagrams
2013-01-13 17:55:48 UTC <byorgey> but the logger bot is unreliable and I don't have a good way to be notified when it dies
2013-01-13 18:02:08 UTC <roadfish> ok, I though that URL was for diagram documentation
2013-01-13 18:02:41 UTC <byorgey> roadfish: that's the repository for diagrams documentation, yes.  But we have all sorts of stuff in there, including IRC logs
2013-01-13 18:04:41 UTC <roadfish> mostly I was curious if you had any comments on what I did after you went to bed
2013-01-13 18:04:49 UTC <roadfish> on my assorted babbling
2013-01-13 18:05:35 UTC <roadfish> I'm trying to make a little C program that will create a simple cario object and then output. My C is a tad rusty ... but it's coming back.
2013-01-13 18:08:30 UTC <byorgey> roadfish: oh, ok.  I did read your comments, but hadn't responded
2013-01-13 18:08:38 UTC <byorgey> roadfish: can you explain a bit more what you are trying to do?
2013-01-13 18:09:49 UTC <roadfish> at this point, I need to write some FFI to output the stdout instead of a file. I've seen webpages talking about cairo outputing to stdout. But this isn't availabe in the Haskell cairo package.
2013-01-13 18:10:10 UTC <byorgey> right, but I mean, what is your larger goal?  Why do you want to output to stdout?
2013-01-13 18:10:14 UTC <roadfish> I'm still pretty new to Haskell. So mostly I'm treating this as a big learning exercise.
2013-01-13 18:10:35 UTC <byorgey> sure, I'm all for learning exercises =)
2013-01-13 18:10:42 UTC <roadfish> I want to write a Haskell program that will take keystrokes fed from an emacs program.
2013-01-13 18:11:28 UTC <roadfish> The Haskell program will run continuously to interpret the keystrokes. It will build various objects and then output a fresh png image.
2013-01-13 18:11:43 UTC <roadfish> then, on the emacs side, I will keep replacing the displayed image.
2013-01-13 18:11:53 UTC <byorgey> sounds cool!
2013-01-13 18:12:03 UTC <byorgey> but I don't see why you need to output the PNG to stdout
2013-01-13 18:12:15 UTC <roadfish> of course, using some intermediate file is feasible ... but I'm just being finicky.
2013-01-13 18:12:18 UTC <byorgey> wouldn't it work just as well to create a file somewhere in /tmp and tell emacs where to look for it?
2013-01-13 18:12:24 UTC <byorgey> OK, fair enough =)
2013-01-13 18:13:08 UTC <roadfish> yes, outputing to /tmp isn't a showstopper. but I want to see how far I can push things.
2013-01-13 18:13:18 UTC <byorgey> OK, sure, go for it =)
2013-01-13 18:13:40 UTC <roadfish> you folks have really built up something amazing with this diagrams module
2013-01-13 18:13:48 UTC <byorgey> roadfish: thanks =)
2013-01-13 18:14:02 UTC <roadfish> lots of power in Haskell and lots of power in cairo ... and now you've liberated/unified all this power
2013-01-13 18:14:24 UTC <byorgey> roadfish: how hard would it be to add a binding for  write_to_png_stream  to the cairo package?
2013-01-13 18:14:30 UTC <byorgey> that seems like the way to go if that works
2013-01-13 18:14:35 UTC <roadfish> I was really impressed when I saw. http://projects.haskell.org/diagrams/manual/diagrams-manual.html
2013-01-13 18:14:55 UTC <byorgey> excellent!  I have spent a LOT of time on that =)
2013-01-13 18:15:03 UTC <roadfish> right, adding to cairo is the cleanest solution.
2013-01-13 18:15:34 UTC <roadfish> but I don't know about the politics of making a request. who are the cairo people and do the add stuff.
2013-01-13 18:15:56 UTC <roadfish> for now, I was just going to do this stuff on my own and then maybe offer up if anyone is interested.
2013-01-13 18:16:02 UTC <byorgey> roadfish: the maintainer is my officemate =)
2013-01-13 18:16:18 UTC <roadfish> so a sharp elbow would get the job done
2013-01-13 18:16:48 UTC <byorgey> if you sent a working patch adding a binding to a new function I'm sure he would be happy to merge it
2013-01-13 18:17:06 UTC <roadfish> I saw the same Paolo Martini in PNG.chs. Or is this somewone else?
2013-01-13 18:17:13 UTC <roadfish> s/same/name
2013-01-13 18:17:25 UTC <byorgey> I don't think Paolo works on it anymore
2013-01-13 18:17:39 UTC <byorgey> the current maintainer is Daniel Wagner, he goes by dmwit in #haskell
2013-01-13 22:22:51 UTC <alpounet> byorgey, dimwit is your officemate? really?
2013-01-13 22:22:54 UTC <alpounet> dmwit*
2013-01-13 22:23:29 UTC <alpounet> you guys probably end up chatting about many random stuffs all the time, he seems to be a pretty funny guy too
2013-01-14 03:06:22 UTC <byorgey> alpounet: yep, he is, and yes, we do
2013-01-14 03:06:25 UTC <byorgey> he's great =)
2013-01-14 03:08:14 UTC <alpounet> heh
2013-01-14 03:08:34 UTC <alpounet> alright, ready for my train tomorrow. i have 5 hours to fill with some intense reading
2013-01-14 03:08:51 UTC <byorgey> ooh, nice
2013-01-14 03:08:54 UTC <alpounet> a few funny CT stuffs, some AI too, i think i'm good to go
2013-01-14 03:09:42 UTC <alpounet> my brain will most likely be dead when leaving the train though.
2013-01-14 03:12:21 UTC <byorgey> just don't forget any of your belongings
2013-01-14 03:16:55 UTC <alpounet> i guess i'll tie them to my wrists or smth like that
2013-01-14 03:20:19 UTC <roadfish> I had a question about the Cairo Haskell package so I sent a message to its maintainer which is "gtk2hs-users@lists.sourceforge.net"
2013-01-14 03:20:23 UTC <alpounet> but yeah i've been thinking over and over again about this "category theory in machine learning" post i saw on the n-cat cafÃ©
2013-01-14 03:20:28 UTC <alpounet> ( http://golem.ph.utexas.edu/category/2007/09/category_theory_in_machine_lea.html )
2013-01-14 03:22:14 UTC <roadfish> I checked for my posting but it hasn't shown up yet at http://sourceforge.net/mailarchive/forum.php?forum=gtk2hs-users
2013-01-14 03:22:41 UTC <roadfish> Do you folks use sourceforge.net mailing lists? Do they take a while to process?
2013-01-14 04:06:16 UTC <fryguybob> ACTION is back home.  Finally!
2013-01-14 14:58:50 UTC <byorgey> fryguybob: hooray!
2013-01-15 17:45:46 UTC <fryguybob> byorgey: I didn't get to go to much at the math conference (there was a nice math art section in the exhibit hall, but I only briefly could look for some inspiration for diagrams) but I did get to go to two talks both teaching oriented.
2013-01-15 17:46:47 UTC <fryguybob> byorgey: I don't know if you know Francis Su, but he one a teaching award this year and give this excellent talk: https://www.facebook.com/notes/francis-su/the-lesson-of-grace-in-teaching/10151372450043217
2013-01-15 18:22:27 UTC <fryguybob> (/one/won/ somehow when I'm typing with Judah in one hand I lose the little spelling ability I have.)
2013-01-15 18:36:01 UTC <luite> i received a math picture book today, hopefully gives me some inspiration :)
2013-01-15 18:36:21 UTC <luite> http://www.bilder-der-mathematik.de/
2013-01-15 18:37:23 UTC <luite> looks like mostly fairly standard examples, but with nice pictures
2013-01-15 18:52:13 UTC <ClaudiusMaximus> this has nice pictures too.. http://images.math.cnrs.fr/Ringworld.html
2013-01-15 18:52:22 UTC <conal> in case you folks haven't seen it: http://www.bridgesmathart.org/ . i attended this conference several years ago in seattle.
2013-01-15 18:53:43 UTC <luite> oh its in the netherlands
2013-01-15 18:53:54 UTC <luite> in enschede, i did my undergrad there :)
2013-01-15 19:05:50 UTC <fryguybob> Nice links!
2013-01-15 19:06:55 UTC <luite> that conference looks interesting, i can take the train every day probably :)
2013-01-15 19:11:37 UTC <fryguybob> Here are the ones I kind of saw: http://gallery.bridgesmathart.org/exhibitions/2013-Joint-Mathematics-Meetings
2013-01-15 19:19:50 UTC <conal> wow -- gorgeous.
2013-01-15 19:27:49 UTC <fryguybob> Of the ones I saw I thought these two would be interesting diagrams: http://gallery.bridgesmathart.org/exhibitions/2013-joint-mathematics-meetings/jlm-phi
2013-01-15 19:47:18 UTC <byorgey> wow, cool stuff everyone!
2013-01-15 19:47:41 UTC <byorgey> but why oh why did you share all these links *today* when I really need to be working on my thesis proposal =P
2013-01-15 19:47:44 UTC <luite> fryguybob: oh cool :)
2013-01-15 19:47:54 UTC <luite> hmm, i hope i'll have time to go this summer
2013-01-15 19:49:08 UTC <luite> teh $160 registration fee isn't too outrageous :)
2013-01-15 19:55:08 UTC <fryguybob> byorgey: Hehe
2013-01-17 02:31:49 UTC <ClaudiusMaximus> hm, is this a bug?  mconcat [ ...huge list of Diagram SVG R2 ... ]  -> stack overflow crash; splitting it up into chunks like  (mconcat . map mconcat) [ ...less huge list of less huge lists of Diagram SVG R2... ] seems to work fine
2013-01-17 03:18:55 UTC <byorgey> ClaudiusMaximus: hmm, I wouldn't expect there to be a difference
2013-01-17 03:19:02 UTC <byorgey> feel free to file a bug report
2013-01-18 00:32:07 UTC <fryguybob> oooOOOooo improvements.
2013-01-18 03:57:12 UTC <byorgey> yep.  I made it so you can use other backends than just cairo, and also some minor stuff like creating a directory if it doesn't exist, etc.
2013-01-18 03:57:49 UTC <byorgey> tomorrow I think I might start in on factoring out a bunch of the repeated backend stuff into a generic backend-tools package.
2013-01-18 19:10:44 UTC <jbracker> @byorgey: Is there something like a decomposable monoid class? Like "Comonoid" or something that gives you the ability to take apart what your monoid put together?
2013-01-18 19:29:42 UTC <byorgey> jbracker: I don't know of one.
2013-01-18 19:29:59 UTC <byorgey> jbracker: if you really do have a monoid then you have associativity, which makes taking apart problematic
2013-01-18 19:30:22 UTC <byorgey> (a <> b) <> c == a <> (b <> c)  so if you decompose  a <> b <> c   what do you get?
2013-01-18 19:30:48 UTC <jbracker> well you could do something like deconsl and decondr
2013-01-18 19:30:53 UTC <jbracker> deconsr
2013-01-18 19:31:01 UTC <byorgey> unless you don't care about getting back exactly what you put in, i.e. you're OK with just getting back some  x <> y  such that neither is mempty
2013-01-18 19:31:21 UTC <byorgey> sure
2013-01-18 19:31:40 UTC <byorgey> interesting
2013-01-18 19:31:44 UTC <byorgey> jbracker: what's the use case?
2013-01-18 19:32:44 UTC <jbracker> I am just thinking of ways to get rid of problem with returning lists in the deep embedding. So a nice  generalization of lists. As monoids are a good was of constructing list like things I would just need something to work with them, by giving the ability of taking them apart
2013-01-18 19:33:47 UTC <jbracker> and I just noticed monoid does not provide construction of singletons, which would be important for a deep embedding
2013-01-18 19:40:48 UTC <jbracker> byorgey: just dont want to reinvent the wheel
2013-02-12 01:44:50 UTC <mgsloan> byorgey: Yeah, I've been pretty darn busy the last few months.  Hoping to spare some cycles for opensource Haskell projects soon
2013-02-12 01:45:03 UTC <byorgey> cool
2013-02-12 01:45:14 UTC <shachaf> byorgey: You can give the user a nicer name, like diagramsbot
2013-02-12 01:45:26 UTC <byorgey> yep, just going to go configure that
2013-02-12 01:46:03 UTC <fryguybob> byorgey: I noticed there is a test button on the irc bot on github, I think if you push that it resends the last message.
2013-02-12 01:47:46 UTC <shachaf> Better yet, test github notifications by editing .travis.yml
2013-02-12 01:48:04 UTC <shachaf> That way you get extra notifications.
2013-02-12 01:48:23 UTC <hpaste> mgsloan pasted âdiagrams-lens-WIPâ at http://hpaste.org/82190
2013-02-12 01:49:33 UTC <mgsloan> I've been thinking that zipper-izing DUAL tree could be pretty powerful
2013-02-12 01:49:47 UTC <mgsloan> might be able to get incremental re-rendering of diagrams
2013-02-12 01:50:19 UTC <mgsloan> shachaf: have you read byorgey's monoid pearl?  Might get you interested in it from the theory end of things :)
2013-02-12 01:50:42 UTC <shachaf> mgsloan: I have!
2013-02-12 01:50:54 UTC <shachaf> I like the general idea of diagrams, I just don't have much to diagram.
2013-02-12 01:54:44 UTC <mgsloan> I need to get that type-diagrams project restarted!  Then you can help try to make lens types intuitively understandable
2013-02-12 01:55:10 UTC <mgsloan> lens is my new holy grail of type explanations.  If you can explain lens, you can explain anything
2013-02-12 02:05:20 UTC <byorgey> aha, no wonder it wasn't working before, someone else is using the nick 'diabot' already =P
2013-02-12 02:06:36 UTC <fryguybob> Now we have no excuse to commit like crazy.
2013-02-12 02:06:44 UTC <fryguybob> (not to)
2013-02-12 02:08:57 UTC <byorgey> go go go!
2013-02-12 02:10:44 UTC <byorgey> well, I have to go through and update the settings for all the diagrams repos first =P
2013-02-12 02:23:45 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 144eda1a2 http://travis-ci.org/diagrams/diagrams-core/builds/4736591 The build passed.
2013-02-12 02:23:58 UTC <byorgey> sweet, it works =)
2013-02-12 02:25:23 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 141bff75b http://travis-ci.org/diagrams/diagrams-core/builds/4736622 The build passed.
2013-02-12 02:25:38 UTC <fryguybob> The build did not errored
2013-02-12 02:25:46 UTC <byorgey> hehehe
2013-02-12 02:26:11 UTC <luite> :)
2013-02-12 02:48:31 UTC <tgeeky> anythign that adds more purple to this chatroom
2013-02-12 02:48:33 UTC <tgeeky> is a plus in my mind
2013-02-12 03:05:25 UTC <cmears> Hello diagrammers
2013-02-12 03:05:34 UTC <cmears> Has anyone looked at using pango for text in the Cairo backend?
2013-02-12 03:05:42 UTC <cmears> (to get nice kerning, for example)
2013-02-12 03:09:19 UTC <fryguybob> cmears: We looked at it a bit.  The current Cairo api that we use is not very robust at all.  On Windows it doesn't even work.
2013-02-12 03:09:48 UTC <fryguybob> The details might be in an issue somewhere...
2013-02-12 03:13:46 UTC <fryguybob> I'm not seeing any particular mention, but we do need to revisit text and figure out what we really want.
2013-02-12 03:20:20 UTC <cmears> There is an issue about Cairo text not working on Windows
2013-02-12 03:20:59 UTC <cmears> But I didn't see anything about Pango
2013-02-12 03:21:13 UTC <cmears> (but I didn't look very hard)
2013-02-12 03:21:23 UTC <byorgey> there are no tickets about Pango.
2013-02-12 03:21:43 UTC <byorgey> I think we're currently more at the stage of "make a page on the wiki and brainstorm" then we are at "open a ticket"
2013-02-12 03:21:50 UTC <byorgey> I wouldn't even know what the ticket should say.
2013-02-12 03:23:11 UTC <cmears> "let's use pango"
2013-02-12 03:23:48 UTC <byorgey> hehe =)
2013-02-12 03:24:03 UTC <byorgey> also, hiya cmears, long time no see =)
2013-02-12 03:24:12 UTC <cmears> Is it the "toy text API" in Cairo that is broken in Windows
2013-02-12 03:24:24 UTC <byorgey> yes, I think so
2013-02-12 03:24:28 UTC <cmears> So that using pango would fix that problem, as well as being better in general?
2013-02-12 03:24:36 UTC <byorgey> perhaps?
2013-02-12 03:24:45 UTC <cmears> Cool (:
2013-02-12 03:24:52 UTC <cmears> And hello, nice to be around again
2013-02-12 03:24:53 UTC <byorgey> anyway, I have to go to bed
2013-02-12 03:24:59 UTC <byorgey> =)
2013-02-12 03:25:03 UTC <byorgey> make a pango page on the wiki!
2013-02-12 03:25:11 UTC <cmears> OK (:
2013-02-12 03:25:20 UTC <tgeeky> don't quite do that -- the problem isn't the lack of pango
2013-02-12 03:25:25 UTC <tgeeky> it's the lack of text support :o
2013-02-12 03:33:18 UTC <fryguybob> cmears: Yes pango should fix that.
2013-02-12 16:28:22 UTC <byorgey> pardon the imminent flood
2013-02-12 16:30:05 UTC <travis-ci> [travis-ci] 13vector-space-points/06master 144dc929a http://travis-ci.org/diagrams/vector-space-points/builds/4748420 The build passed.
2013-02-12 16:30:13 UTC <fryguybob> Oooo
2013-02-12 16:30:15 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 14a1a5987 http://travis-ci.org/diagrams/diagrams-core/builds/4748416 The build passed.
2013-02-12 16:32:05 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14b5e515e http://travis-ci.org/diagrams/diagrams-lib/builds/4748437 The build passed.
2013-02-12 16:33:35 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 1403abc8b http://travis-ci.org/diagrams/diagrams-svg/builds/4748486 The build passed.
2013-02-12 16:33:45 UTC <travis-ci> [travis-ci] 13active/06master 14e7c18ad http://travis-ci.org/diagrams/active/builds/4748422 The build passed.
2013-02-12 16:34:17 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06master 142597664 http://travis-ci.org/diagrams/diagrams-cairo/builds/4748488 The build passed.
2013-02-12 16:34:27 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14693ae18 http://travis-ci.org/diagrams/diagrams-postscript/builds/4748492 The build passed.
2013-02-12 16:36:33 UTC <travis-ci> [travis-ci] 13diagrams/06master 148c4f9ca http://travis-ci.org/diagrams/diagrams/builds/4748406 The build passed.
2013-02-12 16:37:43 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1411acdda http://travis-ci.org/diagrams/diagrams-core/builds/4748552 The build passed.
2013-02-12 16:44:34 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 140d16a64 http://travis-ci.org/diagrams/diagrams-builder/builds/4748496 The build passed.
2013-02-12 16:45:07 UTC <travis-ci> [travis-ci] 13diagrams-gtk/06master 145cb4988 http://travis-ci.org/diagrams/diagrams-gtk/builds/4748500 The build passed.
2013-02-12 17:44:31 UTC <tgeeky> oh baby
2013-02-12 17:45:13 UTC <tgeeky> s/active/diagrams-dxdt/
2013-02-12 17:48:11 UTC <tgeeky> pretty neat and simple system for travis IRC notifications
2013-02-12 19:19:58 UTC <tgeeky> any commit that begins with 'oops', is a good commit.
2013-02-12 19:21:04 UTC <travis-ci> [travis-ci] 13diagrams-povray/06master 14f58fcbc http://travis-ci.org/diagrams/diagrams-povray/builds/4752247 The build has errored.
2013-02-12 19:21:19 UTC <byorgey> =)
2013-02-12 19:24:33 UTC <byorgey> just procrastinating from writing my thesis proposal
2013-02-12 19:27:57 UTC <travis-ci> [travis-ci] 13diagrams-povray/06master 14c69b7b8 http://travis-ci.org/diagrams/diagrams-povray/builds/4752419 The build passed.
2013-02-12 19:28:06 UTC <byorgey> =D
2013-02-12 20:04:24 UTC <byorgey> ACTION is at a loss as to why the diagrams-contrib build is failing
2013-02-12 20:05:06 UTC <byorgey> when it gets to installing diagrams-contrib itself the build plan downgrades transformers to 0.2, and then it fails since that would break some packages
2013-02-12 20:05:19 UTC <byorgey> but that doesn't happen when I build it locally
2013-02-12 20:07:27 UTC <alpounet> byorgey, maybe some library you already have around takes over one of the suggested dependencies for some reason
2013-02-12 20:07:54 UTC <byorgey> no, I tried building it with cabal-dev starting from scratch
2013-02-12 20:08:43 UTC <alpounet> meh
2013-02-12 20:08:48 UTC <alpounet> annoying, and hard to diagnose
2013-02-12 20:09:43 UTC <byorgey> let's see if this helps
2013-02-12 20:12:48 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14067691f http://travis-ci.org/diagrams/diagrams-contrib/builds/4753336 The build has errored.
2013-02-12 20:13:16 UTC <alpounet> byorgey, i also did setup travis & github notifications for all my serious projects, and i get everything it's #hnn - i've got to admit this is really handy
2013-02-12 20:14:18 UTC <alpounet> s/it's/in/
2013-02-12 20:49:29 UTC <byorgey> alpounet: indeed
2013-02-12 20:49:58 UTC <byorgey> it's also fun & seems to encourage more collaboration + contribution, since anyone in the channel can see there's development going on
2013-02-12 20:52:58 UTC <alpounet> yeah
2013-02-12 20:53:10 UTC <alpounet> byorgey, have you solved your diagrams-contrib build failure?
2013-02-12 20:53:26 UTC <byorgey> not yet, I'm currently staring at the -v3 output
2013-02-12 20:53:41 UTC <byorgey> trying to figure out what the constraint solver was doing
2013-02-12 20:54:54 UTC <alpounet> hmm, it did pick transformers 0.3 this time apparently
2013-02-12 20:55:34 UTC <byorgey> hmm?  no it didn't
2013-02-12 20:55:40 UTC <alpounet> oh wait no, it was for diagrams-lib
2013-02-12 20:56:02 UTC <byorgey> right
2013-02-12 20:56:13 UTC <ClaudiusMaximus> to me it looks like regex-base depends on wrong mtl version, maybe?
2013-02-12 20:56:25 UTC <ClaudiusMaximus> but i'm not used to staring at cabal -v3
2013-02-12 20:58:04 UTC <byorgey> yeah, it looks like somehow an old mtl version is installed, and regex-base depends on it
2013-02-12 20:58:15 UTC <byorgey> I don't know why such an old version of mtl is installed
2013-02-12 20:59:35 UTC <ClaudiusMaximus> is there a "cabal why" similar to aptitude's ?
2013-02-12 20:59:47 UTC <ClaudiusMaximus> maybe you could try removing it and seeing what would break, i guess..
2013-02-12 20:59:56 UTC <ClaudiusMaximus> but i don't know how travis-ci works
2013-02-12 21:00:03 UTC <byorgey> http://about.travis-ci.org/docs/user/languages/haskell/ says the environment is HP 2012.2.0.0, which comes with mtl-2.1.1
2013-02-12 21:01:17 UTC <byorgey> and transformers-0.3
2013-02-12 21:01:32 UTC <byorgey> but the cabal -v3 output says stuff about mtl-2.0.1.0/installed-db1 and transformers==0.2.2.0/installed-367
2013-02-12 21:08:03 UTC <byorgey> yeah, I think the travis Haskell build environment regressed
2013-02-12 21:08:24 UTC <byorgey> because really nothing changed except adding IRC notifications since the last time it build successfully
2013-02-12 21:25:12 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 142911940 http://travis-ci.org/diagrams/diagrams-contrib/builds/4754760 The build has errored.
2013-02-12 21:26:33 UTC <byorgey> argh.
2013-02-12 21:28:40 UTC <byorgey> looking at previous successful builds, it looks like it has always had transformers-0.2.2.0 installed.
2013-02-12 21:30:56 UTC <byorgey> for some reason it has never caused problems before.
2013-02-12 21:34:33 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 144674421 http://travis-ci.org/diagrams/diagrams-contrib/builds/4755005 The build has errored.
2013-02-12 21:35:30 UTC <byorgey> the hole goes deeper.  I think travis is lying about which version of the HP they have installed.
2013-02-12 22:21:19 UTC <alpounet> haha
2013-02-13 00:34:48 UTC <cmears> In this document, we are in Phase 1, right?  http://www.haskell.org/haskellwiki/Diagrams/Dev/Text
2013-02-13 00:50:29 UTC <byorgey> yes, and I'm not even sure we implement everything in Phase 1 =P
2013-02-13 00:51:12 UTC <byorgey> note also that everything in that document is up for debate
2013-02-13 01:01:12 UTC <cmears> It seems like pango can do the "reifying" of text --- you can convert the glyphs into a Cairo path, then examine the path
2013-02-13 01:31:15 UTC <byorgey> cool!
2013-02-13 03:24:50 UTC <fryguybob> Humm, I should flesh out some of the path stuff I'm working on/thinking about on the wiki.
2013-02-13 17:08:23 UTC <fryguybob> New wiki stuff: http://www.haskell.org/haskellwiki/Diagrams/Dev/Paths
2013-02-13 17:17:33 UTC <byorgey> sweet
2013-02-13 17:19:19 UTC <byorgey> fryguybob: I am actually considering adding an arc segment type, would love your input on that
2013-02-13 17:19:35 UTC <byorgey> the idea is that if we know something is an arc most backends can render it much more simply
2013-02-13 17:19:47 UTC <byorgey> it would result in smaller SVGs/PSs etc.
2013-02-13 17:20:02 UTC <byorgey> not sure what the exact savings would be and whether it is worth it
2013-02-13 17:21:32 UTC <byorgey> the main difficulty is with transformations; one thing we could do is just store a transformation along with the arc parameters
2013-02-13 17:21:46 UTC <byorgey> so it would really represent the class of all affine transformations of arcs
2013-02-13 17:22:36 UTC <byorgey> and then of course keep the code for converting arcs to beziers which could be used e.g. by backends that can draw beziers but not arcs
2013-02-13 17:22:46 UTC <fryguybob> byorgey: Right, transformations are what kill arcs.
2013-02-13 17:22:55 UTC <fryguybob> Otherwise they are fairly nice to work with.
2013-02-13 17:25:16 UTC <fryguybob> We can also always punt and if we don't want to deal with arcs for some particular thing, covert it to a bezier first.
2013-02-13 17:27:02 UTC <fryguybob> (you did just say that :D)
2013-02-13 17:30:22 UTC <byorgey> right =)
2013-02-13 17:30:53 UTC <byorgey> the only downside is it might be a little strange if the number of segments in your path changes depending on what you do with it.
2013-02-13 17:46:06 UTC <fryguybob> byorgey: Yeah.  Anything that I can think of right now that would help with that just makes things more complicated.
2013-02-13 17:46:37 UTC <fryguybob> Like tracking both a cubic segment and the arc and giving one if the transform is non-square...
2013-02-13 22:40:55 UTC <luite> blurhg snow
2013-02-13 22:55:35 UTC <tgeeky> byorgey: just do like string theory does, and insist that the number of segments per linear section is always constant, even when it's not
2013-02-13 22:56:30 UTC <fryguybob> luite: Just put skis on the plane!
2013-02-13 22:58:56 UTC <luite> yeah...
2013-02-13 22:59:29 UTC <tgeeky> luite: to clarify, in case it's not clear. putting skis in the cabin of the plane is probably inadequate for a snow landing.
2013-02-13 23:07:40 UTC <fryguybob> Alternatively, sled dog to your destination.
2013-02-13 23:10:04 UTC <tgeeky> The LHC is going to go quiet at the end of this week, for 18 months. :(
2013-02-13 23:11:08 UTC <luite> :(
2013-02-13 23:12:09 UTC <luite> bleh useless, customer service unreachable
2013-02-13 23:12:24 UTC <tgeeky> what's going awn?
2013-02-13 23:12:38 UTC <luite> they canceled half the flights to/from AMS i think
2013-02-13 23:12:54 UTC <tgeeky> where is it being held this year?
2013-02-13 23:12:59 UTC <luite> what?
2013-02-13 23:13:21 UTC <tgeeky> hehe
2013-02-13 23:13:25 UTC <tgeeky> AMS = amsterdam
2013-02-13 23:13:37 UTC <tgeeky> i figured you were going to an American Mathematics Society meeting, for some reason
2013-02-13 23:13:50 UTC <luite> right, that would be fun
2013-02-13 23:14:05 UTC <luite> nah i'm going to give a talk about ghcjs
2013-02-13 23:14:12 UTC <luite> in budapest
2013-02-13 23:14:21 UTC <luite> at least if i can get there
2013-02-13 23:14:36 UTC <tgeeky> and AMS is the airport you would depart from
2013-02-13 23:14:39 UTC <tgeeky> ?
2013-02-13 23:14:58 UTC <luite> yes
2013-02-13 23:15:31 UTC <tgeeky> hm. the weather there looks acceptable.
2013-02-13 23:17:59 UTC <luite> there's some snow forecast for tomorrow, but nothing extreme...
2013-02-13 23:19:01 UTC <tgeeky> luite: fun fact that I learned: the inner compressor/turbine blades on modern jet engines
2013-02-13 23:19:27 UTC <tgeeky> which are a little bigger than credit card sized
2013-02-13 23:19:37 UTC <tgeeky> produce *each* the amount of power of a modern F1 car
2013-02-13 23:20:32 UTC <luite> meh the compressor blades only consume power ;)
2013-02-13 23:21:47 UTC <luite> the airline customer service number is 020-4747747
2013-02-13 23:22:00 UTC <tgeeky> that sounds fake to me
2013-02-13 23:22:27 UTC <tgeeky> is 020- the area code for fake amsterdamwood numbers?
2013-02-13 23:22:32 UTC <tgeeky> we use 555-xxxx in the US
2013-02-13 23:22:40 UTC <luite> yes
2013-02-13 23:48:56 UTC <luite> grmb
2013-02-13 23:53:09 UTC <luite> at least the time to random disconnect increased from 2 to 17 minutes
2013-02-14 00:02:37 UTC <fryguybob> :(
2013-02-14 00:14:29 UTC <luite> it's only 1400km by car
2013-02-14 00:23:29 UTC <tgeeky> I'm an American, so I probably think that km is a unit of cheeseburger flavor intensity
2013-02-14 00:23:36 UTC <tgeeky> but if it's a distance, that's a loooooooong distance
2013-02-14 00:40:00 UTC <luite> ah i think i have a new flight over dusseldorf
2013-02-14 00:40:15 UTC <luite> annoyingly the site doesn't let me log in
2013-02-14 02:38:58 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/toothpicks.pdf
2013-02-14 02:39:13 UTC <byorgey> an implementation of http://bit-player.org/2013/joshua-trees-and-toothpicks  with gratuitous use of color
2013-02-14 03:29:07 UTC <tgeeky> I think If I looked at that with 3D glasses I'd have a stroke
2013-02-14 21:35:30 UTC <bergey> I'm finding that diagrams-doc (from git) doesn't build, apparently because Shake's types changed between 0.4 and 0.5.  Has anyone else run into this?
2013-02-14 21:36:35 UTC <byorgey> bergey: oh, I believe you.  I haven't tried building diagrams-doc since ndm released shake-0.5
2013-02-14 21:37:35 UTC <bergey> I just unregistered shake-0.8, and tried with 0.4, and it works fine.
2013-02-14 21:38:20 UTC <byorgey> OK, good to know.
2013-02-14 21:38:34 UTC <byorgey> bergey: can you file a ticket on the diagrams-doc issue tracker?  that would be great
2013-02-14 21:38:40 UTC <bergey> sure
2013-02-14 21:39:18 UTC <byorgey> I'll get around to fixing it eventually, but patches are always welcome of course =)
2013-02-14 21:40:21 UTC <bergey> Good to know.  I was trying to look into https://github.com/diagrams/diagrams-doc/issues/20 when I ran into this one.
2013-02-14 21:40:57 UTC <byorgey> ah, cool
2013-02-14 21:41:11 UTC <byorgey> bergey: what's your github username?
2013-02-14 21:41:40 UTC <bergey> bergey, same as here
2013-02-14 21:43:17 UTC <byorgey> ok, I just gave you push access to diagrams-doc =)
2013-02-14 21:45:43 UTC <bergey> Thanks :)
2013-02-15 19:26:43 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 145323cc4 http://travis-ci.org/diagrams/diagrams-doc/builds/4822693 The build has errored.
2013-02-15 20:03:20 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14950676c http://travis-ci.org/diagrams/diagrams-doc/builds/4823753 The build has errored.
2013-02-15 20:50:01 UTC <byorgey> bergey: awesome, thanks for all the work fixing up the diagrams-doc build!
2013-02-15 20:51:18 UTC <bergey> Thanks for the advice along the way.
2013-02-15 20:51:28 UTC <bergey> And sorry for that last commit with the missing quotes.
2013-02-15 20:51:57 UTC <bergey> I got tangled up in git merge.
2013-02-15 20:56:34 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1406d4b8f http://travis-ci.org/diagrams/diagrams-doc/builds/4824187 The build passed.
2013-02-15 20:56:46 UTC <byorgey> bergey: oh, no worries, I do stuff like that all the time =)
2013-02-15 20:56:49 UTC <byorgey> huzzah!
2013-02-15 20:57:33 UTC <byorgey> bergey: out of curiosity, what's your interest in diagrams? are you using it for something in particular? just looking to help out? etc?
2013-02-15 21:12:45 UTC <bergey> I actually found diagrams a few months back while looking for 3D geometry libraries in haskell.  I was doing that for reasons somewhere between "frustrated by lack of open source CAD" and "curious how CAD gets implemented"
2013-02-15 21:13:19 UTC <bergey> So, looking for something like OpenSCAD, except with a nice declarative syntax.
2013-02-15 21:14:09 UTC <bergey> Diagrams has lovely syntax, but of course doesn't do 3D.  Among other things, I'm curious if there's any design document about diagrams-opengl.
2013-02-15 21:30:07 UTC <byorgey> bergey: right, to clarify, diagrams already supports any vector space, including 3D, the only things lacking are 3D stuff in diagrams-lib and a backend to support it.
2013-02-15 21:30:17 UTC <byorgey> one of those things that someone will hopefully get around to someday =)
2013-02-15 21:30:51 UTC <byorgey> bergey: there is no design document about diagrams-opengl.  There have been a few people who have expressed interest in working on such a thing over the past few years but nothing has ever come of it.
2013-02-15 21:33:53 UTC <bergey> =)  I'd noticed that the vector space parts were generic.  I haven't looked at the backends at all.
2013-02-15 21:34:52 UTC <byorgey> there's a diagrams-povray backend but right now I think it can only generate spheres in the dark =)
2013-02-15 21:38:28 UTC <bergey> Hah!  Personally, I'd rather work on an openGL backend.  But I suppose spheres in the dark are nice.
2013-02-15 21:40:01 UTC <bergey> I'm planning to keep working through some of the issues on the bug-tracker as a way to learn my way around the code.  And then maybe talk more about a 3D backend, when I can picture what that would look like.
2013-02-15 21:41:20 UTC <byorgey> oh, sure, I wasn't suggesting you should work on the povray backend.  If you want to work on an openGL backend, great!
2013-02-15 21:41:41 UTC <byorgey> and I'm quite happy to have you work through issues in the bug tracker =)
2013-02-16 15:46:30 UTC <fryguybob> byorgey: http://www.cs.rochester.edu/u/ryates/temp/liontwo.pdf
2013-02-16 16:37:16 UTC <byorgey> lion gears! =D
2013-02-16 16:38:26 UTC <byorgey> oh, cool, github does IRC notifications for pull requests too
2013-02-16 17:03:37 UTC <hpaste> byorgey pasted âI just discovered that the hpaste bot is in #diagrams!â at http://hpaste.org/82479
2013-02-16 17:18:27 UTC <fryguybob> byorgey: In case it wasn't clear, the lions are using the image primative.
2013-02-16 17:31:02 UTC <byorgey> fryguybob: that wasn't clear at first but it just occurred to me while changing Noah's diaper =)
2013-02-16 17:32:34 UTC <byorgey> fryguybob: so is there still some additional testing you want to do?
2013-02-16 17:33:15 UTC <byorgey> Just wondering whether it makes sense to go ahead and merge/release it along with a disclaimer saying to send us reports if it doesn't work
2013-02-16 17:45:43 UTC <fryguybob> byorgey: I think I can make it all work out with another commit, so lets wait for that.
2013-02-16 17:46:14 UTC <fryguybob> At least for the case of importing Postscript made from Postscript then running epstopdf.
2013-02-16 17:46:27 UTC <fryguybob> (made from diagrams-postscript that is)
2013-02-16 18:02:30 UTC <byorgey> ok, cool
2013-02-16 19:19:00 UTC <byorgey> > map succ "gh\USk`lac`ans "
2013-02-16 19:19:01 UTC <lambdabot>   "hi lambdabot!"
2013-02-16 19:20:47 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14ee4f12e http://travis-ci.org/diagrams/diagrams-contrib/builds/4841413 The build has errored.
2013-02-16 19:30:01 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14f7b99fa http://travis-ci.org/diagrams/diagrams-contrib/builds/4841583 The build has errored.
2013-02-16 19:35:19 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 140fed06f http://travis-ci.org/diagrams/diagrams-contrib/builds/4841620 The build has errored.
2013-02-16 19:41:36 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14a6670eb http://travis-ci.org/diagrams/diagrams-contrib/builds/4841630 The build passed.
2013-02-16 19:41:43 UTC <byorgey> huzzah!
2013-02-16 19:42:18 UTC <bergey> sweet!
2013-02-16 19:42:31 UTC <byorgey> was a little more complicated than for diagrams-doc
2013-02-16 19:43:01 UTC <byorgey> I am not quite sure which of the magic incantations I added are actually necessary.  But I'm not interested in poking at it any more at this point. =)
2013-02-16 19:43:02 UTC <bergey> I noticed.  That confuses me, since diagrams-doc builds contrib.
2013-02-16 19:43:18 UTC <byorgey> you're right, that's weird.
2013-02-16 19:43:19 UTC <bergey> Indeed. =)
2013-02-16 19:44:02 UTC <byorgey> but I guess installing *more* stuff can actually make things better since it may end up constraining versions more (hence getting you the versions that actually work)
2013-02-16 19:44:22 UTC <bergey> Huh.  That makes sense.
2013-02-16 19:45:08 UTC <byorgey> Also, which things get installed together in a single cabal install command, and which things are installed separately, can make a big difference
2013-02-16 19:45:31 UTC <bergey> yeah.  diagrams-doc installs all the other diagrams packages in one cabal call
2013-02-16 19:45:44 UTC <byorgey> yeah, exactly
2013-02-16 19:53:37 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14ed3712a http://travis-ci.org/diagrams/diagrams-contrib/builds/4841801 The build passed.
2013-02-16 20:05:15 UTC <fryguybob> byorgey: I think that we are in the same position as fonts with image in Postscript :(.  We can't tell the size of the linked file so the size you give to `image` must match what is in the file.
2013-02-16 20:13:57 UTC <fryguybob> Oh, I think I found what I need.
2013-02-16 20:20:47 UTC <byorgey> aren't EPS files required to have a bounding box thingy?
2013-02-16 20:21:02 UTC <byorgey> ACTION knows just enough about PS to be dangerous
2013-02-16 20:37:07 UTC <fryguybob> Yes, each EPS does have a bounding box.  But just running the file doesn't give us access to that at the Postscript level (that I can tell).
2013-02-16 20:38:09 UTC <fryguybob> I can switch the page device to the null device, then there should be no output (as long as the code we are runnning doesn't fiddle with the page device) but I'm not sure how to extract the current bounding box after I've done that.
2013-02-16 20:43:09 UTC <fryguybob> Humm, looks like some people parse the comments from the file to get the bounding box.
2013-02-16 21:01:48 UTC <byorgey> haha, hackish but effective
2013-02-16 23:32:27 UTC <travis-ci> [travis-ci] 13diagrams-doc/06travis-error-on-failed-diagrams 14c0ac13b http://travis-ci.org/diagrams/diagrams-doc/builds/4844605 The build passed.
2013-02-17 00:50:37 UTC <byorgey> bergey: what version of GHC are you using?
2013-02-17 02:33:32 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14164b145 http://travis-ci.org/diagrams/diagrams-doc/builds/4847558 The build passed.
2013-02-17 02:35:03 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1400049f5 http://travis-ci.org/diagrams/diagrams-doc/builds/4847603 The build passed.
2013-02-17 14:58:54 UTC <bergey> ghc --version
2013-02-17 14:58:54 UTC <bergey> The Glorious Glasgow Haskell Compilation System, version 7.4.1
2013-02-17 14:59:55 UTC <byorgey> bergey: ok, just checking.  diagrams-doc doesn't build under GHC 7.6 for me
2013-02-17 15:00:22 UTC <byorgey> a few simple-to-fix version upper bounds, and some more serious breakage because of changes in the GHC API
2013-02-17 15:03:46 UTC <bergey> I was just reading your notes on those.
2013-02-17 19:31:28 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06turtle-path 14698f3ab http://travis-ci.org/diagrams/diagrams-contrib/builds/4859590 The build passed.
2013-02-17 19:44:16 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06turtle-path 140b913cd http://travis-ci.org/diagrams/diagrams-contrib/builds/4859773 The build passed.
2013-02-17 23:58:29 UTC <fryguybob> ACTION prepares to use the force-layout.
2013-02-18 00:00:53 UTC <cmears> You might need to add some random jitter so that two nodes on top of each other don't stay on top of each other
2013-02-18 00:01:01 UTC <cmears> In other words, you'll need a disturbance in the force
2013-02-18 00:01:12 UTC <byorgey> hahahaha
2013-02-18 00:01:13 UTC <fryguybob> hehe
2013-02-18 00:03:45 UTC <luite> :)
2013-02-18 01:26:55 UTC <tgeeky> cmears: you've had that little ditty sitting on the shelf for some time now, haven't you
2013-02-18 01:30:44 UTC <cmears> whenever I go quiet I am searching desperately for a joke
2013-02-18 01:30:49 UTC <cmears> (:
2013-02-18 02:21:01 UTC <byorgey> there, now we can once again generate Paths using LOGO =)
2013-02-18 02:23:15 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06turtle-path 14561dbe2 http://travis-ci.org/diagrams/diagrams-contrib/builds/4866618 The build passed.
2013-02-18 02:23:23 UTC <fryguybob> byorgey: You were working on METAPOST like paths right?
2013-02-18 02:24:11 UTC <byorgey> fryguybob: yeah, it's in the metafont branch of diagrams-contrib
2013-02-18 02:24:53 UTC <fryguybob> Ah, I'll have to look at it.  I don't know much about these things.
2013-02-18 02:24:55 UTC <byorgey> it's kind of stalled at the moment, not for any blocking technical reason, but just because it was getting a little ugly and I wasn't sure of the best way to proceed
2013-02-18 02:25:38 UTC <byorgey> fryguybob: remember at hac phi when we were like "man, I wish we had a copy of that book" and then I walked 100 feet down the hall and got the book from the library?
2013-02-18 02:25:50 UTC <fryguybob> byorgey: Yeah
2013-02-18 02:26:00 UTC <byorgey> well, I still have that book checked out =)
2013-02-18 02:26:07 UTC <fryguybob> hehe
2013-02-18 02:26:14 UTC <byorgey> and that's where I'm getting this from
2013-02-18 02:27:14 UTC <byorgey> (note it's actually METAFONT, not METAPOST)
2013-02-18 02:27:40 UTC <byorgey> though I guess metapost probably has similar stuff
2013-02-18 02:28:00 UTC <fryguybob> Oh, looking at the commits, I did read over those.
2013-02-18 02:28:57 UTC <byorgey> oh! I guess MetaPost was developed by John Hobby, who is exactly the guy who came up with the algorithms used by Knuth in MetaFont to do the path stuff
2013-02-18 02:29:23 UTC <byorgey> so saying "METAPOST-like paths" isn't as far off as I thought =)
2013-02-18 02:29:24 UTC <fryguybob> Ah
2013-02-18 03:38:44 UTC <byorgey> @ask mgsloan when you get a chance can you take a look at https://github.com/diagrams/diagrams-contrib/pull/11 (re: turtle stuff) ?
2013-02-18 03:38:44 UTC <lambdabot> Consider it noted.
2013-02-18 03:40:29 UTC <mgsloan> byorgey: looks good to me! I commented on the pull aswell
2013-02-18 03:40:30 UTC <lambdabot> mgsloan: You have 1 new message. '/msg lambdabot @messages' to read it.
2013-02-18 03:44:07 UTC <mgsloan> does it look like the generalization of R2 is going through?
2013-02-18 03:44:20 UTC <mgsloan> It's tubad that the deep embedding thing didn't work out
2013-02-18 03:44:28 UTC <mgsloan> I wish that such a change wasn't so invasive
2013-02-18 03:44:53 UTC <mgsloan> e.g. if overloaded syntax extended far enough that most computational things could be deeply embedded
2013-02-18 04:11:07 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1485dc1b0 http://travis-ci.org/diagrams/diagrams-doc/builds/4867589 The build passed.
2013-02-18 04:27:53 UTC <byorgey> mgsloan: thanks!
2013-02-18 04:28:04 UTC <byorgey> mgsloan: I think the generalizing R2 thing will go through
2013-02-18 04:28:15 UTC <byorgey> I haven't had a chance to test it out thoroughly yet
2013-02-18 04:28:16 UTC <mgsloan> np, thanks for refreshing the api a bit!
2013-02-18 04:28:32 UTC <mgsloan> awesome, hopefully get some time to do that auto-layout thing
2013-02-18 04:28:38 UTC <byorgey> neat =)
2013-02-18 04:35:08 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1411b0bc0 http://travis-ci.org/diagrams/diagrams-contrib/builds/4868329 The build passed.
2013-02-18 04:39:04 UTC <carter> byorgey that plotting project may finally happen soon btw :) 
2013-02-18 04:39:14 UTC <carter> life got a bit busy this past year 
2013-02-18 04:39:18 UTC <byorgey> carter: awesome =)
2013-02-18 04:39:34 UTC <byorgey> carter: get used to it ;-)
2013-02-18 04:39:45 UTC <carter> byorgey yeah: the busy's been a good thing
2013-02-18 04:40:09 UTC <carter> if things get much busier i might be able to hire someone to help with that even 
2013-02-18 04:40:12 UTC <carter> :)
2013-02-18 04:40:17 UTC <carter> i'm slightly not kidding
2013-02-18 04:40:20 UTC <carter> hopefully
2013-02-18 04:40:26 UTC <byorgey> cool
2013-02-18 06:46:58 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 145cbadf0 http://travis-ci.org/diagrams/diagrams-doc/builds/4869520 The build passed.
2013-02-18 06:49:36 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14577a53f http://travis-ci.org/diagrams/diagrams-doc/builds/4869563 The build passed.
2013-02-18 21:48:29 UTC <hpaste> fryguybob pasted âStateful Diagramâ at http://hpaste.org/82642
2013-02-18 21:52:42 UTC <byorgey> fryguybob: ooh, nice
2013-02-18 21:53:25 UTC <byorgey> fryguybob: this kind of thing would also work well for generating memory diagrams when teaching something like Java or C
2013-02-18 22:16:38 UTC <fryguybob> byorgey: That's the idea.  I'm also going to allow "snapshots" in the middle giving some sort of animation.
2013-02-18 22:16:50 UTC <byorgey> cool =)
2013-02-18 22:16:59 UTC <byorgey> ugh, we need better arrows
2013-02-18 22:17:28 UTC <byorgey> maybe I'll work on that next, once this stupid thesis proposal is out of the way =P
2013-02-19 14:02:04 UTC <fryguybob> Humm.  Is there a way to get the location of a named subdiagram like:  locationOf :: Name -> Diagram b v -> Point v ?
2013-02-19 14:10:13 UTC <fryguybob> Oh, never mind, I found `names`.
2013-02-19 15:37:48 UTC <byorgey> fryguybob: well, it would have to be  Name -> Diagram -> Maybe (Point v)
2013-02-19 15:37:57 UTC <byorgey> we could certainly add such a function
2013-02-19 15:38:13 UTC <byorgey> I think there are probably quite a few functions we should add for working more conveniently with subdiagrams
2013-02-19 15:38:18 UTC <byorgey> I'm just not sure which ones they are.
2013-02-19 15:41:43 UTC <fryguybob> byorgey: Yeah.  I think names should work fine for what I want (I do want all the names).
2013-02-19 15:42:10 UTC <fryguybob> byorgey: Thesis proposal all done?
2013-02-19 15:42:38 UTC <byorgey> fryguybob: not quite =P
2013-02-19 15:42:50 UTC <byorgey> it's close though.  finishing it up now.
2013-02-19 15:43:01 UTC <fryguybob> :D you can do it!
2013-02-19 15:43:06 UTC <byorgey> thanks =)
2013-02-19 16:37:11 UTC <tgeeky> byorgey: how about meow
2013-02-19 17:43:59 UTC <byorgey> ...aaaaand... done!!
2013-02-19 17:44:26 UTC <byorgey> well, with the document... I still have to make some slides for my presentation on March 4 =P
2013-02-19 17:44:46 UTC <byorgey> but I am going to explicitly not think about that at all for the next couple days =)
2013-02-19 17:45:08 UTC <byorgey> and now for some diagrams hacking!! =D
2013-02-19 17:45:11 UTC <byorgey> ...right after lunch
2013-02-19 18:53:46 UTC <fryguybob> byorgey: Woohoo!
2013-02-19 18:59:21 UTC <byorgey> =)
2013-02-19 18:59:30 UTC <byorgey> currently fleshing out the GSoC page on the wiki
2013-02-19 19:01:56 UTC <luite> hm what do conferences do if none of the authors of a paper can come? are proceedings-only papers usually acceptable?
2013-02-19 19:03:29 UTC <byorgey> luite: yes, I would imagine so
2013-02-19 19:03:44 UTC <byorgey> luite: you could probably also arrange to record a video and have it played in place of a talk
2013-02-19 19:53:18 UTC <luite> hm, tbh i think that's worse than no talk at all (unless it's a live video or you have a question session or something)
2013-02-19 19:53:33 UTC <luite> better upload something to youtube then
2013-02-19 19:55:05 UTC <byorgey> yeah, you're probably right
2013-02-19 19:55:23 UTC <byorgey> unless you make the video really entertaining
2013-02-19 19:55:29 UTC <byorgey> but that takes a lot of time and effort
2013-02-19 19:55:33 UTC <luite> righty
2013-02-19 19:55:35 UTC <luite> -y
2013-02-19 19:55:44 UTC <byorgey> righty-o
2013-02-19 20:53:34 UTC <tgeeky> byorgey: did you stay up all night?
2013-02-19 21:55:16 UTC <byorgey> tgeeky: nope
2013-02-19 21:55:36 UTC <byorgey> tgeeky: got about 4 hours of sleep
2013-02-19 22:23:49 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 143b6c12f http://travis-ci.org/diagrams/diagrams-doc/builds/4913914 The build passed.
2013-02-20 01:37:29 UTC <fryguybob> ACTION 's experiment in forces is going to require some serious de-uglification... after he gets it to compile.
2013-02-20 02:46:25 UTC <tgeeky> byorgey: art thou concious?
2013-02-20 13:44:28 UTC <byorgey> tgeeky: at the time you sent that, I actually wasn't.  Went to bed at 9pm last night =)
2013-02-20 18:07:07 UTC <fryguybob> getting closer: http://www.cs.rochester.edu/u/ryates/temp/trecf.pdf
2013-02-20 18:08:12 UTC <byorgey> ooh!
2013-02-20 18:11:29 UTC <fryguybob> On the left is before applying forces.
2013-02-20 18:13:11 UTC <byorgey> aha, I see.
2013-02-20 19:47:14 UTC <byorgey> ACTION is finally getting around to writing the diagrams-core section of the user manual =)
2013-02-20 20:11:43 UTC <fryguybob> ACTION may have just made something similar to (~~) allowing (a ~/ b ~.~ c \~ d) to be a path with one cubic segment and is doubtful that this is a good idea.
2013-02-20 20:12:29 UTC <byorgey> hehe
2013-02-20 20:15:45 UTC <fryguybob> ACTION switches to (a /~ b ~~~ c ~\ d) now it is a *great* idea.
2013-02-20 20:33:01 UTC <byorgey> =D
2013-02-20 20:33:24 UTC <byorgey> ACTION is working on https://github.com/diagrams/diagrams-doc/issues/2
2013-02-20 20:33:42 UTC <fryguybob> Now we just need dependent types so we can make ~/ and ~\ mean that the points must conform to making that kind of shape.
2013-02-20 20:33:49 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1415aef3a http://travis-ci.org/diagrams/diagrams-doc/builds/4938650 The build passed.
2013-02-20 20:33:53 UTC <byorgey> hehe
2013-02-20 20:34:07 UTC <fryguybob> Because that would be easy and productive thing to do :D
2013-02-20 20:34:28 UTC <fryguybob> oooOOOooo haddock diagrams.
2013-02-20 20:34:45 UTC <byorgey> yep, should be awesome
2013-02-20 20:34:58 UTC <byorgey> then we can go on a spree adding diagrams to everything =D
2013-02-21 01:26:51 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14f68edb1 http://travis-ci.org/diagrams/diagrams-haddock/builds/4945794 The build passed.
2013-02-21 02:09:46 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14b28026a http://travis-ci.org/diagrams/diagrams-haddock/builds/4946460 The build passed.
2013-02-21 02:34:22 UTC <tgeeky>  <Oprah> You get a diagram. You get a diagram. YOU get a diagram. Everbody gets diagrams! DIAAAAGRAMMMMSSS!
2013-02-21 03:34:29 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 141aa9749 http://travis-ci.org/diagrams/diagrams-haddock/builds/4947391 The build passed.
2013-02-21 03:36:39 UTC <byorgey> tgeeky: huzzah!
2013-02-21 03:37:02 UTC <byorgey> ACTION doesn't watch Oprah but assumes tgeeky's impression is accurate
2013-02-21 03:50:15 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 143aca8af http://travis-ci.org/diagrams/diagrams-haddock/builds/4947596 The build passed.
2013-02-21 03:51:28 UTC <tgeeky> except she (once) gave away cars
2013-02-21 14:58:06 UTC <byorgey> good <word describing generic time of day approprite to your time zone> #diagrams!
2013-02-21 15:17:22 UTC <fryguybob> Good morning to you byorgey.
2013-02-21 15:32:24 UTC <mgsloan> morning!  Aaand it's time to go to bed
2013-02-21 15:33:48 UTC <byorgey> sleep well mgsloan =)
2013-02-21 15:34:35 UTC <mgsloan> Thanks! You too!
2013-02-21 19:04:26 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14320cb08 http://travis-ci.org/diagrams/diagrams-haddock/builds/4963943 The build has errored.
2013-02-21 19:13:25 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 145817955 http://travis-ci.org/diagrams/diagrams-haddock/builds/4963985 The build passed.
2013-02-21 19:22:29 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1447af72c http://travis-ci.org/diagrams/diagrams-haddock/builds/4964191 The build passed.
2013-02-21 19:40:31 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14197000c http://travis-ci.org/diagrams/diagrams-haddock/builds/4964558 The build passed.
2013-02-21 20:02:17 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1464b871b http://travis-ci.org/diagrams/diagrams-haddock/builds/4965041 The build passed.
2013-02-21 20:02:34 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14438a6db http://travis-ci.org/diagrams/diagrams-haddock/builds/4965115 The build passed.
2013-02-22 20:59:21 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 144313399 http://travis-ci.org/diagrams/diagrams-haddock/builds/4989113 The build passed.
2013-02-24 01:03:59 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14699b77e http://travis-ci.org/diagrams/diagrams-haddock/builds/5011119 The build passed.
2013-02-24 04:18:50 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14f9b4f02 http://travis-ci.org/diagrams/diagrams-haddock/builds/5012976 The build passed.
2013-02-24 18:28:45 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14712d39f http://travis-ci.org/diagrams/diagrams-haddock/builds/5023706 The build passed.
2013-02-24 18:33:13 UTC <fryguybob> hehe.  I have had some failed attempts at lens.
2013-02-24 18:34:19 UTC <fryguybob> Almost always involving maps and indexes.
2013-02-24 18:34:29 UTC <byorgey> hehe
2013-02-24 18:34:49 UTC <byorgey> I asked about it in #haskell-lens but no replies yet.  I feel like there must be a simple way to do what I'm trying to do.
2013-02-24 18:35:31 UTC <fryguybob> Yeah, I think we are in great need of Hoogle for lens that can do the right kind of generalizing...
2013-02-24 18:35:44 UTC <byorgey> Loogle
2013-02-24 18:37:10 UTC <byorgey> Anyway, diagrams-haddock is coming along quite nicely!  If you want to try it out on any projects you can just load Diagrams.Haddock and call processHaddockDiagrams manually
2013-02-24 18:37:24 UTC <byorgey> The next step is to make a command-line tool
2013-02-24 18:37:50 UTC <fryguybob> byorgey: And that spits out the diagrams in the right locations so when you run Haddock it will link to it?
2013-02-24 18:38:51 UTC <byorgey> fryguybob: no, it spits out diagrams wherever you ask it to.  Then you have to copy the diagrams to where Haddock can link to them
2013-02-24 18:38:54 UTC <fryguybob> I'm working on getting a functioning radius of curvature: http://www.cs.rochester.edu/u/ryates/temp/offsetC.pdf  Clearly not there yet.
2013-02-24 18:38:54 UTC <byorgey> fryguybob: for an example see eone attempts to use a Getter as a Setter.
2013-02-24 18:38:59 UTC <fryguybob> Ah, ok
2013-02-24 18:39:00 UTC <byorgey> whoops
2013-02-24 18:39:09 UTC <byorgey> I meant to say "for an example see https://github.com/diagrams/diagrams-haddock/blob/master/Setup.hs"
2013-02-24 18:39:47 UTC <byorgey> hehe
2013-02-24 18:40:03 UTC <byorgey> what are the scribbles on the RHS?
2013-02-24 18:40:39 UTC <fryguybob> Those are the curves that I'm supposed to be measuring the RoC on.
2013-02-24 18:40:43 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 142433ce5 http://travis-ci.org/diagrams/diagrams-haddock/builds/5023973 The build passed.
2013-02-24 18:40:51 UTC <byorgey> oh, I see
2013-02-24 18:41:20 UTC <fryguybob> The circles should be tangent locally at t = 0.5
2013-02-24 18:41:47 UTC <byorgey> hmm, I don't see any tangent circles =)
2013-02-24 18:43:15 UTC <fryguybob> Yeah.
2013-02-24 18:43:29 UTC <fryguybob> Humm, perhaps you want something from here: http://hackage.haskell.org/packages/archive/lens/3.8.7.3/doc/html/Control-Lens-Action.html
2013-02-24 18:47:47 UTC <byorgey> yes, perhaps I do.
2013-02-24 18:48:19 UTC <byorgey> hmm, yes, I probably do.
2013-02-24 18:49:14 UTC <fryguybob> Ah ha.  Much better now.
2013-02-24 18:50:24 UTC <byorgey> yay =)
2013-02-24 18:55:16 UTC <byorgey> hmm, well, I can do it with Control.Lens.Action but it's not really any shorter than what I already have.
2013-02-24 18:56:35 UTC <fryguybob> Ah.
2013-02-24 18:57:04 UTC <fryguybob> Clipping is not doing what I hoped it would.
2013-02-24 18:58:56 UTC <fryguybob> oh.  boundingBox is giving corners in a different order then I assumed.
2013-02-24 18:59:53 UTC <fryguybob> Envelopes are not affected by clipBy :(
2013-02-24 19:24:46 UTC <fryguybob> I wanted withEnvelope anyway :D
2013-02-24 19:41:05 UTC <byorgey> indeed, envelopes are not affected by clipBy... I seem to recall thinking it would be hard to add that but I don't remember why
2013-02-24 19:41:11 UTC <byorgey> anyway, glad you figured it out =)
2013-02-24 19:44:31 UTC <fryguybob> If you refesh that file you can see a lot of radii.
2013-02-24 19:44:46 UTC <fryguybob> But some look a little off :(
2013-02-24 19:45:09 UTC <fryguybob> I don't know if it is numerical error or something else off.
2013-02-24 19:45:44 UTC <fryguybob> Specifically the bottom left corner doesn't look quite on.
2013-02-24 19:48:01 UTC <fryguybob> Oh, the worst one is the second curve from the left bottom-most circle.
2013-02-24 19:49:32 UTC <byorgey> fryguybob: which one?  it doesn't look bad to me
2013-02-24 19:50:15 UTC <byorgey> in any case that's some nice artwork =)
2013-02-24 19:50:25 UTC <fryguybob> :D
2013-02-24 19:50:59 UTC <fryguybob> You might have to zoom in to see it, but the second blue curve, the first circle from the bottom.
2013-02-24 19:51:35 UTC <fryguybob> It has a pretty large radius, but it seems like it is crossing through the point on the curve and not tangent.
2013-02-24 19:51:49 UTC <byorgey> oh, I was looking in the wrong place, yes, I see it now
2013-02-24 19:51:53 UTC <byorgey> yep
2013-02-24 19:52:50 UTC <fryguybob> It would be nice if there was some tool that you could give an expression to and it would find the most numerically stable form of it (for doubles).
2013-02-24 19:53:04 UTC <byorgey> I was parsing it as "second curve from the ((left bottom)-most circle)"
2013-02-24 19:53:14 UTC <fryguybob> Oh :D.
2013-02-24 19:53:16 UTC <byorgey> which doesn't really make sense but I was doing my best
2013-02-24 19:53:19 UTC <byorgey> =)
2013-02-24 20:02:40 UTC <luite> blergh still sock... :(
2013-02-24 20:02:41 UTC <luite> sick
2013-02-24 20:03:04 UTC <fryguybob> :(
2013-02-24 20:03:31 UTC <luite> since wednesday
2013-02-24 20:08:17 UTC <byorgey> aww =(
2013-02-24 20:08:31 UTC <byorgey> sorry to hear that
2013-02-24 20:08:54 UTC <luite> a souvenir from budapest i guess
2013-02-24 20:09:30 UTC <byorgey> so you did make it to budapest, eh?  how was it?
2013-02-24 20:10:04 UTC <luite> oh yeah they rescheduled my flight to later the same day, with a transfer in germany though
2013-02-24 20:12:21 UTC <byorgey> ah, cool
2013-02-24 20:16:02 UTC <fryguybob> Gahh, something is fishy.  If you look now there are two straight lines.  One is a perpendicular using my first derivative, the other is subdividing and using the handle vector.
2013-02-24 20:17:01 UTC <fryguybob> ACTION wonders if this is what he gets for using Wolfram Alpha...
2013-02-24 20:17:13 UTC <byorgey> hehe
2013-02-24 20:23:35 UTC <luite> byorgey: the conference itself was a lot more practical than i was used to 
2013-02-24 20:23:54 UTC <luite> which did make the talks more accessible
2013-02-24 20:23:57 UTC <byorgey> luite: was that a good thing or a bad thing?  or just different?
2013-02-24 20:24:02 UTC <byorgey> ah, nice
2013-02-24 20:26:22 UTC <luite> dunno i prefer a bit more academic, there were some real salesperson talks
2013-02-24 20:29:18 UTC <luite> the organization was ok i guess, with free dinner/lunch included both days, party with DJ, free beer etc, i guess they got more sponsoring than the average academic conference...
2013-02-24 20:32:34 UTC <byorgey> heh, I guess so
2013-02-24 20:33:11 UTC <byorgey> I guess that tends to be the case with more practical/industry oriented stuff
2013-02-24 20:33:16 UTC <luite> lots of google people there with application forms
2013-02-24 20:41:46 UTC <luite> but i had the feeling that most visitors there were sent by their boss on a free vacation or something... either that or there's just less overlap in interests than i'm used to :)
2013-02-24 20:45:46 UTC <luite> the audience also was a whole lot less diverse too... I think 99% was age 20-35, male
2013-02-24 20:46:32 UTC <byorgey> hmm, sad
2013-02-24 20:47:16 UTC <luite> it's probably representative for most of googles workforce
2013-02-24 20:47:39 UTC <byorgey> really?  I'm surprised
2013-02-24 20:47:51 UTC <byorgey> perhaps I shouldn't be
2013-02-24 20:48:22 UTC <luite> dunno, i mean software engineers in non-research positions... other departments are probably different
2013-02-24 20:49:27 UTC <luite> i could be wrong though, i have only visited google's offices briefly
2013-02-24 21:11:58 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14609a69b http://travis-ci.org/diagrams/diagrams-haddock/builds/5026781 The build passed.
2013-02-24 23:16:21 UTC <fryguybob> Ah ha!  Much better.
2013-02-24 23:17:20 UTC <fryguybob> I was being stupid and leaving the first term in as though the first point was at 1, but it is at zero so the term should be... zero.
2013-02-25 00:07:38 UTC <fryguybob> Moar circles!
2013-02-25 00:46:10 UTC <fryguybob> Something tells me I need a better way to convert to animation: http://www.cs.rochester.edu/u/ryates/temp/animation.gif
2013-02-25 00:53:42 UTC <fryguybob> Much better, but has strange clipped circles: http://www.cs.rochester.edu/u/ryates/temp/animation2.gif
2013-02-25 01:05:25 UTC <fryguybob> The recipe of  diagrams-postscript | epstopdf | pdftoppm -png | convert -delay 10 -loop 0 *.png blah.gif  seems to do the best.
2013-02-25 01:05:28 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/animation4.gif
2013-02-25 02:27:27 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 149e2d4a1 http://travis-ci.org/diagrams/diagrams-postscript/builds/5031585 The build passed.
2013-02-25 03:07:51 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14ed16951 http://travis-ci.org/diagrams/diagrams-haddock/builds/5032052 The build passed.
2013-02-25 03:13:14 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149ae54fb http://travis-ci.org/diagrams/diagrams-haddock/builds/5032160 The build passed.
2013-02-25 04:07:01 UTC <fryguybob> byorgey: I have direct embedding of images now: http://www.cs.rochester.edu/u/ryates/temp/liontwo.pdf
2013-02-25 04:07:29 UTC <fryguybob> So I'm actually parsing the file (in a pretty hacky way) and using the bounding box then embeding the file directly.
2013-02-25 04:13:22 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06images 1425cc59d http://travis-ci.org/diagrams/diagrams-postscript/builds/5032727 The build passed.
2013-02-25 04:18:43 UTC <carter> fryguybob that looks cool
2013-02-25 15:18:08 UTC <fryguybob> byorgey: I'm wondering where I should put the curvature stuff.  It does generalize to higher dimension space curves, but for now I think it would be useful to have the two dimensional version.  Does Diagrams.TwoD.Segment in lib make sense?
2013-02-25 15:30:47 UTC <fryguybob> Humm, maybe Diagrams.TwoD.Curvature would make more sense.
2013-02-25 15:32:55 UTC <byorgey> fryguybob: yes, Diagrams.TwoD.Curvature sounds best to me
2013-02-25 15:33:04 UTC <byorgey> no reason we have to shove it in alongside an existing module.
2013-02-25 15:34:06 UTC <fryguybob> byorgey: Yeah
2013-02-25 15:36:47 UTC <fryguybob> byorgey: I'm a little confused by the definition given on Wikipedia for higher dimensions as it is defined by an arclength parameterization, but I don't know how important that is :(.
2013-02-25 15:37:00 UTC <fryguybob> Regardless I'll work on getting the 2d version in.
2013-02-25 15:49:07 UTC <byorgey> awesome
2013-02-25 16:31:31 UTC <fryguybob> *sigh* just when I'm about to push it appears our network file system died...
2013-02-25 16:51:41 UTC <byorgey> doh =(
2013-02-25 16:52:04 UTC <byorgey> fryguybob: is this a frequent occurrence?
2013-02-25 16:55:10 UTC <byorgey> well, the Travis build seems to have passed at least =)
2013-02-25 17:02:16 UTC <fryguybob> byorgey: Not really.  For reasons I can't comprehend there is an abismal amount of space available so I tend to just keep stuff on the local disk.
2013-02-25 17:02:46 UTC <fryguybob> It seems to be back now.
2013-02-25 17:04:23 UTC <fryguybob> ACTION types random git commands until things are happy.
2013-02-25 17:07:08 UTC <fryguybob> ACTION gives up and starts over :D
2013-02-25 17:30:22 UTC <fryguybob> byorgey: After compiling I fixed a couple silly things and now I can produce this with curvature in lib:  http://www.cs.rochester.edu/u/ryates/temp/output.gif
2013-02-25 17:31:03 UTC <fryguybob> The first and second deriviative are in a where in the code.  It would be nice to have those live somewhere more general.
2013-02-25 17:46:01 UTC <luite> funky
2013-02-27 02:27:54 UTC <byorgey> sigh, I wish there was some easy way to get notified when diagrams-hog is logged out
2013-02-27 02:29:30 UTC <fryguybob> poll its pid?
2013-02-27 02:29:52 UTC <fryguybob> Or does it not die, just disconnect?
2013-02-27 02:31:14 UTC <byorgey> right, that's the problem
2013-02-27 02:32:07 UTC <byorgey> it just disconnects but doesn't realize it
2013-02-27 02:33:02 UTC <fryguybob> humm
2013-02-27 02:33:33 UTC <fryguybob> As a systems person I should have some answer involving /proc or something.
2013-02-27 02:47:11 UTC <fryguybob> If I do $ grep IpExt /proc/`pidof irssi`/net/netstat  the numbers change.
2013-02-27 02:50:41 UTC <byorgey> haha wat
2013-02-27 02:51:50 UTC <fryguybob> I think that should give you stats of bytes of network traffic from that process or something.
2013-02-27 02:52:13 UTC <fryguybob> (in my case the process is irssi)
2013-02-27 02:53:22 UTC <byorgey> heh, I see
2013-02-27 03:12:58 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14a1b94ae http://travis-ci.org/diagrams/diagrams-haddock/builds/5091853 The build has errored.
2013-02-27 03:25:41 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14e62abce http://travis-ci.org/diagrams/diagrams-haddock/builds/5091869 The build passed.
2013-02-27 03:35:40 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149969db4 http://travis-ci.org/diagrams/diagrams-haddock/builds/5092016 The build passed.
2013-02-27 03:42:08 UTC <fryguybob> byorgey: My cpp "support": https://github.com/fryguybob/diagrams-haddock
2013-02-27 03:44:52 UTC <fryguybob> It looks like the ! bug in zipper is due to a strict field marked in a GADT.
2013-02-27 03:45:46 UTC <fryguybob> It looks like it is #ifdef'ed out for HLINT which I think uses HSE :D.
2013-02-27 03:46:16 UTC <fryguybob> ACTION goes to bed
2013-02-27 13:32:06 UTC <fryguybob> One bug down :D
2013-02-27 13:47:18 UTC <fryguybob> Also the strictness with GADT's is already in there as issue 9.
2013-02-27 13:53:29 UTC <byorgey> two bugs down!
2013-02-27 15:16:59 UTC <fryguybob> byorgey: BTW it is still killing files.
2013-02-27 15:24:56 UTC <fryguybob> Also, I'm afraid we need to parse cpp if we are going to write back :(.  Without writing back we should be fine for extracting comments as long as we have the right things defined for cpphs.
2013-02-27 16:41:12 UTC <byorgey> fryguybob: dang.  can you file a bug ticket re: kiling files?
2013-02-27 16:41:27 UTC <fryguybob> byorgey: Yeah
2013-02-27 16:41:33 UTC <byorgey> fryguybob: and you're right about parsing CPP =(
2013-02-27 16:42:41 UTC <fryguybob> byorgey: It would probably work in any sane cases to just do a new pass at the end that was a search and replace for the particular line we want to write.
2013-02-27 16:43:01 UTC <fryguybob> Not nice and clean solution though.  But this is CPP we are talking about :D
2013-02-27 16:45:15 UTC <byorgey> hehe
2013-02-27 16:45:59 UTC <byorgey> you know, the other thing we could do is to forget about haskell-src-exts and just run the 'diagram URL' parser on the entire file
2013-02-27 16:46:29 UTC <byorgey> oh, no, wait, we have to find code blocks too
2013-02-27 16:46:31 UTC <byorgey> never mind =(
2013-02-27 16:47:10 UTC <byorgey> oh, but ONCE we have compiled all the diagrams, we could do a new pass running the diagram URL parser on the entire file.
2013-02-27 16:48:05 UTC <fryguybob> Yeah
2013-02-27 16:48:11 UTC <byorgey> at some level, anything that is trying to deal with real-world Haskell code is going to have some weird corner cases and workarounds.  So I'm not too concerned about having something that's super clean and elegant.
2013-02-27 16:49:17 UTC <byorgey> that approach (doing a separate pass at the end to alter diagram URLs) also has the benefit of nicely solving the problem re: trailing whitespace
2013-02-27 16:49:34 UTC <byorgey> and we will know whether we've changed anything instead of having to compare the final output with the original file
2013-02-27 16:53:12 UTC <fryguybob> Humm, it's not killing files now...
2013-02-27 16:54:10 UTC <fryguybob> As in my smaller test case.  Have to run.
2013-02-27 16:54:11 UTC <byorgey> haha
2013-02-27 16:54:16 UTC <byorgey> ok, see you
2013-02-27 17:57:45 UTC <fryguybob> ok finally have a test case that works.
2013-02-27 18:47:53 UTC <byorgey> OK, I really really need to work on my thesis proposal presentation for Monday.
2013-02-27 18:48:02 UTC <byorgey> please don't let me work on diagrams anymore until it is done.
2013-02-27 18:48:23 UTC <byorgey> it is an extremely tempting way to procrastinate =)
2013-02-27 18:49:52 UTC <tgeeky> ACTION hacks into github and removes byorgey's public keys
2013-02-27 18:50:15 UTC <byorgey> noooooooo
2013-02-27 19:03:01 UTC <fryguybob> byorgey: What if your thesis proposal needs some diagrams in it!!?!?
2013-02-27 19:03:28 UTC <byorgey> fryguybob: oh, it does!
2013-02-27 19:03:48 UTC <byorgey> but diagrams already has all the features I need to make them.
2013-02-27 19:04:04 UTC <byorgey> my thesis proposal actually has quite a few diagrams in it
2013-02-27 19:38:35 UTC <tgeeky> damn it's late already. I'm going to go make some lunch, and I'll be back. I wanted to discussing negative types / the dirac sea / filling of the dirac sea trick
2013-02-27 19:40:58 UTC <tgeeky> byorgey: if you are still here
2013-02-27 20:09:02 UTC <tgeeky> byorgey: back. here?
2013-02-27 20:22:52 UTC <tgeeky> byorgey: so the dirac sea trick comes about in a few-step process to resolve the fact that (the more correct, complicated version of) the equation E = mc^2 has positive and negative solutions
2013-02-27 20:23:49 UTC <tgeeky> Dirac, like everyone else since him, "knew" that negative energy solutions were absurd, but his work lead him to believe the solution is just as valid as the positive energy solutions.
2013-02-27 20:24:38 UTC <tgeeky> so you have a chart, like this, where E goes from negative infinity, to 0, to positive infinity:
2013-02-27 20:25:26 UTC <tgeeky> <---o--->, where an electron's lowest energy state might look like: <---o-|->
2013-02-27 20:26:21 UTC <tgeeky> Dirac figured that it's absurd to throw away everything left of the 0, but it's also absurd to have genuine negative energy states. So he postulated that these were not absurd, but were instead filled.
2013-02-27 20:26:28 UTC <tgeeky> <|||o--->
2013-02-27 20:27:30 UTC <tgeeky> I think it was almost two years later that he realized that an incomplete filling of these negative energy states would actually be a resonance (particle)
2013-02-27 20:28:22 UTC <tgeeky> If the electron is: <---o-|->, then the un-filled space is the anti-particle: <|-|o--->  
2013-02-27 20:29:21 UTC <tgeeky> and that the sum of the two states: <---o-|-> + <|-|o---> is the "filled dirac sea" <|||o--->
2013-02-27 20:29:36 UTC <tgeeky> byorgey: so, that's the physics side. Does this spark anything re: negative types? :o
2013-02-27 20:37:22 UTC <tgeeky> the moral of the story in my mind is that having holes isn't quite enough, you need this whole filling-of-holes process
2013-02-27 23:53:12 UTC <tgeeky> byorgey: are there even people who are experts on "negative types"?
2013-02-28 00:23:30 UTC <byorgey> tgeeky: presumably.  I don't really know who they are though.
2013-02-28 00:23:54 UTC <tgeeky> byorgey: i hope my short ramble sparks questions other than "how the hell does this help *me*"?
2013-02-28 00:24:29 UTC <byorgey> tgeeky: I'll have to think about the stuff re: filling negative energy states etc.  It seems like it could be relevant but I'm not exactly sure how yet.
2013-02-28 00:25:02 UTC <tgeeky> on n-cat wiki, it says that negative types are just [constructor,eliminator] reversed versions of regular types
2013-02-28 00:25:20 UTC <byorgey> tgeeky: link?
2013-02-28 00:26:12 UTC <tgeeky> http://ncatlab.org/nlab/show/negative+type
2013-02-28 00:29:53 UTC <tgeeky> byorgey: are negative types a large part of your proposal? Or just one among many things involving diagrams+species?
2013-02-28 00:32:28 UTC <tgeeky> i'm ignorant of these things, but regardless of what negative-types are, it seems to me like this "filling in" process isn't included
2013-02-28 00:32:43 UTC <tgeeky> it also sounds a little codata-y
2013-02-28 00:36:28 UTC <byorgey> tgeeky: negative types are not in my proposal at all!
2013-02-28 00:36:53 UTC <byorgey> tgeeky: oh, that ncatlab page is an entirely different use of the term "negative"
2013-02-28 00:37:26 UTC <byorgey> tgeeky: that use of negative is indeed codata-y
2013-02-28 00:37:56 UTC <byorgey> it is just classifying types into two sets by their "polarity", negative and positive
2013-02-28 00:38:09 UTC <byorgey> but all of them are still positive in the species sense
2013-02-28 00:38:36 UTC <byorgey> the ncatlab page negative types are not negative in the sense of being additive inverses of other types
2013-02-28 00:41:43 UTC <tgeeky> the overloaded use of 'species' makes searching for this frustrating
2013-02-28 00:58:23 UTC <byorgey> tgeeky: search for 'virtual species'
2013-02-28 01:27:21 UTC <fryguybob> \o/
2013-02-28 01:27:48 UTC <byorgey> fryguybob: \o/ ?
2013-02-28 01:27:57 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/offsetR.pdf
2013-02-28 01:28:34 UTC <fryguybob> This is offset using radius of curvature to adjust the handle lengths.
2013-02-28 01:29:14 UTC <byorgey> awesome!
2013-02-28 01:31:31 UTC <fryguybob> For comparison, without the RoC factor: http://www.cs.rochester.edu/u/ryates/temp/offset-2.pdf
2013-02-28 01:33:46 UTC <byorgey> yeah, obviously much better
2013-02-28 01:34:29 UTC <byorgey> every time I see those four curves of yours I can't help but read 'SpAl'
2013-02-28 01:41:54 UTC <fryguybob> hehe
2013-02-28 02:13:25 UTC <tgeeky> byorgey: regarding http://byorgey.wordpress.com/2010/11/24/species-subtraction-made-simple/ , why is Neg Z, etc (Neg (Neg Z)) uglier than Succ (Succ Z), etc?
2013-02-28 02:13:41 UTC <tgeeky> or the ugliness is just needing them both?
2013-02-28 02:14:02 UTC <tgeeky> s/needing/having them without needing them/
2013-02-28 02:18:34 UTC <fryguybob> Even better (I was throwing away a sign I needed): http://www.cs.rochester.edu/u/ryates/temp/offsetS.pdf
2013-02-28 02:20:30 UTC <tgeeky> what is this magic you are working on?
2013-02-28 02:20:40 UTC <tgeeky> something about showing curvature using beizer curves? :o
2013-02-28 02:22:34 UTC <fryguybob> tgeeky: Computing the offset of a Bezier segment.
2013-02-28 02:22:38 UTC <byorgey> fryguybob: spiffy!
2013-02-28 02:23:55 UTC <fryguybob> Code: https://gist.github.com/fryguybob/4945944
2013-02-28 02:24:12 UTC <tgeeky> bwhahahhaha
2013-02-28 02:24:15 UTC <tgeeky> the wikipedia links to you
2013-02-28 02:24:16 UTC <tgeeky> bwhahahahaha
2013-02-28 02:24:28 UTC <tgeeky> wait, no it doesn't
2013-02-28 02:24:29 UTC <tgeeky> nevermind me
2013-02-28 02:25:03 UTC <fryguybob> Now I need to polish up with the code for Paths and we can ship it.
2013-02-28 02:26:50 UTC <fryguybob> ACTION Follows the wikipedia link to see what Victor Ostromoukhov does.
2013-02-28 02:41:10 UTC <byorgey> tgeeky: I don't understand your question re: Neg etc.
2013-02-28 02:41:41 UTC <byorgey> tgeeky: Neg (Neg Z) does not type check
2013-02-28 02:43:16 UTC <tgeeky> what is negative 2?
2013-02-28 02:43:49 UTC <fryguybob> I don't see any benefits for us with Victor Ostromoukhov's method.
2013-02-28 02:44:10 UTC <byorgey> tgeeky: in which representation? data I' = Pos Nat | Neg Nat ?
2013-02-28 02:44:22 UTC <byorgey> tgeeky: Neg (S (S Z))
2013-02-28 02:44:32 UTC <tgeeky> oh. that's weird
2013-02-28 02:44:33 UTC <tgeeky> to me
2013-02-28 02:44:52 UTC <byorgey> well, it IS weird
2013-02-28 02:45:00 UTC <byorgey> the point is that it's not a very nice representation to work with
2013-02-28 02:45:08 UTC <tgeeky> I assumed you would do something like Pred (if S Z is succ z)
2013-02-28 02:45:40 UTC <tgeeky> so if S (S Z) is two, P (P Z) is negative two
2013-02-28 02:46:04 UTC <tgeeky> s/I would have/
2013-02-28 02:46:30 UTC <byorgey> tgeeky: you could do that, sure.  But that would be annoying for many of the same reasons data I' = Pos Nat | Neg Nat  is annoying
2013-02-28 02:47:23 UTC <byorgey> not to mention that you have things like  P (S (P (S Z)))
2013-02-28 02:48:33 UTC <tgeeky> yeah, I thought of that but I figured it was the same (or nearly the same) problem as (-2) == (5 + -7) == (6 + -8) == ...
2013-02-28 02:48:54 UTC <tgeeky> same kind of redundancy
2013-02-28 02:49:53 UTC <tgeeky> so what kind of presentation format does one use to propose a thesis? 20 minutes powerpoint? :o
2013-02-28 02:52:46 UTC <fryguybob> One hour and twenty containers of play-doh.
2013-02-28 02:53:16 UTC <tgeeky> that sounds pretty awesome.
2013-02-28 02:54:35 UTC <tgeeky> 8 minutes, silly string.
2013-02-28 03:02:39 UTC <byorgey> tgeeky: a 35-page document and a 45 minute powerpoint =P
2013-02-28 03:02:55 UTC <byorgey> where by "powerpoint" I mean "beamer"
2013-02-28 03:03:43 UTC <byorgey> tgeeky: you're right, the redundancy is not really that big of a deal.  The issue is more that implementing algorithms on it is going to involve lots of annoying case analysis
2013-02-28 03:06:13 UTC <tgeeky> byorgey: aside: where did you first / most in-depth-ly learn about comb. species?
2013-02-28 03:06:45 UTC <byorgey> tgeeky: "Combinatorial Species and Tree-Like Structures" by Bergeron, Labelle, and Leroux
2013-02-28 03:07:09 UTC <byorgey> that's really the ONLY place to learn about them
2013-02-28 03:07:13 UTC <byorgey> (in English)
2013-02-28 03:07:36 UTC <tgeeky> who handed that book to you, I mean? Did a math class get taught using it? Or it was extra reading?
2013-02-28 03:08:13 UTC <byorgey> I saw a blog post about combinatorial species and it sounded cool, so I went to the Penn library and checked out the book
2013-02-28 03:08:28 UTC <tgeeky> this was while you were in grad school?
2013-02-28 03:08:31 UTC <byorgey> I then had it checked out for about four years
2013-02-28 03:08:32 UTC <byorgey> yes
2013-02-28 03:08:50 UTC <byorgey> (I now have my own copy)
2013-02-28 03:08:54 UTC <tgeeky> I have eight copies of the book on my computer. It must be important to me.
2013-02-28 03:09:07 UTC <byorgey> haha, what
2013-02-28 03:10:35 UTC <tgeeky> well, 4 of them are pdfs, 4 of them are .djvu-s
2013-02-28 03:11:45 UTC <byorgey> that doesn't make me feel any better
2013-02-28 03:12:39 UTC <tgeeky> for some people it's music and movies, for some people it's e-books.technical
2013-02-28 03:13:20 UTC <byorgey> fair enough =)
2013-02-28 03:13:23 UTC <tgeeky> i also have a habit of picking out e-books that I think might be interesting to me (cs, math, physics) and just coping them
2013-02-28 03:13:39 UTC <byorgey> and not remembering whether you have already copied them before?
2013-02-28 03:13:40 UTC <tgeeky> copying* to a folder -- actually, for the reason that using bookmarks, etc, modifies the file
2013-02-28 03:14:02 UTC <tgeeky> it seems my deduplicator software doesn't work quite as well as I hoped :O
2013-02-28 03:16:31 UTC <tgeeky> byorgey: if you're ever in a "man, I wish I could lay my hands on _______ (textbook, technical book, etc)"
2013-02-28 03:17:12 UTC <tgeeky> I might be your guy. :o
2013-02-28 03:18:41 UTC <tgeeky> I always wonder what I would do when/if I publish a paper using results in these e-books. Perhaps I'll send a fiver to each citation. :o
2013-03-01 20:45:14 UTC <carter> byorgey woot! i think thats my most high impact patch i've done for haskell libs yet :)
2013-03-01 20:46:50 UTC <byorgey> carter: heh, and it certainly has the highest impact/size of actual change ratio =)
2013-03-01 20:47:40 UTC <carter> yeah, a thousand haskellers rejoiced because they no longer have to remember how to mechanically add "hs-source-dirs:" constantly :) 
2013-03-01 21:10:08 UTC <fryguybob> byorgey: Did you give your talk yet?
2013-03-01 21:10:17 UTC <byorgey> fryguybob: no, it's on Monday
2013-03-01 21:10:28 UTC <fryguybob> Ah, ok.
2013-03-01 21:30:40 UTC <carter> talk on what? :)
2013-03-01 21:31:22 UTC <byorgey> carter: my thesis proposal
2013-03-01 21:31:27 UTC <byorgey> so, species.
2013-03-01 21:31:27 UTC <carter> gluck!
2013-03-01 21:31:40 UTC <carter> ooo
2013-03-01 21:31:50 UTC <byorgey> thanks!
2013-03-01 21:31:54 UTC <carter> read "analytic combinatorics" when you have some time then
2013-03-01 21:32:17 UTC <byorgey> yup, I'm currently enrolled in the Coursera course Sedgewick is teaching
2013-03-01 21:32:34 UTC <byorgey> very very related but with a different focus.
2013-03-01 21:32:44 UTC <carter> ooo
2013-03-01 21:33:02 UTC <carter> yeah, if I had the time i'd do so too
2013-03-01 21:33:04 UTC <carter> finite timee though
2013-03-01 21:33:17 UTC <carter> i just ordered the book even though the pdf is nice
2013-03-01 21:34:06 UTC <byorgey> yep, I have a dead tree copy of it sitting about 12 inches from me
2013-03-01 21:55:22 UTC <luite> oh cool i didn't know there was a course
2013-03-01 21:55:30 UTC <luite> do have the book though
2013-03-01 21:59:36 UTC <luite> hm isn't it possible to just download lectures and exercises?
2013-03-02 02:57:13 UTC <tgeeky> yeah, i was looking for that book just yesterday
2013-03-02 02:57:24 UTC <tgeeky> i kept typing in 'flaojet' with no results
2013-03-02 02:57:34 UTC <tgeeky> flaJOlet
2013-03-02 03:13:22 UTC <tgeeky> i posted it everywhere else, may as well put it here: category theory for scientists 
2013-03-02 03:13:28 UTC <tgeeky> http://arxiv.org/abs/1302.6946
2013-03-02 16:53:25 UTC <fryguybob> Looks like someone could use some diagrams-haddock: http://hackage.haskell.org/packages/archive/gloss/1.7.8.2/doc/html/Graphics-Gloss-Geometry-Line.html
2013-03-02 16:53:48 UTC <byorgey> hahaha
2013-03-02 16:54:05 UTC <byorgey> that would be hilarious if gloss used diagrams for its documentation =)
2013-03-02 16:54:28 UTC <fryguybob> :D
2013-03-02 16:54:50 UTC <byorgey> but we can tell Ben the tricks for including images with the documentation, and let him generate the images with gloss =)
2013-03-02 16:57:57 UTC <fryguybob> GSOC: ascii art to diagrams compiler, then luite can scour his hackage mirror for diagrams.
2013-03-02 16:58:23 UTC <byorgey> hehehe
2013-03-02 16:58:32 UTC <byorgey> an ascii art TO diagrams compiler, now there's an idea =D
2013-03-02 16:59:04 UTC <byorgey> "don't know how to use any software other than emacs but want to draw beautiful pictures?  no problem!"
2013-03-02 16:59:53 UTC <fryguybob> We would finally have a use for the pony package.
2013-03-02 17:02:10 UTC <byorgey> =D
2013-03-02 20:17:31 UTC <byorgey> hi zalenix 
2013-03-02 20:17:46 UTC <zalenix> hi byorgey !
2013-03-02 20:18:50 UTC <zalenix> I am a CS student looking for a haskell project. I want to gain experience in haskell coding through gsoc 2013, which has led me to this place
2013-03-02 20:20:05 UTC <byorgey> zalenix: cool, welcome.  I guess you have probably seen this page: http://www.haskell.org/haskellwiki/Diagrams/GSoC ?
2013-03-02 20:20:24 UTC <zalenix> Yes!
2013-03-02 20:20:41 UTC <zalenix> I am going through this page and am learning more about the ideas currently
2013-03-02 20:22:13 UTC <byorgey> zalenix: great.
2013-03-02 20:22:46 UTC <byorgey> zalenix: the best place to start would just be to go through the tutorial and/or user manual, and play around with creating your own diagrams
2013-03-02 20:23:13 UTC <zalenix> That is exactly what is on my to-do list right now!
2013-03-02 20:25:54 UTC <byorgey> excellent =)
2013-03-02 20:26:17 UTC <byorgey> have fun, ask questions in here, and of course show us your creations =)
2013-03-02 20:27:21 UTC <zalenix> thanks byorgey ! =)
2013-03-02 20:30:49 UTC <luite> \o/
2013-03-02 20:31:06 UTC <luite> hm when is the gsoc application deadline?
2013-03-02 20:31:45 UTC <byorgey> luite: organizations apply at the end of this month.
2013-03-02 20:32:08 UTC <byorgey> luite: the deadline for student applications is sometime in May I think.
2013-03-02 20:32:15 UTC <luite> do you want a separate diagrams organization?
2013-03-02 20:32:47 UTC <byorgey> I wasn't planning on it.
2013-03-02 20:32:59 UTC <byorgey> do you think we should?
2013-03-02 20:33:19 UTC <byorgey> I don't really know what is involved in applying and/or what the benefits would be.
2013-03-02 20:33:55 UTC <luite> nah haskell.org will probably be fine
2013-03-02 20:34:12 UTC <luite> maybe you can get some extra slots with more orgs
2013-03-02 20:35:00 UTC <byorgey> I figure if we do this for a few years with some success then we can think about applying as a separate org
2013-03-02 20:35:06 UTC <byorgey> like darcs is doing this year, apparently
2013-03-02 20:35:08 UTC <luite> right
2013-03-02 20:35:24 UTC <luite> oh i thought darcs had been a separate org for a few years now
2013-03-02 20:35:31 UTC <byorgey> oh? maybe so.
2013-03-02 20:37:51 UTC <luite> bleh is there an easy way to export/mount a filesystem securerly over the internet that's more reliable and performant than sshfs?
2013-03-02 20:38:55 UTC <byorgey> no idea.
2013-03-02 20:40:34 UTC <luite> this thing loses its connection every few minutes, i need to find something better before i throw my laptop out of the window
2013-03-02 20:40:52 UTC <tgeeky> well, you can use any normal less secure system combined with a VPN
2013-03-02 20:41:16 UTC <byorgey> throwing one's laptop out of the window is not good for filesystem reliability
2013-03-02 20:41:30 UTC <tgeeky> byorgey: nine out of ten IT professionals agree.
2013-03-02 20:41:33 UTC <tgeeky> the other is a psycopath
2013-03-02 20:41:53 UTC <luite> tgeeky: does NFS work well over the internet?
2013-03-02 20:42:04 UTC <luite> with perhaps minor packet loss and higher latency
2013-03-02 20:42:16 UTC <tgeeky> luite: yep, sure does.
2013-03-03 14:00:35 UTC <insitu> hello
2013-03-03 14:00:53 UTC <insitu> I am trying to use diagrams to draw 2D line charts
2013-03-03 14:01:55 UTC <insitu> did anybody already tried to do that? If so, any sample that I can study? 
2013-03-04 19:49:46 UTC <fryguybob> ACTION hopes byorgey's talk is going well.
2013-03-04 20:04:51 UTC <byorgey> thanks
2013-03-04 20:04:54 UTC <byorgey> it went OK!
2013-03-04 20:05:13 UTC <fryguybob> Good!
2013-03-04 20:05:20 UTC <byorgey> but it's done now. thank goodness.
2013-03-04 20:16:25 UTC <carter> congrats!
2013-03-04 20:16:32 UTC <carter> now go read Analytic Combinatorics :)
2013-03-04 20:22:51 UTC <byorgey> no, I'm going to go hack on diagrams =)
2013-03-04 20:23:01 UTC <byorgey> I want to NOT think about this for at least a week.
2013-03-04 20:23:12 UTC <fryguybob> :D
2013-03-04 21:38:00 UTC <fryguybob> I have some silly dynamic programming problems to do and one involved decomposing a rectangle into squares: http://www.cs.rochester.edu/u/ryates/temp/square.pdf
2013-03-04 21:50:35 UTC <byorgey> neato
2013-03-04 21:50:40 UTC <byorgey> something with the golden ratio?
2013-03-04 22:01:51 UTC <fryguybob> byorgey: I think the distribution of the cuts might be maximized as the ratio of the sides approaches phi.  Something like that.
2013-03-04 22:02:17 UTC <fryguybob> Basically my diagrams were not looking very interesting until I put in some sides with a ratio close to phi :D
2013-03-04 22:03:22 UTC <byorgey> hehe, I see =)
2013-03-04 22:07:29 UTC <luite> hm
2013-03-04 22:09:14 UTC <fryguybob> The take away here is, using diagrams as values makes for easy "verification" of your algorithm.
2013-03-04 22:14:16 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149124280 http://travis-ci.org/diagrams/diagrams-haddock/builds/5238391 The build passed.
2013-03-04 23:16:27 UTC <luite> byorgey: use the fontforge program to convert postscript and opentype fonts to svg
2013-03-04 23:16:35 UTC <byorgey> ah, cool
2013-03-04 23:42:28 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149a01a82 http://travis-ci.org/diagrams/diagrams-haddock/builds/5241448 The build passed.
2013-03-04 23:45:39 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14bbd260c http://travis-ci.org/diagrams/diagrams-haddock/builds/5241554 The build passed.
2013-03-05 00:57:50 UTC <byorgey> check out the NEW AND IMPROVED diagrams-haddock!  It slices! It dices! It processes whole Cabal packages at once! It won't eat your files!
2013-03-05 00:58:23 UTC <fryguybob> ooooOOOoooo
2013-03-05 00:58:33 UTC <fryguybob> But my files are tasty!
2013-03-05 00:58:47 UTC <byorgey> right, which is why diagrams-haddock lets YOU eat them YOURSELF!
2013-03-05 00:59:01 UTC <fryguybob> I'm sold!
2013-03-05 00:59:09 UTC <byorgey> =D
2013-03-05 01:01:46 UTC <byorgey> I am unsure what the status is re: CPP.  There's no code in there to handle CPP, and yet I ran it over lens with no errors.
2013-03-05 01:02:00 UTC <fryguybob> Humm
2013-03-05 01:03:57 UTC <byorgey> ah, no, it still fails on #.
2013-03-05 01:04:02 UTC <fryguybob> Ok
2013-03-05 01:04:09 UTC <byorgey> But we should be able to incorporate your CPP stuff pretty easily now
2013-03-05 01:04:19 UTC <fryguybob> I'll do that now for my branch.
2013-03-05 01:04:42 UTC <byorgey> awesome
2013-03-05 01:05:57 UTC <byorgey> hmm, I guess we should probably have some logging output.  Like, "Processing foo/bar.hs..."
2013-03-05 01:06:48 UTC <byorgey> ah, diagrams-haddock does fail on lens.  Not sure what I did before where I thought it wasn't.
2013-03-05 01:07:11 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14169fb02 http://travis-ci.org/diagrams/diagrams-haddock/builds/5242907 The build passed.
2013-03-05 01:07:57 UTC <fryguybob> Even with CPP there are a couple of places where it imports a file and cpp doesn't know where to find it.
2013-03-05 01:09:20 UTC <byorgey> fair enough.  I don't think it's possible to handle it perfectly.
2013-03-05 01:22:58 UTC <fryguybob> byorgey: Updated CPP. https://github.com/fryguybob/diagrams-haddock/
2013-03-05 01:28:21 UTC <fryguybob> Humm, I need to change what it uses to write back with.
2013-03-05 01:45:53 UTC <byorgey> fryguybob: hmm? what do you mean re: change what it uses to write back with?
2013-03-05 01:49:21 UTC <fryguybob> So when it writes back it is using the source from after the CPP pass.
2013-03-05 01:49:57 UTC <byorgey> fryguybob: you mean from before the CPP pass?
2013-03-05 01:50:17 UTC <byorgey> fryguybob: I left a comment on your merge commit
2013-03-05 01:58:16 UTC <fryguybob> Oh, ok.  I was thinking that it needed the other one.
2013-03-05 02:15:41 UTC <fryguybob> byorgey: I fixed it.  Much better now.
2013-03-05 02:16:35 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14efa942f http://travis-ci.org/diagrams/diagrams-haddock/builds/5243985 The build passed.
2013-03-05 02:17:13 UTC <byorgey> fryguybob: awesome, looks good
2013-03-05 02:17:26 UTC <byorgey> fryguybob: want to open a pull request so I can merge it in?
2013-03-05 02:19:49 UTC <fryguybob> done
2013-03-05 02:20:50 UTC <fryguybob> Given enough info from the cabal I think we should be able to include handing of #includes.
2013-03-05 02:21:36 UTC <byorgey> fryguybob: Oh, cool.  Have you taken a look at what I added in tools/diagrams-haddock.hs?
2013-03-05 02:22:31 UTC <byorgey> When you invoke it on a cabal project it gets its hands on the whole LocalBuildInfo record which has all the info from the .cabal file (after conditionals have been resolved)
2013-03-05 02:22:41 UTC <fryguybob> byorgey: Just briefly.  I'll see if I can get the  include-dirs  field and propogate that to cpphs.
2013-03-05 02:22:56 UTC <byorgey> I just use it to get the list of exposed modules, but it's easy to pull out anything else too
2013-03-05 02:23:01 UTC <fryguybob> ok
2013-03-05 02:32:41 UTC <byorgey> fryguybob: is there a particular reason for cpphs >= 1.16, or just because you haven't tested with prior versions?
2013-03-05 02:32:52 UTC <byorgey> (it seems I have 1.15 installed)
2013-03-05 02:33:03 UTC <fryguybob> I don't think there was any reason for that.
2013-03-05 02:33:49 UTC <byorgey> OK.  I'm trying it with 1.15
2013-03-05 02:34:36 UTC <byorgey> seems to work fine.  does much better on lens now =)
2013-03-05 02:34:47 UTC <fryguybob> Super
2013-03-05 02:36:56 UTC <fryguybob> Does CmdArgs support concatenating multiple arguments?
2013-03-05 02:38:15 UTC <byorgey> fryguybob: yes, e.g. if you use a list field   foo :: [String]  in the options record,  doing  --foo "blah" --foo "bar" --foo "baz"  gets you  foo = ["blah", "bar", "baz"]
2013-03-05 02:38:23 UTC <byorgey> assuming I understood your question correctly
2013-03-05 02:38:43 UTC <fryguybob> byorgey: Yes.
2013-03-05 02:40:16 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 143f45864 http://travis-ci.org/diagrams/diagrams-haddock/builds/5244301 The build passed.
2013-03-05 02:46:23 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14801435c http://travis-ci.org/diagrams/diagrams-haddock/builds/5244397 The build passed.
2013-03-05 02:48:02 UTC <fryguybob> Humm, I added in the includes but it is still having problems with Fold.hs from lens.
2013-03-05 02:56:35 UTC <byorgey> fryguybob: hmm.  It looks like it wants monoids.x which lives in includes/ ?
2013-03-05 02:58:56 UTC <fryguybob> byorgey: I think HSE doesn't like the #line pragmas that it is sprinkling around.
2013-03-05 02:59:04 UTC <fryguybob> I can turn those off though.
2013-03-05 03:01:33 UTC <byorgey> really?  hmm, I thought HSE could deal with those
2013-03-05 03:02:01 UTC <fryguybob> byorgey: Well, it is emitting some that are a little strange.  like:  #line 1 "./include
2013-03-05 03:02:10 UTC <byorgey> at least, it has an option to ignore them, which I assumed meant that it could also not-ignore them.
2013-03-05 03:02:12 UTC <fryguybob> No close quote, no full file name.
2013-03-05 03:02:15 UTC <byorgey> oh, I see, weird.
2013-03-05 03:02:35 UTC <fryguybob> But it is easy to turn them off and we don't need them.
2013-03-05 03:02:42 UTC <byorgey> great.
2013-03-05 03:04:58 UTC <fryguybob> I suppose HSE could be using them to adjust the line numbers in error reporting...
2013-03-05 03:05:57 UTC <byorgey> yes, I think that's what it does
2013-03-05 03:06:35 UTC <fryguybob> I'll look into reporting a bug to cpphs and have the lines turned off for now.
2013-03-05 03:06:46 UTC <byorgey> sure, that sounds reasonable.
2013-03-05 03:10:11 UTC <fryguybob> Oh, it does do {-# LINE ... #-} comments correctly.  I wonder if HSE picks those up for line numbering.
2013-03-05 03:11:35 UTC <byorgey> ohhhh, that's what the 'ignoreLinePragmas' option is about, not #line directives
2013-03-05 03:12:15 UTC <byorgey> what sorts of tools generate {-# LINE ... #-} comments?
2013-03-05 03:12:31 UTC <byorgey> I suppose stuff like hsc2hs?
2013-03-05 03:12:51 UTC <fryguybob> Yeah I think happy and alex might also.
2013-03-05 03:12:55 UTC <byorgey> right
2013-03-05 03:13:21 UTC <byorgey> anyway, turn off the #line directives! full steam ahead!
2013-03-05 03:58:58 UTC <mgsloan> As you can tell by the fact that SoH does not yet support diagrams, I haven't had any spare cycles yet!
2013-03-05 03:59:26 UTC <mgsloan> awesome work on diagrams-haddocks, I may appropriate some of the code to provide a Haddocks --> SoH tool (not that there are even plans for this)
2013-03-05 04:00:01 UTC <byorgey> mgsloan: hah, no worries!  You're helping make something awesome which is good enough for me. =)
2013-03-05 04:00:26 UTC <byorgey> mgsloan: cool, appropriate away!
2013-03-05 04:00:36 UTC <byorgey> though maybe wait till the dust settles a bit =)
2013-03-05 04:01:00 UTC <mgsloan> Probably a good idea!  Maybe I'll even split off the bit that does the haddocks parsing
2013-03-05 04:02:03 UTC <byorgey> well, we mostly rely on haskell-src-exts to do the haddock parsing
2013-03-05 04:02:45 UTC <byorgey> the only parsing we do is very diagrams-haddock specific (looking for <<URLs>> of a certain form)
2013-03-05 04:05:05 UTC <mgsloan> ohh, gotcha.  I haven't looked very hard at it, as you can tell
2013-03-05 04:05:57 UTC <byorgey> sure
2013-03-05 04:06:01 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1472aee25 http://travis-ci.org/diagrams/diagrams-haddock/builds/5245497 The build passed.
2013-03-05 04:24:03 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14754ee93 http://travis-ci.org/diagrams/diagrams-haddock/builds/5245697 The build passed.
2013-03-05 05:44:21 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1407d2377 http://travis-ci.org/diagrams/diagrams-haddock/builds/5246581 The build passed.
2013-03-05 05:50:23 UTC <byorgey> I think diagrams-haddock is getting close to being ready for an initial release
2013-03-05 05:50:51 UTC <byorgey> but maybe we should try using it to pimp a few packages first, to have some nice examples to show off
2013-03-05 05:51:20 UTC <byorgey> anyway, I'm off to bed!
2013-03-05 05:54:15 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1457aea67 http://travis-ci.org/diagrams/diagrams-haddock/builds/5246710 The build passed.
2013-03-05 11:04:15 UTC <cmears2> Hello all
2013-03-05 11:04:32 UTC <cmears2> I just noticed the SVGFonts package (due to the discussion on haskell-cafe)
2013-03-05 11:04:38 UTC <cmears2> This seems like a really useful thing
2013-03-05 11:06:38 UTC <cmears2> There is a slight bug in that it makes the trails unclosed, which makes the stroked letters miss a line occasionally
2013-03-05 13:44:44 UTC <fryguybob> byorgey: What do you think of making a version of processHaddockDiagrams that takes a full CpphsOptions record?  I think we can easily include defines and perhaps the record makes more sense.
2013-03-05 13:45:15 UTC <fryguybob> In the case of lens it already has the HLINT define to avoid problems due to HSE.
2013-03-05 13:55:19 UTC <byorgey> fryguybob: ah, sure, that could make sense
2013-03-05 13:55:38 UTC <byorgey> although if you want to allow users to specify the entire CpphsOptions record from the diagrams-haddock command line that would be tedious.
2013-03-05 13:55:44 UTC <byorgey> (and probably unnecessary)
2013-03-05 13:55:56 UTC <byorgey> but maybe that's not what you had in mind.
2013-03-05 13:56:04 UTC <fryguybob> Right, I was going to just have includes and defines.
2013-03-05 13:56:33 UTC <fryguybob> In the tool.
2013-03-05 13:59:55 UTC <byorgey> right, makes sense.
2013-03-05 14:08:25 UTC <byorgey> cmears: oh, thanks for the report!  Can you file a bug report at https://github.com/tkvogt/SVGFonts/issues ?
2013-03-05 14:09:11 UTC <byorgey> hmm, we ought to push SVGFonts more.  I haven't paid that much attention to it but I'm not sure why.
2013-03-05 14:39:23 UTC <fryguybob> Boo.  Cabal doesn't export the function I need.
2013-03-05 14:48:57 UTC <byorgey> awww
2013-03-05 14:49:01 UTC <byorgey> which function?
2013-03-05 14:49:42 UTC <fryguybob> It can build up commandline arguments for cpphs.
2013-03-05 14:50:03 UTC <fryguybob> I suppose we could consider just using cabal to run all the preprocessing.
2013-03-05 14:52:15 UTC <byorgey> yes, that might be a better idea anyway
2013-03-05 14:52:45 UTC <byorgey> cabal already knows how to do all of this, no point in reimplementing everything =)
2013-03-05 14:52:52 UTC <fryguybob> Right
2013-03-05 14:53:14 UTC <byorgey> I'm gonna go add some illustrations to the diagrams-contrib documentation =)
2013-03-05 14:53:28 UTC <fryguybob> Excellent
2013-03-05 15:01:13 UTC <fryguybob> Humm, that does complicate things if diagrams-haddock only sees the temp files that have been preprocessed we can't easily do updates.
2013-03-05 15:02:40 UTC <fryguybob> As it is now, if we have a diagram url in a not-included #ifdef block it will complain about not finding the code for the url (it finds the url in the original source, but not the code from the preprocessed/HSE pass).
2013-03-05 15:03:57 UTC <byorgey> hmm, right.  It only prints a warning though.  I mean it doesn't stop it from working on everything else in the file
2013-03-05 15:04:06 UTC <fryguybob> Right
2013-03-05 15:04:21 UTC <byorgey> I don't think we should spend TOO much energy worrying about corner cases like this until someone complains =)
2013-03-05 15:04:41 UTC <byorgey> though I certainly appreciate the value of Doing Things Right
2013-03-05 15:05:08 UTC <fryguybob> Yeah, I'll finish up these changes and that should get us to where we can process all of lens.
2013-03-05 15:06:04 UTC <byorgey> well, except for the modules with parse errors on ! and so on, right?
2013-03-05 15:06:10 UTC <byorgey> or do you mean those too?
2013-03-05 15:06:29 UTC <byorgey> OH, because those are already CPPed-out for hint?
2013-03-05 15:06:29 UTC <fryguybob> byorgey: Those too because I think they are all protected by CPP HLINT.
2013-03-05 15:06:33 UTC <fryguybob> Right
2013-03-05 15:06:36 UTC <byorgey> hlint I mean
2013-03-05 15:06:39 UTC <byorgey> right, got it
2013-03-05 15:07:49 UTC <fryguybob> Humm, I don't want to parse everything so I'll just allow for simple defines (ones in a cabal file can be more complex).
2013-03-05 15:24:51 UTC <fryguybob> Well, now that defines are working we get DEFAULT_SIGNATURES turned on in lens leading to HSE failure on that... but the HLINT things are safe :D.
2013-03-05 15:25:17 UTC <byorgey> doh!
2013-03-05 15:30:20 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1417c628b http://travis-ci.org/diagrams/diagrams-contrib/builds/5256887 The build passed.
2013-03-05 15:33:56 UTC <byorgey> oh man, this is so sexy
2013-03-05 15:33:59 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-haddock-screenshot.png
2013-03-05 15:35:32 UTC <fryguybob> Nice!
2013-03-05 15:37:06 UTC <fryguybob> byorgey: I think I remember something about being able to hide the diagram code sections from Haddock.  Is there a way to do that?
2013-03-05 15:37:33 UTC <byorgey> fryguybob: you can't hide them per se, but you can simply put them inside a non-Haddock comment
2013-03-05 15:37:42 UTC <byorgey> since the code blocks don't have to go right next to the URLs
2013-03-05 15:37:54 UTC <fryguybob> byorgey: Ah, right.
2013-03-05 15:38:14 UTC <byorgey> for diagrams-contrib of course I want to show the code as well
2013-03-05 15:38:57 UTC <fryguybob> If we had an external LaTeX renderer then this could be a (somewhat roundabout) way to get a block of equations into the Haddock.
2013-03-05 15:39:15 UTC <fryguybob> byorgey: Right
2013-03-05 15:39:34 UTC <byorgey> heh, rather roundabout indeed =)
2013-03-05 15:39:37 UTC <byorgey> but yes, that could work
2013-03-05 15:48:08 UTC <byorgey> fryguybob: we should make a little test suite of files that diagrams-haddock should be able to deal with, perhaps along with the expected outputs
2013-03-05 15:48:45 UTC <byorgey> I'm bad about making test suites.  It's always about ten times less exciting than the next feature.
2013-03-05 15:50:15 UTC <fryguybob> byorgey: Yeah, I have a few locally here, I'll work on getting them in with tests.
2013-03-05 16:08:00 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 145ded2c9 http://travis-ci.org/diagrams/diagrams-haddock/builds/5257637 The build passed.
2013-03-05 19:43:49 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 148f8eb84 http://travis-ci.org/diagrams/diagrams-lib/builds/5263522 The build passed.
2013-03-05 19:46:41 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14e862b3b http://travis-ci.org/diagrams/diagrams-postscript/builds/5263618 The build passed.
2013-03-05 19:47:27 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 1495cbdc6 http://travis-ci.org/diagrams/diagrams-svg/builds/5263575 The build passed.
2013-03-05 19:48:54 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06master 14e382d4b http://travis-ci.org/diagrams/diagrams-cairo/builds/5263573 The build passed.
2013-03-05 19:59:47 UTC <3JTAAP0IP> [travis-ci] 13diagrams-builder/06master 14f8f8b36 http://travis-ci.org/diagrams/diagrams-builder/builds/5263827 The build passed.
2013-03-05 20:04:40 UTC <lemao> I have just stumbled upon diagrams and wondering how far the current status quo is from being able to render sequence diagrams from test a la sdedit?
2013-03-05 20:04:53 UTC <lemao> test == text
2013-03-05 20:17:58 UTC <byorgey> hi lemao, I am not familiar with sequence diagrams or sdedit, can you explain a bit more?
2013-03-05 20:18:34 UTC <lemao> byorgey: hi! take a quick peak at this example: http://sdedit.sourceforge.net/example/index.html
2013-03-05 20:18:44 UTC <byorgey> also, I am on a crappy coffeeshop internet connection that keeps dropping, so if I stop responding just be patient =)
2013-03-05 20:19:20 UTC <byorgey> ah, I see
2013-03-05 20:19:22 UTC <lemao> byorgey: it is basically a textual DSL to general sequence diagrams
2013-03-05 20:19:47 UTC <lemao> bergey: you can then include it in asciidoc/markdown and have it generate the diagrams for you
2013-03-05 20:19:56 UTC <byorgey> well, we have no code specifically for drawing sequence diagrams, but it looks like they should be easy to generate using diagrams
2013-03-05 20:21:09 UTC <byorgey> and one of the great benefits of diagrams being embedded in Haskell means it is easy to combine with other libraries, e.g. to parse a sequence diagram description or whatever
2013-03-05 20:21:38 UTC <byorgey> hehe, byorgey /= bergey =)
2013-03-05 20:21:51 UTC <lemao> byorgey: oops!
2013-03-05 20:22:30 UTC <byorgey> we do have strikingly similar nicks, but it's a complete coincidence
2013-03-05 20:22:52 UTC <byorgey> lemao: anyway, are you interested in trying to draw some sequence diagrams yourself?
2013-03-05 20:22:53 UTC <lemao> byorgey: I have been drawing these seqdiagrams by hand using sdedit, basically reverse engineering Haskell call sequences
2013-03-05 20:23:29 UTC <byorgey> ah, I see
2013-03-05 20:23:51 UTC <lemao> byorgey: it seems that using a Haskell parsing library to parse a set of modules and then a general filtering criteria one could generate a focused seq diagram
2013-03-05 20:24:00 UTC <byorgey> sure
2013-03-05 20:24:22 UTC <lemao> byorgey: SourceGraph is nice but too much imo. I just want to see the layering and investigate call paths through the layers
2013-03-05 20:24:33 UTC <byorgey> sounds quite feasible
2013-03-05 20:25:36 UTC <byorgey> and haskell-src-exts is a very nice Haskell parsing library
2013-03-05 20:26:42 UTC <lemao> byorgey: I was actually curious about that: wouldnt a subset of GHC compiler be the ideal candidate for this parsing lib?
2013-03-05 20:28:42 UTC <byorgey> lemao: no, because to just get a parse tree out of the GHC API is really complicated
2013-03-05 20:28:55 UTC <lemao> byorgey: ok
2013-03-05 20:29:06 UTC <lemao> byorgey: second general question about diagrams... 
2013-03-05 20:29:16 UTC <byorgey> I mean, it might be ideal *if* GHC were extensively refactored to split out a nice standalone parsing module.  But it is not that simple.
2013-03-05 20:29:19 UTC <byorgey> sure
2013-03-05 20:29:25 UTC <lemao> byorgey: have you heard of d3.js?
2013-03-05 20:29:32 UTC <byorgey> yes, I have
2013-03-05 20:30:10 UTC <lemao> is there is way to bind data to diagrams and as the data changes have the digrams change?
2013-03-05 20:30:57 UTC <byorgey> lemao: no, not at the moment
2013-03-05 20:31:07 UTC <byorgey> there are some experiments in that direction
2013-03-05 20:31:12 UTC <byorgey> but don't hold your breath =)
2013-03-05 20:32:33 UTC <lemao> byorgey: sure. there is always too much that can be done and too little time
2013-03-05 20:34:20 UTC <byorgey> indeed =)
2013-03-05 20:34:51 UTC <byorgey> right now we are working on a tool to let you embed diagrams code in your Haddock documentation, and end up with pictures in your documentation
2013-03-05 20:39:13 UTC <lemao> byorgey: that would be great. will there be a special high-level dsl for specifying the pictures?
2013-03-05 20:39:58 UTC <byorgey> lemao: I'm not sure what you mean.  diagrams already is a special high-level DSL =)
2013-03-05 20:40:28 UTC <byorgey> We don't have in mind any particular types of illustrations that people might want to include in their documentation
2013-03-05 20:40:53 UTC <byorgey> it could be anything at all.  Whatever helps people understand your library.
2013-03-05 20:46:24 UTC <carter> byorgey that'll be awesome! You could generate visuals reps of interesting datastructures
2013-03-05 20:46:37 UTC <byorgey> yep, that would be one cool use case
2013-03-05 20:47:23 UTC <carter> byorgey crazy idea: what about a latex package that lets you embed diagrams code in a latex doc ?
2013-03-05 20:47:41 UTC <carter> (assuming diagrams is installed etc)
2013-03-05 20:47:56 UTC <carter> migth be simpler though jsut generate out of band though
2013-03-05 20:48:04 UTC <byorgey> carter: uh, that already exists =)
2013-03-05 20:48:06 UTC <carter> and then just use graphicx
2013-03-05 20:48:08 UTC <carter> oh
2013-03-05 20:48:09 UTC <carter> ok
2013-03-05 20:48:21 UTC <carter> this? http://hackage.haskell.org/package/diagrams-builder-0.2.0.0
2013-03-05 20:48:23 UTC <carter> cool
2013-03-05 20:48:30 UTC <byorgey> that's an old version
2013-03-05 20:48:45 UTC <byorgey> but yes, if you get the source tarball for that package it comes with 'diagrams-latex.sty'
2013-03-05 20:49:02 UTC <carter> starring the github
2013-03-05 20:49:04 UTC <byorgey> https://github.com/diagrams/diagrams-builder/blob/master/latex/diagrams-latex.sty
2013-03-05 20:49:07 UTC <byorgey> use this one
2013-03-05 20:50:17 UTC <lemao> byorgey: my knowledge of diagrams is thin, but by high-level I was thinking about a DSL to render more specific things : a call, a module, etc and have the figures and layout be done automatically for you 
2013-03-05 20:50:51 UTC <lemao> byorgey: but I could be completely off ... maybe is time to RTFM
2013-03-05 20:51:15 UTC <lemao> byorgey: in any case, diagrams looks great!
2013-03-05 20:51:58 UTC <byorgey> lemao: right, you're thinking of diagrams to illustrate the structure of the package, but I am thinking much more generally than that.
2013-03-05 20:52:49 UTC <byorgey> like maybe you have a package for doing path-finding, and you want to illustrate some function with a picture of a path that the algorithm finds
2013-03-05 20:53:23 UTC <byorgey> we are also going to use it to illustrate the diagrams documentation itself, to show examples
2013-03-05 20:53:45 UTC <byorgey> lemao: but it's easy to build higher-level DSLs for particular things on top of diagrams
2013-03-05 20:55:40 UTC <lemao> byorgey: ok, I will bug you later for some directions
2013-03-05 20:55:44 UTC <lemao> byorgey: have to go now
2013-03-05 20:55:51 UTC <byorgey> sounds good
2013-03-05 20:55:55 UTC <byorgey> talk to you later
2013-03-05 21:28:53 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 144b420f1 http://travis-ci.org/diagrams/diagrams-haddock/builds/5266031 The build passed.
2013-03-05 21:55:50 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14f4083e5 http://travis-ci.org/diagrams/diagrams-haddock/builds/5267059 The build passed.
2013-03-05 21:59:00 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 145407e42 http://travis-ci.org/diagrams/diagrams-contrib/builds/5267158 The build passed.
2013-03-05 22:17:08 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14f085551 http://travis-ci.org/diagrams/diagrams-contrib/builds/5267752 The build passed.
2013-03-06 00:48:29 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 149cd6419 http://travis-ci.org/diagrams/diagrams-contrib/builds/5271444 The build passed.
2013-03-06 01:47:36 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 14f3a216e http://travis-ci.org/diagrams/diagrams-core/builds/5272394 The build passed.
2013-03-06 02:02:32 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 144c567fc http://travis-ci.org/diagrams/diagrams-core/builds/5272622 The build passed.
2013-03-06 02:30:59 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 146853930 http://travis-ci.org/diagrams/diagrams-contrib/builds/5272916 The build passed.
2013-03-06 16:53:21 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 145cc9172 http://travis-ci.org/diagrams/diagrams-haddock/builds/5288549 The build passed.
2013-03-06 20:18:10 UTC <fryguybob> byorgey: By the way, I submitted the #line bug to cpphs.  It is due to the trailing slash causing // which is then stripped off as a comment.
2013-03-06 20:19:37 UTC <byorgey> fryguybob: ah, I see, nice
2013-03-06 20:20:27 UTC <byorgey> fryguybob: did you see the two tickets I filed on diagrams-haddock?
2013-03-06 20:20:54 UTC <byorgey> any thoughts/ideas/comments appreciated
2013-03-06 20:22:14 UTC <fryguybob> Ok, I'll take a look
2013-03-06 20:22:37 UTC <fryguybob> Do you have the haddocks for the changes to contrib up somewhere?
2013-03-06 20:25:09 UTC <byorgey> No, but I could
2013-03-06 20:26:42 UTC <byorgey> hmm, I just realized some of the generated SVGs are multiple megabytes, which is not so friendly to include on a web page =(
2013-03-06 20:26:57 UTC <byorgey> of course it works just fine when my browser loads it from my disk!
2013-03-06 20:28:06 UTC <fryguybob> byorgey: Humm, I bet there is an SVG minifier somewhere.
2013-03-06 20:34:49 UTC <byorgey> http://code.google.com/p/svgmin/ , but it hasn't been updated since 2009
2013-03-06 20:36:20 UTC <byorgey> also http://codedread.com/scour/
2013-03-06 20:36:27 UTC <fryguybob> ACTION tries it out.
2013-03-06 20:37:14 UTC <fryguybob> I did try  convert a.svg b.svg, but that went from 581 bytes to 3.7M.
2013-03-06 20:39:11 UTC <byorgey> hahaha
2013-03-06 20:39:45 UTC <byorgey> well, imagemagick is raster-based, right?  So it probably rasterizes a.svg and then produces b.svg by listing all the pixels or something =P
2013-03-06 20:41:12 UTC <byorgey> drat, I ran out of space on my boot partition again =(
2013-03-06 20:41:32 UTC <fryguybob> :(
2013-03-06 20:42:03 UTC <fryguybob> I saw the c++ in svgmin and ran.  Scour went from 581 bytes to 499.
2013-03-06 20:42:21 UTC <fryguybob> And it had a breakdown of what it was doing.
2013-03-06 20:45:46 UTC <fryguybob> ACTION builds a harder test case.
2013-03-06 20:46:41 UTC <fryguybob> AAaaannd python is slow.
2013-03-06 20:51:31 UTC <fryguybob> ACTION gives up on it ever finishing.
2013-03-06 20:55:15 UTC <byorgey> freed up 10% of my boot partition by uninstalling coq, ocaml, boost, and virtualbox.
2013-03-06 20:56:07 UTC <byorgey> better go get Mr. four-hour-nap up before he sleeps right through dinner.
2013-03-06 20:57:01 UTC <fryguybob> That's a long nap.
2013-03-06 21:14:30 UTC <byorgey> indeed.  these days he usually takes a single 2.5-3 hour nap
2013-03-06 21:14:54 UTC <byorgey> but I think he is catching up from this past weekend which involved an exciting train trip to DC and much less sleep than usual.
2013-03-06 21:16:47 UTC <fryguybob> Ah yes.  We thought Judah was catching up recently, but now he has a cold :(
2013-03-06 21:19:17 UTC <byorgey> =(
2013-03-06 22:38:21 UTC <cmears> byorgey, I ended up fixing that unclosed-trail bug in SVGFonts
2013-03-06 22:44:58 UTC <luite> \o/
2013-03-06 23:52:16 UTC <byorgey> cmears: yes, I saw!
2013-03-06 23:52:25 UTC <byorgey> cmears: and making a bunch of other improvements too, apparently =)
2013-03-06 23:52:31 UTC <byorgey> cmears: thanks!
2013-03-06 23:52:36 UTC <cmears> Well, why stop when you are having fun?
2013-03-06 23:52:45 UTC <byorgey> makes sense to me =)
2013-03-07 03:22:21 UTC <byorgey> most recent diagrams-contrib Haddocks can now be found at http://www.cis.upenn.edu/~byorgey/hosted/diagrams-contrib
2013-03-07 03:24:21 UTC <fryguybob> byorgey: Did you end up doing anything to get the svg smaller?
2013-03-07 03:24:26 UTC <byorgey> no
2013-03-07 03:24:59 UTC <byorgey> everything seems reasonable except Diagrams.TwoD.Factorization, which has several multi-megabyte SVGs
2013-03-07 03:26:33 UTC <fryguybob> Ah, I think arcs would help there.
2013-03-07 03:26:46 UTC <byorgey> yes, probably so.
2013-03-07 03:27:22 UTC <byorgey> hmm, I just realized we have a namespacing problem too.  You can't have diagrams from different files with the same name in the same package or they will clobber each other.
2013-03-07 03:29:30 UTC <fryguybob> Good point.  I was wondering if having primes in a name would cause problems too, but both Windows and linux were happy with those in file names.  I didn't try urls though.
2013-03-07 03:30:19 UTC <byorgey> right, good question
2013-03-07 03:31:04 UTC <byorgey> anyway, I'm off to bed, g'night!
2013-03-07 03:31:22 UTC <fryguybob> good night!
2013-03-07 05:00:43 UTC <cmears> Those diagrams are pretty
2013-03-09 00:35:54 UTC <fryguybob> Not enough diagrams!
2013-03-09 00:36:04 UTC <luite> no?
2013-03-09 00:39:07 UTC <fryguybob> ACTION may or may not have been spending too much time dynamic programming lately.
2013-03-09 00:40:22 UTC <luite> for diagrams?
2013-03-09 00:41:49 UTC <fryguybob> luite: No, for my advanced algorithms class.  But it has given me a few ideas for interesting diagrams and some constraint based things.
2013-03-09 00:42:20 UTC <luite> oh are you teaching that class, or the labs?
2013-03-09 00:42:28 UTC <fryguybob> I'm taking the class.
2013-03-09 00:42:35 UTC <luite> oh ok :)
2013-03-09 00:42:42 UTC <luite> less work i guess ;p
2013-03-09 00:44:17 UTC <luite> any slides or other material online?
2013-03-09 00:45:33 UTC <fryguybob> Unfortunately not really.
2013-03-09 00:47:28 UTC <fryguybob> But right now, I'm going to either integrate bezier offsets with the rest of the path offset code or make an option for the SVG backend to output smaller code.
2013-03-09 00:58:12 UTC <fryguybob> luite: If you want to see what we are covering there is a course web page: http://cs.rochester.edu/courses/484/spring2013/
2013-03-09 01:19:14 UTC <luite> ah interesting, my own algorithms classes were much more focused on optimization and np hard graph stuffs
2013-03-09 01:19:42 UTC <luite> coupling from the past is an interesting trick though, i used it in a paper :)
2013-03-09 14:14:59 UTC <fryguybob> I added another idea here: http://www.haskell.org/haskellwiki/Diagrams/GSoC
2013-03-09 14:57:59 UTC <luite> hm quite a few interesting ideas :)
2013-03-09 14:58:51 UTC <fryguybob> Yes! Add more!
2013-03-09 15:03:49 UTC <luite> adding plotting would be great, and 1.2,1.3,1.4 also sound like really fun projects :)
2013-03-09 15:05:01 UTC <luite> are you available to mentor, and byorgey?
2013-03-09 15:06:50 UTC <fryguybob> Well I'm looking at trying to be a student this summer with something related to improving STM.
2013-03-09 15:07:16 UTC <luite> ah
2013-03-09 16:03:43 UTC <luite> <- can't be a student anymore this year... sadface
2013-03-09 16:03:53 UTC <fryguybob> :(
2013-03-09 18:41:10 UTC <byorgey> luite: yes, I'm available to mentor
2013-03-09 18:46:31 UTC <byorgey> fryguybob: cool ideas!
2013-03-09 18:46:43 UTC <byorgey> looks like we could use about 8 GSoC students =)
2013-03-09 18:49:07 UTC <fryguybob> I know!
2013-03-09 19:19:23 UTC <luite> i'm not sure if ghcjs will be ready enough for gsoc, with the ghc 7.8.1 release pushed back
2013-03-09 19:20:02 UTC <luite> but the diagrams projects look much cooler anyway :p
2013-03-09 19:21:12 UTC <luite> though the inefficient tree code thing could be solved with ghcjs: instead of rendering the diagram to svg, compile diagrams+rendering code to js, embed it in an empty svg
2013-03-09 19:22:29 UTC <luite> will only work if the resulting diagram would've been bigger than a few megabytes :)
2013-03-09 19:24:41 UTC <fryguybob> hehe
2013-03-09 19:57:34 UTC <byorgey> unfortunately some of the factorization diagrams ARE bigger than a few megabytes.  But we have some good ideas for bringing that number down.
2013-03-09 19:58:51 UTC <byorgey> fryguybob: the thing about how many decimal places to output might not actually be that hard.  When we render we know exactly how big the requested output is.
2013-03-09 19:59:15 UTC <byorgey> By default we could choose to resolve down to, arbitrarily, say, 10^-3 or 10^-4 times the max output dimension
2013-03-09 19:59:27 UTC <byorgey> and if you want it finer there could be a command-line option
2013-03-09 20:00:19 UTC <byorgey> though I guess there are probably some subtle issues there that I haven't thought about
2013-03-09 20:11:30 UTC <fryguybob> byorgey: Yeah I don't think it is too hard.  I did an experiment last nigth and just added a wrapper with a show instance that does showFFloat at two digits.
2013-03-09 20:11:40 UTC <fryguybob> Just to see how much it would save.
2013-03-09 20:11:52 UTC <fryguybob> But the output was quite a bit off.
2013-03-09 20:12:28 UTC <byorgey> ah, interesting
2013-03-09 20:12:48 UTC <byorgey> you did this for *all* floating point values?  Including ones in transformation matrices?
2013-03-09 20:12:56 UTC <fryguybob> No, just paths.
2013-03-09 20:12:59 UTC <byorgey> I would imagine those would be a little tricker to get right
2013-03-09 20:13:01 UTC <byorgey> oh, ok
2013-03-09 20:13:02 UTC <fryguybob> Right
2013-03-09 20:13:30 UTC <byorgey> how much did it save though?
2013-03-09 20:13:34 UTC <fryguybob> half
2013-03-09 20:13:45 UTC <byorgey> ah, not too shabby =)
2013-03-09 20:14:30 UTC <fryguybob> I don't know how much SVG would save by applying more transformations through to the paths or grouping together paths that are under the same transformation.
2013-03-09 20:14:45 UTC <fryguybob> I looked at doing that in postscript and we were just missing a few things to get that right.
2013-03-09 20:15:22 UTC <fryguybob> That's more something I've been cataloging under "optimized" backends.
2013-03-09 22:55:31 UTC <hpaste> dmj pasted âeckâ at http://hpaste.org/83772
2013-03-09 22:56:48 UTC <fryguybob> ?
2013-03-09 23:11:18 UTC <hpaste> dmj revised âeckâ: âeck1â at http://hpaste.org/83772
2013-03-10 00:15:29 UTC <hpaste> dude pasted âyoâ at http://hpaste.org/83777
2013-03-10 00:21:07 UTC <byorgey> I'm guessing they selected #diagrams by accident... twice?
2013-03-10 06:08:58 UTC <ClaudiusMaximus> ACTION needs a custom widget in gtk - think diagrams is the way to go :)   so far i have sets of 3 sliders to adjust ratio x:y:z (so doubling each value gives the same effect), would be saner to have a circle that i can move around inside a triangle (which i suppose is like part of a colour composition widget)
2013-03-10 06:18:22 UTC <mgsloan> ClaudiusMaximus: You might take a look at my toy-gtk-diagrams stuff: https://github.com/mgsloan/toy-gtk-diagrams
2013-03-10 06:19:34 UTC <mgsloan> In particular, https://github.com/mgsloan/toy-diagrams/blob/master/src/Graphics/UI/Toy/Slider.hs https://github.com/mgsloan/toy-diagrams/blob/master/src/Graphics/UI/Toy/Draggable.hs
2013-03-10 06:23:28 UTC <mgsloan> ACTION really needs to get that stuff on hackage
2013-03-10 06:23:40 UTC <mgsloan> not sure if I should keep the "toy" in the title though
2013-03-10 06:24:19 UTC <mgsloan> comes from the lineage of the C++ toy-framework, part of lib2geom, part of inkscape
2013-03-10 06:25:04 UTC <mgsloan> toy-gtk was actually written by looking at the C++ and writing the haskell (not that I really needed to do that - it's a pretty simple thing)
2013-03-10 06:58:05 UTC <hpaste> ClaudiusMaximus pasted âFailed to install toy-gtk-diagrams-0.3.0â at http://hpaste.org/83790
2013-03-10 06:59:04 UTC <mgsloan> doh!
2013-03-10 06:59:09 UTC <ClaudiusMaximus> mgsloan: yep, was looking at it, but failed somewhere
2013-03-10 06:59:29 UTC <mgsloan> This is why I need to you know, publish it and get users and stuff
2013-03-10 06:59:46 UTC <ClaudiusMaximus> had to s/gtk-toy/toy-gtk/ in the other repo
2013-03-10 06:59:55 UTC <mgsloan> yikes
2013-03-10 07:00:05 UTC <ClaudiusMaximus> still has gtk-toy.cabal
2013-03-10 07:00:07 UTC <mgsloan> I guess I never finished the name switch
2013-03-10 07:00:22 UTC <ClaudiusMaximus> and i had to add UndecideableInstances in one file too
2013-03-10 07:00:25 UTC <mgsloan> Orr I never committed my changes
2013-03-10 07:00:29 UTC <mgsloan> DOH
2013-03-10 07:00:33 UTC <mgsloan> well that sucks
2013-03-10 07:00:44 UTC <ClaudiusMaximus> (ghc 7.6.2, fwiw)
2013-03-10 07:01:13 UTC <ClaudiusMaximus> forgot to push maybe? the wonders of decentralized version control...
2013-03-10 07:01:14 UTC <mgsloan> when I get some freetime I'm going to travis this stuff up
2013-03-10 07:01:32 UTC <mgsloan> yeah that "DOH" was me seeing there's uncommitted diffs in toy-gtk
2013-03-10 07:02:35 UTC <mgsloan> ClaudiusMaximus: this might take a bit, thanks for discovering that!
2013-03-10 07:02:49 UTC <ClaudiusMaximus> i tried sticking all my various online repos into one (locally cloned, not on the interwebs) using git submodule, not quite figured out how it's supposed to work, but it seems to help a bit (along with ssh-agent)
2013-03-10 07:03:00 UTC <mgsloan> taking a bit because I need to install all the dependencies - my .cabal got reset since I last did diagrams stuff
2013-03-10 07:03:23 UTC <mgsloan> oh, that's a cool way to do it
2013-03-10 07:03:26 UTC <ClaudiusMaximus> i also had to add a --constraint="template-haskell installed"
2013-03-10 07:04:07 UTC <ClaudiusMaximus> but that could be anywhere in the deps
2013-03-10 07:04:40 UTC <mgsloan> I just recently had some submodule problems, but now that I'm using 1.8 and I understand them a little more, I think I'll use that strategy
2013-03-10 07:05:07 UTC <ClaudiusMaximus> i have no real clue, keep getting annoyed that i'm not on a branch, or whatever
2013-03-10 07:05:09 UTC <mgsloan> (git 1.8 -- older versions of git used absolute paths for submodules - blech)
2013-03-10 07:05:53 UTC <mgsloan> yeah, when you update with submodules it takes you off the branch and puts you on a specific commit, I think
2013-03-10 07:06:12 UTC <mgsloan> or maybe that's sync
2013-03-10 07:06:18 UTC <mgsloan> I don't really fully grok them yet
2013-03-10 07:07:46 UTC <ClaudiusMaximus> yes, submodule update puts you on a commit, then i have to do something along the lines of git submodule foreach (git checkout master && git pull) (or whatever the syntax really is)
2013-03-10 07:08:29 UTC <ClaudiusMaximus> but probably submodule is the wrong way to go about things in my case (just avoiding having to get all my code from wherever with a handrolled script or something)
2013-03-10 07:10:11 UTC <mgsloan> Hmm, I dunno, it seems like a good way to keep track of what repositories you've changed without pushing
2013-03-10 07:10:26 UTC <ClaudiusMaximus> ah yeah, that too
2013-03-10 07:10:50 UTC <ClaudiusMaximus> apparently i have git 1.7.something, will be on the lookout for path mayhem..
2013-03-10 07:11:24 UTC <mgsloan> if it's 1.7.10 you're fine
2013-03-10 07:11:33 UTC <mgsloan> unfortunately, ubuntu has 1.7.9
2013-03-10 07:12:23 UTC <ClaudiusMaximus> ok, got 1.7.10.4..  (i'm a bit fuzzy at the moment, insomnia on top of a week-long headache and general exhaustion)
2013-03-10 07:16:58 UTC <mgsloan> yikes! well, hopefully I can reduce the toy-gtk headache soon
2013-03-10 07:17:09 UTC <mgsloan> I guess you already fixed it yourself though
2013-03-10 07:32:22 UTC <ClaudiusMaximus> the toy-gtk-diagrams had too scary errors for me to attempt..
2013-03-10 07:49:24 UTC <mgsloan> yeah
2013-03-10 07:49:27 UTC <mgsloan> my bad
2013-03-10 07:49:39 UTC <mgsloan> I think the best thing to do there is just to comment out the whole thing
2013-03-10 07:49:47 UTC <mgsloan> that was WIP, I shouldn't have comitted it
2013-03-10 07:50:10 UTC <mgsloan> it's not necessary - the idea was to make it easy to make ghci toys
2013-03-10 07:50:15 UTC <ClaudiusMaximus> ACTION uploads a demo of his current wip
2013-03-10 07:52:37 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-03-10_bitbreeder.png screenshot ; http://mathr.co.uk/misc/2013-03-10_bitbreeder.ogg audio (11MB)
2013-03-10 07:53:20 UTC <mgsloan> cool! GAs for sound?
2013-03-10 07:53:22 UTC <ClaudiusMaximus> recorded with laptop speakers, so might have wrong amounts of bass
2013-03-10 07:53:23 UTC <ClaudiusMaximus> yep
2013-03-10 07:53:55 UTC <mgsloan> fun stuff, I hope to get around to doing some GA stuff someday, pretty interested in using GP for fun and profit
2013-03-10 07:54:07 UTC <ClaudiusMaximus> i evolve this kind of code http://countercomplex.blogspot.co.uk/2011/10/algorithmic-symphonies-from-one-line-of.html
2013-03-10 07:54:31 UTC <ClaudiusMaximus> so basically an arithmetic expresssion from sample index to sample value
2013-03-10 07:55:31 UTC <mgsloan> Ahh, yeah, I remember seeing that youtube video!
2013-03-10 07:55:59 UTC <ClaudiusMaximus> the 4 sliders next to each spectrogram weight different parameters - from top to bottom  "frequency histogram shape", "volume histogram shape", "textural detail", "novelty"
2013-03-10 07:56:22 UTC <mgsloan> great idea :D
2013-03-10 07:56:44 UTC <mgsloan> I can't wait for it to be the first user of the toy-* (if it works out for you)
2013-03-10 07:56:46 UTC <ClaudiusMaximus> the bottom 3 sets are crossbred together, the top one is the one that plays
2013-03-10 07:56:51 UTC <mgsloan> needs to work first though..
2013-03-10 07:58:35 UTC <mgsloan> The next step is to make a classifier that looks for certain varieties of samples out of the population, and composes a piece with them
2013-03-10 07:58:50 UTC <mgsloan> (snare, bass drum, etc, maybe predetermined drum loops)
2013-03-10 07:59:19 UTC <ClaudiusMaximus> well, already quite complicated really - generating C code that's compiled twice (once to executable, once to .so) - the exe makes a wav file which gets turned into a pgm spectrogram which then gets judged - results are fed back into the main program, which tells another program which .so to load to make sound
2013-03-10 08:00:45 UTC <ClaudiusMaximus> but yes that could be fun too
2013-03-10 08:01:04 UTC <mgsloan> maybe I should have said "next level" instead of "next step" ;)
2013-03-10 08:01:19 UTC <ClaudiusMaximus> ROUND 2: FIGHT!
2013-03-10 08:02:34 UTC <mgsloan> some seriously great stuff at 8:30 orso
2013-03-10 08:02:57 UTC <ClaudiusMaximus> i do need better metrics though, the volume thing is particularly fiddly - when turned up the gaps tend to get larger, instead of there being more of them...
2013-03-10 08:03:26 UTC <ClaudiusMaximus> gonna listen on my proper speakers now - hope my neighbours don't mind (8am sunday...)
2013-03-10 08:07:09 UTC <mgsloan> ClaudiusMaximus: Ok, updated toy-gtk and toy-gtk-diagrams
2013-03-10 08:07:12 UTC <mgsloan> really sorry about that!
2013-03-10 08:07:41 UTC <ClaudiusMaximus> no worries :)
2013-03-10 08:07:48 UTC <mgsloan> I hope to get them up on hackage at some point, but had a lot of other stuff to do
2013-03-10 08:08:11 UTC <ClaudiusMaximus> will give them a go in a couple of hours, need to chill out and maybe do some dishes first..  too much coding overnight...
2013-03-10 08:08:55 UTC <mgsloan> Yeah, I know that feeling.  Been trying to get into a regular cycle lately
2013-03-10 08:09:26 UTC <mgsloan> (ideally both meanings of regular - at regular intervals, and normal times)
2013-03-10 16:50:18 UTC <amitshree> is there any way to create a link against a file in github?
2013-03-10 16:56:43 UTC <byorgey> hi amitshree, I don't think I understand your question
2013-03-10 16:56:49 UTC <byorgey> in what context?
2013-03-10 16:57:44 UTC <amitshree> i mean i am solving questions of projecteuler.net
2013-03-10 16:58:09 UTC <amitshree> and storing source code in git after creating a repo
2013-03-10 16:59:08 UTC <amitshree> and i don't want to write question with source code in github
2013-03-10 16:59:16 UTC <byorgey> amitshree: just navigate through the github interface to the file you want to link to.  Then copy the URL.
2013-03-10 16:59:31 UTC <byorgey> you can even click on a particular line, then the URL becomes one that will take you directly to that line in the code
2013-03-10 17:00:06 UTC <byorgey> amitshree: Though I'm curious why you are asking this in #diagrams?
2013-03-10 17:01:02 UTC <amitshree> i wais it not a github related channel?
2013-03-10 17:01:42 UTC <amitshree> is it not a github related channel?
2013-03-10 17:04:17 UTC <byorgey> amitshree: no, this channel is for discussion of the Haskell diagrams library, http://projects.haskell.org/diagrams
2013-03-10 17:05:08 UTC <amitshree> ok
2013-03-10 17:12:20 UTC <fryguybob> Humm, perhaps that was because we have github in the topic?
2013-03-10 17:18:00 UTC <byorgey> fryguybob: that's probably how amitshree found this channel, I suppose.  But by that logic this is also a channel about logs, presumably the wooden kind
2013-03-10 17:18:23 UTC <byorgey> new BlogLiterately release is almost ready!
2013-03-10 17:40:25 UTC <fryguybob> Woohoo!
2013-03-10 17:45:09 UTC <byorgey> done!
2013-03-10 17:45:29 UTC <byorgey> man, why do releases always take about five times as long as you think they will?
2013-03-10 17:45:37 UTC <byorgey> time for lunch!
2013-03-11 05:20:40 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06issue8-unicode 146a251dd http://travis-ci.org/diagrams/diagrams-haddock/builds/5401262 The build passed.
2013-03-11 16:01:00 UTC <luite> byorgey: i think i've said it before, but great homework exercise sheets with the stories and margin notes+pictures :) I'm almost jealous that i don't have to do them :p
2013-03-11 17:01:47 UTC <byorgey> luite: hehe, thanks =)
2013-03-11 19:14:21 UTC <fryguybob> Sooo many people want plotting.
2013-03-11 19:16:01 UTC <carter> fryguybob i'm starting to hack on ti
2013-03-11 19:16:03 UTC <carter> actually
2013-03-11 19:16:23 UTC <carter> i should have something simple but sane on github in the next week or two
2013-03-11 19:16:34 UTC <carter> for at least basic baby plotting
2013-03-11 19:16:49 UTC <carter> was planning to do that a year ago... but now im at the point whre I actually need to work on that
2013-03-11 19:16:54 UTC <fryguybob> :E
2013-03-11 19:17:01 UTC <fryguybob> Oops that was supposed to be :D
2013-03-11 19:17:03 UTC <carter> is that a moustache face?
2013-03-11 19:17:04 UTC <carter> ah
2013-03-11 19:17:12 UTC <fryguybob> I'm not on my normal keyboard.
2013-03-11 19:17:16 UTC <carter> np
2013-03-11 19:17:20 UTC <carter> what sort are you on?
2013-03-11 19:17:29 UTC <fryguybob> It says Microsoft on it.
2013-03-11 19:17:41 UTC <fryguybob> I'm used to my laptop keyboard.
2013-03-11 19:18:16 UTC <fryguybob> I've been meaning to put some simple examples of basic plotting together, not as an API, but just examples of writing in diagrams directly.
2013-03-11 19:19:34 UTC <carter> fryguybob yeah ... thats "easy"
2013-03-11 19:19:49 UTC <carter> i think i have a sane way of making a sort of plotting DSL on top
2013-03-11 19:20:09 UTC <carter> i'll start having time to hack on it towards the end of this week i think
2013-03-11 19:20:40 UTC <fryguybob> I haven't touched it in a while, but I made a DSL (not embedded) for my wife to make the kind of plots that are in books, but are not partcularly easy to get out of a normal plotting program.
2013-03-11 19:21:00 UTC <carter> what sort of plots do you have in mind?
2013-03-11 19:21:21 UTC <carter> were what sort where those?
2013-03-11 19:21:31 UTC <fryguybob> Piecewise continuous mostly.
2013-03-11 19:21:39 UTC <fryguybob> http://patch-tag.com/r/fryguybob/LaTeXGrapher/home
2013-03-11 19:22:25 UTC <carter> huh, that shouldn't be a problem for what i've got planned
2013-03-11 19:22:30 UTC <carter> i think
2013-03-11 19:44:51 UTC <carter> byorgey: I think that the haskell-cafe requests for ggplot2 from your students is asking a bit much :)
2013-03-11 19:45:05 UTC <carter> if i come up wiht some good project ideas i'll reply to that thread
2013-03-11 20:15:58 UTC <rodlogic> byorgey: what about a Erlang's webmachine lib for Haskell as a useful project? I.e. an implementation of this decision tree: https://github.com/basho/webmachine/wiki/Diagram
2013-03-11 20:16:43 UTC <rodlogic> so that it can be plugged into cloud-haskell or plain http servers
2013-03-11 20:18:32 UTC <rodlogic> and here is the core impl in Erlang: https://github.com/basho/webmachine/blob/master/src/webmachine_decision_core.erl#L115
2013-03-11 20:22:20 UTC <luite> hmm that looks like something you could build with wai with the warp server?
2013-03-11 20:24:06 UTC <luite> although i'm not quite sure what the goal is. webmachine does some resource management on top of a basic http server, where the application and external http requests can retrieve and modify the resources?
2013-03-11 20:29:22 UTC <rodlogic> the goal would be to provide an API to create RESTful resources where all the restful HTTP handling is taken care of by the library based on the above diagram and using webmachine as a reference 
2013-03-11 20:30:08 UTC <rodlogic> on top of wai/warp would be great
2013-03-11 20:30:36 UTC <rodlogic> although not a taks on an existing open source project, the scope seems well defined and already documented out there
2013-03-11 20:31:35 UTC <luite> a lot of that diagram is already implemented in warp obviously
2013-03-11 20:31:36 UTC <rodlogic> I particularly like webmachine's simplicity for creating programmatic APIs
2013-03-11 20:31:46 UTC <rodlogic> that are fully restful
2013-03-11 20:33:12 UTC <rodlogic> I guess whatever needs to be done to make sure the decision tree is respected and possibly extended
2013-03-11 20:33:52 UTC <rodlogic> sorry, I guess this is the wrong channel for this discussion ...
2013-03-11 20:34:59 UTC <luite> hehe dunno
2013-03-11 20:36:45 UTC <luite> but is it important that exactly this tree is followed? warp can make some of the early decisions (bad request, uri too long), but some others must be made later in the wai app (unauthorized, method not allowed)
2013-03-11 20:41:02 UTC <rodlogic> do you mean that the ordering of checks could be different than the diagram? Or that the actual response codes etc would be different?
2013-03-11 20:41:14 UTC <luite> no the ordering
2013-03-11 20:41:26 UTC <rodlogic> That diagram is not gospel but contains some good best practices
2013-03-11 20:43:22 UTC <rodlogic> do you have experience with wai/warp?
2013-03-11 20:45:13 UTC <luite> yeah some
2013-03-11 20:46:34 UTC <luite> a way app is more or less a (Request -> Response) function where both Request and Response can be streamed through conduit. so warp will send an error code if it doesn't understand enough of the request to make a Request, otherwise the wai app will deal with it
2013-03-11 20:48:07 UTC <luite> if it's not a problem that warp will do some of the early decisions, perhaps in a different order, you can implement the rest of the tree in your app 
2013-03-11 20:48:26 UTC <rodlogic> is wai tied to conduit?
2013-03-11 20:48:30 UTC <luite> yes
2013-03-11 20:51:05 UTC <luite> there are some alternatives with snap and happstack, but they don't really have such an explicit low level web server interface
2013-03-11 20:51:40 UTC <rodlogic> and from what I know warp is the performance winner, no?
2013-03-11 20:53:57 UTC <luite> it's quite fast, and kazu, one of the authors, is working with the ghc devs on better io manager scaling to make it better on multiple cores
2013-03-11 20:54:20 UTC <luite> dunno if it's really faster than the rest at this point
2013-03-11 23:05:12 UTC <byorgey> ooh, this is neat: http://hackage.haskell.org/package/monoid-subclasses
2013-03-11 23:06:26 UTC <luite> some look a bit ad hoc though
2013-03-11 23:07:15 UTC <luite> left/right cancellative and factorial seem useful
2013-03-11 23:07:45 UTC <byorgey> yup
2013-03-11 23:11:02 UTC <byorgey> factorial in particular is very similar to something I was thinking about for optimizing diagram attributes
2013-03-11 23:11:47 UTC <byorgey> you want to compute sets of common attributes and lift them up the tree when possible
2013-03-11 23:12:31 UTC <luite> oh that's in interesting application
2013-03-11 23:12:33 UTC <luite> an
2013-03-11 23:12:40 UTC <byorgey> e.g. automatically transform  hcat (replicate 100 (circle 1 # fc blue))  into   hcat (replicate 100 (circle 1)) # fc blue
2013-03-11 23:13:50 UTC <byorgey> right now we don't have any backends which would take advantage of the difference, but hopefully we will soon =)
2013-03-11 23:15:39 UTC <luite> hmm, do people really think of -fdefer-type-errors as a way to make haskell more appealing to dynamically typed programmers? i always thought of it as strictly a debugging aid
2013-03-11 23:40:21 UTC <byorgey> I don't know if anyone really thinks of it that way.  But it sounds nice.
2013-03-11 23:42:29 UTC <luite> yeah i was kind of surprised, Hamish Mackenzie wanted me to mentioned it to the JavaScript audience, and now Kazu mentions that use case on the glasgow-haskell-users mailing list
2013-03-12 00:17:46 UTC <mgsloan> ACTION has been wondering how such monoid subclasses would fit in with lattice classes
2013-03-12 00:19:46 UTC <luite> where you replace mappend with meet and join?
2013-03-12 00:20:30 UTC <mgsloan> yeah, where mappend is probably join, but you get commutativity, and for bounded lattices you have top and/or bottom
2013-03-12 00:21:30 UTC <mgsloan> Cancellative monoid seems related to lattice complement
2013-03-12 00:22:05 UTC <luite> hm do you want commutativity? skew lattice would be closer to monoid then
2013-03-12 00:22:09 UTC <mgsloan> The LeftGCDMonoid / RightGCDMonoid are totally lattice meets
2013-03-12 00:22:21 UTC <mgsloan> lattices are always commutative, I thought
2013-03-12 00:22:29 UTC <luite> yeah skew lattices aren't
2013-03-12 00:22:39 UTC <mgsloan> ahh, cool
2013-03-12 00:22:54 UTC <luite> but i'd have to check to see if that's the only difference
2013-03-12 00:23:11 UTC <mgsloan> residuated lattice might be related to the cancellative monoids
2013-03-12 00:26:31 UTC <mgsloan> Hmm, I guess skew lattices are like monoids + another operation, with properties between them (absorption)
2013-03-12 00:28:12 UTC <mgsloan> luite: dcoutts (I think) was mentioning that -fdefer-type-errors was part of a larger effort to make GHC able to handle partialness more gracefully.  E.g. we might be able to somewhat typecheck code that has syntax errors
2013-03-12 00:28:13 UTC <luite> the cancellative monoids feel a bit icky though, with the Maybe requirement
2013-03-12 00:29:34 UTC <mgsloan> Oh snap, that's like patching on "bottom"
2013-03-12 00:29:59 UTC <mgsloan> http://hackage.haskell.org/packages/archive/lattices/1.2.1/doc/html/Algebra-Lattice-Lifted.html
2013-03-12 00:30:43 UTC <mgsloan> So, ideally a super library would be made out of this, semigroups, and lattices
2013-03-12 00:31:14 UTC <mgsloan> But monoid-subclasses does seem to be fairly bent on being "practical" rather than mathematical
2013-03-12 00:31:16 UTC <luite> dunno if it would really work for this purpose though
2013-03-12 00:31:18 UTC <luite> right
2013-03-12 00:31:45 UTC <luite> the Textual thing has default implementations for most stuff, but no one would use them because performance would be horrible
2013-03-12 00:32:15 UTC <mgsloan> (which is probably a good call, I'm not sure what to do about the natural conflict between Haskell being good mathematical abstractions, and engineering)
2013-03-12 00:32:20 UTC <luite> it's basically having some interesting typeclasses and then not using them :p
2013-03-12 00:32:40 UTC <mgsloan> Haskell of course is good for both, but when the mathematical stuff is a prereq for some engineering libraries, hrmm
2013-03-12 00:33:02 UTC <mgsloan> ah
2013-03-12 00:37:24 UTC <luite> is there already something for the map function of Textual? (and many of the other ones as well)?
2013-03-12 00:39:14 UTC <mgsloan> the classy prelude
2013-03-12 00:39:20 UTC <luite> hehe
2013-03-12 00:40:44 UTC <luite> yeah that looks like it has them, lots of fundeps :)
2013-03-12 00:40:57 UTC <mgsloan> fun fun!
2013-03-12 00:42:36 UTC <luite> lens must also have something like htis?
2013-03-12 00:44:46 UTC <mgsloan> http://hackage.haskell.org/packages/archive/lens/3.8.7.3/doc/html/Data-ByteString-Lens.html
2013-03-12 00:44:54 UTC <mgsloan> err, I guess we're not looking at bytestring
2013-03-12 00:45:04 UTC <mgsloan> http://hackage.haskell.org/packages/archive/lens/3.8.7.3/doc/html/Data-Text-Lens.html
2013-03-12 00:45:53 UTC <mgsloan> Maybe lens should similarly unify the textual typeclasses
2013-03-12 00:45:57 UTC <mgsloan> who knows
2013-03-12 00:46:06 UTC <mgsloan> I'll bet edwardk has reasons
2013-03-12 00:46:33 UTC <luite> hmm, different classes yeah
2013-03-12 00:47:06 UTC <mgsloan> But yeah, lens handles all of Textual
2013-03-12 00:48:49 UTC <mgsloan> ahh, the reason that monoid-subclasses one has multiple instances is that "ByteStringUTF8" is defined in that package
2013-03-12 00:49:08 UTC <mgsloan> and the stuff for "String" is just handled by traverse or itraverse in lens
2013-03-12 22:35:28 UTC <tgeeky> whew!
2013-03-12 22:36:14 UTC <tgeeky> for almost an entire week, I thought I lost all of my data, work, and code (or nearly all of it)
2013-03-12 22:36:27 UTC <tgeeky> 1) never doing RAID0 again, ever.
2013-03-12 22:37:49 UTC <tgeeky> 2) it turns out dead hard drives really can be resurrected by putting them in (a vacuum in) the freezer
2013-03-12 22:38:05 UTC <tgeeky> and then issuing hdparm --write-sector commands to the bad sectors
2013-03-12 22:50:42 UTC <fryguybob> tgeeky: Sounds like a close one!
2013-03-12 22:51:12 UTC <tgeeky> fryguybob: yes. It's not like there were any masterpieces in there, but there is a lot of work and experimentation
2013-03-12 22:51:19 UTC <tgeeky> I really thought I lost it all :(
2013-03-12 23:06:50 UTC <luite> a vacuum?
2013-03-12 23:07:30 UTC <luite> oh a plastic bag?
2013-03-12 23:07:34 UTC <fryguybob> Removing the moisture right?
2013-03-12 23:07:53 UTC <luite> hard drives don't work in a vacuum
2013-03-12 23:17:24 UTC <tgeeky> hm.
2013-03-12 23:17:32 UTC <tgeeky> a vacuum sealed food container thing
2013-03-12 23:17:39 UTC <tgeeky> and yes, to prevent condensation buildup
2013-03-12 23:22:28 UTC <tgeeky> but, for instance, I get dozens of bad sectors if the drive is warm, and SMART responses are malformed (saying the drive has 60 PB of space, for instance)
2013-03-12 23:22:36 UTC <tgeeky> but once it's cooled, it mostly works
2013-03-12 23:23:26 UTC <luite> oh is an airtight seal commonly called a vacuum seal?
2013-03-12 23:24:00 UTC <luite> tgeeky: do you have working backups now? :)
2013-03-12 23:24:16 UTC <tgeeky> not yet, I just got the data recovered
2013-03-12 23:24:21 UTC <fryguybob> I don't know if it is true or not, but I heard that the cooling thing works on bad motors.
2013-03-12 23:24:51 UTC <tgeeky> luite: A chamber which has less atmospheric pressure than ... the atmosphere is a vacuum. 
2013-03-12 23:25:26 UTC <luite> obviously :p
2013-03-12 23:25:36 UTC <tgeeky> I put the drive in one of these: http://www.bestkitchencooked.com/wp-content/uploads/2013/02/FoodSaverT02-0050-05_812.jpg
2013-03-12 23:25:41 UTC <tgeeky> without the meat and potatoes
2013-03-12 23:26:00 UTC <tgeeky> it's more than airtight, though. It has the air removed from it.
2013-03-12 23:26:21 UTC <tgeeky> If there were air inside the container, it too would condense and I would be worried about moisture
2013-03-12 23:26:34 UTC <fryguybob> Where do the wires go?
2013-03-12 23:26:42 UTC <tgeeky> I took the drive out to use it :)
2013-03-12 23:27:05 UTC <tgeeky> I let it warm up by 5 degrees C (measured by IR) to prevent reheating condensation, and then turned it on
2013-03-12 23:27:46 UTC <tgeeky> I have dd-backups of both of the two drives, though this is not exactly helpful (since it's evidently not possible to do anything with a fakeraid drive image)
2013-03-12 23:27:55 UTC <fryguybob> The vegetables look tasty.
2013-03-12 23:28:19 UTC <luite> hm i wonder why motors work better in the cold... because magnets get weaker at higher temperatures?
2013-03-12 23:28:45 UTC <tgeeky> I'm not actually convinced it's the motor. I don't think the motor would have anything to do with the SMART status being corrupt (as it's all stored on a chip)
2013-03-12 23:29:01 UTC <luite> tgeeky: raid0 layout should be pretty straightforward shouldn't it?
2013-03-12 23:29:26 UTC <tgeeky> luite: I suppose it should be. It should look like ABABAB...
2013-03-12 23:29:32 UTC <fryguybob> Well once the motors are no longer spinning like they should that kind of throws everything else off.
2013-03-12 23:29:51 UTC <tgeeky> also, cold temperatures shrink things (that may have expanded due to heat)
2013-03-12 23:30:19 UTC <tgeeky> for instance, the LHC beam pipes lose a few cm in diameter when they cryo cool them
2013-03-12 23:31:44 UTC <fryguybob> ACTION hardware is always sooo messy.
2013-03-12 23:32:43 UTC <luite> bleh i wonder if i can write anything about ghcjs that's interesting enough for icfp...
2013-03-12 23:33:09 UTC <tgeeky> luite: I can answer this one: yes, you can.
2013-03-12 23:33:43 UTC <luite> first version is due in 2 wks
2013-03-12 23:35:58 UTC <luite> did some very simple benches earlier today at the request of some uhc-js guy (for some other paper), results were still 7-10x slower than native ghc
2013-03-12 23:36:50 UTC <luite> tgeeky: what kind of things would you want to read about?
2013-03-13 00:00:09 UTC <luite> that's what i mean ;p
2013-03-13 00:14:11 UTC <alpounet> luite, native ghc with -O2 ?
2013-03-13 00:15:10 UTC <luite> yeah both with -O2
2013-03-13 00:23:15 UTC <luite> i'm now adding argc/argv support so i can run nofib tests that require a command line argument for the size
2013-03-13 00:26:21 UTC <alpounet> luite, well remember that you implement a runtime on top of a "slow" language
2013-03-13 00:26:46 UTC <alpounet> i don't know how fast you think you can make ghcjs but i'm not sure you can reach 2x 3x on most programs
2013-03-13 00:28:21 UTC <mgsloan> yeah, 7-10x slower than native ghc is fast enough for most realistic purposes
2013-03-13 00:28:22 UTC <luite> emscripten gets 2-3x for llvm, but haskell is a bit harder because of threading and cps transformation
2013-03-13 00:28:50 UTC <luite> some things are probably much slower than 10x, looks like JSBN is much worse
2013-03-13 00:28:51 UTC <mgsloan> I mean, people using ruby were ok with 100x slower for a long time
2013-03-13 00:28:57 UTC <luite> = bignum lib
2013-03-13 00:30:07 UTC <luite> k command line args work in node.js and spidermonkey now, time to import nofib stuff into the ghcjs test suite :)
2013-03-13 00:34:15 UTC <luite> bernouilli 500, (nofib/imaginary/bernouilli: 0.124 sec native, 21 sec ghcjs
2013-03-13 00:34:37 UTC <luite> oh v8 i s faster, 5 seconds
2013-03-13 00:34:56 UTC <luite> that test spends almost all time in the bignum library
2013-03-13 00:35:06 UTC <luite> so anyone want to write a faster one than JSBN?
2013-03-13 00:50:36 UTC <alpounet> nah, busy with http://core.alpmestan.com/ (e.g http://core.alpmestan.com/core/14 )
2013-03-13 00:53:10 UTC <luite> fun :)
2013-03-13 00:57:46 UTC <alpounet> will probably talk a bit about it on my blog or smth to let people know about this, in case they might find it useful
2013-03-13 02:04:16 UTC <rodlogic> alpounet: how are you generating core? exec ghc or ghc lib?
2013-03-13 02:06:42 UTC <alpounet> rodlogic, calling out to ghc for now because "it's enough"
2013-03-13 02:07:24 UTC <luite> how do you make it safe?
2013-03-13 02:07:53 UTC <alpounet> luite, for now it isn't
2013-03-13 02:08:14 UTC <alpounet> that's why i'm just showing here 
2013-03-13 02:08:15 UTC <alpounet> :p
2013-03-13 02:08:57 UTC <alpounet> i'm not executing the haskell code so that's that out of the way. but TH can get annoying I suppose
2013-03-13 02:11:01 UTC <luite> ah :)
2013-03-13 02:11:14 UTC <luite> also preprocessor pragmas
2013-03-13 02:11:30 UTC <alpounet>  yeah
2013-03-13 02:11:47 UTC <alpounet> forbidding CPP and TH should protect me I suppose
2013-03-13 02:14:53 UTC <luite> OPTIONS_GHC too, since that lets you specify things like -pgmF
2013-03-13 02:15:36 UTC <alpounet> yeah
2013-03-13 02:15:53 UTC <alpounet> thing is
2013-03-13 02:16:18 UTC <alpounet> if I disable TH, but if I put {-# LANGUAGE TemplateHaskell #-} in the haskell code, who wins? the latter, isn't it?
2013-03-13 02:22:07 UTC <fryguybob> It seems so.
2013-03-13 02:22:58 UTC <alpounet> meh
2013-03-13 02:23:36 UTC <fryguybob> Humm  -hide-package template-haskell  didn't help either.
2013-03-13 02:25:44 UTC <tgeeky> fryguybob: what are you trying to do? SafeHaskell or whatever will turn TH off, no?
2013-03-13 02:26:14 UTC <alpounet> i need safe compilation 
2013-03-13 02:26:20 UTC <alpounet> isn't safe haskell for safely running?
2013-03-13 02:26:52 UTC <tgeeky> alpounet: I never know how to answer questions like that. It does what it says it does in the docs.
2013-03-13 02:27:05 UTC <tgeeky> I think one of the SafeHaskell-like pragmas diasbles TH from being used at all
2013-03-13 02:27:35 UTC <alpounet> I will read the manual about SafeHaskell and see if that could fit -- thanks for the idea 
2013-03-13 02:27:46 UTC <tgeeky> alpounet: http://hackage.haskell.org/trac/ghc/wiki/SafeHaskell
2013-03-13 02:27:58 UTC <tgeeky> alpounet: -XSafe disables LANGUAGE TemplateHaskell
2013-03-13 02:28:01 UTC <fryguybob> tgeeky: Yes, using -XSafe does cause it to fail.
2013-03-13 02:28:35 UTC <tgeeky> fryguybob: I just got here. That's what you want? :O
2013-03-13 02:29:56 UTC <alpounet> fryguybob, what if you then use {-# LANGUAGE Unsafe #-} in the file and -XSafe given to ghc? :p
2013-03-13 02:30:18 UTC <alpounet> oh wait Unsafe isn't really what i thought it was
2013-03-13 02:32:22 UTC <fryguybob> tgeeky: We were just wondering about ways to prevent TemplateHaskell from running.
2013-03-13 02:32:28 UTC <tgeeky> alpounet: yeah, that's why I try not to describe how it works. Every time I try that, I say something incorrect.
2013-03-13 02:34:27 UTC <alpounet> tgeeky, heh, you've been helpful anyway
2013-03-13 02:34:52 UTC <alpounet> soo, first I'd need some sneaky TH code 
2013-03-13 02:37:02 UTC <alpounet> oh, runIO will do.
2013-03-13 02:45:02 UTC <byorgey> fryguybob: I think I figured out how to solve the issue with ScaleInv + freeze while sitting in jury duty today
2013-03-13 02:45:14 UTC <byorgey> I'll try to code it up soon =)
2013-03-13 02:50:03 UTC <fryguybob> Nice!
2013-03-13 02:50:45 UTC <tgeeky> byorgey: a productive jury duty? unpossible!
2013-03-13 02:52:36 UTC <luite> hm how often does one have jury duty?
2013-03-13 02:53:02 UTC <tgeeky> luite: once or twice a decade, depending on state
2013-03-13 02:55:54 UTC <byorgey> about once a year in Philadelphia
2013-03-13 02:56:21 UTC <byorgey> if you don't get picked to serve on a jury that is, if you do serve on a jury I think it's like two or three years before they call you again
2013-03-13 02:56:38 UTC <byorgey> anyway
2013-03-13 02:56:42 UTC <byorgey> ACTION -> bed
2013-03-13 03:03:05 UTC <luite> hm bed, i almost forgot what that is
2013-03-13 03:09:19 UTC <mgsloan> When my dad was in jury duty selection, the thing that ruled him out was that he'd spent 1 yr in africa with the peace corps
2013-03-13 03:09:56 UTC <mgsloan> Kinda makes you wonder about juries... "Lets select the people who have no context for understanding this case.."
2013-03-13 03:10:12 UTC <mgsloan> I mean, he was happy with that, of course
2013-03-13 03:23:47 UTC <luite> grmblz program pending 60% of its running time allocating objects
2013-03-13 03:27:32 UTC <tgeeky> byorgey: I was going for, getting picked to serve
2013-03-13 03:27:40 UTC <tgeeky> byorgey: that happens rarely here in GA / Atlanta
2013-03-13 03:28:13 UTC <tgeeky> mgsloan: yes. Jury selection is the worst process ever.
2013-03-13 03:31:00 UTC <luite> hm do most people support jury trial?
2013-03-13 03:31:12 UTC <mgsloan> Yeah, it has an underlying assumption that everyone is fit to think logically and pass judgment.  Instead of selecting people that would be good at such things (maybe this is good, they have better things to do), it'll trend towards people who the prosecution and defense think are easily manipulable
2013-03-13 03:32:39 UTC <mgsloan> I actually had no idea that the prosecution and defense were involved in the process, till recently.  Seems like that component of it really mucks things up
2013-03-13 03:33:01 UTC <mgsloan> (clearly, I really don't know much about this)
2013-03-13 03:33:09 UTC <mgsloan> (haven't had to do it, myself)
2013-03-13 03:33:34 UTC <luite> (me neither)
2013-03-13 11:08:52 UTC <byorgey> mgsloan: the prosecution and defense get a certain number of "vetos", as it were, i.e. they can simply disqualify someone without having to give a reason
2013-03-13 11:09:11 UTC <byorgey> but I think they only get a certain number, and they can't just look at a big group of people and pick which ones they want
2013-03-13 11:09:24 UTC <mgsloan> byorgey: ahh, yeah, that's certainly better
2013-03-13 11:10:30 UTC <byorgey> notionally, the idea is to exclude people who might already be biased in a certain direction
2013-03-13 11:10:47 UTC <byorgey> though I'm sure it is not always quite so idealistic.
2013-03-13 22:07:19 UTC <fryguybob> ACTION refills the pi ice-cube tray.
2013-03-15 05:14:15 UTC <luite> bleh who would've thought ghcjs was so much work
2013-03-15 21:59:06 UTC <ClaudiusMaximus> mgsloan: i kinda abandoned trying to make a custom widget, mainly because i increased the number of parameters dramatically.. maybe some other time
2013-03-15 21:59:44 UTC <mgsloan> ClaudiusMaximus: Gotcha.  gtk-toy-diagrams worked alright though, right?
2013-03-15 21:59:45 UTC <lambdabot> mgsloan: You have 1 new message. '/msg lambdabot @messages' to read it.
2013-03-15 22:00:26 UTC <ClaudiusMaximus> here's what my current user interface looks like: http://mathr.co.uk/misc/2013-03-15_bitbreeder_edit.png
2013-03-15 22:00:42 UTC <ClaudiusMaximus> mgsloan: i didn't get as far as rebuilding it after you pushed fixes, sadly
2013-03-15 22:01:20 UTC <mgsloan> Whoah, that is a /dark/ theme
2013-03-15 22:01:32 UTC <ClaudiusMaximus> my laptop screen is kinda bright i think..
2013-03-15 22:01:38 UTC <mgsloan> I can barely see the sliders over here
2013-03-15 22:01:56 UTC <ClaudiusMaximus> i did think the same when i looked at it on this other computer..
2013-03-15 22:03:58 UTC <ClaudiusMaximus> sounds are more varied in texture now, or maybe my ears have gotten more finely attuned to the details... http://mathr.co.uk/misc/2013-03-15_bitbreeder_edit.ogg
2013-03-15 22:04:29 UTC <mgsloan> it's post dubstep!  I kidd I kidd
2013-03-15 22:04:57 UTC <mgsloan> Hmm yeah, ther're more gradual fades / resonances now
2013-03-15 22:05:33 UTC <ClaudiusMaximus> the key magic ingredient is the "granularity" controls...
2013-03-15 22:06:58 UTC <ClaudiusMaximus> it's a multiresolution centroid of standard deviation, or something - the further right it is the more longer-time-scale changes are
2013-03-15 22:07:36 UTC <mgsloan> cool!
2013-03-15 22:08:14 UTC <ClaudiusMaximus> and the target sliders (left column) are autoscaled to (mean +- 5 stddev)
2013-03-15 22:09:11 UTC <ClaudiusMaximus> which does have an unfortunate side effect of "shifting the goal posts" during usage, but hey, more fun
2013-03-15 22:48:42 UTC <mgsloan> Yeah, could have quite a bit of utility, actually
2013-03-15 22:49:00 UTC <mgsloan> real evolution does have shifting goal posts as the environment changes
2013-03-15 22:49:38 UTC <mgsloan> It'd be cool to have manual selection, maybe.  I dunno.  I think that's the idea behind the electric sheep screensaver stuff
2013-03-15 22:49:46 UTC <ClaudiusMaximus> yeah, voting
2013-03-15 22:49:51 UTC <ClaudiusMaximus> by actual people
2013-03-15 22:50:13 UTC <ClaudiusMaximus> and also "intelligent design" injected into the system
2013-03-15 22:51:12 UTC <ClaudiusMaximus> but if you say "my target X is mean(X) + stddev(X)", the mean will increase over time, presumably...
2013-03-15 22:53:41 UTC <ClaudiusMaximus> and you can get stuck if you're not careful - if you have a zillion things at X=0 and 1 thing at X=1, X=1 might be more than 5stddevs away from the mean..
2013-03-15 22:54:30 UTC <ClaudiusMaximus> would also be cool to have a histogram for each slider, showing how many things there across the range..
2013-03-15 22:56:48 UTC <ClaudiusMaximus> but not that high priority - want to display the ASTs graphically so any potential audience have something to stare at other than my face
2013-03-15 22:57:13 UTC <ClaudiusMaximus> (and fix the wonky alignment of the sliders)
2013-03-15 22:59:17 UTC <ClaudiusMaximus> and add a tabbed interface so i can have more than one target and cross breed them (like the earlier version had)
2013-03-15 22:59:43 UTC <mgsloan> ooh, that'd be really cool
2013-03-15 22:59:51 UTC <mgsloan> (the histograms and ASTs)
2013-03-15 23:01:26 UTC <ClaudiusMaximus> for the AST i want to use samples of my handwriting for the glyphs and connecting strokes, will re-use the tree layout from my lambda calculus experiments
2013-03-15 23:02:50 UTC <ClaudiusMaximus> http://archive.org/movies/thumbnails.php?identifier=ClaudiusMaximus_-_ULCIv1
2013-03-15 23:08:44 UTC <lemao> ClaudiusMaximus: how did you generate these animations?
2013-03-15 23:10:15 UTC <ClaudiusMaximus> lemao: those ones were rendering lots of svg files (using homebrew crappy String interface) then combined with rsvg ffmpeg etc
2013-03-15 23:11:36 UTC <lemao> so you printed the events as string messages and build svg frames and then put them together? Neat
2013-03-15 23:13:14 UTC <ClaudiusMaximus> http://archive.org/download/ClaudiusMaximus_-_ULCIv1/ulci.tar.bz2 is the source code, probably bitrotted by now..
2013-03-15 23:13:46 UTC <ClaudiusMaximus> anyway, must clean... laters
2013-03-15 23:59:20 UTC <luite> hehe Prof. Yorgey
2013-03-16 00:00:30 UTC <luite> i must call him that from now on :)
2013-03-16 01:10:45 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149830493 http://travis-ci.org/diagrams/diagrams-haddock/builds/5541773 The build passed.
2013-03-16 01:34:19 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06issue7 14e54d0eb http://travis-ci.org/diagrams/diagrams-haddock/builds/5542020 The build passed.
2013-03-16 01:59:44 UTC <byorgey> luite: heh, what?
2013-03-16 02:00:20 UTC <luite> byorgey: oh someone called you Prof. Yorgey on -cafe
2013-03-16 02:00:44 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 142f13cc3 http://travis-ci.org/diagrams/diagrams-haddock/builds/5542409 The build passed.
2013-03-16 02:00:47 UTC <byorgey> oh, hehe =)
2013-03-16 02:01:31 UTC <byorgey> ACTION -> bed
2013-03-16 14:01:41 UTC <jtootf> hi! can anyone please point me at the direction for the easiest creation of complex plane function/lattice graphs with diagrams? something like http://upload.wikimedia.org/wikipedia/commons/a/a8/Eisenstein_integer_lattice.png to start with. I'm reading through the manual right now and I've stumbled upon diagrams-contrib package already which has some pretty plane tilings, but still I don't see how to display cartesian axes (except for maki
2013-03-16 14:01:41 UTC <jtootf> ng them all-by-hand from segments) and have fixed coordinate system.
2013-03-16 14:02:39 UTC <jtootf> best example I've seen so far is http://projects.haskell.org/diagrams/gallery/Quasifuchsian.html but it lacks axes as well (while being very good from all other standpoints)
2013-03-16 14:11:12 UTC <fryguybob> jtootf: I don't know of any examples that have already done that, but if I were to do it I would start with generating some vertical lines.
2013-03-16 14:11:33 UTC <fryguybob> Then do that again rotated and put that on top.
2013-03-16 14:12:57 UTC <fryguybob> Then I would replace that diagram's envelope with the evelope of the view that I want.
2013-03-16 14:13:27 UTC <fryguybob> I can make an example in a minute.
2013-03-16 14:23:07 UTC <jtootf> fryguybob: thanks! I definitely need to read on envelopes
2013-03-16 14:49:58 UTC <fryguybob> jtootf: http://www.cs.rochester.edu/u/ryates/temp/axis.svg
2013-03-16 14:51:15 UTC <hpaste> fryguybob pasted âAxisâ at http://hpaste.org/84162
2013-03-16 15:17:23 UTC <jtootf> aww! thanks a lot! it looks exactly like the way I wanted :)
2013-03-16 15:25:47 UTC <fryguybob> jtootf: No problem.  It could probably be cleaner in several ways (using align instead of some transaltions, clipping) but if it works it's good :D.
2013-03-16 15:26:37 UTC <fryguybob> Also the circle is only there to show that the axis stuff is aligned to the coordinate space as you would expect it to be with the origin at (0,0).
2013-03-16 17:40:25 UTC <luite_> hm annyoing i can't reach my server through ssh
2013-03-16 17:49:05 UTC <fryguybob> :(
2013-03-16 17:49:25 UTC <luite_> can you reach http://www.hetzner-status.de/
2013-03-16 17:49:37 UTC <fryguybob> yes
2013-03-16 17:50:25 UTC <luite_> oh i can't
2013-03-16 17:50:49 UTC <luite_> does it say anything about routing problems or links to the netherlands?
2013-03-16 17:52:07 UTC <tgeeky>  StÃ¶rungsmeldung Shared Hosting Server www236.your-server.de
2013-03-16 17:52:09 UTC <fryguybob> The things listed are for yesterday.
2013-03-16 17:52:40 UTC <fryguybob> In case it is just DNS the IP I get is 193.47.99.7
2013-03-16 17:56:29 UTC <luite_> tgeeky: yeah this server isn't shared, must be a network problem
2013-03-16 18:00:07 UTC <luite_> fryguybob: i get the same ip
2013-03-16 18:00:21 UTC <luite_> with high ping time and ~50% packet loss
2013-03-16 18:03:28 UTC <luite> hello!
2013-03-16 18:03:37 UTC <luite> it looks like they fixed it :)
2013-03-17 03:36:56 UTC <travis-ci> [travis-ci] 13active/06master 1476a1c42 http://travis-ci.org/diagrams/active/builds/5562083 The build passed.
2013-03-22 15:50:19 UTC <kinghajj> Hello, all.
2013-03-22 15:53:15 UTC <kinghajj> Anyone home?
2013-03-22 15:55:48 UTC <fryguybob> kinghajj: Hi
2013-03-22 15:56:16 UTC <fryguybob> I'm not around for long, but I'll be back later if you have a question someone will see it.
2013-03-22 15:57:04 UTC <kinghajj> I just wanted some suggestions on implementing a basic XY line graph in Diagrams. Specifically, I want to graph Bitcoin prices.
2013-03-22 16:00:33 UTC <fryguybob> kinghajj: If you have your data as ordered pairs the simplest thing might be to do something like  mconcat . zipWith (~~) <*> tails
2013-03-22 16:00:57 UTC <fryguybob> I've got to run :(
2013-03-22 16:01:00 UTC <bergey> for the graph, I'd do something like fromPoints $ zipWith (r2 . (,)) times prices
2013-03-22 16:01:07 UTC <bergey> I can probably help.
2013-03-22 16:01:13 UTC <fryguybob> Oh yeah, fromPoints.
2013-03-22 16:01:27 UTC <bergey> I like yours too, just already had mine typed.
2013-03-22 16:02:22 UTC <bergey> kinghajj: Do these lines make sense to you, or should I slow down and explain in more detail?
2013-03-22 20:38:43 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 142a85db0 http://travis-ci.org/diagrams/diagrams-core/builds/5726217 The build passed.
2013-03-22 20:39:25 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 14c7c69b8 http://travis-ci.org/diagrams/diagrams-core/builds/5726225 The build passed.
2013-03-22 20:40:34 UTC <tgeeky> ACTION only couns three
2013-03-22 20:41:56 UTC <byorgey> the github bot shows a maximum of three
2013-03-22 20:42:12 UTC <byorgey> so it doesn't flood the channel if you push like 68 commits or whatever
2013-03-22 20:42:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 140b58a5f http://travis-ci.org/diagrams/diagrams-lib/builds/5726309 The build passed.
2013-03-22 20:53:14 UTC <tgeeky> who here would be in support of occasional voice-chats (using something nice and free, like Mumble) about diagrams and haskell?
2013-03-22 20:53:41 UTC <tgeeky> it seems weird to me that thousand of people use such a thing for playing video games, but virtually nobody (to my knowledge) uses them for development
2013-03-22 20:55:12 UTC <tgeeky> if it forces you to respond, s/support/oppose/
2013-03-22 20:57:33 UTC <ClaudiusMaximus> i think it might not work so well (it's easier to talk and play games simultaneously than it is to talk and write code, probably because most games don't need language processing)
2013-03-22 20:57:40 UTC <ClaudiusMaximus> but i haven't tried
2013-03-22 20:58:04 UTC <tgeeky> I sort of imagine us looking at the same piece of code in a web browser or in chat
2013-03-22 20:58:22 UTC <ClaudiusMaximus> ah that makes more sense i guess
2013-03-22 20:58:54 UTC <tgeeky> perhaps we could experiment with it? Mumble is free, fast, and easy to install.
2013-03-22 20:59:04 UTC <tgeeky> and cross-platform (Windows and Linux, at least)
2013-03-22 21:00:04 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-03-22_icosa.png (inspired by http://www.svgattic.com/images/PaperOrnaments.gif )
2013-03-22 21:00:41 UTC <tgeeky> wow it's hard to see the differences looking right to left
2013-03-22 21:02:54 UTC <ClaudiusMaximus> vertical axis is "flatness" (size of triangle relative to maximum possible size), horizontal axis is "depth" (relative to circumradius of icosahedron)
2013-03-22 21:03:52 UTC <ClaudiusMaximus> it's sort of truncated pyramids poking into an icosahedron, or something, with circular bits
2013-03-22 21:05:00 UTC <byorgey> ClaudiusMaximus: neat =)
2013-03-22 21:05:06 UTC <byorgey> tgeeky: could be fun
2013-03-22 21:05:45 UTC <tgeeky> I think it's plainly obvious that there is a *ton* of information not transmitted when we comm. over IRC
2013-03-22 21:06:06 UTC <tgeeky> getting voice would be a step in the direction of recovering it
2013-03-22 21:06:10 UTC <ClaudiusMaximus> yeah irc is kinda low bandwidth
2013-03-22 21:06:29 UTC <ClaudiusMaximus> byorgey: :)
2013-03-22 21:06:47 UTC <byorgey> ACTION installs mumble
2013-03-22 21:07:07 UTC <byorgey> installed!
2013-03-22 21:07:11 UTC <tgeeky> that was easy
2013-03-22 21:07:16 UTC <tgeeky> are you still on Arch, byorgey ?
2013-03-22 21:07:20 UTC <byorgey> yes
2013-03-22 21:07:29 UTC <byorgey> pacman -S mumble  -- super easy
2013-03-22 21:07:52 UTC <tgeeky> yep.
2013-03-22 21:07:58 UTC <byorgey> can't talk right this minute though, I'm in a coffeeshop 
2013-03-22 21:08:07 UTC <byorgey> and should be working on that type matrices paper
2013-03-22 21:08:10 UTC <tgeeky> yeah, we need to find / arrange to use a server
2013-03-22 21:08:16 UTC <tgeeky> type matrices!
2013-03-22 21:08:35 UTC <byorgey> trying to submit it to ICFP.  We'll see if we actually make it.
2013-03-22 21:08:45 UTC <byorgey> (the deadline is Thursday)
2013-03-22 21:09:16 UTC <tgeeky> when you have a draft, send it to me, I'll do everything I can to help
2013-03-22 21:10:01 UTC <carter> gl!
2013-03-22 21:10:14 UTC <carter> btw: i'm looking at dual tree right now, i might be using it quite a bit soon ;)
2013-03-22 21:10:36 UTC <carter> ClaudiusMaximus those are neat figures
2013-03-22 21:10:45 UTC <byorgey> tgeeky: thanks!
2013-03-22 21:10:52 UTC <byorgey> carter: cool
2013-03-22 21:11:31 UTC <carter> byorgey i might use it as a hacky way of avoiding writing (for now) writing some quad trees that know their own convex hulls of their sub regions
2013-03-22 21:12:17 UTC <carter> its kinda funny, i'm trying to view the data vis layer as being something that "emits" to diagrams, but i'm also finding i can reuse a lot of the support machinery all the same :)
2013-03-22 21:12:42 UTC <tgeeky> ACTION thinks my first project with diagrams after my hardware crash is going to be feynman diagrams.
2013-03-22 21:12:49 UTC <carter> those are neat
2013-03-22 21:12:57 UTC <carter> i really want to learn enough physics to understand them at some point
2013-03-22 21:13:01 UTC <tgeeky> and also very simple
2013-03-22 21:14:24 UTC <ClaudiusMaximus> carter: :)
2013-03-22 21:16:28 UTC <tgeeky> man, ICFP is already happening again. Time flies.
2013-03-22 21:16:47 UTC <byorgey> well, it's not happening until September.
2013-03-22 21:16:49 UTC <tgeeky> byorgey: is Thursday the already-slipped deadline?
2013-03-22 21:17:03 UTC <byorgey> tgeeky: the deadline for ICFP never slips.
2013-03-22 21:17:08 UTC <tgeeky> It seems every single time someone posts a deadline to haskell mailing lists, there is always a follow up :o
2013-03-22 21:17:11 UTC <tgeeky> ah, an exception! :o
2013-03-22 21:17:27 UTC <tgeeky> People who know what the term, deadline, means.
2013-03-22 21:17:29 UTC <byorgey> bigger conferences tend not to do that
2013-03-22 21:17:52 UTC <ClaudiusMaximus> phantom' x = phantom x `asTypeOf` x
2013-03-22 21:17:53 UTC <byorgey> when deadlines are extended it's usually for smaller workshops and such who need more submissions
2013-03-22 21:18:07 UTC <carter> or when NYC gets flooded and the north east is out
2013-03-22 21:18:10 UTC <carter> for a week
2013-03-22 21:18:16 UTC <carter> i saw that happen fro a few big conferences
2013-03-22 21:18:43 UTC <tgeeky> carter: if only there were conferences on natural disasters, that had to be rescheduled.
2013-03-22 21:18:49 UTC <byorgey> ClaudiusMaximus: ooh, I like that
2013-03-22 21:18:52 UTC <tgeeky> or better, natural disaster preparedness.
2013-03-22 21:20:10 UTC <byorgey> ClaudiusMaximus: perhaps that should be called phantom and the current phantom called phantom'
2013-03-22 21:20:31 UTC <byorgey> because that's usually how it gets used anyway
2013-03-22 21:21:01 UTC <byorgey> ACTION would happily accept such a patch
2013-03-22 21:22:41 UTC <byorgey> Hac Phi June 7-9! Save the date!
2013-03-22 21:23:24 UTC <tgeeky> that's quite a bit earlier
2013-03-22 21:25:50 UTC <byorgey> earlier than what?
2013-03-22 21:26:01 UTC <byorgey> oh, than what it was last year? I suppose so
2013-03-22 21:26:15 UTC <byorgey> there's no attempt to have it around the same time every year
2013-03-22 21:26:22 UTC <tgeeky> ~ 2 months
2013-03-22 21:26:29 UTC <tgeeky> yep, I didn't think so
2013-03-22 21:26:29 UTC <byorgey> we just find a time that doesn't conflict with stuff
2013-03-22 21:29:29 UTC <luite> oh that's just a month after odhac
2013-03-22 21:30:43 UTC <byorgey> true
2013-03-22 21:31:22 UTC <tgeeky> if only we lived in a time period where it would be impossible to travel from the Ukraine to Philidelphia in one month.
2013-03-22 21:31:38 UTC <byorgey> luite: why, are you thinking of attending both? =)
2013-03-22 21:32:25 UTC <byorgey> tgeeky: if only!
2013-03-22 21:43:45 UTC <carter> i should be able to swing hacphi
2013-03-22 21:45:24 UTC <luite> byorgey: hehe unfortunately no
2013-03-22 21:45:57 UTC <luite> unless Hac Phi offers travel compensation :)
2013-03-22 21:49:14 UTC <byorgey> luite: heh, I totally wish we could!
2013-03-22 21:49:41 UTC <carter> byorgey has anyone written a convex hull alg for diagrams?
2013-03-22 21:49:57 UTC <carter> should be pretty simple to write a sort and sweep one 
2013-03-22 21:50:02 UTC <carter> at least for point sets
2013-03-22 21:50:06 UTC <byorgey> carter: nope
2013-03-22 21:50:10 UTC <carter> ok
2013-03-22 21:50:22 UTC <byorgey> carter: it's not really diagrams-specific, but I guess it would be nice to have one that uses the same types as diagrams
2013-03-22 21:50:30 UTC <carter> i'll look into that
2013-03-22 21:50:37 UTC <carter> might be 2D specific 
2013-03-22 21:50:42 UTC <carter> but thats not a bad problem to have
2013-03-22 21:51:00 UTC <byorgey> yes, convex hull is considerably more complicated in higher dimensions
2013-03-22 21:51:09 UTC <carter> i'm going to be on a diagrams + computational geometry bender for the next 2-4 weeks
2013-03-22 21:51:26 UTC <byorgey> nice =)
2013-03-22 21:51:44 UTC <byorgey> I'm sure there are already implementations of convex hull on Hackage
2013-03-22 21:52:03 UTC <byorgey> I seem to recall I wanted an implementation of Voronoi diagrams at some point in the past, and found a package that does it, but couldn't figure out how to use it
2013-03-22 21:52:33 UTC <carter> ok, theres some  sweep hull algs
2013-03-22 21:52:46 UTC <carter> but i'm not sure if i'm ok with how they look
2013-03-22 21:52:59 UTC <carter> remind me about voronoi in a week or so
2013-03-22 21:53:17 UTC <carter> i know some neat tricks for doing generalized voronio
2013-03-22 21:53:34 UTC <carter> and doing that is conducive to some other stuff i'll be focusing on
2013-03-22 21:54:02 UTC <carter> theres also the small chance i may secure some biz funding that would partially overlap with adding such nice things 
2013-03-22 21:54:13 UTC <carter> in the work i'd be doing
2013-03-22 22:07:45 UTC <tgeeky> carter: for what it's worth, there is a convex hull related pearl in the Functional Pearls book
2013-03-22 22:07:55 UTC <carter> tgeeky neat
2013-03-22 22:08:00 UTC <carter> the recent edition?
2013-03-22 22:08:09 UTC <tgeeky> yep.
2013-03-22 22:08:10 UTC <carter> how fancy is it?
2013-03-22 22:08:23 UTC <tgeeky> http://www.amazon.com/Pearls-Functional-Algorithm-Design-Richard/dp/0521513383
2013-03-22 22:08:42 UTC <carter> i'm planning to do a convex hull quad treee
2013-03-22 22:08:50 UTC <carter> as in each sub tree has its convex hul
2013-03-22 22:08:56 UTC <carter> and then merging the hulls
2013-03-22 22:09:03 UTC <carter> each level hup
2013-03-22 22:09:04 UTC <carter> *up
2013-03-22 22:09:30 UTC <carter> i should still order the book 'caue it'd probably be  fun reading
2013-03-22 22:09:59 UTC <carter> i'll wait till next week htough
2013-03-22 22:10:02 UTC <carter> merry friday all
2013-03-22 22:13:58 UTC <tgeeky> doh. I'm sending PMs to nobody
2013-03-22 22:25:35 UTC <tgeeky> luite: do you have the package 'plugin' installed?
2013-03-22 22:28:49 UTC <luite> probably not
2013-03-22 22:28:57 UTC <luite> should i? :)
2013-03-22 22:31:38 UTC <tgeeky> maybe. It'd dons' eval package, I think
2013-03-22 22:31:49 UTC <tgeeky> I also think it (or something like it) is used in lambdabot
2013-03-22 22:32:05 UTC <tgeeky> 'plugins', that is.
2013-03-23 00:36:44 UTC <fryguybob> byorgey: Hac-phi!
2013-03-23 00:47:37 UTC <byorgey> yeah!
2013-03-23 01:17:53 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 140ebcf85 http://travis-ci.org/diagrams/diagrams-builder/builds/5731728 The build has errored.
2013-03-23 01:18:17 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14133ad3f http://travis-ci.org/diagrams/diagrams-builder/builds/5731730 The build has errored.
2013-03-23 01:23:08 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 143c67e49 http://travis-ci.org/diagrams/diagrams-builder/builds/5731825 The build has errored.
2013-03-23 01:26:37 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14e107d35 http://travis-ci.org/diagrams/diagrams-builder/builds/5731868 The build has errored.
2013-03-23 01:45:57 UTC <byorgey> gah!
2013-03-23 01:46:22 UTC <byorgey> I need some CI for the CI.
2013-03-23 01:51:37 UTC <bergey> This one found NumInstances 1.2 :)
2013-03-23 01:52:39 UTC <bergey> When I was trying to get diagrams-doc to build, I came really close to firing up a VM to try to reproduce the travis behavior....
2013-03-23 01:52:40 UTC <byorgey> bergey: exactly =)
2013-03-23 01:52:45 UTC <byorgey> hehe
2013-03-23 01:52:52 UTC <byorgey> good luck! =P
2013-03-23 01:53:32 UTC <bergey> I figure it wouldn't be any faster, but at least less embarassing than the string of commits :)
2013-03-23 01:54:33 UTC <byorgey> hehe =)
2013-03-23 01:54:53 UTC <byorgey> I don't find it all that embarrassing, just annoying
2013-03-23 01:55:39 UTC <tgeeky> tracking your own build env in haskell can be challenging enough, tracking someone else's :(
2013-03-23 01:56:15 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14acefc25 http://travis-ci.org/diagrams/diagrams-builder/builds/5732259 The build passed.
2013-03-23 01:56:31 UTC <byorgey> \o/
2013-03-23 01:58:57 UTC <tgeeky> that is the build from 21:47?
2013-03-23 01:58:59 UTC <tgeeky> that's not too slow at all
2013-03-23 02:04:25 UTC <byorgey> yeah, it's not bad
2013-03-23 02:08:56 UTC <byorgey> ACTION might release diagrams-haddock and diagrams-contrib-0.6.1 tomorrow
2013-03-23 02:09:46 UTC <byorgey> I have to write a blog post by tomorrow anyway (https://www.beeminder.com/byorgey/goals/blogging) =)
2013-03-23 02:11:05 UTC <luite> wow 40 goals
2013-03-23 02:11:44 UTC <byorgey> only 23 active
2013-03-23 02:14:23 UTC <tgeeky> ACTION is a little confused by this graph, but reading the FAQ... is the money donated to charity?
2013-03-23 02:14:32 UTC <tgeeky> or to beeminder?
2013-03-23 02:14:36 UTC <byorgey> no, it goes to beeminder
2013-03-23 02:14:47 UTC <byorgey> that's part of their business model =)
2013-03-23 02:14:50 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1448f23cd http://travis-ci.org/diagrams/diagrams-haddock/builds/5732554 The build passed.
2013-03-23 02:16:07 UTC <tgeeky> are these mystery goals in your profile really mysteries
2013-03-23 02:16:07 UTC <tgeeky> or just private?
2013-03-23 02:16:39 UTC <byorgey> hehe, no, just private
2013-03-23 02:20:13 UTC <tgeeky> clean one shower item per day
2013-03-23 02:20:58 UTC <byorgey> does it really say per day?
2013-03-23 02:21:17 UTC <byorgey> heh, it's per week
2013-03-23 02:21:43 UTC <tgeeky> i can't see that part, it just cuts off, and I coudln't find that in the full page
2013-03-23 02:21:50 UTC <tgeeky> can you have negative goals?
2013-03-23 02:21:53 UTC <byorgey> you're right, I can't find it either
2013-03-23 02:21:54 UTC <tgeeky> I guess why not
2013-03-23 02:21:54 UTC <byorgey> yes, you can
2013-03-23 02:22:08 UTC <tgeeky> goal stats 1.0 per week
2013-03-23 02:22:14 UTC <byorgey> many people use beeminder to lose weight
2013-03-23 02:22:42 UTC <byorgey> you can also have a goal where the line goes up but you want to be *below* it, i.e. you want to limit the amount of something you do
2013-03-23 02:22:59 UTC <tgeeky> yeah, that's what I was referring to
2013-03-23 02:23:05 UTC <byorgey> but those don't work that well for me because it's too easy to get lazy and not enter any data
2013-03-23 02:23:13 UTC <byorgey> e.g. see my 'sugar' goal all the way at the bottom
2013-03-23 02:23:15 UTC <tgeeky> this site is, the art of staying on a linear curve :o
2013-03-23 02:24:59 UTC <luite> should they rotate the site 45 degrees? i guess that would motivate less
2013-03-23 02:25:42 UTC <tgeeky> i think in this sense, the goal is rotationally invariant
2013-03-23 02:29:46 UTC <luite> nah but if your target is a horizontal line then you don't feel like you're progressing
2013-03-23 02:31:32 UTC <tgeeky> perhaps not, but you know you're falling if you're falling :o
2013-03-23 02:46:48 UTC <luite> hm i could use some goals: go to bed early, write more papers, work more on ghcjs, comment less in discussions about feminism.
2013-03-23 02:47:09 UTC <luite> but i'm afraid they'd hit $2430 pretty quickly, then i'd be goalless and penniless
2013-03-23 02:49:52 UTC <luite> but going to bed late on friday should be acceptble eh?
2013-03-23 04:18:56 UTC <tgeeky> that's a cool moment for me. I just looked through conal's slides, and I have already done most of the examples the same way he did.
2013-03-23 04:19:39 UTC <tgeeky> I missed the most important one, of course.
2013-03-23 04:19:49 UTC <tgeeky> slide 20
2013-03-23 04:24:15 UTC <luite> ack gc() can replace the current thread's stack :/
2013-03-23 04:32:50 UTC <tgeeky> luite: whose gc()?
2013-03-23 04:33:52 UTC <luite> mein
2013-03-23 04:46:39 UTC <luite> yay all tests succeed now
2013-03-23 04:49:31 UTC <luite> although i should add some optimization for when to run the garbage collector
2013-03-23 05:13:52 UTC <luite> if weak refs now work then all basic functionality except STM works
2013-03-23 05:17:49 UTC <luite> but i probably shouldn't start a new thread for each weak ref finalizer
2013-03-23 05:45:55 UTC <tgeeky> this is one of the coolest things on the internet: http://www.youtube.com/watch?v=xe-f4gokRBs
2013-03-23 05:48:43 UTC <luite> grmblz it finalizes stdout because finalizers don't keep references alive
2013-03-23 05:49:08 UTC <luite> tgeeky: hehe cool, must be a lot of stress due to rapid cooling
2013-03-23 18:59:38 UTC <byorgey> tgeeky: woah, that's amazing
2013-03-23 19:11:25 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 145d11ed8 http://travis-ci.org/diagrams/diagrams-contrib/builds/5745312 The build has errored.
2013-03-23 19:20:46 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 142d6209f http://travis-ci.org/diagrams/diagrams-contrib/builds/5745425 The build passed.
2013-03-23 19:30:16 UTC <byorgey> oooh, force-push is red, nice =)
2013-03-23 19:32:41 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14c41f768 http://travis-ci.org/diagrams/diagrams-contrib/builds/5745657 The build passed.
2013-03-23 19:36:27 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 146d93ca9 http://travis-ci.org/diagrams/diagrams-contrib/builds/5745726 The build passed.
2013-03-23 19:48:35 UTC <luite> :)
2013-03-23 19:55:30 UTC <byorgey> aaaaand diagrams-contrib-0.6.1 is away!
2013-03-23 19:55:56 UTC <byorgey> with circle packing, factorization diagrams, iterated subset fractals, a more general turtle API, and lots of diagrams-haddock examples
2013-03-23 19:56:14 UTC <byorgey> next up: diagrams-haddock
2013-03-23 20:07:53 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1496899f1 http://travis-ci.org/diagrams/diagrams-haddock/builds/5746223 The build passed.
2013-03-23 20:24:38 UTC <byorgey> and now to just wait for the diagrams-contrib documentation to get built on Hackage (and make sure the images work) before writing a blog post about it!
2013-03-23 20:51:12 UTC <carter> byorgey Data vis substrate hacking is underway! mwahahahah
2013-03-23 20:51:30 UTC <carter> (stay tuned)
2013-03-23 20:51:36 UTC <carter> and merry icfp submitting
2013-03-23 20:55:25 UTC <byorgey> carter: sweet!
2013-03-23 20:55:38 UTC <byorgey> carter: do you have it on github or somewhere publicly visible?
2013-03-23 20:55:44 UTC <carter> byorgey not yet
2013-03-23 20:55:58 UTC <carter> i'm first hacking out a whole bunch of support internal data structures this week
2013-03-23 20:56:13 UTC <carter> those will be on github first
2013-03-23 20:56:24 UTC <carter> then the things on top of them will be hacked out and made visible too
2013-03-23 20:57:05 UTC <carter> like, first I'm writing the fastest known ephemeral priority queue
2013-03-23 20:57:14 UTC <carter> adding some binning / aggregation support
2013-03-23 20:57:59 UTC <carter> etc
2013-03-23 21:01:22 UTC <carter> in some way the data structure substrate i'm first rolling is a warm up for crazier stuff hacking wise in the analytics db project
2013-03-23 21:15:24 UTC <byorgey> sweet, the docs are built on Hackage, with images! http://hackage.haskell.org/package/diagrams%2Dcontrib
2013-03-23 21:25:20 UTC <fryguybob> woohoo!
2013-03-23 21:29:13 UTC <tgeeky> sweet jesus!
2013-03-23 21:29:15 UTC <tgeeky> amazing!
2013-03-23 21:29:50 UTC <tgeeky> byorgey: this will drive up diagrams adoption by the haskelliverse
2013-03-23 21:29:57 UTC <tgeeky> byorgey: mark my words! :o
2013-03-23 21:29:58 UTC <byorgey> I hope so!
2013-03-23 21:30:51 UTC <tgeeky> heck, there are probably a few of my packages that I haven't published specifically because I don't have a non-arbitrary way to include a picture
2013-03-23 21:31:35 UTC <byorgey> I guess you no longer have an excuse!
2013-03-23 21:36:23 UTC <tgeeky> http://hackage.haskell.org/packages/archive/diagrams-contrib/0.6.1/doc/html/Diagrams-TwoD-Tilings.html <-- like this
2013-03-23 21:36:50 UTC <tgeeky> this is incomparably more approachable and useful as reference compared to before.
2013-03-23 21:39:53 UTC <fryguybob> hehe "incomparably more ... as ... compared to ..."
2013-03-23 21:40:17 UTC <tgeeky> fryguybob: yes! it's that drastic!
2013-03-23 21:40:26 UTC <tgeeky> it's self-invalidatingly important
2013-03-23 21:40:48 UTC <fryguybob> byorgey: I didn't realize hackage would build the diagrams, oh, they are in the upload and cabal just copies them, I get it now.
2013-03-23 21:40:59 UTC <fryguybob> hehe
2013-03-23 21:41:51 UTC <tgeeky> fryguybob: still, this way you have the impression that you could have build the same docs locally for yourself
2013-03-23 21:41:52 UTC <fryguybob> "It is so amazing this sentence can't even describe it."
2013-03-23 21:42:37 UTC <tgeeky> fryguybob: exactly!
2013-03-23 21:43:01 UTC <tgeeky> Forget the two sentence Godelian contradiction.
2013-03-23 22:08:52 UTC <carter> question: how much work would it be to add a pdf backend using either http://hackage.haskell.org/package/HPDF-1.4.5 or  http://hackage.haskell.org/package/pdf-toolbox-document-0.0.1.0 ?
2013-03-23 22:09:18 UTC <carter> i might be open to sacrificing some time to trying to do that if folks who know more think thats tractable
2013-03-23 22:09:41 UTC <byorgey> not too much work, I think
2013-03-23 22:10:28 UTC <byorgey> you could probably mostly copy the postscript backend
2013-03-23 22:10:42 UTC <byorgey> postscript and/or cairo
2013-03-23 22:20:30 UTC <luite> pdf support would be cool for transparency
2013-03-23 22:22:55 UTC <carter> hrmmm,  i like the pdf-toolbox license more, but hpdf migthhave the right machinery for now
2013-03-23 22:24:07 UTC <luite> are there things that direct pdf output would give you over converting through svg?
2013-03-23 22:24:18 UTC <carter> luite probably not
2013-03-23 22:24:22 UTC <carter> but would sound cool
2013-03-23 22:24:28 UTC <carter> i'll see if its *easy*
2013-03-23 22:24:31 UTC <luite> pdf font support is probably better
2013-03-23 22:25:13 UTC <byorgey> honestly carter I would rather see you working on your data vis framework than coding up yet another backend
2013-03-23 22:25:17 UTC <carter> ok
2013-03-23 22:25:22 UTC <carter> thanks for reminding me :)
2013-03-23 22:25:40 UTC <byorgey> =)
2013-03-23 22:25:43 UTC <carter> yeah... also was looking at the hpdf stuff and someone needs to clean up some of the api even though it *should* have enough machinery
2013-03-23 22:25:59 UTC <carter> half of good engineering is people chearleading eachother in effective prioritization
2013-03-23 22:26:10 UTC <byorgey> very true =)
2013-03-23 22:26:40 UTC <luite> :)
2013-03-23 22:27:02 UTC <luite> getting diagrams to build with HEAD would also be very useful ;)
2013-03-23 22:27:15 UTC <byorgey> ah, see, thanks for reminding me luite =)
2013-03-23 22:27:33 UTC <byorgey> that's one of the next things on my list
2013-03-23 22:28:03 UTC <luite> i hope there are no annoying depency problems
2013-03-23 22:28:41 UTC <byorgey> I guess we'll find out
2013-03-23 22:37:54 UTC <fryguybob> luite: A benefit of PDF over SVG is more compliant renderers.
2013-03-23 22:39:47 UTC <luite> hmm i did notice some significant differences between adobe and apple
2013-03-23 22:40:17 UTC <luite> but that was mostly in image handling
2013-03-24 00:16:38 UTC <gabsiml> is byorgey brent?
2013-03-24 00:16:53 UTC <fryguybob> gabsiml: Yes
2013-03-24 00:17:07 UTC <gabsiml> I must be in the right place
2013-03-24 00:17:29 UTC <fryguybob> Oh yes, this is the right place!
2013-03-24 00:17:54 UTC <gabsiml> I can't seem to make the -l watched file thing actually work. I tried incron but... toonooby
2013-03-24 00:19:23 UTC <fryguybob> gabsiml: Which backend?
2013-03-24 00:19:33 UTC <gabsiml> the svg backend
2013-03-24 00:20:04 UTC <gabsiml> I'm following the tutorial
2013-03-24 00:20:21 UTC <fryguybob> I've never tried that feature myself, I'll see if it works for me.
2013-03-24 00:25:36 UTC <fryguybob> gabsiml: It does work for me.  Did you compile with GHC (I don't think it works with ghci) and did you specify the source with -s?
2013-03-24 00:25:56 UTC <gabsiml> Brent was trying to explain that if I ran the render with this -l loop it would rerender when the file changed
2013-03-24 00:25:58 UTC <fryguybob> (also it doesn't work on windows)
2013-03-24 00:26:19 UTC <gabsiml> but do I have to re --make?
2013-03-24 00:27:09 UTC <fryguybob> gabsiml: I did: ghc --make Blah.hs ; ./Blah -w 400 -o blah.svg -l -s Blah.hs
2013-03-24 00:28:07 UTC <gabsiml> ok, that makes more sense I was just looping the render and it didn't seem right
2013-03-24 00:28:35 UTC <fryguybob> Oh, yeah, it should just be  defaultMain myDiagram
2013-03-24 00:32:28 UTC <gabsiml> YAAY! <fryguybob> is my new best friend
2013-03-24 00:33:06 UTC <gabsiml> This is the graphics workflow I have always wanted and didn't know how to implement
2013-03-24 00:33:58 UTC <byorgey> hi gabsiml =)
2013-03-24 00:34:03 UTC <fryguybob> gabsiml: Excellent!
2013-03-24 00:34:48 UTC <byorgey> http://byorgey.wordpress.com/2013/03/23/introducing-diagrams-haddock/
2013-03-24 00:34:56 UTC <byorgey> ACTION -> off to watch a movie
2013-03-24 00:35:03 UTC <gabsiml> sounds good
2013-03-24 00:35:10 UTC <fryguybob> I hope it is a good movie!
2013-03-24 00:35:23 UTC <byorgey> I think we have Good Will Hunting
2013-03-24 00:35:41 UTC <byorgey> which I seem to recall being good, though it was a long time ago that I saw it
2013-03-24 00:37:49 UTC <gabsiml> sad elliot smith music
2013-03-24 00:45:28 UTC <gabsiml> how does one break this loop? I use ctrl-c
2013-03-24 00:45:42 UTC <fryguybob> gabsiml: Yes
2013-03-24 00:46:32 UTC <gabsiml> gonna be some geometric art tonight! well maybe a few nights from now
2013-03-24 00:48:39 UTC <fryguybob> gabsiml: Fun!  We would love to see it if you feel like sharing.
2013-03-24 00:50:00 UTC <gabsiml> I usually develop stuff and then hang them like paintings (3'x20') but with this new workflow I might be able to show more
2013-03-24 00:50:12 UTC <gabsiml> on the web
2013-03-24 00:50:34 UTC <luite> http://hdiff.luite.com:3000/
2013-03-24 00:53:02 UTC <fryguybob> byorgey: Nice arrow in the  foozleDia
2013-03-24 00:53:55 UTC <gabsiml> <luite> that's a beauty! is that an alife blinker?
2013-03-24 00:54:04 UTC <fryguybob> luite: It's alive!
2013-03-24 00:54:31 UTC <fryguybob> And rts.js is only 18505 lines!
2013-03-24 00:54:38 UTC <luite> gabsiml: an oscillator, kok's galaxy
2013-03-24 00:54:55 UTC <luite> fryguybob: out.js is the one you need :)
2013-03-24 00:55:12 UTC <luite> totally unoptimized for size, that's the next step
2013-03-24 00:55:40 UTC <fryguybob> hehe
2013-03-24 00:56:39 UTC <luite> close web developer tools if you want it to run fast, i think it disables the jit compiler, at least in firefo
2013-03-24 00:56:42 UTC <luite> x
2013-03-24 00:57:13 UTC <luite> still firefox is slower than i expected
2013-03-24 00:57:58 UTC <fryguybob> ACTION fires up IE just because.
2013-03-24 00:58:18 UTC <luite> i hope it's IE 10 :)
2013-03-24 00:58:31 UTC <fryguybob> It is telling me that it is.
2013-03-24 00:58:45 UTC <fryguybob> "Meet your new browser"
2013-03-24 01:00:12 UTC <luite> oh i guess I could've compiled with -O2
2013-03-24 01:01:39 UTC <fryguybob> Looks like it can't get passed line 2 of lib.js
2013-03-24 01:01:47 UTC <fryguybob> ACTION closes IE until next time.
2013-03-24 01:02:28 UTC <luite> oh that's annoying
2013-03-24 01:02:41 UTC <luite> i think i haven't written that myself
2013-03-24 01:04:01 UTC <luite> http://hdiff.luite.com:3000/life.hs.txt
2013-03-24 03:27:15 UTC <luite> http://hdiff.luite.com:3000/ :)
2013-03-24 03:27:28 UTC <luite> every square is a different thread
2013-03-24 03:28:47 UTC <tgeeky> i bet on "red square"
2013-03-24 03:28:51 UTC <tgeeky> and they're off!
2013-03-24 03:29:13 UTC <tgeeky> red square edges out red square. But no, red square overtakes red square!
2013-03-24 03:29:21 UTC <luite> scheduling isn't supposed to be totally deterministic :p
2013-03-24 03:29:44 UTC <luite> although i can think it can be made deterministic by removing external timeouts
2013-03-24 03:29:58 UTC <tgeeky> ut oh. Red square appears to have reached a hole in the space time continuum, and the end line is identified with the start! Red square teleports,and now he's at the start line!
2013-03-24 03:30:13 UTC <tgeeky> I'll stop horse-race announcing this.
2013-03-24 03:30:47 UTC <luite> ACTION is sorry for the stupid examples :p
2013-03-24 03:37:35 UTC <luite> I've removed the threadDelay now :)
2013-03-24 03:37:53 UTC <luite> so it's all preemptive threading, every thread does a lot of updates before the scheduler preempts it
2013-03-24 03:38:22 UTC <luite> and the browser gets a lot less opportunities to redraw (Although you can adjust the preemption timeout and the redraw timeouts)
2013-03-24 03:39:09 UTC <luite> http://hdiff.luite.com:3000/race.hs.txt
2013-03-24 03:43:38 UTC <luite> hm, yield doesn't save the thread state properly
2013-03-24 03:56:20 UTC <luite> yay yield fixed
2013-03-24 04:50:37 UTC <luite> hm i need a compellign example thing to build with ghcjs, preferably something that really uses threads, async exceptions etc
2013-03-24 04:52:30 UTC <tgeeky> luite: provide a seed list of possibly bad ideas
2013-03-24 04:56:54 UTC <tgeeky> byorgey: have you tried providing a ramdisk to --cachedir in diagrams-haddock?
2013-03-24 04:57:18 UTC <tgeeky> or an SVG, something rather fast
2013-03-24 04:57:23 UTC <tgeeky> SSD. sorry
2013-03-24 04:59:50 UTC <luite> tgeeky: perhaps some reactive-banana thing
2013-03-24 05:01:48 UTC <tgeeky> luite: you could do the examples that come with simonmar's parallel haskell paper
2013-03-24 05:03:50 UTC <tgeeky> https://github.com/simonmar/par-tutorial
2013-03-24 05:04:37 UTC <luite> oh i didnt know there was a github
2013-03-24 05:05:15 UTC <tgeeky> he has others that are related, I think
2013-03-24 05:05:22 UTC <tgeeky> they certainly would make good starts?
2013-03-24 05:06:14 UTC <luite> hmm, i'm not sure they're really suitable
2013-03-24 05:06:38 UTC <tgeeky> you want more of a point-at-a-package and go kind of thing? :o
2013-03-24 05:06:40 UTC <luite> ghcjs doesn't have stm yet, and no parallelism
2013-03-24 05:07:00 UTC <tgeeky> ah, well then they will eventually be helpful
2013-03-24 05:07:13 UTC <luite> that's true :)
2013-03-24 05:07:32 UTC <luite> do you like javascript and are you interested in stm? ;)
2013-03-24 05:08:14 UTC <tgeeky> no and yes
2013-03-24 05:08:28 UTC <tgeeky> though ultimately I will have to get over the former
2013-03-24 05:08:51 UTC <luite> fryguybob is going to document the stm implementation a bit
2013-03-24 05:09:03 UTC <luite> that will hopefully help :)
2013-03-24 05:09:16 UTC <tgeeky> luite: you could do something yourself with haskell-diagrams
2013-03-24 05:09:38 UTC <luite> diagram's doesn't compile yet with ghcjs because it's based on HEAD
2013-03-24 05:09:42 UTC <luite> diagrams
2013-03-24 05:09:57 UTC <tgeeky> ghcjs <- GHC HEAD?
2013-03-24 05:10:01 UTC <luite> yeah
2013-03-24 05:10:13 UTC <tgeeky> because of bugs or features?
2013-03-24 05:10:13 UTC <luite> not in the main tree, but it doesn't compile with 7.6
2013-03-24 05:10:17 UTC <luite> features
2013-03-24 05:10:25 UTC <tgeeky> extensions?
2013-03-24 05:10:40 UTC <tgeeky> (new) extensions?
2013-03-24 05:10:43 UTC <luite> http://hdiff.luite.com:3000/race.hs.txt <- see the foreign import, not supported in regular ghc yet
2013-03-24 05:10:54 UTC <luite> also cross compilation support and some minor other patches
2013-03-24 05:11:10 UTC <tgeeky> how neat is that
2013-03-24 05:12:13 UTC <tgeeky> of course, you also don't need parallelism, but you can use parallel code anyway.
2013-03-24 05:12:43 UTC <tgeeky> I mean, if you can't support it, it doesn't stop you from trying to complete with one data point on the performace listings in the paper
2013-03-24 05:12:45 UTC <luite> yeah sparks just won't do anything
2013-03-24 05:13:09 UTC <luite> i'm not sure if they don't break, haven't really checked the primops for those
2013-03-24 05:14:34 UTC <luite> https://github.com/ghcjs/ghcjs/blob/gen2-64-alth/src/Gen2/Prim.hs <- hm, still a bunch of unimplemented ones, that will probably give some errors, need to add stubs
2013-03-24 06:21:15 UTC <tgeeky> wow.
2013-03-24 06:21:22 UTC <tgeeky> this is extraordinary: http://vimeo.com/62507729
2013-03-24 06:21:52 UTC <tgeeky> haha. curiously, a lightning bolt struck right behind my house as I pasted that
2013-03-24 18:42:20 UTC <tgeeky> byorgey: in the reddit thread accompanying your diagrams-haddock...
2013-03-24 18:42:44 UTC <tgeeky> byorgey: isn't the fact that you linked to built diagrams on Hackage evidence that it works? Surely Hackage isn't building HEAD for you.
2013-03-24 18:42:57 UTC <tgeeky> or maybe it is running cabal HEAD
2013-03-24 19:30:25 UTC <byorgey> tgeeky: no one was disputing that it works.  Hackage is not running cabal HEAD; I am not using the extra-source-files feature yet
2013-03-24 20:05:15 UTC <fryguybob> luite: I wish I had time I would just write an STM for you.  It wouldn't be hard, the tricky bits being of course throwing an exception to a susspended thread in a transaction.
2013-03-24 20:06:36 UTC <luite> async exceptions already work in ghcjs, masking/unmasking and interruptible actions too. does STM need anything else?
2013-03-24 20:08:21 UTC <fryguybob> luite: There are a few cases that need to be checked.  The GC normally also validates running transactions to kill off ones that won't terminate due to seeing inconsistent state.
2013-03-24 20:10:39 UTC <luite> ah that's also quite doable i guess
2013-03-24 20:11:38 UTC <fryguybob> Yeah, I don't think any of it is hard.  It looks like if you ignore invariants things get even easier.  I don't think invariants were really intended to be used beyond debugging which you want to do not in JS anyway.
2013-03-24 20:15:47 UTC <tgeeky> byorgey: he says: "EDIT: As of now, I imagine that the auto-generated haddock documentation on Hackage will stop being generated for packages that try to use this."
2013-03-24 20:16:15 UTC <byorgey> tgeeky: I interpreter "this" in that comment to mean "the extra-html-files field"
2013-03-24 20:16:26 UTC <byorgey> not "diagrams-haddock"
2013-03-24 20:16:46 UTC <byorgey> but in any case I'm pretty sure even extra-html-files doesn't stop haddock documentation getting built on Hackage.
2013-03-24 20:17:23 UTC <tgeeky> byorgey: oh, I interpreted it as meaning that it wouldn't work in general
2013-03-24 20:17:43 UTC <tgeeky> "this" including the Setup.hs solution
2013-03-24 20:17:53 UTC <byorgey> well, who knows what it was intended to mean.  Whatever it was, it's wrong =P
2013-03-24 20:18:03 UTC <tgeeky> indeed!
2013-03-24 20:18:15 UTC <luite> fryguybob: yeah the hard part was redoing the whole heap to make async exceptions and blackholes possible :)
2013-03-24 20:19:03 UTC <luite> unfortunately every time i think it gets easier now i find more hard parts ;)
2013-03-24 20:19:16 UTC <luite> and i still have no paper
2013-03-24 22:58:00 UTC <cmears> mgsloan, diagrams-ghci looks really nice, I think it is what I have longed for
2013-03-25 02:46:51 UTC <tgeeky> oh well. I suppose #haskell-blah is a waste of time anyway.
2013-03-25 02:53:55 UTC <tgeeky> byorgey_: I should have noticed that you're never in #haskell-blah, and followed suit :)
2013-03-25 02:56:36 UTC <tgeeky> byorgey_: also, I'll give you mumble server information tonight or tomorrow just so you can test / setup
2013-03-25 03:07:33 UTC <luite> are you still banned?
2013-03-25 03:47:26 UTC <tgeeky> yes. There was a nice bueracratic exchange in #haskell-ops, where I have been asking #haskell-blah ops to unban me. Instead of addressing me at all, Philippa noted that there is a no-idle policy in #haskell-ops, how #haskell-ops isn't responsible for #-blah
2013-03-25 03:50:41 UTC <tgeeky> I think maybe it's supposed to be a lesson in arbitrary authority?
2013-03-25 03:53:20 UTC <luite> hm hadn't thought of that... 
2013-03-25 03:54:01 UTC <luite> i kinda doubt it though, since the discussion wasn't about blatantly obvious oppression, more the subtle variant
2013-03-25 03:56:27 UTC <tgeeky> it's subtle in the sense of severity.
2013-03-25 03:56:43 UTC <luite> that's true
2013-03-25 03:56:56 UTC <luite> i hope for you at least :p
2013-03-25 03:58:23 UTC <luite> now that you mention it, it's actually quite close, being arbitrarily excluded from some group of 'brochatters'
2013-03-25 03:58:56 UTC <luite> that pun doesn't really work there eh
2013-03-25 04:04:29 UTC <tgeeky> hehe. I don't see sex, sexuality, or sexism being involved, but there was some wolves-cornering-a-child kind of activity preceeding the banning.
2013-03-25 04:05:06 UTC <tgeeky> i want to get the physics people from #-blah in #-physics or something
2013-03-25 04:05:27 UTC <tgeeky> people with any level of interest in that subject are the only people I'd be looking for in #-blah
2013-03-25 04:32:18 UTC <luite> hm i'm still quite surprised everytime ghcjs still works after i change something
2013-03-25 04:33:16 UTC <luite> is there going to be a haskell implementors workshop this year at icfp again?
2013-03-25 04:34:24 UTC <tgeeky> luite: http://icfpconference.org/icfp2013/affiliated.html
2013-03-25 04:34:58 UTC <carter> ooo
2013-03-25 04:35:09 UTC <carter> also boston is easy for me to get to :)
2013-03-25 04:36:58 UTC <luite> tgeeky: ah it wasn't on the wiki
2013-03-25 04:37:35 UTC <luite> i've changed so much in the past week that it wasn't a good idea to write a paper about the current state of ghcjs
2013-03-25 04:39:09 UTC <tgeeky> hahahahaha
2013-03-25 04:39:37 UTC <tgeeky> luite: The State of GHCJS is: in transition. Next question.
2013-03-25 04:44:18 UTC <luite> tgeeky: well, async ffi (being able to let an ffi function do an ajax request for example, which suspends the current thread, and then wake it up again when the ajax result is in), the "foreign import javascript" thing with the $1, $2 etc placeholder macros, support for weak references, adjustable CAF retaining policy and now callback support from javascript (onClick events etc), all less than a week old
2013-03-25 04:45:14 UTC <tgeeky> luite: I would say, then, I think you should keep doing what you're doing.
2013-03-25 04:45:39 UTC <tgeeky> re: our earlier discussion of doing other things
2013-03-25 04:45:59 UTC <luite> hm i don't remember that one :/
2013-03-25 04:46:33 UTC <tgeeky> maybe I hallucinated it
2013-03-25 04:46:42 UTC <luite> more likely that i forgotted it :p
2013-03-25 04:50:15 UTC <luite> a few weaks more time would've been great
2013-03-25 04:50:17 UTC <luite> weeks
2013-03-25 04:50:35 UTC <tgeeky> are you done?
2013-03-25 04:50:44 UTC <tgeeky> with whatever ghcjs bounty hunting thing you are doing
2013-03-25 04:51:23 UTC <luite> oh ghcjs won't be done in a few weeks, but then the basics would work well enough, and i'd have written a few apps in it
2013-03-25 04:52:10 UTC <luite> still lots to be done wrt code size, cabal support, optimization, support for more packages (that require some foreign functions)
2013-03-25 04:54:11 UTC <luite> and then documentation with examples
2013-03-25 04:55:09 UTC <tgeeky> is wolfgang backended by GHCJS head?
2013-03-25 04:55:15 UTC <tgeeky> or GHCJS at all?
2013-03-25 04:55:47 UTC <luite> not yet
2013-03-25 04:56:02 UTC <luite> need a GHCJS dynamic linker for that
2013-03-25 04:56:08 UTC <luite> or whatever you call it
2013-03-25 04:56:46 UTC <luite> something that doesn't make one big javascript "executable" with everything, but that can build blocks that can be loaded independently
2013-03-25 04:58:57 UTC <luite> it feels like GHCJS is mostly done, but that means it's probably about 20% :)
2013-03-25 07:06:43 UTC <luite> http://hdiff.luite.com:3020/
2013-03-25 07:07:55 UTC <luite> http://hdiff.luite.com:3020/event.hs.txt
2013-03-25 07:12:25 UTC <luite> comments on how event handling is done, would that be usable?
2013-03-25 08:40:26 UTC <mgsloan> luite: looks good to me!  I'm doing most of my event handling via something like https://github.com/faylang/fay-jquery/blob/master/src/JQuery.hs#L545
2013-03-25 08:40:26 UTC <mgsloan> Also, even though there's a comment saying "unbind not useful in Fay ?", that's not quite right - yes, yes it is
2013-03-25 08:46:57 UTC <timthelion> Hey, has anyone looked into the possibility of adding support for fixed width letters which take up space?
2013-03-25 08:47:10 UTC <timthelion> As a method of displaying + formatting text?
2013-03-25 08:52:04 UTC <luite> mgsloan: I still need to tweak some stuff, i think that when an event handling thread is asleep, it might need to get high priority wakeup, to make handling more snappy
2013-03-25 08:52:42 UTC <luite> unfortunately google closure library doesn't have a dequeue, so I can't push new tasks to the front of the runqueue :(
2013-03-25 08:53:25 UTC <luite> i could just use the PriorityQueue though
2013-03-25 09:09:58 UTC <luite> mgsloan: yeah fay can use direct callbacks, problem with ghcjs is the scheduler, all haskell stuff can be async so has to go through the scheduler
2013-03-25 09:11:31 UTC <mgsloan> ah, gotcha.  It hasn't been a problem, but I suspect that nested event handlers *might* be able to blow the stack in fay 
2013-03-25 09:12:02 UTC <mgsloan> doing something that's a little more guaranteed to have a constant stack size is more principled
2013-03-25 09:12:32 UTC <luite> the biggest probbelm i think with teh threads is that you cannot call stopPropagation() conditionally from the handler
2013-03-25 09:13:21 UTC <luite> what you can do is call that unconditionally, and then from haskell decide whether to redispatch from the parent
2013-03-25 09:13:30 UTC <luite> but then you might miss a handler when you have more than one on an element
2013-03-25 09:14:50 UTC <mgsloan> Hmm, yeah, tricky stuff!
2013-03-25 09:16:05 UTC <luite> redispatch to the same thing is also possible
2013-03-25 09:16:19 UTC <luite> but then some handlers might get it twice
2013-03-25 09:16:26 UTC <luite> you can mark it with some property though
2013-03-25 09:16:45 UTC <luite> anyway not ideal :)
2013-03-25 09:20:45 UTC <timthelion> ACTION wonders if he is even in the right channel.
2013-03-25 09:44:30 UTC <mgsloan> timthelion: http://hackage.haskell.org/packages/archive/diagrams-cairo/latest/doc/html/Diagrams-Backend-Cairo-Text.html  Can do that if you set the font monospaced
2013-03-25 09:44:43 UTC <mgsloan> it'd be interesting to not rely on unsafePerformIO, though
2013-03-25 09:45:28 UTC <mgsloan> (for the unsafe, though more popular, variants)
2013-03-25 09:49:24 UTC <mgsloan> ACTION sleeps
2013-03-25 17:44:00 UTC <luite> ooh dcharts!
2013-03-25 17:44:26 UTC <luite> http://patch-tag.com/r/mf/dcharts/snapshot/current/content/pretty/src/Diagrams/Charts.hs
2013-03-25 17:44:41 UTC <tgeeky> window 11
2013-03-25 17:55:02 UTC <tgeeky> byorgey: if you're here and free, I can give you mumble server info
2013-03-25 17:56:50 UTC <tgeeky> byorgey: namely: Label: [ meh. ] mumble / Address: 66.150.214.6 / Port: 17810 / Username: byorgey
2013-03-25 18:00:09 UTC <luite> window 11
2013-03-25 18:01:39 UTC <fryguybob> windows 7  :(
2013-03-25 18:04:50 UTC <luite> hm it's taking me longer than i expected to rewrite that event handling example using reactive-banana, that lib uses annoying tricks under the hood
2013-03-25 18:15:17 UTC <luite> tgeeky: hm, still the hostile attitude, i am disappoit
2013-03-25 18:15:19 UTC <luite> point
2013-03-25 18:22:56 UTC <tgeeky> :/
2013-03-25 19:55:40 UTC <carter> byorgey i just skimed the dcharts code
2013-03-25 21:31:33 UTC <alpounet> byorgey, you around?
2013-03-26 13:46:21 UTC <hpaste> byorgey revised âArcArrowsâ: âarc arrowsâ at http://hpaste.org/84673
2013-03-26 13:47:13 UTC <hpaste> byorgey revised âArcArrowsâ: âarc arrowsâ at http://hpaste.org/84673
2013-03-26 13:49:16 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/ArcArrows.png
2013-03-26 13:49:57 UTC <byorgey> check it!  Building up little bits and pieces for arrow support... I wanted curvy arrows for drawing DFAs so I made this
2013-03-26 13:50:56 UTC <luite> hmm, cool! perhaps it should be changed so that the arrowhead is aligned so that the line always exits (enters?) it perpendicularly in the middle
2013-03-26 13:51:50 UTC <byorgey> hmm, maybe so
2013-03-26 13:52:04 UTC <byorgey> I'm not sure how e.g. inkscape handles this
2013-03-26 13:52:21 UTC <fryguybob> byorgey: Nice!  I agree with luite.  There is a slight aesthetic tweak for arrowheads to look right.
2013-03-26 13:52:38 UTC <fryguybob> byorgey: Inkscape doesn't in my experience.
2013-03-26 13:52:53 UTC <byorgey> OK.  Well, that sounds difficult =)  but worthwhile.
2013-03-26 13:53:41 UTC <fryguybob> byorgey: But I think it is sufficient to pick the angle back a bit like at 1/2 the arrowhead length back.
2013-03-26 13:54:15 UTC <byorgey> OK, makes sense.  I guess that is actually not too bad now that I think about it.
2013-03-26 13:54:19 UTC <fryguybob> I think the places where that fails are all situations where you need a different path anyway.
2013-03-26 13:54:47 UTC <byorgey> Do we have any generic code somewhere for finding segment derivatives?
2013-03-26 13:55:04 UTC <fryguybob> byorgey: There is some in the offset path branch.
2013-03-26 13:55:10 UTC <byorgey> OK, I thought there might be
2013-03-26 13:55:26 UTC <fryguybob> byorgey: I wasn't sure the best place to put it, but it should be factored out from where it is.
2013-03-26 13:55:43 UTC <byorgey> I am not actually finding slopes of paths here, I'm taking advantage of the fact that they are arcs so I know exactly what the slope is in the first place
2013-03-26 13:55:59 UTC <fryguybob> byorgey: Ah, ok.
2013-03-26 13:56:01 UTC <byorgey> but when we do arrowheads more generically we'll want that of course.
2013-03-26 13:57:24 UTC <fryguybob> For beziers there is the odd exception that the angle you want happens to be at the location of a cusp.  I can't remember if the type of the derivatives that I have for the offset code reflects that possibility or not.
2013-03-26 13:58:09 UTC <byorgey> hehe, right.
2013-03-26 13:58:24 UTC <byorgey> oooh, new SVGFonts!
2013-03-26 14:01:10 UTC <byorgey> wow, the diagrams-discuss mailing list has 52 subscribers!
2013-03-26 14:01:18 UTC <byorgey> I didn't realize it was that many
2013-03-26 14:12:15 UTC <luite> that's almost 53!
2013-03-26 14:17:37 UTC <mgsloan> byorgey: Pretty!
2013-03-26 14:18:28 UTC <mgsloan> Inkscape doesn't handle that, btw
2013-03-26 14:18:40 UTC <mgsloan> Even worse with arrows is that they don't get the stroke color
2013-03-26 14:18:44 UTC <mgsloan> (in inkscape)
2013-03-26 14:19:07 UTC <mgsloan> There's some technical reason or other for this, having to do with SVG and clones and such
2013-03-26 14:19:11 UTC <mgsloan> but it just sucks
2013-03-26 14:19:34 UTC <mgsloan> ah I see that fryguybob already answered that
2013-03-26 14:19:52 UTC <mgsloan> ACTION was involved in inkscape back in his pre-Haskell days
2013-03-26 14:20:51 UTC <mgsloan> But yeah, arc-length re-parameterizing the curve, and querying for the derivative at the back of the arrow head would be cool :)
2013-03-26 14:21:04 UTC <byorgey> mgsloan: right, I remember the thing with inkscape and stroke color
2013-03-26 14:21:15 UTC <byorgey> there was some plugin you could call to set the color of the arrowhead
2013-03-26 14:21:18 UTC <byorgey> bizarre
2013-03-26 14:21:27 UTC <mgsloan> hahah, yeah
2013-03-26 14:22:08 UTC <mgsloan> Inkscape has some good UI here and there, but a lot of rough corners
2013-03-26 14:22:37 UTC <byorgey> yep
2013-03-26 15:03:18 UTC <luite> Uncaught h$ap_1_0_fast: unexpected closure type: 2   grrrrrrrrrrrrrrr
2013-03-26 15:03:59 UTC <byorgey> No one expects... closure type 2!
2013-03-26 15:05:06 UTC <luite> that means is tries to apply a data constructor as a function
2013-03-26 15:05:43 UTC <byorgey> but... data constructors ARE functions, aren't they?
2013-03-26 15:05:49 UTC <byorgey> Or you mean a nullary data constructor?
2013-03-26 15:06:14 UTC <luite> oh sorry, I mean a data value
2013-03-26 15:06:18 UTC <luite> or what are they called
2013-03-26 15:06:24 UTC <luite> they have closure type CON
2013-03-26 15:06:52 UTC <luite> the actual constructors are functions indeed, type FUN (forgot the number, i think 1), and return a CON
2013-03-26 15:07:28 UTC <byorgey> oh, I see
2013-03-26 15:07:33 UTC <luite> the constructor function is usually trivial, but when you have strict or unboxed fields it has to force some of the arguments
2013-03-26 15:10:31 UTC <luite> but i think there's some bug here where a hashmap somehow contains the wrong values (or lookup goes wrong), i'm trying to use reactive-banana with ghcjs, it uses funky things to make heterogenous maps
2013-03-26 15:11:21 UTC <luite> h$ap_1_0 means apply the function to 1 argument, total size 0 (which is equivalent to stg_ap_v in native ghc), usually an IO action applied to the realworld token
2013-03-26 15:11:58 UTC <luite> but if it gets the wrong thing from the heterogenous map, it might not be an IO action
2013-03-26 15:13:23 UTC <byorgey> strange
2013-03-26 15:14:14 UTC <luite> yeah i'm not sure what's happening, but explaining bugs to others sometimes helps in finding the real problem :)
2013-03-26 15:14:27 UTC <byorgey> luite: btw, here are the next things on my todo list for diagrams: http://www.cis.upenn.edu/~byorgey/hosted/diagrams-todo.png =)
2013-03-26 15:14:42 UTC <byorgey> luite: sure, I am happy to be your rubber duck =)
2013-03-26 15:14:42 UTC <luite> great!
2013-03-26 15:14:54 UTC <luite> oh yeah that was what it's called :p
2013-03-26 15:14:59 UTC <byorgey> I don't know much more about the GHC RTS etc. than a rubber duck anyway
2013-03-26 15:20:24 UTC <luite> on my list are generated code size reduction, better cabal support and working out the bugs in all the new features
2013-03-26 15:20:48 UTC <byorgey> work out ALL THE BUGS
2013-03-26 15:21:05 UTC <luite> :)
2013-03-26 15:21:22 UTC <luite> hopefully the first will make large libs like diagrams less of a problem
2013-03-26 15:21:51 UTC <byorgey> cool
2013-03-26 15:22:01 UTC <luite> gzipped code for something that uses reactive-banana is ~300kB, for diagrams i'd expect it to be over 500k
2013-03-26 15:22:39 UTC <byorgey> 500k isn't that bad.  The Haddock documentation for Diagrams.TwoD.Factorization is ~10MB! ;-)
2013-03-26 15:22:44 UTC <luite> hehe
2013-03-26 15:22:52 UTC <byorgey> (need to optimize the SVG backend =)
2013-03-26 15:23:10 UTC <luite> is that after gzipping?
2013-03-26 15:24:13 UTC <byorgey> ah, no, that's uncompressed
2013-03-26 15:24:20 UTC <byorgey> good point
2013-03-26 15:24:25 UTC <luite> before minification (layout squashing, identifier shortening) and gzipping a reactive-banana program is actually ~10MB
2013-03-26 15:24:52 UTC <luite> though i have to admit that i have terrible variable name atm
2013-03-26 15:27:32 UTC <luite> var h$_reactivezmbananazm0zi7zi1zi1ZCReactiveziBananaziCombinatorszisat_1929532920 = h$c(h$_reactivezmbananazm0zi7zi1zi1ZCReactiveziBananaziCombinatorszisat_e_1929532920);
2013-03-26 15:27:35 UTC <luite> h$_reactivezmbananazm0zi7zi1zi1ZCReactiveziBananaziCombinatorszisat_1929532920.d1 = h$_reactivezmbananazm0zi7zi1zi1ZCReactiveziBananaziCombinatorszif_1929532504;
2013-03-26 15:28:48 UTC <mgsloan> cool! I remember back when when a diagrams using thing was 20 mb!
2013-03-26 15:29:25 UTC <luite> mgsloan: oh it's probably still that when uncompressed
2013-03-26 15:29:32 UTC <luite> and that 20MB was also uncompressed :p
2013-03-26 15:29:45 UTC <mgsloan> ah, well, at least it compresses well :D
2013-03-26 15:29:47 UTC <luite> code size hasn't really improved in the nex generator
2013-03-26 15:29:50 UTC <luite> the new
2013-03-26 15:30:30 UTC <luite> performance has, and correctness too
2013-03-26 15:30:32 UTC <luite> and features
2013-03-26 15:30:50 UTC <luite> although i think async exceptions aren't 100% what ghc has
2013-03-26 15:30:56 UTC <luite> yet
2013-03-27 01:43:40 UTC <luite> hm implementing stablename hte way reactive-banana wants is surprisingly difficult
2013-03-27 02:43:23 UTC <luite> hah i found a way
2013-03-27 02:45:58 UTC <tgeeky> only 1 hour!
2013-03-27 02:46:03 UTC <luite> no a day
2013-03-27 02:46:13 UTC <tgeeky> oh, I meant from last two comments
2013-03-27 02:46:18 UTC <luite> well that included finding where the problem was :p
2013-03-27 02:46:37 UTC <tgeeky> doesn't GHC provide a stablename somewhere?
2013-03-27 02:46:38 UTC <luite> hehe exacly an hour
2013-03-27 02:46:54 UTC <luite> yes, but you have to implement it if you write a code generator and rts
2013-03-27 02:47:10 UTC <luite> StableName uses some primops that oyu need to implement
2013-03-27 02:47:45 UTC <luite> my heap objects look like { f: function, d1: someData, d2: someData, m: someInt }
2013-03-27 02:48:00 UTC <luite> problem was that a thunk update to whnf, just copies over those properties to a new object
2013-03-27 02:48:29 UTC <luite> a StableName should give the same answer for the same object (but is not required to)
2013-03-27 02:49:19 UTC <luite> but the same haskell heap object can be multiple js objects now
2013-03-27 02:54:15 UTC <tgeeky> byorgey: I can't wait until you have grad students to do your optimization for you!
2013-03-27 02:56:05 UTC <luite> i guess the svg backend could do some hash consing and convert that to <defs> <use>
2013-03-27 03:08:28 UTC <luite> bleh apparently that was not it :/
2013-03-27 06:12:39 UTC <tgeeky> yay, just had a titilating conversation with wavewave
2013-03-27 06:13:19 UTC <tgeeky> physics, SUSY, Higgs, and such
2013-03-27 11:31:44 UTC <byorgey> luite: ah, cool idea re: hash consing
2013-03-27 17:03:13 UTC <byorgey> ACTION bites the bullet and starts working on merging https://github.com/diagrams/diagrams-lib/pull/65
2013-03-27 17:47:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06generalize-R2 14bbce885 http://travis-ci.org/diagrams/diagrams-lib/builds/5845788 The build passed.
2013-03-27 18:06:37 UTC <luite> hmm, has anyone done diagrams benchmarks? i suspect that might be a performance hit that can be fixed with some SPECIALIZE at the right places
2013-03-27 18:08:28 UTC <byorgey> luite: nope! I am 100% certain there are lots of simple ways diagrams could be optimized, performance-wise
2013-03-27 18:08:44 UTC <byorgey> no one has yet put much (any) effort into it
2013-03-27 18:13:00 UTC <luite> does the version on github compile with HEAD now?
2013-03-27 18:15:13 UTC <byorgey> no
2013-03-27 18:15:32 UTC <byorgey> that's next on my list
2013-03-27 18:15:42 UTC <byorgey> it might just be as simple as bumping some upper bounds but I haven't tested yet
2013-03-27 18:36:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06generalize-R2 143da688b http://travis-ci.org/diagrams/diagrams-lib/builds/5847076 The build passed.
2013-03-27 19:34:03 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06generalize-R2 14e1d4076 http://travis-ci.org/diagrams/diagrams-cairo/builds/5848488 The build has errored.
2013-03-27 19:37:12 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 14e983fce http://travis-ci.org/diagrams/diagrams-haddock/builds/5848152 The build passed.
2013-03-27 19:44:28 UTC <travis-ci> [travis-ci] 13diagrams-lib/06generalize-R2 14d6b07df http://travis-ci.org/diagrams/diagrams-lib/builds/5848471 The build passed.
2013-03-27 20:21:21 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06master 1476fed72 http://travis-ci.org/diagrams/diagrams-cairo/builds/5849362 The build passed.
2013-03-27 23:01:52 UTC <luite> gr, i is too dumb for lens
2013-03-27 23:27:49 UTC <fryguybob> :(
2013-03-27 23:48:18 UTC <luite> anyone familiar with the biplate rewrite things in lens?
2013-03-27 23:51:20 UTC <fryguybob> @type rewrite
2013-03-27 23:51:21 UTC <lambdabot> Plated a => (a -> Maybe a) -> a -> a
2013-03-27 23:51:28 UTC <fryguybob> Lambdabot is!
2013-03-27 23:51:47 UTC <fryguybob> @type plate
2013-03-27 23:51:48 UTC <lambdabot> (Applicative f, Plated a) => (a -> f a) -> a -> f a
2013-03-28 00:11:42 UTC <fryguybob> > rewrite (\a -> case a of (Node "a" cs) -> Just $ Node "A" cs; _ -> Nothing) $ Node "root" [Node "a" [Node "b" [], Node "a" []], Node "c" [Node "d" []]]
2013-03-28 00:11:44 UTC <lambdabot>   Node {rootLabel = "root", subForest = [Node {rootLabel = "A", subForest = [...
2013-03-28 00:14:30 UTC <luite> yeah but it's not just rewrite, i have a JStat (from jmacro), need to rewrite JExpr that match ValExpr (JFunc ...) inside, bottom up
2013-03-28 00:47:53 UTC <byorgey> luite: use 'transform'?
2013-03-28 00:48:29 UTC <byorgey> oh, but you need to rewrite pieces with a different type?
2013-03-28 00:49:04 UTC <byorgey> for that I guess you want transformOn
2013-03-28 00:49:37 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 142869f19 http://travis-ci.org/diagrams/diagrams-haddock/builds/5848150 The build passed.
2013-03-28 00:51:31 UTC <luite> but i don't have a Plated instance
2013-03-28 00:51:38 UTC <luite> biplate works with Data
2013-03-28 00:51:54 UTC <luite> oh wait, transformOnOf
2013-03-28 00:51:57 UTC <luite> perhaps
2013-03-28 00:52:08 UTC <byorgey> do you have a Data instance?
2013-03-28 00:53:40 UTC <byorgey> aha, you're supposed to use  transformOnOf biplate  I think
2013-03-28 00:54:39 UTC <luite> yeah that seems to work
2013-03-28 00:54:43 UTC <byorgey> cool
2013-03-28 00:55:10 UTC <byorgey> wow, 6 hours between pushing a commit and successful Travis build?
2013-03-28 00:55:17 UTC <byorgey> travis must be really backed up, or something
2013-03-28 00:55:33 UTC <luite> unfortunately i don't want to rename all my variables and identifiers to "helloWorld", so i guess the real solution will be a tad more complicated ;)
2013-03-28 00:55:59 UTC <byorgey> hehe
2013-03-28 00:56:44 UTC <luite> i want to rename all local vars in nested scopes, so that but not use names that are already used in that scope to refer to global things
2013-03-28 00:57:12 UTC <luite> i guess that sentence is not quite correct :)
2013-03-28 00:57:13 UTC <byorgey> ah, tricky
2013-03-28 00:57:26 UTC <byorgey> not quite, but I get the general idea
2013-03-28 00:58:14 UTC <luite> bottom up should do the trick, all local variables are declared there, so i collect them. also collect all used identifiers not declared there (this needs to traverse nested scopes), filter the list of new names with the used vars, and map them
2013-03-28 00:58:25 UTC <luite> doing that bottomuply should do the trick
2013-03-28 00:59:05 UTC <luite> hopefully :)
2013-03-28 01:00:00 UTC <luite> hopefully there's an easy way to collect the identifiers global to some scope, so that the "traverse nested scopes" part just means combining earlier results
2013-03-28 01:01:46 UTC <byorgey> hehe, bottomuply =)
2013-03-28 01:02:05 UTC <luite> adverbing weirds language
2013-03-28 01:03:46 UTC <byorgey> =)
2013-03-28 02:21:02 UTC <travis-ci> [travis-ci] 13diagrams-svg/06generalize-R2 144727af2 http://travis-ci.org/diagrams/diagrams-svg/builds/5856785 The build has errored.
2013-03-28 02:25:46 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06generalize-R2 14be41cbe http://travis-ci.org/diagrams/diagrams-postscript/builds/5856832 The build has errored.
2013-03-28 02:32:09 UTC <cmears> "errored"?
2013-03-28 02:32:28 UTC <cmears> worse than "bottomuply"
2013-03-28 11:17:23 UTC <byorgey> cmears: I know, right?
2013-03-28 13:00:03 UTC <travis-ci> [travis-ci] 13monoid-extras/06monoid-extras-0.2.2 14fbcc15a http://travis-ci.org/diagrams/monoid-extras/builds/5866913 The build passed.
2013-03-28 13:21:58 UTC <travis-ci> [travis-ci] 13dual-tree/06dual-tree-0.1 14cf16293 http://travis-ci.org/diagrams/dual-tree/builds/5867307 The build passed.
2013-03-28 13:34:38 UTC <travis-ci> [travis-ci] 13vector-space-points/06vector-space-points-0.1.2 14705b05d http://travis-ci.org/diagrams/vector-space-points/builds/5867668 The build passed.
2013-03-28 13:34:58 UTC <travis-ci> [travis-ci] 13vector-space-points/06master 14819dc35 http://travis-ci.org/diagrams/vector-space-points/builds/5867666 The build passed.
2013-03-28 13:46:39 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 144d717ff http://travis-ci.org/diagrams/diagrams-core/builds/5867892 The build passed.
2013-03-28 20:57:54 UTC <tgeeky> shachaf: some of my favorite peoples are joining the #diagrams cult!
2013-03-28 20:59:07 UTC <carter> tgeeky who are these entities
2013-03-28 20:59:51 UTC <tgeeky> carter: you too!
2013-03-28 20:59:58 UTC <carter> tgeeky thanks! though we hardly chat
2013-03-28 21:00:08 UTC <tgeeky> conal, shachaf, byorgey, dmwit, luite, fryguybob 
2013-03-28 21:00:13 UTC <carter> <pulls out pipe, notebook  and couch>
2013-03-28 21:00:19 UTC <carter> those are cool people
2013-03-28 21:00:31 UTC <tgeeky> our cult GROWS IN STRENGTH
2013-03-28 21:00:31 UTC <fryguybob> Awww
2013-03-28 21:00:54 UTC <tgeeky> i'm missing some people because i don't know how to get a list of users in this channel
2013-03-28 21:02:44 UTC <fryguybob>  /who maybe
2013-03-28 21:04:28 UTC <tgeeky> mgsloan is on that list of cool people I like too. and ClaudiusMaximus. and transitively cmears. and alpounet.
2013-03-28 21:05:14 UTC <tgeeky> luite: hmm: re your buttomuply renaming trick...
2013-03-28 21:05:22 UTC <tgeeky> luite: I think somewhere I read that 'multiplate' would be good for that.
2013-03-28 21:06:10 UTC <luite> oh yeah lens has copied the things from all the *plate libraries before and implemented those in its own language
2013-03-28 21:06:28 UTC <tgeeky> oh yeah?
2013-03-28 21:06:48 UTC <luite> based on some more generalized things, and peppered with inlines to make them faster than the originals. quite the edwardk style
2013-03-28 21:09:19 UTC <tgeeky> luite: do you know where to look in lens?
2013-03-28 21:09:25 UTC <tgeeky> for multiplate type functionality
2013-03-28 21:09:35 UTC <tgeeky>  .Plated?
2013-03-28 21:10:04 UTC <luite> also Data.Data.Lens
2013-03-28 21:10:36 UTC <tgeeky> luite: am I to assume you are actually using this to do your renaming?
2013-03-28 21:10:44 UTC <luite> then you use transformOnOf or something similar with one of those traversals
2013-03-28 21:10:52 UTC <luite> tgeeky: yeah at least that's the plan if it's fast enough
2013-03-28 21:11:16 UTC <ClaudiusMaximus> tgeeky: aww thanks. have a donut :) http://mathr.co.uk/misc/2013-03-28_torus_loop.webm
2013-03-28 21:12:13 UTC <tgeeky> ClaudiusMaximus: lies! I'm wearing topology glasses, but see two planes or two donuts, but not one donut!
2013-03-28 21:14:29 UTC <luite> tgeeky: but I'm working on some FFI things first
2013-03-28 21:15:03 UTC <luite> need to make it a bit easier to use
2013-03-28 21:15:16 UTC <luite> automatic string marshalling
2013-03-28 21:21:23 UTC <carter> yeah
2013-03-28 21:21:25 UTC <carter> that'd be nice
2013-03-28 21:27:11 UTC <luite> it wouldn't be String -> Javascript string though
2013-03-28 21:27:28 UTC <luite> rather Ptr JSChar -> Javascript string
2013-03-28 21:27:42 UTC <luite> but the first one can be converted from a Text value rather efficiently
2013-03-28 21:28:03 UTC <luite> without copying the buffer
2013-03-28 21:29:11 UTC <luite> directly marshalling a String in ffi code is impossible unfortunately
2013-03-28 21:29:12 UTC <carter> cool
2013-03-28 21:29:17 UTC <carter> huh?
2013-03-28 21:29:21 UTC <carter> i know nothing
2013-03-28 21:29:33 UTC <luite> no i mean in GHCJS, when emitting the foreign call
2013-03-28 21:29:49 UTC <luite> since converting the String requires forcing it
2013-03-28 21:30:05 UTC <luite> and at that point it's too late, unless i do some restructuring
2013-03-28 21:31:08 UTC <luite> but we probably shouldn't encourage using String too much in web apps
2013-03-28 21:31:21 UTC <luite> if Text is an option
2013-03-28 21:33:09 UTC <carter> do text
2013-03-28 21:33:09 UTC <carter> yeah
2013-03-28 21:33:24 UTC <carter> because you have to provide a sane unicode layer anyways
2013-03-28 21:33:28 UTC <carter> 'cause the JS does it wrong
2013-03-28 21:33:37 UTC <luite> hehe, yeah that's annoying
2013-03-28 21:33:50 UTC <luite> i have some unicode tables in the rts, because JS doesn't give the right anwsers
2013-03-28 21:34:03 UTC <carter> so whats the minimal amount of madness to port Text to being able to work on ghc.js?
2013-03-28 21:36:58 UTC <luite> one conversion function to slice its internal ByteArray Int Int representation (slice the underlying ArrayBuffer without copying) and cast to Ptr JSChar
2013-03-28 21:37:05 UTC <carter> ok
2013-03-28 21:37:07 UTC <carter> awesome
2013-03-28 21:37:36 UTC <luite> that gives the ffi function an array with offset, the FFI code emits a h$decodeUtf16 call for that before it passes it to the javascript code
2013-03-28 21:37:43 UTC <luite> so js gets a real string
2013-03-28 21:37:54 UTC <luite> with all its limitations unfortunately
2013-03-28 21:43:55 UTC <carter> meaning?
2013-03-28 21:52:10 UTC <luite> oh nothing to do with haskell, just that .length, .charCodeAt etc don't give the right answers
2013-03-28 21:59:08 UTC <carter> ah
2013-03-28 23:23:33 UTC <byorgey> ClaudiusMaximus: woah, trippy donut
2013-03-29 00:41:39 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 142ecf3d1 http://travis-ci.org/diagrams/diagrams-lib/builds/5886207 The build passed.
2013-03-29 00:41:57 UTC <luite> donut?
2013-03-29 00:42:13 UTC <byorgey> (17:11) <ClaudiusMaximus> tgeeky: aww thanks. have a donut :) http://mathr.co.uk/misc/2013-03-28_torus_loop.webm
2013-03-29 00:42:42 UTC <luite> ah
2013-03-29 00:42:50 UTC <luite> that's indeed the sound donuts make
2013-03-29 00:43:40 UTC <byorgey> perhaps marijuana-laced donuts make that sound.
2013-03-29 00:45:02 UTC <luite> oh those are the only ones you can get here
2013-03-29 02:30:09 UTC <tgeeky> THESE ARE NOT 'ASH BROWNIES.
2013-03-29 21:06:30 UTC <travis-ci> [travis-ci] 13diagrams-core/06scaleinv-prim 14b1de95b http://travis-ci.org/diagrams/diagrams-core/builds/5907894 The build passed.
2013-03-29 23:57:11 UTC <tgeeky> http://www.jasondavies.com/ <-- ha
2013-03-29 23:57:28 UTC <tgeeky> http://www.jasondavies.com/factorisation-diagrams/ <-- byorgey: he mentions you
2013-03-30 01:32:43 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 145c56431 http://travis-ci.org/diagrams/diagrams-lib/builds/5913537 The build passed.
2013-03-30 01:33:56 UTC <fryguybob> I sound so excited!
2013-03-30 01:34:23 UTC <luite> isn't this exciting then!
2013-03-30 01:34:43 UTC <fryguybob> Yes!
2013-03-30 01:43:30 UTC <fryguybob> byorgey: Inquiring minds want to if you have met my wife's cousin at the Green Line yet?
2013-03-30 01:46:52 UTC <fryguybob> ^ want to know
2013-03-30 01:58:05 UTC <byorgey> hmm, what's her name again?
2013-03-30 01:58:14 UTC <byorgey> and/or what does she look like?
2013-03-30 01:58:38 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/hexaflower.png
2013-03-30 01:59:57 UTC <byorgey> tgeeky: yep, I've seen jason davies' implementation
2013-03-30 02:00:42 UTC <luite> trippy
2013-03-30 02:01:14 UTC <luite> somehow i want to try 3d red/green glasses with that and see if it somehow becoms more spectacular
2013-03-30 02:01:21 UTC <luite> that's a lot of somehow
2013-03-30 02:01:37 UTC <byorgey> hehe, I doubt it =)
2013-03-30 02:02:06 UTC <byorgey> ok, I'm off to bed, night all
2013-03-30 02:02:36 UTC <luite> night
2013-03-30 14:51:18 UTC <fryguybob> byorgey: The cousin is a he :D, with long curly blond hair.
2013-03-30 14:51:26 UTC <fryguybob> Caleb
2013-03-30 14:52:08 UTC <fryguybob> Also, sorry I forgot that pull request was still outstanding.  Unfortunately I'm going to be burried for at least another month :(
2013-03-30 15:16:24 UTC <byorgey> fryguybob: ah, hehe, I see. =)  I don't think I've met him.
2013-03-30 15:16:29 UTC <byorgey> fryguybob: and no worries.
2013-03-31 00:30:50 UTC <luite> does anyone have suggestions for what could be a good gsoc project with ghcjs?
2013-03-31 00:44:47 UTC <jfischoff> is the svg the recommended backend for getting started with diagrams?
2013-03-31 00:45:53 UTC <luite> yes
2013-03-31 00:46:56 UTC <fryguybob> jfischoff: I think text alignment is the only thing not working correctly with SVG.
2013-03-31 00:47:07 UTC <jfischoff> cool
2013-03-31 00:47:27 UTC <fryguybob> luite: Making all the packages work?  Oh, STM :D
2013-03-31 00:47:59 UTC <luite> dunno if STM is such a good idea, it's not terribly high priority i think
2013-03-31 00:48:30 UTC <fryguybob> luite: True.
2013-03-31 00:48:46 UTC <luite> making all packages work is kind of ambitious :p
2013-03-31 00:49:05 UTC <fryguybob> luite: Making it all smaller?
2013-03-31 00:49:12 UTC <luite> please rewrite blas and linpack javascript ;p
2013-03-31 00:49:14 UTC <luite> +in
2013-03-31 00:49:18 UTC <fryguybob> hehe
2013-03-31 00:49:23 UTC <luite> hmm
2013-03-31 00:49:31 UTC <luite> i'm working on making it smaller right now
2013-03-31 00:50:02 UTC <luite> i committed a basic minifier with lens (that does some scoping wrong, fixing that now) earlier today
2013-03-31 00:50:37 UTC <luite> and some dataflow rules will be added later (constant propagation, dead var elim, liveness, some optimizations to stack updates)
2013-03-31 00:51:41 UTC <luite> main problem for size are then the long varnames for exported functions, and inefficient static references encoding
2013-03-31 00:51:55 UTC <luite> that's probably both fixed before gsoc starts though
2013-03-31 00:51:59 UTC <jfischoff> how does one render a diagram to a file (without using default main)?
2013-03-31 00:52:25 UTC <luite> renderDia
2013-03-31 00:52:44 UTC <jfischoff> thanks
2013-03-31 00:52:58 UTC <luite> depends on the backend what exactly the result is
2013-03-31 00:53:39 UTC <luite> and also see the backend-specific associated data type for the configuration
2013-03-31 00:56:01 UTC <byorgey> ah, hmm, I really should make a new release of diagrams-svg
2013-03-31 00:56:09 UTC <byorgey> the documentation is much improved
2013-03-31 00:56:47 UTC <jfischoff> The doc for contrib is really cool looking with the embedded diagrams
2013-03-31 00:56:58 UTC <byorgey> I know right? =)
2013-03-31 00:57:01 UTC <luite> :)
2013-03-31 00:57:19 UTC <byorgey> jfischoff: take a look at http://hackage.haskell.org/packages/archive/diagrams-cairo/0.6/doc/html/Diagrams-Backend-Cairo.html  which should give you some ideas of how to use 'renderDia' with the SVG backend
2013-03-31 00:57:33 UTC <jfischoff> oh thanks
2013-03-31 00:58:33 UTC <byorgey> jfischoff: actually, you can also take a look at the HEAD version of diagrams-svg on github, which has lots more documentation than what's on Hackage right now
2013-03-31 00:58:51 UTC <jfischoff> cool I forked it :)
2013-03-31 00:58:55 UTC <byorgey> I mean, you don't need to install it from github, just look at the documentation
2013-03-31 00:59:16 UTC <byorgey> cool
2013-03-31 00:59:41 UTC <jfischoff> have you seen the hardware accelerated svg stuff nvidia is doing? https://developer.nvidia.com/gpu-accelerated-path-rendering
2013-03-31 01:00:03 UTC <jfischoff> looks pretty cool
2013-03-31 01:00:29 UTC <luite> i think someone mentioned that paper here before
2013-03-31 01:00:58 UTC <byorgey> oh, neat
2013-03-31 01:01:54 UTC <luite> oh i think it was a different one, for font rendering
2013-03-31 01:03:22 UTC <jfischoff> Oh that was me :) Same basic idea, but they are doing pretty much all the work
2013-03-31 01:04:27 UTC <luite> ah
2013-03-31 01:14:54 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/path_averaging.mp4
2013-03-31 01:15:30 UTC <byorgey> Take a closed path, and replace every segment by its midpoint.  Repeat.
2013-03-31 01:16:20 UTC <byorgey> apparently it's a theorem that starting from any random path this procedure converges on an ellipse!
2013-03-31 01:18:48 UTC <luite> does it have to be a cubic path?
2013-03-31 01:19:20 UTC <luite> bleh 3:20am already, annoying dst
2013-03-31 01:19:30 UTC <byorgey> no, this is using only linear segments
2013-03-31 01:20:18 UTC <luite> hm a square would remain a square, although a smaller one
2013-03-31 01:21:07 UTC <byorgey> true
2013-03-31 01:21:38 UTC <byorgey> you have to rescale the resulting path to be the same size as the original or else it actually shrinks down to a point.
2013-03-31 01:22:11 UTC <byorgey> if you rescale then a square just oscillates back and forth between a square and a rotated square
2013-03-31 01:22:18 UTC <byorgey> which you can see as a degenerate ellipse
2013-03-31 01:22:25 UTC <byorgey> i.e. all the vertices lie on an ellipse
2013-03-31 01:22:44 UTC <luite> but you can draw an ellipse through the corners of a square. since you never get more segments than you started with, that's as much as converging to an ellipse as you can ask fork
2013-03-31 01:22:51 UTC <luite> :/
2013-03-31 01:22:55 UTC <byorgey> right, exactly
2013-03-31 01:23:43 UTC <byorgey> the precise statement of the theorem is that the vertices converge to lying on an ellipse.
2013-03-31 01:29:29 UTC <jfischoff> byorgey: cool video
2013-03-31 01:31:46 UTC <byorgey> jfischoff: thanks.  source code is here: https://github.com/byorgey/diagrams-play/blob/master/ShrinkPath.hs https://github.com/byorgey/diagrams-play/blob/master/ShrinkPathAnim.hs
2013-03-31 01:32:40 UTC <jfischoff> nice and small :)
2013-03-31 01:33:01 UTC <byorgey> yep =)
2013-03-31 03:02:46 UTC <jfischoff> circle 1 # lw 0.01 is not displaying the line width correctly with the svg backend
2013-03-31 03:03:01 UTC <jfischoff> circle 1 # lw 0.1 is ok
2013-03-31 03:10:37 UTC <jfischoff> heh svg doesn't like 1e-2 want 0.01
2013-03-31 19:11:32 UTC <byorgey> ClaudiusMaximus: nice proof
2013-03-31 19:11:55 UTC <byorgey> also, I <3 MathJAx
2013-03-31 19:12:06 UTC <byorgey> ...and also MathJax
2013-03-31 19:22:09 UTC <carter> mathjax rocks
2013-03-31 19:29:30 UTC <jfischoff> so when I construct points I use p2 (x, y), but I would rather do p2' x y or x .|. 
2013-03-31 19:29:32 UTC <jfischoff> y
2013-03-31 19:29:53 UTC <jfischoff> are there other methods for making points besides p2?
2013-03-31 19:30:35 UTC <jfischoff> .|. I guess might not be an allowable operator but some infix method would be nice
2013-03-31 19:31:14 UTC <byorgey> jfischoff: use &
2013-03-31 19:31:18 UTC <jfischoff> ah
2013-03-31 19:31:30 UTC <byorgey> from Diagrams.Coordinates
2013-03-31 19:31:47 UTC <jfischoff> cool
2013-03-31 19:43:01 UTC <ClaudiusMaximus> byorgey: wow, didn't know anyone read my blog
2013-03-31 19:43:08 UTC <ClaudiusMaximus> byorgey: thanks :)
2013-03-31 19:43:34 UTC <byorgey> ClaudiusMaximus: hehe, maybe I'm the only one ;-)
2013-03-31 19:43:36 UTC <ClaudiusMaximus> i did have a thought about mathjax - it would cause problems for people reading via rss feed
2013-03-31 19:43:48 UTC <byorgey> ClaudiusMaximus: yes, I am one such person
2013-03-31 19:44:10 UTC <byorgey> but I am used to that, I often click through to read a post on the original blog instead of in my rss reader
2013-03-31 19:44:21 UTC <byorgey> because of MathJax or similar things
2013-03-31 19:44:23 UTC <byorgey> I don't really mind
2013-03-31 19:45:52 UTC <ClaudiusMaximus> got another blog post in vague preparation, about why i wanted to cut rectangles out of triangular tilings in the first place..
2013-03-31 19:46:45 UTC <ClaudiusMaximus> probably guessable given the butterfly variations post and the trippy donut video
2013-03-31 19:46:50 UTC <ClaudiusMaximus> :)
2013-03-31 19:48:07 UTC <ClaudiusMaximus> also i had some realisation about what 'K' means ; it's whether the edge you start with is the short edge or the long edge of the rectangle (which has aspect ratio 1:sqrt3 or sqrt3:1)
2013-03-31 19:48:44 UTC <ClaudiusMaximus> i think - not proved that yet :)
2013-03-31 19:49:12 UTC <byorgey> ah, cool
2013-03-31 19:49:44 UTC <byorgey> I had made the connection between this post and the butterfly variations post, but hadn't thought of a connection to the trippy donut video
2013-03-31 19:50:09 UTC <byorgey> I guess I didn't watch that closely enough, I don't remember what the patterns on the donut and plane were like, I just remember the donut rolling around and some really weird sounds
2013-03-31 19:50:36 UTC <ClaudiusMaximus> heh, maybe a still would be clearer: http://mathr.co.uk/misc/2013-03-27_torus_colourful.jpg
2013-03-31 19:51:41 UTC <byorgey> ah, so you make the torus by cutting out a rectangle with vertices on a square grid?
2013-03-31 19:51:47 UTC <ClaudiusMaximus> the weird sounds are sampled from Theme From Rawhide by The Blues Brother
2013-03-31 19:51:53 UTC <byorgey> but you could do it on a triangular grid too
2013-03-31 19:52:01 UTC <ClaudiusMaximus> yep
2013-03-31 19:52:07 UTC <byorgey> cool, makes sense
2013-03-31 19:52:24 UTC <ClaudiusMaximus> http://bridgesmathart.org/2011/cdrom/proceedings/134/index.html describes the conformal warping
2013-03-31 19:53:16 UTC <ClaudiusMaximus> buti had to invert it (ie, go from XYZ to xy) for that raytraced image, and i might have made a mistake
2013-03-31 19:53:50 UTC <ClaudiusMaximus> but it seems to look ok
2013-03-31 19:57:32 UTC <byorgey> neat
2013-03-31 19:57:36 UTC <byorgey> yeah, looks OK to me
2013-03-31 20:45:06 UTC <tgeeky> ClaudiusMaximus: in the program that drew this, is the bottom an actual projection from the torus, or is it a seperate texture?
2013-03-31 20:47:47 UTC <ClaudiusMaximus> tgeeky: separate object
2013-03-31 20:50:03 UTC <hpaste> ClaudiusMaximus pasted âtorus fragmentarium scriptâ at http://hpaste.org/84934
2013-03-31 20:50:14 UTC <ClaudiusMaximus> http://syntopia.github.com/Fragmentarium/
2013-03-31 20:50:31 UTC <ClaudiusMaximus> i tried with a git checkout, so it might bork in older released versions
2013-03-31 20:51:50 UTC <ClaudiusMaximus> also that's after some more modifications to try to get it to be more physically accurate
2013-03-31 20:56:19 UTC <ClaudiusMaximus> still woeful though :)  i then tried implementing a physical model in haskell but that failed miserably (torus shot off to infinity) - didn't pay enough attention in highschool mechanics i think, and we didn't cover inertia tensors then either
2013-03-31 22:33:06 UTC <jfischoff> Is this parametric equation for a line in diagrams somewhere: parametericLine start end t = start .+^ (t *^ (end .-. start)) ?
2013-03-31 23:00:41 UTC <byorgey> jfischoff: well, Segments have an 'atParam' function which does that but restricted to start = origin
2013-03-31 23:01:09 UTC <byorgey> but that's an awfully low-level way to get at that functionality
2013-03-31 23:01:44 UTC <jfischoff> that's good to know
2013-03-31 23:02:18 UTC <byorgey> mgsloan has some patches for parameterizing trails, paths, etc.: https://github.com/diagrams/diagrams-lib/issues/53
2013-03-31 23:02:31 UTC <byorgey> but I haven't had a chance to look at them in detail yet
2013-03-31 23:03:00 UTC <jfischoff> I am having a lot of fun so far :)
2013-03-31 23:03:18 UTC <byorgey> jfischoff: ah, however, it just occurred to me you should just use the 'alerp' function from Data.AffineSpace
2013-03-31 23:03:37 UTC <byorgey> in fact parametricLine = alerp =)
2013-03-31 23:03:43 UTC <jfischoff> yep
2013-03-31 23:03:48 UTC <jfischoff> cool thanks
2013-03-31 23:03:51 UTC <byorgey> glad you're having fun =)
2013-03-31 23:03:54 UTC <byorgey> what are you drawing?
2013-03-31 23:04:17 UTC <jfischoff> I the diagrams from the fractional and negative types paper
2013-03-31 23:04:34 UTC <jfischoff> the ol' project dmwit worked on before
2013-03-31 23:05:31 UTC <byorgey> ah, very cool =)
2013-03-31 23:05:38 UTC <jfischoff> :)
2013-03-31 23:06:00 UTC <jfischoff> how's the thesis going?
2013-03-31 23:06:56 UTC <byorgey> fine, passed my proposal a few weeks ago
2013-03-31 23:07:41 UTC <jfischoff> is that the major hurtle?
2013-03-31 23:08:04 UTC <jfischoff> or just one of the many :)
2013-03-31 23:08:55 UTC <byorgey> one of many, but the important point is that it's the penultimate hurdle
2013-03-31 23:09:06 UTC <jfischoff> ah
2013-03-31 23:09:19 UTC <byorgey> now I have "only" to actually write a thesis =)
2013-03-31 23:09:36 UTC <jfischoff> eh, piece of cake ;)
2013-03-31 23:10:07 UTC <jfischoff> its on species right?
2013-03-31 23:10:53 UTC <byorgey> yep
2013-03-31 23:11:35 UTC <jfischoff> no pressure, but I'm excited to read it :)
2013-03-31 23:14:32 UTC <tgeeky> ACTION cuts in line, somehow demonstrating a higher level of excitement than jfischoff 
2013-03-31 23:14:50 UTC <jfischoff> tgeeky: hey!
2013-03-31 23:15:01 UTC <byorgey> hey, no pushing!
2013-03-31 23:15:37 UTC <tgeeky> ACTION points out his use of "!" indicates his excitement of something *other* than byorgey's thesis, lowering jfischoff's excitement allotment
2013-03-31 23:15:38 UTC <jfischoff> tgeeky: working on pi-eta-epsilon again. Cleaned up the project in my branch adding diagrams
2013-03-31 23:15:50 UTC <byorgey> it turns out that using some newfangled copying technology, it's possible to make TWO copies of a document and have two people read it AT THE SAME TIME
2013-03-31 23:15:59 UTC <tgeeky> byorgey: WITCH!
2013-03-31 23:16:02 UTC <tgeeky> burn the witch!
2013-03-31 23:16:20 UTC <tgeeky> jfischoff: excellllent.
2013-03-31 23:16:22 UTC <byorgey> ACTION turns tgeeky into a newt
2013-03-31 23:17:12 UTC <tgeeky> ACTION and his newt friends start singing Always Look On The Bright Side of Life
2013-03-31 23:48:16 UTC <fryguybob> It's getting pythony in here :D
2013-04-01 00:33:29 UTC <jfischoff> very cool: capsule w h = roundedRect w h h
2013-04-03 00:37:06 UTC <luite> hm i kinda regret catching that glass bottle falling from the fridge with my foot
2013-04-03 00:57:03 UTC <byorgey> ouch
2013-04-03 01:27:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06generalize-R2 1483d347a http://travis-ci.org/diagrams/diagrams-lib/builds/6003738 The build passed.
2013-04-03 07:07:32 UTC <_mr> Has it been done, or would it be easy to make gloss a backend for diagrams?
2013-04-03 07:12:58 UTC <luite> i don't think it has, not sure
2013-04-03 07:15:25 UTC <luite> i suppose you'd have to do some work to draw splines in it, but doesn't look impossible
2013-04-03 07:28:57 UTC <_mr> Ok, I'll just try to adjust the simplest backend around - SVG
2013-04-03 07:29:42 UTC <_mr> Show.. even better
2013-04-03 07:29:58 UTC <luite> SVG does have paths built in though, so it's likely more work
2013-04-03 07:30:18 UTC <luite> wait until byorgey or fryguybob are around though, they probably know more about existign backends
2013-04-03 07:30:41 UTC <_mr> Ok, thanks
2013-04-03 10:56:05 UTC <fryguybob> _mr: I don't think a gloss backend would be hard, but it might be a little annoying juggling the name clashes.
2013-04-03 11:02:05 UTC <_mr> fryguybob: Great, thanks. I'll come back when my efforts go astray ;-)
2013-04-03 11:05:47 UTC <byorgey> incidentally, it should be possible to also translate in the other direction -- take gloss Pictures and turn them into diagrams.
2013-04-03 11:08:09 UTC <_mr> fun
2013-04-03 11:29:00 UTC <fryguybob> _mr: A quick glance at gloss leads me to believe that they don't have cubic splines.  We know how to decompose a spline into a either short line segments or arcs as an approximation, but there isn't any prepackaged code to do that yet.
2013-04-03 11:36:18 UTC <_mr> fryguybob: That just means that I have to write something that draws the cubic splines given a list of points?
2013-04-03 11:45:31 UTC <fryguybob> _mr: Well there will be a point in the backend where you are given a Cubic spline segment and have do do something with it.
2013-04-03 11:46:04 UTC <fryguybob> _mr: We can make a function that will convert that into a sequence of arcs and or lines.
2013-04-03 11:46:13 UTC <fryguybob> (given an error bound).
2013-04-03 12:15:50 UTC <_mr> fryguybob: when you say it is not prepackaged, does that mean it is not public or is it sitting somewhere on github? ;-)
2013-04-03 12:18:17 UTC <fryguybob> _mr: It isn't written yet.  But as soon as you need such a thing I can write it for you :D
2013-04-03 12:19:38 UTC <fryguybob> _mr: We have some code written that does a bit more related work creating offsets for paths that will (when I have time) end up in diagrams-lib.
2013-04-03 12:22:11 UTC <_mr> maybe it would be worthwhile to just add splines to gloss..
2013-04-03 13:29:52 UTC <bergey`> I ran into the same problem for the OpenGL backend.  I used the easy hack of hardcoding the number of segments.
2013-04-03 13:30:00 UTC <bergey`> https://github.com/bergey/diagrams-opengl/commit/b78e08bc9bb646f43cde8c4113fdcc73eba95568
2013-04-03 13:30:22 UTC <bergey`> fryguybob's solution with the error bound is much nicer; I'd also use it when it's available.
2013-04-03 13:39:04 UTC <_mr> And there I thought OpenGL had some spliny stuff already
2013-04-03 14:16:28 UTC <byorgey> well, if OpenGL doesn't, that explains why gloss doesn't either
2013-04-03 14:20:47 UTC <_mr> That's true. But that is not the only explaination why gloss wouldn't have it.
2013-04-03 14:22:50 UTC <bergey`> GLU and GLUT have spline support, reachable in an API that's been deprecated for 4+ years in OpenGL proper.
2013-04-03 14:23:43 UTC <bergey`> I haven't found advice I trust on which API's of the 20+ year accretion around OpenGL one should use if writing new code in 2013. :)
2013-04-03 14:24:56 UTC <_mr> Hehe
2013-04-03 14:32:38 UTC <_mr> That approximation doesn't look all that easy
2013-04-03 23:10:37 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 149a53102 http://travis-ci.org/diagrams/diagrams-builder/builds/6032183 The build passed.
2013-04-03 23:13:05 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14080766a http://travis-ci.org/diagrams/diagrams-builder/builds/6032368 The build passed.
2013-04-04 02:00:39 UTC <travis-ci> [travis-ci] 13diagrams-builder/06builder-0.3 1437927af http://travis-ci.org/diagrams/diagrams-builder/builds/6036440 The build has errored.
2013-04-04 02:01:02 UTC <tgeeky> ACTION thinks strongbad is the one who says that
2013-04-04 02:08:51 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 1448513ef http://travis-ci.org/diagrams/diagrams-builder/builds/6036438 The build passed.
2013-04-04 02:09:01 UTC <byorgey> ERRORED
2013-04-04 02:09:10 UTC <tgeeky> ha ha, you predicted wrong
2013-04-04 02:10:17 UTC <tgeeky> byorgey: so, I think it was last thursday, but if it was *this* thursday, do you have a draft of that paper?
2013-04-04 02:10:53 UTC <byorgey> we didn't end up submitting anything, Dan didn't have time to work on it and it's just not ready yet
2013-04-04 02:11:04 UTC <byorgey> but you can see what we have in the repo on github
2013-04-04 02:11:49 UTC <tgeeky> byorgey: so you have to select among: [abort, submit to other journal, submit next year] ?
2013-04-04 02:11:49 UTC <tgeeky> with a default?
2013-04-04 02:11:58 UTC <byorgey> we are not choosing abort
2013-04-04 02:12:12 UTC <byorgey> we'll submit it somewhere.  just not sure where yet.
2013-04-04 02:13:19 UTC <byorgey> ACTION -> bed
2013-04-04 02:14:19 UTC <tgeeky> night
2013-04-04 02:17:33 UTC <luite_> hm
2013-04-04 02:21:26 UTC <tgeeky> luite_: hmm?
2013-04-04 02:21:32 UTC <luite_> hmmm
2013-04-04 02:21:38 UTC <luite_> hidden markov models
2013-04-04 02:22:08 UTC <tgeeky> indeed? I was involved in a project related to that in college and I in no way learned anything about them
2013-04-04 02:25:01 UTC <tgeeky> what do you know, It's still there, bad acronym and all: https://wiki.cc.gatech.edu/ccg/projects/gt2k/gt2k
2013-04-04 02:25:04 UTC <tgeeky> GART
2013-04-04 02:25:52 UTC <luite_> ah
2013-04-04 02:26:04 UTC <tgeeky> it sould be noted that I'm none of those people :o
2013-04-04 02:27:16 UTC <tgeeky> it was an undergrad capstone under Ian Woon-Kim
2013-04-04 02:29:21 UTC <luite_> hm, releated to Ian-Woo Kim? ;p
2013-04-04 02:30:04 UTC <tgeeky> too late to make a joke
2013-04-04 02:30:19 UTC <luite_> oh
2013-04-04 02:32:05 UTC <tgeeky> the AMS-02 results came out to day, they are perplexing. http://physics.aps.org/featured-article-pdf/10.1103/PhysRevLett.110.141102
2013-04-04 02:32:36 UTC <tgeeky> If you read the last sentence first, it sounds like something interesting. If you read it normally, it seems really weird to tack on the last sentence at the end, to me.
2013-04-04 02:35:39 UTC <tgeeky> the paper really says: we have a condensed LHC-detector style detector, in space!!!!, and it works, and we did the simplest data cut we could do
2013-04-04 02:36:09 UTC <tgeeky> and we got back not inconsistent results, and don't yet have statistics to say something interesting.
2013-04-04 02:36:41 UTC <luite_> hmm
2013-04-04 02:37:17 UTC <tgeeky> for the first time, I read the paper first before I saw anything on blogosphere, and I kind of agree with the odd way this has been shaped by media / AMS / NASA / CERN
2013-04-04 02:43:45 UTC <tgeeky> I think the results after 2028 (when data collection ends due to consumables -> zero), if he's still alive, the result may be worth of a 2nd Nobel prize
2013-04-04 02:44:54 UTC <tgeeky> according to wikipedia, one of Samuel Ting's doctoral advisors won the Nobel Physics for the tau lepton (the 3rd electron-like thing)
2013-04-04 02:45:03 UTC <tgeeky> in 1995, after Ting won his for J/psi
2013-04-04 02:45:11 UTC <tgeeky> (in... 1976)
2013-04-04 02:54:20 UTC <luite_> hmm
2013-04-04 02:54:36 UTC <tgeeky> what about your thing? what are you do-ing?
2013-04-04 02:54:54 UTC <luite_> ACTION trying to build step by step heap view using some d3 graph layout lib
2013-04-04 02:55:25 UTC <luite_> i was doing some dataflow analysis to reduce code size, but i needed something else because i didn't amke much progress
2013-04-04 03:01:07 UTC <tgeeky> so you're currently looking at d3.js to do it, or you need something else still?
2013-04-04 03:01:26 UTC <luite_> no i have some lib already and it draws graphs, but it doesn't look correct
2013-04-04 03:01:48 UTC <luite_> also i need to find a way to add fixed nodes (fixed location) to the graph, for the stack and registers
2013-04-04 03:02:37 UTC <luite_> it's just a very messy hack, nothing serial
2013-04-04 03:10:40 UTC <luite_> ah fixed location should be possible with the pos attr
2013-04-04 03:30:12 UTC <luite_> hm it almost works :)
2013-04-04 03:40:12 UTC <tgeeky> hm. I just realized something bad...
2013-04-04 03:40:15 UTC <tgeeky> http://www.reddit.com/r/worldnews/comments/1bmpd4/north_korea_seen_moving_midrange_missile_to_east/
2013-04-04 03:41:04 UTC <tgeeky> it occurs to me that EMP from an airbirst nuke would cripple the region but wouldn't affect NK (since they have almost no grid, comparatively)
2013-04-04 03:41:13 UTC <tgeeky> so they could just shoot upward and detonate
2013-04-04 03:41:34 UTC <cmears> without electricity how would they make their propaganda videos?
2013-04-04 03:42:07 UTC <tgeeky> cmears: well, we're talking about country-suicide anyway.
2013-04-04 03:42:20 UTC <tgeeky> but yes. Perahps they could just contract EA directly instead of ripping off their games.
2013-04-04 03:46:11 UTC <cmears> I think Kim Jong Un can make an EMP burst just by clapping his hands anyway
2013-04-04 03:49:14 UTC <tgeeky> maybe EMPs are how unicorns are born?
2013-04-04 03:51:09 UTC <carter> korean unicorns specifically?
2013-04-04 03:57:52 UTC <tgeeky> you know, I don't like to discriminate. Any unicorn will be fine.
2013-04-04 03:59:16 UTC <luite_> http://hdiff.luite.com:3000/
2013-04-04 03:59:58 UTC <tgeeky> how cool is this!
2013-04-04 04:00:14 UTC <cmears> I don't know what it is doing but I like it
2013-04-04 04:00:21 UTC <luite_> it evaluates the expression
2013-04-04 04:00:22 UTC <tgeeky> it tells you what it's doing
2013-04-04 04:00:35 UTC <luite_> it shows what's on the heap at every step (i should add stack and registers)
2013-04-04 04:00:43 UTC <tgeeky> make the box taller too
2013-04-04 04:00:48 UTC <tgeeky> very cool though
2013-04-04 04:00:58 UTC <cmears> I mean I don't quite know how to interpret it
2013-04-04 04:01:18 UTC <cmears> But I do like the idea of visualising evaluation
2013-04-04 04:01:48 UTC <tgeeky> luite_: given how long it takes to execute, perhaps do something smaller (=6 or 7) maybe
2013-04-04 04:02:00 UTC <luite_> that doesn't show the thunks on the heap so nicely
2013-04-04 04:02:09 UTC <tgeeky> i mean
2013-04-04 04:02:13 UTC <tgeeky> foldl + 0 [1..6]
2013-04-04 04:02:23 UTC <luite_> yeah that tree is a lot less tall
2013-04-04 04:02:37 UTC <luite_> so it's gone pretty quickly
2013-04-04 04:02:43 UTC <tgeeky> oh. i don't see the tall-ness of the tree, I only see the width
2013-04-04 04:03:10 UTC <tgeeky> the height for me is never > 3, and I never see the whole box for the 3rd level from the top
2013-04-04 04:03:19 UTC <tgeeky> (I just assumed it was down there)
2013-04-04 04:03:23 UTC <luite_> oh firefox
2013-04-04 04:03:43 UTC <tgeeky> yeah, not back on chrome yet
2013-04-04 04:08:06 UTC <carter> luite_ neat
2013-04-04 04:08:15 UTC <tgeeky> that's what I said!
2013-04-04 04:10:52 UTC <tgeeky> http://www.reddit.com/r/worldnews/comments/1bmpd4/north_korea_seen_moving_midrange_missile_to_east/c985953
2013-04-04 04:11:05 UTC <tgeeky> hopefully no blacksuits come interrogate me.
2013-04-04 04:20:51 UTC <luite_> bleh no one likes it other than Cale :p
2013-04-04 04:21:14 UTC <tgeeky> nobody else is paying attention :o
2013-04-04 04:22:04 UTC <mgsloan> luite: No, that's awesome!!!
2013-04-04 04:22:11 UTC <mgsloan> is that using diagrams?
2013-04-04 04:22:16 UTC <luite_> no sorry :(
2013-04-04 04:22:23 UTC <mgsloan> Ah, no worries :)
2013-04-04 04:22:34 UTC <mgsloan> It's awesome regardless
2013-04-04 04:22:43 UTC <luite_> it uses d3 and dagre
2013-04-04 04:22:58 UTC <luite_> so i just generate a string in dot format, and it draws it
2013-04-04 04:23:17 UTC <mgsloan> Ahh, sweet, yeah, it does look graph-viz-ey
2013-04-04 04:23:25 UTC <mgsloan> I guess asking if it was diagrams was pretty far fetched
2013-04-04 04:23:35 UTC <mgsloan> as noone's done a graph viz clone yet afaik
2013-04-04 04:24:03 UTC <cmears> you could just ask dot to do the layout, and draw the result with diagrams
2013-04-04 04:24:18 UTC <luite_> yeah but this is javascript, i can't call dot
2013-04-04 04:24:22 UTC <luite_> it's realtime, not precalculated
2013-04-04 04:24:46 UTC <luite_> i hacked the ghcjs thread scheduler to jump to the graph displayer every step, and pause 100ms or so
2013-04-04 04:32:05 UTC <luite_> adding the stack now, hopefully this lib recognizes the pos attribute
2013-04-04 04:43:27 UTC <carter> luite_ wat, you're doing the rendering and running on the browser both?
2013-04-04 04:43:31 UTC <carter> neat :)
2013-04-04 04:47:42 UTC <luite_> carter: yes it's compiled to js
2013-04-04 04:48:52 UTC <carter> props
2013-04-04 04:49:17 UTC <carter> luite has ghc.js been labor of love hobby hacking?
2013-04-04 04:49:42 UTC <luite_> bith of both recently
2013-04-04 04:49:52 UTC <luite_> euh
2013-04-04 04:51:52 UTC <luite_> so not purely hobby
2013-04-04 04:53:51 UTC <tgeeky> paid hobby ftw
2013-04-04 05:03:20 UTC <tgeeky> http://www.youtube.com/watch?v=0RHLtx9r2LA
2013-04-04 05:03:22 UTC <tgeeky> bwhahaha
2013-04-04 05:03:30 UTC <luite_> i made the nodes a bit smaller
2013-04-04 05:07:18 UTC <tgeeky> luite_: curiosly, because you made the box bigger (and it had to draw more stuff), it ran a lot slower
2013-04-04 05:08:28 UTC <luite_> oh firefox is relatively slow with this]
2013-04-04 05:16:03 UTC <luite_> i think i just need to add the stack things manually to d3
2013-04-04 05:16:11 UTC <luite_> instead of letting the graph layouter do ti
2013-04-04 18:42:52 UTC <ClaudiusMaximus> http://mathr.co.uk/constructions/woven-torus/  used diagrams to make the net!
2013-04-04 18:44:20 UTC <byorgey> woohoo!
2013-04-04 18:44:27 UTC <byorgey> that's really really cool
2013-04-04 18:44:37 UTC <byorgey> gonna write about it on your blog? =)
2013-04-04 18:44:48 UTC <ClaudiusMaximus> possibly :)
2013-04-04 18:44:50 UTC <ClaudiusMaximus> thanks
2013-04-04 18:45:44 UTC <ClaudiusMaximus> i had to take into account that paper isn't infinitely thin/flexible... might be a better way but i just made everything a bit narrower
2013-04-04 18:50:33 UTC <byorgey> sounds like an excellent first approximation =)
2013-04-04 18:51:09 UTC <byorgey> Anyone who knows anything about color theory want to hack on https://github.com/diagrams/diagrams-lib/issues/77 ?
2013-04-04 18:51:16 UTC <byorgey> I really really want it =)
2013-04-04 18:55:19 UTC <ClaudiusMaximus> my technique is using golden angle for hsv hue increment when i want distinct-ish colours without thinking too hard - doing it properly would be a lot harder, colour is complicated
2013-04-04 18:59:28 UTC <byorgey> ah, I like that idea
2013-04-04 18:59:44 UTC <byorgey> but see, I don't even know anything about hsv
2013-04-04 19:00:35 UTC <ClaudiusMaximus> it's a hack to turn tgb cube into hexagonal bipyramid, or something
2013-04-04 19:00:38 UTC <ClaudiusMaximus> *rgb
2013-04-04 19:02:11 UTC <bergey`> Cylindrical bipyramid, I thought
2013-04-04 19:03:41 UTC <ClaudiusMaximus> it's nonlinear, anyay, all the code i've seen has 6-way branching for each hextant
2013-04-04 19:05:07 UTC <bergey`> Huh.  I guess I understand color even less well than I thought.  One more thing to read about :)
2013-04-04 19:07:14 UTC <ClaudiusMaximus> i think rgb is a horrible perceptual hack - but then colour is perceptual anyway (like those illusions with gray (in pixel value) squares that look yellow/blue depending on the lighting of the rest of the scene)
2013-04-04 19:08:34 UTC <ClaudiusMaximus> if you wanted to use 'diagrams' for posters displayed at bus stops, you might want to choose inks that respond well to both daylight sunlight spectrum and sodium street light spectrum...
2013-04-04 19:09:24 UTC <bergey`> My impression is that RGB is how displays & eyes work, but that HSV is always what I want to work in for talking about color.    Kindof odd.  (Not that my art profs ever referred to HSV as such.)
2013-04-04 19:10:40 UTC <ClaudiusMaximus> that's roughly my impession too - but as soon as you go into print you have all the physics of light reflection at different frequencies...
2013-04-04 19:11:12 UTC <ClaudiusMaximus> anyway, gotta clean/cook/eat - laters...
2013-04-04 19:11:18 UTC <bergey`> later
2013-04-04 20:08:51 UTC <tgeeky> luite_: here's the picture showing how much better AMS is re: all other similar experiments: http://www.quantumdiaries.org/wp-content/uploads/2013/04/Press_33.jpg
2013-04-04 20:21:03 UTC <tgeeky> byorgey: re:     182 comments
2013-04-04 20:21:03 UTC <tgeeky>     share
2013-04-04 20:21:03 UTC <tgeeky> 33
2013-04-04 20:21:03 UTC <tgeeky> 1624
2013-04-04 20:21:03 UTC <tgeeky> With all due respect to the armed forces of Reddit, this is kinda true. (quickmeme.com)
2013-04-04 20:21:06 UTC <tgeeky> submitted 5 hours ago by Ninjapork to AdviceAnimals
2013-04-04 20:21:09 UTC <tgeeky>     497 comments
2013-04-04 20:21:11 UTC <tgeeky> oh god
2013-04-04 20:21:21 UTC <tgeeky> i hate my client sometimes.
2013-04-04 20:21:48 UTC <tgeeky> byorgey: re: https://github.com/diagrams/diagrams-lib/issues/77 -- perhaps it's time to get edwardk interested in diagrams? :o
2013-04-04 20:22:09 UTC <byorgey> edwardk is already vaguely interested in diagrams
2013-04-04 20:22:19 UTC <byorgey> for doing visualization on top of his analytics stuff
2013-04-04 20:22:25 UTC <tgeeky> i think he's as expert as you can get re: color
2013-04-04 20:22:28 UTC <tgeeky> for #haskellers
2013-04-04 20:22:36 UTC <byorgey> him and roconnor
2013-04-04 20:22:57 UTC <tgeeky> hehe. edwardk is like a 40/10 in code productivity
2013-04-04 20:23:03 UTC <tgeeky> I don't know where roconnor is, but its <= 10
2013-04-04 20:23:05 UTC <byorgey> I don't think we really need a color *expert* for #77 though.
2013-04-04 20:23:10 UTC <tgeeky> true enough
2013-04-04 20:24:14 UTC <tgeeky> byorgey: I remember d3.js having some feature w.r.t sets of colors: https://github.com/mbostock/d3/wiki/Ordinal-Scales
2013-04-04 20:24:17 UTC <luite_> i sometimes used this http://colorschemedesigner.com/
2013-04-04 20:24:21 UTC <tgeeky> is that worthy of adding as a comment?
2013-04-04 20:24:25 UTC <carter> byorgey i will be playing with color pallettes later this month...
2013-04-04 20:24:30 UTC <luite_> they have a few approaches that you can copy
2013-04-04 20:24:49 UTC <tgeeky> luite_: yeah, I assumed you would always do the first 4 (mono, complement, triad, tetrad)
2013-04-04 20:24:58 UTC <tgeeky> as everyone seems to use those schemes
2013-04-04 20:25:10 UTC <byorgey> any info is worth adding as a comment.
2013-04-04 20:25:15 UTC <tgeeky> byorgey: ok
2013-04-04 20:26:21 UTC <luite_> tgeeky: yeah you can do some variations on the angles, and choose colors with similar saturation and brightness
2013-04-04 20:26:28 UTC <carter> having a nice way of geneerating good color schemes is valuable
2013-04-04 20:26:54 UTC <tgeeky> i agree. you take the arbitrary and usually uninteresting choices of coders who want to focus on something else
2013-04-04 20:27:01 UTC <tgeeky> away, and replace them with something default
2013-04-04 20:27:54 UTC <luite_> i uploaded all three folds here btw http://hdiff.luite.com/reduce/
2013-04-04 20:28:14 UTC <luite_> on the regular nginx server, not the temp :3000 one
2013-04-04 20:28:38 UTC <byorgey> yep
2013-04-04 20:28:44 UTC <byorgey> oops, wrong channel
2013-04-04 20:28:47 UTC <tgeeky> luite_: noice!
2013-04-04 20:28:51 UTC <byorgey> luite_: awesome!
2013-04-04 20:29:03 UTC <byorgey> Thunk Thunk Thunk Thunk
2013-04-04 20:30:24 UTC <luite_> byorgey: yeah i should display a bit more info about the functions, they all refer to the plusInt function probably. in the beginning you briefly see a flash of a big data structure, that's probably the Num dict for Int
2013-04-04 20:30:57 UTC <byorgey> ah, cool, I was wondering what that was
2013-04-04 20:31:18 UTC <carter> neat
2013-04-04 20:31:32 UTC <fryguybob> ClaudiusMaximus: Cool torus!
2013-04-04 20:31:37 UTC <carter> byorgey the color space thing is subtle to do well
2013-04-04 20:32:03 UTC <byorgey> carter: I am aware of that.  To start, I would just like someone to do it poorly =)
2013-04-04 20:32:09 UTC <byorgey> then we can improve it
2013-04-04 20:32:15 UTC <luite_> what is the color space thing?
2013-04-04 20:32:27 UTC <carter> luite_ how to color things in a diagram
2013-04-04 20:32:30 UTC <carter> for various goals
2013-04-04 20:32:43 UTC <carter> eg: preceptually linear color scale
2013-04-04 20:32:48 UTC <byorgey> luite_: https://github.com/diagrams/diagrams-lib/issues/77
2013-04-04 20:33:02 UTC <mgsloan> luite: wow, these are awesome.  Maybe debugging code will end up being easier in the browser!
2013-04-04 20:33:40 UTC <luite_> mgsloan: yeah in theory you can stop any ghcjs program and step a single thread with this
2013-04-04 20:33:44 UTC <carter> mgsloan only if you have a time step slider
2013-04-04 20:33:45 UTC <mgsloan> I mean, this'd be pretty low level debugging, but could be useful for some stuff
2013-04-04 20:33:47 UTC <luite_> just replace the scheduler temporaritly
2013-04-04 20:33:54 UTC <mgsloan> carter - Yeah, make it reversible!
2013-04-04 20:33:57 UTC <carter> yesss
2013-04-04 20:34:04 UTC <carter> reversible debugging
2013-04-04 20:34:09 UTC <mgsloan> Would be so sweet
2013-04-04 20:34:18 UTC <carter> plus play with tracking the scheduler interleaving
2013-04-04 20:34:31 UTC <mgsloan> luite: Why doesn't ghcjs vm run backwards? come on, it's trivial ;)
2013-04-04 20:34:51 UTC <luite_> reversible is slighly more tricky, but it can be done (probably the easiest way is to take snapshots from time to time, and run the code forwarid again to the desired location from the latest checkpoint)
2013-04-04 20:35:22 UTC <luite_> not quite, required values on the stack may have been overwritten
2013-04-04 20:35:27 UTC <luite_> it's not really a state monad ;p
2013-04-04 20:35:37 UTC <carter> luite_ it might be slightly tricky
2013-04-04 20:35:42 UTC <carter> but it'd be magicaly cool
2013-04-04 20:35:47 UTC <mgsloan> yeah, I kidd.  That would be pretty nifty.  It'd also be pretty interesting if all of the external events could be captured
2013-04-04 20:35:52 UTC <carter> yeah
2013-04-04 20:36:11 UTC <carter> more tractable to do that interception logging with ghc.js probably than normal compiled haskell
2013-04-04 20:36:13 UTC <mgsloan> As otherwise you wouldn't have consistency between runs from the snapshots
2013-04-04 20:36:29 UTC <luite_> anyway i had thought of that, but wanted to show something first, this is just a proof of concept
2013-04-04 20:36:36 UTC <mgsloan> and given how common events are in realworld javascript..  You can't really afford a snapshot per event
2013-04-04 20:37:09 UTC <luite_> hmm, external events would be rather tricky
2013-04-04 20:37:16 UTC <luite_> since the ffi can basically do anything
2013-04-04 20:37:17 UTC <mgsloan> luite_: Nah, this is crazy cool, I can't believe it's modeling STG with such fidelity (I mean, not that I'd really be able to judge)
2013-04-04 20:38:18 UTC <luite_> there are probably some differences in stack frame layout and sometimes object layout compared to the native implementation
2013-04-04 20:38:43 UTC <luite_> native optimizes stack frames to reduce the number of slot reloads, that's not in ghcjs yet
2013-04-04 20:38:51 UTC <luite_> not extremely difficult probably
2013-04-04 20:39:47 UTC <luite_> and ghcjs sometimes stores objects in itself, if you have a recursive 'go' function for example, it needs to call itself and therefore has itself in its closure
2013-04-04 20:39:50 UTC <luite_> rather useless :p
2013-04-04 20:39:55 UTC <luite_> i should add some stack to avoid that
2013-04-04 20:40:04 UTC <luite_> err
2013-04-04 20:40:05 UTC <luite_> check
2013-04-04 20:40:16 UTC <luite_> but that makes loading variables a tad more difficult
2013-04-04 20:41:57 UTC <luite_> oh and ghcjs uses eager blackholing, ghc lazy by default
2013-04-04 20:42:20 UTC <luite_> so it would keep thunks around as thunk longer
2013-04-04 20:42:45 UTC <luite_> (until you do a nondupable IO or garbage collection)
2013-04-04 20:44:12 UTC <luite_> now i need to find that bug that forgets all preprocessor options when doing `cabal install --ghcjs text'
2013-04-04 20:46:43 UTC <luite_> mgsloan: it would be cooler with multiple threads
2013-04-04 20:47:04 UTC <luite_> in particular with async exceptions where you can see one thread stealing a computation from another
2013-04-04 20:48:47 UTC <carter> luite_ either way: great great work
2013-04-04 20:48:51 UTC <carter> its really exciting
2013-04-04 20:49:39 UTC <mgsloan> luite_: That would be cool!  That makes sense about the black-holing, I was surprised to see so many around
2013-04-04 20:50:23 UTC <luite_> yeah when a thunk is being computed it's immediately set to a black hole, all references are reset to prevent memory leaks
2013-04-04 20:50:48 UTC <luite_> but that menas that when a thread receives an async exception, there's no way to recover the original thunks it was computing
2013-04-04 20:51:14 UTC <luite_> so it converts them to restore thunks, that copy the stack from the interrupted computation
2013-04-04 21:20:18 UTC <carter> byorgey just saw your types email
2013-04-04 21:20:20 UTC <carter> its interesting
2013-04-04 21:20:35 UTC <byorgey> carter: oh, re: generalizing R2 etc.?
2013-04-04 21:20:39 UTC <carter> yes
2013-04-04 21:22:43 UTC <carter> i will have to think about it
2013-04-04 21:23:01 UTC <carter> i'm actually doing some simple vs pro api desgn stuff prsently
2013-04-04 22:35:06 UTC <luite_> I first thought that you were going to generalize it to non-flat geometries :)
2013-04-04 22:35:57 UTC <luite_> design your football or horse saddle with diagrams!
2013-04-04 23:17:10 UTC <ClaudiusMaximus> mm, would be great if Diagrams.Backend.SVG.CmdLine.multiMain had an option to list availiable diagrams
2013-04-04 23:17:36 UTC <ClaudiusMaximus> also an option to render all diagrams to files at once..
2013-04-04 23:21:26 UTC <fryguybob> ClaudiusMaximus: I thought it did have a list option.
2013-04-04 23:22:13 UTC <fryguybob> Oh, SVG doesn't, but the others do.
2013-04-04 23:22:56 UTC <ClaudiusMaximus> fryguybob: thanks btw, working on diagrams for a blog post about it..
2013-04-04 23:23:32 UTC <ClaudiusMaximus> guess it calls to be factored out to a defaultDefaultMain / defaultMultiMain thingy
2013-04-04 23:24:19 UTC <fryguybob> ClaudiusMaximus: Super! I'll pass it along to my wife who will get the math club to make some.
2013-04-04 23:24:54 UTC <fryguybob> ClaudiusMaximus: Yeah, we have been lazy about copy-and-pasting large chunks of backend.
2013-04-04 23:25:10 UTC <ClaudiusMaximus> be warned, it's very fiddly, took me about 3 hours to make it from print out to finished thing
2013-04-04 23:25:27 UTC <fryguybob> ClaudiusMaximus: All the better, give them something to do :D
2013-04-04 23:25:30 UTC <tgeeky> defaultdefault?
2013-04-04 23:25:40 UTC <ClaudiusMaximus> defaultMainFactory perhaps
2013-04-04 23:25:44 UTC <ClaudiusMaximus> ;)
2013-04-04 23:25:47 UTC <tgeeky> you're fired!
2013-04-04 23:25:49 UTC <tgeeky> hehe
2013-04-05 00:11:30 UTC <luite_> fryguybob: whoah i didn't know you used windows
2013-04-05 00:11:33 UTC <luite_> what a disappointment ;)
2013-04-05 00:12:27 UTC <fryguybob> luite_: It appears all of my "I'll fire up IE" statements were not taken literally :P
2013-04-05 00:13:36 UTC <luite_> that's just something people say but not actually mean, right? just like "oh i don't know that, I'll just Bing it"
2013-04-05 00:14:10 UTC <luite_> do you have IE8 btw?
2013-04-05 00:14:29 UTC <fryguybob> I think I have 10 now, they pushed that out the other day.
2013-04-05 00:14:50 UTC <luite_> yeah ghcjs does work with that, but not with IE8
2013-04-05 00:14:57 UTC <fryguybob> Not that I use it except when there is something new with GHCJS.
2013-04-05 00:15:06 UTC <luite_> :p
2013-04-05 00:15:32 UTC <luite_> I did add another fold, with a Set now: http://hdiff.luite.com:3000/
2013-04-05 00:15:38 UTC <fryguybob> luite_: I only use windows because I used to write software for customers with windows and I'm still using the laptop that I did that with.
2013-04-05 00:19:14 UTC <fryguybob> luite_: The heap stuff is awesome btw.
2013-04-05 02:45:12 UTC <ClaudiusMaximus> fryguybob: blogged here http://mathr.co.uk/blog/2013-04-05_weaving_a_torus.html
2013-04-05 02:49:49 UTC <cmears> ClaudiusMaximus: what size paper did you print the net on?
2013-04-05 02:49:51 UTC <luite_> cool, almost as good as torus.bas ;)
2013-04-05 02:50:13 UTC <ClaudiusMaximus> cmears: A4
2013-04-05 02:50:59 UTC <ClaudiusMaximus> luite_: not familiar with that one!
2013-04-05 02:51:24 UTC <luite_> ClaudiusMaximus: ehe is a demo program that draws a torus on the screen, and then rotates its colors
2013-04-05 02:52:05 UTC <luite_> came with quickbasic i think
2013-04-05 02:52:12 UTC <ClaudiusMaximus> cool, i remember quickbasic - think i did some crazy matrix exponential for simulating dsp stuff in it, using strings to store the matrix data..
2013-04-05 02:52:13 UTC <cmears> I was thinking of trying an A3 version, but you wouldn't necessarily need an A3 printer to make a bigger one, as long as you could fit the biggest individual component on A4 after you've scaled it up
2013-04-05 02:52:39 UTC <ClaudiusMaximus> cmears: right :)  and remember to scale each part by the same amount
2013-04-05 02:52:56 UTC <cmears> Do you think having it bigger would make it easier to construct?
2013-04-05 02:53:47 UTC <ClaudiusMaximus> probably - any smaller would be impossible - though it might be "too loose" if you just scale it up, rather than regenerating the net at the new larger size with the same wiggle-room
2013-04-05 02:54:16 UTC <ClaudiusMaximus> (ie, at double the size there'd be 3mm gap at the corners rather than 1.5mm)
2013-04-05 02:54:36 UTC <cmears> Yeah, especially since the paper's thickness doesn't get scaled up
2013-04-05 03:09:01 UTC <ClaudiusMaximus> bedtime, gone 4am.. - g'night
2013-04-25 14:12:45 UTC <fryguybob> byorgey: There is also a problem (though in many ways easier to solve) that our curved primitives stop behaving nicely.
2013-04-25 14:13:22 UTC <fryguybob> byorgey: For instance any transformation that takes a line segment to an arc cannot be represented exaclty with a bezier curve.
2013-04-25 14:13:44 UTC <fryguybob> byorgey: That is the new curve isn't just a transformation on the control points.
2013-04-25 14:14:05 UTC <byorgey> ah, I see
2013-04-25 14:14:28 UTC <fryguybob> But this is precisely the sort of transformation that offsets are and I feel like we are getting close to good ways to handle that.
2013-04-25 14:14:34 UTC <byorgey> that's true.
2013-04-25 14:14:55 UTC <fryguybob> I guess you could pharse the envelop problem in the same way.
2013-04-25 14:15:04 UTC <fryguybob> (phrase)
2013-04-25 14:15:32 UTC <byorgey> But I wonder if there is some nice simple internal representation to use where transformations etc. behave nicely, and then we just have to do some grungy conversions + approximations when actually generating an image at the very end.
2013-04-25 14:15:53 UTC <byorgey> presumably you would want to be able to use different models of hyperbolic space, e.g. Poincare disk model or upper-half-plane model
2013-04-25 14:16:24 UTC <byorgey> but again, I don't really understand it well enough yet to know what I'm talking about =)
2013-04-25 14:16:34 UTC <fryguybob> byorgey: Yeah I think that is the trick, just doing the approximate conversion once.
2013-04-25 14:17:15 UTC <fryguybob> byorgey: Also having NURBs *might* get us a little further along with some transformations.
2013-04-25 15:04:51 UTC <JamesJRH> Hello. Any ideas how to represent a 3D object and draw orthographic projections from it? Can I do this using Haskell?
2013-04-25 15:06:33 UTC <JamesJRH> I'm trying to work out how to represent an object such that edges that aren't in view are represented as âhidden detailâ, a dashed line.
2013-04-25 15:08:48 UTC <fryguybob> JamesJRH: We would like to support exactly that kind of thing with diagrams, but do not yet.
2013-04-25 15:08:53 UTC <JamesJRH> And also how to represent cylinders such that they are drawn with ellipses and lines.
2013-04-25 15:09:08 UTC <JamesJRH> Ok.
2013-04-25 15:09:48 UTC <fryguybob> JamesJRH: We have similar projects mentioned in our future projects wiki: http://www.haskell.org/haskellwiki/Diagrams/GSoc
2013-04-25 15:09:58 UTC <fryguybob> Ooops
2013-04-25 15:10:06 UTC <JamesJRH> Yes, I've seen that.
2013-04-25 15:10:13 UTC <fryguybob> http://www.haskell.org/haskellwiki/Diagrams/GSoC
2013-04-25 15:10:24 UTC <JamesJRH> That page is how I found diagrams.
2013-04-25 15:10:33 UTC <JamesJRH> (from a search)
2013-04-25 15:11:43 UTC <fryguybob> As to the how, doing a projection is not very hard and it plays nicely with all of our primitives.  You will need some ability to do more advanced clipping then we support.
2013-04-25 15:12:12 UTC <fryguybob> And the ability to sort things in space.
2013-04-25 15:13:52 UTC <fryguybob> Even if you don't care about drawing the surfaces directly, you do need to clip to those surfaces and find the maximal profiles to discover where the lines are.
2013-04-25 15:14:17 UTC <fryguybob> I'm not up on the work that has been done in this area in general but I imagine there is quite a lot.
2013-04-25 15:14:47 UTC <fryguybob> It might be that most of it focuses on getting the *effect* of a line drawing using various shader programs.
2013-04-25 15:15:05 UTC <fryguybob> This approach would not work too well with Diagrams (at least what I have in mind).
2013-04-25 15:15:19 UTC <fryguybob> ACTION has to run.
2013-04-25 15:15:40 UTC <JamesJRH> I think the faces have to be drawn. Or at least there needs to be a way of telling if a line is in the foreground.
2013-04-25 15:18:01 UTC <JamesJRH> A very basic approach to hidden detail would be to draw each face as a solid border filled with white, and draw all lines as dashed again on top.
2013-04-25 15:19:03 UTC <JamesJRH> - ie. draw each face again with a dashed border and no fill.
2013-04-25 15:22:54 UTC <JamesJRH> but that approach is very basic and inefficient, because lines would be drawn on top of each other multiple times.
2013-04-25 15:26:14 UTC <byorgey> JamesJRH: I don't think that works because you want some parts of some lines to be hidden.
2013-04-25 15:26:27 UTC <byorgey> to do that you have to draw the faces and lines interleaved, in the right order.
2013-04-25 15:26:52 UTC <byorgey> well, so I guess it works if you also do some analysis to figure out the correct order in which to draw things.
2013-04-25 15:30:08 UTC <JamesJRH> byorgey: If you can get a solid to draw with white sides and black edges (no hidden detail), and superimpose a dashed wireframe ontop, the effect is that hidden detail is dashed and visible lines are solid.
2013-04-25 15:30:33 UTC <JamesJRH> It's a bit of a hack idea though.
2013-04-25 15:31:46 UTC <byorgey> oh, I see what you're saying
2013-04-25 15:31:58 UTC <JamesJRH> The order matters for drawing the solid though, the foreground faces have to obscure all the hidden detail.
2013-04-25 15:32:08 UTC <byorgey> yeah
2013-04-25 15:54:08 UTC <fryguybob> ACTION back
2013-04-25 15:54:17 UTC <JamesJRH> Hi.
2013-04-25 15:55:48 UTC <fryguybob> What I was saying before about the faces depends on what primitives you want to draw.  For instance, what should a sphere look like?  If it is always a circle then no faces are really being drawn, but the maximal edge is getting extracted as a circle.
2013-04-25 15:56:44 UTC <fryguybob> If you are always going to decompose into polygons then that is simpler.
2013-04-25 15:58:08 UTC <JamesJRH> Hmm.. I was thinking of drawing spheres with circles, and circles with ellipses.
2013-04-25 15:59:03 UTC <JamesJRH> ..cylinders with ellipses and lines.
2013-04-25 15:59:14 UTC <fryguybob> Right in the case of a cylinder the ends make sense, but how do you draw the length of it?
2013-04-25 16:00:48 UTC <fryguybob> Perhaps "maximal extent under projection" is the right phrase?
2013-04-25 16:01:12 UTC <JamesJRH> If you've worked out how to calculate the axes of the ellipse, then the 2 lines are between the ends of the long axes of the 2 ellipses.
2013-04-25 16:01:53 UTC <fryguybob> Not quite I think.
2013-04-25 16:02:22 UTC <JamesJRH> At least in orthographic.
2013-04-25 16:02:47 UTC <fryguybob> Ah, yeah, in orthographic that sounds right.
2013-04-25 16:06:28 UTC <JamesJRH> In perspective, I guess it's that the 2 lines are tangent to the 2 ellipses and pass through a vanishing point which the axis of the cylinder also passes through.
2013-04-25 16:10:41 UTC <fryguybob> After working out what each primitive would do and what primitives to have we have the question of how they can interact.
2013-04-25 16:11:41 UTC <fryguybob> Something simple like a box with a smaller sphere poking into the box, does the sphere's circle show part solid and part hidden line?  What about the intersection of the box and the sphere?
2013-04-25 16:12:15 UTC <JamesJRH> Yes, I was just going to say this.
2013-04-25 16:12:32 UTC <JamesJRH> Also, have you heard of halfspaces?
2013-04-25 16:12:46 UTC <fryguybob> More complicated would be the intersection of two cylinders in the middle.
2013-04-25 16:13:10 UTC <fryguybob> JamesJRH: as in everything on one side of a hyperplane?
2013-04-25 16:14:21 UTC <JamesJRH> I think that should be how polyhedra are constructed - the intersection, union, complement, difference, etc. of halfspaces.
2013-04-25 16:15:54 UTC <fryguybob> JamesJRH: I think that only gives you convex shapes right?
2013-04-25 16:15:58 UTC <JamesJRH> ..and general solids are constructed from halfspaces, infinite cylinders, spheres, and others.
2013-04-25 16:17:10 UTC <JamesJRH> No, intersection only gives convex, but union and the others give concave aswell.
2013-04-25 16:18:08 UTC <fryguybob> Oh, I was thinking union with a half-space, not union of intersections.
2013-04-25 16:19:50 UTC <fryguybob> Wait, that doesn't matter, yeah union gets you convex.
2013-04-25 16:20:03 UTC <JamesJRH> So a cube is made by the intersection of 6 halfspaces, and a cube with a spherical cup is the difference of a cube and a sphere.
2013-04-25 16:23:01 UTC <JamesJRH> A halfspace can be represented by 3 points making it easy to use. The order of the points can determine which side is solid using the right-hand rule.
2013-04-25 16:23:50 UTC <JamesJRH> An infinite cylinder could be 2 points and a radius, a sphere 1 point and a radius.
2013-04-25 16:24:29 UTC <JamesJRH> This would be the ultimate way of doing things I think.
2013-04-25 16:25:31 UTC <JamesJRH> But turning easy representation into projected technical drawings is going to be hard.
2013-04-25 16:26:40 UTC <fryguybob> It may not be too bad.
2013-04-25 16:28:56 UTC <JamesJRH> I can't get my head round how union would work with intersection. I can't think how to calculate faces and edges from concave shapes.
2013-04-25 16:29:45 UTC <fryguybob> ACTION must go again.
2013-04-25 17:33:49 UTC <hpaste> ClaudiusMaximus annotated âcompassâ with âcompass (annotation)â at http://hpaste.org/86549#a86584
2013-04-25 17:33:56 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-04-25_hyperbolic_compass_and_straightedge.png
2013-04-25 17:43:45 UTC <JamesJRH> fryguybob: Hmm, yes, 2 cylinders would be complicated, especially if their axes don't cross. The edge between them would be like the outline of a pringle!
2013-04-25 17:44:49 UTC <luite> pringles, the tastiest hyberbolic geometry
2013-04-25 17:45:03 UTC <JamesJRH> :-p
2013-04-25 17:45:18 UTC <luite> hyperbolic...
2013-04-25 17:47:55 UTC <fryguybob> JamesJRH: yes pringles.  There is a nice trick that makes that particular one easy :D
2013-04-25 17:48:04 UTC <fryguybob> (easy-ish)
2013-04-25 17:48:24 UTC <JamesJRH> or if the axes are closer than a radius, perhaps a bit more like the line on a tennis ball.
2013-04-25 17:48:37 UTC <ClaudiusMaximus> JamesJRH: one way to do CSG it is with signed distance estimates from the surface, then union is min and intersection is max
2013-04-25 17:48:55 UTC <fryguybob> You can classify each of these primitives further by noting how much of the half plane is in the final surface.
2013-04-25 17:50:05 UTC <fryguybob> If it is an area of the half-plane then you do as you would with the half-plane, but locally.  If it is a line from the half plane, then you work with only that line.  If it is a point, then you don't have much information.
2013-04-25 17:51:15 UTC <fryguybob> Cylinders and cones are developable surfaces (the line option) so questions about their intersections is just a question about line intersections with a single slice of the world.
2013-04-25 17:51:38 UTC <JamesJRH> ClaudiusMaximus: Ooh wow, CSG looks like it's exactly where I'm going with this!
2013-04-25 17:51:58 UTC <fryguybob> luite: You were right, coupling from the past is a neat trick.
2013-04-25 17:52:37 UTC <ClaudiusMaximus> JamesJRH: there is mecha, with a few forks on github - but i think it does rendering using external programs
2013-04-25 17:53:34 UTC <luite> fryguybob: oh hah, i forgot about that :)
2013-04-25 17:54:50 UTC <fryguybob> ACTION goes away again.
2013-04-25 18:12:47 UTC <byorgey> mecha could compile to diagrams though =)
2013-04-25 19:02:36 UTC <JamesJRH> In trying to install mecha, I've realised that my cabal-install is completely broken. I've tried purging haskell-platform and it's dependencies and reinstalling, and removing ~/.cabal/ but it's still broken. How do I start over?
2013-04-25 19:24:41 UTC <ClaudiusMaximus> JamesJRH: http://www.vex.net/~trebla/haskell/sicp.xhtml has lots of sage advice re broken cabal
2013-04-25 19:37:06 UTC <JamesJRH> Thanks.
2013-04-25 20:03:10 UTC <JamesJRH> ClaudiusMaximus: I have mecha installed now, do you know how to run the example?
2013-04-25 20:27:46 UTC <ClaudiusMaximus> JamesJRH: no clue, never tried it (just looked at the sources a bit)
2013-04-25 20:29:23 UTC <JamesJRH> I'm also not sure what mecha actually does if it relies on external renderers.. it takes CSG code and outputs what?
2013-04-25 20:29:44 UTC <ClaudiusMaximus> CSG input for povray and scad, afaict
2013-04-25 20:31:32 UTC <JamesJRH> So does that mean it doesn't actually compute things like edges or corners? It merely just converts CSG code into another CSG format?
2013-04-25 20:31:52 UTC <ClaudiusMaximus> i think that is true...
2013-04-25 20:32:13 UTC <byorgey> I think so, it just gives you a nice way to write CSG descriptions as Haskell code
2013-04-25 20:32:48 UTC <byorgey> but if we end up doing CSG stuff in diagrams, mecha could make for a nice frontend for describing stuff, perhaps
2013-04-25 20:33:12 UTC <byorgey> bergey has been thinking about 3D stuff, I wonder if he's thought about CSG
2013-04-25 20:33:17 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-04-25_fish_construction.svg (need to add a primitive to choose which intersection is the "right" one, and some other stuff to generalize regions - then fingers crossed i could make both diagrams from the same code...)
2013-04-25 20:33:41 UTC <byorgey> ClaudiusMaximus: awesome =)
2013-04-25 20:34:40 UTC <byorgey> ClaudiusMaximus: what do you mean, "which intersection"?
2013-04-25 20:34:48 UTC <byorgey> is this a Poincare disk on the right?
2013-04-25 20:35:12 UTC <ClaudiusMaximus> yes, poincare disk
2013-04-25 20:35:30 UTC <byorgey> don't geodesics in hyperbolic space still only have one (or zero) intersections?
2013-04-25 20:35:47 UTC <ClaudiusMaximus> i mean, if you intersect a circle and a line you'll get 0, 1 or 2 points, but you probably only want one of the points
2013-04-25 20:36:06 UTC <ClaudiusMaximus> yes, geodesics - but i also have hyperbolic circles :)
2013-04-25 20:36:14 UTC <byorgey> oh, I see, right =)
2013-04-25 20:39:31 UTC <ClaudiusMaximus> the ways of specifying arcs seem to be a pain everywhere... generally i want "arc from point p to point q centered at c and i do assert that p and q are the same distance from c".  still arc' is less pain than SVG
2013-04-25 20:40:05 UTC <ClaudiusMaximus> actually "shortest arc from point p to point q"
2013-04-25 20:56:11 UTC <fryguybob> ClaudiusMaximus: Yeah, the best way to specify arcs is often not to and have them fall out from other constraints.
2013-04-25 21:13:38 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-04-25_fish_construction_generalized.svg
2013-04-25 21:14:17 UTC <ClaudiusMaximus> i can now say "fishGrid 6 3" for the flat case, and increase the numbers for the hyperbolic case (no spherical stuff yet)
2013-04-25 21:27:17 UTC <hpaste> ClaudiusMaximus annotated âcompassâ with âcompass (annotation) (annotation)â at http://hpaste.org/86549#a86595
2013-04-25 21:32:43 UTC <fryguybob> ClaudiusMaximus: Nice!
2013-04-25 21:34:03 UTC <ClaudiusMaximus> :)
2013-04-25 21:34:28 UTC <byorgey> ClaudiusMaximus: very cool!
2013-04-25 21:34:52 UTC <byorgey> ClaudiusMaximus: and I'd be happy to add more functions for constructing arcs if you can think of some nice APIs
2013-04-25 21:36:21 UTC <ClaudiusMaximus> byorgey: will have a try, i think my arc'' relies on the region being stroked in an anticlockwise winding, but not entirely sure - it's a bit of a mess...
2013-04-25 21:37:22 UTC <ClaudiusMaximus> need to blog about this, but it's getting late and i need to eat...
2013-04-25 21:43:33 UTC <byorgey> hehe, no rush =)
2013-04-25 21:45:29 UTC <byorgey> ClaudiusMaximus: how about an arc function that takes two points and a signed radius, and draws an arc with the center lying to the right or left of the vector from p1 to p2, depending on the sign
2013-04-25 21:45:39 UTC <byorgey> and if the given radius is too small it just doesn't draw anything.
2013-04-25 21:46:16 UTC <byorgey> actually, I think I have some code lying around somewhere which does exactly that
2013-04-25 21:46:28 UTC <byorgey> I was using it to draw arc-shaped arrows
2013-04-25 21:46:34 UTC <fryguybob> byorgey: That one can also be nice as an "offset" from the line.
2013-04-25 21:46:41 UTC <fryguybob> instead of radius
2013-04-25 21:46:51 UTC <byorgey> fryguybob: ah, yes, *that's* actually what my code does
2013-04-25 21:47:16 UTC <byorgey> doing it in terms of radius is even easier to implement
2013-04-25 21:47:22 UTC <fryguybob> yeah
2013-04-25 21:48:01 UTC <byorgey> I've got some diagrams hacking time coming up, I'll try to generalize that code a bit and stick it in -lib
2013-04-25 21:49:30 UTC <fryguybob> There are a bunch of useful ones given two intersecting lines.  Fit to the corner tangent to the lines.  Fit in the corner at a fixed radius.
2013-04-25 21:50:12 UTC <byorgey> makes sense.
2013-04-25 21:50:56 UTC <byorgey> ACTION -> home
2013-04-25 21:52:06 UTC <fryguybob> I should see if I can make some progress on the offset stuff as I have a little bit of time tonight.
2013-04-26 00:29:54 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-04-25_fish_tilings.png
2013-04-26 00:30:17 UTC <luite> did you make those with diagrams?
2013-04-26 00:31:33 UTC <ClaudiusMaximus> yes
2013-04-26 00:31:50 UTC <luite> not bad :)
2013-04-26 00:32:08 UTC <ClaudiusMaximus> :)
2013-04-26 00:32:13 UTC <ClaudiusMaximus> bedtime...
2013-04-26 00:33:06 UTC <luite> can you easily render it to another model?
2013-04-26 00:35:08 UTC <ClaudiusMaximus> fairly easily - just need to add another parameter to make a choice between poincare half plane instead of disc...
2013-04-26 00:36:21 UTC <ClaudiusMaximus> already automagically chooses between euclidean space and hyperbolic space depending on the number of sides and how many about each vertex
2013-04-26 14:20:42 UTC <fryguybob> ACTION has a plan to incorporate diagrams into his research by making visulaizations of "fairness" of STM by building diagrams in transactions.
2013-04-26 14:22:53 UTC <luite> are you working on better fairness in STM? i thought the current version wasn't fair at all
2013-04-26 14:23:35 UTC <fryguybob> luite: That might be a direction I go, but I'm working on incorporating HTM and will need to know how it impacts fairness.
2013-04-26 14:23:44 UTC <fryguybob> luite: And yes, it is not fair right now.
2013-04-26 14:24:32 UTC <luite> is your research funded by intel? :p
2013-04-26 14:24:55 UTC <fryguybob> luite: I was an intern there last summer :D
2013-04-26 14:25:19 UTC <fryguybob> ACTION would happly take there money, but more importantly their hardware.
2013-04-26 14:25:22 UTC <luite> yeah i know, and also that it had somethign to do with HTM
2013-04-26 14:26:02 UTC <luite> hm, HTM is going to be in the next generation of consumer cpus isn't it?
2013-04-26 14:26:35 UTC <fryguybob> Only the cool ones.
2013-04-26 14:26:58 UTC <fryguybob> ACTION notes that was not a vailed reference to binning.
2013-04-26 15:22:42 UTC <ClaudiusMaximus> http://mathr.co.uk/blog/2013-04-26_fish_variations.html
2013-04-26 15:25:08 UTC <fryguybob> ClaudiusMaximus: I like it!
2013-04-26 15:26:54 UTC <ClaudiusMaximus> a few of the tilings have gaps near the boundary, but it's good enough for now :)
2013-04-26 15:27:45 UTC <ClaudiusMaximus> luite: has half-plane there too
2013-04-26 15:31:14 UTC <luite> ClaudiusMaximus: oh very cool, i wanted to ask you about the construction yesterday
2013-04-26 18:18:16 UTC <fryguybob> ACTION failed to remember that if I'm not changing the example code diagrams-haddock doesn't rebuild.
2013-04-26 18:35:45 UTC <byorgey> fryguybob: are you using the latest diagrams-haddock and diagrams-builder?
2013-04-26 18:36:19 UTC <byorgey> fryguybob: I made some improvements semi-recently to the way rebuilding works.  If you have an example where you wanted it to rebuild but it didn't I'd be very interested to hear aboutit.
2013-04-26 18:37:23 UTC <byorgey> ClaudiusMaximus: that's super cool
2013-04-26 18:38:02 UTC <byorgey> ClaudiusMaximus: now have it take an actual image of a fish and map it onto each of those tilings
2013-04-26 18:41:17 UTC <ClaudiusMaximus> byorgey: like this version i did in opengl? http://mathr.co.uk/misc/2013-04-20_hyperbolic_fish_6_colours.jpg
2013-04-26 18:41:18 UTC <fryguybob> byorgey: I had a diagram in the file  src/.../Offset.hs  and wrote the haddocks, ran diagrams-haddock then started making changes to a dependent function in the original source (not in a comment)
2013-04-26 18:41:33 UTC <byorgey> ClaudiusMaximus: yes! =D
2013-04-26 18:42:01 UTC <ClaudiusMaximus> bit glitchy because the hexagon isn't distorted properly
2013-04-26 18:42:47 UTC <byorgey> fryguybob: ah, and the diagrams code had "import ...Offset" at the top?
2013-04-26 18:42:51 UTC <ClaudiusMaximus> this version undistorts more properly but the source texture is bad... http://mathr.co.uk/misc/2013-04-20_hyperbolic_fish_recursive.jpg
2013-04-26 18:42:55 UTC <fryguybob> byorgey: Yeah
2013-04-26 18:45:49 UTC <byorgey> fryguybob: hmm, I recently changed it so it notices changes to "local" imports
2013-04-26 18:46:19 UTC <byorgey> but I guess in this case Offset.hs doesn't count as "local" because it's actually getting it from the installed diagrams-lib package, not from the local filesystem
2013-04-26 18:46:51 UTC <ClaudiusMaximus> i worked out how to colour {8,3} fishes with 12 colours http://mathr.co.uk/misc/2013-04-26_fish_colours_8-3_12.png - need to add colour permutation stuff to my haskell+diagrams tiling generator code (sorta exists in the opengl version, with a couple of hacks for the {6,4} in 6 colours using 3x3 matrices)
2013-04-26 18:47:36 UTC <byorgey> ClaudiusMaximus: neat
2013-04-26 18:48:34 UTC <ClaudiusMaximus> not sure if there is a formula for "number of colours needed to symmetrically colour a tiling with distinct colours at each edge and (optionally) vertex" - apparently {4,5} needs a really large number...
2013-04-26 18:49:56 UTC <byorgey> there must be
2013-04-26 18:50:01 UTC <byorgey> but I have no idea what it is =)
2013-04-26 18:53:03 UTC <fryguybob> Oops, for got to actually commit the changes.
2013-04-26 18:56:20 UTC <byorgey> yay!
2013-04-26 18:57:32 UTC <travis-ci> [travis-ci] 13diagrams-lib/06offset 14f0ec6b4 http://travis-ci.org/diagrams/diagrams-lib/builds/6667822 The build has errored.
2013-04-26 18:57:36 UTC <fryguybob> :(
2013-04-26 18:58:37 UTC <fryguybob> byorgey: This doesn't have the stuff for full paths yet, but that will be next.  This can be pushed independantly (as long as it is working...)
2013-04-26 18:59:13 UTC <ClaudiusMaximus> byorgey: maybe i should re-read Rigby,Compound Tilings and Perfect Colourings
2013-04-26 18:59:25 UTC <byorgey> it looks like a problem with the build system, it's trying to install diagrams-core from Hackage and then complaining it will break the git HEAD version it just built
2013-04-26 18:59:44 UTC <fryguybob> Yeah, why is it doing that?
2013-04-26 19:00:28 UTC <fryguybob> Oh, I guess I never have that problem because I do  cabal install diagrams-core/ diagrams-lib/
2013-04-26 19:00:29 UTC <byorgey> hmm, maybe it's because of the new version of NumInstances
2013-04-26 19:00:37 UTC <byorgey> fryguybob: right
2013-04-26 19:01:30 UTC <byorgey> aha, it's because diagrams-core depends on NumInstances only indirectly so it was happy to build it with 1.3
2013-04-26 19:01:36 UTC <byorgey> but -lib has an explicit < 1.3  upper bound
2013-04-26 19:01:45 UTC <byorgey> so we should just bump the upper bound in diagrams-lib.cabal
2013-04-26 19:02:14 UTC <byorgey> I looked at the changes in NI-1.3, it shouldn't affect us
2013-04-26 19:02:19 UTC <fryguybob> byorgey: Ok, I can do that.
2013-04-26 19:02:27 UTC <byorgey> thanks
2013-04-26 19:05:42 UTC <byorgey> this build looks much more promising so far =)
2013-04-26 19:06:53 UTC <travis-ci> [travis-ci] 13diagrams-lib/06offset 146614cbe http://travis-ci.org/diagrams/diagrams-lib/builds/6668043 The build passed.
2013-04-26 19:07:01 UTC <fryguybob> woohoo
2013-04-26 19:07:07 UTC <byorgey> \o/
2013-04-26 19:07:13 UTC <fryguybob> Haddocks are here: http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-04-26 19:07:24 UTC <byorgey> ah, cool, thanks
2013-04-26 19:12:06 UTC <byorgey> fryguybob: I don't understand the code but it looks really nice =)
2013-04-26 19:13:04 UTC <byorgey> fryguybob: can you also commit cubicOffsetExample.svg ?
2013-04-26 19:13:29 UTC <fryguybob> yeah
2013-04-26 19:14:18 UTC <fryguybob> byorgey: Should I include the images for the curvature page too?
2013-04-26 19:14:28 UTC <byorgey> fryguybob: oh, sure
2013-04-26 19:14:41 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Curvature.html
2013-04-26 19:14:52 UTC <byorgey> right
2013-04-26 19:19:03 UTC <77CAA0WS9> [travis-ci] 13diagrams-lib/06offset 14749a247 http://travis-ci.org/diagrams/diagrams-lib/builds/6668385 The build passed.
2013-04-26 19:45:08 UTC <ClaudiusMaximus> fryguybob: nice!
2013-04-26 19:46:15 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c8df658 http://travis-ci.org/diagrams/diagrams-lib/builds/6668834 The build passed.
2013-04-26 19:46:39 UTC <byorgey> exciting stuff.
2013-04-26 20:31:03 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14372019c http://travis-ci.org/diagrams/diagrams-doc/builds/6669596 The build has errored.
2013-04-26 20:32:10 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1443d14b0 http://travis-ci.org/diagrams/diagrams-contrib/builds/6670012 The build passed.
2013-04-26 20:40:08 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 148781caa http://travis-ci.org/diagrams/diagrams-contrib/builds/6670262 The build has errored.
2013-04-26 20:53:38 UTC <byorgey> what's a good name for the function of type  Double -> P2 -> P2 -> PathLike  which creates an arc of a given radius between two points?
2013-04-26 20:54:41 UTC <byorgey> arcAt?  arcFromTo?  arcConnect?  ...?
2013-04-26 20:56:21 UTC <ClaudiusMaximus> arcThrough?
2013-04-26 20:56:37 UTC <ClaudiusMaximus> arcBetween?
2013-04-26 20:57:03 UTC <ClaudiusMaximus> dunno, naming is hard
2013-04-26 21:10:56 UTC <byorgey> I like arcBetween
2013-04-26 21:45:11 UTC <byorgey> hahaha, whoops
2013-04-26 21:45:20 UTC <byorgey> Path {pathTrails = [(P (NaN & NaN),Trail {trailSegments = [Cubic (NaN & NaN) (NaN & NaN) (NaN & NaN),Cubic (NaN & NaN) (NaN & NaN) (NaN & NaN) ...
2013-04-26 21:45:41 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 143461f99 http://travis-ci.org/diagrams/diagrams-lib/builds/6671552 The build passed.
2013-04-26 21:45:47 UTC <luite> :)
2013-04-26 21:45:52 UTC <luite> do you  have some arrow samples?
2013-04-26 21:45:58 UTC <byorgey> and yes, that is an infinite list of NaN's
2013-04-26 21:46:07 UTC <byorgey> ate 3/4 of my memory =(
2013-04-26 21:46:12 UTC <byorgey> luite: arrow samples?
2013-04-26 21:46:31 UTC <luite> yeah the arrows branch? isn't that for arrowhead support?
2013-04-26 21:46:39 UTC <byorgey> oh, yes
2013-04-26 21:46:55 UTC <byorgey> but I'm only just starting
2013-04-26 21:47:07 UTC <byorgey> it doesn't actually, you know, draw any arrows yet =)
2013-04-26 21:48:06 UTC <luite> oh :)
2013-04-26 21:49:52 UTC <byorgey> soon, soon... =)
2013-04-26 21:50:14 UTC <byorgey> ACTION -> home
2013-04-27 07:00:33 UTC <notdan> https://groups.google.com/forum/#!topic/diagrams-discuss/Zq1hnbOGOBY do you guys think it's a bad SoC idea?
2013-04-27 11:48:10 UTC <byorgey> notdan: no, it is a good idea
2013-04-27 11:48:15 UTC <byorgey> notdan: I will reply to your email soon
2013-04-27 14:56:55 UTC <notdan> Thanks
2013-04-27 15:38:29 UTC <byorgey> notdan: I'd be happy to discuss it more in here as well
2013-04-27 15:38:52 UTC <byorgey> notdan: also I would be willing to mentor the project if no one else is, though someone who knows more about web stuff would be better
2013-04-27 15:55:42 UTC <byorgey> have I shown this off before? http://www.cis.upenn.edu/~byorgey/hosted/Bits.pdf
2013-04-27 15:57:45 UTC <fryguybob> I have not seen that before.
2013-04-27 15:58:30 UTC <fryguybob> ACTION hasn't figured out the colors yet.
2013-04-27 15:58:45 UTC <fryguybob> Oh
2013-04-27 15:59:03 UTC <byorgey> I knew you would figure them out soon =)
2013-04-27 15:59:06 UTC <fryguybob> Not as complicated as I thought.
2013-04-27 16:39:51 UTC <luite> hehe cool
2013-04-27 16:40:06 UTC <luite> the name was a bit of a giveaway though ;p
2013-04-27 17:13:36 UTC <byorgey> luite: ah true =)
2013-04-27 17:14:14 UTC <byorgey> ACTION resolves from now on to use names like  Diagram23_b_new.pdf
2013-04-27 18:07:49 UTC <luite> fryguybob: if you're interested in the result of the dataflow stuff that we discussed: https://github.com/ghcjs/ghcjs/blob/gen2-64-alth/src/Gen2/Optimizer.hs and https://github.com/ghcjs/ghcjs/blob/gen2-64-alth/src/Gen2/Dataflow.hs and things that still need to be done: https://github.com/ghcjs/ghcjs/issues/68
2013-04-27 18:22:24 UTC <fryguybob> luite: Glad it worked out mostly :D
2013-04-27 18:23:00 UTC <luite> fryguybob: you can see that the foldForward and foldBackward functions are quite horrible though...
2013-04-27 18:26:29 UTC <luite> fortunately they don't need to be touched for most of the improvements listed in the ticket, only for the infinite loops (adding another node type)
2013-04-27 18:26:33 UTC <fryguybob> luite: Yeah.  At some point I might try to think about how to mitgate the ugly.
2013-04-27 18:35:02 UTC <luite> the optimizer makes the code ~50% smaller atm
2013-04-27 18:35:42 UTC <luite> can probable shave off a a few dozen percent with the improvements in the tocket
2013-04-27 18:35:45 UTC <luite> ticket
2013-04-27 18:55:58 UTC <fryguybob> Nice
2013-04-27 19:04:17 UTC <luite> next step is incremental loading
2013-04-27 19:15:39 UTC <luite> notdan: are you good at javascript?
2013-04-27 19:17:01 UTC <notdan> Well, can't say that I am very good at it
2013-04-27 19:17:08 UTC <notdan> I used it before
2013-04-27 19:18:31 UTC <notdan> but mostly I was writing JS using some fancy libraries (Dojo, jQuery, etc) or I was using only a small subset as a backend for compiling
2013-04-27 19:18:47 UTC <notdan> I know altho that writing JS can be a huge pain
2013-04-27 19:18:58 UTC <luite> oh what have you been compiling to js?
2013-04-27 19:19:20 UTC <notdan> eh some time ago I was trying to write a Scheme compiler
2013-04-27 19:19:46 UTC <notdan> but I ended up with plain (un-hygeine) macros and not TCO
2013-04-27 19:19:56 UTC <notdan> and no continuations
2013-04-27 19:20:06 UTC <luite> ah
2013-04-27 19:20:53 UTC <luite> a problem with diagrams in a web based thing is that its startup time is rather long
2013-04-27 19:21:15 UTC <luite> if you'd use tryhaskell's code as a basis, it'd get killed before producing the result
2013-04-27 19:21:19 UTC <byorgey> another reason to focus on a paste site and not an interactive REPL =)
2013-04-27 19:21:43 UTC <luite> yeah, pastes that get rendered after pressing a button should have less of a problem
2013-04-27 19:23:24 UTC <luite> with a bit of javascript you could run ghcjs and compile Double -> Diagram, Double -> Double -> Diagram things to some client side code that draws, with some sliders for interactivity
2013-04-27 19:23:32 UTC <luite> without having to restart diagrams on the server
2013-04-27 19:23:34 UTC <notdan> Yep. That is true.
2013-04-27 19:23:46 UTC <byorgey> oooh, thta would be sweet
2013-04-27 19:23:49 UTC <byorgey> *that
2013-04-27 19:24:20 UTC <byorgey> and how about Bool -> Diagram with a ticky-box
2013-04-27 19:24:30 UTC <byorgey> etc.
2013-04-27 19:24:42 UTC <luite> oh i think that can all be made to work without a big problem
2013-04-27 19:24:58 UTC <fryguybob> Diagram -> Diagram
2013-04-27 19:24:58 UTC <notdan> Sum type -> ratio box or a dropdown list?
2013-04-27 19:25:16 UTC <byorgey> sure =)
2013-04-27 19:25:19 UTC <luite> notdan: i have toggle buttons in an experiment for that
2013-04-27 19:25:34 UTC <notdan> fryguybob: you can select a previously made diagrams for that :D
2013-04-27 19:25:37 UTC <byorgey> fryguybob: hmm, and then you can drag-and-drop some other diagram into the little input box, right? =D
2013-04-27 19:25:59 UTC <fryguybob> Or draw paths in a canvas :P
2013-04-27 19:26:05 UTC <luite> notdan: http://hdiff.luite.com/wolfgang/interactive7.png
2013-04-27 19:27:02 UTC <notdan> luite: ha, that looks cool
2013-04-27 19:27:27 UTC <notdan> I also think that making something like this might help the guys from FPComplete, who make School of Haskell
2013-04-27 19:27:27 UTC <byorgey> yeah, a diagrams paste site by itself seems like not enough for a summer... but a diagrams paste site supporting interactive parameterized diagrams via ghcjs sounds like a great project
2013-04-27 19:27:33 UTC <notdan> Dynamic snippets with diagrams, etc
2013-04-27 19:27:46 UTC <byorgey> notdan: yes indeed!  That is a good way to sell it
2013-04-27 19:28:02 UTC <fryguybob> notdan: Source code is here: https://github.com/luite/wolfgang
2013-04-27 19:28:04 UTC <byorgey> I know they have looked a tiny bit into supporting diagrams on SoH but I don't think they ever got anywhere
2013-04-27 19:28:27 UTC <luite> notdan: yeah wolfgang adds wiki+repl, but the paste site is a nice subgoal
2013-04-27 19:28:42 UTC <luite> repl means much stricter requirements on startup and evaluation time
2013-04-27 19:28:49 UTC <notdan> fryguybob, luite: thanks; I am not actually familiar with wolfgang
2013-04-27 19:28:59 UTC <luite> notdan: yes that's my fault for not publishing it
2013-04-27 19:29:02 UTC <notdan> fryguybob: I think it's private
2013-04-27 19:30:03 UTC <fryguybob> Soon we will have arrows and luite will have no escuse ;P
2013-04-27 19:30:08 UTC <luite> but perhaps a plan of action could be: first extend hpaste with something that compiles/renders diagram to an .svg file on push of a button. make sure that ghc is called safely and resource limits are observed
2013-04-27 19:30:37 UTC <luite> then the same with ghcjs, add simple interaction with functions of diagrams, download the result as javascript and render it with buttons/sliders, jquery-ui
2013-04-27 19:31:33 UTC <luite> and if there's time remaining, integrate stuff into the wolfgang wiki/repl, try to finally launch it :p
2013-04-27 19:31:44 UTC <luite> otherwise SoH or something
2013-04-27 19:33:45 UTC <notdan> Also I thought some caching might be useful. For example, if we comebine two diagrams to create the "main" diagram and then we add another diagram to the combination - we don't have to recompile the first two diagrams
2013-04-27 19:34:07 UTC <notdan> Altho I am not sure how to implement this decently.
2013-04-27 19:34:17 UTC <byorgey> hmm... that sounds really difficult to me.
2013-04-27 19:34:29 UTC <byorgey> caching the output images is easy but that does not help with combining diagrams.
2013-04-27 19:34:42 UTC <luite> notdan: incremental code loading for ghcjs is in the works, but that's probably something for later
2013-04-27 19:34:49 UTC <luite> usually single modules aren't that big though
2013-04-27 19:34:57 UTC <luite> reloading isn't a problem if the rts and all depencies are still loaded
2013-04-27 19:35:05 UTC <byorgey> caching the actual diagram data structures themselves is virtually impossible because they contain lots of functions and sharing and such.
2013-04-27 19:35:21 UTC <notdan> Yeah I guess that's not going to be such a big problem luite 
2013-04-27 19:35:50 UTC <luite> still, generating svg or png server side is enough to get started, making it secure is important
2013-04-27 19:36:16 UTC <luite> (that's where ghclive failed, and no one uses it now)
2013-04-27 19:36:40 UTC <byorgey> right, good point, the security / resource limit stuff is important, and will take some effort
2013-04-27 19:38:12 UTC <luite> i have a rather advanced security thing for wolfgang, but it is too intrusive for this to be easily installable (selinux, root access required etc), SoH uses something similar... would be nice if you can do a lighter weight alternative that allows the pastebin to be installed by a regular user
2013-04-27 19:38:48 UTC <luite> so we get at least a usable pastebin site out if all the advanced things fail
2013-04-27 19:39:11 UTC <notdan> Hm. The resource limit I think is actually not that complicated. At least I thought mueval package was successful in that matter
2013-04-27 19:39:26 UTC <byorgey> yes, I think so
2013-04-27 19:39:39 UTC <notdan> The safety issue - not so easy
2013-04-27 19:40:36 UTC <luite> notdan: tryhaskell does use a patched mueval because its startup time is rather long
2013-04-27 19:41:05 UTC <luite> and diagrams makes that worse
2013-04-27 19:41:34 UTC <luite> if you just output a string, svg, safety would be the same as regular mueval
2013-04-27 19:41:41 UTC <luite> a png would be a bit trickier
2013-04-27 19:41:51 UTC <luite> perhaps a ByteString
2013-04-27 19:42:20 UTC <luite> you can try to base it on the patched mueval, that keeps running
2013-04-27 19:42:36 UTC <luite> that way you can quickly get a result if the interpreter still works
2013-04-27 19:42:52 UTC <luite> if it gets killed due to resource limits, or time limits, you need to restart, which takes a long time
2013-04-27 19:42:52 UTC <notdan> luite: but then it would be nice to make it work concurrently
2013-04-27 19:43:02 UTC <notdan> Also, why do you say that it's trickier with ByteString?
2013-04-27 19:43:10 UTC <luite> trickier with png
2013-04-27 19:43:19 UTC <notdan> ah
2013-04-27 19:43:21 UTC <notdan> Right
2013-04-27 19:43:22 UTC <luite> since usually you write to a file, IO, which mueval doesn't allow
2013-04-27 19:43:54 UTC <luite> yeah but you don't want to spawn 100 different muevals if some users hit refresh a few times
2013-04-27 19:44:05 UTC <luite> so you want some queueing, and perhaps 2 or 3 maximum concurrently
2013-04-27 19:44:16 UTC <notdan> When I was hacking that really simple graphviz renderer I used to just pack the resulting image into a base64 data URI scheme
2013-04-27 19:44:57 UTC <fryguybob> Another idea that might be interesting is some (limited) support for feedback from the resulting image back into the diagram code.
2013-04-27 19:45:17 UTC <notdan> luite: ah, I thought the pasted code would be compiled only once, but if we want to have all the slick sliders I guess that's not an option
2013-04-27 19:45:30 UTC <luite> hm, that's rather inefficient, you could write the result back to a .png in a tmp dir, use [sha1 of source code].png as the name
2013-04-27 19:46:05 UTC <luite> notdan: i think mueval/diagrams is a bit too slow for interaction through the server
2013-04-27 19:46:16 UTC <luite> paste + compile/show button will be acceptable
2013-04-27 19:46:23 UTC <luite> though it can take a few seconds
2013-04-27 19:47:13 UTC <luite> notdan: for the slider, i had in mind that you compile it to javascript once, and set up some user interface to get the result with the parameters from the sliders/buttons
2013-04-27 19:47:59 UTC <notdan> oh, right
2013-04-27 19:48:22 UTC <luite> fryguybob: something like the gloss game function would be doable
2013-04-27 19:48:44 UTC <luite> with compiling to js. with the through-the-server loop perhaps something with x,y click coordinates
2013-04-27 19:52:31 UTC <luite> notdan: try entering: circle 100 100 100
2013-04-27 19:52:33 UTC <luite> in tryhaskell
2013-04-27 19:53:30 UTC <luite> unfortunately that's the only thing it supports ;p
2013-04-27 19:53:58 UTC <notdan> ah :)
2013-04-27 19:54:02 UTC <notdan> It uses RaphaelJS
2013-04-27 19:54:05 UTC <luite> yeah
2013-04-27 19:54:20 UTC <luite> i think it would be ok to use svg instead, for a pastebin
2013-04-27 19:55:27 UTC <luite> since most browsers can use it, and you can download the result to include in a document
2013-04-27 19:55:46 UTC <luite> and vector graphics look much better in papers than raster :)
2013-04-27 19:59:28 UTC <luite> and someone should make a ghc errors interpreter for the pastebin site with hints (clippy says: looks like you have no HasStyle instance, perhaps you need to stroke the path first)
2013-04-27 20:00:47 UTC <luite> notdan: syntax highlighting can be done with codemirror, i'd steer clear of completion for now
2013-04-27 20:06:26 UTC <luite> i wonder if this is useful enough for the haskell community to get accepted
2013-04-27 20:07:27 UTC <luite> it's not really infrastructure
2013-04-27 20:08:16 UTC <notdan> I've just sent an updated list of ideas to the mailing list in oreder not to loose/forget anything
2013-04-27 20:09:58 UTC <luite> ah tnx
2013-04-27 20:13:36 UTC <notdan> Yeah it seems that the previously accepted projects had more to do with infrastructure/packaging/internals
2013-04-27 20:13:50 UTC <notdan> Altho there was shapr's project..
2013-04-27 20:14:05 UTC <luite> ghclive was accepted yet, but it kinda failed, so....
2013-04-27 20:14:10 UTC <luite> yes
2013-04-27 20:14:34 UTC <notdan> A lot of Darcs projects got accepted
2013-04-27 20:16:32 UTC <luite> notdan: something that might help is making the diagrams+slider js files available from other sides
2013-04-27 20:16:35 UTC <luite> sites
2013-04-27 20:16:47 UTC <luite> some plain html that just contains the diagrams and slider, that others can use as an iframe in their blog
2013-04-27 20:17:05 UTC <luite> it's just static files, so cheap to serve from a hetzner server or ec2
2013-04-27 20:18:08 UTC <luite> or they can download the js+html to their own server
2013-04-27 20:18:45 UTC <luite> add a link back to the paste in the bottomright corner so viewers can experiment with the code as well
2013-04-27 20:19:21 UTC <luite> perhaps some gui: use this paste, that generates a html snippet to include it in another page
2013-04-27 20:20:17 UTC <luite> notdan: what operating system do you work with usually?
2013-04-27 20:22:22 UTC <notdan> luite: I was thinking about that too, maybe even compress all the js/css needed for the paste to work, so it can be installed completely independently on some 3rd party site
2013-04-27 20:22:28 UTC <notdan> luite: I usually use Mac OS X and Ubuntu
2013-04-27 20:22:59 UTC <luite> k that should work, especially ubuntu
2013-04-27 20:26:31 UTC <notdan> Would you like to be my mentor for this project, if it gets accepted, luite? :)
2013-04-27 20:28:55 UTC <luite> i can't promise that yet, since i'm not sure yet how much time i have this summer. hopefully i'll have as much time to continue working on ghcjs as the past few months.
2013-04-27 20:31:02 UTC <luite> i think i'll know before the end of next week, before the proposals have to be in i think
2013-04-27 20:33:11 UTC <notdan> Thanks for the info
2013-04-27 20:33:20 UTC <luite> are multiple mentors allowed?
2013-04-27 20:33:33 UTC <luite> or is it always one official mentor?
2013-04-27 20:33:46 UTC <notdan> Hm, I am not sure actually
2013-04-27 20:37:10 UTC <notdan> I think it's up to the mentoring organization
2013-04-27 20:37:28 UTC <notdan> http://www.google-melange.com/gsoc/document/show/gsoc_program/google/gsoc2012/faqs#mentor_role
2013-04-27 20:38:37 UTC <luite> anyway if i don't have much time, i'd still be happy to help with server side security and resource limit things, but the client side sliders etc would require considerable ghcjs effort
2013-04-27 20:41:04 UTC <notdan> Right
2013-04-27 20:41:17 UTC <notdan> I think I'll start writing a proposal tomorrow then
2013-04-27 20:55:51 UTC <notdan> Ok, gonna head to bed. Thanks for all the advice
2013-04-28 11:09:50 UTC <notdan> https://gist.github.com/co-dan/437e9694563c0c13dd8e my proposal draft (also sent to the mailing list)
2013-04-28 11:26:13 UTC <luite> notdan: when is the pencils down date?
2013-04-28 11:26:39 UTC <luite> can you add links to the projects you've already done?
2013-04-28 11:26:47 UTC <luite> some source code, perhaps also the graphviz
2013-04-28 11:28:29 UTC <luite> i have a feeling that the first goal, 2 months of work, could be a bit more ambitious
2013-04-28 11:45:18 UTC <notdan> Ah, the problem is I haven't done a lot of projects :( The biggest amount of Haskell code I've written is my current model checker project which is ~1200 LOC
2013-04-28 11:46:22 UTC <notdan> luite: what do you think should be set as the first goal? The GHCJS part?
2013-04-28 11:47:27 UTC <notdan> graphviz-renderer is like 20 loc, it's more of a proof of concept
2013-04-28 11:51:09 UTC <luite> notdan: nah static diagrams should really be first
2013-04-28 11:51:15 UTC <luite> and pastebin
2013-04-28 11:51:47 UTC <luite> but i don't think that should take two months, at 40h per week
2013-04-28 11:52:04 UTC <notdan> Yeah, I rewrote that piece as: During the first stage (up to mid-term evaluation, July 29th) I plan on building the initial prototype, figure out most of the safety/resource management issues, make use of GHCJS to add an ability to create runnable snippets. Publish the first results, set up a prototype online for people to play with. Start working on widget support.
2013-04-28 12:04:16 UTC <luite> hmm, yeah that might be better
2013-04-28 12:04:36 UTC <luite> does mueval actually support stackage without much trouble?
2013-04-28 12:08:47 UTC <luite> + safely?
2013-04-28 12:09:12 UTC <luite> SoH uses some jail kind of thing to run their code
2013-04-28 12:10:05 UTC <notdan> I am not sure actually; But I think hint does support it and mueval is built on top of hint
2013-04-28 12:11:28 UTC <luite> right, but startup overhead is kind of a problem. if someone evals fix id, then it needs to be killed. startup can take multiple seconds if you load a lot of packages
2013-04-28 12:12:15 UTC <notdan> Yeah, of course. The idea is that you start a process once - and then you only communicate with it.
2013-04-28 12:12:36 UTC <notdan> For killing the processes - I think it's reasonable just to put hard time limits
2013-04-28 12:12:41 UTC <notdan> on all the evaluating code.
2013-04-28 12:13:28 UTC <luite> right, but the problem is that when it takes long, people are going to hit the 'render diagram
2013-04-28 12:13:33 UTC <luite> ' button again
2013-04-28 12:13:59 UTC <notdan> Hm
2013-04-28 12:15:10 UTC <notdan> Maybe we could use sessions and disallow simulataneous renderings?
2013-04-28 12:15:21 UTC <notdan> That's on server side. On client side just disable the button once it's pressed
2013-04-28 12:17:10 UTC <luite> it should at least be enabled again after a few seconds
2013-04-28 12:17:21 UTC <luite> some connections can actually fail :)
2013-04-28 12:18:09 UTC <notdan> Right. It should be enabled once the rendering is finished or when the time limit hits, I think
2013-04-28 12:18:17 UTC <luite> i think having 2 or 3 concurrent mueval worker processes, but only allowing once simulaneous job per client IP address would e usable
2013-04-28 12:18:45 UTC <luite> but only if the startup overhead of mueval is not too terrible :)
2013-04-28 12:20:51 UTC <notdan> Right, so we'll have some sort of workers pool, which would recieve commands from the webserver and distribute the workload amongst the eval processes
2013-04-28 12:21:23 UTC <notdan> and if the pool recieves two commands from the same IP it returns an error, or maybe puts it in a queue
2013-04-28 12:29:16 UTC <luite> yeah a bounded queue or something probably
2013-04-28 12:32:21 UTC <notdan> luite: may I ask you, do you think that there is a high chance that the proposal is going to be accepted?
2013-04-28 12:33:05 UTC <notdan> It's just I do want to get a job this summer, so if the chances on working on GSoC are low I should start looking for alternatives
2013-04-28 12:33:46 UTC <notdan> If it won't get accepted I'd probably still end up doing it, but at much slower pace
2013-04-28 12:34:49 UTC <luite> really depends on the quality of the other proposals
2013-04-28 12:35:10 UTC <luite> there are some good ideas, like haddock markdown support, parallel ghc builds
2013-04-28 12:35:32 UTC <notdan> Yeah, I think they'll def take parallel cabal builds
2013-04-28 12:35:53 UTC <notdan> Not sure about Markdown support - it's a good idea, but it generated a little bit of contraversy
2013-04-28 12:36:03 UTC <notdan> controversy*
2013-04-28 12:36:57 UTC <luite> yeah
2013-04-28 12:37:14 UTC <luite> it's still much more core/infrastructure
2013-04-28 12:38:21 UTC <notdan> True
2013-04-28 12:38:21 UTC <luite> hm, are all proposals public, can you see 4?
2013-04-28 12:39:15 UTC <notdan> Hm, there is a list on trac, but I am not sure it's up-to-date/relevant
2013-04-28 12:39:31 UTC <luite> oh i mean on melange
2013-04-28 12:40:15 UTC <notdan> Can you send me a link? I can't seem to find it
2013-04-28 12:40:52 UTC <luite> i only have a link that's connected to my own account
2013-04-28 12:41:12 UTC <notdan> Well I guess that's because you are registered as a mentor
2013-04-28 12:41:38 UTC <luite> yeah
2013-04-28 13:58:21 UTC <fryguybob> Progress: http://www.cs.rochester.edu/u/ryates/temp/round.pdf
2013-04-28 14:12:27 UTC <luite> :)
2013-04-28 14:25:22 UTC <mgsloan> fryguybob: No way!  You're doing strokes?
2013-04-28 14:25:31 UTC <fryguybob> :D
2013-04-28 14:25:59 UTC <fryguybob> mgsloan: Just offsets at this point.
2013-04-28 14:28:26 UTC <mgsloan> That looks like it's doing a little more than a full path offset, but yeah, doing strokes will is surprisingly hard!
2013-04-28 14:30:04 UTC <fryguybob> If you fill what I have now it should fill all the points <= r distance from the original path.
2013-04-28 14:30:44 UTC <fryguybob> (with the fill mode that isn't even-odd)
2013-04-28 16:52:21 UTC <byorgey> luite: the link to see proposals is hard to find.  If you go to "my dashboard" there is a link for "Proposals submitted to my organizations"
2013-04-28 16:54:20 UTC <byorgey> notdan: as for whether the project will be accepted, I don't know.  There is another good diagrams-related proposal as well (from jbracker, to port Chart to use a diagrams backend), and I think maybe only one diagrams project will get accepted
2013-04-28 16:55:00 UTC <byorgey> Given the interest this year, in future years maybe we will try signing up as a separate organization
2013-04-28 16:55:09 UTC <luite> let's call notdan's projet a ghcjs project then ;)
2013-04-28 16:55:32 UTC <byorgey> hehe, fine by me =)
2013-04-28 16:55:41 UTC <byorgey> and I don't know for sure that both will not get chosen
2013-04-28 16:56:05 UTC <byorgey> if they are both high quality and sufficiently different perhaps they will.  I don't really know anything about how the selection process works.
2013-04-28 16:56:34 UTC <luite> byorgey: but that's because i'm registerd as mentor
2013-04-28 16:56:56 UTC <byorgey> luite: what is?
2013-04-28 16:57:13 UTC <luite> "Proposals submitted to my organizations"
2013-04-28 16:57:27 UTC <luite> only works if you have a connection. is there no public list?
2013-04-28 16:57:39 UTC <byorgey> ohh, I get it now, I missed the part about you wondering if there was a *public* list
2013-04-28 16:57:46 UTC <byorgey> there is no public list as far as I know
2013-04-28 16:58:43 UTC <jbracker> I think you can mark your proposal as public, but you don't have to
2013-04-28 18:52:37 UTC <notdan> Hi
2013-04-28 18:53:19 UTC <notdan> luite: I guess I'd have to rewrite the proposal a little bit them
2013-04-28 18:53:37 UTC <notdan> To emphasise that it's a ghcjs project :)
2013-04-28 18:53:48 UTC <luite> hehe nah everything is in the haskell.org organization
2013-04-28 18:53:55 UTC <luite> there are no official suborganizations
2013-04-28 18:54:11 UTC <notdan> True, true
2013-04-28 18:59:41 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Butterfly.pdf  -- point-to-point arcs
2013-04-28 19:02:40 UTC <fryguybob> byorgey: I see your butterfly and raise you one rainbow: http://www.cs.rochester.edu/u/ryates/temp/roundF.pdf
2013-04-28 19:02:58 UTC <byorgey> oh, it is ON
2013-04-28 19:03:09 UTC <notdan> haha
2013-04-28 19:03:36 UTC <fryguybob> ACTION waits for for a unicorn involving arrows.
2013-04-28 19:04:11 UTC <byorgey> nice rainbow though =)
2013-04-28 19:04:59 UTC <fryguybob> Now with less strokes
2013-04-28 19:09:40 UTC <fryguybob> ACTION goes outside to play frisbee.
2013-04-28 19:09:43 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/RainbowButterfly.pdf
2013-04-28 19:11:35 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 142708be8 http://travis-ci.org/diagrams/diagrams-lib/builds/6707926 The build passed.
2013-04-28 20:36:17 UTC <fryguybob> byorgey: hehe
2013-04-28 20:38:32 UTC <tgeeky> fryguybob is going to one-one-up-up you and make a rainbow catepillar that turns into a rainbow butterfly
2013-04-29 00:37:25 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 142cad201 http://travis-ci.org/diagrams/diagrams-lib/builds/6714080 The build passed.
2013-04-29 00:53:28 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14c679eb2 http://travis-ci.org/diagrams/diagrams-lib/builds/6714326 The build passed.
2013-04-29 02:03:45 UTC <luite> oh hm, when does HCAR need to be in?
2013-04-29 02:04:53 UTC <byorgey> May 1, i.e. Wednesday
2013-04-29 02:05:07 UTC <byorgey> you should send in something about GHCJS
2013-04-29 02:06:39 UTC <luite> yeah i was thinking of doing that. doesn't the project need to have released packages?
2013-04-29 02:08:06 UTC <luite> ghcjs won't be easily installable until ghc 7.8 is released
2013-04-29 02:08:28 UTC <byorgey> nope
2013-04-29 02:08:57 UTC <byorgey> there are no criteria like "has released packages"
2013-04-29 02:09:13 UTC <byorgey> the idea is just to let other people know what sorts of stuff people are working on.
2013-04-29 02:10:01 UTC <luite> oh then i should list wolfgang too :p
2013-04-29 02:10:24 UTC <byorgey> ghcjs fits perfectly.  Just say "here's where we are. Here's where we're going.  It's not ready for widespread use but if you're interested in trying it out or contributing you can <send email> <visit URL> <etc>"
2013-04-29 02:10:32 UTC <byorgey> luite: sure, if you want =)
2013-04-29 02:20:34 UTC <tgeeky> luite: yeah, I suppose you haven't read HCAR before?
2013-04-29 02:24:32 UTC <luite> apparently not :)
2013-04-29 02:24:42 UTC <luite> or maybe not enough to find obscure projects
2013-04-29 02:24:44 UTC <tgeeky> byorgey: it occurs to me: With even a reasonable level of adoption, the techniques used in diagrams ++ diagrams-haddock will result a rather heavier kind of traffic hackage.haskell.org
2013-04-29 02:25:14 UTC <luite> yeah therefore diagrams is a core infrastructure project and deserves two gsoc slots
2013-04-29 02:25:51 UTC <tgeeky> byorgey: do they know this is coming? I realize that other people could have been putting images in their packages, but you have lowered the bar quite a bit, especially for packages which may have hundreds of pictures
2013-04-29 02:26:14 UTC <luite> tgeeky: the cash flow for haskell.org is still positive, an extra server would be doable i think
2013-04-29 02:28:20 UTC <tgeeky> ACTION doesn't actually have a sense of the file densities of haskell code versus svgs
2013-04-29 02:28:40 UTC <tgeeky> or pngs, or whatever you are throwing in there :o
2013-04-29 02:28:49 UTC <luite> hmm, svgs can get really big without  you noticing
2013-04-29 02:28:56 UTC <tgeeky> bwhaha
2013-04-29 02:29:14 UTC <tgeeky> I like how google results for diagrams-haddock are: a green circle (the top example in diagrams-haddock), and a diagram of a haddock
2013-04-29 02:29:20 UTC <tgeeky> https://www.google.com/search?client=ubuntu&channel=fs&q=diagrams-haddock&ie=utf-8&oe=utf-8
2013-04-29 02:29:34 UTC <luite> hehe
2013-04-29 02:29:42 UTC <tgeeky> byorgey: clearly you should change that example to exploit that image :)
2013-04-29 02:29:52 UTC <luite> ah i remember those gears
2013-04-29 02:32:47 UTC <fryguybob> My marmot picture turns up in there too.
2013-04-29 02:33:47 UTC <tgeeky> fryguybob: oh i see him now. cute.
2013-04-29 02:33:50 UTC <tgeeky> He is *your* marmot?
2013-04-29 02:33:59 UTC <tgeeky> or it's *your* picture, so to speak
2013-04-29 02:34:27 UTC <tgeeky> fryguybob: I say he. I don't know how to sex a marmot, and I doubt that would be possible from a marmot headshot.
2013-04-29 02:35:05 UTC <fryguybob> I don't remember which picture this was, but it is a my marmot picture in the sense that I took the photo.
2013-04-29 02:35:46 UTC <luite> hm those look different from the ones i always see in the alps
2013-04-29 02:35:54 UTC <fryguybob> In one case one wandered in front of us and I took a picture only to discover it was distracting us from a baby marmot, so I guess that was a female.
2013-04-29 02:36:08 UTC <tgeeky> fryguybob: now you're the one who is biased!
2013-04-29 02:36:11 UTC <tgeeky> ha ha!
2013-04-29 02:36:19 UTC <fryguybob> luite: It is a hoary marmot.
2013-04-29 02:36:50 UTC <tgeeky> those look like slightly fatter, much wiser and learned, squirrels
2013-04-29 02:37:11 UTC <tgeeky> like a Gandalf the Grey ... of squirrels
2013-04-29 02:39:25 UTC <luite> ah so they whistle too, like their european colleagues
2013-04-29 02:39:45 UTC <luite> which makes them easier to find :)
2013-04-29 02:40:15 UTC <tgeeky> I wonder if they would be amazed by my ability to whistle while both [in,ex]haling
2013-04-29 02:40:20 UTC <tgeeky> not really, I don't care
2013-04-29 02:40:38 UTC <luite> uh that's not hard is it?
2013-04-29 02:40:53 UTC <tgeeky> perhaps not, but I've found many people don't know how to do both
2013-04-29 02:41:17 UTC <tgeeky> although at the moment I can't explain how that comes up.
2013-04-29 02:42:32 UTC <tgeeky> this is pretty neat: http://www.youtube.com/watch?v=ywfZsYApj_M
2013-04-29 02:43:55 UTC <fryguybob> ACTION goes to bed.
2013-04-29 17:50:53 UTC <tgeeky> byorgey: !
2013-04-29 18:04:26 UTC <byorgey> tgeeky: !
2013-04-29 18:04:30 UTC <byorgey> ?
2013-04-29 18:05:29 UTC <tgeeky> byorgey: i asked a question last night about data usage of haskell.org and if you considered the increase that adoption of diagrams might cause in the hands of lunatics like me
2013-04-29 18:05:45 UTC <byorgey> yes, I saw that
2013-04-29 18:05:54 UTC <tgeeky> no comment?
2013-04-29 18:06:44 UTC <byorgey> what kind of comment are you looking for?
2013-04-29 18:07:02 UTC <byorgey> I mean you may well be right
2013-04-29 18:07:23 UTC <tgeeky> byorgey: do you have any intuition for how much larger the average [graphics] file is than your average [hs] file?
2013-04-29 18:10:45 UTC <tgeeky> no matter I suppose, we'll find out one way or another
2013-04-29 18:10:51 UTC <byorgey> tgeeky: one or two or three orders of magnitude I guess
2013-04-29 18:10:59 UTC <byorgey> depends on whether it's png or svg
2013-04-29 18:23:51 UTC <fryguybob> byorgey: When I get a chance I will work on getting the full path offsets in.  The code is pretty ugly due to transitioning between fixed and relative representations.  It would benefit from a non-empty list sort of thing too.
2013-04-29 18:24:26 UTC <byorgey> fryguybob: there are non-empty lists in the semigroups package
2013-04-29 18:24:39 UTC <byorgey> I use them in dual-tree
2013-04-29 18:24:52 UTC <fryguybob> byorgey: Oh great!  I'll look at that then.
2013-04-29 18:25:24 UTC <byorgey> fryguybob: yeah, transitioning between fixed and relative representations indeed can get ugly.
2013-04-29 18:25:43 UTC <byorgey> that's kind of the same issue I ran into implementing the metafont stuff.
2013-04-29 18:26:10 UTC <fryguybob> byorgey: There might be some sort of "withSegments..." function that could easy the pain some.
2013-04-29 18:26:26 UTC <byorgey> yes, probably
2013-04-29 18:27:16 UTC <fryguybob> I experiemented a little with a typeclass that gave access to the start and end of a path or segment or list of segments.
2013-04-29 18:27:56 UTC <byorgey> cool
2013-04-29 18:28:04 UTC <fryguybob> I don't know if it would be worth generalizing parametric things or if there are too many little exceptions to make that happen cleanly.
2013-04-29 18:28:19 UTC <byorgey> mgsloan already has some code generalizing parametric things
2013-04-29 18:28:27 UTC <byorgey> I still need to find time to sit down and study it carefully
2013-04-29 18:28:41 UTC <fryguybob> Ah, ok, I would like to look at that too.
2013-04-29 18:28:53 UTC <mgsloan> I think generalizing such stuff cleanly is quite possible
2013-04-29 18:29:00 UTC <mgsloan> I'm not sure if I hit the mark or not, though
2013-04-29 18:29:15 UTC <byorgey> https://github.com/diagrams/diagrams-lib/issues/53
2013-04-29 18:29:20 UTC <mgsloan> I left in quite a WIP state, unfortunately
2013-04-29 18:29:46 UTC <byorgey> actually it's becoming increasingly important now that we are trying to get arrow stuff in
2013-04-29 18:30:11 UTC <byorgey> because I really want to be able to say things like "shrink this arrow by 10%" and have it work whether the arrow is one or many segments
2013-04-29 18:30:50 UTC <mgsloan> Well, the module in that link is pretty decent, actually (if I may say so ;) )
2013-04-29 18:30:54 UTC <fryguybob> The part that I worry about is handling epsilon values cleanly.
2013-04-29 18:31:09 UTC <mgsloan> The stuff that's not so refined is https://github.com/mgsloan/curve/tree/master/Data/Curve
2013-04-29 18:31:10 UTC <byorgey> and I'd love to be able to add in some tools for animating things moving along paths
2013-04-29 18:31:25 UTC <byorgey> mgsloan: good to know =)
2013-04-29 18:31:32 UTC <byorgey> fryguybob: what do you mean?
2013-04-29 18:31:58 UTC <fryguybob> Something like arc length are really only computed up to some error bound.
2013-04-29 18:31:59 UTC <mgsloan> It'd definitely be awesome to move diagrams more into the "operations on continuous curves" space
2013-04-29 18:32:24 UTC <luite> mgsloan: +1 
2013-04-29 18:32:26 UTC <tgeeky> ACTION wonders how far away from conformal we are
2013-04-29 18:32:26 UTC <luite> :)
2013-04-29 18:32:55 UTC <mgsloan> yeah, any fancy operations where you're trying to get beziers out are going to be upto some error bound
2013-04-29 18:33:11 UTC <tgeeky> ACTION just caught up, except:
2013-04-29 18:33:59 UTC <byorgey> mgsloan: yes please! =)
2013-04-29 18:35:30 UTC <tgeeky> fryguybob: when you say "transitioning between fixed and relative representations", what are we talking about? 
2013-04-29 18:35:46 UTC <tgeeky> the same thing as (V p) or (Point (Vp)) ?
2013-04-29 18:35:59 UTC <fryguybob> Trail R2 -> [FixedSegment R2] and back.
2013-04-29 18:37:17 UTC <mgsloan> byorgey: We'll see!  I've got a looong backburner list
2013-04-29 18:37:38 UTC <mgsloan> maybe I can contract my somewhat haskell savvy lib2geom friends
2013-04-29 18:37:43 UTC <fryguybob> It is probably mostly a consequence of making convenient choices up front that had bad consequences.
2013-04-29 18:38:08 UTC <byorgey> mgsloan: I know =)  It's just that if we're moving in that direction it will have to come from you and fryguybob, since I don't know anything about it
2013-04-29 18:39:14 UTC <mgsloan> ACTION had forgotten how much work he'd put into Curve!
2013-04-29 18:39:38 UTC <mgsloan> Ohhh nvm, one of the modules was based on edwardk's intervals stuff
2013-04-29 18:45:59 UTC <fryguybob> Anyway, the current state of things is: https://gist.github.com/fryguybob/3969759
2013-04-29 18:46:35 UTC <fryguybob> I probably won't have a chance to do more until after the 8th.
2013-04-29 19:00:40 UTC <byorgey> fryguybob: cool, I'll take a look
2013-04-29 20:35:05 UTC <notdan> Hi
2013-04-29 20:35:28 UTC <byorgey> hi notdan 
2013-04-30 00:31:44 UTC <cmears> byorgey, I'm glad I'm not the only one getting monad transformers in the wrong order
2013-04-30 00:31:54 UTC <byorgey> hehe =)
2013-04-30 00:31:59 UTC <luite> :)
2013-04-30 00:32:01 UTC <cmears> Last time I used them I flipped the order back and forth about three times
2013-04-30 00:32:32 UTC <byorgey> hah!  that'll show 'em
2013-04-30 00:33:25 UTC <cmears> It only showed me ):
2013-04-30 00:33:46 UTC <byorgey> aww
2013-04-30 00:34:19 UTC <byorgey> oh boy, 17-year cicadas
2013-04-30 00:34:26 UTC <byorgey> http://www.cicadamania.com/where.html
2013-04-30 00:37:24 UTC <byorgey> I vividly remember when Brood X hatched in 1987 (I was 5)
2013-04-30 00:37:27 UTC <byorgey> it was terrifying
2013-04-30 00:37:57 UTC <byorgey> big, loud bugs covering every surface and filling the air
2013-04-30 00:38:25 UTC <byorgey> though probably my 5-year-old memory enhanced it somewhat =)
2013-04-30 00:38:49 UTC <luite> how big are they?
2013-04-30 00:41:17 UTC <luite> we only get these http://upload.wikimedia.org/wikipedia/commons/9/96/Feldmaik%C3%A4fer_%28Melolontha_melolontha%29_w_3.jpg
2013-04-30 00:41:23 UTC <byorgey> about 3cm long I think
2013-04-30 00:41:43 UTC <byorgey> woah
2013-04-30 00:41:59 UTC <byorgey> bugs are crazy, man
2013-04-30 00:42:41 UTC <byorgey> http://news.nationalgeographic.com/news/2013/03/130329-cicadas-coming-sky-locust-swarm-animal-science/
2013-04-30 00:42:54 UTC <byorgey> looks like I wasn't overimagining the "covering every surface"
2013-04-30 00:42:54 UTC <luite> ah about as big as these, cockchafers
2013-04-30 00:43:16 UTC <luite> but there are probably less of these, but they tend to get stuck indoors, attracted by lights
2013-04-30 00:43:29 UTC <luite> nd then get disoriented and bump into everything
2013-04-30 00:45:56 UTC <byorgey> hehe
2013-04-30 00:55:38 UTC <luite> byorgey: are they everywhere, or is that in a few specific places?
2013-04-30 00:59:07 UTC <luite> "A 2004 study from the University of Campinas in Brazil suggested that a cicada with a 17-year cycle and a parasite with a two-year cycle, for example, would meet only twice each century."
2013-04-30 00:59:11 UTC <luite> > 100/34
2013-04-30 00:59:12 UTC <lambdabot>   2.9411764705882355
2013-04-30 00:59:31 UTC <luite> 2.something ~ 2
2013-04-30 01:01:44 UTC <luite> dunno if that's what they meant, i haven't finished reading it yet :)
2013-04-30 01:02:39 UTC <luite> they have a predator prey model in a cellular automaton
2013-04-30 01:07:54 UTC <luite> hm so it must be possible to get published in physical review letters with a few days of playing with cellular automatons in haskell eh
2013-04-30 01:08:03 UTC <luite> automata
2013-04-30 01:35:09 UTC <tgeeky> byorgey: the amount of cicadas in that image, is too damn high.
2013-04-30 01:57:47 UTC <byorgey> luite: I did that same calculation in my head.  Seems like some miscommunication somewhere.
2013-04-30 01:57:53 UTC <byorgey> tgeeky: I know right.
2013-04-30 01:58:23 UTC <byorgey> luite: re: are they everywhere, I don't know.  It seemed like that everywhere when I was 5.
2013-04-30 01:58:27 UTC <luite> byorgey: the number is nowhere else in the paper
2013-04-30 01:58:40 UTC <luite> just a remark on the first page
2013-04-30 01:58:49 UTC <luite> and then they do simulations
2013-04-30 01:59:31 UTC <byorgey> oh, so there's more to it than just gcd(2,17)
2013-04-30 01:59:38 UTC <byorgey> uh, lcm even
2013-04-30 01:59:55 UTC <luite> well, the simulations determine that prime numbers are good
2013-04-30 02:00:12 UTC <luite> but not how often they meet, at least i don't see it :)
2013-04-30 02:01:04 UTC <byorgey> hehe, well, they're theoretical biologists, you don't expect them to really know any math, do you?
2013-04-30 02:05:22 UTC <luite> hm, don't theoretical biologists know at least some calculus and differential equations and recurrence relations?
2013-04-30 02:05:58 UTC <tgeeky> I wasn't aware there was a theoretical/experimental divide in biology\
2013-04-30 02:06:17 UTC <luite> you have to be able to solve the lotka-volterra equations after all
2013-04-30 02:07:02 UTC <tgeeky> I've heard about this kind of thing happening (and have a video somwhere stored, and remember the presenter: Marcus De Sotoy) about this same kind of calculation for some species
2013-04-30 02:08:13 UTC <luite> Marcus du Sautoy?
2013-04-30 02:08:28 UTC <tgeeky> sure. I figured I'd spell it wrong. :(
2013-04-30 02:08:42 UTC <luite> ah right, i have read some of his books
2013-04-30 02:09:30 UTC <tgeeky> he's the BBC's go-to [mathematical] guy
2013-04-30 02:09:44 UTC <luite> yeah i must've seen him on video once or twice
2013-04-30 02:10:02 UTC <byorgey> ACTION was joking about theoretical biologists of course
2013-04-30 02:10:07 UTC <tgeeky> hehe
2013-04-30 02:10:56 UTC <tgeeky> I thought so, but you never know. I would guess that the phrase "evolutionary algorithim" is newer than many biologists, so that doesn't give me confidence in their understanding of their understanding
2013-04-30 02:11:25 UTC <luite> hm, do theoretical biologists really use evolutionary algorithms?
2013-04-30 02:12:14 UTC <tgeeky> luite: if you take into account that theoretical biologists do not exist, then yes, they do.
2013-04-30 02:12:21 UTC <luite> hehe
2013-04-30 02:13:08 UTC <tgeeky> I'm just saying. We (cs and math folk) understand that we have only a tiny sliver of understanding about the abstract idea.
2013-04-30 02:13:09 UTC <luite> they do have some interesting optimization problems, at least last time i heard
2013-04-30 02:13:43 UTC <luite> finding an optimal evolution tree from (obviously) incomplete data, taking lateral gene transfer into account
2013-04-30 02:14:02 UTC <tgeeky> this isn't an area of my strength at all, though. I have sort of purposefully negleected learning about the biological sciences save when it's applicable to me
2013-04-30 02:14:32 UTC <luite> tgeeky: oh right, yeah i meant that evolutionary algorithms are not trying to imitate actual evolution
2013-04-30 02:14:45 UTC <luite> just draw inspiration from it
2013-04-30 02:15:05 UTC <tgeeky> luite: no but surely actual evoultion follows some evolutionary algorithims
2013-04-30 02:17:21 UTC <luite> it must be some algorithm if all replication steps are automated :)
2013-04-30 02:17:32 UTC <tgeeky> luite: it's probabilistic (necessarily)
2013-04-30 02:18:34 UTC <luite> hm, so today we get a king
2013-04-30 02:18:48 UTC <tgeeky> luite: yeah, I don't know how to actually argue this logically, or even if it's honestly my opinion. 
2013-04-30 02:18:49 UTC <luite> and the queen will resign
2013-04-30 02:18:51 UTC <luite> :p
2013-04-30 02:19:01 UTC <tgeeky> luite: is this news or just some expected transition of power?
2013-04-30 02:19:11 UTC <luite> maybe i should get drunk now or something, it's a national holiday
2013-04-30 02:19:19 UTC <luite> tgeeky: it was announced a few months ago
2013-04-30 02:22:25 UTC <tgeeky> ACTION thinks I used the words "evolutionary algorithim" where I should have used "evolutionary computation"
2013-04-30 02:28:55 UTC <tgeeky> luite: I'm sorry I didn't know this was a democracy. I vote yes for you drinking!
2013-04-30 02:34:16 UTC <luite> i should also do more programming, progress is way too slow recently :(
2013-04-30 02:35:41 UTC <tgeeky> you sould try beeminder to help guide you
2013-04-30 02:36:55 UTC <luite> beeminder would cost me far too much money
2013-04-30 02:37:10 UTC <tgeeky> that's what I thought, until I realized that if you're poor, it's even more effective :o
2013-04-30 02:37:11 UTC <luite> spending a week in vegas might be better
2013-04-30 02:37:49 UTC <tgeeky> i have a wedding party I can't afford to go to that's in Vegas. You can be me.
2013-04-30 02:38:01 UTC <luite> i meant cheaper
2013-04-30 02:38:02 UTC <tgeeky> bachelor party / wedding, I assume
2013-04-30 02:38:14 UTC <tgeeky> I mean this literally.
2013-04-30 02:38:18 UTC <luite> hehe
2013-04-30 02:38:25 UTC <tgeeky> I declined an invite a few minutes ago for my brother's best friend
2013-04-30 02:38:26 UTC <luite> only because you know i can't go either :p
2013-04-30 02:38:28 UTC <tgeeky> because I just can't afford it
2013-04-30 02:38:40 UTC <tgeeky> hell it's your money, go nuts. They are awesome people.
2013-04-30 02:39:47 UTC <luite> they should make a beeminder that gives you money everytime you reach a goal ;)
2013-04-30 02:40:10 UTC <tgeeky> hehe. I think that's called work.
2013-04-30 02:45:24 UTC <byorgey> luite: https://habitrpg.com/static/front  -- doesn't give you actual money, but it's the next best thing
2013-04-30 02:46:33 UTC <tgeeky> byorgey: btw, I meant that ++ seriously. That post was particularly well written and lucid
2013-04-30 02:46:38 UTC <luite> hm, i never really got into rpgs
2013-04-30 02:47:05 UTC <tgeeky> and honest, and well itemized
2013-04-30 02:47:30 UTC <byorgey> luite: ok, never mind then =)
2013-04-30 02:47:32 UTC <byorgey> tgeeky: thanks
2013-04-30 02:48:50 UTC <luite> where blog?
2013-04-30 02:48:53 UTC <luite> uh post
2013-04-30 02:49:09 UTC <tgeeky> http://byorgey.wordpress.com/2013/04/16/beeminding-for-fun-and-profit/
2013-04-30 02:49:19 UTC <luite> oh right
2013-04-30 02:49:39 UTC <tgeeky> byorgey: you may be able to strengthen the post overall, and change the wording to "Beeminder has changed my life, and I have evidence to prove it."
2013-04-30 02:49:49 UTC <tgeeky> if one did statistics on it
2013-04-30 02:50:14 UTC <tgeeky> byorgey: either way, I'm sure the folks @ beeminder would love to have your story :)
2013-04-30 02:50:33 UTC <byorgey> they already do =)
2013-04-30 02:50:52 UTC <byorgey> and I have neither the time nor desire to go back and improve an old blog post.
2013-04-30 02:51:28 UTC <luite> just add improving old posts as a beeminder goal then
2013-04-30 02:51:43 UTC <tgeeky> byorgey: that's one thing that has always annoyed me about testiomonials sections on webpages. The best testimonials for the [thing] are usually not there, becuase the margin is too small.
2013-04-30 02:51:53 UTC <byorgey> nono, see, you only make beeminder goals for things you *do* want to do, but don't
2013-04-30 02:52:20 UTC <tgeeky> luite: actually, that is one of the weaknesses of beeminder. It doesn't decide what you should or shouldn't do, nor does it help break down a big task into smaller chunks
2013-04-30 02:52:35 UTC <tgeeky> but once you've done those, it will help you track and possibly stay on track
2013-04-30 02:53:24 UTC <tgeeky> byorgey: I think I've asked, You do most of your entry on the various pages at beeminder.com?
2013-04-30 02:53:32 UTC <luite> can you adjust the goal a bit if you restart?
2013-04-30 02:53:32 UTC <tgeeky> and not via sms, or some app, or via the API
2013-04-30 02:53:51 UTC <byorgey> luite: restart what?
2013-04-30 02:53:58 UTC <tgeeky> luite: yes. you can adjust the goal mid-stride, so long as the changes propogate later than a week away
2013-04-30 02:54:02 UTC <byorgey> tgeeky: mostly via the web, some via sms
2013-04-30 02:54:06 UTC <luite> tgeeky: ah
2013-04-30 02:54:14 UTC <byorgey> well, currently the changes always happen *exactly* one week away
2013-04-30 02:54:24 UTC <byorgey> I hope soon they will allow you to schedule changes further in advance
2013-04-30 02:54:38 UTC <tgeeky> yes, I was sort of muddling all that into it
2013-04-30 02:54:43 UTC <tgeeky> You can makes changes if you're well on track
2013-04-30 02:55:06 UTC <byorgey> tgeeky: dmwit has been working on Haskell bindings to the API, I hope to help with them at some point
2013-04-30 02:55:17 UTC <byorgey> there may come a day when I will do most of my data entry via a custom Haskell program =)
2013-04-30 02:55:34 UTC <tgeeky> byorgey: I suppose I'll be in there too. I'm forcing myself to stay on linux to get things done and get away from windows-induced problems re: me sharing code
2013-04-30 02:56:11 UTC <tgeeky> luite: https://www.beeminder.com/technogeeky/goals/stationary
2013-04-30 02:56:46 UTC <tgeeky> luite: the left hand side (of the vertical yellow brick rode) is pre-existing data
2013-04-30 02:57:06 UTC <tgeeky> the yellow road was then fitted to the data using the "retroratchet" thing, which just ... fit it.
2013-04-30 02:57:19 UTC <tgeeky> and then you can see me actually outpacing the original data
2013-04-30 02:58:59 UTC <tgeeky> luite: the vertical blue line is the exactly-one-week-away thing
2013-04-30 02:59:29 UTC <byorgey> tgeeky: oh, does retroratchet even automatically calculate a slope for you?
2013-04-30 03:00:03 UTC <tgeeky> byorgey: given that I arbitrarily picked the goal (1000 miles), yes.
2013-04-30 03:00:07 UTC <tgeeky> but if I hadn't done so, no
2013-04-30 03:00:17 UTC <byorgey> oh, I see
2013-04-30 03:00:26 UTC <tgeeky> I picked 1000 at 600
2013-04-30 03:05:12 UTC <tgeeky> luite: the way I think it's best to understand the money issue re: this site -- I don't need to press pledge for a graph unless:
2013-04-30 03:06:26 UTC <tgeeky> I'm prepared to write some random person on the internet a future message that says "I won't listen to my damn self, so I'm betting against myself, in the hopes that I don't lose money I don't have anyway."
2013-04-30 03:06:34 UTC <tgeeky> and attach $5 to it
2013-04-30 03:07:24 UTC <tgeeky> something like that. Brent said it better.
2013-04-30 03:09:41 UTC <luite> hm, i was thinking that you could set up something where you bet against actual people... but that would kill the positive encouragement
2013-04-30 03:10:36 UTC <tgeeky> luite: I'd rather have most quants doing that than what they're doing
2013-04-30 03:11:15 UTC <tgeeky> that way they can bet on our misery even more directly!
2013-04-30 03:26:58 UTC <luite> hm the latest chrome update is crashy here...
2013-04-30 03:59:31 UTC <tgeeky> ACTION found the video from earlier: it was from 'The Code' season 1 episode 1
2013-04-30 04:02:28 UTC <tgeeky> and it is about: the same bug -- the cicada
2013-04-30 04:26:43 UTC <tgeeky> ACTION bet my last message didn't go
2013-04-30 04:26:46 UTC <tgeeky> byorgey: ah, ok. So the message of this video is that in order to concentrate the broods of ciadas of various breeds, without overlapping with other breeds, they wait a different prime number of years to emerge (evidently 7, 13, and 17 happen in the US)
2013-04-30 04:27:31 UTC <tgeeky> presumably cross-breed cicadas are viable, but because they emerge out of sync with the broods, they get eaten (as their only defense is numbers)
2013-04-30 10:35:47 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-04-30_lyapunov-fm_cicada.jpg  (been procrastinating hard.. hopefully i can use 'diagrams' to explain how opengl works at the linux audio conf in a week and a bit..)
2013-04-30 12:39:09 UTC <notdan> luite: hi! so, do you think I should send my proposal today, tomorrow?
2013-04-30 12:39:42 UTC <notdan> After seeing other proposals I am very skeptical about my chances, but it doesn't hurt to try
2013-04-30 13:37:01 UTC <byorgey> ClaudiusMaximus: cool!
2013-04-30 13:37:22 UTC <byorgey> notdan: yes, it certainly doesn't hurt to try =)
2013-04-30 13:37:34 UTC <byorgey> notdan: can you send me a link to your proposal draft again?
2013-04-30 13:40:25 UTC <notdan> byorgey: https://gist.github.com/co-dan/437e9694563c0c13dd8e
2013-04-30 13:41:54 UTC <byorgey> notdan: I think you should take some of the stuff from the section "in what ways will this benefit the wider community?" and mention them in the introduction at the very top
2013-04-30 13:42:25 UTC <byorgey> to make it more clear that you are imagining some wider applications than just the narrow scope of the project title
2013-04-30 13:42:51 UTC <byorgey> notdan: also, in the introduction you should include a link to the diagrams project webpage
2013-04-30 13:49:47 UTC <notdan> byorgey: updated the gist
2013-04-30 13:50:33 UTC <byorgey> looks great
2013-04-30 13:52:10 UTC <notdan> Thanks for helping. I'll also wait for luite to check it out, he might add something re: Wolfgang part
2013-04-30 13:52:11 UTC <luite> :)
2013-04-30 13:52:21 UTC <notdan> ohai
2013-04-30 13:54:31 UTC <byorgey> Many people probably have not heard of Wolfgang
2013-04-30 13:54:44 UTC <byorgey> so I would suggest either taking it out or giving more details or a link or something
2013-04-30 13:54:48 UTC <byorgey> depends on what luite wants to do
2013-04-30 13:54:49 UTC <notdan> Yeah, I first heard about it in this channel, to be honest
2013-04-30 13:55:00 UTC <byorgey> so did we =)
2013-04-30 13:55:28 UTC <luite> hm, right
2013-04-30 13:58:07 UTC <luite> notdan: i think in the introduction, links to Wolfgang (screenshots) and SoH canb e added. in the plan, integrating it in Wolfgang, can possibly be replaced with adding some bundling function to download/zip/link the diagrams for 3rd party usage
2013-04-30 13:58:54 UTC <luite> integrating it in Wolfgang can still be done if there's time (and might be more useful/fun than the above), but making a goal depend on an unknown unreleased project might not be a good idea
2013-04-30 13:59:41 UTC <mgsloan> I'd be interested in helping with SoH integration!
2013-04-30 13:59:50 UTC <luite> great
2013-04-30 13:59:53 UTC <luite> i mean, booh, more competition
2013-04-30 13:59:58 UTC <mgsloan> ;)
2013-04-30 14:00:25 UTC <mgsloan> As far as raw diagrams --> pictures on the site go, though, I think this can be done fairly quickly
2013-04-30 14:00:57 UTC <luite> mgsloan: for wolfgang, one problem was the type defaulting
2013-04-30 14:01:04 UTC <mgsloan> But the active ghcjs stuff, that could certainly be an interesting place for effort
2013-04-30 14:01:36 UTC <luite> conal was also interested in this kind of active diagrams
2013-04-30 14:01:43 UTC <luite> but that was 2 years ago i think
2013-04-30 14:02:04 UTC <mgsloan> Right.  SoH could do this now, because you can run your own webserver.  So all you need to do in order to have diagrams on SoH is have some library that handles the boilerplate of serving the diagram your code generates
2013-04-30 14:02:27 UTC <mgsloan> I'm very interested in active diagrams too
2013-04-30 14:02:53 UTC <luite> k, all register on haskell.org etc, upvote this
2013-04-30 14:03:32 UTC <mgsloan> My scheme thusfar for this was to wrap my toy-diagrams interfaces for the web.  But that wouldn't have very good sliders / etc, and would need a full server roundtrip on every interaction
2013-04-30 14:03:47 UTC <mgsloan> I got mired in making blank-canvas backend independent
2013-04-30 14:04:00 UTC <luite> notdan: perhaps you can rename it a bit? rename the project to "active diagrams", and give both the library for compiling active diagrams to html snippets + js and the pastebin to demonstrate the active-diagrams library equal attention?
2013-04-30 14:04:24 UTC <mgsloan> Right.  I think the important part of this is going to need to be the active part, as static diagrams are somewhat trivial
2013-04-30 14:04:26 UTC <notdan> luite: yeah I think that's a good idea
2013-04-30 14:04:33 UTC <luite> the active-diagrams lib should be possible to use standalone, and then you don't need sandboxing
2013-04-30 14:05:29 UTC <notdan> luite: well don't know if it's possible to completely get rid of sandboxing
2013-04-30 14:05:40 UTC <luite> notdan: for the pastebin you'd still need it
2013-04-30 14:05:47 UTC <notdan> Yeah
2013-04-30 14:06:19 UTC <luite> but installing a complete website for just generating some active diagrams
2013-04-30 14:06:23 UTC <luite> is too much
2013-04-30 14:07:29 UTC <notdan> Ah, if you want to use it non-publicly then sure, makes sense
2013-04-30 14:07:53 UTC <luite> yeah, just compile your own active diagrams for your own blog post
2013-04-30 14:08:08 UTC <luite> more work since you need a working ghcjs installed, but that should be doable after september
2013-04-30 14:08:22 UTC <luite> but keep the pastebin for easy entry :p
2013-04-30 14:09:35 UTC <luite> for efficient multi-diagrams pages some stuff probably needs to be modified in the ghcjs linker
2013-04-30 14:10:23 UTC <luite> or you just compile all diagrams from a single .hs file and you generate some html that renders them all
2013-04-30 14:11:43 UTC <notdan> Can't you just combine the output of ghcjs for different diagrams?
2013-04-30 14:11:48 UTC <notdan> ah, that wouldn't be efficient
2013-04-30 14:11:57 UTC <notdan> because of the runtime being loaded several times?
2013-04-30 14:12:02 UTC <luite> you get lots of functions linked multiple times
2013-04-30 14:12:21 UTC <luite> yeah it's easy to split off the runtime, those are separate files
2013-04-30 14:12:34 UTC <luite> but much of the diagrams library would be linked every time
2013-04-30 14:13:16 UTC <notdan> luite: what should I put as a link to wolfgang?
2013-04-30 14:13:38 UTC <luite> i don't have anything better than http://hdiff.luite.com/wolfgang/ , sorry
2013-04-30 14:14:40 UTC <notdan> Well, maybe a short description?
2013-04-30 14:14:53 UTC <notdan> I am still not sure what is Wolfgang, I just know that it's some sort of Haskell wiki site
2013-04-30 14:16:05 UTC <notdan> Updated the gist: https://gist.github.com/co-dan/437e9694563c0c13dd8e
2013-04-30 14:16:13 UTC <luite> like in SoH, you can run Haskell code on the pages, with 'rich' results, like images or animations. and every pages is presented as a notebook with editable cells, similar to mathematica
2013-04-30 14:19:25 UTC <luite> as a wiki you can have page links, and every page is a haskell module, so you can build libraries of reusable code as wiki pages
2013-04-30 14:34:55 UTC <byorgey> "active diagrams" might be confusing because we already use "active" to refer to the animation stuff
2013-04-30 14:35:00 UTC <byorgey> which is not what we're talking about here
2013-04-30 14:35:11 UTC <byorgey> but maybe it's not a big deal, I can't think of a better name
2013-04-30 14:35:34 UTC <fryguybob> interactive diagrams?
2013-04-30 14:36:03 UTC <luite> active has a better ring to it imho... :)
2013-04-30 14:38:21 UTC <luite> interactivodular
2013-04-30 14:44:28 UTC <mgsloan> also, SoH calls the interactive haskell "active haskell"
2013-04-30 14:44:55 UTC <mgsloan> so ++ for "interactive"
2013-04-30 14:48:29 UTC <luite> k interactive it is
2013-04-30 16:34:25 UTC <luite> notdan: http://hdiff.luite.com/tmp/active-diagrams-mockup.png
2013-04-30 16:35:00 UTC <luite> perhaps you can link something like that in the proposal, or make a better one
2013-04-30 16:37:42 UTC <luite> it should also be possible to do mouse interaction with the diagram directly, but external input is probably a better earlier goal
2013-04-30 16:37:55 UTC <luite> and i'm not sure how to mockup mouse interaction :)
2013-04-30 17:55:38 UTC <fryguybob> luite: Clearly an animated gif with a mouse in it.
2013-04-30 17:58:34 UTC <luite> :)
2013-04-30 17:59:44 UTC <luite> http://zuiderzeemuseum.netfirms.com/animated_gif/thumbs/mouse9.gif
2013-04-30 18:01:30 UTC <luite> that'll surely convince them
2013-04-30 18:03:02 UTC <fryguybob> luite: Perfect!
2013-04-30 18:11:00 UTC <luite> http://hdiff.luite.com/tmp/diagrams-mockup-2.png
2013-04-30 18:17:38 UTC <luite> notdan: not sure if that's anything like you had in mind
2013-04-30 18:41:38 UTC <notdan> ha I made a similar app
2013-04-30 18:41:51 UTC <notdan> but I was too lazy to implement an actual LOGO so I just hacked an EDSL
2013-04-30 18:45:37 UTC <luite> the idea is that the logo interpreter has type String -> Diagram
2013-04-30 18:46:12 UTC <luite> the other one is probably more useful as an illustration of active diagrams
2013-04-30 20:47:34 UTC <byorgey> any suggestions/comments for the HCAR entry are welcome
2013-04-30 20:47:48 UTC <byorgey> it's not quite done yet but mostly so
2013-05-01 00:27:26 UTC <byorgey> ugh naming
2013-05-01 00:31:26 UTC <cmears> You need some good names?
2013-05-01 00:31:34 UTC <cmears> What about... "Bob"?
2013-05-01 00:35:12 UTC <fryguybob> @fresh
2013-05-01 00:35:12 UTC <lambdabot> Hajx
2013-05-01 00:36:46 UTC <luite> @fresh
2013-05-01 00:36:46 UTC <lambdabot> Hakb
2013-05-01 02:04:36 UTC <byorgey> Hajx isn't half bad
2013-05-01 02:19:15 UTC <tgeeky> are we still naming the interactive diagrams thing?
2013-05-01 02:20:08 UTC <tgeeky> I would hope that you would be happier about a future child than to say "ugh naming" about that problematic aspect of the process.
2013-05-01 02:21:32 UTC <byorgey> hahaha
2013-05-01 02:21:49 UTC <byorgey> if we were at the stage where we needed to choose a name for a future child, you would have heard about it by now.
2013-05-01 02:22:09 UTC <byorgey> no, I was trying to name arrow-drawing functions
2013-05-01 02:22:33 UTC <byorgey> so far what I've come up with involves a 2x2x2 matrix of functions
2013-05-01 02:22:55 UTC <byorgey> one of the axes involves appending a '
2013-05-01 02:23:10 UTC <byorgey> but that still means I have to come up with two pairs of names
2013-05-01 02:26:17 UTC <fryguybob> Pointy--NotSoPointy  and  Wiggly--NotSoWiggly
2013-05-01 02:27:04 UTC <byorgey> hehe
2013-05-01 02:27:29 UTC <byorgey> one axis is whether you pass an ArrowOpts record or not, that's the primes
2013-05-01 02:27:57 UTC <fryguybob> That was my guess :D
2013-05-01 02:28:30 UTC <byorgey> another axis is whether you get back a Diagram or a PathLike (they have to be separate since arrowheads can be any Diagram, so in the latter case no arrowhead is drawn)
2013-05-01 02:29:08 UTC <byorgey> the final axis is whether the type is something like  Point -> Point -> Diagram, or  Name -> Name -> (Diagram -> Diagram)
2013-05-01 02:29:25 UTC <fryguybob> Humm
2013-05-01 02:29:55 UTC <byorgey> I can't see a way to unify any of those, but suggestions are welcome
2013-05-01 02:30:28 UTC <byorgey> as far as names, right now I'm thinking of something like  'arrow/arrowPath' and 'connect/connectPath'
2013-05-01 02:30:43 UTC <byorgey> but open to better ideas
2013-05-01 02:30:53 UTC <fryguybob> Those sound good to me.
2013-05-01 02:31:08 UTC <byorgey> and is it obvious to you which is which? =)
2013-05-01 02:31:10 UTC <fryguybob> That is if you are not opting for Hajx and Hakb
2013-05-01 02:31:22 UTC <byorgey> we can export those as convenient synonyms
2013-05-01 02:31:35 UTC <fryguybob> Arrow is the Point -> ... one and connect is the Name one.
2013-05-01 02:31:41 UTC <byorgey> ok, good =)
2013-05-01 02:31:56 UTC <fryguybob> Arrows are things you can do in isolation, but connect needs some context.
2013-05-01 02:32:02 UTC <byorgey> exactly
2013-05-01 02:32:32 UTC <byorgey> arrow is a noun so it gives you a Diagram.  connect is a verb so it gives you a (Diagram -> Diagram)
2013-05-01 02:32:49 UTC <byorgey> the only slight infelicity is that 'connectPath' sounds like you are connecting a path
2013-05-01 02:32:56 UTC <fryguybob> Ah yes.  I didn't notice that because I verb my nouns.
2013-05-01 02:33:04 UTC <byorgey> hehe
2013-05-01 02:33:35 UTC <byorgey> I actually like 'connector' better for that, but having it be consistent with 'arrowPath' is probably more important
2013-05-01 02:34:00 UTC <byorgey> anyway, to bed with me
2013-05-01 02:34:25 UTC <fryguybob> Good night!
2013-05-01 02:36:43 UTC <byorgey> night!
2013-05-01 02:44:49 UTC <tgeeky> byorgey: re Point -> Pint -> Diagram and Name -> Name -> (Diagram -> Diagram)
2013-05-01 02:44:58 UTC <tgeeky> Pint... lol
2013-05-01 02:46:20 UTC <tgeeky> ACTION read what you guys already said, and is more confused.
2013-05-01 02:48:05 UTC <tgeeky> does 'propogate' or 'propogator' make sense as the second one?
2013-05-01 02:48:17 UTC <tgeeky> oh byorgey is already asleep. oops.
2013-05-01 13:44:47 UTC <ClaudiusMaximus> what'd be a good way to do something like this? http://mathr.co.uk/tmp/enlargement.png
2013-05-01 13:46:09 UTC <luite> line shouldn't be dotted
2013-05-01 13:46:10 UTC <luite> !
2013-05-01 13:46:26 UTC <luite> at least on the left
2013-05-01 13:46:41 UTC <ClaudiusMaximus> true, but i'll probably drop the two middle lines...
2013-05-01 13:47:08 UTC <ClaudiusMaximus> did think about drawing all the diagrams for my presentation on paper and scanning them, but i'm too clumsy :(
2013-05-01 13:47:22 UTC <ClaudiusMaximus> it'd take just as long to implement them in diagrams
2013-05-01 13:47:48 UTC <luite> add some functions to diagrams to make all lines and shapes a bit irregular
2013-05-01 13:47:55 UTC <luite> tikz has something similar :p
2013-05-01 13:47:55 UTC <ClaudiusMaximus> hehe
2013-05-01 13:48:12 UTC <ClaudiusMaximus> i remember we discussed that here already...
2013-05-01 13:49:51 UTC <ClaudiusMaximus> i think it boils down to "given two subdiagrams somewhere in a layout, draw lines between equivalent corners of their bounding boxes"
2013-05-01 13:51:14 UTC <luite> hm yeah for rectangular shapes
2013-05-01 13:51:58 UTC <luite> for circles you'd probably want 2 lines
2013-05-01 13:52:49 UTC <ClaudiusMaximus> sure - i probably want 2 lines for this case really
2013-05-01 13:53:19 UTC <ClaudiusMaximus> and even blobby non-convex shapes could be done with two lines (if the shapes are the same)
2013-05-01 13:53:40 UTC <ClaudiusMaximus> non-connected shapes would be trickier
2013-05-01 13:54:36 UTC <ClaudiusMaximus> anyway, the thing i need is to extract the coordinates relative to the outer layout of certain points with coordinates relative to their own origin...
2013-05-01 13:54:47 UTC <ClaudiusMaximus> how to?
2013-05-01 13:57:39 UTC <ClaudiusMaximus> maybe i'll just hardcode it all, i'm really pressed for time... need to have slides for a 30min paper presentation almost-done by saturday lunchtime, as i'll be too busy next week to work on them much..
2013-05-01 14:02:55 UTC <luite> :)
2013-05-01 14:24:46 UTC <luite> notdan: are you still going to submit the proposal, or do you want to change more things?
2013-05-01 14:31:11 UTC <fryguybob> ClaudiusMaximus: Perhaps you want the convex hull of the bounding boxes?
2013-05-01 14:34:17 UTC <ClaudiusMaximus> fryguybob: exactly
2013-05-01 14:34:44 UTC <ClaudiusMaximus> or rather the convex hull of the corresponding components
2013-05-01 14:34:48 UTC <fryguybob> Right
2013-05-01 14:34:57 UTC <ClaudiusMaximus> anyway, http://mathr.co.uk/tmp/enlargement2.png
2013-05-01 14:35:15 UTC <ClaudiusMaximus> just hardcoded coordinates, bit hacky but need to get this all done..
2013-05-01 14:35:15 UTC <fryguybob> If we don't have it somewhere already we should add a convex hull of a path function.
2013-05-01 14:47:30 UTC <fryguybob> I added it as an issue: https://github.com/diagrams/diagrams-lib/issues/81
2013-05-01 16:15:37 UTC <hpaste> âAnonymous Cowardâ annotated â"jolly jumper"â with â"jolly jumper" (annotation)â at http://hpaste.org/50938#a87009
2013-05-01 17:01:47 UTC <byorgey> ClaudiusMaximus: the way to do it would be to give the two subdiagrams names, then extract them (+ their bounding boxes) by name from the diagram constituting the larger context
2013-05-01 17:01:57 UTC <byorgey> that way you get the coordinates of their bounding boxes in the same vector space
2013-05-01 17:11:13 UTC <ClaudiusMaximus> byorgey: is there an example of naming / extraction by name
2013-05-01 17:11:38 UTC <ClaudiusMaximus> byorgey: not urgent, as i'm in a rush and got the diagram that needed it already done...
2013-05-01 17:11:44 UTC <byorgey> ClaudiusMaximus: yes, in the manual, let me find you a link
2013-05-01 17:11:58 UTC <byorgey> yeah, that's fine, just for future reference =)
2013-05-01 17:12:14 UTC <byorgey> http://projects.haskell.org/diagrams/manual/diagrams-manual.html#named-subdiagrams
2013-05-01 17:32:24 UTC <hpaste> byorgey pasted âConnecting bounding boxesâ at http://hpaste.org/87012
2013-05-01 17:32:39 UTC <byorgey> ClaudiusMaximus: ^^^ there's an example doing specifically what you were trying to do
2013-05-01 17:34:37 UTC <byorgey> having convex hull would make it even easier of course
2013-05-01 17:36:09 UTC <byorgey> the important bits are giving the subdiagrams names, extracting using 'withNames', then projecting the extracted subdiagrams using 'getSub'
2013-05-01 17:36:33 UTC <byorgey> which gives you diagrams relative to the vector space of 'boxes' rather than their local vector spaces
2013-05-01 17:37:25 UTC <fryguybob> That example reminds me that the order of the points from  getAllCorners  is not very useful.  Understandable though.
2013-05-01 17:37:50 UTC <byorgey> yeah, I was mildly disappointed there wasn't a way to directly say I wanted the upper left corner or whatever.
2013-05-01 17:38:03 UTC <byorgey> though of course bounding boxes are not specific to 2D.
2013-05-01 17:39:15 UTC <fryguybob> Yeah.  It might be worth having a "bounding face" function that gave CCW ordered points.  In 2d, one face. In 3d it would give six faces.
2013-05-01 17:39:35 UTC <byorgey> sounds nifty.
2013-05-01 17:39:42 UTC <fryguybob> (maybe I'm missing some easier generalization).
2013-05-01 18:34:47 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/CalkinWilf.pdf
2013-05-01 18:40:36 UTC <carter> whats this doc?
2013-05-01 18:40:42 UTC <carter> ooo
2013-05-01 18:40:44 UTC <carter> neat
2013-05-01 18:40:51 UTC <carter> what is that?
2013-05-01 18:41:28 UTC <luite> a Calkin-Wilf tree!
2013-05-01 18:44:09 UTC <luite> carter: i had to remove the commutation and reassociation rewrite rules from ghcjs since they let to wrong answers in the test suite :(
2013-05-01 18:44:16 UTC <luite> led
2013-05-01 18:44:34 UTC <carter> luite i did warn you about that yesterday right? :)
2013-05-01 18:45:28 UTC <luite> hehe yeah i was kind of afraid of this already :p but i think it's more likely a bug than just precision loss. i'll probably enable them later again in a more limited form
2013-05-01 18:45:38 UTC <luite> fortunately the stack pointer stuff still works
2013-05-01 18:46:10 UTC <carter> cool
2013-05-01 19:25:13 UTC <carter> byorgey http://markkness.net/colorpy/ColorPy.html may be worth looking at
2013-05-01 19:25:38 UTC <carter> it looks like a nice lib / idea for physics based color ranges
2013-05-01 19:27:04 UTC <luite> colour already uses XYZ space internally
2013-05-01 19:27:14 UTC <carter> woops, nvm, its not usesful for aesthetical things
2013-05-01 19:37:26 UTC <ClaudiusMaximus> byorgey: cool, thanks - saved for future reference
2013-05-01 19:41:11 UTC <notdan> luite: well I went through the proposal and I think it's ok
2013-05-01 19:41:37 UTC <notdan> albeit I havent erote any proposals before
2013-05-01 19:42:11 UTC <notdan> but if you are giving me a green light I am going to submit it right now
2013-05-01 19:42:25 UTC <luite> well it's your proposal, you can do what you want :)
2013-05-01 19:43:05 UTC <luite> ok, do you want to add links to those pictures i sent yesterday to give readers a feel for what they can expect as reusable results on other sites?
2013-05-01 19:43:32 UTC <luite> (at least if this is in line with what you want)
2013-05-01 19:43:43 UTC <notdan> oh I think I added those
2013-05-01 19:43:48 UTC <luite> ah good
2013-05-01 19:43:56 UTC <luite> what was the url again?
2013-05-01 19:44:03 UTC <notdan> I must have forgotteb to upload it to gist
2013-05-01 19:44:25 UTC <notdan> luite: 1sec
2013-05-01 19:45:16 UTC <notdan> sorry I am ircing from my phone atm, because I am not at home and this computer doesnt have my ssh key :/
2013-05-01 19:45:28 UTC <notdan> so my typing is really slow
2013-05-01 19:45:40 UTC <luite> oh no prob
2013-05-01 19:50:37 UTC <notdan> ok so it's bit.ly/11CSXMB
2013-05-01 19:52:31 UTC <luite> ah i also upped this one, but that's less colourful :) http://hdiff.luite.com/tmp/diagrams-mockup-2.png
2013-05-01 19:53:00 UTC <notdan> But it's about LOGO?
2013-05-01 19:53:51 UTC <luite> well it's an example if you have a runLogo :: String -> Diagram interpreter, that it can be compiled in a similar way
2013-05-01 19:54:09 UTC <notdan> ok added it too
2013-05-01 19:54:09 UTC <notdan> ah, right
2013-05-01 19:54:33 UTC <luite> the example was taken from the hs-logo thing by deepak jois
2013-05-01 19:55:03 UTC <luite> that interprets logo and renders a Diagram
2013-05-01 19:57:42 UTC <luite> anyway looks good to me
2013-05-01 19:58:20 UTC <notdan> Ok uploaded it to Google melange :)
2013-05-01 19:58:22 UTC <notdan> thx
2013-05-01 20:05:28 UTC <luite> great, so now we'll just need to wait for the votes :)
2013-05-01 20:29:08 UTC <tgeeky> byorgey: nice Calkin-Wilf tree!
2013-05-01 20:29:31 UTC <carter> luite i can't vote on stuff can i?
2013-05-01 20:29:41 UTC <luite> carter: if you register as mentor you can
2013-05-01 20:29:51 UTC <luite> i think :p
2013-05-01 21:49:40 UTC <ClaudiusMaximus> is there a cute way to include latex maths in diagrams?
2013-05-01 23:01:51 UTC <fryguybob> ClaudiusMaximus: I don't know of any, but it is on the list of project ideas.  It would not be hard to do.
2013-05-01 23:08:51 UTC <byorgey> ClaudiusMaximus: there is a tikz backend, I don't know if it supports that (but if it doesn't it should be easy to add)
2013-05-01 23:09:03 UTC <byorgey> I've been meaning to play around with the tikz backend and see what it does
2013-05-01 23:09:10 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/CalkinWilf.pdf  -- new and improved
2013-05-01 23:15:22 UTC <ClaudiusMaximus> byorgey: using image for now, with hand-cropped screenshot from pdflatex at a sufficiently high resolution...
2013-05-01 23:20:41 UTC <byorgey> haha, that works
2013-05-01 23:37:24 UTC <cmears> I guess that is essentially what "preview-latex" does in Emacs
2013-05-01 23:37:46 UTC <cmears> i.e. renders each math-mode snippet via latex and then shows the image in the editor
2013-05-01 23:38:50 UTC <luite> i used that for a while but decided that it would be more efficient if i learned to do the latex math rendering in my head ;)
2013-05-01 23:40:08 UTC <byorgey> howdy cmccann 
2013-05-01 23:40:12 UTC <cmccann> yo
2013-05-01 23:40:52 UTC <cmccann> so it occurred to me that my current hobby project will probably include a bulk of what would be needed for an opengl backend
2013-05-01 23:41:08 UTC <byorgey> oh? nice
2013-05-01 23:41:36 UTC <luite> \o/
2013-05-01 23:41:44 UTC <byorgey> bergey has been working on an opengl backend: https://github.com/bergey/diagrams-opengl
2013-05-01 23:41:48 UTC <byorgey> dunno what the status is
2013-05-01 23:41:51 UTC <luite> don't forget to provide a webgl backend as well ;)
2013-05-01 23:41:51 UTC <byorgey> maybe you could join forces
2013-05-01 23:42:16 UTC <cmccann> dunno how easy it would be to combine effort
2013-05-01 23:42:36 UTC <cmccann> it's more that I could extract most of what diagrams needs from stuff I'm working on that, I think
2013-05-01 23:43:08 UTC <byorgey> I cannot parse your last sentence
2013-05-01 23:43:15 UTC <cmccann> uh
2013-05-01 23:43:17 UTC <cmccann> neither can I
2013-05-01 23:43:20 UTC <byorgey> =)
2013-05-01 23:43:56 UTC <cmccann> sorry, kinda distracted and stopped in the middle of editing that sentence apparently
2013-05-01 23:45:18 UTC <byorgey> no worries
2013-05-01 23:45:37 UTC <byorgey> I look forward to hearing more once you are sufficiently undistracted
2013-05-01 23:46:25 UTC <cmccann> anyway, I'm writing a painting application and using opengl for display for various reasons.
2013-05-01 23:46:58 UTC <cmccann> and I'm handling user input by interpolating a path and rasterizing it myself to generate a texture
2013-05-01 23:47:58 UTC <fryguybob> cmccann: So 2D opengl, excellent.
2013-05-01 23:48:11 UTC <cmccann> so it's a very non-3D sort of thing but I *think* it will be (relatively) easy to adapt the code to work like any of the other 2d backends for diagrams
2013-05-01 23:49:06 UTC <byorgey> oh right, I remember you mentioning this painting application
2013-05-01 23:49:24 UTC <byorgey> interesting
2013-05-01 23:49:50 UTC <cmccann> looking at the repo you linked to it appears to be using actual geometry and whatnot, which is an entirely different approach.
2013-05-01 23:49:59 UTC <byorgey> just to be clear, a 2D opengl backend would not *have* to do rasterization itself, would it?
2013-05-01 23:50:02 UTC <byorgey> right
2013-05-01 23:50:19 UTC <byorgey> well, the more backends the merrier as far as I'm concerned!
2013-05-01 23:50:53 UTC <cmccann> well, there are several ways a GL backend could be done.
2013-05-01 23:50:58 UTC <fryguybob> ACTION plots a roomba backend to draw diagrams in his floor dust.
2013-05-01 23:51:03 UTC <luite> if you're rasterizing, you could also render it with cairo and then convert the result to a texture? surely there must be more to it :)
2013-05-01 23:51:08 UTC <fryguybob> I suppose I need a roomba first.
2013-05-01 23:51:19 UTC <cmccann> the obvious and simplest way is the kinda simple flat geometry that graphics-drawingcombinators uses
2013-05-01 23:51:22 UTC <byorgey> fryguybob: excellent idea
2013-05-01 23:51:44 UTC <cmccann> luite: yes, but what I'm doing will hopefully be much faster
2013-05-01 23:51:51 UTC <luite> fryguybob: roomba battlebots with diagrams!
2013-05-01 23:52:17 UTC <luite> cmccann: ah
2013-05-01 23:52:24 UTC <cmccann> since I'll be doing at least some of the work in a fragment shader, not in up-front and in memory 
2013-05-01 23:52:33 UTC <fryguybob> cmccann: Is it anything like this: http://http.developer.nvidia.com/GPUGems3/gpugems3_ch25.html
2013-05-01 23:52:42 UTC <fryguybob> I can't remember who linked to that before.
2013-05-01 23:53:05 UTC <cmccann> fryguybob: yes, very much along those lines
2013-05-01 23:53:34 UTC <luite> aah
2013-05-01 23:53:37 UTC <luite> interesting :)
2013-05-01 23:58:56 UTC <cmccann> anyway, I figured I'd start idling in here to remind myself to create a diagrams backend when I get a bit further along :P
2013-05-01 23:59:27 UTC <fryguybob> cmccann: Awesome!
2013-05-02 00:00:12 UTC <ClaudiusMaximus> hm, the cairo backend's image downscaling looks bad :(
2013-05-02 00:00:29 UTC <ClaudiusMaximus> getting aliasing on fine details...
2013-05-02 00:01:00 UTC <fryguybob> :(
2013-05-02 00:01:11 UTC <mgsloan> ClaudiusMaximus: Offset by (0.5, 0.5) pixels?
2013-05-02 00:01:50 UTC <mgsloan> (not sure if that'll help, but it certainly helps for, say, drawing 1px lines)
2013-05-02 00:03:21 UTC <cmccann> looking at the haddocks it looks like backends operate on some sort of tree specifying transformations and primitives and such, is that pretty much all or is there more to it?
2013-05-02 00:04:22 UTC <byorgey> cmccann: transformations and primitives and attributes.  that's pretty much all.
2013-05-02 00:04:25 UTC <ClaudiusMaximus> mgsloan: i'm using diagram's 'image' with something huge, and my final png from the cairo backend looks grainy yuck
2013-05-02 00:04:35 UTC <byorgey> cmccann: although currently, backends actually operate on a flattening of the tree
2013-05-02 00:04:58 UTC <byorgey> cmccann: it's on our list to allow backends to directly take advantage of the tree structure, which would enable some new features and lead to some nice optimizations
2013-05-02 00:05:06 UTC <byorgey> ClaudiusMaximus: awww, boo =(
2013-05-02 00:05:34 UTC <byorgey> ClaudiusMaximus: sorry, I guess your best bet is to rescale the image yourself first
2013-05-02 00:06:49 UTC <byorgey> ClaudiusMaximus: feel free to file a ticket, I don't know whether it's cairo's fault or whether we should be handling images in a different way
2013-05-02 00:07:32 UTC <ClaudiusMaximus> http://cairographics.org/manual/cairo-cairo-pattern-t.html#cairo-pattern-set-filter
2013-05-02 00:08:17 UTC <byorgey> aha
2013-05-02 00:08:42 UTC <luite> hm, nearest neighbour is pretty bad :)
2013-05-02 00:08:42 UTC <cmccann> byorgey: ok, this looks complicated in a fairly tractable way.
2013-05-02 00:09:10 UTC <byorgey> cmccann: =)
2013-05-02 00:09:26 UTC <byorgey> cmccann: that sounds about right.
2013-05-02 00:14:08 UTC <cmccann> byorgey: I'll let you know if and when I have something working. a video card that's at worst half-ancient will be required, but that shouldn't be too much of a problem.
2013-05-02 00:14:46 UTC <byorgey> sounds cool
2013-05-02 00:19:21 UTC <byorgey> ClaudiusMaximus: https://github.com/diagrams/diagrams-cairo/issues/30
2013-05-02 00:20:05 UTC <byorgey> ClaudiusMaximus: would you want to be able to configure the filter on a per-image basis?
2013-05-02 00:21:07 UTC <byorgey> and what would be the best default?
2013-05-02 00:24:36 UTC <luite> CAIRO_FILTER_BEST obviously ;)
2013-05-02 01:20:43 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/ArrowTest.pdf
2013-05-02 01:20:48 UTC <byorgey> woot!
2013-05-02 01:20:54 UTC <byorgey> that, my friends, is an ARROW
2013-05-02 01:24:03 UTC <cmears> looks like circles and a line
2013-05-02 01:24:26 UTC <byorgey> cmears: you are not squinting hard enough
2013-05-02 01:24:36 UTC <byorgey> it is an arrow which happens to be using a circle as an arrowhead.
2013-05-02 01:24:38 UTC <cmears> Maybe I need glasses
2013-05-02 01:24:43 UTC <cmears> Yeah, that is what I figured (:
2013-05-02 01:27:47 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14facf9f5 http://travis-ci.org/diagrams/diagrams-lib/builds/6806290 The build passed.
2013-05-02 01:32:24 UTC <fryguybob> byorgey: So close!
2013-05-02 01:33:46 UTC <cmears> byorgey, how will you specify arrow heads?  An arbitrary diagram that gets rotated so that it points in the direction of the arrow's line?
2013-05-02 01:34:53 UTC <byorgey> cmears: yep
2013-05-02 01:35:12 UTC <byorgey> we will provide a collection of standard arrowheads, or you can supply your own
2013-05-02 01:35:20 UTC <byorgey> it will be assumed to "point" in the direction of the positive x-axis
2013-05-02 01:35:45 UTC <cmccann> byorgey: trying to win over the category theorist demographic to use diagrams?
2013-05-02 01:36:10 UTC <byorgey> cmccann: for starters =)
2013-05-02 01:36:31 UTC <byorgey> well, to win them we'll also need a good story for embedding LaTeX-typeset stuff
2013-05-02 01:37:11 UTC <byorgey> but, you know, occasionally non-CT types also want to use arrows =)
2013-05-02 01:37:26 UTC <byorgey> of course they are using them wrong because they don't even specify what category they are working in.
2013-05-02 01:37:34 UTC <byorgey> but how people use diagrams is up to them.
2013-05-02 01:39:48 UTC <cmccann> embedding LaTeX would be pretty cool actually
2013-05-02 01:42:00 UTC <byorgey> I wholeheartedly agree
2013-05-02 01:44:30 UTC <cmccann> I wonder if there'd be any easy way to use existing LaTeX rendering thingies for that. like what people use to auto-generate images on websites, or at least did before stuff like mathjax got popular.
2013-05-02 01:45:07 UTC <fryguybob> I don't think it is too hard, but the details are tricky and different for each backend.
2013-05-02 01:46:17 UTC <cmccann> :[
2013-05-02 01:46:36 UTC <fryguybob> But we will do it at some point :D
2013-05-02 01:48:33 UTC <cmears> I wrote something that just called pdflatex on a snippet of TeX to make a pdf and then and then ImageMagick to convert to png
2013-05-02 01:48:42 UTC <cmears> But making it portable could be a pain
2013-05-02 01:49:43 UTC <cmccann> cmears: that seems like knocking down a wall with a bulldozer in order to swat a fly sitting on it
2013-05-02 01:49:47 UTC <cmccann> but if it works then hey.
2013-05-02 01:50:16 UTC <cmears> yeah, but I got that fly good
2013-05-02 01:51:29 UTC <cmccann> well. modern technology is all about using incredibly sophisticated machines running incredibly complex software to accomplish incredibly simple tasks.
2013-05-03 02:11:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 143abc661 http://travis-ci.org/diagrams/diagrams-lib/builds/6839605 The build was broken.
2013-05-03 02:20:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14d906678 http://travis-ci.org/diagrams/diagrams-lib/builds/6839710 The build is still failing.
2013-05-03 15:37:13 UTC <ClaudiusMaximus> just had a thought: xml namespaces allow embedding html in svg (afaik) and (definitely) svg in html; could be cool to be able to use (eg.) <video> tags inside diagrams-svg
2013-05-03 15:39:45 UTC <ClaudiusMaximus> or more generally have a "backend-specific raw content" primitive that gets ignored if the backend doesn't match
2013-05-03 15:40:59 UTC <luite> ClaudiusMaximus: I think you can't embed it directly, only with a <foreignObject> tag, not sure though
2013-05-03 15:41:45 UTC <luite> http://www.w3.org/TR/SVG/extend.html <- it says here that it will ignore unknown elements except in that tag
2013-05-03 15:46:10 UTC <ClaudiusMaximus> luite: ah ok, for the other way I've done it using <html xmlns="http://www.w3.org/1999/xhtml" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" lang="en"> ... <div><svg:svg version="1.1" baseProfile="full" width="900px" height="1300px"> svg content here with svg: namespace prefix </svg:svg></div>
2013-05-03 15:46:42 UTC <ClaudiusMaximus> probably there's a way to avoid svg: on all the svg elements too
2013-05-03 15:47:25 UTC <luite> oh did that really work, render html things directly in svg?
2013-05-03 15:49:25 UTC <ClaudiusMaximus> no, i was rendering svg things inside html
2013-05-03 15:51:46 UTC <ClaudiusMaximus> i'm so out of practice giving presentations... realized that most of the slides i made so far are focussed on tiny details of the implementation instead of the big picture...
2013-05-03 17:25:59 UTC <luite> ClaudiusMaximus: might work nicely to include latex labels in svg, just add mathjax and foreignObject
2013-05-03 20:23:33 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Fountains.pdf
2013-05-03 20:30:24 UTC <luite> do they have some combinatorial meaning related to the position?
2013-05-03 20:55:57 UTC <byorgey> no, the position is fairly random
2013-05-03 20:57:03 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Fountains-cols.pdf
2013-05-03 20:57:13 UTC <byorgey> here's one that's less silly
2013-05-03 21:12:33 UTC <ClaudiusMaximus> cairo backend behaviour is confusing
2013-05-03 21:12:52 UTC <ClaudiusMaximus> if an image is not found, it aborts with "user error: file not found"  but doesn't say which file
2013-05-03 21:13:04 UTC <ClaudiusMaximus> if a font isn't found, it uses the default font without warning...
2013-05-03 21:18:26 UTC <luite> byorgey: ah
2013-05-03 21:18:56 UTC <byorgey> ClaudiusMaximus: ugh
2013-05-03 22:03:29 UTC <cmccann> ClaudiusMaximus: clearly if an image is not found it should load a random image and use it instead
2013-05-03 22:03:31 UTC <cmccann> y'know to be consistent
2013-05-03 22:10:29 UTC <tgeeky> cmccann: to be consistent, you really mean, 'to be consistently inconsistent'.
2013-05-03 22:10:56 UTC <cmccann> that's the best kind of consistency.
2013-05-03 22:11:47 UTC <tgeeky> I'm pretty good at it.
2013-05-03 22:12:46 UTC <tgeeky> ACTION feels like we could do an Animaniacs episode about this, if only the setting were a Constantine Consistory
2013-05-03 22:13:20 UTC <tgeeky> or better yet, an Incan Consistory!
2013-05-03 22:13:45 UTC <tgeeky> http://www.youtube.com/watch?v=eIu4fP4fOHE
2013-05-03 22:15:53 UTC <tgeeky> If you can recite that without being clearly being heard to say several swear words, you will have impressed me.
2013-05-03 22:16:30 UTC <cmccann> man, animaniacs was a great show.
2013-05-03 22:17:10 UTC <tgeeky> it's the only thing I saw in my childhood, that I can remember (I don't remember much), that makes me think that
2013-05-04 18:40:01 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 142dc81eb http://travis-ci.org/diagrams/diagrams-lib/builds/6884237 The build passed.
2013-05-04 20:29:56 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14b3a479a http://travis-ci.org/diagrams/diagrams-lib/builds/6886378 The build was fixed.
2013-05-04 20:30:59 UTC <tgeeky> ACTION is curious about why it sometimes says 'was fixed' and sometimes 'passed' / 'failed'
2013-05-04 21:16:56 UTC <byorgey> tgeeky: I think it says 'was fixed' iff the build passed and the previous build failed.
2013-05-04 21:17:08 UTC <byorgey> tgeeky: however, it seems it didn't show the failing builds here on IRC, not sure why.
2013-05-04 21:17:20 UTC <byorgey> but they were from a different branch anyway, so the 'was fixed' doesn't really make sense
2013-05-05 19:06:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 1476e5678 http://travis-ci.org/diagrams/diagrams-lib/builds/6903000 The build passed.
2013-05-05 20:20:27 UTC <ClaudiusMaximus> best way to make a multi-page pdf with cairo backend?
2013-05-05 20:21:47 UTC <byorgey> ClaudiusMaximus: https://github.com/diagrams/diagrams-cairo/issues/18
2013-05-05 20:25:27 UTC <ClaudiusMaximus> byorgey: so not implemented yet?
2013-05-05 20:27:09 UTC <ClaudiusMaximus> maybe i better use beamer instead of implemting half of beamer badly in diagrams...
2013-05-05 21:45:37 UTC <byorgey> ClaudiusMaximus: not implemented yet, but should be easy to implement
2013-05-05 22:18:18 UTC <fryguybob> ClaudiusMaximus: It is implemented in the Postscript backend.  It can probably be ported over to Cairo easily.  The API could grow a little to handle things like different page sizes.
2013-05-05 22:29:25 UTC <fryguybob> Also, combining eps files into a pdf can be done with ghostscript.  This worked for me:
2013-05-05 22:29:30 UTC <fryguybob> gs -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sEPSCrop -sOutputFile=everything.pdf -dBATCH -dNOPAUSE off*.eps
2013-05-05 22:30:25 UTC <fryguybob> Resulting in: http://www.cs.rochester.edu/u/ryates/temp/everything.pdf
2013-05-06 00:28:27 UTC <byorgey> fryguybob: oh yeah, you have some code in there to compute the slope at the endpoints of a path, don't you?
2013-05-06 00:28:33 UTC <byorgey> though I guess it's not that difficult
2013-05-06 00:28:37 UTC <byorgey> I need that for arrows
2013-05-06 00:29:25 UTC <fryguybob> byorgey: I have that somewhere, I'll check
2013-05-06 00:29:40 UTC <byorgey> hmm, if we merge mgsloan's parametric generalization stuff we can make an instance for derivatives of paths
2013-05-06 00:29:50 UTC <byorgey> so you can ask for the derivative at a particular parameter or at the endpoints
2013-05-06 00:29:55 UTC <fryguybob> Right
2013-05-06 00:30:15 UTC <byorgey> because to make the arrowheads look right when the path is very curvy at the end you actually want the derivative a little ways back from the endpoint, and so on
2013-05-06 00:31:44 UTC <byorgey> gotta go pack for Canada
2013-05-06 00:32:57 UTC <fryguybob> Humm, this might be the best that I have: https://github.com/diagrams/diagrams-lib/blob/master/src/Diagrams/TwoD/Curvature.hs#L149
2013-05-06 00:33:32 UTC <fryguybob> What's in Canada?
2013-05-06 00:34:54 UTC <byorgey> fryguybob: Jacques Carette, I'm going up to visit & collaborate with him re: species stuff for a week
2013-05-06 00:35:23 UTC <byorgey> fryguybob: so do you think path/trail parameterization should be [0,1] or [0,numSegments] ?
2013-05-06 00:36:59 UTC <fryguybob> byorgey: Well... I've never been settled on that question myself.
2013-05-06 00:38:30 UTC <fryguybob> I think that I prefer [0,1].  Having a mapping to parameterization by length is more important for the things I have done before.
2013-05-06 00:38:51 UTC <fryguybob> That seems important for animation more then other parts of diagrams.
2013-05-06 00:39:23 UTC <byorgey> fryguybob: oh, you want it to be parameterized by (normalized) arc length?
2013-05-06 00:39:44 UTC <byorgey> I mean, I guess we could have all the options, with some newtype wrappers =)
2013-05-06 00:40:04 UTC <fryguybob> byorgey: No, just a mapping between the normal parametric and the arc length one.
2013-05-06 00:40:15 UTC <byorgey> oh, I see
2013-05-06 00:40:44 UTC <byorgey> so you mean [0,1] where 1/n, 2/n, ... correspond to segment joins
2013-05-06 00:41:05 UTC <byorgey> and within each segment it's just the segment's native parameterization scaled by 1/n
2013-05-06 00:41:24 UTC <fryguybob> Yeah.  The problem is if you really want to talk about the path as a whole you don't want to care about how many segments it has.
2013-05-06 00:41:35 UTC <byorgey> right
2013-05-06 00:42:50 UTC <byorgey> yeah, I'm leaning towards [0,1] myself, seems more consistent
2013-05-06 00:44:55 UTC <fryguybob> btw, that part of Canada is only 130 miles away, you will be closer!
2013-05-06 00:50:22 UTC <byorgey> true!
2013-05-06 09:47:16 UTC <ClaudiusMaximus> whee presentation slides finished (bar the examples that are still rendering, then to make a multi-page pdf...) - ended up using diagrams for almost the whole thing...  think i may have overprepared though.. still, easier to skip than fill :)
2013-05-06 09:48:17 UTC <ClaudiusMaximus> https://gitorious.org/maximus/lyapunov-fm/blobs/master/doc/slides/slides.hs
2013-05-06 13:17:24 UTC <byorgey> ClaudiusMaximus: awesome! =D
2013-05-06 18:29:02 UTC <carter> byorgey is unbound the state of the art in libs for handling binding / DSLs in haskell?
2013-05-06 18:29:10 UTC <carter> or what should i be looking at?
2013-05-06 18:31:39 UTC <carter> (if you have opinions)
2013-05-06 19:52:46 UTC <tgeeky> carter: it is, or is close to, state of the art
2013-05-06 19:53:10 UTC <carter> tgeeky ok.. was confused because conor mcbride indicated otherwise on twitter earlier
2013-05-06 19:53:46 UTC <tgeeky> carter: well, unbound is probably easier than other solutions
2013-05-06 19:53:51 UTC <carter> tgeeky because to my knowledge bound is current tech, as you say. Thanks! (i'll punt researching HOAS tech for now then :) )
2013-05-06 19:53:53 UTC <tgeeky> carter: and edwardk does something similar to unbound also
2013-05-06 19:54:14 UTC <tgeeky> carter: yeah, i was going to mention HOAS and PHOAS, but they both are not easy to learn or use
2013-05-06 19:54:32 UTC <carter> tgeeky are there any upside to hoas or phoas ?
2013-05-06 19:54:45 UTC <carter> if i'm just wanting to make a really nice DSL that i can compile?
2013-05-06 19:54:57 UTC <tgeeky> carter: PHOAS lets you have mutual recursion embedded in your language.
2013-05-06 19:55:13 UTC <carter> darn, thats something i'd want
2013-05-06 19:55:15 UTC <carter> i can't otherwise?
2013-05-06 19:55:26 UTC <tgeeky> I don't want to say, because I'm not sure. :(
2013-05-06 19:55:33 UTC <carter> ok
2013-05-06 19:55:49 UTC <carter> basically end users wise, it'll just look like a haskell lib
2013-05-06 19:55:50 UTC <tgeeky> http://hackage.haskell.org/package/compdata
2013-05-06 19:57:01 UTC <carter> ACTION i mean thats the goal
2013-05-06 19:57:06 UTC <carter> i think i've seen compdata before
2013-05-06 19:57:09 UTC <carter> but i'll stare at it again
2013-05-06 19:57:33 UTC <tgeeky> http://www.andres-loeh.de/HaskellForDSLs.pdf
2013-05-06 19:57:59 UTC <carter> thankee
2013-05-06 19:58:00 UTC <tgeeky> c. mcbride is a smart cookie though, so I doubt he's wrong
2013-05-06 19:58:20 UTC <tgeeky> and byorgey isn't one to value opinions as much as facts, so I'm sure he'd agree on whatever facts are available
2013-05-06 19:58:35 UTC <carter> ok
2013-05-06 19:58:44 UTC <carter> well, i'm needing the state of the art facts :)
2013-05-06 19:58:48 UTC <tgeeky> hehe :)
2013-05-06 19:59:15 UTC <carter> theres a huge amoutn of work on the formal modelling sideâ¦ which doesn't matter for me
2013-05-06 19:59:18 UTC <tgeeky> I have written code in HOAS and PHOAS styles before, and tried to incorporate kind polymorphism too (which I failed at, and would fail at again if I tried again)
2013-05-06 19:59:20 UTC <carter>  well
2013-05-06 19:59:24 UTC <carter> for this use case
2013-05-06 20:00:01 UTC <carter> well, this is going to be for a DSL for numerical code
2013-05-06 20:00:10 UTC <tgeeky> I thought edwardk had an alternative to 'unbound', too
2013-05-06 20:00:11 UTC <carter> that may or may not be expressed in a higher order way
2013-05-06 20:00:13 UTC <carter> bound
2013-05-06 20:00:16 UTC <carter> yes
2013-05-06 20:00:49 UTC <carter> that was the thing he said wasn't state of the art
2013-05-06 20:00:52 UTC <carter> https://twitter.com/pigworker/status/331473393025171457
2013-05-06 20:01:00 UTC <tgeeky> yes, I agree with that.
2013-05-06 20:01:07 UTC <tgeeky> He basically re-approaches de brujin indices
2013-05-06 20:01:11 UTC <carter> ok
2013-05-06 20:01:20 UTC <carter> thats true
2013-05-06 20:01:44 UTC <carter> i meant state of the art in being "easy to use and nice for both end user and comipler writer both"
2013-05-06 20:01:49 UTC <tgeeky> I've had a hard time understanding what each solution brings to the table
2013-05-06 20:02:00 UTC <carter> sounds like you've played with them more than me though
2013-05-06 20:03:19 UTC <tgeeky> this is a paper I've read once (thus don't fully understand, and haven't coded by hand yet): http://www.cs.utexas.edu/~wcook/Drafts/2012/graphs.pdf
2013-05-06 20:03:50 UTC <carter> what should i look at in that paper?
2013-05-06 20:03:55 UTC <tgeeky> this the paper I wrote all of the code out by hand:
2013-05-06 20:04:04 UTC <tgeeky> this is really the starting point of my understanding of PHOAS: http://ropas.snu.ac.kr/~bruno/papers/ASGDSL.pdf
2013-05-06 20:04:37 UTC <tgeeky> they lay out the meanings of 'deep' and 'shallow' embedding
2013-05-06 20:04:49 UTC <carter> hrmmmâ¦ i do like knowing where theres sharing / thats meaningful for my stuff
2013-05-06 20:05:00 UTC <carter> thanks tgeeky !
2013-05-06 20:08:26 UTC <carter> ive a lot of reading / experimentation later this week i guess
2013-05-07 03:16:08 UTC <byorgey> greetings from Kitchner, Ontario, Canada, North America, Earth, etc.
2013-05-07 04:09:36 UTC <tgeeky> byorgey: eh!
2013-05-07 04:10:00 UTC <byorgey> the guy who drove me here from the airport definitely said eh quite a few times
2013-05-07 04:10:31 UTC <tgeeky> byorgey: Solar System, Milky Way, Universe A
2013-05-07 04:11:09 UTC <byorgey> tgeeky: surely there's some sort of galaxy cluster which can be inserted in the penultimate slot there
2013-05-07 04:11:29 UTC <tgeeky> yep.
2013-05-07 04:11:37 UTC <tgeeky> I used to think about this a lot :o
2013-05-07 04:11:42 UTC <byorgey> hehe
2013-05-07 04:11:58 UTC <tgeeky> there is a local group, and then a local supercluster
2013-05-07 04:12:18 UTC <byorgey> neat
2013-05-07 04:12:38 UTC <tgeeky> everything not in the local group (nearest dozen or so galaxies) is *not* gravitationally bound and hence will eventually be redshifted out of our future
2013-05-07 04:14:08 UTC <tgeeky> they (their light) will literally get frozen onto the observable horizon of our universe
2013-05-07 04:14:24 UTC <byorgey> ACTION boggles
2013-05-07 04:14:49 UTC <tgeeky> weeee
2013-05-07 04:14:59 UTC <tgeeky> did you ever get to see any northern light stuff in PA?
2013-05-07 04:16:51 UTC <byorgey> tgeeky: I tried, but I didn't see anything
2013-05-07 04:16:57 UTC <byorgey> I don't think there was anything to see
2013-05-07 04:18:41 UTC <tgeeky> probably not :(
2013-05-07 04:19:09 UTC <tgeeky> have fun in Cannnnnada. I'm fasting this week (first time) for four days. Should be an interesting experience.
2013-05-07 04:19:43 UTC <tgeeky> something that I understand was important in the Hebrew bible and other works.
2013-05-07 04:21:20 UTC <byorgey> indeed.
2013-05-07 04:21:51 UTC <byorgey> I'll be interested to hear how it goes.  The longest I have ever fasted was ~60 hours.
2013-05-07 04:22:10 UTC <carter> enjoy!
2013-05-07 04:22:15 UTC <carter> fastingâ¦ why
2013-05-07 04:22:33 UTC <tgeeky> recent research says it does pretty helpful things, metabolically speaking
2013-05-07 04:22:59 UTC <tgeeky> it offsets alzheimers onset in (predestined) mice from ~ 40 human year equivalents to ~ 80 years
2013-05-07 04:23:28 UTC <tgeeky> in this area I can only report other's results, not claim to understand them.
2013-05-07 04:24:24 UTC <tgeeky> plus, it's a challenge.
2013-05-07 04:24:51 UTC <tgeeky> byorgey: did you "break", or just didn't have a specific goal in mind?
2013-05-07 04:25:01 UTC <tgeeky> I'm being safe and monitoring my blood sugar at least
2013-05-07 04:25:42 UTC <byorgey> tgeeky: I had a specific goal in mind, which was ~60 hours =)
2013-05-07 04:26:01 UTC <tgeeky> hasn't been so bad on the first day.
2013-05-07 04:26:05 UTC <byorgey> in particular it was from sundown Maundy Thursday until Easter morning
2013-05-07 04:26:31 UTC <byorgey> so for religious rather than health reasons.
2013-05-07 04:27:03 UTC <tgeeky> but what is [the good parts of] religion but things we should do for the good of our health, though we may not understand them
2013-05-07 04:27:55 UTC <byorgey> well obviously I don't think it can be *reduced* to that, but otherwise I agree. =)
2013-05-07 04:28:32 UTC <tgeeky> hehe
2013-05-07 04:28:34 UTC <tgeeky> me too
2013-05-07 04:28:59 UTC <tgeeky> I'm still not sure if I believe in "ancient knowledge". But it doesn't seem absurd to me.
2013-05-07 04:29:44 UTC <tgeeky> Either way, they (the ancient Jews, in this case) don't get credit for it, because they didn't publish the medical studies along with the guidelines :)
2013-05-07 04:30:43 UTC <tgeeky> come to think of it, that would be hillarious if several of the redacted books of the New Testament were scientific results
2013-05-07 04:32:14 UTC <byorgey> hehe
2013-05-07 04:32:35 UTC <carter> https://github.com/bos/llvm/issues/50
2013-05-07 04:32:38 UTC <carter> oops
2013-05-07 04:32:40 UTC <carter> wrong window
2013-05-07 04:32:44 UTC <byorgey> OK, I'm off to bed, night all
2013-05-07 04:32:45 UTC <carter> 'night!
2013-05-07 04:32:51 UTC <tgeeky> night byorgey 
2013-05-07 14:44:04 UTC <tgeeky> byorgey: I hope you're ice fishing with elk and grizzlie bears, drinking molson and listening to the latest hockey match!
2013-05-07 14:45:14 UTC <luite> is he going canadian?
2013-05-07 14:45:23 UTC <luite> ah he is
2013-05-07 14:45:45 UTC <luite> cool
2013-05-07 14:45:59 UTC <tgeeky> luite: he is the newest proud visitor to our mighty Canuckistan
2013-05-07 14:46:10 UTC <tgeeky> our stout friends to the north
2013-05-07 14:46:17 UTC <luite> 'our', are you originally canadian?
2013-05-07 14:46:23 UTC <luite> or just friends :p
2013-05-07 14:46:39 UTC <tgeeky> they are such a nice people I include them as friends :)
2013-05-07 14:46:43 UTC <luite> hehe
2013-05-07 14:46:57 UTC <luite> i met lots of nice canadians in vancouver
2013-05-07 14:47:15 UTC <tgeeky> they really do live up to that reputation
2013-05-07 14:47:43 UTC <luite> american tourists were perhaps a bit more talkative on average
2013-05-07 14:48:02 UTC <luite> maybe just because they're tourists
2013-05-07 14:48:11 UTC <tgeeky> in TF2 if someone apologizes for taking an ammo or health pack, and it's not me, they're canadian
2013-05-07 14:48:32 UTC <luite> ah
2013-05-07 14:48:48 UTC <luite> hm i haven't played tf2 for a long time
2013-05-07 14:49:08 UTC <tgeeky> same game, more weapons, more hats, more silliness
2013-05-07 14:49:32 UTC <luite> yeah i downloaded it when it became free, played a few times
2013-05-07 14:49:42 UTC <tgeeky> oh.
2013-05-07 14:49:47 UTC <tgeeky> that wasn't that long ago.
2013-05-07 14:49:49 UTC <luite> which was after the hats i think
2013-05-07 14:49:55 UTC <tgeeky> yep
2013-05-07 14:50:41 UTC <luite> i don't play that many games though
2013-05-07 14:50:50 UTC <luite> perhaps i'll get the new sc2
2013-05-07 14:50:52 UTC <tgeeky> i don't play any except tf2
2013-05-07 14:51:06 UTC <tgeeky> it's one of the few that works in Linux, too
2013-05-07 14:51:13 UTC <luite> but i don't really want to invest the time to play online sc2 :)
2013-05-07 14:51:19 UTC <tgeeky> yeah.
2013-05-07 14:51:22 UTC <tgeeky> you'll get clobbered
2013-05-07 14:51:27 UTC <luite> it takes like 50 years to play like a korean
2013-05-07 14:51:50 UTC <tgeeky> and even then, some 9 year old korean will wipe us with zergling dust
2013-05-07 14:51:58 UTC <luite> :)
2013-05-07 14:52:25 UTC <luite> perhaps they should drug test the best korean players, it can't be humanly possible
2013-05-07 14:52:34 UTC <luite> videos always look scary
2013-05-07 14:52:45 UTC <luite> micromanaging everything while still expanding bases like crazy
2013-05-07 14:53:13 UTC <tgeeky> just imagine, soon enough we'll have actual people in actual militaries controlling armies of drones that way
2013-05-07 14:53:49 UTC <luite> those drones probably read 'samsung' then ;p
2013-05-07 14:53:54 UTC <luite> the new zerg
2013-05-07 14:56:06 UTC <luite> if only real armies would spend just as much time balancing the factions as blizzard does
2013-05-07 14:56:35 UTC <tgeeky> haha. Yeah, it is kind of weird when you state it that way.
2013-05-07 14:58:05 UTC <luite> having almost perfect balance sells a lot more drones, some companies must already be planning the unwinnable neverending war!
2013-05-07 14:58:25 UTC <tgeeky> yeah. In that sense, war has always been a racket.
2013-05-07 14:58:44 UTC <tgeeky> People have always funded both sides and waited to see who would come out on top
2013-05-07 14:59:15 UTC <tgeeky> there is a famous story about the Napoleonic wars and the Rockefellers slowing down the progress of a messenger with the news of battle results so they could corner a market
2013-05-07 14:59:37 UTC <luite> yeah recently read about that
2013-05-07 14:59:40 UTC <luite> +i
2013-05-07 15:00:14 UTC <tgeeky> and several American banks funded the Nazis almost until the end of WWII
2013-05-07 15:00:40 UTC <tgeeky> (and they got repaid, by reconstruction money)
2013-05-07 15:00:50 UTC <luite> not bad :)
2013-05-07 15:00:56 UTC <luite> well, from a business perspective
2013-05-07 15:01:39 UTC <tgeeky> hehe. yeah :|
2013-05-07 15:02:05 UTC <tgeeky> i have some good news about me: I'm not diabetic!
2013-05-07 15:02:16 UTC <luite> great!
2013-05-07 15:02:21 UTC <tgeeky> hour ~ 32 of a 72 hour fast, and my blood sugar is nice and steady
2013-05-07 15:02:23 UTC <luite> though i never suspected you were ;)
2013-05-07 15:03:03 UTC <tgeeky> http://i.imgur.com/dn2QikI.jpg
2013-05-07 15:03:10 UTC <tgeeky> haha, that picture is hillarious
2013-05-07 15:03:48 UTC <luite> hehe
2013-05-07 15:04:14 UTC <luite> how are you fasting, you still eating some stuff, or nothing at all?
2013-05-07 15:04:40 UTC <tgeeky> nothing at all. (black) coffee, and a half packet of cup-of-soup for minerals per day
2013-05-07 15:05:08 UTC <luite> no water, only coffee? o_O *twitch* ?
2013-05-07 15:05:16 UTC <tgeeky> hehe. I forgot water.
2013-05-07 15:05:43 UTC <tgeeky> it's been pretty much fine so far, no hunger that was more than distracting
2013-05-07 15:05:49 UTC <luite> i've been drinking more tea recently
2013-05-07 15:06:03 UTC <luite> but you need more than twice as much tea to get the same amount of cafeine!
2013-05-07 15:06:19 UTC <tgeeky> yep. your drinking black or green or white tea?
2013-05-07 15:06:47 UTC <luite> black, earl grey usually
2013-05-07 15:06:58 UTC <tgeeky> the 'ol Picard
2013-05-07 15:07:08 UTC <luite> 5 hour energy appears to be the most efficient way
2013-05-07 15:07:25 UTC <luite> it comes with free sugar and tooth decay
2013-05-07 15:07:29 UTC <tgeeky> I've never tried one of them. One my friends swears by them, and my brother said they don't do anything at all
2013-05-07 15:07:43 UTC <luite> i think they have twice as much cafeine as coffee
2013-05-07 15:07:52 UTC <luite> oh wait they have no sugar
2013-05-07 15:07:58 UTC <tgeeky> yeah, no sugar
2013-05-07 15:08:02 UTC <tgeeky> caffine + placebo
2013-05-07 15:10:50 UTC <luite> hm, 157mg in regular, 206mg in extra strength
2013-05-07 15:11:00 UTC <luite> according to wikipedia
2013-05-07 15:11:03 UTC <tgeeky> man first world problem. I want to get a fast SSD (Samsung 840 pro), but I only have SATAII available (which is slower). I could get a SATAIII card, but it requires a PCI-e v2.0 x1 slot, and my motherboard's x1 slots are all PCI-e v1.1, which are slower still.
2013-05-07 15:11:14 UTC <luite> aw :(
2013-05-07 15:11:26 UTC <luite> fortunately the sequential speeds aren't the most important
2013-05-07 15:11:28 UTC <tgeeky> because I have two, dual core, video cards running 4 monitors in my PCI-E v2.0 x16 slots
2013-05-07 15:11:43 UTC <luite> for most use cases at least
2013-05-07 15:11:47 UTC <tgeeky> yep
2013-05-07 15:11:54 UTC <luite> i kinda regret getting the 256GB 830 lastyear
2013-05-07 15:11:59 UTC <luite> it's always full
2013-05-07 15:12:04 UTC <tgeeky> i am getting a 128
2013-05-07 15:12:15 UTC <tgeeky> all I can afford. I don't think I even need the Pro
2013-05-07 15:12:35 UTC <luite> the 830 was cheap last year when the 840 was just introduced
2013-05-07 15:12:36 UTC <tgeeky> I am splitting it for a boot partition and a pair of cache partitions
2013-05-07 15:12:40 UTC <luite> selling off old stock
2013-05-07 15:12:47 UTC <tgeeky> yep. 840 is now $100
2013-05-07 15:12:54 UTC <tgeeky> 75 when sales are going on
2013-05-07 15:12:59 UTC <luite> oh right, this is in my laptop
2013-05-07 15:13:01 UTC <tgeeky> but you have a laptop, so you can only have one
2013-05-07 15:13:03 UTC <luite> so i can't really add another drive
2013-05-07 15:13:06 UTC <tgeeky> yep
2013-05-07 15:13:15 UTC <tgeeky> i have (4 + 1 + 1 + 1 + 0.5) TB now
2013-05-07 15:13:21 UTC <luite> not bad :)
2013-05-07 15:13:33 UTC <tgeeky> well, I'm not going to lose this stuff.
2013-05-07 15:13:41 UTC <tgeeky> The scare I had woke me up a bit.
2013-05-07 15:13:46 UTC <luite> oh right
2013-05-07 15:14:00 UTC <luite> i use crashplan for automatic backup
2013-05-07 15:14:02 UTC <luite> to a linux server
2013-05-07 15:14:16 UTC <luite> with some raid5 drives that can be expanded when necessary
2013-05-07 15:14:17 UTC <tgeeky> I have thought about (but not researched) online backup plans
2013-05-07 15:14:30 UTC <tgeeky> but I would be *required* to encrypt everything, and it would still be ~ 2.2 TB
2013-05-07 15:14:55 UTC <luite> you have 2.2TB of shady material ;p
2013-05-07 15:15:03 UTC <tgeeky> 2.2 TB is *just* the e-books
2013-05-07 15:15:18 UTC <luite> can still be shady, drone plans etc
2013-05-07 15:15:31 UTC <luite> did you download the whole libgen or something?
2013-05-07 15:15:32 UTC <tgeeky> yes. There are nuke plans in there
2013-05-07 15:15:45 UTC <tgeeky> alt.binaries.e-book.technical -- poster Rockhound
2013-05-07 15:15:47 UTC <luite> i saw that it was posted on usenet
2013-05-07 15:15:58 UTC <luite> but more like 10TB i think
2013-05-07 15:16:01 UTC <tgeeky> I think he's somewhere in the publishing pipeline
2013-05-07 15:16:07 UTC <tgeeky> and he routinely uploads brand new stuff
2013-05-07 15:16:08 UTC <luite> ah
2013-05-07 15:16:17 UTC <tgeeky> for several different companies (including the infamous Elisver)
2013-05-07 15:16:18 UTC <luite> or he just has access to some university library
2013-05-07 15:16:35 UTC <luite> and perhaps knows how to remove watermarks?
2013-05-07 15:16:52 UTC <tgeeky> I am not totally sure, and certainly won't ask :)
2013-05-07 15:17:04 UTC <luite> he probably wouldn't tell :)
2013-05-07 15:17:08 UTC <tgeeky> University libraries usually don't have textbooks in pdf format, do they?
2013-05-07 15:17:16 UTC <luite> utrecht has some
2013-05-07 15:17:28 UTC <luite> deal with springer i think
2013-05-07 15:17:36 UTC <luite> unfortunately i don't have access anymore
2013-05-07 15:17:46 UTC <luite> maybe they have more now, they only started last year
2013-05-07 15:17:54 UTC <tgeeky> Maybe it is through a Uni. Some of the books are actually "free" (published by Intech)
2013-05-07 15:18:58 UTC <luite> carmack is learning haskell :)
2013-05-07 15:19:18 UTC <tgeeky> I heard. He and his padawans at other companies have been talking about it for some time.
2013-05-07 15:19:21 UTC <tgeeky> about FP in general, at least.
2013-05-07 15:20:06 UTC <tgeeky> ACTION thinks if we weren't so wrapped up in using Haskell, we would say something like "Man, Haskell is a beautiful and wonderful language." daily
2013-05-07 15:21:41 UTC <luite> didn't cliffyb also mention it some time ago? i'm not sure what he does now though, after leaving epic
2013-05-07 15:21:51 UTC <tgeeky> yep
2013-05-07 15:21:56 UTC <tgeeky> me neither
2013-05-07 15:22:01 UTC <tgeeky> I know Carmark is in the rocket business
2013-05-07 15:24:25 UTC <luite> conals work also seems intriguing, he's compiling haskell to programmable logic. i don't know more than that though
2013-05-07 15:24:46 UTC <tgeeky> conal is one of the 'prolifics' I mentioned in #haskell
2013-05-07 15:34:05 UTC <luite> replicateM 5 fpu <> replicateM 12 alu -- multicore cpus!
2013-05-07 15:35:28 UTC <luite> hm, i wonder if i should add more g+ commuities
2013-05-07 15:35:31 UTC <luite> +n
2013-05-07 15:35:44 UTC <luite> are there interesting ones?
2013-05-07 15:35:50 UTC <tgeeky> dunno, I'm not on there
2013-05-07 15:37:16 UTC <luite> well, join the mathematics one if you want 0.999.. ~ 1  discussions and what is 5+5*5-5 discussions twice a week ;p
2013-05-07 15:38:31 UTC <luite> it's reather active though, perhaps theres some wheat in the chaff :p
2013-05-07 21:55:15 UTC <cmccann> luite and tgeeky: tim sweeney from epic is also familiar with haskell, fwiw
2013-05-07 21:55:21 UTC <cmccann> he even posts on LtU occasionally
2013-05-07 22:06:43 UTC <carter> cmccann btw.. i'm going llvm crazy now :)
2013-05-07 22:07:03 UTC <cmccann> carter: oh?
2013-05-07 23:30:18 UTC <luite> ah
2013-05-08 01:26:49 UTC <byorgey> I wrote some braindead (i.e. O(n^3)) code to compute Delaunay triangulations
2013-05-08 01:26:54 UTC <byorgey> and now I can't remember why I wanted it.
2013-05-08 01:27:09 UTC <byorgey> there was some diagram I wanted to draw.
2013-05-08 01:27:52 UTC <fryguybob> byorgey: hehe
2013-05-08 01:27:58 UTC <byorgey> in any case, http://www.cis.upenn.edu/~byorgey/hosted/Delaunay.pdf =)
2013-05-08 01:28:33 UTC <fryguybob> byorgey: I'm trying to decide about hac-phi.  I'd like to go but it is in the middle of four other weekends with things going on.
2013-05-08 01:28:41 UTC <byorgey> yikes
2013-05-08 01:29:40 UTC <byorgey> fryguybob: I would be ecstatic if you came.  But I most certainly understand if you can't.
2013-05-08 01:30:16 UTC <byorgey> ^^^ that was me not-helping you make a decision
2013-05-08 01:31:33 UTC <fryguybob> byorgey: Ha. I'm leaning toward going. Is there any deadline in deciding?
2013-05-08 01:31:44 UTC <byorgey> for you, no.
2013-05-08 01:33:09 UTC <fryguybob> Delaunay or the distribution of beans in byorgey's kitchen? You decide.
2013-05-08 01:33:39 UTC <byorgey> hahaha
2013-05-08 01:36:20 UTC <fryguybob> ACTION should make a Haskell parallel Delaunay... never enough time.
2013-05-08 01:36:51 UTC <byorgey> ooh, that would be nifty
2013-05-08 01:46:04 UTC <fryguybob> Ooo this paper started with a NESL version: http://www.cs.cmu.edu/afs/cs.cmu.edu/Web/People/blelloch/papers/delaunay99.pdf
2013-05-08 02:09:31 UTC <byorgey> neat
2013-05-08 03:05:39 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Delaunay2.pdf
2013-05-08 03:06:02 UTC <carter> byorgey i should be nerd snipable to do some computational geometry stuff (maybe) come hackphi
2013-05-08 03:06:09 UTC <carter> i hope
2013-05-08 03:09:29 UTC <byorgey> welcome yogert =)
2013-05-08 03:09:36 UTC <yogert> : )
2013-05-08 03:12:38 UTC <tgeeky> still going strong!
2013-05-08 03:14:34 UTC <yogert> cool stuff. I'm always interested in graphics stuff. I'm actually very new to haskell and attempted to get going with DevIL recently, but found myself a bit lost.
2013-05-08 03:15:14 UTC <byorgey> yogert: welcome!
2013-05-08 03:15:38 UTC <yogert> are you the author/maintainer of diagrams?
2013-05-08 03:15:48 UTC <byorgey> yogert: you can read more about diagrams here: http://projects.haskell.org/diagrams/
2013-05-08 03:15:54 UTC <byorgey> yogert: the primary one, yes
2013-05-08 03:15:58 UTC <byorgey> though there are many contributors
2013-05-08 03:16:24 UTC <tgeeky> he is our wise and gracious leader, third only to the head of Richard Nixon and the hypnotoad.
2013-05-08 03:18:00 UTC <byorgey> yogert: diagrams can have a bit of a learning curve, but there is a tutorial, user manual, and examples on the website, and you are always welcome to ask questions in here
2013-05-08 03:20:30 UTC <yogert> i'm reading the tutorial right now
2013-05-08 03:24:45 UTC <byorgey> yogert: I'm off to bed, but if you have any questions just leave them here and I'll answer in the morning, or maybe someone else will answer
2013-05-08 03:24:49 UTC <byorgey> have fun =)
2013-05-08 03:28:49 UTC <yogert> oh you can animate with this? Is it possible to incorporate interaction as well? SVG has some interactive features rightâ¦? 
2013-05-08 04:00:54 UTC <tgeeky> yogert: animation is possible and has been worked on in 'active'
2013-05-08 04:01:05 UTC <tgeeky> interaction is being thought about and possibly worked on
2013-05-08 04:06:44 UTC <yogert> yeah, i suppose it would mean somehow compiling to javascript
2013-05-08 04:08:55 UTC <tgeeky> yogert: that is a speciality of luite's
2013-05-08 04:09:01 UTC <tgeeky> yogert: he's working on GHCjs
2013-05-08 04:10:51 UTC <ClaudiusMaximus> yogert: mgsloan's gtk toy diagrams thingy has some interactive diagrams examples https://github.com/mgsloan/toy-gtk-diagrams
2013-05-08 04:14:49 UTC <yogert> oh terrific. perhaps this can supersede d3. : )  While it does a lot, I've always found its design very strange...
2013-05-08 04:15:14 UTC <tgeeky> yogert: several of us here have opinions about d3.
2013-05-08 04:15:28 UTC <yogert> mind sharing?
2013-05-08 04:15:42 UTC <tgeeky> Mine isn't that important, I like it, and I like anything with lots of examples.
2013-05-08 04:16:00 UTC <tgeeky> but Haskell is a better world to do everything in
2013-05-08 04:16:30 UTC <tgeeky> yogert: there are a few hackages packages which use d3.js as their UI of sorts
2013-05-08 04:17:18 UTC <tgeeky> criterion is one, I think
2013-05-08 04:18:00 UTC <yogert> i like it in so far I makes it relatively easy to accomplish a lot, but the way its designed always seemed very awkward to me. Also I don't like reading its source code
2013-05-08 04:18:57 UTC <yogert> what do you mean the packages use it as its UI? ill look criterion up now
2013-05-08 04:19:10 UTC <tgeeky> they use d3.js to draw diagrams for results
2013-05-08 04:19:31 UTC <yogert> oh okay
2013-05-08 04:19:47 UTC <tgeeky> UI was pushing it. I almost corrected myself, but I'm distracted too :)
2013-05-08 04:20:01 UTC <tgeeky> yogert: the real answer is, though, we're working on it
2013-05-08 04:20:39 UTC <yogert> cool. wish I could help :P
2013-05-08 04:21:44 UTC <tgeeky> you can. stick around. this is all open source
2013-05-08 17:40:22 UTC <fryguybob> ACTION has his area exam in 20 minutes, sadly it has no diagrams.
2013-05-09 02:03:56 UTC <byorgey> fryguybob: how'd it go?
2013-05-09 02:06:43 UTC <tgeeky> byorgey: so fasting is like monads, in that much of the difficulty is fabricated in our heads
2013-05-09 02:06:54 UTC <tgeeky> that said, fooooooood
2013-05-09 02:07:18 UTC <byorgey> hehe
2013-05-09 02:07:31 UTC <tgeeky> I found it to be occasionally very distracting, but otherwise pretty bearable
2013-05-09 02:07:48 UTC <tgeeky> it's much better than, say, having a cold or a sinus infection
2013-05-09 02:10:27 UTC <byorgey> oh, for sure
2013-05-09 02:10:42 UTC <tgeeky> I thought it would be much worse than that.
2013-05-09 02:11:21 UTC <tgeeky> byorgey: who, if anyone, reviews your beeminder other than internet stalkers like me?
2013-05-09 02:11:33 UTC <tgeeky> and is it telling that your three hidden beeminder goals all got updated while you're travelling?
2013-05-09 02:12:19 UTC <tgeeky> other than you, of course
2013-05-09 02:12:37 UTC <byorgey> tgeeky: no one
2013-05-09 02:12:44 UTC <tgeeky> not even your wife!?
2013-05-09 02:13:10 UTC <byorgey> tgeeky: hehe, I don't know, is it?  it means they are the type of goals that I want to continue doing even when travelling.
2013-05-09 02:13:31 UTC <tgeeky> byorgey: i was going to ask if they are positive or negative goals
2013-05-09 02:13:41 UTC <byorgey> tgeeky: not formally, I'm sure she has looked at it
2013-05-09 02:13:46 UTC <byorgey> they are positive
2013-05-09 02:15:11 UTC <fryguybob> byorgey: I survived. :D
2013-05-09 02:15:22 UTC <byorgey> fryguybob: glad to hear it!
2013-05-09 02:15:35 UTC <fryguybob> I ended up spending too much time giving Haskell background, but that's ok.
2013-05-09 02:15:46 UTC <byorgey> hehe
2013-05-09 02:16:23 UTC <fryguybob> Slides for my talk: http://www.cs.rochester.edu/u/ryates/files/ryates-area-slides.pdf
2013-05-09 02:18:01 UTC <tgeeky> fryguybob: it's unfair to say "under continual development for ~ 20 years" without mentioning the exponential growth
2013-05-09 02:19:13 UTC <fryguybob> tgeeky: True, I was making a different point then that I guess.  Just that the concepts are not new.
2013-05-09 02:19:46 UTC <tgeeky> fryguybob: I figured, but I guess that isn't even the subject of the talk. Also, even that's not fair, because some of the popular concepts are new
2013-05-09 02:19:58 UTC <tgeeky> conduits/pipes, lenses, etc
2013-05-09 02:20:19 UTC <tgeeky> for STM yeah actually, it is fair :)
2013-05-09 02:20:56 UTC <byorgey> fryguybob: nice!
2013-05-09 02:22:12 UTC <tgeeky> fryguybob: these slides are post-presentation?
2013-05-09 02:22:21 UTC <fryguybob> tgeeky: Yes :D
2013-05-09 02:22:43 UTC <tgeeky> what does the word hajim mean?
2013-05-09 02:22:51 UTC <tgeeky> or is it just a name in this case?
2013-05-09 02:22:57 UTC <fryguybob> Just a name
2013-05-09 02:23:21 UTC <fryguybob> ACTION drives away to get some sleep.
2013-05-09 02:23:25 UTC <fryguybob> Good night all!
2013-05-09 02:23:34 UTC <tgeeky> night
2013-05-09 02:35:23 UTC <andyjgill> byorgey: I reworked the active stuff this afternoon, as per our discussion last month.
2013-05-09 02:35:51 UTC <byorgey> andyjgill: oh, excellent!
2013-05-09 02:37:05 UTC <byorgey> andyjgill: I won't have time to take a look at it until next week -- I'm currently visiting Jacques Carette
2013-05-09 02:37:09 UTC <andyjgill> I'll rework the XOX example; and see if the idea works. 
2013-05-09 02:37:16 UTC <byorgey> sounds good
2013-05-09 02:37:31 UTC <andyjgill> No worries, I'm at TFP next week, and will not get properly online till the week after.
2013-05-09 02:37:46 UTC <byorgey> OK.
2013-05-09 02:38:15 UTC <tgeeky> andyjgill: are you ... a founding member and guitarist for the English rock group Gang of Four, considered among the most influential post-punk ...
2013-05-09 02:38:42 UTC <tgeeky> andyjgill: just teasing :(
2013-05-09 02:38:45 UTC <andyjgill> tgeeky: No, but I have had the other Andy Gill's fan mail.
2013-05-09 02:39:22 UTC <tgeeky> andyjgill: I've got to say, it's going to be tough for you to look more majestic than his google photo is.
2013-05-09 02:39:28 UTC <andyjgill> And I called my four star undergrad students my "gang of four".
2013-05-09 02:39:39 UTC <byorgey> ...influential post-punk design pattern experts?
2013-05-09 02:41:03 UTC <byorgey> ACTION -> bed
2013-05-09 02:41:12 UTC <tgeeky> hio
2013-05-09 22:55:01 UTC <tgeeky> cmccann: weird line of questioning, I guess, but here goes:
2013-05-09 22:55:11 UTC <tgeeky> you mentioned the interplay between order of arguments and partial application
2013-05-09 22:55:28 UTC <cmccann> yeah
2013-05-09 22:55:36 UTC <cmccann> it's a good rule of thumb for argument order
2013-05-09 22:56:52 UTC <tgeeky> to be precise, the most-likely-to-partially apply are left (outer)-most, right?
2013-05-09 22:57:16 UTC <cmccann> right
2013-05-09 22:57:37 UTC <tgeeky> so if had say 5 arguments, a b c d e
2013-05-09 22:57:44 UTC <cmccann> note that includes things like plausibility of using in a map or zipWith or whatnot
2013-05-09 22:58:08 UTC <tgeeky> you may need (a b c) to partially apply something
2013-05-09 22:58:17 UTC <tgeeky> but you should not get yourself in a situation where you need (c d e)
2013-05-09 22:58:29 UTC <cmccann> ideally
2013-05-09 22:58:36 UTC <cmccann> not always possible, though
2013-05-09 22:58:42 UTC <cmccann> and sometimes other concerns might dominate
2013-05-09 22:59:09 UTC <cmccann> like if you expect to use something infix-y Applicative style, order the arguments by what makes sense for the "actions"
2013-05-09 23:00:10 UTC <cmccann> (e.g., the order of fields in a data type being parsed should match the syntax of the input)
2013-05-09 23:01:08 UTC <cmccann> another consideration is possible sharing of intermediate computation when partially applying but that's getting a bit fiddly
2013-05-09 23:01:57 UTC <cmccann> (and mostly coincides with the likelihood of partial application bit anyway)
2013-05-09 23:01:59 UTC <tgeeky> so suppose you have a bunch more arguments (for a few different reasons, all well-inteneioned)
2013-05-09 23:02:22 UTC <tgeeky> say, twenty eight or so
2013-05-09 23:03:17 UTC <cmccann> that's when you reconsider your choices in life
2013-05-09 23:03:20 UTC <tgeeky> hehe :)
2013-05-09 23:03:38 UTC <tgeeky> well, first thing I intend to do is smartly prune all of them which aren't actually needed
2013-05-09 23:03:56 UTC <tgeeky> so I presume the a b c d e case is just a b c d e Void Void Void ...
2013-05-09 23:03:59 UTC <tgeeky> or something like that
2013-05-09 23:04:34 UTC <cmccann> if there are a well-defined number of possibilities, just make it a sum type for each group
2013-05-09 23:04:43 UTC <cmccann> with a smart constructor if needed to make sure invariants are checked
2013-05-09 23:06:43 UTC <cmccann> I mean I try to keep lines to mostly < 80 char wide when possible and usually no more than 100-ish at worst
2013-05-09 23:07:05 UTC <tgeeky> cmccann: yes, I mean to provide editor support for this scheme.
2013-05-09 23:07:15 UTC <cmccann> and you're talking at least, what, 60 chars wide just for the argument list? sweet flipping christ on a carousel that's crazy.
2013-05-09 23:07:31 UTC <tgeeky> cmccann: well, you would elide all of the unused ones in the editor
2013-05-09 23:09:37 UTC <cmccann> is this a special-purpose language? I'm not sure the world is ready for a general-purpose programming language that requires an editor to be usable :[
2013-05-09 23:09:52 UTC <tgeeky> cmccann: nope. just haskell. it's not a language.
2013-05-09 23:10:24 UTC <cmccann> well good luck then :P
2013-05-09 23:10:27 UTC <tgeeky> cmccann: the origin of the thought is learning the implementation of applicative
2013-05-09 23:10:41 UTC <cmccann> hm?
2013-05-09 23:10:50 UTC <tgeeky> that it can be implemented using a 2-tuple, and presumably bi-applicative can be implemented as a 3-tuple
2013-05-09 23:12:32 UTC <tgeeky> err
2013-05-09 23:12:36 UTC <tgeeky> first of all, scratch that lsat one
2013-05-09 23:12:54 UTC <tgeeky> no that's right. Applicative has (a, f a)
2013-05-09 23:13:05 UTC <tgeeky> Bi- has (g a, a, f a)
2013-05-09 23:13:50 UTC <tgeeky> cmccann: you can ignore me from now on. I've asked this question before and it's not well posed :)
2013-05-09 23:13:55 UTC <tgeeky> *for today
2013-05-09 23:13:56 UTC <cmccann> yeah I'm confused
2013-05-09 23:14:13 UTC <cmccann> what do you mean by (a, f a)?
2013-05-09 23:14:18 UTC <tgeeky> I sat down one day last year and find sources for all of the n-Functors and tried to find n-Applicatives
2013-05-09 23:15:53 UTC <tgeeky> I remember seeing an implementation of Idioms or Applicatives as a bunch of plumbing functions on 2-tuples
2013-05-09 23:16:07 UTC <tgeeky> along with assoc. operators, and other things like that
2013-05-09 23:17:03 UTC <tgeeky> cmccann: I doubt I can find the source easily today. I'll re-ask if I make progress. For now, pretend it never happened. :)
2013-05-09 23:17:41 UTC <cmccann> I'm just not sure what you mean by n-Functors in this case
2013-05-09 23:26:23 UTC <cmccann> tgeeky: incidentally, you know what Applicative really "means" in category theory terms, right?
2013-05-09 23:26:42 UTC <cmccann> the explanation in the haddocks is slightly misleading on that I think
2013-05-09 23:39:25 UTC <tgeeky> cmccann: I looked up the answer, after being afk for a while. 'lax monodial functor'
2013-05-09 23:39:32 UTC <tgeeky> I should have remembered that
2013-05-09 23:40:36 UTC <cmccann> yes
2013-05-09 23:41:05 UTC <cmccann> but being a closed functor is more relevant
2013-05-09 23:41:24 UTC <cmccann> (they're equivalent in this case)
2013-05-09 23:42:08 UTC <tgeeky> ACTION rembers reading a diagrammatic book of monodial categories
2013-05-09 23:42:37 UTC <tgeeky> yes, this thing: http://www.mscs.dal.ca/~selinger/papers/graphical.pdf
2013-05-09 23:43:32 UTC <cmccann> the essence of it is that Applicative instances are functors that preserve monoidal closed structure
2013-05-09 23:45:08 UTC <tgeeky> cmccann: your confusion stems from the fact that s/functors/bifunctors/ to that statement is nonsense
2013-05-09 23:45:12 UTC <tgeeky> ?
2013-05-09 23:45:14 UTC <tgeeky> (confusion from earlier)
2013-05-09 23:46:07 UTC <cmccann> I doubt it's nonsense, it just isn't clear to me what that would actually mean
2013-05-10 02:42:03 UTC <luite> bleh can't sleep
2013-05-10 06:38:24 UTC <werde29> Hi All!  I'm finding it hard to play around with diagrams in ghci, because most things do not have a Show instance.  So do you guys use a more reasonable print function with ghci -interactive-print, perhaps, or some other solution?
2013-05-10 06:45:39 UTC <werde29> surely it's a ghci problem and not specifically a diagrams problem. it's only that diagrams makes a very good example case for demonstrating the problem
2013-05-10 06:51:29 UTC <werde29> ghci's problem being "lack of introspection" for interactive development. (circle 1 # lc blue) , I want ghci to show me the structure of what I just wrote, so that I know and can understand. Couldn't care less for serialization 
2013-05-10 06:52:08 UTC <werde29> nor referential transparency
2013-05-11 01:41:03 UTC <luite> hm this is a tad distracting indeed
2013-05-11 01:41:05 UTC <luite> oops
2013-05-13 22:35:53 UTC <tgeeky> https://github.com/mhwombat/grid/wiki
2013-05-13 22:36:09 UTC <tgeeky> how cool is that?
2013-05-13 23:51:36 UTC <fryguybob> tgeeky: Mmmmm grids.
2013-05-13 23:52:33 UTC <fryguybob> byorgey: Do you know Satyan Devadoss?
2013-05-14 00:02:10 UTC <cmears> Do you know how the pictures in the grid wiki page were made?
2013-05-14 00:04:12 UTC <fryguybob> ACTION has the same question.
2013-05-14 01:14:02 UTC <cmears> The grid package is a prime candidate for diagrams embedded inline in the Haddock
2013-05-14 01:28:22 UTC <tgeeky> that's mhwombat (awwwwww)'s only github repo with writes, but it's a goodie
2013-05-14 02:30:58 UTC <andyjgill> byorgey: Can PC member submit to the FARM?
2013-05-14 11:42:01 UTC <byorgey> fryguybob: yes, the quite well actually, the Devadosses are great friends of ours
2013-05-14 11:49:49 UTC <byorgey> @tell andyjgill yes, PC members are explicitly invited to submit to FARM
2013-05-14 11:49:50 UTC <lambdabot> Consider it noted.
2013-05-14 11:53:32 UTC <ClaudiusMaximus> i clearly haven't trained google well enough - it serves me texan agriculture...
2013-05-14 11:54:30 UTC <ClaudiusMaximus> not sure if i can justify funding myself to another conference this year, sadly...
2013-05-14 11:55:47 UTC <ClaudiusMaximus> plus most of my code (in any language) is a horrible mess of hacks :)
2013-05-14 11:56:19 UTC <byorgey> hehe =)
2013-05-14 11:59:14 UTC <ClaudiusMaximus> met Henning at the Linux Audio Conference, his live-sequencer is nice - maybe if i get it running i could add diagrams visualisation to it
2013-05-14 11:59:45 UTC <byorgey> ClaudiusMaximus: ah, fun
2013-05-14 12:00:00 UTC <byorgey> diagrams visualization for live-sequencer would be really cool
2013-05-14 12:00:09 UTC <ClaudiusMaximus> would be nice to have a timeline of when the next name-bindings would take place
2013-05-14 12:00:22 UTC <ClaudiusMaximus> so you know how long you have to make your code changes
2013-05-14 12:39:40 UTC <fryguybob> byorgey: Cool! He's one of the speakers at the conference Rebekah and I are going to at the end of the month.
2013-05-14 14:38:29 UTC <luite> hm i hope diagrams would be fast enough
2013-05-14 14:38:37 UTC <luite> otherwise make it fast enough
2013-05-14 14:43:33 UTC <byorgey> yep
2013-05-14 14:43:55 UTC <byorgey> I might actually work on optimization at Hac Phi, not sure
2013-05-14 14:46:13 UTC <ClaudiusMaximus> well, the main diagram would only need to be updated at name-binding events or when the viewport needs to scroll or resize, and overlaying a current time cursor at ~30Hz shouldn't need much cpu?
2013-05-14 14:46:44 UTC <ClaudiusMaximus> if you're talking about the same thing (of course, moar fasts is always good)
2013-05-14 14:47:03 UTC <byorgey> ClaudiusMaximus: right, I think it should be OK
2013-05-14 14:47:30 UTC <byorgey> but optimization is one of those things I've been Meaning To Get Around To for quite a while
2013-05-14 14:49:08 UTC <byorgey> and am actually starting to care about (e.g. it would be nice if generating a one-minute-long animation took ten seconds instead of five minutes, etc.)
2013-05-14 14:49:09 UTC <ClaudiusMaximus> hehe, yes..
2013-05-14 14:49:10 UTC <mr-> byorgey: do you have ideas where to optimize?
2013-05-14 14:49:13 UTC <byorgey> mr-: yes, I have some ideas
2013-05-14 14:49:13 UTC <byorgey> but I would probably just start by doing some profiling
2013-05-14 14:49:35 UTC <fryguybob> Cutting out redundent information in backends that can handle it could help on two fronts.
2013-05-14 14:50:02 UTC <ClaudiusMaximus> fryguybob: you mean like <use> in svg?
2013-05-14 14:50:20 UTC <ClaudiusMaximus> fryguybob: or even just <g> to group things with the same attributes?
2013-05-14 14:50:27 UTC <byorgey> yes, that would probably help a lot
2013-05-14 14:50:49 UTC <fryguybob> ClaudiusMaximus: It is often the case that there are several primatives with exactly the same transforamtion matrix, but they all get their own one emitted.
2013-05-14 14:50:54 UTC <byorgey> ClaudiusMaximus: the second is the lowest-hanging fruit
2013-05-14 14:51:03 UTC <byorgey> recovering sharing would be really cool though
2013-05-14 14:51:08 UTC <luite> ClaudiusMaximus: it's worse, all attributes/transformations are sent to each element separately, no tree structure
2013-05-14 14:51:13 UTC <ClaudiusMaximus> fryguybob: i see
2013-05-14 14:51:22 UTC <byorgey> (and there are some nice well-known techniques for doing it)
2013-05-14 14:51:49 UTC <fryguybob> That one might not show up in profiling, but we know we need to do it anyway :D
2013-05-14 14:51:53 UTC <luite> i hope they don't rely on StableName
2013-05-14 14:52:12 UTC <fryguybob> luite: No good story for StableName in ghcjs?
2013-05-14 14:52:41 UTC <luite> hehe well they should work, but for some reason something goes wrong when running reactive-banana
2013-05-14 14:53:56 UTC <byorgey> luite: don't worry, I doubt we'll actually get around to recovering sharing anytime real soon
2013-05-14 14:54:21 UTC <byorgey> and if we do, it would be nice to use something like PHOAS instead of a hack like StableName
2013-05-14 14:55:31 UTC <luite> ah
2013-05-14 14:55:42 UTC <luite> i hope to fix the problem before release though
2013-05-14 14:56:07 UTC <byorgey> fryguybob: you know, if we could replicate using diagrams even one-tenth of the cool diagrams Satyan has ever made, we would have an insanely cool gallery =)
2013-05-14 14:56:19 UTC <byorgey> and it would probably drive all sorts of nifty features
2013-05-14 14:57:14 UTC <byorgey> actually, trying to get people to just *replicate* existing cool graphics is probably a good idea
2013-05-14 14:57:28 UTC <byorgey> we either end up with cool examples or with ideas for new features.
2013-05-14 14:57:37 UTC <luite> but i'm doing some optimization atm, reusing stack slots works now (compiler keeps track of what it knows is on the stack, so it can reorder stack frames and avoid rewriting data that's already on the stack somewhere), next step is unboxing some more things
2013-05-14 14:58:20 UTC <ClaudiusMaximus> byorgey: maybe porting this from processing would be nice? http://recodeproject.com/
2013-05-14 14:58:49 UTC <ClaudiusMaximus> though, that's more art than diagrams
2013-05-14 14:59:29 UTC <byorgey> ClaudiusMaximus: There is no bright line separating art and diagrams =)
2013-05-14 14:59:48 UTC <byorgey> ClaudiusMaximus: yes, that looks really cool!
2013-05-14 14:59:52 UTC <luite> hmm many look doable with diagrams :)
2013-05-14 15:00:02 UTC <byorgey> yes, many do, and some don't
2013-05-14 15:00:21 UTC <byorgey> in fact it's the ones that don't which are in some sense most interesting... what would need to change/be added to allow them?  etc.
2013-05-14 15:01:56 UTC <byorgey> yikes, some of the processing code here is mind-numbingly awful
2013-05-14 15:02:16 UTC <ClaudiusMaximus> btw, here are the slides that i made with diagrams http://mathr.co.uk/lyapunov-fm/lyapunov-fm_lac2013_slides.pdf (6.3MB, rasterized...)
2013-05-14 15:02:24 UTC <byorgey> sweet!
2013-05-14 15:02:31 UTC <ClaudiusMaximus> byorgey: lots of copy/paste instead of loops?
2013-05-14 15:02:42 UTC <ClaudiusMaximus> (haven't actually checked the code yet)
2013-05-14 15:02:47 UTC <byorgey> ClaudiusMaximus: yes
2013-05-14 15:03:06 UTC <byorgey> and just the fact that it is very low-level... begin_shape(), restore_matrix(), etc. etc.
2013-05-14 15:03:11 UTC <byorgey> exactly the kind of thing diagrams lets you avoid
2013-05-14 15:03:12 UTC <ClaudiusMaximus> ah yes
2013-05-14 15:03:31 UTC <luite> are they supposed to be a direct translation of the original program?
2013-05-14 15:03:47 UTC <byorgey> oh, good question, I don't know
2013-05-14 15:05:36 UTC <ClaudiusMaximus> the page says "The majority of the artworks have no code published alongside the original result"
2013-05-14 15:05:59 UTC <ClaudiusMaximus> so there's just scanned pdfs of magazine
2013-05-14 15:07:20 UTC <byorgey> I see
2013-05-14 15:11:25 UTC <luite> ah
2013-05-14 15:17:44 UTC <fryguybob> byorgey: Yeah I saw a small sampling of thing on his website.  I'll have to look for more.
2013-05-14 15:29:51 UTC <byorgey> http://www.haskell.org/haskellwiki/Diagrams/Projects
2013-05-14 15:30:16 UTC <byorgey> folded the GSoC page back into the projects page, and added a project for reproducing existing cool graphics
2013-05-14 15:30:55 UTC <byorgey> with links to Satyan Devadoss's page, recodeproject, Bridges, and some other stuff
2013-05-14 15:30:55 UTC <byorgey> feel free to add other ideas!
2013-05-14 15:34:46 UTC <fryguybob> byorgey: I'm going to add a link to the projects page in the Hac-\phi project page.
2013-05-14 15:34:57 UTC <byorgey> fryguybob: good idea, thanks
2013-05-14 17:31:33 UTC <byorgey> new project idea: generate "connect-the-dots" puzzles given line drawings as inputs =)
2013-05-14 17:33:21 UTC <ClaudiusMaximus> there are bindings to OpenCV right?
2013-05-14 17:33:59 UTC <ClaudiusMaximus> -> connect-the-dots animation flipbook generator
2013-05-14 17:35:11 UTC <byorgey> =)
2013-05-14 17:35:18 UTC <byorgey> yes, I think there are bindings to OpenCV
2013-05-14 17:35:39 UTC <ClaudiusMaximus> (though OpenCV is huge so the bindings are probably incomplete)
2013-05-14 19:16:36 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14ff923b8 http://travis-ci.org/diagrams/diagrams-doc/builds/7165487 The build has errored.
2013-05-14 19:16:47 UTC <byorgey> whyyyyyy
2013-05-14 19:19:13 UTC <byorgey> oh, I see why
2013-05-14 19:38:34 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 147f965f6 http://travis-ci.org/diagrams/diagrams-doc/builds/7166251 The build has errored.
2013-05-14 22:11:30 UTC <ClaudiusMaximus> has anyone used diagrams with wx?
2013-05-15 02:32:28 UTC <tgeeky> ACTION is confused about beeminder. I finished my goal early, but nothing has happened.
2013-05-15 02:35:27 UTC <luite> were you expecting a reward?
2013-05-15 02:35:37 UTC <tgeeky> no, but I was expecting something to happen. :O
2013-05-15 02:36:01 UTC <tgeeky> on the example beeminder charts, there is a "Success!" thing at the top
2013-05-15 02:37:24 UTC <tgeeky> ut oh, I've broken it now.
2013-05-15 02:37:40 UTC <tgeeky> it gives me 5485 days, 1 hour, 22 min, 26 seconds to complete my goal
2013-05-15 11:41:10 UTC <byorgey> tgeeky: it only says "success!" when you actually reach your goal
2013-05-15 11:41:26 UTC <byorgey> tgeeky: you can change the goal date to a week from now if it is way in the future
2013-05-15 11:41:49 UTC <byorgey> and when I say "reach your goal" I mean reach the *date* of your goal, not just the *amount*
2013-05-15 17:02:04 UTC <tgeeky> byorgey: yep, that's what I figured. I did that (moved the date up), but hit retroratchet and now the graph is all screwey. I wish they included an undo retroratchet button :o
2013-05-15 17:02:23 UTC <byorgey> oh, boo =(
2013-05-15 17:02:45 UTC <tgeeky> https://www.beeminder.com/technogeeky/goals/stationary :(
2013-05-15 17:02:46 UTC <byorgey> tgeeky: if you email them I'm sure they will undo it for you.
2013-05-15 17:02:51 UTC <byorgey> they are really nice about stuff like that.
2013-05-15 17:10:49 UTC <tgeeky> byorgey: done. Did you end up using pledges to get past the 7 pledgeless goals limit?
2013-05-15 17:11:12 UTC <byorgey> tgeeky: I don't think I've come up against it yet, they grandfathered in any existing pledgeless goals
2013-05-15 17:11:27 UTC <tgeeky> ah, this was before they had the limit, ok that makes sense
2013-05-15 17:12:10 UTC <tgeeky> I think I'm going to make a real-name account, and another account for other things like my puppy (brush his teeth, give his meds, groom him, etc)
2013-05-15 17:13:06 UTC <tgeeky> the main thing I want now is the ability to do data entry to beeminder using a voice recognition program
2013-05-15 17:13:24 UTC <byorgey> if you mean in order to get around the 7 pledgeless goal limit, I cannot condone dishonesty
2013-05-15 17:13:47 UTC <tgeeky> byorgey: oh, no... I mean because they aren't my goals, they are my dog's goals, but he can't use beeminder :O
2013-05-15 17:14:00 UTC <tgeeky> i'll have far more than 7 goals in my beeminder
2013-05-15 17:14:02 UTC <byorgey> those don't sound like your dog's goals to me
2013-05-15 17:14:14 UTC <byorgey> your dog has a goal to brush his own teeth?
2013-05-15 17:14:24 UTC <tgeeky> his doctor has a goal, and he hasn't been doing it :(
2013-05-15 17:14:46 UTC <byorgey> well tell your dog's doctor to get over there and start brushing your dog's teeth then
2013-05-15 17:15:13 UTC <tgeeky> byorgey: actually, a way to simply catagorize one account's beeminders on the frontpage would suffice, too
2013-05-15 17:15:31 UTC <byorgey> hehe, I do understand about categorization
2013-05-15 17:16:26 UTC <tgeeky> I've wanted for some time a way to have my smartphone + lapel (shirt) microphone to voice recognize simple robotic-like phrases (so not full natural language)
2013-05-15 17:17:01 UTC <tgeeky> seems like a nice first target to have it enter data for me when I say something like "stationary 14 12.00"
2013-05-15 17:18:37 UTC <tgeeky> btw, you had a commit that referenced IRC Logs. is #diagrams logged completely?
2013-05-15 17:19:08 UTC <byorgey> tgeeky: yes, it is
2013-05-15 17:19:13 UTC <byorgey> sorry if you didn't know that
2013-05-15 17:19:20 UTC <byorgey> (it's in the /topic)
2013-05-15 17:19:27 UTC <tgeeky> so it is :O
2013-05-15 17:19:34 UTC <tgeeky> oh well, I haven't embarassed myself too much
2013-05-15 17:19:44 UTC <byorgey> I don't think so =)
2013-05-15 17:20:16 UTC <tgeeky> i don't know why I never look at titles with irssi. I never had that problem with other IRC clients
2013-05-15 17:20:25 UTC <byorgey> actually, I don't either
2013-05-15 17:21:14 UTC <byorgey> irssi displays the topic in a very unobtrusive place, far away from where you are usually looking
2013-05-15 17:21:40 UTC <tgeeky> yep, and I don't think it displays the topic in the channel area on join, by default.
2013-05-15 17:21:59 UTC <byorgey> right, maybe not
2013-05-15 17:22:33 UTC <byorgey> anyway, if you ever want something to be off the record, you just have to tell me before the next time I commit the IRC logs
2013-05-15 17:22:52 UTC <byorgey> they are only logged to my local machine and I have to periodically record the changes and push
2013-05-15 17:22:56 UTC <tgeeky> hehe. OK. I doubt I ever will. :O
2013-05-15 17:23:13 UTC <tgeeky> wait, how does logging continue when you turn your computer off?
2013-05-15 17:23:28 UTC <tgeeky> is it the bot who logs?
2013-05-15 17:24:19 UTC <tgeeky> ACTION also doesn't have join/quits turned on, so never knows if people leave :O
2013-05-15 17:24:31 UTC <byorgey> tgeeky: the logging does not continue when I turn my computer off.
2013-05-15 17:24:44 UTC <byorgey> there is a bot, diagrams-hog
2013-05-15 17:25:38 UTC <byorgey> LVN513-9 :: ~ Â» uptime
2013-05-15 17:25:41 UTC <byorgey>  13:25pm  up 54 days  6:25,  5 users,  load average: 0.00, 0.01, 0.05
2013-05-15 17:26:06 UTC <tgeeky> nice. there's a barely used, stable computer
2013-05-15 17:26:28 UTC <byorgey> yep, this is the machine on my desk at school, which is provided by Penn
2013-05-15 17:27:16 UTC <tgeeky> you have missed some conversations after you slept, then
2013-05-15 17:27:24 UTC <tgeeky> some of my embarassing ones were in there, but some other ones were in there too
2013-05-15 17:27:31 UTC <tgeeky> ACTION shrugs
2013-05-15 17:27:33 UTC <tgeeky> no biggie.
2013-05-15 17:28:04 UTC <byorgey> the bot sometimes gets disconnected and it takes me a while to notice.
2013-05-15 17:46:20 UTC <mgsloan> woohoo!
2013-05-15 17:46:49 UTC <byorgey> not quite done merging it all in yet but getting close =)
2013-05-15 17:46:57 UTC <byorgey> I mean, it compiles
2013-05-15 17:47:09 UTC <byorgey> but I still want to look over the instances for segments, trails, etc.
2013-05-15 17:47:26 UTC <byorgey> mgsloan: actually, did you even add an instance for trails?  I haven't looked
2013-05-15 17:47:32 UTC <byorgey> I'm guessing not
2013-05-15 17:47:48 UTC <mgsloan> Right, there are some missing instances
2013-05-15 17:47:58 UTC <byorgey> OK, makes sense
2013-05-15 17:48:06 UTC <mgsloan> I agree that keeping paths to (0..1) might make sense
2013-05-15 17:48:15 UTC <mgsloan> this'd obviate DomainBounds
2013-05-15 17:48:26 UTC <luite> \o/
2013-05-15 17:48:29 UTC <luite> i think
2013-05-15 17:48:38 UTC <byorgey> well, I can imagine cases where you would still want it
2013-05-15 17:48:56 UTC <byorgey> i.e. (0,1) is the *default* parametrization but maybe you explicitly want a different one
2013-05-15 17:49:01 UTC <byorgey> I'm not sure
2013-05-15 17:49:03 UTC <mgsloan> on the other hand, it means a lot of function will need to divide the parameter by the seg count
2013-05-15 17:49:18 UTC <byorgey> true
2013-05-15 18:24:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 1459b976a http://travis-ci.org/diagrams/diagrams-lib/builds/7195443 The build failed.
2013-05-15 18:46:32 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 1453513d7 http://travis-ci.org/diagrams/diagrams-lib/builds/7196579 The build was fixed.
2013-05-15 20:12:41 UTC <tgeeky> amazing. I got a genetic assay back today which says due to two genes variants I have, a medicine I have been taking for several years now is not doing anything
2013-05-15 21:06:49 UTC <byorgey> tgeeky: doh.
2013-05-16 13:51:20 UTC <byorgey> argh, looks like this parametric stuff is going to finally force me to straighten out the situation with open/closed trails
2013-05-16 13:52:31 UTC <byorgey> for efficiency, we need to cache the segment count of a trail
2013-05-16 13:53:14 UTC <byorgey> how many segments does a closed trail have? and right now, reversing a closed trail actually increases its segment count
2013-05-16 13:53:40 UTC <byorgey> for now we've kind of lived with that bug but it's absolutely inexcusable if we're going to have trails be parameterized.
2013-05-16 14:24:33 UTC <fryguybob> byorgey: Humm, indeed.
2013-05-16 14:43:37 UTC <byorgey> I have some notes brainstorming notes here from when I had jury duty
2013-05-16 14:43:42 UTC <byorgey> s/notes//
2013-05-16 14:44:22 UTC <byorgey> they involve making Segment and Trail into GADTs parameterized over a phantom type parameter which is either Open or Closed
2013-05-16 14:45:01 UTC <byorgey> I haven't decided yet whether this is a brilliant or a terrible idea
2013-05-16 14:48:08 UTC <byorgey> I think it would also involve representing trails as trees, maybe fingertrees
2013-05-16 14:48:34 UTC <byorgey> which is probably good idea independently.
2013-05-16 14:56:12 UTC <mgsloan> hmm, yeah, that could be pretty cool
2013-05-16 14:56:19 UTC <mgsloan> measured monoids for arclength!
2013-05-16 14:59:05 UTC <fryguybob> byorgey: So most functions could consume things polymorphic in their Open or Closed-ness?
2013-05-16 14:59:31 UTC <byorgey> mgsloan: yes! for arc length, number of segments, total offset, etc.
2013-05-16 14:59:45 UTC <mgsloan> fun!
2013-05-16 14:59:47 UTC <byorgey> fryguybob: yes, probably
2013-05-16 15:00:03 UTC <byorgey> though note, for example, that there would only be a Monoid instance for  Trail Open
2013-05-16 15:00:26 UTC <byorgey> I just wrote out a few more notes here and I think I
2013-05-16 15:00:44 UTC <byorgey> 'm actually liking this.  I'll hack something up in a branch and you guys can see what you think.
2013-05-16 15:00:57 UTC <fryguybob> byorgey: Sounds good.
2013-05-16 15:03:13 UTC <byorgey> ugh, I have so many branches with half-finished features, it makes me feel icky
2013-05-16 15:03:25 UTC <fryguybob> hehe
2013-05-16 15:03:25 UTC <byorgey> on the other hand, I should be thankful that git makes it even possible
2013-05-16 15:10:41 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 145cd7be8 http://travis-ci.org/diagrams/diagrams-lib/builds/7221986 The build passed.
2013-05-16 15:26:47 UTC <byorgey> bee-coh is what it sounds like when Noah says "open, close" =)
2013-05-16 15:27:57 UTC <byorgey> aaand I'm off to Colorado for a wedding.  later all.
2013-05-16 15:28:23 UTC <mgsloan> Enjoy!
2013-05-16 15:32:48 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14760172a http://travis-ci.org/diagrams/diagrams-lib/builds/7222725 The build failed.
2013-05-16 17:30:51 UTC <luite> dhm
2013-05-16 17:30:53 UTC <luite> oop
2013-05-16 17:30:54 UTC <luite> s
2013-05-17 21:50:42 UTC <luite> fryguybob: tnx for the stm description, really useful :)
2013-05-17 22:03:57 UTC <fryguybob> luite: Thanks! I hope it is useful.  I certainly learned a lot writing it.
2013-05-17 22:52:06 UTC <luite> i should probably try implementing it :)
2013-05-17 23:08:33 UTC <tgeeky> luite: do you mean, using it?
2013-05-17 23:10:50 UTC <fryguybob> tgeeky: A JS implementation for the ghcjs rts I would assume.
2013-05-17 23:11:18 UTC <tgeeky> oh. that makes more sense, but doesn't sound any less ambitious
2013-05-17 23:18:34 UTC <luite> hm
2013-05-17 23:18:40 UTC <luite> yes that's what i meant
2013-05-18 01:25:20 UTC <tgeeky> fryguybob: This is probably wrong? "very every" Global data invariant checks can be introduced with the always operation which demands that the transaction it is given results in True very every transaction that is committed globally.
2013-05-18 01:38:17 UTC <fryguybob> tgeeky: Humm looks like some of that got cut out.  Thanks!
2013-05-18 01:42:04 UTC <fryguybob> tgeeky: Fixed, it takes a minute or two for the change to show up.
2013-06-04 20:24:17 UTC <luite_> byorgey: looks like my pull req text was borked a bit because of the html tag
2013-06-04 20:24:19 UTC <luite_> s
2013-06-04 20:24:46 UTC <luite_> byorgey: it uses <pre class="sourceCode haskell"><code class="sourceCode haskell"> for haskell blocks
2013-06-04 20:25:03 UTC <byorgey> cool
2013-06-04 20:25:28 UTC <luite_> and it doesn't omit the <code> tag anymore when running --hscolour-css (it was inserted only for icss)
2013-06-04 20:26:00 UTC <byorgey> sounds good
2013-06-04 20:31:38 UTC <luite_> is there a way to have --upload-images and --hscolour-css set by default?
2013-06-04 20:33:40 UTC <byorgey> luite_: you can make a profile
2013-06-04 20:34:05 UTC <byorgey> I forget if you can specify hscolour-css in a profile, but you can certainly set upload-images
2013-06-04 20:34:19 UTC <byorgey> and if you can't specify hscolour-css it's only because I hadn't gotten around to adding it
2013-06-04 20:34:28 UTC <byorgey> not for any fundamental reason
2013-06-04 20:35:18 UTC <byorgey> luite_: search for the "Profiles" section on http://byorgey.wordpress.com/blogliterately/
2013-06-04 20:43:22 UTC <luite_> ah hscolour doesn't seem to be there, i've added upload-images
2013-06-05 01:52:56 UTC <byorgey> !botsnack
2013-06-05 01:52:56 UTC <diagramsbot> :)
2013-06-05 01:53:07 UTC <byorgey> !type hcat
2013-06-05 01:53:08 UTC <diagramsbot> Not in scope: `hcat'
2013-06-05 01:57:07 UTC <byorgey> > 2 + 3
2013-06-05 01:57:10 UTC <diagramsbot>   mueval-core: GhcException "cannot satisfy -package lambdabot\n    (use -v f...
2013-06-05 01:57:26 UTC <byorgey> !type hcat
2013-06-05 01:57:27 UTC <diagramsbot> Not in scope: `hcat'
2013-06-05 01:57:31 UTC <byorgey> !type repeat
2013-06-05 01:57:32 UTC <diagramsbot> a -> [a]
2013-06-05 02:10:56 UTC <cmears> poor diagramsbot
2013-06-05 02:25:59 UTC <byorgey> the new lambdabot code reorganization is quite nice, but still a bit rough around the edges
2013-06-05 02:26:14 UTC <byorgey> I wanted to get a version of lambdabot that has diagrams stuff in scope
2013-06-05 02:26:26 UTC <byorgey> but haven't been able to get it to work yet, obviously =)
2013-06-05 10:33:43 UTC <notdan> hi
2013-06-05 10:46:10 UTC <luite> hello
2013-06-05 20:50:57 UTC <jbracker_> byorgey: How do I test if a backend works or not? I remember there was some kind of test suite somewhere
2013-06-05 20:51:46 UTC <byorgey> jbracker_: https://github.com/diagrams/diagrams-backend-tests
2013-06-05 20:51:58 UTC <jbracker_> thanks!
2013-06-05 20:52:02 UTC <byorgey> sure
2013-06-05 20:53:51 UTC <luite> byorgey: do you have an example somewhere that draws a tree with arrows to connect the nodes and labels for the arrows?
2013-06-05 20:57:12 UTC <byorgey> luite: hmm, I don't think I have anything like that
2013-06-05 20:57:18 UTC <byorgey> but I could easily construct one for you
2013-06-05 20:57:24 UTC <byorgey> be back in a minute
2013-06-05 21:02:12 UTC <byorgey> OK, I'm back
2013-06-05 21:08:05 UTC <byorgey> luite: if only I could just show you an example on some sort of diagrams paste site... ;-)
2013-06-05 21:08:10 UTC <luite> hehe
2013-06-05 21:08:28 UTC <luite> well notdan seems to be making good progress
2013-06-05 21:08:32 UTC <byorgey> indeed
2013-06-05 21:08:37 UTC <byorgey> ACTION is excited
2013-06-05 21:10:01 UTC <byorgey> luite: to draw a tree you get to give an arbitrary function for drawing nodes, and another function for drawing edges which is given two points and also the data at the two nodes
2013-06-05 21:10:16 UTC <byorgey> so you just need a way to draw a labelled edge
2013-06-05 21:10:51 UTC <byorgey> we don't have anything specifically for drawing labelled edges but it's not too bad to do manually
2013-06-05 21:11:08 UTC <luite> ah, i see now
2013-06-05 21:11:40 UTC <luite> renderTree from diagrams-extras
2013-06-05 21:11:45 UTC <byorgey> right
2013-06-05 21:12:06 UTC <byorgey> or renderTree'
2013-06-05 21:12:11 UTC <luite> and arrowheads, do they work in 0.6.0.x?
2013-06-05 21:12:22 UTC <byorgey> depending on how much info you need to draw the connections
2013-06-05 21:12:30 UTC <byorgey> arrowheads do not work in any version ;-)
2013-06-05 21:12:39 UTC <luite> oh, but triangles do? :)
2013-06-05 21:12:44 UTC <byorgey> indeed =)
2013-06-05 21:13:03 UTC <byorgey> we *will* have some nice arrow-drawing stuff soon
2013-06-05 21:13:13 UTC <luite> i need it now ;)
2013-06-05 21:13:17 UTC <luite> want to post before hac phi
2013-06-05 21:13:46 UTC <byorgey> hehe
2013-06-05 21:14:14 UTC <byorgey> well, it's not too hard to implement a specific style of straight arrows yourself
2013-06-05 21:14:28 UTC <byorgey> just more verbose
2013-06-05 21:14:38 UTC <byorgey> I'm also happy to help
2013-06-05 21:14:59 UTC <luite> i'll tinker a bit myself first
2013-06-05 21:15:02 UTC <byorgey> ok
2013-06-05 21:15:30 UTC <byorgey> I'll go continue shaving the yak behind the yak behind the arrows yak
2013-06-05 21:15:32 UTC <luite> you can proofread my post later or tomorrow if you want :)
2013-06-05 21:15:40 UTC <byorgey> sure, I'd be glad to
2013-06-05 21:15:44 UTC <luite> scary, posting something on the web for everyone to see
2013-06-05 21:16:07 UTC <byorgey> super scary
2013-06-05 21:17:03 UTC <luite> bah i'm sad i'm not going to hac phi :(  but at least i'm going to austria, mountainbiking and hiking, in a week
2013-06-05 21:26:29 UTC <byorgey> luite: ooh, sounds awesome
2013-06-05 21:26:53 UTC <byorgey> luite: I'm sad you're not coming to hac phi too.  I really want to meet you.
2013-06-05 21:27:00 UTC <byorgey> I wish I had some money to fly you here.
2013-06-05 21:27:37 UTC <byorgey> well, we *did* have some money, but we blew it all on food
2013-06-05 21:29:51 UTC <luite> aw, food :(
2013-06-05 21:30:41 UTC <luite> austria is a lot cheaper for me since my parents are already paying :)
2013-06-05 21:30:57 UTC <byorgey> ah, nice =)
2013-06-05 21:32:36 UTC <luite> ill still come to icfp though probably... but i'm not sure if i get a paper for the haskell symposium done in time. otherwise i'll try to get a system demo
2013-06-05 21:32:58 UTC <byorgey> cool 
2013-06-05 21:33:03 UTC <byorgey> are you working on a paper?
2013-06-05 21:33:11 UTC <byorgey> about ghcjs I presume
2013-06-05 21:33:17 UTC <luite> ghcjs is not really researchy
2013-06-05 21:33:26 UTC <byorgey> oh
2013-06-05 21:33:42 UTC <byorgey> about what then?
2013-06-05 21:33:47 UTC <luite> oh no about ghcjs
2013-06-05 21:33:53 UTC <luite> but i'm not sure if it's researchy enough
2013-06-05 21:34:22 UTC <byorgey> oh, sorry, I misunderstood.
2013-06-05 21:34:26 UTC <byorgey> Right, I don't know.
2013-06-05 21:35:04 UTC <byorgey> well in any case I think a system demonstration would definitely be cool.
2013-06-05 21:35:13 UTC <byorgey> you should submit one of those even if you also submit a paper
2013-06-05 21:55:15 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 141ddf126 http://travis-ci.org/diagrams/diagrams-lib/builds/7821890 The build is still failing.
2013-06-05 22:51:29 UTC <jbracker_> byorgey: Slowly getting the sunroof backend to work
2013-06-05 22:52:06 UTC <jbracker_> shall I fork the backend tests and do a pull request for my sunroof tests?
2013-06-05 22:53:33 UTC <jbracker_> I'll just do so...
2013-06-06 01:37:23 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 1419e7f62 http://travis-ci.org/diagrams/diagrams-lib/builds/7826768 The build was fixed.
2013-06-06 01:40:13 UTC <byorgey> it compiles!!
2013-06-06 01:40:41 UTC <byorgey> however:
2013-06-06 01:40:57 UTC <byorgey> grep -R 'undefined' | wc -l
2013-06-06 01:41:02 UTC <byorgey> 25
2013-06-06 01:41:20 UTC <byorgey> bit of work still to do =)
2013-06-06 01:52:13 UTC <cmears> http://www.cmears.id.au/files/plot.png
2013-06-06 01:52:18 UTC <cmears> pretty chart via diagrams
2013-06-06 01:53:31 UTC <fryguybob> cmears: Nice!
2013-06-06 01:54:02 UTC <cmears> thanks (:
2013-06-06 01:54:49 UTC <cmears> I used SVGFonts for the axis labels, which is how I managed to get them to be right-aligned
2013-06-06 01:55:25 UTC <byorgey> cmears: oooh, awesome!
2013-06-06 01:55:33 UTC <byorgey> ah, very nice
2013-06-06 01:55:45 UTC <byorgey> I keep intending to try out SVGFonts
2013-06-06 01:56:08 UTC <cmears> and I generate a PDF version to include in a PDF document, and it zooms in and out nicely
2013-06-06 01:56:19 UTC <cmears> (the fonts in a PNG get fuzzy when you zoom out)
2013-06-06 01:57:29 UTC <cmears> Some advice for SVGFonts: don't try to stroke the characters
2013-06-06 01:57:36 UTC <cmears> set the line-width to zero and use fill
2013-06-06 01:57:59 UTC <cmears> text' s = (stroke $ textSVG' (TextOpts s lin2 INSIDE_H KERN False 0.4 0.4)) # fc black # lw 0
2013-06-06 01:58:16 UTC <cmears> is how I did it -- just use that function instead of "text"
2013-06-06 02:03:09 UTC <byorgey> noted, thanks
2013-06-06 02:07:06 UTC <byorgey> arc length, number of segments, total offset -- any other monoidal annotations you might want on a fingertree of segments?
2013-06-06 02:08:05 UTC <cmears> maybe the index of the segment?
2013-06-06 02:08:11 UTC <cmears> oh
2013-06-06 02:08:15 UTC <cmears> do you get that anyway with the fingertree?
2013-06-06 02:08:22 UTC <byorgey> that's covered by "number of segments"
2013-06-06 02:08:35 UTC <byorgey> I didn't explain that one very wel
2013-06-06 02:08:48 UTC <cmears> oh, I see (:
2013-06-06 02:09:03 UTC <byorgey> every subtree will cache the number of segments it contains, which you can use to do log(n) indexing
2013-06-06 02:09:32 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14b223bea http://travis-ci.org/diagrams/diagrams-lib/builds/7827326 The build passed.
2013-06-06 02:10:00 UTC <byorgey> well, we can easily add more at any time, just thought I'd ask =)
2013-06-06 02:24:23 UTC <mgsloan> Yeah, I can't think of anything else that reasonably accumulates :D
2013-06-06 02:29:57 UTC <mgsloan> Hmm, unless Segment will eventually have other types of curves, one possible monoid is the number of handles
2013-06-06 02:30:14 UTC <mgsloan> I'd hold off on that, though
2013-06-06 02:30:54 UTC <mgsloan> If anyone was going to associate handles with a path, they'd want to keep track of which segment each handle was associated with, anyway
2013-06-06 04:40:29 UTC <cmears> http://www.cmears.id.au/files/excerpt.png
2013-06-06 04:40:49 UTC <cmears> excerpt from Latex document with pretty diagrammy charts
2013-06-06 04:44:38 UTC <carter> cmears whats that?
2013-06-06 04:44:39 UTC <carter> ooo
2013-06-06 04:44:43 UTC <carter> explain more
2013-06-06 04:45:35 UTC <carter> cmears is the plotting codes online?
2013-06-06 04:45:36 UTC <cmears> I've been making some charts using diagrams
2013-06-06 04:45:39 UTC <carter> neat
2013-06-06 04:45:46 UTC <cmears> It's all a bit ad hoc at the moment
2013-06-06 04:45:50 UTC <carter> cmears i was planning to a year ago, but I got distracted
2013-06-06 04:45:55 UTC <carter> I first has to fix numerical computation
2013-06-06 04:46:00 UTC <carter> I'm nearly done with that part :)
2013-06-06 04:46:16 UTC <cmears> Making charts should be easy compared to that (:
2013-06-06 04:46:18 UTC <carter> (well, at least i have some mat mult codes that are 10x faster than atlas)
2013-06-06 04:46:39 UTC <carter> a fancier mat mult i hope to hack oout over the next few days may be even fastter
2013-06-06 04:47:33 UTC <carter> cmears though jbrakers stuff will be pretty cool
2013-06-06 04:48:02 UTC <carter> cmears I have this problem/strenght/problem/strength of "figure out the ALL THE THINGS BEST"
2013-06-06 04:48:04 UTC <carter> for a problem
2013-06-06 04:49:11 UTC <carter> cmears so this is combinatorial optimziation work?
2013-06-06 04:49:31 UTC <cmears> yes, that's what the charts are showing
2013-06-06 04:49:34 UTC <carter> cool
2013-06-06 04:49:45 UTC <carter> ACTION looks around the domain
2013-06-06 04:50:01 UTC <carter> later this summer i may start playing aroudn with constraint programs and stuff
2013-06-06 04:50:13 UTC <carter> that or porting my stuff to GPUS or hacking on ghc
2013-06-06 04:50:15 UTC <carter> its unclear
2013-06-06 04:50:27 UTC <carter> depends on some business bits that will hopefully resolve over the next month
2013-06-06 04:50:55 UTC <cmears> you seem quite busy (:
2013-06-06 04:51:13 UTC <carter> symmetry breaking is basically saying "don't search logically equivalent configurations"
2013-06-06 04:51:14 UTC <carter> right?
2013-06-06 04:51:28 UTC <cmears> yeah, that's right
2013-06-06 04:51:35 UTC <carter> cool
2013-06-06 04:51:42 UTC <carter> i'm busy
2013-06-06 04:51:50 UTC <carter> somehow managing to make monotonic progress on my work
2013-06-06 04:51:57 UTC <carter> and having fun
2013-06-06 04:52:49 UTC <carter> and possibly if the next 1-2 months go well, running an actually working business that builds cool tools using haskell
2013-06-06 04:53:11 UTC <carter> (this is all i think about while ithats unresolved)
2013-06-06 04:53:17 UTC <carter> then i'll go back to focusing on cool stuff
2013-06-06 04:53:24 UTC <carter> like making everything more awsome
2013-06-06 04:54:00 UTC <carter> cmears what are good texts / literature starting points  in combinatorial optimization / constraint solving literature
2013-06-06 04:54:12 UTC <carter> if i wind up experimenting with writing tools / algs in that space?
2013-06-06 04:54:13 UTC <carter> at some point
2013-06-06 04:54:35 UTC <carter> ACTION or at least learning enough to decide not to :)
2013-06-06 04:54:42 UTC <carter> finite time and all
2013-06-06 04:54:48 UTC <cmears> for discrete optimization there is a coursera course starting soon: https://www.coursera.org/course/optimization
2013-06-06 04:55:09 UTC <carter> i understand it all theoretically
2013-06-06 04:55:21 UTC <carter> i'm more interested in all the different types of solvers ;)
2013-06-06 04:55:27 UTC <carter> and how to write them well
2013-06-06 04:55:49 UTC <cmears> that part seems quite hard
2013-06-06 04:56:01 UTC <cmears> there's still a lot of research in that area
2013-06-06 04:56:08 UTC <carter> cmears so would writing code thats robustly faster than ATLAS for dense matrix multiply
2013-06-06 04:56:20 UTC <carter> but I seem to be doing ok so far :)
2013-06-06 04:56:33 UTC <carter> if it was easy, wouldn't be interesting !
2013-06-06 04:57:40 UTC <carter> eg: someone folks who are at AT&T labs I chatted with last year made some interesting remarks that sounded like theres no effective LP (or was it MIP) solvers that handle larger than RAM models 
2013-06-06 04:58:00 UTC <carter> (which is kinda related to also trying to do  semi distributed computation for solving)
2013-06-06 04:58:13 UTC <carter> or at least that was my interpretation
2013-06-06 04:58:23 UTC <carter> "we need to use our BIG server to solve our instances"
2013-06-06 04:58:34 UTC <cmears> I think that's true
2013-06-06 04:59:04 UTC <cmears> yes, distributed solving is still an open area
2013-06-06 04:59:10 UTC <carter> cool
2013-06-06 05:00:05 UTC <carter> it probably does require some "static analysis" to figure out which parts can be worked on with out constant coord 
2013-06-06 05:00:11 UTC <carter> but that'd be cool to stare at
2013-06-06 05:00:42 UTC <carter> if the next month goes well, i'll actually put a core subset of my lin alg stuff on hackage
2013-06-06 05:00:48 UTC <carter> because theres no sanely license good lin alg
2013-06-06 05:00:57 UTC <carter> granted, it won't build off x86_64
2013-06-06 05:01:11 UTC <carter> but if you care about numerics, thats your only sane core CPU choice
2013-06-06 05:01:37 UTC <cmears> that would be useful
2013-06-06 05:02:27 UTC <carter> cmears and fast
2013-06-06 05:02:32 UTC <carter> and theres some neat bits
2013-06-06 05:02:40 UTC <carter> where I can make it obvious via the API 
2013-06-06 05:02:46 UTC <carter> which operations will have good memory locality
2013-06-06 05:02:47 UTC <carter> and which one
2013-06-06 05:02:57 UTC <carter> *explicit in the API while not limiting which you do*
2013-06-06 05:03:53 UTC <cmears> cool
2013-06-06 05:04:17 UTC <carter> cmears https://gist.github.com/cartazio/5716430 is some benchmark data from earlier today: "fat dot product" is one of my stupider codes that is in working order right now, and "apple blas"  is the DGEMM in the Apple provided build of Atlas
2013-06-06 05:04:42 UTC <carter> if you scroll to the bottom you'll see "3* 2^24 element"
2013-06-06 05:05:06 UTC <carter> which means 3 * 128mb of matrices
2013-06-06 05:05:17 UTC <carter> from fitting in l1 up to that size
2013-06-06 05:05:28 UTC <carter> (my computer only has 3mb of L3 cache)
2013-06-06 05:05:32 UTC <carter> i have sequential matrix mult 
2013-06-06 05:05:47 UTC <carter> that is robustly ~ 10x faster than atlas
2013-06-06 05:05:54 UTC <carter> (or i've a subtle bug i've not found yet)
2013-06-06 05:05:59 UTC <carter> should double check on that :)
2013-06-06 05:06:43 UTC <cmears> yes, probably best to check the results (:
2013-06-06 05:06:46 UTC <carter> yeah
2013-06-06 05:06:53 UTC <carter> i'm pretty comfortable with saying its right
2013-06-06 05:07:10 UTC <carter> generally when the code is wrong, its "always 5 ns"
2013-06-06 05:07:16 UTC <carter> because the compiler optimized it way
2013-06-06 05:07:29 UTC <carter> granted, thats also a C kernel i'm calling from haskell
2013-06-06 05:10:21 UTC <carter> though now i'm looking at the assembly and getting nervious
2013-06-06 05:10:21 UTC <carter> ok
2013-06-06 05:11:58 UTC <carter> ok, asm looks correct
2013-06-06 05:13:42 UTC <carter> woot
2013-06-06 05:13:45 UTC <carter> that was nervous
2013-06-06 05:14:59 UTC <carter> yay
2013-06-06 05:15:05 UTC <carter> should stil update my test suite though
2013-06-06 14:29:16 UTC <byorgey> mgsloan: yeah, I do actually intend to add some more segment types
2013-06-06 14:29:24 UTC <byorgey> mgsloan: in particular I want to have explicit arcs and circles
2013-06-06 14:29:52 UTC <byorgey> and maybe we can add fancier sorts of splines
2013-06-06 14:30:07 UTC <byorgey> but I don't know why you'd want to know the total number of handles of a trail =)
2013-06-06 14:30:30 UTC <byorgey> (though if there is a reason I'd be interested to hear it)
2013-06-06 14:36:07 UTC <fryguybob> byorgey: I suppose you could use the path types in a context of some GUI app (not targeting them to a diagram) and collect the handles for display.
2013-06-06 14:36:22 UTC <byorgey> ah, true
2013-06-06 14:36:49 UTC <byorgey> so not the number of handles, but an actual set of handles
2013-06-06 14:36:58 UTC <fryguybob> Yeah that would be my guess.
2013-06-06 14:37:06 UTC <byorgey> makes sense.
2013-06-06 14:37:22 UTC <fryguybob> Would envelops be another thing?
2013-06-06 14:40:12 UTC <fryguybob> As far as other interesting segments, the obvious additional types are BSpline and NURBS but I'm not sure what things like arc-length and envelope look like for them.
2013-06-06 14:41:39 UTC <bergey`> And here I was hoping you could answer those questions for me :)
2013-06-06 14:42:11 UTC <bergey`> (I assume there are answers in the literature; I haven't found them yet.)
2013-06-06 14:43:50 UTC <bergey`> I hope there's a better answer than "treat each knot span as a Bezier curve" (and that breaks down if p>2)
2013-06-06 14:44:00 UTC <fryguybob> bergey`: Yeah, I never got that far in my studying of NURBS.  For envelope all you need is the max in one direction, transforms can give you the rest.
2013-06-06 14:45:07 UTC <fryguybob> bergey`: I don't think arc-length is any worse then bezier with NURBS.  You can express conic sections directly (which you cannot do with Bezier) and that gets you in a better place for arc-length.
2013-06-06 14:46:44 UTC <byorgey> fryguybob: oh! indeed, you're right, we should cache envelopes and traces too
2013-06-06 14:47:36 UTC <byorgey> previously we computed those with an O(n) scan, which furthermore resulted in O(n) envelope and trace functions
2013-06-06 14:48:12 UTC <byorgey> oh, well, I guess the resulting envelope and trace functions will still be O(n), but balanced
2013-06-06 14:48:31 UTC <fryguybob> byorgey: Ah, right.
2013-06-06 14:48:55 UTC <byorgey> there were even comments like "-- XXX can we do this more efficiently with a balanced fold?"
2013-06-06 14:50:00 UTC <fryguybob> Humm, I guess you need some BSP like thing to do better.
2013-06-06 14:50:57 UTC <byorgey> BSP?
2013-06-06 14:51:28 UTC <fryguybob> http://en.wikipedia.org/wiki/Binary_space_partitioning
2013-06-06 14:52:23 UTC <byorgey> ah
2013-06-06 14:52:48 UTC <byorgey> yeah, sounds neat
2013-06-06 14:53:24 UTC <fryguybob> Something like splitting segments when you know an envelope always dominates then ordering those split segments.
2013-06-06 18:47:59 UTC <luite> bah hetzner compromised...
2013-06-06 18:51:14 UTC <fryguybob> D:
2013-06-06 18:54:07 UTC <luite> the same happened to linode earlier this year
2013-06-06 19:01:08 UTC <luite> i dunno how to check my server though, in theory they could've gained access through the rescue system, installed some backdoor to remove traces of the reboot
2013-06-06 19:02:23 UTC <carter> luite check for what?
2013-06-06 19:05:16 UTC <luite> carter: oh the server admin system for hetzner (hosting provider where i have a server, haskell.org is also hosted there) was compromised, someone got access to the client database
2013-06-06 19:05:25 UTC <carter> AHHHH
2013-06-06 19:26:56 UTC <byorgey> luite: BOO
2013-06-06 21:50:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14b0e7aa8 http://travis-ci.org/diagrams/diagrams-lib/builds/7857258 The build passed.
2013-06-06 22:01:28 UTC <tgeeky> pass!
2013-06-06 23:19:26 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c1e0605 http://travis-ci.org/diagrams/diagrams-lib/builds/7859776 The build passed.
2013-06-07 00:15:28 UTC <fryguybob> ACTION does some cabal installing to get ready for hac phi.
2013-06-07 01:49:34 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 1458d03e1 http://travis-ci.org/diagrams/diagrams-lib/builds/7863023 The build has errored.
2013-06-07 01:56:41 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14eacb540 http://travis-ci.org/diagrams/diagrams-lib/builds/7863139 The build has errored.
2013-06-07 02:02:34 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14d9b128a http://travis-ci.org/diagrams/diagrams-lib/builds/7863157 The build passed.
2013-06-07 17:27:18 UTC <luite> cool :)
2013-06-07 17:29:22 UTC <bergey`> NURBS don't actually work yet, but I figured folks I might show folks this weekend anyway.
2013-06-07 17:29:55 UTC <bergey`> I do have the OpenGL backend rendering spheres, at least on my primary machine.
2013-06-07 17:30:16 UTC <travis-ci> [travis-ci] 13diagrams-lib/06nurbs 14fcf27e2 http://travis-ci.org/diagrams/diagrams-lib/builds/7883586 The build failed.
2013-06-07 17:30:43 UTC <luite> are you at hac phi?
2013-06-07 17:31:14 UTC <bergey`> About to be, yes.
2013-06-07 17:31:19 UTC <luite> cool :)
2013-06-07 17:31:39 UTC <luite> i'm almost done with my GHCJS intro post
2013-06-07 17:31:50 UTC <luite> ask Ian-Woo Kim if you need to know how awesome GHCJS is ;)
2013-06-07 17:32:36 UTC <bergey`> Heh.  I look forward to your post.
2013-06-07 17:32:48 UTC <luite> i really hope that web charts with diagrams and ghcjs work by the end of the summer :)
2013-06-07 19:29:09 UTC <luite> bergey`: http://weblog.luite.com/wordpress/?p=14
2013-06-07 19:31:03 UTC <fryguybob> luite: That's a long post.
2013-06-07 19:31:14 UTC <luite> sorry :p
2013-06-07 19:31:25 UTC <luite> it's my first, i didn't know i had only 140 chars
2013-06-07 19:31:32 UTC <fryguybob> haha
2013-06-07 19:32:05 UTC <luite> of course github is having problems now, i get timeouts doing the vagrant build :(
2013-06-07 19:34:08 UTC <luite> BlogLiterately was quite useful for this post :)
2013-06-07 19:57:54 UTC <luite> urgh fpcomplete handing out a $1000 prize per month for school of haskell content
2013-06-07 19:58:02 UTC <luite> how can i compate with that with wolfgang :p
2013-06-07 19:58:27 UTC <luite> cheaper than hiring people to write the content though
2013-06-07 19:59:19 UTC <luite> does anyone have a reddit account ant want to link my blog?
2013-06-07 20:14:20 UTC <alpounet> luite, sure -- unless someone did it already?
2013-06-07 20:14:36 UTC <luite> i don't think it's on /r/haskell yet
2013-06-07 20:14:43 UTC <luite> unless someone posted in the past 5 mins
2013-06-07 20:15:49 UTC <alpounet> luite, want your name in the reddit "title" ?
2013-06-07 20:16:37 UTC <luite> well if oyu want, it's your link. though i'm not very well known outside IRC i think :)
2013-06-07 20:17:25 UTC <alpounet> done!
2013-06-07 20:17:41 UTC <alpounet> oh you're not the least known haskeller I think
2013-06-07 20:17:58 UTC <luite> i don't know who the least known haskeller is ;)
2013-06-07 20:19:14 UTC <alpounet> the guy who doesn't even know himself he's going to learn haskell inâ¦ one second
2013-06-07 20:19:39 UTC <alpounet> holy crap
2013-06-07 20:19:57 UTC <alpounet> indeed, fpcomplete's new initiative is prettyâ¦ impressive
2013-06-07 20:30:18 UTC <tgeeky> luite: I tried to get Ian (wavewave) in here more often. He only has time like once a week
2013-06-07 20:30:37 UTC <luite> he is at hac phi though
2013-06-07 20:30:42 UTC <luite> and he visits #ghcjs
2013-06-07 20:30:43 UTC <tgeeky> ah cool
2013-06-07 20:30:52 UTC <tgeeky> well, I actually meant, in #haskell
2013-06-07 20:30:55 UTC <luite> ah
2013-06-07 20:30:58 UTC <tgeeky> what is he using it for?
2013-06-07 20:31:01 UTC <luite> hoodle
2013-06-07 20:31:02 UTC <tgeeky> and are you at hachi?
2013-06-07 20:31:08 UTC <luite> at least that's what he wants to use it for
2013-06-07 20:31:10 UTC <luite> web interface
2013-06-07 20:31:21 UTC <tgeeky> i thought that was... oh ok
2013-06-07 20:31:27 UTC <tgeeky> GTK or wx or something
2013-06-07 20:31:36 UTC <luite> he was the first person we helped set up the new ghcjs version
2013-06-07 20:31:45 UTC <luite> now we have an automated build in a vm
2013-06-07 20:31:51 UTC <tgeeky> he's a smart dude and a pretty productive coder
2013-06-07 20:32:03 UTC <luite> he's coming to europe later this year
2013-06-07 20:32:06 UTC <luite> to work at CERN
2013-06-07 20:32:23 UTC <tgeeky> cool. I know he was working on some algorithims to do particle detection
2013-06-07 20:32:27 UTC <luite> perhaps i can meet him when i'm in the neighbourhood :)
2013-06-07 20:32:29 UTC <tgeeky> i'll have to catch up
2013-06-07 20:34:48 UTC <tgeeky> hacphi is this weekend, yes?
2013-06-07 20:34:53 UTC <tgeeky> luite: and you're not going, yes?
2013-06-07 20:35:06 UTC <luite> unfortunately not
2013-06-07 20:35:10 UTC <luite> but i'm going to icfp
2013-06-07 20:35:32 UTC <tgeeky> wayyy more serious
2013-06-07 20:35:40 UTC <luite> and a promised to give a talk at NYC Haskell at Oct 2nd if the venue is available
2013-06-07 20:37:39 UTC <alpounet> luite, the reddit thread's already got a comment
2013-06-07 20:37:48 UTC <alpounet> first of many, IMO
2013-06-07 20:38:16 UTC <tgeeky> luite: your blog looks nice
2013-06-07 20:46:41 UTC <luite> the contents or the theme? :p
2013-06-07 20:46:52 UTC <tgeeky> luite: the theme, I haven't read the contents yet
2013-06-07 20:47:09 UTC <luite> hehe
2013-06-07 20:47:19 UTC <luite> i chose one of the simplest themes that looked modern
2013-06-07 20:47:47 UTC <luite> it's written in markdown, published with BlogLiterately (awesome tool)
2013-06-07 20:48:09 UTC <luite> i customized the syntax highlighting css a bit to make it less bright
2013-06-07 20:50:57 UTC <luite> i hope i haven't made any typos in the vagrant setup script
2013-06-07 20:51:21 UTC <luite> it's still building here
2013-06-08 00:54:06 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14d6f09da http://travis-ci.org/diagrams/diagrams-lib/builds/7894831 The build passed.
2013-06-08 02:32:46 UTC <tgeeky> let the hac phi begin?
2013-06-08 02:49:09 UTC <mgsloan> hac (1 + sqrt 5) / 2
2013-06-08 02:49:13 UTC <mgsloan> \o/
2013-06-08 13:00:23 UTC <notdan> luite: hi
2013-06-08 13:00:38 UTC <notdan> luite: great GHCJS post :) I am setting up the environment atm
2013-06-08 13:14:43 UTC <luite> ah most people still seem to be complainting about the setup progress (i kind of agree though, it's hard to keep someone's attention for more than 15 seconds on the internet)
2013-06-08 13:15:51 UTC <luite> notdan: i think i'll add some shorter practical examples later, something with FRP, since that seems all the rage
2013-06-08 13:16:41 UTC <luite> notdan: the full source build took almost 4 hours on my server (core i7 3770 with 16GB RAM), so it's best to stick with the prebuilt version
2013-06-08 13:16:44 UTC <luite> for now
2013-06-08 13:17:54 UTC <notdan> Yeah. Basically you are building GHC two times (patched version and ghcjs) and then rebuliding the base libraries
2013-06-08 13:17:59 UTC <notdan> am I correct?
2013-06-08 13:18:08 UTC <notdan> Why do you need a patched version of GHC tho?
2013-06-08 13:18:58 UTC <luite> foreign import javascript isn't supported out of the box
2013-06-08 13:19:26 UTC <luite> and some extra things to support better crossplatform building, including a javascript architecture
2013-06-08 13:20:15 UTC <luite> what really takes long is all the dependencies of some of the examples, including gtk2hs and webkit
2013-06-08 13:21:10 UTC <luite> we only use the libraries from the second build, base, ghc-prim, integer-gmp, containers, template-haskell and a few more
2013-06-08 15:03:13 UTC <notdan> Why does it take so long for vagrant to set up the vm? :(
2013-06-08 15:03:45 UTC <notdan> is it installing packages from the sources?
2013-06-08 15:19:14 UTC <luite> notdan: did you use the prebuilt branch
2013-06-08 15:19:16 UTC <luite> ?
2013-06-08 15:19:29 UTC <luite> in that case it downloads a 1.2GB tar.gz file with all the binaries
2013-06-08 15:19:44 UTC <luite> use tail -f /etc/extract.log to see progress
2013-06-08 15:20:10 UTC <luite> otherwise it does build it from source, really inefficiently, building webkitgtk, gtk2hs and lots of dependencies with ghcjs
2013-06-08 15:20:58 UTC <notdan> oh it might be downloading the 1.2GB file
2013-06-08 15:22:11 UTC <notdan> The last message I got was notice: /Stage[main]//Package[libbz2-dev]/ensure: ensure changed 'purged' to 'present'
2013-06-08 15:22:18 UTC <notdan> and there is no extract.log file
2013-06-08 15:38:56 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14bff3e07 http://travis-ci.org/diagrams/diagrams-lib/builds/7906174 The build was broken.
2013-06-08 15:59:59 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 1417cb95a http://travis-ci.org/diagrams/diagrams-lib/builds/7906543 The build was fixed.
2013-06-08 16:29:02 UTC <notdan> luite: is that a problem that a ghcjs-hello example does not work?
2013-06-08 16:29:20 UTC <notdan> I got Uncaught ReferenceError: h$SystemziGlibziMainLoop_df4K is not defined 
2013-06-08 16:30:18 UTC <notdan> recompiled it, still does not work
2013-06-08 16:38:13 UTC <luite> notdan: oh that's possible
2013-06-08 16:38:18 UTC <luite> the weblog examples should work
2013-06-08 16:38:37 UTC <luite> the other ones might have some missing things since they were only tested with the old version of ghcjs
2013-06-08 16:38:46 UTC <luite> we just merged the new code generator yesterday
2013-06-08 16:38:56 UTC <luite> and it doen't support foreign import dynamic yet
2013-06-08 16:43:14 UTC <notdan> I see. Weblog examples do work nicely :)
2013-06-08 17:32:04 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 145e4c822 http://travis-ci.org/diagrams/diagrams-lib/builds/7908235 The build passed.
2013-06-08 18:02:38 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 146ff05fc http://travis-ci.org/diagrams/diagrams-lib/builds/7908776 The build was broken.
2013-06-08 18:35:45 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06bee-coh 145dd4ba5 http://travis-ci.org/diagrams/diagrams-cairo/builds/7909291 The build failed.
2013-06-08 20:14:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14437c8f8 http://travis-ci.org/diagrams/diagrams-lib/builds/7911164 The build was fixed.
2013-06-08 20:56:56 UTC <luite> \o/
2013-06-08 21:01:13 UTC <fryguybob> \o/
2013-06-08 21:01:44 UTC <luite> is hac phi still going strong?
2013-06-08 21:02:13 UTC <fryguybob> Yes.  We are in the middle of heap profiling a diagram that explodes.
2013-06-08 21:04:08 UTC <luite> any pics yet?
2013-06-08 21:04:41 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/weave.pdf
2013-06-08 21:08:10 UTC <fryguybob> Humm, I could take a grainy photo with my webcam
2013-06-08 21:11:28 UTC <fryguybob> http://i.imgur.com/sYACcxm.jpg
2013-06-08 21:12:43 UTC <luite> that's Brent, to the right of you?
2013-06-08 21:14:15 UTC <fryguybob> luite: Yes and bergey` across the table.  Not seen behind me is carter.
2013-06-08 21:14:24 UTC <carter> WOOT
2013-06-08 21:14:29 UTC <luite> ah
2013-06-08 21:14:38 UTC <luite> OH HAI CARTER
2013-06-08 21:14:43 UTC <carter> YES
2013-06-08 21:14:47 UTC <carter> hello luite 
2013-06-08 21:14:49 UTC <luite> shapr mode :p
2013-06-08 21:14:56 UTC <carter> eh?
2013-06-08 21:15:53 UTC <luite> oh he often greets like that on irc, and with similar exuberance in real life, I'm told
2013-06-08 21:21:27 UTC <byorgey> OHAI LUITE
2013-06-08 21:21:36 UTC <byorgey> we solved the mystery of the exploding heap diagram =)
2013-06-08 21:24:20 UTC <luite> by eliminating the impossible?
2013-06-08 21:25:20 UTC <byorgey> pretty much
2013-06-08 21:26:07 UTC <byorgey> trails used to be lazy enough that you could work with infinite trails.  In a fit of cuteness I implemented hcat' using an infinite trail.
2013-06-08 21:26:25 UTC <byorgey> but now trails are represented as fingertrees which are spine-strict
2013-06-08 21:26:39 UTC <byorgey> so the test case that used hcat' blew up =)
2013-06-08 21:27:28 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14e94dc5c http://travis-ci.org/diagrams/diagrams-lib/builds/7912624 The build passed.
2013-06-08 21:41:11 UTC <luite> ah :)
2013-06-08 21:45:30 UTC <byorgey> bergey` is working on NURBS
2013-06-08 21:45:47 UTC <byorgey> fryguybob is working on path intersections and path-zippery-operation-stuff
2013-06-08 21:46:07 UTC <luite> cool :)
2013-06-08 21:46:23 UTC <luite> although i don't really know what path-zippery-operation-stuff is
2013-06-08 21:47:17 UTC <byorgey> neither do we ;-)
2013-06-08 21:47:27 UTC <byorgey> that's what fryguybob is figuring out
2013-06-08 21:48:07 UTC <fryguybob> Take paths and zipper them with operations and stuff.
2013-06-08 21:53:10 UTC <luite> are weblog pingbacks/trackbacks useful in any way?
2013-06-08 21:55:42 UTC <fryguybob> You could go have discussions elsewhere?
2013-06-08 21:56:09 UTC <luite> hmm
2013-06-08 21:56:18 UTC <luite> aren't they mostly just linkspam though?
2013-06-08 21:57:04 UTC <fryguybob> I would imagine so.
2013-06-08 21:57:42 UTC <carter> luite for social media marketing / SEO
2013-06-08 21:57:43 UTC <carter> so nope :)
2013-06-08 21:59:02 UTC <luite> k i guess i'll disable them
2013-06-09 19:52:11 UTC <byorgey> fryguybob: I want a map-in-context over the vertices of a trail in order to implement 'orient' =)
2013-06-09 20:06:51 UTC <ClaudiusMaximus> oo that sounds handy, could you use that to have something like "how many times does this closed curve wind about this point in a positive direction"?
2013-06-09 20:08:03 UTC <byorgey> ClaudiusMaximus: we already have that =)
2013-06-09 20:08:28 UTC <ClaudiusMaximus> oh ok :)
2013-06-09 20:08:50 UTC <byorgey> ClaudiusMaximus: the idea is that you could use it do "local transformations" on trails where you get to see the local information
2013-06-09 20:08:59 UTC <byorgey> e.g. a vertex together with the segments on either side of it
2013-06-09 20:09:24 UTC <byorgey> or maybe a segment with its absolute location that you get to replace by one or more different segments that get spliced back into the trail
2013-06-09 20:09:39 UTC <byorgey> fryguybob has been working on designing a nice API for this sort of thing since it seems to keep coming up.
2013-06-09 20:09:59 UTC <ClaudiusMaximus> ah i see - so you could for example use it to round off corners, unless they're sharper than a threshold in which case you leave the corner sharp?
2013-06-09 20:10:06 UTC <byorgey> ClaudiusMaximus: yes, exactly
2013-06-09 20:10:21 UTC <ClaudiusMaximus> nice :)
2013-06-09 20:10:51 UTC <byorgey> ok,  Foo a = (Point (V a), a)
2013-06-09 20:11:04 UTC <byorgey> a good name for Foo?  suggestions?  Sited? Located? Rooted? Pointed? ...?
2013-06-09 20:11:21 UTC <ClaudiusMaximus> At?
2013-06-09 20:13:32 UTC <ClaudiusMaximus> with   at = flip (,) (or some newtype for monoids?)  so you could have   a `at` p  <>  b `at` q   or something?
2013-06-09 20:13:49 UTC <byorgey> oh, I like the lowercase at
2013-06-09 20:14:02 UTC <byorgey> but it seems strange as the name of the type....   At (Trail R2) ?
2013-06-09 20:14:26 UTC <ClaudiusMaximus> mm, yes...
2013-06-09 20:16:03 UTC <ClaudiusMaximus> with   a `at` p <> b `at` q  = (a <> (translate (q-p) b)) `at` p   or something similar?
2013-06-09 20:16:46 UTC <ClaudiusMaximus> but then mempty might be a problem
2013-06-09 20:17:40 UTC <ClaudiusMaximus> i think Located or Positioned would be ok
2013-06-09 20:17:41 UTC <byorgey> I'm not convinced it should have a Monoid instance at all
2013-06-09 20:18:02 UTC <ClaudiusMaximus> but i heard you liked monoids :P
2013-06-09 20:18:07 UTC <byorgey> hehe
2013-06-09 20:18:26 UTC <ClaudiusMaximus> true, might not make sense
2013-06-09 20:20:24 UTC <ClaudiusMaximus> ACTION been a bit quiet on diagrams/haskell/etc lately - someone pointed me to a technique for rendering deep mandelbrot zooms using double precision deltas from a high precision reference point, so i've been sucked down that rabbit hole again..
2013-06-09 20:20:57 UTC <luite> do you have more examples? i quite liked the b/w one you posted earlier :)
2013-06-09 20:21:10 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-06-08_detecting_bad_references.png currently trying to automate switching to a different reference point when the delta-method fails
2013-06-09 20:22:01 UTC <luite> it's cool to see that the set is connected, often hard to see when you color the points not in the set
2013-06-09 20:23:27 UTC <byorgey> ClaudiusMaximus: no apologies necessary, glad to see you're making cool stuff =)
2013-06-09 20:23:28 UTC <ClaudiusMaximus> yeah, it's not a proof, but distance estimate images have the nice property that every dark pixel is near the boundary and every light pixel is far from it
2013-06-09 20:23:55 UTC <byorgey> luite: people here are impressed with ghcjs
2013-06-09 20:24:09 UTC <byorgey> luite: what's the size of the generated JS like now?
2013-06-09 20:24:17 UTC <byorgey> people were wondering and I didn't know
2013-06-09 20:27:45 UTC <luite> byorgey: pretty big, expect a few hundred kB after minifying and gzip for an app that uses a few libs from hackage. but i haven't spent much time optimizing code size yet, we encode thunk metadata really inefficiently for example, and there is some more low hanging fruit
2013-06-09 20:29:51 UTC <luite> i hope most of tht is done by the time we have our first hackage release
2013-06-09 20:30:43 UTC <luite> ClaudiusMaximus: i have to admit that i don't know much about the connectedness proof
2013-06-09 20:31:33 UTC <ClaudiusMaximus> nor do i
2013-06-09 20:33:53 UTC <byorgey> luite: ah, cool, that's actually smaller than I thought
2013-06-09 20:34:15 UTC <luite> byorgey: gzip really helps a lot since the generated code is quite repetitive
2013-06-09 20:34:51 UTC <byorgey> makes sense.
2013-06-09 20:35:00 UTC <luite> and we have really long function names (longer than fay or haste) since we include the package name
2013-06-09 20:35:18 UTC <byorgey> hehe, I see
2013-06-09 20:35:19 UTC <luite> for haste, if you have multiple packages with the same module and symbol name, they will clash
2013-06-09 20:35:36 UTC <byorgey> oops =)
2013-06-09 20:58:48 UTC <luite> also fay and haste don't have this thunk metadata since they don't support deallocation of unused global thunks and weak references
2013-06-09 20:59:17 UTC <luite> byorgey: have people actually been able to install ghcjs there?
2013-06-09 20:59:28 UTC <byorgey> luite: I don't know if anyone has tried yet
2013-06-09 20:59:34 UTC <byorgey> people have been busy hacking on their own stuff
2013-06-09 20:59:40 UTC <luite> yeah i imagine
2013-06-09 21:05:35 UTC <byorgey> fryguybob: I'm adding Located since it's nice having  instance TrailLike t => TrailLike (Located t).  We can also do away with FixedSegment in favor of  Located Segment
2013-06-09 21:05:47 UTC <byorgey> b
2013-06-09 21:06:01 UTC <byorgey> oops, this is not emacs
2013-06-09 22:05:22 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1457de221 http://travis-ci.org/diagrams/diagrams-core/builds/7934733 The build passed.
2013-06-09 22:11:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14b3b2a84 http://travis-ci.org/diagrams/diagrams-lib/builds/7934804 The build passed.
2013-06-10 00:27:50 UTC <fryguybob> byorgey: Yeah sounds good (I'm back home by the way) :D
2013-06-10 01:00:31 UTC <byorgey> fryguybob: glad to hear it =)
2013-06-10 01:03:23 UTC <byorgey> fryguybob: did you get home in time to see Judah?
2013-06-10 01:33:58 UTC <byorgey> fryguybob: by the way, I think you left your yellow fleece
2013-06-10 01:34:30 UTC <byorgey> we can mail it to you =)
2013-06-10 02:23:29 UTC <fryguybob> byorgey: Oops.  You could bring it to ICFP.
2013-06-10 03:25:10 UTC <tgeeky> fryguybob: that's a lot of responsibility!
2013-06-10 03:25:41 UTC <tgeeky> stewardship of a fine yellow garmet for an extended duration!
2013-06-10 10:07:59 UTC <luite> i'm selling these fine yellow garments
2013-06-10 11:11:37 UTC <byorgey> fryguybob: OK, I suppose you won't be needing a fleece quite as much during the next few months
2013-06-10 11:17:26 UTC <byorgey> haha, with the hacking I did on diagrams this weekend Beeminder tells me I don't need to work on it again for 26 days
2013-06-10 11:17:42 UTC <byorgey> (I just retroratcheted though =)
2013-06-10 13:03:52 UTC <fryguybob> :D
2013-06-10 14:20:09 UTC <fryguybob> byorgey: I keep confusing open and closed as I think of open as not having its end points and closed as having them...
2013-06-10 14:20:24 UTC <byorgey> oh, hehe
2013-06-10 14:20:43 UTC <byorgey> well, if we can come up with better/less confusing names I'd be quite happy to change them
2013-06-10 14:20:58 UTC <fryguybob> Clearly clopen.
2013-06-10 14:21:01 UTC <byorgey> hahaha
2013-06-10 14:21:20 UTC <fryguybob> And oposed
2013-06-10 14:21:34 UTC <byorgey> data Clopen = Closed | Open | Clopen | Oposed | FileNotFound
2013-06-10 14:21:36 UTC <fryguybob> opclosed
2013-06-10 14:22:42 UTC <byorgey> you're right though, if you think about trails corresponding to intervals, "closed" and "open" would mean the opposite
2013-06-10 14:23:05 UTC <byorgey> which is much more than just a silly analogy, if we want to think of trails as parameterized things
2013-06-10 14:23:29 UTC <byorgey> I guess it would be Closed and HalfOpen =)
2013-06-10 14:24:41 UTC <fryguybob> Yeah, Trail Open is saying open on the left and Trail Closed is saying open on both and Path is closed.  For open on the right you reverse.
2013-06-10 14:25:30 UTC <byorgey> well, Located (Trail Open) is closed.
2013-06-10 14:25:35 UTC <fryguybob> Right
2013-06-10 14:25:47 UTC <fryguybob> Path is another thing.
2013-06-10 14:26:03 UTC <byorgey> ok, well now we have to change the names, because now you've confused me too ;-)
2013-06-10 14:26:23 UTC <fryguybob> Hehe.
2013-06-10 14:27:06 UTC <byorgey> Cyclic/NonCyclic?
2013-06-10 14:27:09 UTC <byorgey> Cyclic/Linear?
2013-06-10 14:27:35 UTC <byorgey> although I guess those only make sense as indices for Trail, not for Segment
2013-06-10 14:30:35 UTC <fryguybob> Maybe we can think of Open and Closed as they are now are properties of a set in 2d, Open being empty and closed being non-empty?
2013-06-10 14:31:17 UTC <byorgey> properties of what set?
2013-06-10 14:31:25 UTC <byorgey> oh, you mean the interior of the path?
2013-06-10 14:31:27 UTC <fryguybob> byorgey: The inside
2013-06-10 14:31:28 UTC <fryguybob> Right
2013-06-10 14:31:47 UTC <byorgey> well... this is more general than just 2D though
2013-06-10 14:31:54 UTC <byorgey> e.g. you could just as well have a path in 3D
2013-06-10 14:32:14 UTC <fryguybob> byorgey: Right, but a path only has an inside if it is planer
2013-06-10 14:32:21 UTC <fryguybob> (I think)
2013-06-10 14:32:33 UTC <byorgey> I don't know
2013-06-10 14:32:42 UTC <fryguybob> A surface has an inside for R^n
2013-06-10 14:32:51 UTC <fryguybob> A surface in 2d is a path.
2013-06-10 14:32:53 UTC <byorgey> right
2013-06-10 14:33:30 UTC <fryguybob> We should have had this conversation in front of ddarius so he could tell us we are all wrong.
2013-06-10 14:33:35 UTC <byorgey> but I'm saying we can have trails in 3D and it still makes sense to talk about whether they form a loop or not.
2013-06-10 14:33:42 UTC <byorgey> hehe
2013-06-10 14:34:03 UTC <fryguybob> byorgey: Yes, that's what I'm getting at.
2013-06-10 14:34:08 UTC <luite> he doesn't believe in the jordan curve theorem?
2013-06-10 14:34:29 UTC <fryguybob> byorgey: That property is no about open or closed it is about "looped" or not.
2013-06-10 14:34:48 UTC <byorgey> ohhh, now I understand what you are saying.  Yes, I agree completely.
2013-06-10 14:34:50 UTC <fryguybob> luite: I don't know that's why we needed him.
2013-06-10 14:36:25 UTC <fryguybob> byorgey: I bet topologists have the right terminology for us.
2013-06-10 14:36:47 UTC <byorgey> so maybe we should have segments which are Open or Closed (in the interval sense, i.e. the opposite of what they are now!), and then you can have trails which are Loopy or... whatever the opposite of Loopy is
2013-06-10 14:36:58 UTC <byorgey> Snoopy?
2013-06-10 14:37:06 UTC <fryguybob> byorgey: Ypool
2013-06-10 14:37:13 UTC <byorgey> CoLoopy
2013-06-10 14:37:16 UTC <byorgey> hehehe
2013-06-10 14:38:42 UTC <fryguybob> So when you have exactly one hole in your continuous set then you can be Located.
2013-06-10 14:39:21 UTC <byorgey> when you have one canonical hole.
2013-06-10 14:40:22 UTC <byorgey> or something like that.
2013-06-10 14:40:49 UTC <byorgey> you can really make anything Located.  In particular I have defined it as   Located a = (Point (V a), TransInv a)
2013-06-10 14:41:05 UTC <fryguybob> And a Closed thing is when you locate a () where the ends are identified.  The same path is Open when you locate a (] even if the limit on the left and the value on the right are the same.
2013-06-10 14:42:04 UTC <byorgey> by "Closed" and "Open" do you mean "Loopy" and "Ypool"?
2013-06-10 14:42:19 UTC <fryguybob> No I mean them in the "has an inside" sense.
2013-06-10 14:42:48 UTC <byorgey> oh. hmm.
2013-06-10 14:43:27 UTC <byorgey> I think I get what you're saying.
2013-06-10 14:43:41 UTC <byorgey> how much of this to stick in the type system is another question.
2013-06-10 14:43:44 UTC <byorgey> ;-)
2013-06-10 14:43:44 UTC <fryguybob> () is loopy and (] is not
2013-06-10 14:43:48 UTC <byorgey> right.
2013-06-10 14:44:18 UTC <fryguybob> byorgey: Yeah, I don't think the "must have exactly one hole" thing fits well with types.
2013-06-10 14:44:54 UTC <fryguybob> If you have multiple holes a topologist would care, but once you fix one of them the others always have the same limit point from our view, so it is like fixing all of them.
2013-06-10 14:45:12 UTC <fryguybob> (my view at least :D)
2013-06-10 14:45:56 UTC <byorgey> no, having multiple holes would be like having a list of trails, each of which has no specified endpoint
2013-06-10 14:46:44 UTC <byorgey> it is like a chain of segments where some of the segments are rigid and some are "wiggly"
2013-06-10 14:47:02 UTC <byorgey> so to concretely locate the entire thing you need to give locations to each of the holes
2013-06-10 14:47:18 UTC <fryguybob> byorgey: Right, I was thinking of something else.
2013-06-10 14:47:21 UTC <byorgey> oh, okl.
2013-06-10 14:47:25 UTC <byorgey> *ok
2013-06-10 14:47:35 UTC <byorgey> what were you thinking of?
2013-06-10 14:48:42 UTC <fryguybob> Take a path and start deleting points, but that's assuming you have the path as a set of points, not in the sort of relative sense where having a hole is having something *not* defined (less information)
2013-06-10 14:49:07 UTC <fryguybob> So that part doesn't really make sense
2013-06-10 14:49:08 UTC <byorgey> oh, I see
2013-06-10 14:49:14 UTC <byorgey> right
2013-06-10 14:51:26 UTC <fryguybob> Humm, I still like the idea of trails being a generalization of vectors.
2013-06-10 14:54:34 UTC <fryguybob> Instead of a magnitude and direction they have a ... function from parameter to Trail?
2013-06-10 14:55:13 UTC <fryguybob> Function from parameter to Trail and offset?
2013-06-10 15:14:23 UTC <luite> notdan: my name only has one g! :p
2013-06-10 15:14:49 UTC <notdan> oops, sorry
2013-06-10 15:14:51 UTC <notdan> and... how
2013-06-10 15:15:08 UTC <notdan> I was about to paste the link
2013-06-10 15:15:22 UTC <byorgey> fryguybob: they have a magnitude, a direction, and a wiggle ;-)
2013-06-10 15:15:37 UTC <luite> notdan: i got a pingback on my blog (thought i disabled them)
2013-06-10 15:15:42 UTC <notdan> Ah
2013-06-10 15:16:13 UTC <notdan> So, anyway, made a first post here: http://parenz.wordpress.com/2013/06/10/soc-2013/ as promised, I am going to make small writeups on my progress
2013-06-10 15:16:26 UTC <byorgey> fryguybob: seriously though, yes, we can view them as (continuous) functions from parameters to vectors
2013-06-10 15:16:27 UTC <notdan> right now I have a bunch of information, but stored only as notes in org-mode buffer
2013-06-10 15:17:35 UTC <luite> notdan: sounds good
2013-06-10 15:18:05 UTC <byorgey> fryguybob: and Located Trail === Located (Param -> V) === Param -> Located V === Param -> (P,V) === Param -> P
2013-06-10 15:18:25 UTC <byorgey> (where the last step corresponds to fmap (.+^))
2013-06-10 15:19:57 UTC <fryguybob> byorgey: Yeah, I wonder if it is useful or not to be able to distinguish "just the wiggle" (closed trail in the current language).
2013-06-10 15:20:29 UTC <fryguybob> Is that just having a function with an open interval on the parameter to vectors?
2013-06-10 15:21:06 UTC <fryguybob> ACTION goes for a walk in the rain.
2013-06-10 15:21:18 UTC <byorgey> hmm, I'm not sure
2013-06-10 15:21:20 UTC <byorgey> enjoy!
2013-06-10 17:10:37 UTC <fryguybob> Oh, a wiggly part without the offset doesn't have the subdividing property in a concrete way.
2013-06-11 15:23:04 UTC <fryguybob> I'm getting closer: http://www.cs.rochester.edu/u/ryates/temp/weave.pdf
2013-06-11 15:38:37 UTC <byorgey> =D
2013-06-11 21:18:05 UTC <luite_> gr stupid travis
2013-06-12 00:10:19 UTC <tgeeky> luite_: you called a robot stupid and it's the stupid one?
2013-06-12 00:35:39 UTC <byorgey> tgeeky: now now. anthropomorphizing robots is a time-honored tradition.
2013-06-12 01:42:42 UTC <tgeeky> byorgey: sure, maybe Commander Data. But travis doesn't have an emotion chip. Just a cold, uncalculating stare of indifference. And that will only make you more mad!
2013-06-12 02:00:07 UTC <byorgey> I wonder if it would make everyone feel better if travis appended a sad face to build failure messages
2013-06-12 02:00:21 UTC <byorgey> "I'm sorry, your build is still failing. =("
2013-06-12 02:03:00 UTC <fryguybob> "When I can actually feel things, I'll feel sorry.  Take this emoticon as a down payment for my future sorrow: =("
2013-06-12 02:57:55 UTC <fryguybob> More progress: http://www.cs.rochester.edu/u/ryates/temp/weave.pdf
2013-06-12 02:58:29 UTC <fryguybob> byorgey: This is only acting on segments which gives the unbalanced nature to it.
2013-06-12 10:41:56 UTC <byorgey> fryguybob: cool =)
2013-06-12 11:56:14 UTC <luite_> hmm, hpaste is down, what's a good alternative?
2013-06-12 11:56:49 UTC <luite_> ah perhaps github gist
2013-06-12 11:58:30 UTC <luite_> notdan: https://gist.github.com/luite/5764654
2013-06-12 12:00:02 UTC <luite_> notdan: that's the code i mentioned last week, with ghcLoad you can preload packages, then fork the process and continue from the existing session. rendering a simple cairo diagram (i tested with factorizationDiagram 10) goes down from ~0.6 to ~0.08 seconds
2013-06-12 12:01:00 UTC <luite_> notdan: with hintLoad you can't keep the whole session, but the GHC API does remember the linker state, so it's a bit faster than starting from scratch, but still 3x slower than ghcLoad the first diagram
2013-06-12 12:02:09 UTC <notdan> Oh, awesome
2013-06-12 12:02:10 UTC <luite_> notdan: so you just need to run some code that uses all packages you want to use, to make sure they're linked, then go into server mode, fork an interpreter for every request
2013-06-12 12:02:22 UTC <notdan> I'll use the first version anyway because hint does not compile with the latest GHC
2013-06-12 12:02:45 UTC <notdan> yep, that's really cool
2013-06-12 12:03:14 UTC <luite_> only disadvantage is that it requires forkProcess, windows doesn't ahve this
2013-06-12 12:03:22 UTC <luite_> but no one hosts websites on windows anyway :)
2013-06-12 12:03:36 UTC <notdan> True
2013-06-12 12:04:14 UTC <notdan> Hm, I didn't know about forkProcess. It's actually going to be very handy, because I didn't manage to find a way to kill thread after a timeout, but I know how to kill a process after timeout
2013-06-12 12:05:13 UTC <luite_>  yep, a separate process is the only reliable way to make something killable (ezyang is working on threads with resource limits for safe haskell but i don't trust them enough for a public site yet)
2013-06-12 12:05:54 UTC <luite_> also a separate process can do an SELinux API call before it runs any sensitive code, to restrict its own file/network access
2013-06-12 12:06:48 UTC <mr-> notdan: (Control.Concurrent.Async's race (threadDelay 10000) (this_will_stop_after_10000_somethings) :-)
2013-06-12 12:09:24 UTC <luite_> mr-: but the thread can forkIO more threads itself that keep running that way
2013-06-12 12:09:45 UTC <luite_> mr-: and a tight loop that does no allocation can starve the other threads
2013-06-12 12:14:14 UTC <mr-> Bummer.. nothing works as expected in concurrent programs
2013-06-12 12:45:44 UTC <notdan> Concurrency is hard :(
2013-06-12 12:46:26 UTC <notdan> byorgey: you are probably aware, but diagrams-lib from Git does not currently compile with active from Git
2013-06-12 13:03:14 UTC <byorgey> notdan: yes, I'm aware of that
2013-06-12 13:03:38 UTC <byorgey> notdan: the dev version of active is undergoing some potentially big changes
2013-06-12 13:03:49 UTC <byorgey> and it's in-process so there's no point updating diagrams to work with it yet
2013-06-12 13:04:20 UTC <byorgey> git diagrams does build with the latest active from Hackage (which is the recommended thing to do right now for doing diagrams development)
2013-06-12 13:21:21 UTC <notdan> Yeah, you still had to fiddle with active.cabal a little bit if you are building it against base-4.7 tho, but that's alright
2013-06-12 13:54:57 UTC <byorgey> ah, true, I haven't finished updating everything to build with HEAD GHC
2013-06-12 14:13:11 UTC <notdan> http://parenz.wordpress.com/2013/06/12/ghcjs-buid/
2013-06-12 14:13:54 UTC <notdan> My latest update ^. I have to admit, writing blog posts in English takes longer than I thought.
2013-06-12 14:15:01 UTC <mr-> notdan: and the troubles start with the url :-)
2013-06-12 14:15:15 UTC <notdan> Jesus
2013-06-12 14:15:35 UTC <notdan> argh, thanks for noticing mr- 
2013-06-12 14:15:49 UTC <notdan> I tought that I doubled checked everything
2013-06-12 15:01:30 UTC <luite_> notdan: are you going to submit ti to a mailing list or reddit?
2013-06-12 17:39:47 UTC <notdan> luite_: I've submitted it to Planet Haskell (and it got accepted)
2013-06-12 17:40:03 UTC <notdan> I'll post it to the mailing list when I get more substential content
2013-06-12 17:40:24 UTC <notdan> substantial*
2013-06-12 17:42:13 UTC <luite_> ok, later posts may also be more discussionable :)
2013-06-12 17:42:58 UTC <notdan> True :)
2013-06-12 17:49:11 UTC <fryguybob> byorgey: Updated http://www.cs.rochester.edu/u/ryates/temp/weave.pdf
2013-06-12 17:49:23 UTC <fryguybob> https://gist.github.com/anonymous/64da4ef89c637e36a425
2013-06-12 17:50:17 UTC <fryguybob> byorgey: It is pretty hacky to get it nice with that form of  pathZipperyOperationStuff.
2013-06-12 17:51:19 UTC <fryguybob> Something else would be a better example to motivate that particular form.  I'll try to do a form that operates on trails and includes the searching in the zippery part.
2013-06-12 17:55:14 UTC <ClaudiusMaximus> ugh, github syntax highlighting is completely broken with my browser defaults (white on black) - mostly visible, apart from operators...
2013-06-12 17:56:00 UTC <fryguybob> hehe
2013-06-12 17:57:05 UTC <ClaudiusMaximus> if pages set colours, better set *all* of them
2013-06-12 17:57:58 UTC <ClaudiusMaximus> either that or iceweasel isn't applying its colour scheme at the right level in the cascade
2013-06-12 18:53:23 UTC <byorgey> fryguybob: nice
2013-06-12 18:53:38 UTC <byorgey> fryguybob: also, excellent name =)
2013-06-12 18:58:13 UTC <carter> fryguybob oh, i forgot to intro you to another dude who was at hack phi who's big on STM and concurrency things
2013-06-12 18:58:19 UTC <carter> fryguybob fun meeting yah though
2013-06-12 19:05:16 UTC <fryguybob> carter: Likewise, who is this other person?
2013-06-12 19:13:43 UTC <carter> Luke
2013-06-12 19:15:20 UTC <carter> the guy who was from chicago / works in futures trading?
2013-06-12 19:15:56 UTC <fryguybob> Ok, I didn't meet him.  That's too bad.
2013-06-12 19:15:59 UTC <carter> jah
2013-06-12 19:16:01 UTC <carter> my fault 
2013-06-12 19:16:26 UTC <fryguybob> No problem :D
2013-06-12 19:20:10 UTC <luite_> hmm, not Luke Palmer?
2013-06-12 19:21:22 UTC <carter> luite_ nope, pretty sure different dude
2013-06-12 19:21:41 UTC <carter> http://www.haskell.org/haskellwiki/Hac_%CF%86/Attendees
2013-06-12 19:21:45 UTC <carter> luke hoersten?
2013-06-12 19:22:19 UTC <byorgey> yes, Luke Hoersten
2013-06-12 19:22:35 UTC <byorgey> is the Luke from Chicago
2013-06-12 19:37:32 UTC <notdan> Do you people know any way to search GHC API? I tried Hoogle and Hayoo but to no avail
2013-06-12 19:41:10 UTC <luite_> notdan: i usually use a local GHC installation
2013-06-12 19:45:05 UTC <notdan> luite_: hm, and what do you do with it? I thought you can't get much information apart from type signature
2013-06-12 19:45:47 UTC <fryguybob> notdan: :browse and :info ?
2013-06-12 19:46:40 UTC <fryguybob> notdan: There is also this: http://www.haskell.org/ghc/docs/latest/html/libraries/ghc/index.html
2013-06-12 19:47:59 UTC <luite_> notdan: lick on the [source] links a lot
2013-06-12 19:48:00 UTC <luite_> click
2013-06-12 19:48:40 UTC <fryguybob> Don't lick them, they don't taste good.
2013-06-12 19:48:51 UTC <notdan> fryguybob: but it doesn't show haddock documentation, unfortunately
2013-06-12 19:53:38 UTC <fryguybob> notdan: Which, ghci or the link?  It is sad that ghci doesn't do such a thing, but the link shows that in this case there isn't much haddocky stuff in many cases.
2013-06-12 19:54:09 UTC <fryguybob> Of course someone could always write more documentation...
2013-06-12 19:58:46 UTC <notdan> the former; of course, you can do :i expression and then go to the web page and look it up in the apprpriate module
2013-06-12 20:00:35 UTC <fryguybob> notdan: I often have the Index All page open for packages I'm working with then I can just Ctrl+F and find definitions.
2013-06-12 20:01:44 UTC <notdan> Hm, that's a good idea
2013-06-12 20:02:30 UTC <notdan> There was this function in ghc-mod for emacs that would automatically parse the :i <expr> output and open a web browser for you but I remember it making a lot of mistakes
2013-06-12 20:05:27 UTC <luite_> notdan: whoops i meant a local hoogle installation, not a local ghc installation
2013-06-12 20:07:09 UTC <notdan> ah, it allows you to search ghc api? splendid
2013-06-12 20:07:16 UTC <notdan> I ment to install hoogle locally anyway
2013-06-12 20:15:54 UTC <luite_> if you add it to your index then it shows up in the results yeah
2013-06-12 21:03:31 UTC <notdan> luite_: how did you manage to generate the index for GHC API?
2013-06-12 21:04:09 UTC <notdan> I tried, but stumbled upon a strange error: http://hpaste.org/89836
2013-06-12 21:05:20 UTC <luite_> notdan: i think it automatically generated the hoogle file
2013-06-12 21:05:55 UTC <luite_> haddock comes with ghc i think, you need to use the version that you get with your ghc
2013-06-12 21:07:02 UTC <notdan> It got automatically generated when you compiled the GHC?
2013-06-12 21:07:22 UTC <notdan> oh well, I haven't installed haddock back then
2013-06-12 21:10:55 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 142e34ccc http://travis-ci.org/diagrams/diagrams-lib/builds/8031177 The build was broken.
2013-06-12 21:23:21 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14404288c http://travis-ci.org/diagrams/diagrams-lib/builds/8031514 The build was fixed.
2013-06-12 21:56:11 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14ea8a405 http://travis-ci.org/diagrams/diagrams-lib/builds/8032514 The build was broken.
2013-06-12 23:35:52 UTC <mjo> Hello
2013-06-12 23:36:04 UTC <mjo> Hello
2013-06-12 23:36:33 UTC <mjo> Can one change the font in the Cairo PDF backend ?
2013-06-12 23:37:07 UTC <mjo> Or, to ask the real question, if I'm generating PDFs via Cairo is there any way to label them with Unicode text ?
2013-06-13 00:04:13 UTC <ClaudiusMaximus> i think you can, but i think there's some bad behaviour if the font isn't present (maybe it uses a default font, which might not have enough code points)
2013-06-13 00:12:11 UTC <mjo> That's OK. Do you know how I change the font ?
2013-06-13 00:12:30 UTC <mjo> And, forgive me, thanks for thinking about it
2013-06-13 00:13:09 UTC <byorgey> mjo: yes, you can use the 'font' function
2013-06-13 00:13:30 UTC <byorgey> like   circle 1 <> text "blah" # font "SomeFontName"
2013-06-13 00:13:43 UTC <byorgey> mjo: you may also be interested in the SVGFonts package
2013-06-13 00:13:44 UTC <mjo> byorgey: Gosh, however did I miss that!
2013-06-13 00:14:04 UTC <mjo> byorgey: I want to make PDFs, so I thought the SVG stuff wasnt' relevant. Am I wrong ?
2013-06-13 00:14:40 UTC <byorgey> mjo: right, if you want to make PDFs and you are able to build cairo on your system, that is the best way
2013-06-13 00:15:01 UTC <byorgey> I guess there are probably also ways to convert SVG to PDF
2013-06-13 00:15:12 UTC <mjo> Happily Cairo seems fine on MacOS with homebrew
2013-06-13 00:15:16 UTC <byorgey> but that's not as direct or convenient
2013-06-13 00:15:19 UTC <byorgey> good!
2013-06-13 00:15:49 UTC <mjo> Ah, splendid. A little beta has now appeared! 
2013-06-13 00:16:00 UTC <mjo> Thank you for the help, and sorry to waste your time
2013-06-13 00:16:05 UTC <byorgey> mjo: oh, sorry, I misunderstood your question before.  You can use the SVGFonts package with the cairo backend
2013-06-13 00:16:16 UTC <byorgey> SVGFonts just refers to the SVG font format
2013-06-13 00:16:23 UTC <byorgey> but that is independent of whether you are generating SVGs =)
2013-06-13 00:16:57 UTC <mjo> byorgey: Ah, I see. I think I'll stick with this for now, but it's good to know that there are alternatives
2013-06-13 00:18:19 UTC <byorgey> Sure. if the built-in font stuff works for you that is simplest.  SVGFonts gives you a lot more flexibility and power but it is also more difficult to use.
2013-06-13 00:18:56 UTC <mjo> Simple's good. I'm drawing some graphs and just want to label the nodes and edges
2013-06-13 00:19:45 UTC <byorgey> cool
2013-06-13 00:19:45 UTC <byorgey> eventually I'd like to have a module in diagrams-contrib for drawing graphs
2013-06-13 00:20:11 UTC <mjo> It would be nice to grab the ideas from the graphviz package for layout
2013-06-13 00:21:44 UTC <byorgey> oh, I wasn't really talking about layout
2013-06-13 00:22:07 UTC <byorgey> I don't think it makes much sense to reimplement layout stuff.  graphviz already does a pretty good job of that and it's quite complicated.
2013-06-13 00:22:22 UTC <byorgey> but I hope to make it easy to use graphviz to layout your graphs, and then diagrams to draw them
2013-06-13 00:23:08 UTC <mjo> I suppose I wonder if there's scope to implement better constraints if you move the layout engine into Haskell
2013-06-13 00:24:14 UTC <byorgey> yes, perhaps
2013-06-13 00:24:20 UTC <byorgey> but that is a really big project
2013-06-13 00:24:31 UTC <mjo> But there are many projects and few tuits
2013-06-13 00:24:34 UTC <mjo> Yes, indeed
2013-06-13 00:24:35 UTC <byorgey> indeed =)
2013-06-13 00:25:09 UTC <byorgey> we have definitely given some thought to implementing a general-purpose layout framework on top of diagrams, integrating a constraint solver, etc.
2013-06-13 00:25:25 UTC <byorgey> but it's probably on the scale of a GSoC project
2013-06-13 00:26:16 UTC <mjo> My thought was simply that your graphics stuff is exceedingly good at describing how parts of the diagram are positioned relative to each other without resorting to coordinate calculations. That sounds like the right way to express constraints
2013-06-13 00:26:29 UTC <byorgey> agreed.
2013-06-13 00:27:52 UTC <mjo> Anyway, for now, I think sleep beckons. Thanks again for solving my problem.
2013-06-13 00:29:33 UTC <tgeeky> coordinates are for the gravitational theorists and mapmakers
2013-06-13 01:57:39 UTC <travis-ci> [travis-ci] 13diagrams-lib/06bee-coh 14460a04e http://travis-ci.org/diagrams/diagrams-lib/builds/8037777 The build was fixed.
2013-06-13 01:58:47 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06bee-coh 145b8681f http://travis-ci.org/diagrams/diagrams-cairo/builds/8037811 The build is still failing.
2013-06-13 02:23:20 UTC <byorgey> refactoring complete!
2013-06-13 02:23:27 UTC <byorgey> now to add lots of documentation
2013-06-13 12:34:53 UTC <luite_> does anyone know/have system demo proposals for the haskell symposium? i'd like to submit one for ghcjs, but don't really know what i should write, other than that it should be 1-2 pages
2013-06-13 13:48:09 UTC <byorgey> luite_: I don't really know, but I think you should write something along the lines of: 1. Introduction: what is ghcjs and why is it cool? 2. What you plan to demo 3. Why this is of interest to the Haskell community, references to related stuff, etc.
2013-06-13 13:50:43 UTC <byorgey> basically you want to prove to the committee that (a) you have something cool to show off (b) which will be of general interest to the Haskell community, and (c) you know what you are talking about
2013-06-13 13:53:16 UTC <luite_> ack, (c) is going to be a problem :(
2013-06-13 13:54:14 UTC <byorgey> I *highly* doubt that.
2013-06-13 13:55:12 UTC <byorgey> it's not like you need a section called "I Know What I Am Talking About"
2013-06-13 13:55:43 UTC <byorgey> just by describing the project, what you intend to demo, etc. in more than superficial detail you prove that you know what you are talking about.
2013-06-13 14:02:01 UTC <fryguybob> luite_: "It works and I did it" is often excellent evidence of (c).
2013-06-13 14:03:49 UTC <byorgey> indeed.
2013-06-13 14:04:38 UTC <fryguybob> luite_: "We found bugs in GHC" is also a good one.
2013-06-13 14:04:44 UTC <byorgey> hehe, indeed =)
2013-06-13 14:09:04 UTC <luite_> theorem 1. i know what i'm talking about, proof
2013-06-13 14:09:07 UTC <notdan> Hello.
2013-06-13 14:09:10 UTC <notdan> How are you doing?
2013-06-13 14:10:43 UTC <notdan> luite_: I think you just have to metion recent work on compiling Haskell to JS, Fay, Roy
2013-06-13 14:11:32 UTC <luite_> Roy isn't really haskell
2013-06-13 14:11:32 UTC <byorgey> hi notdan
2013-06-13 14:11:41 UTC <fryguybob> notdan: Fine, thanks. How are you?
2013-06-13 14:12:43 UTC <luite_> i noticed that the haste compiler guy is working on his project again, i thought he stopped. that's much closer to ghcjs (actually rather close to our old code generator), perhaps he's preparing some haskell symposium or icfp thing
2013-06-13 14:13:24 UTC <luite_> he also uses the ghc api, but not threaded and not fully tail call optimized (only direct tail calls, like fay)
2013-06-13 14:13:28 UTC <byorgey> perhaps.  it would be fun to have two different projects of that sort both represented at ICFP
2013-06-13 14:15:44 UTC <luite_> dunno, it's good to explore multiple paths, but i kind of hate the snap vs yesod kind of discussions on reddit, i hope it doesn't become something like that
2013-06-13 14:23:17 UTC <byorgey> hehe
2013-06-13 14:23:46 UTC <byorgey> I hope it doesn't too.  But either way there's not a lot you can do about it.
2013-06-13 14:24:00 UTC <byorgey> Or rather, the only thing you can do about it is make your thing so awesome that there's no comparison.
2013-06-13 14:24:06 UTC <byorgey> and it seems you are well down that path =)
2013-06-13 14:24:23 UTC <luite_> we'll see, i'm not so sure yet
2013-06-13 14:26:04 UTC <luite_> we finally have travis support though, i'm happy about that one :) https://travis-ci.org/ghcjs/ghcjs
2013-06-13 14:26:23 UTC <byorgey> oh, nice =)
2013-06-13 14:26:28 UTC <luite_> 375 passed, 0 failed :)
2013-06-13 14:26:34 UTC <byorgey> haha, how long do the builds take?
2013-06-13 14:26:41 UTC <luite_> 2x 30 minutes
2013-06-13 14:26:47 UTC <byorgey> oh, that's not so bad
2013-06-13 14:26:53 UTC <luite_> i had to disable the ghcjs optimizer :/
2013-06-13 14:26:59 UTC <byorgey> hehe
2013-06-13 14:27:19 UTC <luite_> but i want to optimize that anyway, it's too slow
2013-06-13 14:27:24 UTC <luite_> and the testrunner runs with -j2
2013-06-13 14:27:28 UTC <luite_> saves a lot of time
2013-06-13 14:28:06 UTC <byorgey> you want to optimize the optimizer? =)
2013-06-13 14:28:22 UTC <byorgey> oh, does the travis build environment have multiple cores?
2013-06-13 14:28:32 UTC <byorgey> that would speed up the diagrams builds too =)
2013-06-13 14:28:40 UTC <luite_> don't know, but it does help :)
2013-06-13 14:29:01 UTC <mgsloan> -j2 can help with even one core, due to IO blocking 'n such
2013-06-13 14:29:04 UTC <luite_> some part is io heavy (linker), and some cpu bound part
2013-06-13 14:29:08 UTC <byorgey> ah, good point
2013-06-13 14:29:32 UTC <luite_> the ghcjs testsuite compiles every testcase to an 'executable', so there's lots of linking overhead
2013-06-13 14:29:43 UTC <luite_> it's mostly just the should_run tests from the ghc testsuite :)
2013-06-13 14:30:09 UTC <byorgey> ah, I see
2013-06-13 16:04:33 UTC <notdan> luite_: I have problems with linker using GHC API on both OS X and in the ghcjs-build prebuilt version: https://gist.github.com/co-dan/21b557de871cb877b085 They are different but I didn't manage to solve neither of them :(
2013-06-13 16:05:22 UTC <notdan> In the OS X case it looks like the compiler didn't produce something? And in the prebuilt version I have some terrible package failure
2013-06-13 16:12:08 UTC <notdan> The libdir is correct: "/home/vagrant/ghc/lib/ghc-7.7.20130606" and there is /home/vagrant/ghc/lib/ghc-7.7.20130606/base-4.7.0.0/libHSbase-4.7.0.0.a
2013-06-13 16:38:46 UTC <notdan> luite_: oh, nevermind, monochrome has helped me with the problem
2013-06-13 19:17:05 UTC <notdan> luite_: OK, I managed to get my pastebin to work with GHC API, it renders everything correctly now. Next I am going to work on performance (preloading the libraries) and security (disabling modules, whitelisting packages, etc)
2013-06-13 19:19:32 UTC <notdan> https://github.com/co-dan/interactive-diagrams/tree/eval/scotty-pastebin
2013-06-13 19:20:10 UTC <byorgey> notdan++
2013-06-13 19:21:31 UTC <notdan> Thanks Brent :)
2013-06-13 19:31:27 UTC <notdan> The Hoogle page on the wiki is really outdated. I made some changes but it's being phased out
2013-06-13 19:46:17 UTC <luite_> notdan: oh what was the problem?
2013-06-13 19:48:10 UTC <luite_> notdan: you'll probably need a few more changes, the load LoadAllTargets line returns a SuccessFlag, that needs to be checked before continuing
2013-06-13 19:49:11 UTC <luite_> notdan: but it logs all errors through the LogAction in DynFlags, so change that to capture them so you can return them to the client
2013-06-13 19:51:12 UTC <notdan> Yeah, I'll also have to use exceptions, because 'exprType' throws one if the typecheck fails
2013-06-13 19:51:14 UTC <notdan> s/use/catch/
2013-06-14 12:51:08 UTC <byorgey> uh oh
2013-06-14 12:51:19 UTC <mr-> luite_: better order a new one!
2013-06-14 12:51:38 UTC <mr-> (and cancel the order when you come online)
2013-06-14 12:52:33 UTC <luite_> hehe it's supplied by my isp
2013-06-14 12:53:13 UTC <luite_> hmm, i can't may any new connections, only my existing ssh connection keeps working
2013-06-14 12:54:04 UTC <luite_> and the web and telnet admin interfaces are down
2013-06-14 13:06:29 UTC <luite_> i'm back, if you can read this!
2013-06-14 13:22:23 UTC <byorgey> luite_: I can read it!  glad you got it to work
2013-06-14 13:27:20 UTC <luite_> ah hmm, it's a bit unstable, sometimes it takes a few minutes for some text to come through
2013-06-14 13:34:20 UTC <byorgey> weird
2013-06-14 13:41:19 UTC <luite_> davorak: what version of diagrams did you test with?
2013-06-14 14:04:58 UTC <luite_> davorak: you found a bug in the scheduler, when it yields to let the browser render, the scheduler isn't restarted again
2013-06-14 14:08:30 UTC <luite_> i'll push some fixes later today
2013-06-14 14:09:21 UTC <luite_> davorak: note that we have diagrams-ghcjs that renders directly to a canvas, to avoid the expensive string -> text -> jsstring -> xml conversion
2013-06-14 14:53:38 UTC <luite_> k fix pushed
2013-06-14 15:22:30 UTC <luite_> does anyone know ian-woo kim's email?
2013-06-14 15:41:12 UTC <luite_> ah found it on -cafe
2013-06-14 16:05:44 UTC <luite_> bleh i still don't have a demo proposal
2013-06-14 20:33:52 UTC <ClaudiusMaximus> today's diagramming http://mathr.co.uk/mandelbrot/2013-06-14_embedded_patterns/  (just hand drawn on top of printed paper so far...)
2013-06-14 20:41:09 UTC <byorgey> neat =)
2013-06-14 20:42:02 UTC <ClaudiusMaximus> i was planning on writing a blog post about it today, but it took a proper age to scan/postprocess all the images
2013-06-14 20:44:29 UTC <ClaudiusMaximus> seems GIMP really doesn't like it when you have too much image data in memory (gimp process peaked at 6GB, but i'm sure i had more and gimp was using it's own swap instead of the OS swap...)
2013-06-14 20:44:29 UTC <ClaudiusMaximus> didn't crash, just got *incredibly* slow
2013-06-14 20:44:29 UTC <byorgey> hehe
2013-06-14 21:07:36 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Flowsnake.pdf  -- third-order flowsnake =)
2013-06-14 21:22:15 UTC <ClaudiusMaximus> byorgey: nice :)
2013-06-14 21:31:07 UTC <tgeeky> well that was a relatively (first world) long time without power
2013-06-14 21:46:33 UTC <luite_> blergh still no proposal
2013-06-14 21:46:41 UTC <tgeeky> gsoc proposal?
2013-06-14 21:46:59 UTC <luite_> no haskell symposium
2013-06-14 21:52:25 UTC <luite_> bleh i guess it's a sign i'm doing something wrong if i have to pay for the icfp trip+admission out of my own pocket anyway
2013-06-14 22:22:50 UTC <luite_> grmblz
2013-06-15 01:42:52 UTC <tgeeky> luite_: did you ask for a waiver for admission?
2013-06-15 03:28:07 UTC <luite_> tgeeky: no, i'm not sure how
2013-06-15 03:28:20 UTC <luite_> it says that there are student travel grants etc, but i'm not a student anymore
2013-06-15 03:28:37 UTC <luite_> i just submitted my crappy proposal
2013-06-18 12:09:47 UTC <luite_> notdan: I don't knwo what you're working on at the moment, but don't spend too much time on module/package whitelisting. resource and time limits are more important, the other things can be done with selinux access control
2013-06-18 13:19:30 UTC <luite_> bleh my internet connection here is flaky
2013-06-18 15:10:38 UTC <notdan> luite_: sorry, I won't be able to do much work in the beginning of this week as I have a couple of exams, but I'll make up for it
2013-06-18 15:12:02 UTC <notdan> luite_: I was thinking about forkProcess for setting the time limit, btw. The problem is, if I understand correctly, there is no way to access the output of forkProcess
2013-06-18 15:15:14 UTC <luite_> notdan: no prob, you started early :)
2013-06-18 15:15:37 UTC <byorgey> notdan: good luck with your exams
2013-06-18 15:15:46 UTC <luite_> yep that too :p
2013-06-18 15:16:09 UTC <luite_> notdan: you get a ProcessID, which you can send kill signals to
2013-06-18 15:16:24 UTC <luite_> notdan: oh, you mean the stdout etc?
2013-06-18 15:17:16 UTC <luite_> they inherit the sockets from their parent
2013-06-18 15:17:23 UTC <luite_> so you can set something up to communicate
2013-06-18 15:17:44 UTC <notdan> Yeah. We wanted to render the values that return IO Diagram or just Diagram (Diagram R2 X to be precise)
2013-06-18 15:17:55 UTC <notdan> hm, OK, I'll try that
2013-06-18 15:18:38 UTC <luite_> yeah you're not going to be able to send over IO Diagram values, but the binary data of the result, a .png or .svg, should be doable
2013-06-18 15:19:07 UTC <luite_> but perhaps you don't need communication at all: just tell the interpreter to write the result to a temp dir
2013-06-18 15:33:07 UTC <notdan> but what if we kill the process when it is writing to a file? We'll get corrupt data
2013-06-18 15:33:35 UTC <luite_> if it didn't finish in time, just print an error
2013-06-18 15:33:36 UTC <notdan> (btw, thanks byorgey and luite_ fot your wishes regarding my exams)
2013-06-18 15:33:58 UTC <notdan> luite_: oh, right
2013-06-18 15:35:03 UTC <luite_> we can restrict with selinux that the process can fork and start other stuff
2013-06-18 15:35:21 UTC <luite_> so killing it should leave nothing behind
2013-06-18 15:35:43 UTC <luite_> then clean the temp dir, start it again for the next request
2013-06-18 15:36:11 UTC <luite_> notdan: if you have questions about your exam material, feel free to ask ;)
2013-06-18 15:45:44 UTC <notdan> hah, thanks 
2013-06-18 16:45:57 UTC <byorgey> ugh why is writing papers so hard
2013-06-18 16:46:30 UTC <luite_> :(
2013-06-18 16:50:01 UTC <byorgey> I like writing.  I'm pretty OK at it, even.  I like being able to share my work and insights with others.  But the process of actually writing papers is like pulling teeth.
2013-06-18 16:50:44 UTC <byorgey> (currently working on a paper for POPL about using species as a foundation for thinking about data structures)
2013-06-18 16:55:23 UTC <luite_> and i thought writing weblog posts was bad ;)
2013-06-18 16:55:40 UTC <byorgey> luite_: well, when your weblog posts are as long as a paper... ;)
2013-06-18 16:57:04 UTC <luite_> i'm writing one about frp with ghcjs, but it turns out that sodium doesn't work properly with ghc head :(
2013-06-18 16:57:11 UTC <byorgey> aww
2013-06-18 16:57:50 UTC <byorgey> what's the problem?
2013-06-18 16:57:56 UTC <luite_> it gets stuck in a loop
2013-06-18 16:58:16 UTC <byorgey> oh, it builds but has the wrong semantics? ouch =(
2013-06-18 16:58:35 UTC <byorgey> I was thinking you meant it didn't compile, but this is way worse
2013-06-18 16:58:39 UTC <luite_> frp implementations are known to be messy
2013-06-18 16:58:45 UTC <byorgey> indeed
2013-06-18 16:58:50 UTC <luite_> sodium uses lots of unsafePerformIO under the hood
2013-06-18 16:59:13 UTC <byorgey> la la la I don't want to know I'm not listening la la la la
2013-06-18 16:59:21 UTC <byorgey> ;)
2013-06-18 16:59:21 UTC <luite_> :)
2013-06-18 16:59:34 UTC <luite_> i first thougth that it was a problem with ghcjs, but fortunately native programs get stuck too
2013-06-18 17:00:31 UTC <byorgey> well... it's nice that it's not your fault I guess, but on the other hand that means you can't fix it as easily
2013-06-18 17:00:54 UTC <luite_> right :)
2013-06-18 17:03:30 UTC <luite_> simple things work, but when i try to use the Applicative instance for Behaviour it gets stuck
2013-06-18 17:03:48 UTC <byorgey> that seems rather central
2013-06-18 17:04:12 UTC <byorgey> can't get very far with FRP not using the Applicative instance for Behaviour =)
2013-06-18 17:04:52 UTC <luite_> yeah you can work around it by doing everything manually, doing everything in IO, sampling behaviours, combining them in IO, pushing new Events
2013-06-18 17:05:01 UTC <luite_> but that rather defeats the point of FRP :)
2013-06-18 17:07:41 UTC <byorgey> hehe
2013-06-18 17:07:49 UTC <byorgey> you can write everything in assembly too!
2013-06-18 17:11:47 UTC <luite_> i'm adding some more unsafePerformIO to find out where it gets stuck
2013-06-18 17:13:09 UTC <luite_> i wonder if there's a bether way
2013-06-18 17:13:11 UTC <luite_> better
2013-06-18 18:50:03 UTC <fryguybob> ACTION made it to California.
2013-06-18 18:50:17 UTC <byorgey> hurrah!
2013-06-18 18:56:52 UTC <byorgey> fryguybob: what are you doing in CA? visiting family?
2013-06-18 19:19:02 UTC <fryguybob> byorgey: Yeah, my parents.
2013-06-18 19:19:19 UTC <byorgey> cool, have a great time
2013-06-18 19:19:25 UTC <fryguybob> (And a lot of family friends)
2013-06-18 19:19:49 UTC <carter> enjoy
2013-06-18 19:21:07 UTC <byorgey> fryguybob: do you think you'll have a chance to look at/merge the trail refactoring anytime soon?  If not I can just merge it myself but wanted to give you a chance to look over it if you want.
2013-06-18 20:34:30 UTC <fryguybob> byorgey: Yeah, I think I might have some time this afternoon/evening to look at it.
2013-06-18 20:34:38 UTC <byorgey> cool
2013-06-18 22:02:23 UTC <fryguybob> ACTION notes that he should remember to run  cabal update  before scratching his head over an error message.
2013-06-18 22:24:26 UTC <carter> fryguybob also cabal-instal head is less borken  now and has sandboxing, try it out :) 
2013-06-19 16:10:24 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/Poster.png  -- working on designing a factorization diagrams poster, feedback welcome =)
2013-06-19 16:47:12 UTC <fryguybob> byorgey: Rebekah said she would hang it on the wall if she had one.
2013-06-19 16:47:20 UTC <byorgey> =D
2013-06-19 16:47:31 UTC <byorgey> if she had a poster, or if she had a wall?
2013-06-19 16:47:49 UTC <fryguybob> byorgey: :D a poster.  She has several walls
2013-06-19 16:47:55 UTC <byorgey> ok, just checking =)
2013-06-19 16:49:21 UTC <fryguybob> byorgey: I don't know if it is just due to it being a png, but primes with repeating adjacent digits (11, 113) do not consistently have a gap between digits.
2013-06-19 16:51:37 UTC <byorgey> hmm, good point
2013-06-19 16:51:56 UTC <byorgey> we don't have a nice story for that sort of pixel-level accuracy in general
2013-06-19 16:52:20 UTC <byorgey> e.g.  (square 1 ||| square 1) # fc red # lw 0   may or may not have a visible line between the two
2013-06-19 16:54:05 UTC <fryguybob> byorgey: yeah, I don't remember what Cairo has for that sort of thing.
2013-06-19 21:01:34 UTC <fryguybob> byorgey: Looking through the second half of the pull request now.
2013-06-20 01:56:54 UTC <byorgey> ACTION does some diagrams profiling just for fun
2013-06-20 02:15:07 UTC <byorgey> ACTION is still building profiling versions of all the dependencies =(
2013-06-20 02:29:55 UTC <byorgey> argh, converting the Turtle module to the new Trail API is annoying
2013-06-20 02:30:23 UTC <byorgey> it made some idiosyncratic uses of the low-level details of the old Trails =(
2013-06-20 02:32:59 UTC <mgsloan1> I'm sure noone will mind if you change the API a bit :D
2013-06-20 02:37:03 UTC <byorgey> =)
2013-06-20 02:37:10 UTC <byorgey> I don't think I have to change the API at all, actually
2013-06-20 02:37:24 UTC <byorgey> it's just nontrivial to figure out how to reimplement
2013-06-20 02:37:53 UTC <byorgey> I suppose that's what I get for being so nice about exporting everything.
2013-06-20 02:38:33 UTC <mgsloan> hehe
2013-06-20 02:39:25 UTC <byorgey> I guess I should export everything but put some things in modules with names like  Diagrams.Trail.Internal.ThisMightChangeInTheFuture.IMeanIt
2013-06-20 02:40:04 UTC <mgsloan> Yeah, for use by high performance diagrams!
2013-06-20 02:40:15 UTC <byorgey> =)
2013-06-20 02:40:35 UTC <byorgey> I don't think we have any of those yet.  That's why I need to do profiling. ;)
2013-06-20 03:12:26 UTC <byorgey> hmm, finally got everything compiled with profiling... and I have no idea how to interpret the results =)
2013-06-20 03:21:33 UTC <byorgey> ahh, I needed to compile diagrams-lib with -fprof-auto, not just the test program itself
2013-06-20 03:25:57 UTC <byorgey> apparently 25% of the time was spent in 'rotateBy' o.O
2013-06-20 03:56:12 UTC <mgsloan> for turtle?
2013-06-20 03:56:15 UTC <mgsloan> makes sense
2013-06-20 03:56:56 UTC <mgsloan> Hmm, or not
2013-06-20 03:57:13 UTC <mgsloan> Unless it's actually very fast, then 25% makes sense :D
2013-06-20 03:59:34 UTC <tgeeky> ACTION wonders if that statement makes sense
2013-06-20 03:59:54 UTC <mgsloan> ACTION isn't sure, he's been up for 22 hrs
2013-06-20 04:00:06 UTC <mgsloan> Pretty sure it makes sense though
2013-06-20 04:00:07 UTC <tgeeky> did it say 25% of calls were rotateBy, or 25% of time was spent in rotateBy
2013-06-20 04:02:05 UTC <mgsloan> Right, so I'm thinking that rotateBy for individual line segs / beziers should be really really fast.  That's why if the whole computation is fast, 25% makes sense.  Or at least, I think that's all that turtle does - or it might do something really inefficient :D - I ought to know I wrote the original one, but eh
2013-06-20 04:02:53 UTC <mgsloan> Ah, we've got a pronoun issue here
2013-06-20 04:03:09 UTC <mgsloan> my "it" was supposed to mean "the test program"
2013-06-20 04:03:18 UTC <mgsloan> And it probably isn't turtle stuff
2013-06-20 04:03:28 UTC <mgsloan> Anyway, how's it going, tgeeky?
2013-06-20 04:04:53 UTC <tgeeky> it's going OK. I'm currently doing/learning circuit board repair and soldering stuff
2013-06-20 04:05:11 UTC <mgsloan> Cool!!
2013-06-20 04:05:21 UTC <mgsloan> Some application in specific?
2013-06-20 04:05:53 UTC <tgeeky> nope, just trying to repair a broken subwoofer
2013-06-20 04:06:03 UTC <tgeeky> but i hope to use it towards ardunio etc stuff later
2013-06-20 04:06:21 UTC <mgsloan> Gotcha!  Yup, that stuff's fun!  I used to do a little bit of microcontroller robotics stuff
2013-06-20 04:06:36 UTC <mgsloan> Haven't in ages, but hope to get back to it one of these days
2013-06-20 04:06:48 UTC <mgsloan> Well, one of these years more like
2013-06-20 04:07:36 UTC <mgsloan> I'm awful at soldering though
2013-06-20 04:07:47 UTC <tgeeky> yeah, I thought so too, until I got my hands on a good soldering iron.
2013-06-20 04:07:53 UTC <tgeeky> totally incomparable tools.
2013-06-20 04:08:05 UTC <mgsloan> Ahhh, yeah, that might be part of it
2013-06-20 04:08:28 UTC <mgsloan> Also you've gotta know what a good joint looks like
2013-06-20 04:08:32 UTC <tgeeky> I did a test with a bad (radio shack) and good (hakko base station)
2013-06-20 04:08:45 UTC <mgsloan> Yeah, I think I've got some radio shack stuff or something
2013-06-20 04:08:56 UTC <tgeeky> spreadsheet, timed how long it took from OFF to 150, 200, 250, 300, 350 .. 500 F
2013-06-20 04:09:04 UTC <tgeeky> all told for the crappy one, it took about 4 minutes
2013-06-20 04:09:18 UTC <mgsloan> I'm glad to remember the days when there were still electronics components shops other than radioshack
2013-06-20 04:09:20 UTC <tgeeky> i never even entered anything in the spreadsheet for the good one, because by the time I wrote the 150 F down, it got to 500.
2013-06-20 04:09:27 UTC <mgsloan> (not so glad that it's only a memory)
2013-06-20 04:09:42 UTC <tgeeky> there's a great on here called Ack Electronics. Nice guys, local business.
2013-06-20 04:09:45 UTC <mgsloan> (at least around this area)
2013-06-20 04:09:46 UTC <mgsloan> nice!
2013-06-20 04:09:55 UTC <mgsloan> good to hear they aren't all gone
2013-06-20 13:57:09 UTC <byorgey> mgsloan: hehe, yeah, the 25% on rotateBy was for the particular test program I'm running, which does not involve Turtle =)
2013-06-20 13:57:22 UTC <byorgey> I just had to get the turtle stuff building first
2013-06-20 13:58:03 UTC <byorgey> the test program does in fact do a lot of rotation
2013-06-20 14:06:16 UTC <luite> does it do expensive number conversions?
2013-06-20 14:16:04 UTC <byorgey> I don't think so
2013-06-20 14:17:00 UTC <byorgey> I don't even know yet whether this is actually an opportunitity for optimization, or if it's just that this program really does a lot of rotation and it's great that we can spend a lot of time actually computing rotations instead of handling a bunch of other overhead. =)
2013-06-20 14:17:15 UTC <luite> hehe
2013-06-20 14:17:39 UTC <byorgey> I also wonder about strictness though.  I think diagrams has exactly zero strictness annotations.
2013-06-20 14:18:07 UTC <byorgey> I guess I'll have to do some memory profiling to check for that though.
2013-06-20 14:18:14 UTC <luite> i've finally fixed sodium to work with GHC HEAD (and therefore GHCJS), so i can continue writing my weblog post now.... good thing i don't have beeminder or this bug would've cost me ;)
2013-06-20 14:18:28 UTC <byorgey> yay!
2013-06-20 14:19:00 UTC <luite> apparently HEAD was more aggressive in let floating some unsafePerformIO sections
2013-06-20 14:26:39 UTC <byorgey> ah
2013-06-20 14:27:03 UTC <luite> http://hdiff.luite.com:3000/ <- reactive calculator!
2013-06-20 14:27:19 UTC <byorgey> ouch, so sodium was relying on some unspecified semantics of unsafePerformIO?
2013-06-20 14:27:42 UTC <byorgey> i.e. is HEAD justified in doing the more aggressive let floating, or is it a bug?
2013-06-20 14:28:13 UTC <luite> the file is compiled with -fno-full-laziness, so it probably shouldn't do this
2013-06-20 14:28:30 UTC <luite> but it's a bit risky to have code depend on that kind of compilation flags
2013-06-20 14:28:46 UTC <byorgey> yeah
2013-06-20 14:28:53 UTC <byorgey> super cool calculator!
2013-06-20 14:29:05 UTC <luite> hehe yeah it only took me 3 days to get working ;)
2013-06-20 14:29:07 UTC <byorgey> I was typing in digits as fast as I could and it was updating the answer instantly =)
2013-06-20 14:29:22 UTC <byorgey> hmm, this must be running in my browser!  amazing! =D
2013-06-20 14:29:32 UTC <luite> I moved all the unsafePerformIO to a single NOINLINE function that has a dummy parameter so let floating has no effect on it
2013-06-20 14:30:01 UTC <byorgey> nice
2013-06-20 14:30:10 UTC <luite> hehe i guess you're mostly testing JSBN performance
2013-06-20 14:30:18 UTC <byorgey> right =)
2013-06-20 14:31:17 UTC <byorgey> so is that worth submitting back upstream to the sodium folks, or is it just a temporary fix to get your example running?
2013-06-20 14:31:23 UTC <luite> I've already submitted it
2013-06-20 14:31:36 UTC <luite> it's also necessary to get it working with GHC, not just GHCJS
2013-06-20 14:31:58 UTC <byorgey> right, cool
2013-06-20 14:32:51 UTC <luite> https://github.com/luite/sodium/commit/9dfbead001cee6e5c3aa2b4eefa3ba094190f474
2013-06-20 14:36:52 UTC <luite> http://hpaste.org/90194 calculator, everything after line 40 should probably be moved into some library that creates reactive html widgets
2013-06-20 14:37:47 UTC <luite> hopefully i can interest someone into doing that with the blog post, or perhaps notdan will have time for it later in the gsoc after basic pastes work
2013-06-20 14:39:23 UTC <luite> and hopefully heinrich apfelmus will quickly create a version for reactive-banana, in fear of losing to sodium ;)
2013-06-20 14:40:35 UTC <byorgey> hehe =)
2013-06-20 14:41:01 UTC <luite> are there more non-arrow frp libs that should be supported?
2013-06-20 14:42:18 UTC <byorgey> those are the only big ones I think
2013-06-20 14:42:39 UTC <byorgey> I thought I saw recently that someone made a modern reimplementation of conal's reactive
2013-06-20 14:42:46 UTC <byorgey> but I don't remember what it was called, or what the status is
2013-06-20 14:42:51 UTC <luite> oh i haven't seen that one yet
2013-06-20 14:43:26 UTC <byorgey> I can't find it on Hackage
2013-06-20 14:43:53 UTC <luite> maybe i'll try netwire later, i haven't used it so far. classical frp seems simpler for an introduction though
2013-06-20 14:45:55 UTC <luite> and sodium seems practical since you can easily modify the network in multiple sync calls, not sure if that's possible with reactive-banana
2013-06-20 15:11:56 UTC <luite> do you use something to limit the amount of spam on your blogs? i'm getting tired of flagging messages as spam every day
2013-06-20 15:28:36 UTC <byorgey> luite: I have the comments moderated, and if I approve a comment then that person's comments don't get moderated in the future
2013-06-20 15:29:53 UTC <byorgey> I think wordpress does a pretty good job pre-filtering obvious spam
2013-06-20 15:30:29 UTC <byorgey> so it's not a lot of work for me, maybe two or three spam comments which it doesn't catch that I have to manually flag per week
2013-06-20 15:32:48 UTC <luite> oh i get 10 per day or so
2013-06-20 15:34:05 UTC <byorgey> yeah, that's a lot
2013-06-20 15:36:06 UTC <byorgey> I just checked the spam folder (where wordpress sticks obvious spam it didn't bother notifying me about) and it looks like even there I only get 2-3 per day
2013-06-20 15:36:19 UTC <byorgey> you're on blogspot?
2013-06-20 15:53:38 UTC <luite> no just a wordpress installation
2013-06-20 15:54:47 UTC <byorgey> oh.  your own custom installation, or on wordpress.com?
2013-06-20 15:56:11 UTC <ClaudiusMaximus> luite: a friend uses this: http://wordpress.org/plugins/akismet/
2013-06-20 15:56:21 UTC <ClaudiusMaximus> dunno how successful it is
2013-06-20 15:56:34 UTC <byorgey> yes, I was going to suggest akismet too
2013-06-20 15:56:44 UTC <byorgey> I used to use it when I had my own custom wordpress install, it worked great
2013-06-20 15:56:49 UTC <byorgey> and I think that's what wordpress.com uses too
2013-06-20 15:58:27 UTC <ClaudiusMaximus> i think you might need to jump through hoops to get an API key if you're not hosted on wordpress.com, though
2013-06-20 15:59:04 UTC <byorgey> it's not hard as I recall, you just generate one on the akismet site and then paste it into your wordpress config
2013-06-20 16:00:21 UTC <ClaudiusMaximus> http://wordpress.org/support/topic/wpcom-no-no-api-key-for-you-next#post-
2013-06-20 16:03:11 UTC <byorgey> ah, I see
2013-06-20 16:03:30 UTC <byorgey> ok, so a few hoops, but they are fairly large hoops which are close to the ground ;)
2013-06-20 16:03:35 UTC <ClaudiusMaximus> :)
2013-06-20 16:10:40 UTC <notdan> luite: hi! so I was battling the problem of timeout for forked process. https://gist.github.com/co-dan/cf5773fb02b6c54b7ced I am using this code and it seems that if I don't pass WNOHANG to waitpid, then it actually blocks the whole process, not just a thread. And if I do pass the WNOHANG then getProcessStatus will return immediatly. I was curious if it's possible to wait for the process and blocking only the current thread
2013-06-20 16:11:14 UTC <notdan> There is 'waitForProcess', but it's from a different library
2013-06-20 16:14:31 UTC <notdan> luite: oh, wait, never mind, I forgot to compile my project with -threaded
2013-06-20 16:14:44 UTC <notdan> how stupid of me :(
2013-06-20 16:46:56 UTC <luite> byorgey: my own, so i can customize the scripts etc :)
2013-06-20 16:47:04 UTC <luite> also because it's cheaper
2013-06-20 16:47:20 UTC <luite> oh akismet, tnx
2013-06-20 16:47:50 UTC <luite> notdan: compile the program with -threaded
2013-06-20 16:47:59 UTC <luite> and forkIO
2013-06-20 16:57:20 UTC <luite> notdan: oh wait, never mind, i forgot to read the rest of your lines. how stupid of me :(
2013-06-20 16:57:27 UTC <luite> :p
2013-06-20 16:57:51 UTC <byorgey> hehe
2013-06-20 16:59:05 UTC <luite> notdan: when are you done with your exams?
2013-06-20 17:09:31 UTC <notdan> I think I am actually done with them for now. The thing is, I got really ill yesterday and skipped two exams because of that, I think I'll have to take them in September now
2013-06-20 17:10:07 UTC <luite> ow :(
2013-06-20 17:10:52 UTC <luite> i hope you feel better soon
2013-06-20 17:14:52 UTC <notdan> thanks
2013-06-20 17:14:54 UTC <luite> I just wanted to know when i should prepare some of the SELinux stuff. it's just some example of the haskell selinux bindings to restrict privileges of a process after forking, and an selinux policy for ubuntu. unfortunately i don't have the code here :(
2013-06-20 17:15:14 UTC <notdan> Hm, isn't it on hackage?
2013-06-20 17:15:30 UTC <luite> oh the selinux package is, but the policy and other code isn't
2013-06-20 17:16:08 UTC <notdan> ah
2013-06-20 17:16:10 UTC <luite> selinux is not that hard, but it took me a few weeks to figure out how to write the policy correctly and how to do the switch to drop privileges
2013-06-20 17:16:17 UTC <luite> so that's probably useful :)
2013-06-20 17:17:31 UTC <notdan> Yeah that certainly sounds useful. Well I guess you can share it when you have access to it. I still have a bunch of work to do. Right now I am running interpreter in a very inefficient way, without preloading and stuff
2013-06-20 17:17:36 UTC <notdan> so I have to figure that out
2013-06-20 17:18:44 UTC <luite> right, do that first, resource limits are also still necessary, selinux doesn't do those
2013-06-20 17:19:06 UTC <luite> the ulimit limits from mueval are probably useful
2013-06-20 17:19:23 UTC <luite> and cgroups for the rest
2013-06-20 17:31:43 UTC <notdan> So it kinda works now https://dl.dropboxusercontent.com/u/144379/screenshots/2013-06-20-212318_1024x600_scrot.png
2013-06-20 17:31:55 UTC <notdan> but I wouldn't mind polishing the code a little bit more
2013-06-20 17:36:55 UTC <luite> 6cool
2013-06-20 17:36:59 UTC <luite> uh, without the 6
2013-06-20 17:37:07 UTC <luite> unless that's better somehow :)
2013-06-20 17:38:15 UTC <byorgey> very 6cool, notdan
2013-06-20 20:15:44 UTC <byorgey> oooooh
2013-06-20 20:18:38 UTC <travis-ci> [travis-ci] 13diagrams-lib/06nurbs 14b2d4910 http://travis-ci.org/diagrams/diagrams-lib/builds/8289044 The build is still failing.
2013-06-20 20:19:36 UTC <byorgey> bergey: you could come by tomorrow afternoon to get your power converter if you want. After that I'll be out of town for a week.
2013-06-20 20:19:41 UTC <byorgey> not that there's any rush.
2013-06-20 20:20:17 UTC <bergey> Ah, sorry I forgot about it.  Tomorrow afternoon would be great.  Any particular time better for you?
2013-06-20 20:21:08 UTC <byorgey> anytime between 1:30-5 would be fine.
2013-06-20 20:21:47 UTC <bergey> Great.  I'll aim for around 2pm.  Thanks.
2013-06-20 20:21:54 UTC <byorgey> cool, see you then.
2013-06-20 20:22:28 UTC <byorgey> I am a fan of your use of diaeresis in your latest commit message =)
2013-06-20 20:24:49 UTC <bergey> Thank you :) I'm happy that tools support unicode.
2013-06-20 20:25:32 UTC <byorgey> me too!
2013-06-20 20:39:55 UTC <travis-ci> [travis-ci] 13diagrams-lib/06nurbs 144875ec0 http://travis-ci.org/diagrams/diagrams-lib/builds/8289623 The build is still failing.
2013-06-20 20:52:13 UTC <travis-ci> [travis-ci] 13diagrams-lib/06nurbs 1464767c1 http://travis-ci.org/diagrams/diagrams-lib/builds/8289973 The build was fixed.
2013-06-21 02:13:50 UTC <fryguybob> byorgey: I fell asleep while reading through the second half of the pull request :(
2013-06-21 02:17:28 UTC <fryguybob> jet lag....
2013-06-21 02:17:51 UTC <fryguybob> I have a patch for postscript too that I will do later.
2013-06-21 02:18:24 UTC <fryguybob> byorgey: And I can't build cairo so I'll let you merge that one.
2013-06-21 02:20:12 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c816d60 http://travis-ci.org/diagrams/diagrams-lib/builds/8297831 The build passed.
2013-06-21 07:07:23 UTC <luite> ClaudiusMaximus: it seems to work beautifully, akismet has already tagged 9 spam replies correctly
2013-06-21 07:08:27 UTC <ClaudiusMaximus> luite: cool!
2013-06-21 07:09:24 UTC <ClaudiusMaximus> ACTION currently writing a compiler, for the first time in over a decade (apart from some silly experiments with boolf*ck)
2013-06-21 07:10:26 UTC <luite> cool
2013-06-21 07:10:44 UTC <ClaudiusMaximus> http://hpaste.org/90146 is my motivation; currently implementing some of http://en.wikipedia.org/wiki/Static_single_assignment_form
2013-06-21 07:11:03 UTC <carter> ClaudiusMaximus : the llvm-general lib that landed on ahckage today is worth checking out
2013-06-21 07:12:25 UTC <luite> ClaudiusMaximus: ah for rendering fractals with mpfr?
2013-06-21 07:13:50 UTC <ClaudiusMaximus> luite: yeah, or more generally any numerical stuff with gmp/mpfr/etc - my aim is to write nice high-level code and have all the temporaries be allocated once outside all the loops
2013-06-21 07:15:50 UTC <luite> you don't strictly need SSA if you use something like hoopl
2013-06-21 07:16:28 UTC <luite> but it can make the optimization easier :)
2013-06-21 07:16:47 UTC <hpaste> ClaudiusMaximus annotated âcompiler from high level C-alike to C with low level libraries?â with âcompiler from high level C-alike to C with low level libraries? (annotation)â at http://hpaste.org/90146#a90216
2013-06-21 07:17:39 UTC <ClaudiusMaximus> luite: probably, but I thought i'd start from scratch, as a learning exercise, etc
2013-06-21 07:18:20 UTC <ClaudiusMaximus> i looked at llvm, but it seemed closely tied to hardware; looked briefly at hoopl but had no clue how to use it
2013-06-21 07:18:49 UTC <luite> ezyang has a few blog post about hoopl
2013-06-21 07:19:09 UTC <luite> it feels a bit annoying with its GADTs though, perhaps i haven't used it enough
2013-06-21 07:19:43 UTC <ClaudiusMaximus> the next thing i need to do is add versioned variables and phi merges, then a type system..
2013-06-21 07:19:58 UTC <luite> the idea is relatively simple, you propagate (fold) some pieces of information, either in forward direction or reverse directions, through your basic blocks, updating the info as you go
2013-06-21 07:20:20 UTC <luite> and for branching, you have a confluent combine function a -> a -> a
2013-06-21 07:20:35 UTC <luite> to combine two pieces of info if you reach some code from two points
2013-06-21 07:20:46 UTC <luite> and then you calc a fixed point
2013-06-21 07:21:25 UTC <ClaudiusMaximus> cool, got as far as understanding the process, apart from the "fixed point" bit
2013-06-21 07:21:43 UTC <ClaudiusMaximus> is that for loops?
2013-06-21 07:22:11 UTC <ClaudiusMaximus> i read some slides that talked about "widening" and lattices..
2013-06-21 07:22:16 UTC <luite> yeah, i'm not really sure if hoopl automatically calculates it
2013-06-21 07:22:31 UTC <ClaudiusMaximus> http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-035-computer-language-engineering-sma-5502-fall-2005/lecture-notes/11dataflowanlys.pdf
2013-06-21 07:23:03 UTC <luite> ah yeah
2013-06-21 07:24:09 UTC <luite> i think if you can make a lattice you can guarantee termination
2013-06-21 07:25:20 UTC <ClaudiusMaximus> yeah slides talk about that stuff
2013-06-21 07:26:45 UTC <luite> hmm, but perhaps i'm doing something inefficiently when dataflowing through a loop
2013-06-21 07:28:45 UTC <luite> say you have: x = 1; do { .....; x++; } while(cond);    what dataflow facts to you use  the first iteration of the loop? you haven't reached the condition yet, so you could start with none
2013-06-21 07:29:21 UTC <luite> but you can also dataflow forward the x=1; fact, with things like x is integral, x positive
2013-06-21 07:29:34 UTC <luite> and then combine those after the first iteration
2013-06-21 07:30:10 UTC <luite> but then the facts aren't increasing anymore in the lattice, if you had something that made x negative in the loop for example
2013-06-21 07:31:38 UTC <ClaudiusMaximus> oh my aims are much more modest - just eliminate excess alloc/free of temporary variables
2013-06-21 07:33:00 UTC <luite> anyway if you have an idea how to do that with the lattice conditions i'd be happy to hear ;p currently i'm just running the dataflow analysis until it really doesn't change anymore everywhere, because i don't know :(
2013-06-21 07:34:01 UTC <luite> hmm they do have a sign analysis lattice example
2013-06-21 07:34:20 UTC <ClaudiusMaximus> those slides seem ok to my n00b eyes, apart from the colour scheme (do they do that deliberately to stop people printing?)
2013-06-21 07:34:45 UTC <luite> doesn't the background disappear when printing?
2013-06-21 07:34:59 UTC <ClaudiusMaximus> didn't try, but cyan on blue is horrible anyway
2013-06-21 11:08:22 UTC <notdan>  /wc 22
2013-06-21 11:08:28 UTC <notdan> oops, sorry
2013-06-21 11:22:22 UTC <byorgey> fryguybob: cool, thanks!
2013-06-21 11:22:45 UTC <byorgey> I also already have a patch for contrib
2013-06-21 11:22:49 UTC <byorgey> and can work on one for svg
2013-06-21 11:27:16 UTC <byorgey> oh, and I have a patch for SVGFonts too
2013-06-21 11:31:27 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06master 1455420e5 http://travis-ci.org/diagrams/diagrams-cairo/builds/8307300 The build passed.
2013-06-21 13:13:29 UTC <luite> hmm, i guess it would be good to check if html5 canvas supports svg fonts
2013-06-21 13:15:02 UTC <luite> hm, firefox and svg don't support them
2013-06-21 13:15:14 UTC <luite> but they can be converted with fontforge to something that is
2013-06-21 13:16:20 UTC <luite> bleh someone is overloading the connection here again... fortunately i'm going home tomorrow, and then cycling will also be a lot easier, no more annoying mountains!
2013-06-21 13:19:16 UTC <notdan> haha
2013-06-21 13:35:07 UTC <notdan> Hm, I am getting "thread blocked indefinitely in an MVar operation".
2013-06-21 13:35:21 UTC <notdan> Not even sure if that's an error or whatnot :S
2013-06-21 13:38:08 UTC <luite> yeah it means that a thread is waiting for an MVar, but no other thread has references to that MVar anymore, so it will never be unblocked
2013-06-21 13:40:18 UTC <luite> (unless you throw an async exception to it, i think that's also what the message is, you might be able to catch it, but it probably indicates that something else is wrong)
2013-06-21 14:00:36 UTC <notdan> Yeah, preloading libraries actually makes evaluation way fastter
2013-06-21 14:01:04 UTC <luite> good to hear that :)
2013-06-21 14:43:32 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06images 14cd1e063 http://travis-ci.org/diagrams/diagrams-postscript/builds/8313112 The build has errored.
2013-06-21 14:43:38 UTC <fryguybob> :(
2013-06-21 14:44:18 UTC <fryguybob> Oh, that's not right.
2013-06-21 14:47:23 UTC <fryguybob> Oh, it just built the wrong branch.  I wasn't intending to push that branch, oops.
2013-06-21 14:48:09 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14553cc3d http://travis-ci.org/diagrams/diagrams-postscript/builds/8313114 The build passed.
2013-06-21 15:07:36 UTC <luite> hmm, setting display: none on span elements in a BlogLiterately-produced haskell code block doesn't remove the lines, only makes them invisible :(
2013-06-21 15:10:17 UTC <luite> the line breaks are outside the elements :/
2013-06-21 15:18:16 UTC <fryguybob> luite: That sounds right.  I don't think span introduces any structure, just groups things for the application of some style.
2013-06-21 15:18:53 UTC <fryguybob> ACTION notes it has been a while since he cared about the details of html.
2013-06-21 15:19:07 UTC <luite> yeah it is right, but i need the linebreaks to be removed to have parts of the code block collapsed
2013-06-21 15:19:25 UTC <luite> so i can include full haskell files in the samples, but only show the interesting bits at first
2013-06-21 15:20:11 UTC <fryguybob> "The uninteresting parts have been made invisible but the space is left to prod your curiosity into viewing them anyway."
2013-06-21 15:21:43 UTC <fryguybob> I wonder if you can reach into a br under a span with a style.
2013-06-21 15:22:37 UTC <fryguybob> .hidden br { ... } ?
2013-06-21 15:26:13 UTC <fryguybob> luite: My attempts to recreate the situation are failing (display: none is removing the br's)
2013-06-21 15:29:07 UTC <luite> oh it's a <pre> tag, but i just fixed it
2013-06-21 15:29:17 UTC <luite> the code generated by BlogLiterately is something like:
2013-06-21 15:29:28 UTC <luite> <pre class="sourceCode haskell">
2013-06-21 15:29:51 UTC <luite> some line <span class='hs-con'>Constructor</span>
2013-06-21 15:29:52 UTC <fryguybob> ah, ok with pre I get it.
2013-06-21 15:30:03 UTC <luite> <span class="hs-comment">-- xyz</span>
2013-06-21 15:30:08 UTC <luite> so the linebreaks are outside the span
2013-06-21 15:30:43 UTC <luite> now I just replace all "\n" with "<span class='hs-linebreak'>\n</span>
2013-06-21 15:31:00 UTC <luite> then the linebreak can be hidden :)
2013-06-21 15:35:19 UTC <luite> now to add some clicky user interface stuff and my awesome wordpress plugin is done
2013-06-21 15:41:42 UTC <fryguybob> ACTION has a moment of silence for more php code being unleashed on the world.
2013-06-21 15:46:54 UTC <luite> :)
2013-06-21 15:47:09 UTC <luite> aw it's still messing up the whitespace, i need to wrap whitespace in tags too...
2013-06-21 15:48:26 UTC <luite> that's more annoying, since the tags also contain whitespace
2013-06-21 15:56:53 UTC <luite> fortunately it's a jQuery oneliner!
2013-06-21 15:57:01 UTC <luite> everything is
2013-06-21 16:09:45 UTC <notdan> How would you go about trying to eat a lot of memory in GHC? I can't seem to come up with an example of a snippet that would use a lot of memory yet would not hit the time limits
2013-06-21 16:20:37 UTC <fryguybob> notdan: Make a big array?
2013-06-21 16:30:18 UTC <notdan> oh yeah, arrays are strict
2013-06-21 16:30:58 UTC <notdan> lol, this one was really memory hungry - all my chrome tabs got unloaded from the memory
2013-06-21 16:54:39 UTC <luite> are you testing the ulimit/
2013-06-21 16:54:40 UTC <luite> ?
2013-06-21 19:33:39 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 143eebbb2 http://travis-ci.org/diagrams/diagrams-lib/builds/8321598 The build passed.
2013-06-21 19:44:15 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 144e05c86 http://travis-ci.org/diagrams/SVGFonts/builds/8321889 The build has errored.
2013-06-21 20:45:55 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 1446ba307 http://travis-ci.org/diagrams/SVGFonts/builds/8323672 The build has errored.
2013-06-21 20:47:27 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 147e8e193 http://travis-ci.org/diagrams/diagrams-contrib/builds/8323616 The build failed.
2013-06-21 20:53:40 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 147a65941 http://travis-ci.org/diagrams/diagrams-lib/builds/8323818 The build passed.
2013-06-21 20:56:50 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 147e8e193 http://travis-ci.org/diagrams/diagrams-contrib/builds/8323616 The build passed.
2013-06-21 20:57:13 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 147f5a9fe http://travis-ci.org/diagrams/SVGFonts/builds/8323856 The build passed.
2013-06-21 20:57:25 UTC <byorgey> \o/
2013-06-22 00:52:48 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 1423c76c3 http://travis-ci.org/diagrams/diagrams-svg/builds/8329303 The build passed.
2013-06-22 00:53:59 UTC <byorgey> during the time between the commits at 17:45 and 20:49, I sang the Mozart Requiem =D
2013-06-22 01:18:56 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14aa2a49c http://travis-ci.org/diagrams/diagrams-haddock/builds/8329476 The build passed.
2013-06-22 01:45:04 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 145157bfe http://travis-ci.org/diagrams/SVGFonts/builds/8329812 The build passed.
2013-06-22 01:52:30 UTC <byorgey> The Trail-refactoring yak is now fully shaved!
2013-06-22 01:52:40 UTC <byorgey> onwards to the parametric yak
2013-06-22 02:11:12 UTC <fryguybob> Excellent!
2013-06-22 02:30:48 UTC <byorgey> fryguybob: bergey came by to get his power converter today and we had a nice talk about NURBS, optimization, and other things
2013-06-22 02:31:01 UTC <byorgey> he mentioned that you maybe had some ideas how NURBS could be useful in 2D?
2013-06-22 02:34:27 UTC <bergey> byorgey: And then I came home and started reading about metafont and Accelerate :)
2013-06-22 02:34:46 UTC <byorgey> ooh, nice =)
2013-06-22 02:34:50 UTC <byorgey> what's Accelerate?
2013-06-22 02:35:22 UTC <bergey> The haskell DSL for GPU computation
2013-06-22 02:36:05 UTC <byorgey> ah, right
2013-06-22 02:56:24 UTC <fryguybob> byorgey: Yeah, they are useful for controlling the boundry conditions between curves.
2013-06-22 02:57:24 UTC <fryguybob> byorgey: There is also some more freedom in how the parameter relates to the curve.
2013-06-22 03:23:00 UTC <tgeeky> plus NURBS is fun to say
2013-06-22 05:28:37 UTC <dmwit> Is there a convenient way to get a grid of lines?
2013-06-22 05:29:15 UTC <dmwit> Also, incron is amazing for writing diagrams programs. =)
2013-06-22 06:05:57 UTC <dmwit> chromium limits zoom to 500% =(
2013-06-22 10:38:52 UTC <byorgey> dmwit: you can do something like:  let ls = hcat' with {catMethod = Distrib, sep = 1} (replicate 11 (vrule 10)) # centerXY in ls <> rotateBy (1/4) ls 
2013-06-22 10:40:23 UTC <byorgey> dmwit: re: incron, indeed!  the cairo and svg backends currently have a looped compile mode, but it's hacky and polling-based
2013-06-22 10:41:21 UTC <byorgey> I'd love to replace it with something like fsnotify (which IIUC uses inotify on linux)
2013-06-22 15:11:44 UTC <notdan> Fixed some stuff in the pastebin today, including proper error propagation. Also everything looks prettier now: http://orbt.io/Pnnx.png
2013-06-22 15:26:21 UTC <dmwit> byorgey: Oh, that's much prettier than what I ended up with. =)
2013-06-22 15:27:11 UTC <dmwit> I'm still not thrilled that I have to know ahead of time how big to make my grid, but perhaps that's just me being grumpy.
2013-06-22 15:47:51 UTC <byorgey> dmwit: yeah, we don't have a nice story for making potentially infinite diagrams and then later only rendering the part of them that ends up being visible.  That would be nice though.
2013-06-22 15:50:26 UTC <byorgey> dmwit: a hack would be to make a Very Large grid (something which you know is going to be plenty big enough), but use setEnvelope to give it an empty envelope, so it doesn't end up taking up any space
2013-06-22 15:50:47 UTC <dmwit> That's not bad.
2013-06-22 15:50:55 UTC <byorgey> then it would size the output to only show whatever you put on top of the grid.
2013-06-22 15:51:46 UTC <byorgey> notdan: looks nice!!
2013-06-22 15:52:38 UTC <luite> ACTION back home
2013-06-22 15:53:01 UTC <byorgey> just in time for me to leave home!
2013-06-22 15:54:23 UTC <luite> i will take good care of home in the meantime!
2013-06-22 15:55:03 UTC <byorgey> thanks!
2013-06-22 16:24:28 UTC <notdan> heh
2013-06-22 16:49:40 UTC <luite> notdan: wouldn't encoding to UTF8 ByteString be a good way to serialize?
2013-06-22 17:26:01 UTC <notdan> I am not sure how the encoding actually works but since it's binary I think it represents ByteString not as it is, but adds some information (type) to it
2013-06-22 17:26:25 UTC <notdan> so I can convert it to ByteString but I'd still have to encode it
2013-06-22 18:11:50 UTC <luite> notdan: that's not really a problem is it? put = TE.encodeUtf8, get = TE.decodeUtf8 <$> get
2013-06-22 18:12:32 UTC <luite> also that get that you've written, return . TL.pack =<< get, can be rewritten with fmap or <$>
2013-06-22 18:37:07 UTC <notdan> Yeah, it would have to have put = put . TE.encodeUtf8 tho
2013-06-22 18:37:19 UTC <notdan> but it's a good idea, seems better than using Strings
2013-06-22 18:37:21 UTC <notdan> thanks
2013-06-22 18:38:28 UTC <luite> oh right
2013-06-23 06:21:01 UTC <notdan> I think I am going to switch to Snap
2013-06-23 06:21:21 UTC <notdan> Scotty is really nice but it's gewtting harder to maintain and do stuff in what essentially is a router
2013-06-23 06:21:48 UTC <notdan> Although maybe I just need to make use of some templating library
2013-06-23 09:43:02 UTC <luite> notdan: hmm, you can probably use heist or hamlet without problems with scotty?
2013-06-23 09:56:30 UTC <notdan> yea I might be doing that
2013-06-23 09:56:47 UTC <notdan> https://github.com/yesodweb/yesodweb.com-content/issues/49 yay michael is fixing the book
2013-06-23 10:42:57 UTC <notdan> Hm, I've switched to using custom mond stack with State for passing around and modifying configuration instead of just using Ghc monad and it looks like bind provides some overhead to the whole thing
2013-06-23 10:54:08 UTC <notdan> Huh wait actually I think it's bind in Ghc monad that is expensive
2013-06-23 21:20:43 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 14bb1a95b http://travis-ci.org/diagrams/diagrams-haddock/builds/8369416 The build passed.
2013-06-23 21:24:33 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 143b4b790 http://travis-ci.org/diagrams/diagrams-haddock/builds/8369536 The build passed.
2013-06-23 21:26:43 UTC <byorgey> ACTION waves hello from Lawrence, KS
2013-06-23 21:26:53 UTC <fryguybob> howdy
2013-06-23 21:27:57 UTC <byorgey> everyone else is napping (all 7 of them), so I guess that means it's time for some diagrams hacking! =D
2013-06-23 21:28:40 UTC <fryguybob> I'm reading the hott book while most everyone sleeps here.
2013-06-23 21:36:06 UTC <byorgey> nice, I started reading that the other day
2013-06-23 21:36:27 UTC <byorgey> though I got to a point where I realized I would really need to sit down and do some of the exercises to absorb it
2013-06-23 21:37:05 UTC <byorgey> which I think I will order a dead-tree copy to facilitate.
2013-06-23 21:40:32 UTC <fryguybob> I haven't reached any exercises yet.
2013-06-23 21:41:37 UTC <byorgey> did you start at the very beginning, or did you skip the type theory stuff?
2013-06-23 21:42:04 UTC <fryguybob> byorgey: I'm mostly interested in the type theory stuff at the beginning at this point.
2013-06-23 21:42:11 UTC <byorgey> I started all the way at the beginning, and I'm actually very glad I did
2013-06-23 21:42:14 UTC <byorgey> ok, right
2013-06-23 21:42:58 UTC <byorgey> I "knew" some of it already, but they way they present it was often enlightening.  And the big picture they explain about set theory vs. type theory was enlightening too.
2013-06-23 21:43:01 UTC <fryguybob> I'm hoping that it will be something that Rebekah could read and get something from.
2013-06-23 21:43:12 UTC <fryguybob> byorgey: Yeah
2013-06-23 21:43:13 UTC <byorgey> right, I remember talking about this at Hac Phi
2013-06-23 21:45:26 UTC <fryguybob> I read through a lot of Simon Thompson's Type Theory and Functional Programming and I don't think that would have enough connection to Rebekah's normal world for her to get into it.
2013-06-23 21:46:54 UTC <fryguybob> I also have TaPL, but I don't lug it around...
2013-06-23 21:50:13 UTC <byorgey> hehe
2013-06-23 21:50:35 UTC <byorgey> I doubt TaPL would seem very relevant to Rebekah either.
2013-06-23 21:51:13 UTC <fryguybob> byorgey: Yeah
2013-06-23 21:54:35 UTC <fryguybob> Hopefully I'll be able to understand enough ideas to get a sense of the real analysis chapter as that's Rebekah's area.
2013-06-23 21:55:19 UTC <byorgey> ah, I see.  I guess I didn't actually know what Rebekah's area was.
2013-06-23 21:55:39 UTC <fryguybob> It is functional analysis.
2013-06-23 21:57:44 UTC <byorgey> sounds like people are waking up.  I think we might go sailing.
2013-06-23 21:58:31 UTC <fryguybob> Sounds like fun!
2013-06-23 21:58:34 UTC <byorgey> I got a bit done merging the Trail refactoring into mgsloan's parametric stuff.  Still more merging to do.
2013-06-23 21:59:53 UTC <fryguybob> I started on converting the whole path offset/expansion stuff (instead of just per-segment) to the new Trails and it should clean up a lot of it.
2013-06-23 22:09:49 UTC <fryguybob> ACTION goes to pick a zucchini.
2013-06-24 02:35:02 UTC <tgeeky> ACTION Brent is not an septa-dad, so many of the 7 must not be his children :o
2013-06-24 02:35:07 UTC <tgeeky> ACTION assumes*
2013-06-24 02:37:28 UTC <byorgey> fryguybob: cool, more confirmation that the new refactoring is the Right Way to do things =)
2013-06-24 02:37:34 UTC <byorgey> we went sailing, it was fun
2013-06-24 02:38:21 UTC <byorgey> tgeeky: hehe, nope, I still only have one. =)  The other six are my wife, my parents-in-law, my sister- and brother-in-law and their 7-month old
2013-06-24 02:39:52 UTC <tgeeky> that's a pretty nice group nap
2013-06-24 02:44:13 UTC <byorgey> yep, it was impressive
2013-06-24 03:14:33 UTC <fryguybob> The zucchini was tasty.
2013-06-24 03:19:26 UTC <tgeeky> fryguybob: has she read Golder, Escher, Bach?
2013-06-24 03:19:55 UTC <fryguybob> tgeeky: No.  We never got around to reading that.
2013-06-24 03:19:58 UTC <tgeeky> Godel*
2013-06-24 03:20:16 UTC <tgeeky> fryguybob: You should. It's essentially my favorite book.
2013-06-24 03:44:01 UTC <tgeeky> from Neil Mitchell: If your CPU has a preference for functional languages it will make the registers happier.
2013-06-24 03:44:15 UTC <tgeeky> I'm such a horrible person. I never thought about how the *registers* feel.
2013-06-24 03:51:06 UTC <carter> tgeeky AVX is actually kinda functional isofar as asm goes on intel
2013-06-24 03:51:13 UTC <carter> or at least you're not forced to mutate your inputs :)
2013-06-24 17:45:51 UTC <luite> http://hdiff.luite.com:3000/ :)
2013-06-24 17:45:57 UTC <luite> only works properly in chrome
2013-06-24 17:47:34 UTC <luite> it as a lot of overhead, starting 10 new threads per frame, so i need to improve it a bit
2013-06-24 17:51:56 UTC <luite> but for some reason i can't sample other behaviours from within an event listener without deadlocking, so i forkio
2013-06-24 17:55:32 UTC <luite> could be a bug in ghcjs
2013-06-24 18:25:43 UTC <luite> hmm, native ghc also deadlocks
2013-06-24 18:26:07 UTC <luite> reassuring that teh last two of these problems i had also happened with ghc, not just ghcjs :)
2013-06-24 18:26:55 UTC <luite> anyone with sodium experience here?
2013-06-24 19:30:49 UTC <byorgey> luite: very cool, works nicely for me in chrome
2013-06-24 19:31:02 UTC <luite> byorgey: balls sometimes deadlock and i don't know why
2013-06-24 19:31:21 UTC <luite> looks like sampling the current value from a Behaviour while handling an Event causes it
2013-06-24 19:31:47 UTC <luite> i've already mailed the author or sodium, Stephen Blackheath
2013-06-24 19:32:12 UTC <luite> byorgey: do you know if that's forbidden?
2013-06-24 19:32:33 UTC <byorgey> I haven't seen blackh around in quite a while
2013-06-24 19:32:43 UTC <byorgey> <preflex>  blackh was last seen on #ghc 89 days, 22 hours and 52 seconds ago, saying: thanks, luite
2013-06-24 19:32:57 UTC <luite> hah ;p
2013-06-24 19:32:58 UTC <byorgey> luite: I haven't the slightest idea.
2013-06-24 19:33:17 UTC <byorgey> I don't actually know much about FRP and I don't know anything about sodium in particular.
2013-06-24 19:33:21 UTC <luite> i had a video chat with him and hamishmack 6 weeks ago or so
2013-06-24 19:33:27 UTC <luite> he seems interested in ghcjs
2013-06-24 19:33:30 UTC <byorgey> ah, I see
2013-06-24 19:33:31 UTC <byorgey> cool
2013-06-24 19:34:10 UTC <luite> i'm not sure for what though, he worked for the guys that made that iphone game with yampa, didn't he?
2013-06-24 19:34:18 UTC <luite> but i'm not sure if he still does
2013-06-24 19:34:39 UTC <byorgey> I don't know
2013-06-24 19:38:20 UTC <byorgey> merging the parametric stuff almost done, currently doing a huge test build
2013-06-24 19:38:24 UTC <luite> anyway i should go and do something else, i've been struggling with this far too long... for example i haven't started reading the HoTT book yet, and i heard you can't be part of the cool guys anymore if you don't know homotopy type theory
2013-06-24 19:39:23 UTC <byorgey> hahaha
2013-06-24 19:39:36 UTC <byorgey> you can still be cool but you can't be HoTT
2013-06-24 19:39:52 UTC <luite> =)
2013-06-24 19:54:13 UTC <byorgey> Merge complete!  And now to write the instances for trails.
2013-06-24 20:54:04 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14d8ac1fe http://travis-ci.org/diagrams/diagrams-lib/builds/8400179 The build passed.
2013-06-25 02:42:48 UTC <byorgey> woah, simultaneous pushes
2013-06-25 02:42:51 UTC <bergey> I didn't actually mean to push that.  I don't suppose it does any harm.
2013-06-25 02:42:59 UTC <bergey> I meant to pull your changes :)
2013-06-25 02:43:04 UTC <byorgey> ah, hehehe =)
2013-06-25 02:45:55 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 1487e2f5a http://travis-ci.org/diagrams/diagrams-lib/builds/8409793 The build passed.
2013-06-25 02:50:10 UTC <travis-ci> [travis-ci] 13diagrams-lib/06nurbs 147a8c878 http://travis-ci.org/diagrams/diagrams-lib/builds/8409801 The build passed.
2013-06-25 03:17:39 UTC <byorgey> for ArcLength I'm thinking of tracking both a function  (Scalar v -> Scalar v) from tolerance to arc length, and also a single Scalar value giving the arc length at some "standard" tolerance.
2013-06-25 03:18:13 UTC <byorgey> what would be a good choice for the "standard" tolerance?  10e-6?  I don't know how to choose something that's not just arbitrary
2013-06-25 03:32:36 UTC <bergey> If this were CAD, I'd like to see 1E-6 meter tolerance, figuring 1E-5 m is a very good machining accuracy.
2013-06-25 03:32:57 UTC <bergey> In dimensionless terms, I guess that's 1E-5 times a typical part size?
2013-06-25 03:33:27 UTC <byorgey> ok, that makes sense
2013-06-25 03:33:30 UTC <bergey> That seems awfully precise for screen output.  I don't know.
2013-06-25 03:34:21 UTC <byorgey> hmm, I just realized a problem: if you have the arc lengths of a bunch of segments to within eps, adding them all up does not necessarily give you the arc length of the whole within eps, because of error accumulation =(
2013-06-25 03:34:57 UTC <byorgey> maybe I will just ignore that inconvenient fact for now.
2013-06-25 03:36:26 UTC <bergey> Is it very ugly to have ArcLength on Trail divide eps by number of segments?
2013-06-25 03:40:20 UTC <byorgey> bergey: no, that's fine, and that makes sense for the general case.
2013-06-25 03:40:50 UTC <byorgey> bergey: the point is I wanted to be able to cache the arc length value for some standard tolerance so you didn't have to recompute it every time.
2013-06-25 03:41:50 UTC <byorgey> and to do that you have to pick a tolerance up front.
2013-06-25 04:24:15 UTC <tgeeky> byorgey: can you enforce that the eps / arc length is constant over an arc?
2013-06-25 04:25:09 UTC <tgeeky> or rather, that the 10e-6 is this quantity over the whole arc
2013-06-25 04:25:25 UTC <tgeeky> byorgey: so that you just ensure that the arc is composed of segments with comparable error
2013-06-25 04:31:11 UTC <carter> byorgey you could use compensated to keep the error on sums down
2013-06-25 04:32:28 UTC <carter> byorgey http://hackage.haskell.org/package/compensated-0.4.1
2013-06-25 04:33:21 UTC <carter> bergey byorgey  the kmett compensated lib should be worth checking out
2013-06-25 05:56:05 UTC <Claudius1aximus> http://mathr.co.uk/misc/2013-06-25_float_benchmark_1.png benchmarking some numerical code, visualizing with diagrams: area is proportional to time taken
2013-06-25 05:57:06 UTC <ClaudiusMaximus> interestingly, using float for both iterations is faster than using double for both iterations (expected), but mixing float and double is slower than using double throughout...
2013-06-25 05:57:53 UTC <ClaudiusMaximus> i guess double->float conversion isn't as cheap as it could be
2013-06-25 05:58:33 UTC <ClaudiusMaximus> (the differences are tiny compared to the massive slowdowns with double-double and quad-double though)
2013-06-25 06:13:38 UTC <carter> ClaudiusMaximus theres actually a good reason for that perf diff
2013-06-25 06:14:04 UTC <carter> ghc 7.4 and 7.6 only have 2 registers for Doubles args
2013-06-25 06:14:08 UTC <carter> but 4 for floats
2013-06-25 06:14:22 UTC <carter> so any doubles args afer the first 2 will be on the stack
2013-06-25 06:15:18 UTC <carter> ClaudiusMaximus if you try the same code with ghc head assuming the only diff is float vs double
2013-06-25 06:15:22 UTC <carter> the perf diff should go away
2013-06-25 06:35:57 UTC <ClaudiusMaximus> carter: this is C++ code, not using GHC...
2013-06-25 06:36:03 UTC <carter> oh
2013-06-25 06:36:04 UTC <carter> darn
2013-06-25 06:36:09 UTC <carter> but on a haskell channel!
2013-06-25 06:36:17 UTC <carter> is the assembly vectorized?
2013-06-25 06:36:45 UTC <carter> is the code differnt algebraically in floats vs doubles?
2013-06-25 06:36:47 UTC <ClaudiusMaximus> not sure how to check - i'm using g++ -O3 -march=native -mtune=native ...
2013-06-25 06:37:15 UTC <carter> ClaudiusMaximus -S
2013-06-25 06:37:24 UTC <carter> Get the asm
2013-06-25 06:37:26 UTC <ClaudiusMaximus> i'm using assembler-style   static inline void ADD(O &o, const A &a, const B &b) { o = a + b; }  (or  mpfr_add(o, a, b, MPFR_RNDN);  etc)  - at least then i only have to write the longer algorithms in pseudo-assembler once instead of for each combination of types...
2013-06-25 06:37:42 UTC <carter> ahh
2013-06-25 06:38:12 UTC <carter> whats the computational problem you're doing?
2013-06-25 06:39:18 UTC <ClaudiusMaximus> fractal stuff - so far the benchmark is just rendering, but other algorithms like newton's method things to find features could do with being faster (ie, using native double when appropriate)
2013-06-25 06:39:45 UTC <carter> ok
2013-06-25 06:39:59 UTC <carter> ahh, ok, so there could be convergence precision s tuff
2013-06-25 06:40:01 UTC <carter> ok
2013-06-25 06:40:02 UTC <ClaudiusMaximus> thanks for the -S tip, will try it out later today
2013-06-25 06:40:05 UTC <carter> cool
2013-06-25 06:40:13 UTC <carter> also try clang++
2013-06-25 06:40:59 UTC <carter> clang with -emit-llvm  and -S gives you the human readable llvm IR
2013-06-25 06:41:13 UTC <carter> which is a teeny bit more direct  style than ASM
2013-06-25 06:41:17 UTC <carter> though you cant see the register allocation
2013-06-25 06:41:47 UTC <ClaudiusMaximus> thanks for that tip too :)
2013-06-25 06:45:04 UTC <carter> np 
2013-06-25 07:18:00 UTC <ClaudiusMaximus> carter: nice, clang++ generates code that runs about 20% faster than g++ for double-double, about 8% faster for quad-double, but around 5% slower for plain double and float
2013-06-25 07:18:16 UTC <carter> ClaudiusMaximus you're doing compensated arithmetic?
2013-06-25 07:18:18 UTC <carter> which quad lib?
2013-06-25 07:18:22 UTC <ClaudiusMaximus> libqd
2013-06-25 07:18:36 UTC <carter> ClaudiusMaximus check out http://crd-legacy.lbl.gov/~dhbailey/mpdist/
2013-06-25 07:18:41 UTC <carter> that one might be faster
2013-06-25 07:18:46 UTC <carter> or it might just be bsd instead of gpl :)
2013-06-25 07:20:23 UTC <ClaudiusMaximus> that is libqd as far as i know?
2013-06-25 07:21:13 UTC <ClaudiusMaximus> and i just realized i didn't call the magic function to set fpu flags, but i didn't spot any badness so far..
2013-06-25 07:21:31 UTC <carter> ahhh
2013-06-25 07:21:40 UTC <carter> i thought you meant you were using a diferent hing
2013-06-25 07:21:53 UTC <carter> ClaudiusMaximus also try the clang slp vectorizor!
2013-06-25 07:22:19 UTC <ClaudiusMaximus> g++ -ftree-vectorize-verbose=15 told me my loops couldn't be vectorized
2013-06-25 07:23:25 UTC <carter> ClaudiusMaximus try clangs
2013-06-25 07:23:30 UTC <carter> its different
2013-06-25 07:23:34 UTC <ClaudiusMaximus> presumably because the inner loop has data dependencies between iterations, with unknown loop count meaning the outer loop wouldn't be parallelized
2013-06-25 07:23:45 UTC <ClaudiusMaximus> ok :)
2013-06-25 07:23:45 UTC <carter> ClaudiusMaximus stil, try out the clang versions
2013-06-25 07:23:56 UTC <carter> they have both loop and straight line vectorizors
2013-06-25 07:24:04 UTC <carter> clang++ 3.3 def has it
2013-06-25 07:24:18 UTC <ClaudiusMaximus> ah, i think i got 3.0 from debian wheezy
2013-06-25 07:24:32 UTC <carter> BAD DEBIAN
2013-06-25 07:24:52 UTC <carter> which reminds me, i'm debating doing a lib qd binding or port in a few months for haskell
2013-06-25 07:24:54 UTC <carter> opinions
2013-06-25 07:24:55 UTC <carter> >
2013-06-25 07:24:56 UTC <carter> ?
2013-06-25 07:25:03 UTC <ClaudiusMaximus> carter: i already did it
2013-06-25 07:25:09 UTC <carter> WHERE
2013-06-25 07:25:23 UTC <ClaudiusMaximus> http://hackage.haskell.org/package/qd
2013-06-25 07:25:27 UTC <ClaudiusMaximus> unsurprisingly
2013-06-25 07:26:06 UTC <carter> hehe
2013-06-25 07:26:07 UTC <carter> cool
2013-06-25 07:27:12 UTC <carter> sweet, you even did a storable instance
2013-06-25 07:27:34 UTC <carter> ok, that moves up my higher precision arithematic plans for lin algs :)
2013-06-25 07:28:10 UTC <ClaudiusMaximus> i removed the RealFloat instances at some point because they were wrong, so no Complex QuadDouble :(
2013-06-25 07:28:30 UTC <carter> what was wrong?
2013-06-25 07:28:43 UTC <carter> tell me anotehr itme
2013-06-25 07:28:43 UTC <ClaudiusMaximus> no const bit-width
2013-06-25 07:28:47 UTC <carter> its 3am
2013-06-25 07:28:48 UTC <carter> eh?
2013-06-25 07:28:51 UTC <carter> explain?
2013-06-25 07:29:32 UTC <ClaudiusMaximus> realfloat is for floating point with a fixed mantissa precision - doubledouble can represent 1e100 + 1e-100 exactly, so it doesn't have a fixed precision
2013-06-25 07:30:59 UTC <ClaudiusMaximus> the realfloat i had didn't have   uncurry encodeFloat . decodeFloat = id  even for regular values
2013-06-27 20:03:39 UTC <luite> http://weblog.luite.com/wordpress/?p=127 yay
2013-06-27 20:04:53 UTC <tgeeky> luite: your capitalization for sections is inconsistent
2013-06-27 20:05:21 UTC <tgeeky> luite: 'introduction' and 'quick start' are lowercase
2013-06-27 20:07:21 UTC <luite> lalala can't hear you, and you must have misread! ;)
2013-06-27 20:08:01 UTC <tgeeky> luite: also your link "the mailing list" has no entries at all. Is that correct, or a bad link?
2013-06-27 20:08:11 UTC <luite> no it's correct
2013-06-27 20:09:33 UTC <tgeeky> luite: all examples work fine in firefox on linux, FYI
2013-06-27 20:09:52 UTC <luite> cool, I've checked them in firefox, chrome and safari on os x
2013-06-27 20:10:05 UTC <luite> firefox is a tad slower because it has a crappy garbage collector
2013-06-27 20:10:12 UTC <luite> they're working on an update
2013-06-27 20:10:30 UTC <tgeeky> it's amazing how much GC haunts people for so long
2013-06-27 20:43:20 UTC <notdan> luite: yeah we should totally install charts once jbracker is finished porting them to diagrms :)
2013-06-27 20:43:31 UTC <luite> yes :)
2013-06-27 20:43:34 UTC <notdan> erm, that was ment to be a reply on #haskell, but whatever
2013-06-27 20:45:37 UTC <luite> so what should the next ghcjs weblog post be about? :)
2013-06-27 20:46:51 UTC <mgsloan> awesome!!!
2013-06-27 20:47:16 UTC <mgsloan> It's so cool that you can just take an existing FRP lib and run it in the browser
2013-06-27 20:47:41 UTC <notdan> luite: maybe communicating with the server side? (De)serializing json, etc. 
2013-06-27 20:48:02 UTC <notdan> Although it's more work on the using ghcjs-jquery I guess
2013-06-27 20:48:12 UTC <luite> mgsloan: reactive-banana also works
2013-06-27 20:48:29 UTC <mgsloan> luite: nice!  Take that, elm!
2013-06-27 20:48:45 UTC <notdan> mgsloan: yeah it's astonishing
2013-06-27 20:48:55 UTC <luite> notdan: ah, hmm, i think we might need to add some library for that, using Aeson is rather suboptimal client side, performance wise
2013-06-27 20:49:14 UTC <luite> perhaps we can build a drop-in replacement with the same API, that uses JS objects under the hood
2013-06-27 20:49:28 UTC <notdan> Yeah we can use pure JS
2013-06-27 20:52:14 UTC <notdan> anyway, gonna get some sleep, looking forward for tomorrow :]
2013-06-27 20:52:19 UTC <notdan> have fun folks
2013-06-27 20:56:09 UTC <luite> is it possible to get a free amazon aws thing?
2013-06-27 20:56:34 UTC <luite> someone complained about the vagrant image not building
2013-06-27 20:58:28 UTC <luite> bleh need credit card
2013-06-28 18:37:16 UTC <luite> hmm, japanese people are always complaining about ghcjs' code output size on twitter :(
2013-06-28 18:37:57 UTC <tgeeky> that's racist!
2013-06-28 18:38:36 UTC <luite> perhaps they're more focussed on efficiency than americans who just believe in bigger machines. germans might be obsessed with efficiency as well, but they are so close to the server (hosted in germany) that the examples load fast anyway
2013-06-28 18:38:41 UTC <luite> </stereotypes> :p
2013-06-28 18:38:52 UTC <byorgey> hehe
2013-06-28 18:39:27 UTC <luite> but they're right, i've been postponing the renaming step for a while
2013-06-28 18:39:47 UTC <luite> after linking, all non-exported names should be renamed to something short
2013-06-28 18:39:58 UTC <luite> but that requires parsing all js source again
2013-06-28 18:40:19 UTC <luite> that will probably cut the source size in half after minification
2013-06-28 18:41:12 UTC <luite> tgeeky: the frp post unfortunately generates far fewer tweets than the introdicution
2013-06-28 18:46:25 UTC <byorgey> I was just thinking now with the ability to do FRP in the browser + notdan's work, we might even be able to make a full-fledged diagrams IDE in the browser
2013-06-28 18:46:49 UTC <byorgey> in particular I want to be able to have information flow both ways between code + visualization
2013-06-28 18:47:08 UTC <byorgey> e.g. dragging stuff in the drawing adds calls to 'translate' in the code
2013-06-28 18:47:45 UTC <byorgey> anyway, that's still a ways off, but it's a cool dream =)
2013-06-28 18:48:10 UTC <luite> and you can recompile your code by attracting all balls in a small circle at the same time
2013-06-28 18:48:23 UTC <byorgey> hahaha
2013-06-28 18:48:46 UTC <luite> notdan: you should rename your next blog post to 'agile development and deployment in the cloud with Haskell and vado'
2013-06-28 18:53:33 UTC <luite> fpcomplete shouldn't have a monopoly on haskell marketing speak :p
2013-06-28 18:54:03 UTC <byorgey> ACTION is quite happy to let fpcomplete have a monopoly on haskell marketing speak =P
2013-06-28 18:54:07 UTC <luite> hehe ok
2013-06-28 18:54:51 UTC <luite> hmm, I wonder how to implement that dragging...
2013-06-28 18:54:58 UTC <luite> it would be rather cool indeed
2013-06-28 18:55:57 UTC <byorgey> yeah, I'm not sure
2013-06-28 18:56:35 UTC <byorgey> you would have to somehow figure out which things in the output were produced by which code
2013-06-28 18:56:44 UTC <luite> if you have a recursive thing that draws rectangles with an offset, dragging one should update them all
2013-06-28 18:57:29 UTC <byorgey> right
2013-06-28 18:59:20 UTC <luite> bleh uploading vm images takes too long. i called my isp and they can't make it faster because the dsl exchange hasn't been upgraded yet :(
2013-06-28 19:01:43 UTC <luite> still i like the idea of vado better than fpcomplete's thing, so far :)
2013-06-28 19:05:20 UTC <luite> some of my most productive hours are still offline, in the train or something... apparently replacing the usual distractions with different ones can help
2013-06-28 19:06:46 UTC <luite> byorgey: is there a way to add metadata to a haskell source code block in markdown/blogliterately?
2013-06-28 19:07:19 UTC <luite> byorgey: i have the 'run code' and 
2013-06-28 19:07:32 UTC <luite> 'full source' links as comments in the code, replacing them with buttons in javascript
2013-06-28 19:07:47 UTC <luite> rather ugly :)
2013-06-28 19:07:57 UTC <luite> especially if hscolour doesn't parse the file correctly
2013-06-28 19:08:19 UTC <luite> (it has problems with multiline strings)
2013-06-28 19:19:39 UTC <luite> gr selinux is frustrating
2013-06-28 19:24:17 UTC <carter> luite why'st hat?
2013-06-28 19:26:52 UTC <luite> not well maintained in ubuntu, and i don't have good vm images for other distros
2013-06-28 19:27:18 UTC <luite> and building them from a template can only be done on a machine with graphics
2013-06-28 19:27:28 UTC <luite> and then i have to upload them to my server over my slow dsl
2013-06-28 19:27:41 UTC <luite> that gets about 30kB/s upload
2013-06-28 19:42:08 UTC <byorgey> luite: hmm, I don't recall
2013-06-28 19:42:59 UTC <byorgey> luite: if you're using ``` syntax you can do  ``` {.haskell other='30' metadata='foo'}
2013-06-28 19:43:08 UTC <byorgey> but of course you are using bird tracks I presume
2013-06-28 19:43:25 UTC <byorgey> so I don't know but if there isn't I'm happy to add one
2013-06-28 19:43:28 UTC <luite> oh no i'm using ``` atm, since i have multiple modules
2013-06-28 19:43:40 UTC <byorgey> ah, ok
2013-06-28 19:43:53 UTC <luite> hiding part of the code for each one to keep the post readable
2013-06-28 19:44:08 UTC <byorgey> luite: take a look at BlogLiterately-diagrams, it makes use of width and height metadata
2013-06-28 19:44:28 UTC <luite> ah
2013-06-28 19:45:18 UTC <luite> hmm, perhaps i should let it load the examples in an inline iframe
2013-06-28 20:26:56 UTC <luite> yay i can build the vm on the server after all! local xterm and ssh -X :)
2013-06-28 20:46:18 UTC <byorgey> yay =)
2013-06-28 21:06:00 UTC <luite> notdan: if you want to try debian to see if selinux works better there, i've just built a debian 7.1 base box: http://hdiff.luite.com/ghcjs/wheezy64.box
2013-06-28 21:07:30 UTC <luite> puppet works on it
2013-06-28 23:52:53 UTC <byorgey> oooh, I just had a fun idea
2013-06-28 23:53:35 UTC <byorgey> an interactive diagrams tutorial with exercises/challenges where it just shows you an image and you have to type in code
2013-06-28 23:53:47 UTC <byorgey> and you pass if the image generated by your code is similar enough to the target image
2013-06-28 23:55:02 UTC <byorgey> I suppose the exercises would require careful designing so it wasn't just about guessing the right numbers for things ("5? No, I guess that's too big...  3?  No, to small..." etc.)
2013-06-29 00:01:39 UTC <luite> wasn't that already in that web haskel exercise thing?
2013-06-29 00:21:43 UTC <byorgey> luite: what web haskell exercise thing?
2013-06-29 00:23:26 UTC <luite> the one with the 'dia' library
2013-06-29 00:24:58 UTC <luite> http://pnyf.inf.elte.hu/fp/Diagrams_en.xml
2013-06-29 00:26:16 UTC <byorgey> luite: it doesn't seem to tell you when you've gotten it right
2013-06-29 00:27:29 UTC <byorgey> positive feedback is key to getting everyone hooked on, I mean using, diagrams
2013-06-29 00:29:11 UTC <luite> ah good point
2013-06-29 14:09:47 UTC <notdan> http://parenz.wordpress.com/2013/06/29/vado/ new blog post
2013-06-29 14:11:55 UTC <luite> lol @ title
2013-06-29 14:13:25 UTC <ClaudiusMaximus> nice
2013-06-29 14:14:20 UTC <ClaudiusMaximus> i did a blog post just now too, if anyone is really bored they could translate to diagrams maybe http://mathr.co.uk/blog/2013-06-29_recursive_star_polygons.html
2013-06-29 14:15:18 UTC <ClaudiusMaximus> i think this one is my favourite of the bunch http://mathr.co.uk/blog/g/2013-06-29_recursive_star_polygons/star_12-3.png
2013-06-29 14:16:52 UTC <notdan> is there a name for such stars?
2013-06-29 14:18:26 UTC <ClaudiusMaximus> yeah, http://en.wikipedia.org/wiki/Star_polygon even has SchlÃ¤fli symbols
2013-06-29 14:18:35 UTC <ClaudiusMaximus> but not sure about the recursion part
2013-06-29 14:19:44 UTC <ClaudiusMaximus> also some are really compounds rather than a single unit ({p/q} requires gcd(p,q)=1)
2013-06-29 14:26:29 UTC <luite> notdan: you might've already done it (or planned to do it), but the gsoc admins have requested that all project-related blog posts should be posted to planet.haskell.org
2013-06-29 14:34:46 UTC <notdan> yeah I've seen the mail, mine is already synced
2013-06-29 14:40:32 UTC <luite> ok, great
2013-06-29 14:55:12 UTC <luite> notdan: i've pushed an example selinux config, based on what i already had: https://github.com/luite/vagrant-wheezy-selinux/commit/7f4c2743e1a2fdfe94cf85821bacec3e1c5c9811
2013-06-29 14:56:02 UTC <luite> the debug policy in particular is a mess, but you can just start there and customize, it has a few instructions
2013-06-29 14:56:23 UTC <luite> the allowed network port can unfortunately not be configured from the modular policy, so the setup script adds it with semanage
2013-06-29 14:57:34 UTC <luite> the .fc files contain the file patterns with labels, the .te files the policies. use sudo semodule -l to check if they're loaded
2013-06-29 14:59:07 UTC <luite> i'll add some haskell code that checks the security context and the selinux status (it's probably best to abort if the program is accidentally started with selinux disabled or permissive, unless started with --debug or something
2013-06-29 14:59:31 UTC <luite> to prevent painful situations when being sloppy with maintenance
2013-06-29 14:59:45 UTC <luite> anyway, i have to go now
2013-06-29 19:17:43 UTC <byorgey> notdan: nice blog post, sounds like some cool stuff!
2013-06-29 19:18:34 UTC <luite> i'm going to use it at least, not having ghc-mod when working on a vm has been a long time annoyance :)
2013-06-29 19:19:03 UTC <carter> luite not gonna use what?
2013-06-29 19:19:25 UTC <luite> i am going to use it!
2013-06-29 19:19:27 UTC <luite> vado
2013-06-29 19:19:42 UTC <luite> haskell tool that runs commands over ssh, in the right dir
2013-06-29 19:19:49 UTC <luite> similar to sudo
2013-06-29 19:22:33 UTC <byorgey> yeah, the updates to ghc-mod to make it work remotely seems really useful
2013-06-29 19:28:20 UTC <carter> byorgey oh?
2013-06-29 19:28:30 UTC <carter> the APIification
2013-06-30 08:00:57 UTC <notdan> byorgey: thanks, glad you've liked it
2013-06-30 08:01:06 UTC <notdan> luite: awesome, thanks, I am setting everything up
2013-06-30 08:52:15 UTC <luite> notdan: i hope the default size for / is enough, it's only 9.5GB, i should've updated it to 40
2013-06-30 08:56:19 UTC <notdan> yeah, i think it should be fine
2013-06-30 09:00:16 UTC <luite> we can move the wheezy-selinux repository to your account if you want to continue working with it
2013-06-30 09:07:47 UTC <notdan> well I've already sqashed together wheezy-selinux and ghcjs-build
2013-06-30 09:07:59 UTC <luite> ok
2013-06-30 09:10:36 UTC <notdan> getting some weird errors (sshfs fault?) tho  http://paste.lisp.org/display/137849
2013-06-30 09:12:52 UTC <luite> hmm, i sometimes get weird errors with fuse4x/sshfs, remounting helps :)
2013-06-30 09:13:07 UTC <luite> perhaps one file didn't get removed there, so the dirs couldn't get removed?
2013-06-30 09:16:38 UTC <notdan> yeah remounting helped
2013-06-30 10:25:38 UTC <luite> notdan: since the program location matters for selinux, i used this to test/debug wolfgang: http://pastebin.ca/2412625 
2013-06-30 10:26:29 UTC <luite> although i think that relabeling the executable in place would also work
2013-06-30 10:27:23 UTC <notdan> can't I just use chcon on /usr/bin/wolfgang or do i have to use runcon to start it?
2013-06-30 10:28:12 UTC <luite> i think it would run under unconfined_u unconfined_r instead of system_u system_r, but i'm not 100% sure
2013-06-30 10:28:50 UTC <luite> this is a targeted policy, so regular users have no selinux restrictions, everything started by the system does have them
2013-06-30 10:30:42 UTC <notdan> Hm, how do you add new types of selinux policies? I tried loading the debug policy using ./load_debug.sh but got the erro: interactive-diagrams_debug's global requirements were not met: type/attribute idia_var_log_t (No such file or directory).
2013-06-30 10:31:19 UTC <luite> see interactive-diagrams.te
2013-06-30 10:31:24 UTC <luite> it has all the idia types
2013-06-30 10:31:31 UTC <luite> and it should be loaded first
2013-06-30 10:31:50 UTC <notdan> oh, right
2013-06-30 10:31:55 UTC <notdan> thanks'
2013-06-30 10:32:27 UTC <luite> it also uses some macros, for example init_daemon_domain adds the rules for a daemon that's started from init.d
2013-06-30 10:32:55 UTC <luite> it's a rather ugly system that uses m4, so unfortunately error messages are horrible...
2013-06-30 10:40:46 UTC <luite> ok i found how to increas the disk size, i'm rebuilding them in the background with 40gb while i do other things
2013-06-30 10:44:22 UTC <notdan> I'll try to work out a smaller config and go on from there, because I still don't understand a lot of things about SELinux
2013-06-30 10:45:59 UTC <luite> the description in the debug file is the most important steps
2013-06-30 10:46:26 UTC <luite> the debug file should allow it to do extra things, it allows the daemon to print stuff to stdout etc
2013-06-30 10:46:32 UTC <luite> but that does make it less secure
2013-06-30 10:46:39 UTC <notdan> what is the relationship betweeen idea_t and idea_exec_t?
2013-06-30 10:49:14 UTC <luite> i think idea_exec_t is the file type of the executables, when a file with that type is started, it changes the context to idea_t
2013-06-30 10:49:23 UTC <luite> idia_t
2013-06-30 10:49:29 UTC <luite> ack, this is hard to type :p
2013-06-30 10:49:59 UTC <luite>  i think i copied this pattern from other policies
2013-06-30 10:50:02 UTC <notdan> Ah, I see
2013-06-30 10:51:09 UTC <luite> yeah see init_daemon_domain in interactive-diagrams.te, it links the idia_exec_t file type with the idia_t type
2013-06-30 10:52:45 UTC <luite> but interactive-diagrams.te is every incomplete, many of the debug rules are also necessary in production (At least with wolfgang they were), i wanted to clean up the rules and move them to the non-debug policy but never got around to doing that
2013-06-30 10:53:20 UTC <luite> i think the types and file patterns are fairly complete though
2013-06-30 12:39:12 UTC <luite> i should finally make a working vado installation
2013-06-30 12:40:17 UTC <luite> notdan: it looks like the selinux package works without changes on GHC HEAD and wheezy, i'm trying to make an example of how i did the permission dropping with wolfgang. unfortunately it doesn't compile on the latest ghc
2013-06-30 12:40:29 UTC <luite> but i'll just collect the stuff
2013-06-30 12:43:20 UTC <luite> i really hope i can add editable ghcjs examples to the blog in a few weeks :)
2013-06-30 12:46:16 UTC <luite> notdan: i also have some stuff with cgroups, to limit the amount of cpu the workers can use, but i don't really know if that works
2013-06-30 12:46:55 UTC <luite> you can add all workers to a cgroup, limit that group to 80% or so, so that the rest of the program always has enough cpu
2013-06-30 13:10:34 UTC <notdan> Yeah, I guess that's bettern than rlimits for CPU
2013-06-30 13:10:53 UTC <notdan> Do you know why can't I unload a module? http://pastebin.ca/2412778
2013-06-30 13:12:02 UTC <luite> oh i haven't seen that error before, sorry
2013-06-30 13:12:24 UTC <luite> did you add a tcp port?
2013-06-30 13:19:32 UTC <luite> because i read that the modular policy doesn't support that, that's why i called semanage manually
2013-06-30 13:20:38 UTC <notdan> Hm, I didn't. I modified the policy file but only removed some stuff. Strange that it spews the error during the unload :S
2013-06-30 13:21:18 UTC <notdan> by the way, do you know any good selinux manual that contains all the macros? I can't seem to find macro list on the wiki
2013-06-30 13:21:27 UTC <luite> oh perhaps you need to remove the debug policy first?
2013-06-30 13:22:05 UTC <notdan> it's not loaded tho
2013-06-30 13:22:11 UTC <luite> hmm, ok
2013-06-30 13:22:19 UTC <luite> i don't recognize that port 3000 thing
2013-06-30 13:22:49 UTC <notdan> I did semanage port -a -t idia_web_port_t -p tcp 3000 from command lin
2013-06-30 13:23:01 UTC <notdan> (Just changed 8001 to 3000)
2013-06-30 13:23:15 UTC <luite> oh!
2013-06-30 13:23:34 UTC <luite> perhaps you can't do that while something uses that type
2013-06-30 13:23:45 UTC <notdan> Maybe I need to de-mark the port before unloading the policy?
2013-06-30 13:23:49 UTC <notdan> Yeah,
2013-06-30 13:26:48 UTC <luite> sorry i have to go now, pick up someone with a flat tire :)
2013-06-30 13:28:50 UTC <luite> notdan: i set up wolfgang in such a way that there was one process listening on that web port, which was reverse proxied by the main site. that web thing then communicated with the other thing (idia_t) to request a new worker (idia_restricted_t), idia_t would return the userid of the worker, then the web process would contact the worker directly through its own unix socket
2013-06-30 13:29:10 UTC <luite> all local communication is over unix sockets
2013-06-30 13:29:40 UTC <luite> perhaps you want to make a few changes
2013-06-30 13:29:52 UTC <luite> anyway, every worker has its own user id and work directory
2013-06-30 13:54:05 UTC <notdan> Maybe I should use sockets too, instead of files
2013-06-30 14:39:57 UTC <luite> notdan: unix sockets work nicely, you can assign them a context in the .fc file, and selinux has permission settings for them
2013-06-30 14:46:32 UTC <luite> also if a process transitions from one security context to another, permissions for the sockets get checked again
2013-06-30 14:47:30 UTC <luite> this prevents a security problem that exists with things like geordi (a ptrace based sandbox)
2013-06-30 14:48:13 UTC <luite> so you can safely open a socket in the root process, then fork off a worker, and be sure that even though it might have a reference to that socket left, it can't use it
2013-06-30 14:48:55 UTC <notdan> Yeah IIRC it works not only with sockets but with all open files and connections
2013-06-30 14:49:05 UTC <notdan> Btw, I can't seem to get my .fc to work: http://paste.lisp.org/display/137853
2013-06-30 14:49:29 UTC <notdan> Maybe user_home_t is more priviledged than my idia_whatever_t and it gets overriten?
2013-06-30 14:51:01 UTC <luite> yeah tcp connections also have a security tag
2013-06-30 14:52:46 UTC <luite> hmm
2013-06-30 14:53:47 UTC <notdan> Did you pick up someone with a flat tire on your bike? 
2013-06-30 14:54:31 UTC <luite> no i borrowed a car :)
2013-06-30 14:55:03 UTC <luite> i dunno that problem, perhaps dmesg gives some info?
2013-06-30 14:55:31 UTC <luite> as far as i know, those x_y_t don't have a concept of more/less privileged
2013-06-30 14:58:34 UTC <notdan> SELinux:  83 classes, 34079 rules
2013-06-30 14:58:59 UTC <notdan> Well, chcon works for now I guess
2013-06-30 14:59:02 UTC <luite> if copied the new wheezy32 and wheezy64 boxes to the web dir, same location
2013-06-30 14:59:11 UTC <luite> 40GB drive now
2013-06-30 15:09:21 UTC <luite> hmm, apparently selinux does treat home dirs in a spcial way
2013-06-30 15:10:36 UTC <luite> so better make a dir outside the home dir
2013-06-30 15:11:15 UTC <luite> check genhomedircon, it runs that to generate the home dir policies
2013-06-30 15:11:46 UTC <luite> i did wolfgang with the files in /usr, /lib, /var etc, which worked
2013-06-30 15:33:50 UTC <notdan> Ah, I see
2013-06-30 15:34:01 UTC <notdan> fair enough, will move my stuff in a dedicated directory
2013-06-30 15:38:23 UTC <luite> hmm, io-choice fails on head
2013-06-30 15:39:14 UTC <luite> perhaps my head is too old
2013-06-30 15:39:17 UTC <luite> i guess that's it
2013-06-30 15:42:22 UTC <notdan> might be a problem with TH?
2013-06-30 15:43:56 UTC <luite> yeah, it was changed after i updated my compiler
2013-06-30 15:44:08 UTC <notdan> It says "supporting GHC head" in the latest commit of io-choice tho
2013-06-30 15:44:10 UTC <luite> it's 2 weeks old now
2013-06-30 15:44:14 UTC <notdan> ah
2013-06-30 15:44:46 UTC <luite> anyway i just patched it a bit, i'll update ghc later, i just want to test ghc-mod with the latest haskell-mode update :)
2013-06-30 15:44:52 UTC <luite> and vado of course
2013-06-30 15:50:10 UTC <notdan> oh, i have yet to install the new haskell-mode
2013-06-30 15:50:37 UTC <notdan> why the hell does my web app wants search access to all of its parent directories up to /home/vagrant
2013-06-30 15:51:19 UTC <luite> hehe, i guess that's why it's best to run the programs from their real locations
2013-06-30 15:52:44 UTC <luite> hmm, vado doesn't find my mount point
2013-06-30 15:55:15 UTC <luite> oh
2013-06-30 15:55:29 UTC <luite> i think it fails if it doesn't contain user@
2013-06-30 15:55:57 UTC <luite> my remote user has the same user name
2013-06-30 15:59:42 UTC <notdan> hm, yeah, I don't think it supports that
2013-06-30 16:00:02 UTC <notdan> can you send me the output of 'mount' and the error vado produces?
2013-06-30 16:10:02 UTC <luite> oh i've just patched it in
2013-06-30 16:10:07 UTC <luite> i'll send a pull req
2013-06-30 16:10:51 UTC <luite> hm, i t doesn't work yet
2013-06-30 16:15:38 UTC <luite> hdiff.luite.com: on /Users/luite/hdiff (osxfusefs, nodev, nosuid, synchronous, mounted by luite)
2013-06-30 16:15:41 UTC <luite> this is the line
2013-06-30 16:16:57 UTC <luite> well that was quick :)
2013-06-30 16:26:06 UTC <luite> oh second problem, i've mounted my homedir
2013-06-30 16:26:11 UTC <luite> which ends up as an empty dir
2013-06-30 16:40:41 UTC <notdan> hm think i fixed it
2013-06-30 16:40:59 UTC <notdan> err nope
2013-06-30 17:00:13 UTC <notdan> luite: I've pushed a fix
2013-06-30 17:01:41 UTC <luite> ok, i'll try
2013-06-30 17:02:58 UTC <luite> does not yet fix the directory problem
2013-06-30 17:03:39 UTC <notdan> did you mount it with vamount?
2013-06-30 17:04:23 UTC <luite> no
2013-06-30 17:06:35 UTC <luite> whoops
2013-06-30 17:06:43 UTC <luite> i just mounted my server's home dir over my real home dir
2013-06-30 17:06:55 UTC <notdan> D:
2013-06-30 17:07:22 UTC <luite> umount -f :)
2013-06-30 17:08:03 UTC <luite> if you mount with vamount, the luite@ is automatically inserted
2013-06-30 17:10:35 UTC <luite> but if you just do sshfs server: dir
2013-06-30 17:10:37 UTC <luite> then not
2013-06-30 17:10:59 UTC <notdan> Yeah, in that case you need to put sshfsUser = "" in the settings file
2013-06-30 17:53:36 UTC <luite> ah good point
2013-06-30 17:53:45 UTC <luite> i'll mount it with vamount from now on then
2013-06-30 17:58:16 UTC <luite> perhaps vado can run a command locally if it detects that it's run outside a mount?
2013-06-30 19:59:06 UTC <luite> notdan: did you find a list of macros for selinux?
2013-06-30 20:00:38 UTC <notdan> Yeah, they are in /usr/share/selinux/mls/include/support/file_patterns.spt
2013-06-30 20:00:45 UTC <notdan> (and in other files around there)
2013-06-30 20:03:15 UTC <luite> oh mls is the wrong policy i think?
2013-06-30 20:03:25 UTC <luite> it might have slightly different macros
2013-06-30 20:05:14 UTC <luite> i think ghc needs excemem for loading object files and running them
2013-06-30 20:05:18 UTC <luite> execmem
2013-06-30 20:06:32 UTC <notdan> yeah there are also macros in /usr/share/selinux/default/include/
2013-06-30 20:19:15 UTC <notdan> luite: do I need to be a super-user to call setCon?
2013-06-30 20:26:19 UTC <luite> notdan: yeah i think so
2013-06-30 20:26:40 UTC <notdan> oh nvm
2013-06-30 20:26:51 UTC <notdan> actually no, it can be run as user
2013-06-30 20:26:59 UTC <notdan> I was just getting a strange error
2013-06-30 20:27:08 UTC <notdan> the solution turned out to be simple 
2013-06-30 20:27:08 UTC <notdan>     When setcon(3) is used to set a different context on a new thread without an
2013-06-30 20:27:08 UTC <notdan>     associated typebounds policy statement, then the call will return 'Operation not
2013-06-30 20:27:08 UTC <notdan>     permitted'
2013-06-30 20:27:28 UTC <notdan> but I can't wrap my head around why it was neccessary to make that restriction
2013-06-30 20:27:29 UTC <luite> ah
2013-06-30 20:27:38 UTC <notdan> necessary*
2013-06-30 20:29:26 UTC <luite> oh perhaps setcon wasn't the reason i started that stuff as root then
2013-06-30 20:30:24 UTC <luite> hah it clearly wasn't i did setGroupID and setUserID before setCon :)
2013-06-30 20:31:10 UTC <notdan> heh 
2013-07-01 00:15:39 UTC <fryguybob> ACTION made it home.  Finally.
2013-07-01 00:16:11 UTC <byorgey> welcome home!
2013-07-01 00:16:37 UTC <byorgey> was it an extra-long trip for some reason?  Or just long as usual?
2013-07-01 00:16:42 UTC <fryguybob> byorgey: Thanks for the package!
2013-07-01 00:16:58 UTC <byorgey> ah, good, glad the package made it to you!
2013-07-01 00:18:25 UTC <fryguybob> byorgey: It was a normal length trip, but we went out of Pittsburgh to CA.  So we had some extra travel when we got back and couldn't really rest much until now.
2013-07-01 00:18:43 UTC <byorgey> ah, yeah, that sounds rough
2013-07-01 00:19:33 UTC <fryguybob> There was some screaming on the first flight, but the second one was better.
2013-07-01 00:20:09 UTC <fryguybob> And the car ride was fine after a bit.
2013-07-01 00:21:17 UTC <fryguybob> byorgey: In total Judah slept 40 minutes worth of naps the day we flew, but it sounds like your travels were worse :(
2013-07-01 00:21:31 UTC <byorgey> only 40 minutes, yikes
2013-07-01 00:21:38 UTC <byorgey> did he have his own seat, or was he on your laps?
2013-07-01 00:22:41 UTC <fryguybob> byorgey: On our laps.
2013-07-01 00:23:23 UTC <byorgey> ah.  this trip, Noah had his own seat (we brought his carseat and installed it on the plane seat), and that made things approximately infinity percent better.
2013-07-01 00:23:35 UTC <fryguybob> Nice
2013-07-01 00:24:15 UTC <byorgey> he was quite a trooper.  In fact our trip was really not all that bad, other than us all just being really tired.
2013-07-01 00:24:47 UTC <fryguybob> Ah, well I hope you get all rested.
2013-07-01 00:25:04 UTC <byorgey> thanks.  I think we are pretty much recovered at this point.
2013-07-01 00:26:22 UTC <byorgey> I hope you all get some good rest too.
2013-07-01 00:27:10 UTC <fryguybob> Thanks.  It is good to be home.
2013-07-01 00:30:45 UTC <byorgey> ACTION tries to work out what exactly the semantics of arcLengthToParam should be in terms of rounding error.
2013-07-01 01:00:12 UTC <byorgey> also, weatherspark.com is the weathe website I have been waiting for all my life.
2013-07-01 01:00:16 UTC <byorgey> *weather
2013-07-01 01:08:07 UTC <carter> byorgey ooo, thats a nice website
2013-07-01 01:08:32 UTC <byorgey> I know right? It's pretty sweet.
2013-07-01 01:10:01 UTC <byorgey> Click on the "forecasts" tab at the top and take a look at the SparkRadar, where they compress three dimensions (time + x + y) into two (time + radius) so instead of sitting there watching an animation of a radar map and trying to figure out what the heck is going on you can see what you need in just a glance.
2013-07-01 01:10:23 UTC <byorgey> it's brilliant.
2013-07-01 01:10:42 UTC <carter> OOOO
2013-07-01 01:10:44 UTC <carter> THAT IS NICE
2013-07-01 01:10:56 UTC <carter> Data Vis is hard, they done gone done it write
2013-07-01 01:10:59 UTC <carter> *right
2013-07-01 01:11:43 UTC <byorgey> yup
2013-07-01 01:12:52 UTC <carter> thanks for sharing
2013-07-01 01:13:21 UTC <byorgey> np.  and andyjgill actually shared it with me when I was visiting a few days ago
2013-07-01 01:16:09 UTC <carter> cool
2013-07-01 01:16:14 UTC <carter> how's kansas?
2013-07-01 01:18:32 UTC <byorgey> 'twas great fun
2013-07-01 01:18:43 UTC <byorgey> we're back in Philly now
2013-07-01 01:34:08 UTC <carter> cool
2013-07-01 02:21:01 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14a8ef83e http://travis-ci.org/diagrams/diagrams-lib/builds/8608391 The build passed.
2013-07-01 02:39:12 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14949b468 http://travis-ci.org/diagrams/diagrams-lib/builds/8608676 The build passed.
2013-07-01 07:27:36 UTC <notdan> Howdy
2013-07-01 11:16:19 UTC <byorgey> hi notdan
2013-07-01 11:43:13 UTC <luite> notdan: have you experimented with supporting multiple virtual machines with ghc-mod-vado.sh? perhaps it can ask vado for the local and remote paths for every location?
2013-07-01 11:46:37 UTC <luite> in combination with -l to support local stuff, i guess only .vadosettings would need to be configured, everything would then work from every location
2013-07-01 11:49:53 UTC <notdan> Yeah that's a good idea. The thing is, we have MountSettings and MountPoint datatypes. If we specify that much information in .vadosettings maybe we don't have to call mount at all?
2013-07-01 11:50:28 UTC <notdan> I want to implement -l switch and other stuff but I guess it boils down to design choices
2013-07-01 11:51:06 UTC <luite> hmm, that's a good point
2013-07-01 12:10:22 UTC <luite> oh, ipv6 mounts don't work either: luite@[2a01:4f8:190:30a1::2]:/home/luite on /Users/luite/hdiff (osxfusefs, nodev, nosuid, synchronous, mounted by luite)
2013-07-01 12:11:27 UTC <luite> but i think a static mount table would be ok, i guess you'd usually just configure a few virtual machine mounts in fixed locations
2013-07-01 12:12:01 UTC <luite> as long as you can configure them once and then seamlessly switch between them from emacs it's great
2013-07-01 12:15:08 UTC <luite> ok i've fixed it
2013-07-01 12:16:40 UTC <luite> (Testing ipv6 to my server since it seems to take a different route, with a more stable ping time)
2013-07-01 12:17:55 UTC <luite> if hamishmack lets us commit directly it's easier to fix :)
2013-07-01 12:21:58 UTC <byorgey> hamishmack should use http://felixge.de/2013/03/11/the-pull-request-hack.html like edwardk =)
2013-07-01 12:24:55 UTC <luite> byorgey: yeah i'm trying to do that with the ghcjs projects
2013-07-01 12:27:48 UTC <luite> still people find it a bit scary i think, too complex
2013-07-01 12:30:04 UTC <notdan> I myself a little bit scared pushing to upstream. I mean, its someone else's project, maybe he prefers different coding style or his wants to fix my documenation
2013-07-01 12:30:54 UTC <luite> the ghcjs coding style is messy ;)
2013-07-01 12:34:08 UTC <luite> hmm, jmacro is a bit slow :(
2013-07-01 12:34:24 UTC <luite> ~10 seconds to parse and prettyprint a 4MB JS file
2013-07-01 12:34:43 UTC <luite> i'm looking for something that can doe it in under 0.5
2013-07-01 13:04:17 UTC <notdan> http://nopaste.info/f2048834b2.html I don't understand, why does idia_restricted_t tries to access /dev/pts/0. Like it's trying to output something - but it doesn't and it shouldn't. Also why is it trying to access idia_web_t pipes?
2013-07-01 13:05:11 UTC <luite> hmm, unconfined_u, you should runcon! ;)
2013-07-01 13:05:41 UTC <luite> perhaps the runtime opens the terminal by default?
2013-07-01 13:07:16 UTC <notdan> Well I guess there would be no harm in disallowing it
2013-07-01 13:09:17 UTC <notdan> What I don't understand is all the calls to the home dir: 
2013-07-01 13:09:18 UTC <notdan> type=AVC msg=audit(1372683990.897:1438): avc:  denied  { search } for  pid=26056 comm="scotty-pastebin" name="vagrant" dev=dm-0 ino=261634 scontext=system_u:object_r:idia_restricted_t:s0-s0:c0.c1023 tcontext=unconfined_u:object_r:user_home_dir_t:s0 tclass=dir
2013-07-01 13:09:39 UTC <notdan> type=AVC msg=audit(1372683990.897:1438): avc:  denied  { search } for  pid=26056 comm="scotty-pastebin" name="ghc" dev=dm-0 ino=264750 scontext=system_u:object_r:idia_restricted_t:s0-s0:c0.c1023 tcontext=unconfined_u:object_r:user_home_t:s0 tclass=dir
2013-07-01 13:09:53 UTC <notdan> it's because of the libdir or something I think
2013-07-01 13:13:31 UTC <luite> yeah i wouldn't worry too much about just some search access
2013-07-01 13:25:25 UTC <byorgey> notdan: "I myself a little bit scared pushing to upstream. I mean, its someone else's project, maybe he prefers different coding style or his wants to fix my documenation" -- that's exactly why giving people push access works so well.
2013-07-01 13:25:39 UTC <byorgey> notdan: if you are a bit scared then you will work hard using good coding style, writing good documentation, etc.
2013-07-01 13:25:54 UTC <byorgey> if you just submit a pull request then you might not put as much work into it.
2013-07-01 13:29:28 UTC <notdan> True
2013-07-01 13:30:15 UTC <notdan> Well, analyzing all those AVC alterts paid off - at least I've found a bug in the code
2013-07-01 13:57:45 UTC <luite> your code, or library?
2013-07-01 13:58:51 UTC <notdan> my code
2013-07-01 13:59:11 UTC <notdan> Hm, can I use one Socket object in a program for sending/receiving?
2013-07-01 13:59:39 UTC <notdan> Not sure how it should work, haven't done unix sockets in Haskell. Let's see if it works
2013-07-01 14:00:17 UTC <luite> yeah
2013-07-01 14:02:18 UTC <luite> use socketToHandle to use normal operations on them
2013-07-01 14:05:31 UTC <notdan> Hm, I used Network.accept for reading from socket and sendAll to send results 
2013-07-01 14:06:56 UTC <luite> that could be a bit more efficient since it bypasses the whole Handle nonblocking/buffering library
2013-07-01 14:07:10 UTC <luite> but it will probably block your whole program without -threaded
2013-07-01 14:10:19 UTC <notdan> Is there a way to use an Unix socket without conneting it first?
2013-07-01 14:27:24 UTC <luite> notdan: what do you want to do with it?
2013-07-01 14:30:35 UTC <notdan> Well, I am trying to use sockets like this: https://gist.github.com/co-dan/12def0874e4e6e75ad70 but I get an error about socket not being connected
2013-07-01 14:30:41 UTC <notdan> (Transport endpoint is not connected)
2013-07-01 14:30:49 UTC <notdan> Presumably I have to 'accept' the socket first?
2013-07-01 14:31:06 UTC <notdan> I thought Datagram were connectionless to
2013-07-01 14:33:08 UTC <luite> oh but datagram sockets are unidirectional
2013-07-01 14:34:03 UTC <luite> are you sure you don't want stream sockets?
2013-07-01 14:34:47 UTC <notdan> Fair enough, I don't know much about low-level networking and especially unix sockets
2013-07-01 14:34:52 UTC <notdan> Let me try Stream sockets
2013-07-01 14:35:41 UTC <notdan> Hm, still the same error
2013-07-01 14:36:17 UTC <luite> well you do need to bind / connect
2013-07-01 14:37:32 UTC <notdan> OK sorry, I should stop hacking around and read the docs
2013-07-01 14:37:51 UTC <luite> i might have a working example, lemme check
2013-07-01 14:40:24 UTC <luite> notdan: http://pastebin.ca/2413782
2013-07-01 14:41:16 UTC <luite> first listenOn, then accept, which blocks until someone connects
2013-07-01 14:41:54 UTC <luite> sock is the FilePath of the socket file
2013-07-01 14:50:35 UTC <notdan> hm, so at which point I can turn a socket into a handle?
2013-07-01 14:52:11 UTC <luite> with the things i used, connectTo and accept, you already get a Handle
2013-07-01 14:53:06 UTC <luite> there's Network.Socket, and Network
2013-07-01 14:53:25 UTC <luite> Network is a bit higher leve,e probably more appropriate
2013-07-02 01:58:36 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14155862d http://travis-ci.org/diagrams/diagrams-contrib/builds/8642705 The build has errored.
2013-07-02 03:42:21 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14155862d http://travis-ci.org/diagrams/diagrams-contrib/builds/8642705 The build passed.
2013-07-02 04:40:59 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 143062c2f http://travis-ci.org/diagrams/diagrams-contrib/builds/8645592 The build passed.
2013-07-02 05:15:53 UTC <travis-ci> [travis-ci] 13diagrams-lib/06issue88 14104ee98 http://travis-ci.org/diagrams/diagrams-lib/builds/8646355 The build passed.
2013-07-02 10:17:10 UTC <notdan> http://hackage.haskell.org/package/esqueleto hm, this looks interesting. But I am not sure we are going to do any complicated SQL queries, I don't even think we are going to have many sql tables
2013-07-02 10:25:50 UTC <luite> yeah they added it after persistent didn't do too well with relational data :)
2013-07-02 10:36:23 UTC <luite> notdan: i'm a bit busy today, but are you online tomorrow or thursday? we can discuss the interactive-diagrams daemons / socket protocols then
2013-07-02 13:16:53 UTC <notdan> luite: well, tomorrow i'll be avaliable in the morning, because I have to go to my uni research group meeting at 3pm
2013-07-02 13:17:02 UTC <notdan> thursday should do
2013-07-02 13:28:05 UTC <luite> ok
2013-07-02 13:53:45 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14e814f33 http://travis-ci.org/diagrams/diagrams-lib/builds/8657817 The build passed.
2013-07-02 14:32:42 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14806e780 http://travis-ci.org/diagrams/diagrams-lib/builds/8659068 The build passed.
2013-07-02 15:27:06 UTC <byorgey> alpounet: I just sent you some comments on your article
2013-07-02 17:48:55 UTC <byorgey> hi isomorphic, welcome
2013-07-02 18:24:30 UTC <alpounet> byorgey, this is terrific! exactly the kind of comments I like. also glad there were a few things you didn't know as well, it probably made this a funnier read
2013-07-02 18:24:47 UTC <byorgey> great! glad I could help
2013-07-02 18:24:57 UTC <byorgey> and yes, it was fun reading it because I learned some things
2013-07-02 18:25:41 UTC <alpounet> byorgey, i think i'll just add an example when I explain how laziness works in ghc
2013-07-02 18:26:01 UTC <byorgey> examples are always good
2013-07-02 18:26:40 UTC <alpounet> like, what goes on when you evaluate "take 10 . map (+1) $ iterate (*2) 1"
2013-07-02 19:36:18 UTC <alpounet> notdan, I know, I'm kind of watching your progress through #diagrams
2013-07-02 19:36:47 UTC <alpounet> do you guys happen to run ghc in some kind of sandbox?
2013-07-02 19:36:52 UTC <notdan> hm, what do you mean by ghc-core app? An app writen in Core as opposed to Haskell?
2013-07-02 19:36:53 UTC <luite> alpounet: yeah i'm going to try to revive it based on ghcjs
2013-07-02 19:37:00 UTC <luite> and notdan's code
2013-07-02 19:37:07 UTC <alpounet> cool
2013-07-02 19:37:09 UTC <byorgey> yay!
2013-07-02 19:37:25 UTC <notdan> alpounet: we are using some regular restrictions like rlimits, priorities and right now we are trying to work out the selinux configuration
2013-07-02 19:37:25 UTC <luite> alpounet: yes, selinux
2013-07-02 19:37:34 UTC <alpounet> notdan, there's a "ghc-core" tool, that outputs the GHC Core code generated by GHC on the haskell code you feed it
2013-07-02 19:37:49 UTC <alpounet> i'm making it a webapp
2013-07-02 19:38:04 UTC <byorgey> luite: by the way, the recent release of the FP Haskell Center has made it even more clear to me that FP School of Haskell will never be (nor was ever intended to be) like what Wolfgang will be
2013-07-02 19:38:18 UTC <notdan> oh
2013-07-02 19:38:20 UTC <byorgey> they are focused on making stuff they can sell to big companies
2013-07-02 19:38:28 UTC <luite> oh i haven't used FP Haskell Center yet
2013-07-02 19:38:42 UTC <alpounet> you paste your haskell code in a text area, you give some title etc, and boom you have a page with a nice small url with the syntax highlighted haskell code on the left and the syntax highlighted Core code on the right
2013-07-02 19:38:59 UTC <luite> but i haven't given up hope, i'm quite excited that ghcjs can run actual code now, and that interactive stuff works :)
2013-07-02 19:39:08 UTC <alpounet> byorgey, i'm kind of hesitating to put the article on SoH
2013-07-02 19:39:09 UTC <byorgey> big companies do not pay for public interactive wiki-pastebin thingys, they want to deploy Enterprise Things
2013-07-02 19:39:25 UTC <luite> and with interactive-diagrams running i won't have an excuse not to extend it to wolfgang ;)
2013-07-02 19:39:32 UTC <byorgey> =D
2013-07-02 19:39:53 UTC <byorgey> luite: anyway, I say this just becauase you were at one point discouraged because you thought SoH was scooping you
2013-07-02 19:39:57 UTC <byorgey> but it's really not
2013-07-02 19:40:03 UTC <byorgey> alpounet: why is that?
2013-07-02 19:40:30 UTC <alpounet> byorgey, i don't see many articles from people who don't work at FPCO
2013-07-02 19:40:43 UTC <byorgey> ah, hehe
2013-07-02 19:40:44 UTC <luite> do they pay for content?
2013-07-02 19:40:46 UTC <alpounet> it somehow feels odd
2013-07-02 19:41:03 UTC <byorgey> I dunno, I don't have a problem with it
2013-07-02 19:41:18 UTC <byorgey> they have some of my content on there (with my permission), they didn't pay me for it
2013-07-02 19:41:35 UTC <byorgey> it's pretty nice for what it is
2013-07-02 19:41:55 UTC <alpounet> luite, I think they will give $1000 to the best practical real-world-problem-solving content each month
2013-07-02 19:42:03 UTC <alpounet> smth like that
2013-07-02 19:42:05 UTC <byorgey> yes, that's true
2013-07-02 19:42:07 UTC <luite> yeah i read about that
2013-07-02 19:42:15 UTC <alpounet> that's about it, AFAIK
2013-07-02 19:42:28 UTC <luite> unfortunately the problems i'm interested in aren't practical ;)
2013-07-02 19:42:39 UTC <byorgey> right, that's my problem too =)
2013-07-02 19:43:04 UTC <alpounet> they are to someone, probably
2013-07-02 19:43:23 UTC <alpounet> :p
2013-07-02 19:43:35 UTC <byorgey> hehe, true
2013-07-02 19:43:36 UTC <luite> btw anyone using emacs for os x with flymake here? i get lots of crashes and it makes me sad :'(
2013-07-02 19:43:44 UTC <byorgey> anyway, they are clearly focused on making money by pushing Haskell to software companies.  There's nothing wrong with that.  Though it doesn't necessarily mesh all that well with my particular interests
2013-07-02 19:47:01 UTC <luite> anyone here coming to zurihac who wants to spend a few days before after hiking/biking in switzerland? i can probably bring a car
2013-07-02 19:47:21 UTC <byorgey> sounds awesome, too bad I am not coming to zurihac =(
2013-07-02 19:47:42 UTC <notdan> luite: do you use EmacsForOsX or Aquamacs?
2013-07-02 19:47:49 UTC <luite> notdan: EmacsForOsX
2013-07-02 19:47:55 UTC <luite> is Aquamacs better?
2013-07-02 19:48:09 UTC <notdan> I am not sure, it doesn't crash tho 
2013-07-02 19:48:17 UTC <notdan> but it's emacs23
2013-07-02 19:48:17 UTC <luite> hehe, well that might be an advantage
2013-07-02 19:48:38 UTC <alpounet> luite, notdan, for my ghc-core web app I have to run ghc in an isolated env, could you possibly share your scripts and a bit of time to answer potential questions? i would really love to have a simple solution to this problem, diving in that kind of thing isn't exactly what i love, and i'm just missing that and a few details to finally run that app on a public instance, for the community
2013-07-02 19:48:42 UTC <luite> oh that's a bit old, don't they update it anymore?
2013-07-02 19:49:01 UTC <luite> alpounet: in ~1-2 weeks i think we'll have security figured out
2013-07-02 19:49:48 UTC <luite> alpounet: what kind of hosting do you have? you need to have root access to enable selinux
2013-07-02 19:49:51 UTC <notdan> alpounet: yeah, we have all the code on github: https://github.com/co-dan/interactive-diagrams/tree/master/eval-api
2013-07-02 19:50:01 UTC <notdan> right now we are stuck with configuring selinux
2013-07-02 19:50:24 UTC <alpounet> luite, i have a dedicated server
2013-07-02 19:50:31 UTC <alpounet> thus with root priviledges
2013-07-02 19:50:44 UTC <notdan> what kind of isolation do you need? I am not familiar with Core so I don't know what the user code can do whilst being compiled to Core
2013-07-02 19:51:05 UTC <luite> alpounet: ok. we found out that ubuntu has messed up the selinux policy, so the test system is based on debian wheezy
2013-07-02 19:51:06 UTC <notdan> I guess template haskell is one of the problems?
2013-07-02 19:51:15 UTC <alpounet> luite, i run a debian too
2013-07-02 19:51:33 UTC <alpounet> notdan, yeah, you can access files or the internet with TH...
2013-07-02 19:51:49 UTC <luite> with selinux you can restrict file/network access for the process
2013-07-02 19:52:03 UTC <luite> just takes a bit of time to figure out all permissions you need
2013-07-02 19:52:10 UTC <alpounet> yeah
2013-07-02 19:52:21 UTC <notdan> luite: is the registration for ZuriHac free?
2013-07-02 19:52:21 UTC <alpounet> basically, I'm just calling out to ghc with various command-line options
2013-07-02 19:52:27 UTC <luite> notdan: i think it is
2013-07-02 19:52:33 UTC <alpounet> notdan, ^^^ what i'm doing
2013-07-02 19:52:48 UTC <notdan> hm, that's interesting. I might come if I can find a sofa to crash on
2013-07-02 19:52:50 UTC <luite> i sent a registration mail some time ago and they didn't charge me :)
2013-07-02 19:52:59 UTC <luite> notdan: they have a suggested hostel
2013-07-02 19:53:01 UTC <notdan> alpounet: hm, shouldn't you be using GHC API?
2013-07-02 19:53:10 UTC <luite> dunno how expensive that is
2013-07-02 19:53:42 UTC <alpounet> i just want that command to be run without access to the file system outside the haskell file it's run on, and, I suppose, the GHC libraries 
2013-07-02 19:53:58 UTC <alpounet> and without access to network obviously
2013-07-02 19:54:07 UTC <alpounet> also, memory consumption limits would be nice
2013-07-02 19:54:24 UTC <alpounet> notdan, it's much more complicated, last time I checked the doc was pretty poor
2013-07-02 19:54:51 UTC <luite> 42CHF per night for a bed in a 6-bed dorm
2013-07-02 19:55:50 UTC <notdan> alpounet: well, I believe memory limits can be set with rlimits. Access to the file system can be configured using SELinux
2013-07-02 19:56:05 UTC <luite> unfortunately i don't have a couch in zurich :)
2013-07-02 19:56:33 UTC <notdan> the cheapest tickets to Zurich on those dates are 360$ :(
2013-07-02 19:56:35 UTC <notdan> oh well
2013-07-02 19:56:38 UTC <luite> ouch
2013-07-02 19:57:07 UTC <luite> i'll probably drive, but moscow is kind of a detour ;)
2013-07-02 19:57:12 UTC <notdan> heh, yeah
2013-07-02 19:58:40 UTC <notdan> I've already spent $500 on tickets this summer, I am flying to Germany in the end of July, then somehow need to get to Copenhagen and stay at friend's place there
2013-07-02 19:59:16 UTC <alpounet> oh, there's a selinux package!
2013-07-02 19:59:21 UTC <alpounet> found out in your code
2013-07-02 19:59:29 UTC <luite> yes what a coincidence ;)
2013-07-02 19:59:36 UTC <alpounet> 'unix' does the rlimit bits I suppose
2013-07-02 19:59:55 UTC <notdan> alpounet: anyway, the kind of restrictions you need can probably be provided by SELinux. I am going to write a more or less detailed post on what it takes to write a policy for running GHC. I am using the API, but the requirements shouldn't be very different
2013-07-02 19:59:59 UTC <alpounet> right, you wrote selinux
2013-07-02 20:00:17 UTC <notdan> we just need to figure out this stuff ourselfs :)
2013-07-02 20:03:31 UTC <notdan> http://nopaste.info/83067769c5.html I still don't understand why does idia_restricted_t needs access to these resources
2013-07-02 20:03:52 UTC <notdan> I don't even know where to set a breakpoint in gdb :S
2013-07-02 20:06:40 UTC <luite> that sshd_t:fd is probably only necessary if you start it from an ssh thing. can you add it to the debug policy? check if it works without that rule if you start ith with an init.d script
2013-07-02 20:08:24 UTC <luite> alpounet: it's a bit annoying to get everything working, see ^  :) you have to add rules for everything, even printing to stout
2013-07-02 20:10:05 UTC <alpounet> right, seems a bit hairy
2013-07-02 20:11:28 UTC <luite> it's not so bad once it works and you are confident that it's still secure. when updates break stuff you switch selinux temporarily to permissive mode, so that it logs violations, but doesn't prevent them
2013-07-02 20:11:38 UTC <luite> and you can use audit2allow to generate new rules from the lgo
2013-07-02 20:11:42 UTC <luite> lgo
2013-07-02 20:11:43 UTC <luite> log
2013-07-02 20:12:33 UTC <alpounet> yeah
2013-07-02 20:13:27 UTC <luite> apparmor is a bit simpler, it uses file paths instead of labels
2013-07-02 20:15:19 UTC <alpounet> oh, interesting too
2013-07-02 20:16:53 UTC <luite> but selinux is a bit more fine grained... i forgot the exact reason that i had to use selinux for wolfgang, perhaps some limitation of socket labels, or something with sockets after changing a process from one security context to another
2013-07-02 20:21:30 UTC <luite> anyway i should finish the conversion to binary object files, and add link time optimization
2013-07-02 20:51:53 UTC <alpounet> luite, if isSELinuxEnabled :: IO Bool returns True on my install, means everything is fine right?
2013-07-02 20:52:36 UTC <luite> alpounet: hmm, i hope. it only really does anything if you set it do enforcing
2013-07-02 20:52:38 UTC <luite> to
2013-07-02 20:53:00 UTC <luite> alpounet: also check the current process list with ps -efZ
2013-07-02 20:53:10 UTC <luite> alpounet: and files with ls -lZ
2013-07-02 20:53:21 UTC <luite> both should list the proper security labels for everything
2013-07-02 20:54:55 UTC <alpounet> it appears to do so :)
2013-07-02 20:56:03 UTC <luite> yay, binary objects with ghcjs work, and linking seems much faster
2013-07-02 20:56:35 UTC <carter> luite whats that mean? :)
2013-07-02 20:57:28 UTC <luite> carter: it used to generate a file with javascript source for every haskell module
2013-07-02 20:57:44 UTC <carter> which is def no needed except for the deliverable stuff
2013-07-02 20:57:45 UTC <luite> carter: where function blocks where separated by special comments, recognized by the linker
2013-07-02 20:57:57 UTC <carter> and now you have a faster / better format?
2013-07-02 20:58:03 UTC <carter> using binary or cereal? :P
2013-07-02 20:58:06 UTC <luite> now it just serializes jmacro AST to binary files, and adds an index so it can quickly locate functions
2013-07-02 20:58:13 UTC <luite> both
2013-07-02 20:58:16 UTC <luite> :/
2013-07-02 20:58:20 UTC <carter> both?!
2013-07-02 20:58:27 UTC <carter> educate me
2013-07-02 20:58:35 UTC <luite> well that's just me being stupid
2013-07-02 20:58:49 UTC <luite> it produces a .js file, a binary object with all the code and an index
2013-07-02 20:58:54 UTC <luite> and a .ji file with the dependencies
2013-07-02 20:58:59 UTC <luite> the .ji uses cereal, the .js binary
2013-07-02 21:00:08 UTC <luite> now that it's binary, the .ji can go
2013-07-02 21:00:18 UTC <luite> and the .js should probably be renamed to .jso or something
2013-07-02 21:00:28 UTC <luite> time to update the cabal patch
2013-07-02 21:01:19 UTC <carter> cool!
2013-07-03 00:32:48 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/TrailParam.mp4
2013-07-03 00:33:03 UTC <byorgey> progress on trail parametrization!
2013-07-03 00:39:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14fc3e489 http://travis-ci.org/diagrams/diagrams-lib/builds/8679611 The build passed.
2013-07-03 00:42:24 UTC <luite> cool :)
2013-07-03 00:49:51 UTC <byorgey> this is what will let you do stuff like create an arrow between two points, but shrink it by 2 units on both ends (or whatever)
2013-07-03 00:51:41 UTC <luite> that's really useful
2013-07-03 03:05:15 UTC <fryguybob> byorgey: Nice!
2013-07-03 04:01:14 UTC <mgsloan1> byorgey: Awesome!! :D
2013-07-04 02:21:02 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/farm13/  -- see the call for Demo Proposals!
2013-07-04 02:22:05 UTC <carter> byorgey COOL!
2013-07-04 04:37:22 UTC <knrafto> Hi, I was reading through the source for diagrams-lib, and I don't think I quite understand why there is a "recommended" fill color. Why can't the fill color be explicitly set to black in Diagrams.TwoD.Text.mkText?
2013-07-04 04:50:53 UTC <knrafto> Hmm, guess this was the wrong time to ask
2013-07-04 08:45:26 UTC <notdan> luite: hi
2013-07-04 09:49:04 UTC <luite> notdan_: hi
2013-07-04 10:40:16 UTC <notdan> luite: so, you wanna talk about the design?
2013-07-04 10:41:22 UTC <notdan> I don't quite understand how the web -> service -> worker scheme can work, assuming the service does all the work with limits
2013-07-04 10:41:27 UTC <notdan> (and service is not threaded)
2013-07-04 10:58:17 UTC <luite> yeah
2013-07-04 10:58:49 UTC <luite> I'll get something to eat first
2013-07-04 10:59:25 UTC <luite> do you want to discuss on irc? perhaps we can add a shared google docs thing to edit some specs.
2013-07-04 10:59:39 UTC <luite> or do you prefer voice chat
2013-07-04 11:00:16 UTC <luite> SPJ seems positive about merging the GHCJS patch btw :)
2013-07-04 11:01:04 UTC <luite> brb
2013-07-04 11:01:31 UTC <notdan> cool, re: lunch & merging GHCJS patches
2013-07-04 11:01:46 UTC <notdan> i think it would be nice to have a shared google doc/etherpad or maybe a whiteboard 
2013-07-04 11:02:08 UTC <notdan> i can do voice chat too
2013-07-04 11:10:46 UTC <luite> ok let's start with the shared doc and irc first
2013-07-04 11:11:58 UTC <alpounet> luite, nice! (for ghcjs)
2013-07-04 11:16:06 UTC <luite> notdan: what's your email i should send the share link to?
2013-07-04 11:16:56 UTC <notdan> difrumin@gmail.com
2013-07-04 11:17:55 UTC <notdan> ok,got it
2013-07-04 11:18:28 UTC <luite> yay, so i guess i have to type there now ;)
2013-07-04 11:20:44 UTC <luite> ok, comment here if i say stupid things in the doc :)
2013-07-04 11:21:18 UTC <luite> i've partially implemented this for wolfgang, but never quite finished the security, so i guess it's a good idea to do that now :)
2013-07-04 11:21:19 UTC <notdan> idia-service is the one that limits the amount of active workers, right?
2013-07-04 11:21:59 UTC <luite> yes, I'll add a sample request
2013-07-04 11:25:35 UTC <luite> hm, how do i add a table
2013-07-04 11:25:51 UTC <luite> ah
2013-07-04 11:25:55 UTC <notdan> :_)
2013-07-04 11:26:03 UTC <notdan> s/_/-/
2013-07-04 11:32:19 UTC <notdan> hm, why do we need to start idia-worker as root?
2013-07-04 11:34:52 UTC <luite> brb phone
2013-07-04 11:34:59 UTC <notdan> k
2013-07-04 11:48:25 UTC <luite> notdan: ok does that look reasonable?
2013-07-04 11:48:52 UTC <luite> if you have simplications that wouldn't hurt security or functionality, by all means add them :)
2013-07-04 11:49:09 UTC <notdan> Ok, so I am also not sure about the web -> worker and worker -> web interaction. I think the only process that can interact with workers should be service. What if we, for example, want to build an irc bot that would evalutate such requests? Than we would have to re-implement all the talking-to-workes business
2013-07-04 11:49:36 UTC <notdan> I am also not sure that we need to run workers as root. Do they need to access some special resources?
2013-07-04 11:52:33 UTC <luite> one problem is that the service is singlethreaded, which makes it more risky that a single requests locks it up. communication can be written as a library, so i'm not sure if that's really a problem
2013-07-04 11:53:02 UTC <luite> only issue is that idia_web_t needs some more permissions to contact the worker sockets
2013-07-04 11:53:18 UTC <notdan> hm, I see
2013-07-04 11:53:57 UTC <luite> the service runs as root, so workers can call chroot and setuid before they start real work (and listening on their worker socket)
2013-07-04 11:54:04 UTC <luite> the workers never run as root while running user code
2013-07-04 11:54:39 UTC <notdan> ah, right, you need root for chroot()
2013-07-04 11:54:39 UTC <luite> every user has his own userid so it's easier to set cgroups limits. and its own working dir for temp files
2013-07-04 11:55:48 UTC <luite> oh and you can set quota for temp files per user
2013-07-04 11:55:58 UTC <luite> but not if you run them all under the same uid
2013-07-04 11:58:40 UTC <luite> you can set an inode limit, so the max number of files it can make is limited. so service doesn't need too much time cleaning up after the req
2013-07-04 12:00:02 UTC <notdan> ok, this seems reasonable
2013-07-04 12:00:18 UTC <notdan> i'll see how to map this scheme to haskell libraries/executables
2013-07-04 12:00:21 UTC <luite> it's a bit complex, but i already have some code, and i can probably help a bit :)
2013-07-04 12:01:22 UTC <luite> perhaps you can start with one worker, reuse it for reqs from the same ip, restart for different ip
2013-07-04 12:01:26 UTC <luite> and extend to multiple workers later
2013-07-04 12:01:47 UTC <luite> the doc is the most general form that would also be good enough for repl stuf
2013-07-04 12:02:10 UTC <luite> since multiple workers + reusing = very fast reply time
2013-07-04 12:03:00 UTC <luite> perhaps we should store this as a wiki page instead? then it's easier to make changes and see history
2013-07-04 12:03:24 UTC <notdan> oh yeah
2013-07-04 12:03:36 UTC <notdan> there is a project wiki on github
2013-07-04 12:03:37 UTC <notdan> https://github.com/co-dan/interactive-diagrams/wiki
2013-07-04 12:04:32 UTC <notdan> I can import it
2013-07-04 12:04:33 UTC <notdan> 1 sec
2013-07-04 12:04:42 UTC <luite> ok
2013-07-04 12:18:16 UTC <notdan> ugh, bloody tables
2013-07-04 12:24:46 UTC <notdan> ok https://github.com/co-dan/interactive-diagrams/wiki/Design
2013-07-04 12:25:54 UTC <notdan> I'll start without the worker limits for now
2013-07-04 12:26:00 UTC <notdan> and try to work my way out
2013-07-04 12:32:24 UTC <luite> ok, i'll give you an account on my server. perhaps that makes it easier to work in the same vm, experiment with things without having to rebuild the vagrant every time
2013-07-04 12:32:53 UTC <luite> are you familiar with `binary' and `cereal' ?
2013-07-04 12:33:51 UTC <notdan> Yeha, I am using cereal atm 
2013-07-04 12:34:11 UTC <notdan> for serializing evaluation results
2013-07-04 12:37:13 UTC <luite> ok, i guess taht can be used for all messages over the sockets
2013-07-04 12:38:54 UTC <notdan> I was also thinking about the following modification: there is a fixed amount of workers initialized during the startup of idia-service. Then the idia-service (upon requests for web) chooses the avaliable worker (or blocks until some worker becomes vacant). idia-worker actually takes care of limits (including time limits). 
2013-07-04 12:39:09 UTC <notdan> I think it will be easier that way because I already have code for some ogf this
2013-07-04 12:39:37 UTC <luite> idia-worker cannot be trusted to take care of limits
2013-07-04 12:40:03 UTC <luite> it's single threaded, it would just need to block on a syscall, do a non-allocating loop etc
2013-07-04 12:41:58 UTC <notdan> right
2013-07-04 12:41:59 UTC <notdan> true
2013-07-04 12:42:17 UTC <luite> also since it can execute memory, overwite it, a clever user could try to patch out any time limit code
2013-07-04 12:42:36 UTC <luite> a bit unlikely, but i'd still not like to trust it in any way :)
2013-07-04 12:43:51 UTC <luite> the same for the result from the socket. a malicious user might get the socket Handle indirectly, to circumvent the DisplayResult serialization, and write garbage to it
2013-07-04 12:55:21 UTC <notdan> can I implement worker's code as a library and forkProcess it from the service?
2013-07-04 13:01:14 UTC <luite> sure, but having service+basic worker code in one package might be more useful
2013-07-04 13:01:38 UTC <luite> and make the action the worker runs after applying all restrictions configurable
2013-07-04 13:01:56 UTC <luite> so it can be replaced with some ghc-core or other action for other applications :)
2013-07-04 13:02:53 UTC <luite> some configurable Handle -> IO () -> IO () action could be done
2013-07-04 13:03:03 UTC <luite> where Handle is the worker result socket
2013-07-04 13:03:22 UTC <luite> the first IO () action lets the service know that the worker has started and is listening on the socket
2013-07-04 13:05:36 UTC <notdan> ok, sounds reasonable
2013-07-04 13:07:56 UTC <luite> the goal is to make it useful for ghc-core and other haskelly things that need a sandbox, right?
2013-07-04 13:09:56 UTC <luite> oh wait, the listening thing is not even necessary
2013-07-04 13:09:59 UTC <luite> make it Handle -> IO ()
2013-07-04 13:10:25 UTC <luite> it listens first, then runs the supplied action on the ocnnection
2013-07-04 13:10:32 UTC <luite> with accept
2013-07-04 13:16:33 UTC <luite> ack what black magic is needed to create proper tables on github ;)
2013-07-04 13:20:34 UTC <luite> ah i found it
2013-07-04 13:39:39 UTC <notdan> what is it?
2013-07-04 13:39:48 UTC <notdan> I tried org-mode table but they looked ugly :[
2013-07-04 13:39:50 UTC <luite> see the source, add a header, then --- | ---
2013-07-04 13:39:53 UTC <notdan> and well, wrong
2013-07-04 13:40:09 UTC <notdan> oh wow
2013-07-04 13:40:11 UTC <luite> no need to align the source, it gets in the way since (i think) it has to be on one line
2013-07-04 13:40:14 UTC <notdan> thanks for cleaning it up
2013-07-04 13:40:36 UTC <luite> although in my blog i did it with linebreaks, perhaps github also supports that
2013-07-04 13:43:31 UTC <notdan> you are using BlogLiterately, aren't you? it uses markdown?
2013-07-04 13:43:45 UTC <luite> nope pandoc tables aren't supported in github
2013-07-04 13:43:47 UTC <luite> yeah with pandoc
2013-07-04 13:43:56 UTC <luite> has different extensions than github apparently
2013-07-04 13:45:01 UTC <luite> pandoc table: http://pastebin.ca/2417167
2013-07-04 15:09:47 UTC <notdan> ugh, so I guess it's not possible to make a worker that would evaluate general (EvalM a) values
2013-07-04 15:10:06 UTC <notdan> since it's not really possible to send Ghc monad over a unix socket
2013-07-04 15:11:01 UTC <luite> unless you have a way to serialize arbitrary closures :)
2013-07-04 15:11:48 UTC <luite> the Eden project adds that to GHC, but i odn't think it's very well maintained (and also not something you'd want to use for this project)
2013-07-04 15:12:52 UTC <luite> oh it was updated last year for 7.6.1, that 's better than i expected
2013-07-04 15:25:49 UTC <notdan> If we want to generalize the worker thing then it has to accept (Socket -> IO ()), not (Handle -> IO ()). Because in case of the evaluator, we need to do preloading before it starts accepting connections, not ever time it accepts a connection
2013-07-04 15:25:58 UTC <notdan> otherwise it won't be preloading 
2013-07-04 15:26:54 UTC <luite> Socket -> IO () is also too late
2013-07-04 15:27:00 UTC <luite> it should preload before even forking
2013-07-04 15:27:37 UTC <notdan> Hmm
2013-07-04 15:27:42 UTC <notdan> Oh, right
2013-07-04 15:29:34 UTC <notdan> Yeah, in the current version it all runs inside the Ghc monad
2013-07-04 15:32:44 UTC <notdan> Wait, no, the preloading need to be done inside the worker, after the worker forks from the service
2013-07-04 15:34:29 UTC <luite> no, because then you'd have the following problem: one worker exceeds the time limit, gets killed, user starts reloading, new worker started, but needs time to load the libs, so requests take even more time, gets killed again
2013-07-04 15:35:14 UTC <luite> if you load before forking, you can get a new worker up and running in ~0.05 seconds, otherwise it can take a second
2013-07-04 15:35:55 UTC <luite> (it's possible to make this work with the permission changing and chroot, but it requires some careful setup)
2013-07-04 15:37:26 UTC <notdan> Ah, ok. Then I'll need to parametrize this code more
2013-07-04 15:37:48 UTC <luite> but make it work for the pastebin first
2013-07-04 16:44:57 UTC <notdan> Ok, I think I got it working a little bit. Why were I thinking that using type families here would be a good idea?
2013-07-04 18:44:43 UTC <notdan> when writing documentation for the functions, what verb form do you use? E.g.: 'Runs a computation' vs 'Run a computation'?
2013-07-04 18:53:49 UTC <luite> the first form is more useful if you add arguments and repeat the name:  "replicateM_ n m performs the monadic action m n times, discarding the results"
2013-07-04 18:54:03 UTC <luite> but it seems that even the base lib is rather inconsistent with this
2013-07-04 18:58:24 UTC <luite> i dunno if type families are a good idea here btw, i haven't seen the code :)
2013-07-04 19:00:00 UTC <notdan> nah, they were useless, I removed them
2013-07-04 19:00:19 UTC <notdan> I am going to fully implement the concrete worker and then abstract it away
2013-07-04 19:00:57 UTC <luite> good idea
2013-07-04 19:01:37 UTC <luite> i don't expect it to be such a huge amount of code that it will be hard to change
2013-07-04 19:02:39 UTC <luite> perhaps alpounet could even contribute the generalization if he wants to use it for ghc-core :p
2013-07-04 19:24:11 UTC <notdan> hm, ok, I think I messed up the socket business again. here's what I do: I fork a worker which listens on some socket, it has a 'forever' accept loop in which it 1) sets buffering to LineBuffering 2) calls hGetLine to get the name of the file to compile 3) Calls Debug.Trace 4) hPutStr to the same handle the results of compilation 5) flushes the handle. When I want to evaluate something, I do the following: 1) open a connection 2) set buffering 3) ...
2013-07-04 19:24:11 UTC <notdan> ... hPutStr the name of the file, 4) tried to read from the handle.
2013-07-04 19:24:20 UTC <notdan> and this doesn't work.
2013-07-04 19:24:32 UTC <notdan> It accepts the connection, but then it goes into a deadlock I think
2013-07-04 19:25:01 UTC <notdan> it doesn't show anything on the screen, untill I SIGTERM it and then it returns: Trying to write to the socket..
2013-07-04 19:25:01 UTC <notdan> eval-service: <socket: 4>: hPutBuf: resource vanished (Broken pipe)
2013-07-04 19:25:10 UTC <notdan> (the first line is Debug.Trace call)
2013-07-04 19:25:28 UTC <alpounet> luite, whaaaaaat generalization? why would i have even more things to do?
2013-07-04 19:25:29 UTC <alpounet> :p
2013-07-04 19:27:12 UTC <luite> notdan: every connection handles one request?
2013-07-04 19:27:40 UTC <notdan> Well currently I have oly one connection  and one request
2013-07-04 19:27:45 UTC <notdan> only*
2013-07-04 19:28:29 UTC <luite> are you sure you send a newline? hPutStrLn flushes, hPutStr doesn't flush, i think, if you send a "\n" in the content
2013-07-04 19:28:39 UTC <luite> with LineBuffering
2013-07-04 19:29:15 UTC <notdan> But I call hFlush
2013-07-04 19:29:29 UTC <notdan> and it doesn't even show the output of Debug.Trace, which doesn't use any handles
2013-07-04 19:30:57 UTC <luite> but you do need to send a newline
2013-07-04 19:31:01 UTC <alpounet> luite, i'm however a bit pissed that in 2013, we don't have something simple and easy to run another program with memory/run time/fs and network access limits
2013-07-04 19:31:43 UTC <alpounet> all the things i have tested either don't work (at all or anymore), are way too hard to setup, or things like that
2013-07-04 19:31:57 UTC <notdan> Ok, I added a bit for sending "\n", it still doesn't work
2013-07-04 19:32:32 UTC <luite> notdan: does it receive anything at all? if you just read chars and print them?
2013-07-04 19:33:21 UTC <luite> alpounet: tried lxc?
2013-07-04 19:33:28 UTC <alpounet> yeah
2013-07-04 19:33:31 UTC <alpounet> had issues with it
2013-07-04 19:33:34 UTC <alpounet> tried it first actually
2013-07-04 19:33:42 UTC <notdan> I assume it does, because it prints the result (I use Trace for that too) after I hit Ctrl-C
2013-07-04 19:33:52 UTC <notdan> oh wait, now it works :L
2013-07-04 19:33:53 UTC <luite> alpounet: ah, fpcomplete uses it
2013-07-04 19:34:39 UTC <luite> alpounet: but it's less efficient and secure than selinux
2013-07-04 19:34:56 UTC <luite> at least for the haskell evaluator
2013-07-04 19:35:11 UTC <alpounet> i don't even want to run the code
2013-07-04 19:35:28 UTC <alpounet> i just want to generate the core :(
2013-07-04 19:37:07 UTC <mr-> notdan: your proof of "a union of countable sets is countable" is wrong. You forgot to mention that you have a countable collection of sets ;-P
2013-07-04 19:41:14 UTC <luite> :)
2013-07-04 19:43:46 UTC <notdan> mr-: well, they are index by natural numbers, but good point, I'll explicitly state that
2013-07-05 21:56:44 UTC <ClaudiusMaximus> ugh, bugs.  made a pdf with cairo from some C code, displays a solid black page in evince, but only at certain zoom levels - at other zoom levels it's fine...
2013-07-05 22:44:41 UTC <luite> :/
2013-07-05 22:44:51 UTC <luite> ClaudiusMaximus: i think i've seen that before
2013-07-05 22:50:29 UTC <ClaudiusMaximus> seems to be a cairo bug (evince uses cairo to render), displays ok in xpdf (but looks bad because no anti-aliasing), similar problems with other poppler/cairo viewers
2013-07-05 22:50:41 UTC <ClaudiusMaximus> probably numerical precision related..
2013-07-05 22:51:54 UTC <ClaudiusMaximus> i'm filling thin shapes between large-radius arcs
2013-07-05 22:52:37 UTC <luite> with diagrams -> pdf?
2013-07-05 22:53:05 UTC <ClaudiusMaximus> no, C using cairo -> pdf  - just felt like an off-topic winge :P
2013-07-06 00:13:38 UTC <luite> ClaudiusMaximus: i won't hold it against you ;) i'm probably the most off-topic talker here :p
2013-07-06 00:18:39 UTC <ClaudiusMaximus> heh, i think I figured it out by drawing each part in a different colour, taking a screenshot and comparing the bad fill colour with what i set it to, creating a minimal example with just that bit, convert it to ps then pstoedit...
2013-07-06 00:19:10 UTC <byorgey> off-topic talking by regulars is not only tolerated but encouraged =)
2013-07-06 00:19:40 UTC <ClaudiusMaximus> seems i missed a case where my stereographic projection drew a polygon across the pole, which flipped the orientation, so everything apart from a "small" region near infinity was filled...
2013-07-06 00:20:11 UTC <byorgey> hehe
2013-07-06 00:20:27 UTC <ClaudiusMaximus> because cairo doesn't seem to have a way to cull based on orientation, just non-zero winding or even/odd...
2013-07-06 00:41:35 UTC <luite> bleh constant folding for NaN was wonky, 0/0 got folded to -Infinity :/
2013-07-06 00:43:21 UTC <byorgey> @tell knrafto I answered your question by adding a comment to the source -- https://github.com/diagrams/diagrams-lib/commit/cc197ee13047357183d6f88c27516ddb9a3c02cb
2013-07-06 00:43:21 UTC <lambdabot> Consider it noted.
2013-07-06 00:44:44 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14cc197ee http://travis-ci.org/diagrams/diagrams-lib/builds/8784877 The build passed.
2013-07-06 00:49:12 UTC <byorgey> luite: heh, wat
2013-07-06 00:52:17 UTC <luite> byorgey: i'm not really sure what happens
2013-07-06 00:52:46 UTC <luite> its just in the ghcjs optimizer, not ghc
2013-07-06 00:52:59 UTC <luite> but i don't see anything wrong
2013-07-06 00:56:55 UTC <byorgey> look harder =)
2013-07-06 00:59:53 UTC <luite> yes :)
2013-07-06 01:00:46 UTC <luite> with the changes i pushed today the generated code is ~50% smaller btw
2013-07-06 01:26:56 UTC <luite> apparently i'm also really bad at not making mistakes in associativity or commutation rules
2013-07-06 01:32:15 UTC <byorgey> hehe
2013-07-06 01:32:22 UTC <byorgey> 50% smaller, wow!
2013-07-06 01:32:43 UTC <byorgey> is this the stuff to do alpha-conversion to shorter variable names?
2013-07-06 01:33:32 UTC <luite> yeah it already renamed local variables, but now global vars that are not part of a public interface are also renamed
2013-07-06 01:33:58 UTC <luite> and the infotables are packed much more efficiently now
2013-07-06 01:34:21 UTC <luite> and some smaller tweaks and bugfixes in the code generator
2013-07-06 01:35:00 UTC <byorgey> sounds nice
2013-07-06 01:35:15 UTC <luite> i had to switch to binary intermediate files for this though
2013-07-06 01:35:51 UTC <luite> so the infotables can be kept in a binary serialized data structure, that can be packed together when linking
2013-07-06 01:36:16 UTC <luite> also it saves the linker from having to parse everything when doing the alpha conversion
2013-07-06 01:38:56 UTC <luite> (the problem was that the non-public variables have to be unique, so the autogenerated name used very long names, modulename + package + ghc unique, to guarantee this. now the linker can quicky replace all identifiers)
2013-07-06 01:42:27 UTC <byorgey> yep, makes sense
2013-07-06 02:51:31 UTC <luite> urgh i know what's wrong
2013-07-06 02:52:35 UTC <luite> it's a bug in the put instance for Double
2013-07-06 02:53:53 UTC <fryguybob> luite: One of those where writing then reading is not id?
2013-07-06 02:54:05 UTC <luite> yes
2013-07-06 02:54:17 UTC <luite> it doesn't preserve NaN and negative zero at least
2013-07-06 02:55:52 UTC <fryguybob> > uncurry encodeFloat . decodeFloat $ (0/0 :: Double)
2013-07-06 02:55:53 UTC <lambdabot>   -Infinity
2013-07-06 02:56:10 UTC <luite> yep that's the problem
2013-07-06 02:56:26 UTC <fryguybob> :(  doubles are saddness all the way down.
2013-07-06 03:04:09 UTC <luite> > decodeFloat (0/0
2013-07-06 03:04:10 UTC <lambdabot>   <hint>:1:17:
2013-07-06 03:04:10 UTC <lambdabot>      parse error (possibly incorrect indentation or mismatched...
2013-07-06 03:04:14 UTC <luite> > decodeFloat (0/0)
2013-07-06 03:04:14 UTC <lambdabot>   (-6755399441055744,972)
2013-07-06 03:04:17 UTC <luite> > decodeFloat (-0/0)
2013-07-06 03:04:18 UTC <lambdabot>   (6755399441055744,972)
2013-07-06 03:05:28 UTC <luite> > decodeFloat ((-0)/0)
2013-07-06 03:05:30 UTC <lambdabot>   (-6755399441055744,972)
2013-07-06 10:42:13 UTC <byorgey> luite: oh, boo.  but I guess that's not so much a bug as it is just that the type of decodeFloat is a lie.
2013-07-06 10:42:39 UTC <byorgey> there cannot actually be a sensible function  Double -> (Integer, Int).
2013-07-06 10:45:28 UTC <luite> byorgey: oh i don't really mind these weird multiple NaN things. the real issue is that i think that   runGet get (runPut put) :: a -> a  should be id
2013-07-06 10:45:51 UTC <byorgey> oh, I agree, if that's not id it's a bug
2013-07-06 10:45:51 UTC <luite> or at least modulo termination etc
2013-07-06 10:46:11 UTC <byorgey> so you mean put and get for Double go via decode/encodeFloat?
2013-07-06 10:46:41 UTC <luite> yeah and they don't try to preserve the values that decodeFloat cannot represent
2013-07-06 10:49:34 UTC <byorgey> ugh.
2013-07-06 11:04:28 UTC <luite> https://github.com/ghcjs/ghcjs/blob/master/src/Gen2/Object.hs#L231 <- i'm now just down this, storing some values separately
2013-07-06 11:04:31 UTC <luite> doing
2013-07-06 11:05:09 UTC <luite> (SaneDouble is sclv's invention for fixing the Eq instance such that SaneDouble NaN == SaneDouble NaN
2013-07-06 11:05:12 UTC <luite> )
2013-07-06 11:05:38 UTC <luite> (which helps the optimizer not get stuck in loops when doing fixed point iteration)
2013-07-06 11:08:11 UTC <luite> (I was thinking of switching to some monad transformer to support building a symbol table to store strings, therefore this somewhat inconvenient thing with lots of functions instead of Binary instances)
2013-07-06 11:08:41 UTC <luite> also I don't like to add orphan JMacro instances that are partial :)
2013-07-06 12:30:37 UTC <ClaudiusMaximus> still not found a complete fix for my weird cairo issues from last night :(  I think to do it properly I'll need to clip my shapes before feeding them to cairo, which will generally involve splitting them up, and that is hard enough in a flat plane...
2013-07-06 12:34:07 UTC <ClaudiusMaximus> wish i'd done this in Haskell, but i remember when i first started this project (maybe 2011) the Haskell cairo bindings had horrible performance issues (realToFrac :: Double -> CDouble) so I used C instead - now I have 400+ lines of C that almost but not quite work..
2013-07-06 13:10:22 UTC <luite> interesting that different parts of the GHC source have different style :)
2013-07-06 13:44:31 UTC <luite> hmm, i hope that adding a grab bag ApiHooks data structure to GHC would be acceptable
2013-07-06 13:45:30 UTC <luite> with a bunch of Maybe a fields, where different bits of GHC would run the thung from ApiHooks if Just, otherwise default behaviour
2013-07-06 14:15:36 UTC <luite> such an ApiHooks data structure is the mother of circular imports :(
2013-07-06 14:18:10 UTC <mr-> circularImports--
2013-07-06 14:39:54 UTC <luite> joelb: i think i've pushed a fix for the optimizer bug you were seeing earlier
2013-07-06 14:43:19 UTC <joelb> luite: thanks :) what's the easiest way to get the changes, would building take several hours?
2013-07-06 14:45:47 UTC <luite> joelb: do you have a working vagrant setup?
2013-07-06 14:45:53 UTC <joelb> yes
2013-07-06 14:46:07 UTC <luite> ok, go to ~/ghcjs, git pull, cabal install, then ghcjs-boot --reboot
2013-07-06 14:46:36 UTC <luite> and then go to ~/.ghcjs/x86...version/shims and git pull there too
2013-07-06 14:47:22 UTC <luite> should take ~10-15 mins, mostly ghcjs-boot, rebuilding base, ghc-prim, containers etc
2013-07-06 14:47:44 UTC <joelb> perfect
2013-07-06 14:49:01 UTC <luite> if you cabal install -fdisable-optimizer, then it takes only 5 minutes or so, i really need to optimize the optimizer
2013-07-06 14:51:16 UTC <joelb> suggestion - you should do a blog post discussing code size, debugging, and speed. They're probably the biggest issues people will worry about before trying ghcjs. Even if you don't have a great answer for everything I think it would make people feel better about using it.
2013-07-06 14:52:38 UTC <luite> yes that would be next
2013-07-06 14:53:03 UTC <luite> perhaps with a smaller "fun example" post first
2013-07-06 14:53:22 UTC <luite> but i want to update the GHC patch first, so we can have better FFI marshalling
2013-07-06 14:53:33 UTC <joelb> looking forward to it
2013-07-06 14:53:36 UTC <luite> return true/false for Bool imports, instead of 0 or 1
2013-07-06 14:54:04 UTC <joelb> whoa, didn't realize we're in diagrams not ghcjs
2013-07-06 14:54:12 UTC <luite> oh yeah sorry
2013-07-06 14:54:17 UTC <luite> my bad :p
2013-07-06 14:54:21 UTC <joelb> :D
2013-07-06 14:54:30 UTC <byorgey> hehe, ghcjs discussions are welcome here, as long as no one is trying to have a diagrams discussion at the same time =)
2013-07-06 14:54:34 UTC <luite> i had this window open when you joined
2013-07-06 14:55:21 UTC <luite> joelb: but until the things is pushed yesterday there was so much redundancy in the generated code that i was ashamed to talk about code size ;)
2013-07-06 14:55:27 UTC <luite> i pushed yesteday
2013-07-06 14:55:29 UTC <luite> +r
2013-07-06 14:56:18 UTC <luite> debugging is still a bit tricky, i tend to enable function call / stack tracing
2013-07-06 14:59:31 UTC <joelb> Better debugging support is first on my wish list right now. I've been sticking to console.log.
2013-07-06 15:00:06 UTC <luite> hmm, are you missing anything that native ghc has? or do you want better than native? :p
2013-07-06 15:01:29 UTC <joelb> No, I'm not missing anything that I know of from native ghc. It's just that when you're in a browser it drops you into a nice debugger but then it's impossible to make sense of the code.
2013-07-06 15:01:41 UTC <joelb> Like it's taunting you.
2013-07-06 15:01:52 UTC <luite> hehe yeah i understand
2013-07-06 15:03:37 UTC <luite> if you compile with --debug, you get symbol names for every h$... function, that at least  indicate from what module they come
2013-07-06 15:04:20 UTC <joelb> sweet I'll try it
2013-07-06 15:04:40 UTC <luite> but it takes some knowledge of the generated code to really debug it, unfortunately
2013-07-06 15:05:09 UTC <luite> h$r1 is usually the current closure, h$r2 ... h$rn the function arguments
2013-07-06 15:05:26 UTC <luite> h$stack the stack of the current thread, h$sp the pointer to the top of the stack
2013-07-06 15:16:04 UTC <luite> i guess i can explain that better in a blog post
2013-07-06 15:18:42 UTC <luite> grr circular imports...
2013-07-06 15:25:24 UTC <luite> i don't know how to solve this
2013-07-06 15:39:31 UTC <luite> hm perhaps with type families
2013-07-06 16:03:34 UTC <ClaudiusMaximus> success!  i clipped/split my spherical rectangles against a circle around the pole, no glitches of any kind any more :D  only took since lunchtime...
2013-07-06 16:03:46 UTC <ClaudiusMaximus> better have lunch now..
2013-07-06 16:04:18 UTC <byorgey> ClaudiusMaximus: yay!
2013-07-06 16:04:26 UTC <byorgey> ACTION looks forward to pretty pictures
2013-07-06 16:07:27 UTC <ClaudiusMaximus> byorgey: here's one i made a couple of days ago
2013-07-06 16:07:28 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-07-04_haystack_situations.jpg
2013-07-06 16:07:44 UTC <ClaudiusMaximus> (i just picked one without glitches)
2013-07-06 16:08:10 UTC <mr-> wow, nice one
2013-07-06 16:08:18 UTC <byorgey> woah, amazing
2013-07-06 16:08:31 UTC <ClaudiusMaximus> thanks :)
2013-07-06 16:09:03 UTC <ClaudiusMaximus> there's one more thing i need to add, then i can render the final final versions...
2013-07-06 16:11:08 UTC <ClaudiusMaximus> it's a pretty simple concept really, just draw a bunch of lines on a sphere, then replicate them with icosahedral rotational symmetry, then stereographic project to plane...
2013-07-06 16:11:45 UTC <byorgey> ah, makes sense
2013-07-06 16:11:54 UTC <byorgey> so the initial set of lines is random?
2013-07-06 16:12:17 UTC <byorgey> it did seem like there was both some order and some chaos
2013-07-06 16:12:21 UTC <ClaudiusMaximus> but i've had comments ranging from "like the roof of a glass house" to "plant seed heads", so people seem to get an organic/architecture vibe
2013-07-06 16:13:13 UTC <ClaudiusMaximus> yeah, with carefully chosen weightings for the line parameters
2013-07-06 16:14:51 UTC <ClaudiusMaximus> was thinking of making a book out of them, this would have been the back cover http://mathr.co.uk/misc/2013-07-04_haystack_situations_back.jpg , sorta "fine art where's wally" thing
2013-07-06 16:16:45 UTC <byorgey> "would have been"? so you're not going to make a book out of them after all?
2013-07-06 16:17:16 UTC <ClaudiusMaximus> probably not - now i'm leaning towards postcards
2013-07-06 16:18:13 UTC <byorgey> oh, nice =)
2013-07-06 16:18:38 UTC <byorgey> I would buy some of those postcards.
2013-07-06 16:20:35 UTC <ClaudiusMaximus> :)
2013-07-06 16:22:53 UTC <byorgey> I am serious. let me know when I can buy some =)
2013-07-06 16:26:06 UTC <ClaudiusMaximus> ok - might take a while...
2013-07-06 16:34:20 UTC <byorgey> no rush =)
2013-07-06 16:35:00 UTC <byorgey> I am hoping to get some posters produced soon, http://www.cis.upenn.edu/~byorgey/hosted/Poster-nogrid.png
2013-07-06 16:35:16 UTC <byorgey> need to put together a website first
2013-07-06 17:06:23 UTC <notdan> So there are iteratees, conduit, pipes, io-stream and no machines
2013-07-06 17:06:37 UTC <notdan> I feel bad for not being familiar with any of those
2013-07-06 17:17:44 UTC <notdan> I know that I am kinda late to this, but this is very impressive: http://www.haskellforall.com/2013/06/from-zero-to-cooperative-threads-in-33.html
2013-07-06 17:31:54 UTC <byorgey> notdan: ah, that is cool.  I had seen links to that but hadn't read it because I assumed I wouldn't be interested.  Thanks for pointing it out again -- I read it this time =)
2013-07-06 17:32:27 UTC <byorgey> I don't know why I thought I wouldn't be interested.  Probably the word "threads" scared me off.
2013-07-06 18:21:24 UTC <carter> notdan whats lacking machines instances?
2013-07-06 18:30:41 UTC <luite> hm, bleh i can't use type families to break the cycle.... anyone here good at breaking import cycles? :
2013-07-06 18:30:44 UTC <luite> :p
2013-07-06 18:36:04 UTC <carter> luite hs boot files
2013-07-06 18:36:13 UTC <byorgey> luite: find the minimal set of declarations which are actually on the path of the cycle, and extract them into their own module
2013-07-06 18:36:21 UTC <luite> carter: i'm already using one
2013-07-06 18:36:30 UTC <carter> ah
2013-07-06 18:36:32 UTC <luite> byorgey: hmm, that would mean half of GHC in one module
2013-07-06 18:36:37 UTC <byorgey> hahaha
2013-07-06 18:36:45 UTC <byorgey> never mind then.
2013-07-06 18:36:56 UTC <carter> luite if you could make that fit on a page of text that i can read, that'd make it cool :)
2013-07-06 18:37:02 UTC <luite> it's quite bad, i want a record with some generic API hooks, that have types from all over the place in GHC
2013-07-06 18:37:24 UTC <luite> and the modules taht use the hooks are also the ones that export the types
2013-07-06 18:38:26 UTC <byorgey> ohh, that does sound bad
2013-07-06 18:40:00 UTC <byorgey> hmm... I don't have any good ideas
2013-07-06 18:40:07 UTC <luite> byorgey: it's something that would be extremely useful though. I want some stuff in DynFlags that replaces existing functionality. for example one field would be a "plugin" for the foreign desugarer, one for the foreign typechecker, etc
2013-07-06 18:40:10 UTC <byorgey> why doesn't it work to just make an hs-boot file?
2013-07-06 18:40:24 UTC <byorgey> yes, it certainly does sound useful
2013-07-06 18:41:03 UTC <ClaudiusMaximus> what about something using type classes rather than a record?
2013-07-06 18:41:27 UTC <byorgey> I was thinking along those lines but couldn't see a way to make it work
2013-07-06 18:41:44 UTC <byorgey> though of course that doesn't mean there isn't!
2013-07-06 18:42:08 UTC <luite> well, the record is something like data ApiHooks { deSugarFFI :: [LForeignDecl Id] -> DsM (ForeignStubs, OrdList Id, CoreExpr))
2013-07-06 18:42:31 UTC <luite> byorgey: the hs-boot can export ApiHooks, but not deSugarFFI, because then it would be cyclic again
2013-07-06 18:43:01 UTC <ClaudiusMaximus> you could maybe have something on the "outside" of all the details that instantiates the classes for a record type, but the individual modules don't need to know the implementation is really a record
2013-07-06 18:43:17 UTC <luite> ClaudiusMaximus: I tried it with a type family: class Hookable a where type Hook a :: *   getApiHook :: a -> ApiHooks -> Maybe (Hook a)
2013-07-06 18:43:26 UTC <luite> ClaudiusMaximus: but where do you define the instances?
2013-07-06 18:43:54 UTC <luite> you need to import the instances somewhere, both where the ApiHooks record is defined, and where you use it
2013-07-06 18:44:34 UTC <luite> right, i think the whole record might need to be hidden from the GHC API, but i'm not sure how
2013-07-06 18:46:09 UTC <ClaudiusMaximus> module GHCThing where class HookForThing where thinkHook :: Blah ; thing :: HookForThing h => h -> Yadda   ; module GHCStuff where class HookForStuff where .... stuff :: HookForStuff h => h -> Blub ;  module MyPlugin where data Hooks = Hooks{ ... } ; instance HookForThing Hooks ; instance HookForStuff Hooks ; ...
2013-07-06 18:46:23 UTC <luite> argh ;p
2013-07-06 18:46:37 UTC <ClaudiusMaximus> that's my vague idea, not sure if it'd work
2013-07-06 18:46:41 UTC <luite> everything on one line almost as bad as all of GHC in one file
2013-07-06 18:46:52 UTC <byorgey> hehe
2013-07-06 18:47:24 UTC <ClaudiusMaximus> instance doesn't need to be imported where it is used - eg Data.Set doesn't know about my custom Ord for my custom data
2013-07-06 18:47:39 UTC <luite> ClaudiusMaximus: it does need to be imported
2013-07-06 18:47:56 UTC <luite> well
2013-07-06 18:47:57 UTC <ClaudiusMaximus> ah, somewhere at the top level
2013-07-06 18:48:17 UTC <ClaudiusMaximus> or maybe with some CPS RankN Reflect voodoo
2013-07-06 18:48:33 UTC <luite> well it can be done with Any and cast
2013-07-06 18:49:00 UTC <luite> but i don't have the courage to propose that ;p
2013-07-06 18:50:25 UTC <ClaudiusMaximus> actually, if you make instances for the underlying record type, that should let you provide a record and get the instances for free?
2013-07-06 18:50:42 UTC <ClaudiusMaximus> because the record is just one type
2013-07-06 18:51:42 UTC <ClaudiusMaximus> if you like i could make a mini mockup of my one-(long)-liner and check if it does anything useful?
2013-07-06 18:51:45 UTC <luite> you mean one class for every hook, right?
2013-07-06 18:51:48 UTC <ClaudiusMaximus> yes
2013-07-06 18:52:00 UTC <ClaudiusMaximus> one for each hook, so if you have 1034 hooks, you have 1034 classes
2013-07-06 18:52:05 UTC <luite> hmm, i thought one instance was already bad :)
2013-07-06 18:52:27 UTC <ClaudiusMaximus> and instantiate them all for your 1 record type
2013-07-06 18:52:56 UTC <luite> but, but, i still don't see how it's possible
2013-07-06 18:54:38 UTC <ClaudiusMaximus> want me to try a mockup and spot the fatal flaw?
2013-07-06 18:55:03 UTC <luite> if you want :)
2013-07-06 18:55:12 UTC <ClaudiusMaximus> ok
2013-07-06 18:55:58 UTC <luite> one more requirement: DynFlags must have a default value for this ApiHooks thing
2013-07-06 18:56:14 UTC <luite> and that's a module imported by everything
2013-07-06 18:57:00 UTC <luite> it could be done with a Vault with Typeable keys btw
2013-07-06 18:57:24 UTC <luite> but if it can be done with a regular record i'd be happier :)
2013-07-06 18:57:44 UTC <luite> oh wait, not quite Vault
2013-07-06 19:03:22 UTC <luite> hm, I think some vault thing is still the simplest
2013-07-06 19:05:41 UTC <hpaste> ClaudiusMaximus pasted âclassy hooks ideaâ at http://paste.tryhaskell.org/90711
2013-07-06 19:07:24 UTC <luite> ClaudiusMaximus: A would have to have a :: DynFlags -> IO ()
2013-07-06 19:07:33 UTC <luite> can't get any class constraints
2013-07-06 19:08:38 UTC <ClaudiusMaximus> oh?
2013-07-06 19:08:49 UTC <ClaudiusMaximus> oh, it'd break every user of GHC API?
2013-07-06 19:09:02 UTC <luite> yeah, and introduce constraints everywhere
2013-07-06 19:10:29 UTC <ClaudiusMaximus> what is a DynFlags?  could you use GADTs maybe to extract something with a constraint?  (though i'm not sure what GADTs really are...)
2013-07-06 19:10:59 UTC <luite> it's the bigliest data structure in ghc!
2013-07-06 19:13:02 UTC <luite> and it only has one constructor, i don't think GADTs help here...
2013-07-06 19:13:20 UTC <ClaudiusMaximus> ahh, and it'd reintroduce the cyclic import hell i guess..
2013-07-06 19:13:42 UTC <luite> DynFlags is really central, since it contains almost every configuration option
2013-07-06 19:14:45 UTC <ClaudiusMaximus> maybe have a record full of Data.Dynamic and have all the hooks use cast and wrap the result back
2013-07-06 19:15:21 UTC <luite> yes i'm already doing something like that
2013-07-06 19:15:32 UTC <ClaudiusMaximus> i think i stop thinking about this problem, feels hard to get something elegant
2013-07-06 19:15:35 UTC <ClaudiusMaximus> :)
2013-07-06 19:15:45 UTC <luite> yeah, it only gets you headaches :p
2013-07-06 19:16:00 UTC <luite> TypeRep is relatively fast to compare, 2x 64 bit words
2013-07-06 19:16:26 UTC <luite> but that means that it has to be acceptable to use Typeable in GHC
2013-07-06 19:16:44 UTC <luite> i wonder what the oldest version that it has to bootstrap with is
2013-07-06 19:20:10 UTC <luite> 6.4 already had Typeable
2013-07-06 19:21:16 UTC <luite> also it can be ifdefd, stage1 never needs the hooks
2013-07-06 19:26:43 UTC <notdan> carter: sorry?
2013-07-06 19:27:07 UTC <notdan> carter: oh, sorry, I mean to say 'now machines', not 'no machines' :D
2013-07-06 20:55:02 UTC <carter> notdan ok
2013-07-06 20:55:08 UTC <carter> you were referring to the space of all the different streaming libs
2013-07-06 20:55:13 UTC <carter> machines has been around for a while
2013-07-06 20:55:16 UTC <carter> though its not quite done
2013-07-06 20:55:26 UTC <carter> last i looked 6+ months ago
2013-07-07 07:04:46 UTC <notdan> http://www.youtube.com/watch?v=JMOpNqHii6w oh man Racket videos are so funny
2013-07-07 08:11:12 UTC <mr-> melt metal with \lambda? Cool
2013-07-07 11:16:15 UTC <notdan> carter: ping
2013-07-07 18:32:50 UTC <carter> notdan pong
2013-07-07 18:33:14 UTC <carter> notdan i'm online
2013-07-07 18:33:16 UTC <carter> now
2013-07-07 19:11:56 UTC <carter> notdan yo: online?
2013-07-07 19:17:22 UTC <notdan> carter: yeah, I had a question about your talk, but I've already asked it on ADN
2013-07-07 19:17:59 UTC <notdan> can you please explain how does CPS makes stack a part of language? If anything if you have CPS you don't have explicit stack, don't you?
2013-07-07 19:18:21 UTC <notdan> maybe you can point me to some intro on that subject 
2013-07-07 19:19:00 UTC <carter> notdan the Continuation Lambdas are the stack :)
2013-07-07 19:19:14 UTC <carter> pretend you have normal lambda and continuation ones
2013-07-07 19:19:17 UTC <carter> distinguished
2013-07-07 19:19:23 UTC <carter> and the same for closures
2013-07-07 19:19:43 UTC <carter> the lambdas introduced by the cps transform are all stack manpulations
2013-07-07 19:19:58 UTC <notdan> oh so in the 'toCPS c k' k consists of calls which mimics the stack?
2013-07-07 19:23:18 UTC <carter> yes
2013-07-07 19:23:31 UTC <carter> notdan not quite: it IS the stack
2013-07-07 19:23:40 UTC <carter> olivier danvy has a lot of beautiful stuff on this
2013-07-07 19:23:49 UTC <carter> i may link to his page at the end end of the slides
2013-07-07 19:24:03 UTC <carter> though bitbucket is down right now right?
2013-07-07 19:24:19 UTC <carter> http://www.cs.au.dk/~danvy/index-previous.html
2013-07-07 19:24:25 UTC <notdan> thx
2013-07-07 19:24:50 UTC <notdan> man, there is *so much* stuff to read
2013-07-07 19:25:33 UTC <byorgey> way more than you can ever read, in fact =)
2013-07-07 19:26:13 UTC <byorgey> just read some of it and don't stress about all the stuff you haven't read because that is a guaranteed way to be stressed out all the time
2013-07-07 19:26:23 UTC <byorgey> ACTION does not do a very good job of following this advice
2013-07-07 19:27:35 UTC <carter> yeah
2013-07-07 19:27:40 UTC <carter> byorgey is right
2013-07-07 19:27:40 UTC <notdan> haha, same
2013-07-07 19:28:29 UTC <carter> theres a decade of clever over thar
2013-07-07 19:29:04 UTC <carter> the point being: when you can express the same RTS contructs at the PL level, and have the standard RTS imlpementation be an "optmization"
2013-07-07 19:29:23 UTC <carter> you actually can use normal pl optimizations on the RTS
2013-07-07 19:30:10 UTC <carter> and then your core language can be simpler
2013-07-07 19:30:17 UTC <carter> and you need less special casing in your compiler
2013-07-07 19:30:17 UTC <carter> ish
2013-07-07 23:54:29 UTC <byorgey> http://weatherspark.com/forecasts/sparkRadar?lat=39.952&lon=-75.162&timeZone=America%2FNew_York&unit=mi
2013-07-07 23:55:06 UTC <byorgey> that is the radar graph right now
2013-07-07 23:55:32 UTC <byorgey> if I suddenly get disconnected you'll know why!
2013-07-08 00:25:38 UTC <tgeeky> byorgey: I am confused as to why this picture is better than, say, a normal animated radar map
2013-07-08 00:34:00 UTC <carter> tgeeky because the X axis is "how far away" and the y axis is "when"
2013-07-08 00:34:57 UTC <byorgey> tgeeky: because I get to experience three dimensions (X+Y+time) compressed into two spatial dimensions, instead of needing two spatial dimensions + my own time dimension to gather information.
2013-07-08 00:36:25 UTC <tgeeky> so how do I read this ?
2013-07-08 00:36:26 UTC <byorgey> if I watch a radar animation, I have to watch it over and over before I start to get an idea of (a) whether a storm is going to hit me and (b) how long it will be.
2013-07-08 00:36:41 UTC <tgeeky> byorgey: yeah, but then when you do get that idea, you are really damn sure of what's going on
2013-07-08 00:37:03 UTC <byorgey> no, I'm not.
2013-07-08 00:37:12 UTC <byorgey> (b) is particularly difficult, because I have to look at the displayed time as the animation plays, and try to interpolate based on how fast the storm appears to be moving and how far away it is from me.
2013-07-08 00:37:36 UTC <byorgey> with the weatherspark graph I just see a line, and I extend it until it hits the y-axis and read off the time!
2013-07-08 00:37:41 UTC <tgeeky> that's true. I guess down here we're always looking out for tornados
2013-07-08 00:37:48 UTC <tgeeky> so we might be trying to see different things
2013-07-08 00:38:13 UTC <tgeeky> like, what does a "hook echo" look like on this kind of chart
2013-07-08 00:38:22 UTC <tgeeky> and is it sufficiently scary
2013-07-08 00:39:17 UTC <byorgey> sure, if you care about two-dimensional features of storms then you need traditional radar animations
2013-07-08 00:39:39 UTC <byorgey> if you only care about how far away some precipitation is, then the weatherspark graph is vastly superior
2013-07-08 00:39:50 UTC <tgeeky> VASTLY!
2013-07-08 00:39:54 UTC <tgeeky> bold claims!
2013-07-08 00:39:55 UTC <byorgey> tgeeky: a good description of how it works is here: http://weatherspark.com/sparkradar
2013-07-08 00:40:34 UTC <tgeeky> byorgey: yep, reading it now
2013-07-08 00:42:19 UTC <carter> hehe
2013-07-08 00:43:48 UTC <tgeeky> here's mine right now: http://weatherspark.com/forecasts/sparkRadar?lat=34.022&lon=-84.36&timeZone=America%2FNew_York&unit=mi
2013-07-08 00:44:19 UTC <tgeeky> I interpret this to mean: rainy all day with a chance of flaiming guitarist.
2013-07-08 00:45:20 UTC <luite_> http://buienradar.nl/ <- mine :)
2013-07-08 00:45:53 UTC <carter> luite_ i see no weather on yours
2013-07-08 00:46:01 UTC <luite_> there is none!
2013-07-08 00:46:04 UTC <carter> tgeeky we're all gonna die!
2013-07-08 00:46:16 UTC <carter> thats what your weather says right?
2013-07-08 00:46:24 UTC <tgeeky> Today, we'd like to report that we have no weather and no climate.
2013-07-08 00:46:54 UTC <carter> accordingly, everyone will be turned into beef jerky
2013-07-08 00:47:01 UTC <carter> due to dehydration
2013-07-08 00:47:20 UTC <tgeeky> carter: http://radblast-aws.wunderground.com/cgi-bin/radar/WUNIDS_map?station=FFC&brand=wui&num=6&delay=15&type=N0R&frame=0&scale=1.000&noclutter=0&t=1373244415&lat=33.96827316&lon=-84.43943024&label=Marietta%2C+GA&showstorms=0&map.x=400&map.y=240&centerx=400&centery=240&transx=0&transy=0&showlabels=1&severe=0&rainsnow=0&lightning=0&smooth=0
2013-07-08 00:47:33 UTC <tgeeky> nothing much will happen for a few hours, then a big storm will be over us for a while
2013-07-08 00:47:34 UTC <carter> ahh
2013-07-08 13:46:37 UTC <tgeeky> luite_: so, HASTE.
2013-07-08 21:50:51 UTC <travis-ci> [travis-ci] 13active/06master 140e3d595 http://travis-ci.org/diagrams/active/builds/8864719 The build passed.
2013-07-09 01:51:36 UTC <alpounet> uh luite_ there's also "haste" now? 
2013-07-09 01:55:40 UTC <tgeeky> alpounet: let's not talk about it
2013-07-09 01:57:14 UTC <byorgey> we can talk about it.  But going "uh, luite, have you seen haste?" is not a very constructive way to do so.  of course luite has seen haste.
2013-07-09 01:57:29 UTC <byorgey> how about: luite, can you explain to us the differences between haste and ghcjs?
2013-07-09 01:57:46 UTC <byorgey> (that is a sincere question)
2013-07-09 01:57:56 UTC <byorgey> I don't know enough about them to compare just by looking at the documentation
2013-07-09 01:58:05 UTC <tgeeky> byorgey: his answer will be bleak unfavorable :o
2013-07-09 01:58:16 UTC <tgeeky> bleak *and* unfavorable
2013-07-09 01:58:37 UTC <travis-ci> [travis-ci] 13active/06master 14b772e81 http://travis-ci.org/diagrams/active/builds/8871541 The build passed.
2013-07-09 02:00:26 UTC <alpounet> byorgey, well, my "uh" was a sad one. i'm curious why there's yet another hs->js compiler, and sad it duplicates efforts
2013-07-09 02:02:36 UTC <tgeeky> alpounet: it was started before ghcjs, and finished before ghcjs
2013-07-09 02:02:50 UTC <tgeeky> although there are some features that aren't implemented in both (TH and 64bit works in GHCJS, not in haste)
2013-07-09 02:02:53 UTC <carter> tgeeky and is less plug  and play
2013-07-09 02:03:10 UTC <carter> code wise
2013-07-09 02:03:11 UTC <tgeeky> i don't know which is less plug and play, nor what that means in the context of ghc -> js
2013-07-09 02:03:16 UTC <carter> true
2013-07-09 02:03:19 UTC <carter> nor do i 
2013-07-09 02:03:22 UTC <carter> now that iv'e typed it
2013-07-09 02:03:35 UTC <carter> i may be biased because luite_ is awesome and i know who he is
2013-07-09 02:03:36 UTC <carter> ish
2013-07-09 02:03:44 UTC <tgeeky> GHCJS currently *relies* on an unreleased GHC version (7.8.1), and evidently haste does not
2013-07-09 02:04:50 UTC <carter> tgeeky yes
2013-07-09 02:05:03 UTC <carter> tgeeky the ghcjs patches do make certain other ghc things possible
2013-07-09 02:05:07 UTC <carter> like TH for cross compilers
2013-07-09 02:06:10 UTC <tgeeky> alpounet: I don't have a problem with doing something several times over, as long as eventually you pick a winner and merge the differences
2013-07-09 02:13:50 UTC <fryguybob> ghcjs also supports STM :D
2013-07-09 02:15:19 UTC <alpounet> tgeeky, maybe it wasn't clear, but i meant to be supportive to luite_ in my original message, not say anything bad about any impl whatsoever
2013-07-09 02:16:15 UTC <tgeeky> alpounet: I was simply remarking that it's a sore subject
2013-07-09 02:16:18 UTC <tgeeky> alpounet: or trying to, at least
2013-07-09 02:16:26 UTC <tgeeky> of course we all support luite, we love the man
2013-07-09 02:17:26 UTC <alpounet> tgeeky, well, I'm of the opinion that not talking about sore subjects doesn't make them easier to handle
2013-07-09 02:17:51 UTC <alpounet> but I understand it can piss people off, fine :-)
2013-07-09 02:20:53 UTC <tgeeky> alpounet: hehe. Very valid point. In this case, maybe we can let luite stew for a day or two before we request a diff of the two packages
2013-07-09 02:21:44 UTC <carter> tgeeky eh?
2013-07-09 02:21:56 UTC <carter> oh, do see whats common?
2013-07-09 02:22:10 UTC <carter> sounds like HASTE doesn't have general TCE :(
2013-07-09 02:22:50 UTC <tgeeky> carter: I don't mean a literal diff, but do a reasonable comparison
2013-07-09 02:22:57 UTC <carter> k
2013-07-09 02:23:05 UTC <alpounet> tgeeky, also, on the positive side, that's another source of inspiration to see what other cool things can be done in the hs->js compiler world. anyway, yeah let's just wait a bit
2013-07-09 02:23:11 UTC <carter> i'm so released thoughtpolice's clang patches have landed
2013-07-09 02:23:30 UTC <carter> *relieved
2013-07-09 03:32:18 UTC <byorgey> \o/
2013-07-09 03:42:53 UTC <tgeeky> byorgey: hot diggity
2013-07-09 03:43:09 UTC <carter> cool
2013-07-09 03:43:49 UTC <byorgey> comments on commits, issue creation + comments, pull request creation + comments will all now show up here on IRC
2013-07-09 03:43:55 UTC <byorgey> well, for diagrams-lib
2013-07-09 03:44:02 UTC <byorgey> working on a script to enable it for all the other repos
2013-07-09 03:44:34 UTC <byorgey> it turns out you cannot configure this via the github web interface, you have to actually call the github hooks API =P
2013-07-09 20:21:19 UTC <travis-ci> [travis-ci] 13active/06master 1461b7f9f http://travis-ci.org/diagrams/active/builds/8900985 The build passed.
2013-07-09 20:54:12 UTC <travis-ci> [travis-ci] 13active/06master 149533a34 http://travis-ci.org/diagrams/active/builds/8902089 The build passed.
2013-07-10 00:34:41 UTC <fryguybob> byorgey: This active stuff looks interesting.  You can recover union by filling in the difference with "zero" and then intersecting right?
2013-07-10 01:54:11 UTC <byorgey> fryguybob: yes.
2013-07-10 01:54:36 UTC <byorgey> fryguybob: but part of the point is that you might want to fill in the difference in other ways as well.
2013-07-10 01:54:50 UTC <fryguybob> Yeah
2013-07-10 01:54:57 UTC <byorgey> e.g. fill it in with some default value, or just repeat the value from the endpoint of the interval, or whatever.
2013-07-10 01:55:22 UTC <byorgey> if you build union into your semantics you have to make that choice arbitrarily and the user has no say in it.
2013-07-10 01:56:02 UTC <fryguybob> byorgey: Right.
2013-07-10 01:56:16 UTC <tgeeky> what happens when segments try to secede from the union? :o
2013-07-10 01:56:45 UTC <byorgey> see, that's a problem too!
2013-07-10 01:56:53 UTC <byorgey> but you can't secede from an intersection.
2013-07-10 01:57:00 UTC <byorgey> you can only cosecede.
2013-07-10 01:57:30 UTC <byorgey> but as everyone knows, cosecession can be handled by left kan extensions over (infinity,3)-categories
2013-07-10 01:57:33 UTC <tgeeky> lol. I typed seccede into google trying to get it, and got succeed instead. I typed in cosecede, and got secede.
2013-07-10 01:57:43 UTC <byorgey> hehe
2013-07-10 01:58:03 UTC <tgeeky> psah! everybody knows that! not even worth mentioning. [looks up every word in that sentence]
2013-07-10 01:58:15 UTC <byorgey> don't bother, I probably used them all wrong ;)
2013-07-10 02:00:08 UTC <byorgey> ok, I'm off to bed
2013-07-10 02:00:16 UTC <tgeeky> early for you. night byorgey!
2013-07-10 02:00:22 UTC <byorgey> night!
2013-07-10 02:01:15 UTC <fryguybob> sleep well
2013-07-10 18:30:11 UTC <travis-ci> [travis-ci] 13active/06master 14f279d29 http://travis-ci.org/diagrams/active/builds/8936668 The build passed.
2013-07-10 21:24:34 UTC <travis-ci> [travis-ci] 13active/06master 14736b6da http://travis-ci.org/diagrams/active/builds/8942887 The build passed.
2013-07-11 01:54:48 UTC <byorgey> ClaudiusMaximus: I like the haystack trailer =)
2013-07-11 03:10:56 UTC <fryguybob> ClaudiusMaximus: After I watched it I switched tabs and my screen appeared to be undulating :D
2013-07-11 03:19:19 UTC <travis-ci> [travis-ci] 13active/06master 14c6978be http://travis-ci.org/diagrams/active/builds/8951612 The build passed.
2013-07-11 03:29:11 UTC <byorgey> haha, trippy =)
2013-07-11 03:30:42 UTC <carter> theres a haystack trailer?
2013-07-11 03:31:01 UTC <carter> actually, whats haystack?
2013-07-11 03:31:30 UTC <byorgey> carter: http://mathr.co.uk/blog/2013-07-09_haystack_situations_trailer.html
2013-07-11 03:31:40 UTC <byorgey> clearly you are not subscribed to ClaudiusMaximus's blog as you should be
2013-07-11 03:32:09 UTC <carter> thres a blog?
2013-07-11 03:32:29 UTC <byorgey> I just linked to it.
2013-07-11 03:33:04 UTC <byorgey> anyway, bedtime for me, night all.
2013-07-11 03:33:18 UTC <carter> i don't see al ink?
2013-07-11 03:33:18 UTC <byorgey> hopefully I can sleep, the new active semantics is super exciting
2013-07-11 03:33:22 UTC <carter> oh?
2013-07-11 03:33:23 UTC <carter> cool
2013-07-11 03:33:27 UTC <carter> i'll look in the logs
2013-07-11 03:33:31 UTC <byorgey> (23:31) <   byorgey> carter: http://mathr.co.uk/blog/2013-07-09_haystack_situations_trailer.html
2013-07-11 03:33:43 UTC <carter> ahh thanks
2013-07-11 03:33:47 UTC <carter> my connection is droppy
2013-07-11 03:35:49 UTC <byorgey> ah, gotcha
2013-07-11 03:41:26 UTC <carter> ClaudiusMaximus : LOVE THE BLOG
2013-07-11 04:20:06 UTC <tgeeky> nice blog, nice link
2013-07-11 06:40:51 UTC <notdan> Howdy
2013-07-11 09:30:04 UTC <notdan> luite: hi! I think I've got some good news about interactive-diagrams
2013-07-11 10:49:50 UTC <luite> notdan: cool
2013-07-11 10:57:42 UTC <byorgey> yay!
2013-07-11 11:04:22 UTC <byorgey> fryguybob: http://www.reddit.com/r/haskell/comments/1i18bg/could_haskell_take_advantage_of_tsx_for_stm/
2013-07-11 12:19:53 UTC <fryguybob> byorgey: Ah
2013-07-11 12:22:45 UTC <fryguybob> byorgey: I don't have my reddit login handy so I guess the misconceptions will persist... :D
2013-07-11 13:01:31 UTC <luite> hm
2013-07-11 13:09:39 UTC <tgeeky> fryguybob: what kind of misconceptions do you wish to dispel?
2013-07-11 13:10:35 UTC <tgeeky> fryguybob: for instance, I could tell reddit that TSX has nothing to do with Acura car model, but I doubt anyone holds that misconception.
2013-07-11 13:12:56 UTC <luite> certainly not me, since it's just called Honda Accord here
2013-07-11 13:13:03 UTC <fryguybob> tgeeky: That's just it.  It has everything to do with Acura!
2013-07-11 13:14:03 UTC <tgeeky> fryguybob: Oh, wow. I'll let you tell them that one later then, for even more dramatic effect.
2013-07-11 13:14:38 UTC <tgeeky> welp, today is my birthday. :|
2013-07-11 13:14:58 UTC <fryguybob> Happy birthday!
2013-07-11 13:14:59 UTC <tgeeky> 29 years on this rock and counting
2013-07-11 13:15:48 UTC <ClaudiusMaximus> happy b'day!
2013-07-11 13:15:54 UTC <tgeeky> thanks, thanks!
2013-07-11 13:16:11 UTC <tgeeky> ClaudiusMaximus: really beautiful haystack thing.
2013-07-11 13:16:12 UTC <fryguybob> tgeeky: Mostly it is that pellets comment is much to cynical.
2013-07-11 13:17:30 UTC <tgeeky> ClaudiusMaximus: there are some people who think icoashedral symmetry is an important or foundational symmetry of the universe (large scale, cosmologically). Those people are what I like to call, wrong!
2013-07-11 13:35:57 UTC <notdan> luite: I've managed to get interactive-diagrams work with chroot, setuid() and SELinux policy in enforcing mode. I will add cgroups support today and I think we are ready to ship the first beta
2013-07-11 13:37:49 UTC <ClaudiusMaximus> :) thanks
2013-07-11 14:02:43 UTC <byorgey> happy birthday tgeeky!
2013-07-11 14:13:24 UTC <luite> notdan: very cool, i'll help review the security if you want
2013-07-11 14:13:48 UTC <luite> tgeeky: happy birthday :)
2013-07-11 14:16:26 UTC <notdan> oh, didn't read the backlog; happy birthday tgeeky :]
2013-07-11 14:17:12 UTC <tgeeky> thanks thanks
2013-07-11 14:18:57 UTC <luite> i just got a mail that hetzner doubled the free traffic for the servers, so make sure that interactive-diagrams gets lots of visitors :)
2013-07-11 14:19:38 UTC <luite> (20TB/month included, after that 1.99 euro / TB)
2013-07-11 14:26:45 UTC <tgeeky> luite: to my knowledge, european people only come in increments of 1, so I don't know where I'm going to find a 0.99 european person.
2013-07-11 15:50:11 UTC <byorgey> luite: nice!
2013-07-11 15:51:01 UTC <byorgey> tgeeky: that's the trick.  They make you think you can just use an extra TB or two per month, but really you have to use 100 extra TB or else you can't pay for it.
2013-07-11 16:15:33 UTC <travis-ci> [travis-ci] 13active/06master 1428a86e5 http://travis-ci.org/diagrams/active/builds/8973049 The build passed.
2013-07-11 16:48:31 UTC <travis-ci> [travis-ci] 13active/06master 148bda93a http://travis-ci.org/diagrams/active/builds/8974501 The build passed.
2013-07-11 17:44:31 UTC <fryguybob> \o/ the new hardware has arrived
2013-07-11 18:11:32 UTC <byorgey> fryguybob: hooray!
2013-07-11 18:13:07 UTC <carter> fryguybob haswell that ends well?
2013-07-11 18:13:15 UTC <byorgey> har har
2013-07-11 18:13:56 UTC <carter> i pun hard sometimes
2013-07-11 18:13:58 UTC <carter> shun me not
2013-07-11 18:14:34 UTC <fryguybob> :D
2013-07-11 18:15:42 UTC <luite> :)
2013-07-11 18:15:49 UTC <luite> laptop or desktop haswell?
2013-07-11 18:18:34 UTC <fryguybob> luite: Desktop
2013-07-11 18:18:57 UTC <fryguybob> Now I just have to build a custom kernel...
2013-07-11 18:19:13 UTC <luite> oh it's not evan enabled by default?
2013-07-11 18:19:16 UTC <luite> even
2013-07-11 18:20:01 UTC <fryguybob> Oh, TSX should work fine.  The performance counters, however, do not.
2013-07-11 18:33:51 UTC <luite> but you needah
2013-07-11 18:33:53 UTC <luite> oh
2013-07-11 18:34:08 UTC <luite> i dunno what i started typing
2013-07-11 19:22:51 UTC <travis-ci> [travis-ci] 13active/06master 1447ba4ba http://travis-ci.org/diagrams/active/builds/8979690 The build passed.
2013-07-11 20:09:57 UTC <tgeeky> roswell that ends well is one of my favorite futurama episodes.
2013-07-11 20:10:09 UTC <tgeeky> I bet byorgey isn't much for TV or cartoons, but I implore anyone to watch some futurama if you get the chance.
2013-07-11 20:11:01 UTC <tgeeky> also, one of my favorite exchanges from a recent re-ran episode:
2013-07-11 20:11:26 UTC <tgeeky> (after watching a "what if" machine which shows video renders of what would happen if _____ (some question you ask it):
2013-07-11 20:11:32 UTC <tgeeky> Professor Farnsworth: Who else has a question for the What-If machine? Scruffy, Fry? 
2013-07-11 20:11:38 UTC <tgeeky> Fry: Uh, I have a question. What if Bender was really giant? 
2013-07-11 20:11:44 UTC <tgeeky> Leela: You idiot! We already saw that! 
2013-07-11 20:11:49 UTC <tgeeky> Fry: I know, I liked it. I want to see it again. 
2013-07-11 20:11:54 UTC <tgeeky> Professor Farnsworth: We're not seeing it again! Ask something less stupid. 
2013-07-11 20:11:59 UTC <tgeeky> Fry: Oh alright, how about this. What if I never fell into that freezer doodle and came to the future jiggy? 
2013-07-11 20:12:01 UTC <carter> futurama  is great
2013-07-11 20:12:08 UTC <tgeeky>  Professor Farnsworth: That question is less stupid, though you asked it in a profoundly stupid way. What if Fry never came to the future?  <-- my favorite
2013-07-11 20:14:38 UTC <tgeeky> carter: probably (almost certainly) the only cartoon show ever to demonstrate multiple mathematical proofs
2013-07-11 20:14:46 UTC <carter> truth
2013-07-11 20:38:48 UTC <byorgey> "I bet byorgey isn't much for TV or cartoons" -- how did you possibly guess!
2013-07-11 20:39:36 UTC <byorgey> active semantics writeup is finished!
2013-07-11 20:40:13 UTC <byorgey> only ended up being 4500 words or so =)
2013-07-11 20:41:25 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/active-semantics.pdf
2013-07-11 20:41:54 UTC <byorgey> fryguybob, anyone else interested in animation and/or DSL design: take a look and let me know what you think!
2013-07-11 20:48:22 UTC <tgeeky> byorgey: because I had one of my spies surveil your house and noticed a lack of large square heat signatures
2013-07-11 20:48:54 UTC <tgeeky> wait, I'm not supposed to reveal things like that.
2013-07-11 20:49:13 UTC <luite> oh hm i haven't seen the latest episode yet
2013-07-11 20:50:43 UTC <byorgey> tgeeky: hah! I only use CIRCULAR televisions
2013-07-11 20:51:31 UTC <luite> :)
2013-07-11 20:52:56 UTC <tgeeky> I'm going to call Putin and have his men shot for incompetence.
2013-07-11 20:52:58 UTC <luite> byorgey: 500
2013-07-11 20:53:09 UTC <luite> i mean 403
2013-07-11 20:53:24 UTC <tgeeky> byorgey: we no have permissions
2013-07-11 20:53:53 UTC <luite> yes that i means
2013-07-11 20:53:54 UTC <byorgey> oh, I thought 500 was my score =(
2013-07-11 20:54:14 UTC <tgeeky> 500 is a tricky score. Hard to tell what it's out of.
2013-07-11 20:54:34 UTC <byorgey> you think it's a tricky score, try it as an error code!
2013-07-11 20:54:39 UTC <byorgey> at least scores are linearly ordered.
2013-07-11 21:01:03 UTC <carter> byorgey its a forbidden link :(
2013-07-11 21:01:10 UTC <fryguybob> byorgey: I also scored 500 on your link :D
2013-07-11 21:01:22 UTC <luite> you mean 403!
2013-07-11 21:01:34 UTC <byorgey> ohhhhhh, THAT'S what luite meant
2013-07-11 21:01:47 UTC <byorgey> the light dawns.  just a second.
2013-07-11 21:02:02 UTC <tgeeky> and techno
2013-07-11 21:02:02 UTC <luite> ok ok, sorry for being so cryptic :)
2013-07-11 21:02:03 UTC <carter> haha
2013-07-11 21:02:25 UTC <carter> luite you're never cryptic, you just work on cryptic things like STM in JS :)
2013-07-11 21:02:32 UTC <byorgey> ok, try again now =)
2013-07-11 21:03:20 UTC <travis-ci> [travis-ci] 13active/06master 140d86169 http://travis-ci.org/diagrams/active/builds/8983403 The build passed.
2013-07-11 21:03:22 UTC <byorgey> luite: I dunno, normally that would be enough for me to understand what you meant, but for some reason I just didn't get it this time
2013-07-11 21:03:30 UTC <byorgey> I was thinking about spies and televisions.
2013-07-11 21:11:42 UTC <tgeeky> byorgey: add TODO, institutional affiliations
2013-07-11 21:13:00 UTC <tgeeky> byorgey: s/noted in passing earlier/mentioned in passing earlier/
2013-07-11 21:21:33 UTC <byorgey> tgeeky: yeah, this isn't meant to be a formal publication yet, when we turn it into one I'll add affiliations
2013-07-11 21:21:57 UTC <tgeeky> byorgey: I was going to ask something like that, but I figured you'd tell me :o
2013-07-11 21:22:16 UTC <byorgey> thanks for the other suggestion, done
2013-07-11 21:22:17 UTC <tgeeky> it looks good so far, except I hate it when code is in a similar font to text.
2013-07-11 21:22:35 UTC <luite> tgeeky: quick come up with some significant contribution to get coauthorship
2013-07-11 21:22:48 UTC <tgeeky> luite: unpossible
2013-07-11 21:23:17 UTC <byorgey> but it isn't a similar font!
2013-07-11 21:27:19 UTC <tgeeky> byorgey: my firefox web browser based PDF reader was turning everything into DejaVu Sans (system)
2013-07-11 21:27:36 UTC <tgeeky> a proper PDF document viewer thing has it right
2013-07-11 21:30:00 UTC <byorgey> oh good!
2013-07-11 21:33:07 UTC <tgeeky> brb hardware swap
2013-07-11 21:57:52 UTC <luite> byorgey: hmm those anchors sound a bit annoying to work with
2013-07-11 22:38:40 UTC <luite> hm 2x strong accept, 1x accept
2013-07-12 00:44:09 UTC <byorgey> luite: what's this? reviews for your Haskell Symposium system demo proposal?
2013-07-12 00:45:43 UTC <byorgey> assuming "strong accept" is the highest possible rating, that is a really excellent set of scores
2013-07-12 00:46:51 UTC <byorgey> luite: yes, I agree re: the anchors.  I think some good combinators and tools for working with them will help of course.  But fundamentally, working with equivalence classes is annoying.
2013-07-12 01:32:09 UTC <fryguybob> tgeeky: I replied to the reddit thread on TSX and GHC's STM.
2013-07-12 01:32:17 UTC <carter> ooo
2013-07-12 01:32:20 UTC <carter> fryguybob what'd you say?
2013-07-12 01:32:33 UTC <fryguybob> Stuff :D
2013-07-12 01:32:37 UTC <fryguybob> http://www.reddit.com/r/haskell/comments/1i18bg/could_haskell_take_advantage_of_tsx_for_stm/
2013-07-12 10:12:48 UTC <luite> byorgey: yeah for demo talk
2013-07-12 10:57:03 UTC <luite> i'm not sure i'm going to icfp though
2013-07-12 11:01:25 UTC <byorgey> oh =(
2013-07-12 11:02:39 UTC <byorgey> if you don't go, maybe you could send a video?  Or maybe you could find someone else to give the talk for you?
2013-07-12 11:03:30 UTC <byorgey> but I do hope you can come
2013-07-12 11:08:25 UTC <luite> yeah i don't want to not give a talk if they've rejected something else for it...
2013-07-12 11:08:36 UTC <mr-> byorgey: how is (-oo, const e, oo) a "natural identity element" in the union semantics?
2013-07-12 11:09:26 UTC <luite> hm yeah that appears to modify the interval
2013-07-12 11:09:45 UTC <mr-> (you say it is nonsense, but it is weird that you bring it up like that)
2013-07-12 11:12:06 UTC <luite> hm is the haskell symposium accessible without a main icfp event registration?
2013-07-12 11:16:56 UTC <byorgey> luite: it should be
2013-07-12 11:17:15 UTC <byorgey> I don't think registration is open yet
2013-07-12 11:17:36 UTC <byorgey> mr-: that should be (oo, const e, -oo)
2013-07-12 11:17:43 UTC <byorgey> did I write it the wrong way around?
2013-07-12 11:17:46 UTC <luite> no
2013-07-12 11:18:23 UTC <byorgey> mr-: the union semantics is given by  (min t, t -> a, max t)
2013-07-12 11:18:43 UTC <byorgey> i.e. where you combine the lower bounds according to min, and the upper bounds according to max
2013-07-12 11:19:08 UTC <mr-> Oops, sorry. Misread
2013-07-12 11:19:13 UTC <byorgey> so if you want to add an element that acts like the identity it has to be  (oo, t -> a, -oo)
2013-07-12 11:19:36 UTC <byorgey> in any case, I will try to clarify that part.
2013-07-12 11:21:30 UTC <mr-> (your construction feels like free loopspace -> fundamental group :-)
2013-07-12 11:22:45 UTC <byorgey> I think there is probably a connection.  This sort of quotient construction seems to come up all the time.
2013-07-12 11:23:03 UTC <byorgey> maybe that's why we need homotopy type theory.
2013-07-12 11:24:09 UTC <byorgey> sounds like my son is awake.
2013-07-12 11:26:30 UTC <mr-> another semantics could have been to mimic groupoids: start and endpoints must agree
2013-07-12 11:26:57 UTC <mr-> (that's the difference to the loopspace construction, which enforces that)
2013-07-12 11:27:55 UTC <mr-> Of course, composition is a "partial" function then.
2013-07-12 11:28:33 UTC <mr-> That could probably be easily expressed using homotopy type theory. (Using the pullback)
2013-07-12 11:35:55 UTC <mr-> byorgey: couldn't f2x do the sensible thing depending on how open/closed your FActive is? (Ok, there's a choice for Closed, Closed). Is the proposed solution just to fix "the anchor" when you generate the FActive?
2013-07-12 11:43:00 UTC <luite> mr-: that sounds not terribly possible to express in haskell
2013-07-12 11:43:08 UTC <luite> (that endpoints must agree)
2013-07-12 11:48:04 UTC <mr-> luite: Yeah.. there goes type safety :-/
2013-07-12 12:54:29 UTC <byorgey> mr-: there is not necessarily one "canonical" anchor
2013-07-12 12:56:58 UTC <byorgey> though I certainly imagine having combinators which will "do the sensible thing" for finite things
2013-07-12 12:57:04 UTC <byorgey> because we can always have the endpoints as implicit anchors
2013-07-12 12:57:46 UTC <mr-> byorgey: I know there is none. I was asking if you had to fix one, when creating a FActive.
2013-07-12 13:08:17 UTC <mr-> byorgey: if you want to clarify your presentation of that point, an example would be very helpful, I think
2013-07-12 15:09:54 UTC <fryguybob> Woohoo! Hardware transactions!!!!
2013-07-12 15:11:17 UTC <luite> \o/
2013-07-12 15:53:46 UTC <fryguybob> byorgey: If you have two open on the left XActives, par gives a closed result.  Does that mean that your function must always be defined at the end point even if it is open?
2013-07-12 15:54:49 UTC <byorgey> fryguybob: I don't think I understand the question.
2013-07-12 15:55:10 UTC <byorgey> the function definitely need not be defined at the end point if it is open.
2013-07-12 15:55:22 UTC <byorgey> mr-: you're right, more examples would help.
2013-07-12 15:58:51 UTC <byorgey> mr-: when creating an FActive you do not have to specifyany anchors.
2013-07-12 15:59:14 UTC <byorgey> most of the time you would just be able to use the endpoints which will always be available as implicit anchors for finite FActives
2013-07-12 15:59:46 UTC <byorgey> even for infinite FActives I imagine the combinators which create them will automatically create some "standard" anchors for you.
2013-07-12 16:00:02 UTC <byorgey> but I still need to work through the details.
2013-07-12 16:02:23 UTC <byorgey> fryguybob: oh, for *X*Actives.  Now I understand the question.  XActives cannot be open at all.
2013-07-12 16:04:14 UTC <byorgey> I might have explained things in a confusing order.  Moving to the whole closed/open/infinite thing actually breaks par, I come back to fix it in section 5.1
2013-07-12 16:05:11 UTC <byorgey> fryguybob: hmm, maybe the confusion is that the way I explained it, it sounds like XActives could be open or closed but the type will always just say closed?
2013-07-12 16:05:27 UTC <byorgey> that is not what I meant.  What I meant is that XActives actually cannot be open.
2013-07-12 16:05:46 UTC <byorgey> So e.g. you cannot directly translate any old FActive to an XActive, you might have to fix up the endpoints first.
2013-07-12 16:20:16 UTC <fryguybob> byorgey: I'm back now.  I'll read that part more carefully again.
2013-07-12 17:16:30 UTC <fryguybob> byorgey: Ok, so open is only allowed with FActive and the conversion from F to X is only allowed for closed or inf.
2013-07-12 17:18:56 UTC <fryguybob> byorgey: If you did have some open things that you wanted to parallel compose you could augment their function codomain with a distinguished value for the endpoint, make it closed, par, then project back to the original codomain.
2013-07-12 17:49:16 UTC <byorgey> fryguybob: right.  of course that's a bit annoying.  I don't have a good sense of how often that would come up in practice.
2013-07-12 17:49:45 UTC <byorgey> the next step is definitely to implement all of this, try building animations with it, and use the experience to refine the design.
2013-07-12 17:56:07 UTC <fryguybob> byorgey: Cool.  I like the paper a lot.  It think it explains things well, just a little confusion at the end I think mostly due to my expecation that the picture would "work" with XActive.
2013-07-12 17:56:38 UTC <luite> what's the reasoning for the FActive / XActive names? i might've missed that
2013-07-12 17:56:49 UTC <fryguybob> luite: There is a footnote
2013-07-12 17:56:55 UTC <luite> ah
2013-07-12 17:56:59 UTC <fryguybob> luite: On page 10
2013-07-12 17:58:21 UTC <byorgey> there is no real reasoning for the names.  Mostly it's just that those are the names Andy and Ed and I started using when we were working stuff out on a whiteboard, I don't remember why.
2013-07-12 17:58:29 UTC <byorgey> so I came up with justifications for them.
2013-07-12 17:58:34 UTC <luite> ok
2013-07-12 17:58:36 UTC <luite> :)
2013-07-12 17:58:37 UTC <byorgey> suggestions of better names welcome =)
2013-07-12 17:58:55 UTC <luite> hehe i don't have any atm
2013-07-12 17:59:07 UTC <byorgey> fryguybob: the confusion at the end is probably also due to the fact that (1) I wanted to be done and (2) that's the part I've worked out in the least detail =)
2013-07-12 17:59:55 UTC <byorgey> anyway, so far this was really only intended to explain the basic ideas to people who are already familiar with the area... when we turn it into a real paper we will expand things, add lots more examples, and so on.
2013-07-12 17:59:56 UTC <luite> how long is jfk airport to boston
2013-07-12 17:59:56 UTC <fryguybob> byorgey: Yeah.  Reading it all (not the confusing part) reminded me of when I was making the core of an Awning program.  I had to think about the sequential semantics and refining until it is right is very helpful.
2013-07-12 18:00:06 UTC <fryguybob> luite: Only one flight away.
2013-07-12 18:00:23 UTC <byorgey> luite: that's just a short hop.  maybe a 30-45 minute flight.
2013-07-12 18:00:56 UTC <fryguybob> Google says 3 1/2 hour drive.
2013-07-12 18:01:19 UTC <byorgey> you could also easily take a train, probably a 3 hour train ride.
2013-07-12 18:01:19 UTC <luite> is flying the best option? is there high speed rail?
2013-07-12 18:01:37 UTC <byorgey> or maybe a bit shorter than that on the train, not sure
2013-07-12 18:01:56 UTC <byorgey> luite: there is high speed rail but it is very expensive compared to what's in europe
2013-07-12 18:01:58 UTC <luite> 3h is not too bad, do the trains have power outlets?
2013-07-12 18:02:07 UTC <byorgey> yes, they do
2013-07-12 18:02:25 UTC <luite> ok, since my batteries are probably empty after the flight
2013-07-12 18:02:54 UTC <luite> ams->jfk is slightly cheaper than ams->bos, and i need to go to nyc anyway after boston
2013-07-12 18:03:23 UTC <byorgey> makes sense
2013-07-12 18:04:12 UTC <luite> return flights are a lot cheaper than returning from a different airpot
2013-07-12 18:04:58 UTC <byorgey> oh, it's a bit longer than I thought -- looks like 4.5 hrs on a regional rail or 3.5 hrs on Acela (for 2x the price)
2013-07-12 18:06:22 UTC <byorgey> also, the airport is not near the train station in NY
2013-07-12 18:06:23 UTC <luite> hmm, i can hope that someone goes by car to the haskell symposium and get a lift :)
2013-07-12 18:06:40 UTC <byorgey> looks like a ~1hr trip on public transit
2013-07-12 18:07:25 UTC <luite> hmm
2013-07-12 18:07:57 UTC <byorgey> and note the minimum price for a train ticket is going to be about $50 one way
2013-07-12 18:08:02 UTC <luite> i didn't mind the CA public transit too much, even though it's not terribly fast
2013-07-12 18:08:12 UTC <luite> better than UK trains :p
2013-07-12 18:08:16 UTC <byorgey> hehe
2013-07-12 18:08:32 UTC <byorgey> honestly if you can find cheap round-trip flight JFK->BOS you might be better off
2013-07-12 18:08:36 UTC <luite> (well that might not be entirely true, caltrain is not the most modern one)
2013-07-12 18:08:45 UTC <byorgey> not that much more expensive than the train and way faster
2013-07-12 18:08:53 UTC <luite> ok
2013-07-12 18:09:54 UTC <byorgey> the US is too big, is the problem =P
2013-07-12 18:10:52 UTC <luite> i'm not sure what the best arrival date is, cheapest seems to be ~500 euro, while boston is ~600
2013-07-12 18:11:10 UTC <luite> i guess that should be doable, perhaps if i skip zurich
2013-07-12 18:11:35 UTC <luite> anything i should visit in boston?
2013-07-12 18:11:41 UTC <luite> er and ny?
2013-07-12 18:11:55 UTC <byorgey> lots of stuff to visit in both places
2013-07-12 18:12:00 UTC <byorgey> though I vastly prefer Boston
2013-07-12 18:12:02 UTC <notdan> Railways in America sucks. Sorry guys, but it's true :(
2013-07-12 18:12:04 UTC <byorgey> NY is overrated
2013-07-12 18:12:04 UTC <luite> oh really
2013-07-12 18:12:11 UTC <byorgey> notdan: I know =)
2013-07-12 18:12:26 UTC <luite> notdan: hehe you tried? which part?
2013-07-12 18:12:29 UTC <fryguybob> luite: I live in NY, it is soooo overrated.
2013-07-12 18:12:30 UTC <notdan> I spent 9 hours going from Oregon to SF
2013-07-12 18:13:03 UTC <notdan> But it was cheaper than going by plane and it was def worth it :D
2013-07-12 18:13:08 UTC <luite> i want to fly to st. petersburg and take the train to moscow one day, but i don't have enough money this year
2013-07-12 18:13:09 UTC <byorgey> fryguybob: hehe, I think luite probably meant NYC, I doubt he would make a side trip to Rochester =)
2013-07-12 18:13:32 UTC <fryguybob> :D
2013-07-12 18:13:34 UTC <luite> well if fryguybob can pick me up by car :p
2013-07-12 18:13:44 UTC <fryguybob> luite: See you in 7 hours!
2013-07-12 18:13:54 UTC <byorgey> hehe
2013-07-12 18:14:31 UTC <luite> driving in russia seems scary according to all the youtube dashcam videos i've seen :)
2013-07-12 18:14:44 UTC <notdan> Haha
2013-07-12 18:15:05 UTC <notdan> Westerners do like those
2013-07-12 18:16:40 UTC <luite> notdan: hehe for you it's just run-of-the-mill stuff, "oh another drunk guy jumping in front of my car to get some money" :)
2013-07-12 18:17:30 UTC <luite> or is it really only the eceptions that end up on youtube?
2013-07-12 18:17:33 UTC <luite> +x
2013-07-12 18:18:26 UTC <luite> tbh san jose rush hour was also pretty scary ;)
2013-07-12 18:18:55 UTC <notdan> Well, you wouldn't get so much trouble driving in the main cities or on the main roads between cities. Most of those videos are from very rural areas
2013-07-12 18:19:22 UTC <byorgey> ACTION fails to see how lots of cars sitting on a highway not moving could be scary
2013-07-12 18:20:04 UTC <luite> hehe
2013-07-12 18:20:20 UTC <fryguybob> byorgey: It is when the not moving cars in in front of you and you are still a moving car.
2013-07-12 18:20:22 UTC <luite> notdan: ah
2013-07-12 18:20:42 UTC <fryguybob> (are in front)
2013-07-12 18:20:44 UTC <byorgey> fryguybob: good point, that part is scary.
2013-07-12 18:21:13 UTC <luite> yeah it's just before, when there are so many cars on the road that are moving too fast for the traffic density, so that every single disturbance can cause a traffic jam
2013-07-12 18:21:49 UTC <byorgey> true
2013-07-12 18:22:31 UTC <luite> i mean perturbation, that sounds more scientific :p
2013-07-12 18:23:36 UTC <byorgey> next time I am driving and someone cuts me off or slams on the brakes I will yell at them for causing a perturbation
2013-07-12 18:25:22 UTC <fryguybob> I don't suggest the transactional memory approach, there are no rollbacks...
2013-07-12 18:27:08 UTC <byorgey> this is why we use semaphores at intersections.
2013-07-12 18:35:17 UTC <luite> notdan: still i'm not sure i'd be confident enough to rent a car in russia :)
2013-07-12 18:43:21 UTC <notdan> Hey guys, check out my webpage http://paste.hskll.org/get/40
2013-07-12 18:44:12 UTC <fryguybob> Sweet!
2013-07-12 18:45:22 UTC <byorgey> =D
2013-07-12 18:47:06 UTC <luite> the cool thing is that it runs in an selinux sandbox, so any code, not just safe haskell, can be run in theory
2013-07-12 18:48:36 UTC <byorgey> notdan++
2013-07-12 18:48:51 UTC <byorgey> notdan: feature request: install diagrams-contrib
2013-07-12 18:51:17 UTC <byorgey> http://paste.hskll.org/get/44
2013-07-12 18:55:15 UTC <luite> cool :)
2013-07-12 18:57:27 UTC <luite> is it worth visiting philadelphia from nyc?
2013-07-12 19:01:12 UTC <notdan> byorgey: done http://paste.hskll.org/get/45
2013-07-12 19:01:31 UTC <luite> =)
2013-07-12 19:10:06 UTC <luite> notdan: security should probably be tightened a bit more, since the worker now runs under vagrant, which is a sudo user (probably not really a problem since it cannot access the sudo file from its chroot, i think)
2013-07-12 19:10:40 UTC <luite> also i guess selinux forbids it
2013-07-12 19:11:35 UTC <notdan> Yeah, there is no sudo in the chrooted environment
2013-07-12 19:12:11 UTC <luite> but it's still better as a separate user with its own disk quota etc
2013-07-12 19:13:16 UTC <notdan> Ah, true
2013-07-12 19:13:26 UTC <notdan> disk quota is an important one
2013-07-12 19:15:12 UTC <luite> yeah if you set a low inode limit you can be sure that the service will never spend too much time cleaning up
2013-07-12 19:15:36 UTC <luite> a few hundred inodes should be enough for pastes
2013-07-12 19:23:40 UTC <gabor> http://projects.haskell.org/diagrams/manual/diagrams-manual.html#Installation mentions pretty outdated GHCs
2013-07-12 19:25:54 UTC <notdan> Hm, that's true, I didn't notice that when reading the manual
2013-07-12 19:27:29 UTC <gabor> is it okay to report here what I find, or should I open an issue?
2013-07-12 19:29:15 UTC <notdan> I think the developers will notice your message here. If you want, you can even submit a pull request, the manual is on github: https://github.com/diagrams/diagrams-doc/tree/master/manual
2013-07-12 19:30:24 UTC <gabor> e.g. a typo : arugments
2013-07-12 19:30:51 UTC <gabor> okay, will submit a pull request
2013-07-12 19:38:36 UTC <byorgey> gabor: the released version of diagrams really does work all the way back to GHC 6.12.  Though we are dropping support for it in the next release.
2013-07-12 19:39:30 UTC <byorgey> gabor: yes, for little typos and things a pull request would be great, you can even just click "edit" on github
2013-07-12 19:40:20 UTC <gabor> I see, but that could be a remark, while nudging towards 7.6 more actively
2013-07-12 19:40:55 UTC <byorgey> gabor: hmm? I don't understand what you mean
2013-07-12 19:43:08 UTC <gabor> I mean "We suggest using a recent GHC, but in case you are stuck with an older one, make sure it is at least v6.12. Please avoid using v7.0.1, as it has a serious bug."
2013-07-12 19:43:25 UTC <byorgey> oh, I see.  Yes, that's probably a good idea.
2013-07-12 19:43:46 UTC <byorgey> or maybe we should just move the suggestion re: the Haskell Platform to come first.
2013-07-12 19:43:50 UTC <gabor> whatever... not so important. also there is a newer platform
2013-07-12 19:44:12 UTC <byorgey> you're right, that needs updating
2013-07-12 19:44:19 UTC <gabor> byorgey: started an issue, but do not merge just yet
2013-07-12 19:44:27 UTC <byorgey> ok.
2013-07-12 20:13:31 UTC <gabor> do diagrams have an "id" attribute (as in SVG)?
2013-07-12 20:22:06 UTC <byorgey> gabor: not by default.  why do you ask?
2013-07-12 20:22:31 UTC <byorgey> I mean, they *could* have one.  the set of attributes is extensible by the user.
2013-07-12 20:23:22 UTC <gabor> when I have an SVG with named parts, I can use DOM to find it and manipulate it.
2013-07-12 20:23:34 UTC <gabor> very convenient from JS
2013-07-12 20:24:05 UTC <byorgey> and you want to be able to generate such SVGs with diagrams?
2013-07-12 20:24:18 UTC <byorgey> or you want to be able to manipulate diagrams in the same way you can manipulate SVGs?
2013-07-12 20:24:20 UTC <gabor> but very hard to retrofit ids on an SVG
2013-07-12 20:25:28 UTC <byorgey> anyway, it would be a very easy feature to add
2013-07-12 20:25:57 UTC <gabor> nothing concrete yet, just thinking up stuff
2013-07-12 20:26:33 UTC <byorgey> oh wait, no it wouldn't =)
2013-07-12 20:27:03 UTC <byorgey> it would first require some restructuring of the way the API for backends works, which we plan to do anyway.
2013-07-12 20:27:13 UTC <byorgey> just not sure when someone will get around to it.
2013-07-12 20:37:20 UTC <notdan> surely you can add manipulate the resulting SVG (including adding the ID attribute) using blaze-svg?
2013-07-12 20:37:36 UTC <luite> yeah but you have to know where to add it to :)
2013-07-12 20:38:02 UTC <byorgey> yes, knowing where to add it is the problem =)
2013-07-12 20:38:10 UTC <notdan> Oh, right, sorry, I thought you were talking about adding an attribute to the whole diagram
2013-07-12 20:38:20 UTC <byorgey> right now backends are just provided with a list of primitives and their attributes
2013-07-12 20:38:43 UTC <byorgey> when really what you want is for the backend to be able to see a tree with attributes at internal nodes
2013-07-12 20:39:48 UTC <luite> yeah that would also make it easier to generate more efficient svg
2013-07-12 20:39:57 UTC <luite> kill two flies in one stroke
2013-07-12 20:39:58 UTC <luite> :p
2013-07-12 20:40:06 UTC <luite> </dutch proverb>
2013-07-12 20:40:11 UTC <notdan> http://paste.hskll.org/get/65 darksalmon is my favourie color now
2013-07-12 20:40:16 UTC <byorgey> hehe, yup
2013-07-12 20:40:33 UTC <byorgey> the corresponding English saying is "kill two birds with one stone"
2013-07-12 20:40:36 UTC <notdan> luite: in here we say Kill two rabbits with one shot, heh
2013-07-12 20:40:44 UTC <byorgey> haha
2013-07-12 20:40:50 UTC <luite> byorgey: yeah i know, every country seems to have their favourite animal to kill :)
2013-07-12 20:40:56 UTC <byorgey> apparently so =)
2013-07-12 20:41:16 UTC <byorgey> notdan: darksalmon, nice =)
2013-07-12 20:41:22 UTC <luite> apparently we dutch aren't terribly hungry... or perhaps really hungry
2013-07-12 20:41:31 UTC <byorgey> catch two darksalmon with one hook
2013-07-12 20:41:49 UTC <byorgey> luite: or maybe you just really hate flies?
2013-07-12 20:42:27 UTC <byorgey> anyway, yes, the backend API restructuring is definitely high up on the list
2013-07-12 20:42:32 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 1471d3ed6 http://travis-ci.org/diagrams/diagrams-lib/builds/9022762 The build passed.
2013-07-12 20:47:12 UTC <luite> byorgey: well they are pretty annoying (and pretty hard to kill)
2013-07-12 20:48:54 UTC <byorgey> ACTION is pretty good at killing them
2013-07-12 20:49:03 UTC <byorgey> you have to wait until they land and then catch them
2013-07-12 20:49:31 UTC <byorgey> but it would be extremely difficult to get two at once! =)
2013-07-12 20:52:46 UTC <luite> we do have a proverb, "one catches more flies with honey than with vinegar" (you get more done by being nice/friendly), but someone checked recently and vinegar works better. so i guess we dutchies aren't good at catching flies :)
2013-07-12 20:54:04 UTC <luite> or perhaps proverbs should be peer reviewed
2013-07-12 20:54:06 UTC <byorgey> haha
2013-07-12 20:55:13 UTC <byorgey> vinegar works well for catching fruit flies.  never tried it with house flies.
2013-07-12 20:55:49 UTC <carter> byorgey i've heard apple vinegar works well
2013-07-12 20:56:00 UTC <carter> double wammy of sweet + kills em
2013-07-12 20:56:02 UTC <byorgey> yep
2013-07-12 20:56:09 UTC <luite> ah never tried that. last time i had a decent number of fruit flies they all had red eyes, really disappointing
2013-07-12 20:56:12 UTC <carter> oh, and a dash of soap to decrease surface tension so they get stuck more easily
2013-07-12 20:56:18 UTC <byorgey> it smells just like rotting apples, who would have thought
2013-07-12 20:56:54 UTC <byorgey> yep, soap works well, though usually I just put plastic wrap over a little bowl and poke a hole in it
2013-07-12 20:57:00 UTC <byorgey> then the soap doesn't really matter
2013-07-12 20:59:40 UTC <luite> white eye flies are apparently not very common in the wild
2013-07-12 21:03:26 UTC <gabor> pad 1.2 $ square 1      is the same as     square 1 # pad 1.2    right?
2013-07-12 21:10:38 UTC <byorgey> gabor: yes
2013-07-12 21:10:51 UTC <byorgey> gabor: in fact (#) = flip ($)
2013-07-12 21:11:21 UTC <gabor> okay, then is the latter style preferred in the manual?
2013-07-12 21:12:09 UTC <byorgey> the manual pretty consistently uses #
2013-07-12 21:12:16 UTC <byorgey> you can use whatever you want in your own code
2013-07-12 21:12:39 UTC <gabor> yeah, should I change the former to the latter?
2013-07-12 21:12:47 UTC <gabor> in the manual?
2013-07-12 21:13:15 UTC <byorgey> oh, sure
2013-07-12 21:13:27 UTC <gabor> 'kay
2013-07-12 21:19:24 UTC <gabor> byorgey: "User-defined names" would be _the_ perfect id="..." mechanism!
2013-07-12 21:22:53 UTC <byorgey> gabor: sure, as long as you use strings
2013-07-12 21:23:24 UTC <byorgey> gabor: as discussed above, the problem is only that right now there is not a good way for a backend like the SVG backend to get ahold of those names and figure out where they should go in the output
2013-07-12 21:23:40 UTC <byorgey> but there should be, and will be, eventually.
2013-07-12 21:24:32 UTC <byorgey> sigh.  I have to go walk 5 blocks in the pouring rain now
2013-07-12 21:31:54 UTC <gabor> withName has a very (>>=) feel to it :-)
2013-07-12 21:32:49 UTC <gabor> a restricted monad maybe?
2013-07-12 21:55:53 UTC <tgeeky> byorgey: turn that negative, into a positive! Any plants you have on your person will be watered nicely.
2013-07-12 23:49:39 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1431a91a8 http://travis-ci.org/diagrams/diagrams-doc/builds/9027610 The build has errored.
2013-07-13 01:53:10 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1431a91a8 http://travis-ci.org/diagrams/diagrams-doc/builds/9027610 The build failed.
2013-07-13 02:47:02 UTC <tgeeky> fryguybob: you broke it!?
2013-07-13 09:26:25 UTC <notdan> For some reason I can't profile my app. I've rebuilt all the packages with profiling option enabled, but if I run the web server with profiling enabled (even if I don't supply the rts options) it segfaults
2013-07-13 09:26:43 UTC <notdan> runs find if I compile it without --enable-executable-profiling
2013-07-13 11:34:41 UTC <byorgey> tgeeky: no, I broke it a long time ago =)
2013-07-13 11:34:51 UTC <byorgey> it's failing because a bunch of the examples don't compile anymore (because of changes to diagrams-lib)
2013-07-13 14:16:29 UTC <fryguybob> notdan: I wonder if profiling requires more permissions then it is granted?
2013-07-13 14:17:35 UTC <notdan> I tried profiling with SElinux turned off 
2013-07-13 18:46:14 UTC <notdan> http://orbt.io/QEkK.png the error messages are now prettier
2013-07-13 19:30:31 UTC <luite> notdan: good work. what errors can you catch now?
2013-07-13 19:34:03 UTC <notdan> Still not being able to catch out of memory exceptions :(
2013-07-13 20:46:19 UTC <luite> grmblz acrobat is still a horrible program
2013-07-13 20:47:02 UTC <fryguybob> luite: I've never expected it to change from that state.
2013-07-13 20:50:17 UTC <luite> unfortunately there is no other program that can do clearscan ocr, which is far better than other ocr for making old scanned papers usable on a tablet or reader
2013-07-13 20:51:04 UTC <luite> at least as long as it doesn't spit out "unknown error"s
2013-07-13 20:56:25 UTC <luite> perhaps it's possible to write it with potrace
2013-07-13 21:02:09 UTC <luite> adobe also cunningly removed their main incentive for improving their products: by switching from the usual license model where users only pay when upgrading to a subscription based model, where users lose access when they stop paying
2013-07-13 21:16:03 UTC <luite> ah so there is an open source thing that tries to do this: http://www.csse.uwa.edu.au/~shafait/papers/Hasan-Decapod-Evaluation-ICPR12.pdf
2013-07-13 23:20:35 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14a95b3a3 http://travis-ci.org/diagrams/diagrams-doc/builds/9051552 The build is still failing.
2013-07-14 15:57:45 UTC <notdan> Hi
2013-07-14 15:58:08 UTC <notdan> Anyone feeling bored and want to proof-read a blog post for me? :P
2013-07-14 20:25:22 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14be7f2b6 http://travis-ci.org/diagrams/diagrams-lib/builds/9073203 The build passed.
2013-07-14 20:55:26 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 14f0d12c5 http://travis-ci.org/diagrams/diagrams-lib/builds/9073936 The build passed.
2013-07-14 22:14:30 UTC <byorgey> hmm, I may push arrow stuff back to 0.7.1, and just work on getting an 0.7 release out
2013-07-14 22:14:47 UTC <byorgey> since the arrow stuff should not introduce any breakages, just add features
2013-07-14 22:55:42 UTC <carter> ooo, whats this?
2013-07-14 23:18:19 UTC <fryguybob> byorgey: That sounds good.  This parametric commit is the last generic feature needed right?
2013-07-14 23:21:14 UTC <fryguybob> ACTION builds a ghc with hardware lock elision.
2013-07-14 23:21:22 UTC <carter> OOOOO
2013-07-14 23:21:33 UTC <carter> fryguybob are the patches online anywhere?
2013-07-14 23:21:45 UTC <carter> are you going to run NoFib?
2013-07-14 23:25:13 UTC <fryguybob> carter: Nothing exciting yet, just want to get it to work.  It isn't fun until I get the kernel patched to count transactional events with perf.
2013-07-14 23:25:24 UTC <carter> ahhh
2013-07-14 23:59:04 UTC <byorgey> fryguybob: right, the trail refactoring + parametric stuff were the generic features we want/need in order to support arrows
2013-07-14 23:59:29 UTC <byorgey> well, and the scale-invariant stuff
2013-07-15 00:07:08 UTC <fryguybob> It's a good thing this machine is fast, silly mistakes are making build more.
2013-07-15 09:51:54 UTC <jbracker> I am working on implementing the Diagrams backend for Charts right now. What would be the expected return type? (Renderable (Path R2) b => Diagram b R2) ?
2013-07-15 10:03:09 UTC <notdan> return type of what?
2013-07-15 10:17:17 UTC <jbracker> notdan: The chart backend implementation, e.g. I have a Chart and want to render it as diagram. What would I get if I call runBackend on my chart?
2013-07-15 10:24:49 UTC <notdan> Hm, but Renderable is a type, not a typeclass, how come you are using it as a constraint?
2013-07-15 10:25:01 UTC <notdan> I guess I am missing something here, sorry, I am not very familiar with Charts
2013-07-15 11:01:38 UTC <jbracker> notdan: Renderable from Diagrams is a classs
2013-07-15 11:15:02 UTC <byorgey> jbracker: yes,  Renderable (Path R2) b => Diagram b R2  sounds right
2013-07-15 11:15:28 UTC <byorgey> or maybe  ... => IO (Diagram b R2)  if you need that
2013-07-15 11:15:51 UTC <jbracker> byorgey: Thanks! I will see about the IO when I need it. I'll implement text last.
2013-07-15 11:16:09 UTC <jbracker> Right now I am trying to convert Charts paths to Diagrams paths...
2013-07-15 11:18:18 UTC <byorgey> right
2013-07-15 11:19:23 UTC <byorgey> have fun!
2013-07-15 11:19:53 UTC <jbracker> thanks!
2013-07-15 12:48:57 UTC <luite> fryguybob: oh that might've worked, but it had some comments about not being able to extract images and text yet
2013-07-15 12:49:48 UTC <luite> fryguybob: in the end i used a js lib to extract the jpeg2000 images, run imagemagick to adjust them, then replace them back. and also adjust the drawing instructions with a regexp (yes, hacky) :)
2013-07-15 12:49:56 UTC <luite> not js, but java
2013-07-15 12:50:32 UTC <luite> first time in a few years that i used java again :)
2013-07-15 13:03:41 UTC <notdan> luite, hi, can you preview a blog post for me
2013-07-15 13:12:58 UTC <luite> sure
2013-07-15 13:14:57 UTC <jbracker> How do I fill an entire diagram (the complete clip region) with a color?
2013-07-15 13:18:24 UTC <byorgey> jbracker: http://hackage.haskell.org/packages/archive/diagrams-lib/0.6.0.3/doc/html/Diagrams-TwoD-Combinators.html#v:bg
2013-07-15 13:18:54 UTC <byorgey> jbracker: diagrams has no primitive notion of a background color
2013-07-15 13:19:01 UTC <byorgey> though perhaps we should
2013-07-15 13:19:50 UTC <jbracker> Ok. That works with regard to the current clip region, e.g. if there is none all is filled otherwise only clip is filled?
2013-07-15 13:20:44 UTC <byorgey> jbracker: well, all 'bg' does is create a filled rectangle which is big enough to enclose the diagram's envelope, and puts it behind the diagram
2013-07-15 13:20:59 UTC <jbracker> Though what I actually need is: Fill the clip region, if there is none fill everything. How can I get the clip region? How can I fill everything?
2013-07-15 13:21:45 UTC <fryguybob> luite: Ah, good that you got it working.
2013-07-15 13:21:59 UTC <fryguybob> (took me a second to realize the context)
2013-07-15 13:21:59 UTC <byorgey> jbracker: will the clip region exceed the envelope?
2013-07-15 13:22:11 UTC <jbracker> Yes, it might do so
2013-07-15 13:22:14 UTC <byorgey> hmm
2013-07-15 13:24:18 UTC <byorgey> perhaps it is time to add an actual background color attribute to diagrams-lib
2013-07-15 13:24:59 UTC <jbracker> actually there might not be any clip at all and then I want to say fill the entire diagram independent of what child we are inside of currently
2013-07-15 13:25:28 UTC <jbracker> it's not so much about a background color
2013-07-15 13:25:37 UTC <jbracker> though this might be sonething Chart's should handle differently
2013-07-15 13:25:54 UTC <byorgey> what's the difference between filling the entire diagram and a background color?
2013-07-15 13:26:00 UTC <byorgey> I think I still don't understand exactly what you want
2013-07-15 13:26:22 UTC <jbracker> Filling say draw over everything. A background color is used where nothing is painted yet
2013-07-15 13:26:30 UTC <byorgey> oh, I see
2013-07-15 13:26:47 UTC <jbracker> But:
2013-07-15 13:27:06 UTC <jbracker> I think Charts uses fillClip to create a background color
2013-07-15 13:27:18 UTC <byorgey> ok, right.
2013-07-15 13:27:22 UTC <luite> fryguybob: oh sorry. it always surprises me how poor pdf tool support is, unless you go really low level and extract all the objects yourself using a lib
2013-07-15 13:27:28 UTC <byorgey> "filling = draw over everything" is a rather imperative notion
2013-07-15 13:27:29 UTC <jbracker> which could be handled in a better way instead of creating such a global operation
2013-07-15 13:27:59 UTC <byorgey> jbracker: do you have the clip region easily available as a polygon?
2013-07-15 13:28:04 UTC <jbracker> byorgey: Yes, I know. Thats because the current API is derived from cairo
2013-07-15 13:28:08 UTC <byorgey> right
2013-07-15 13:28:30 UTC <jbracker> yes I do. But what if there is none?
2013-07-15 13:28:51 UTC <jbracker> i.e. I want to fill everything
2013-07-15 13:29:32 UTC <jbracker> independent of my position in the hirarchy
2013-07-15 13:29:52 UTC <byorgey> right, and at that point you may not know how big the entire diagram is going to be
2013-07-15 13:30:16 UTC <luite> fryguybob: in particular some scanner software produces annoying pdf (black is not quite black, white not quite white), where the color is stored as low res jpeg2000, text as a high res jbig2 bitonal mask, and a text layer behind the images. acrobat then refuses to do any OCR with it since it sees existing text, has no way to remove it (except by manually selecting/deleting al text boxes), and adjusting the color is also impossible for the whole doc
2013-07-15 13:30:52 UTC <jbracker> exactly
2013-07-15 13:31:14 UTC <byorgey> jbracker: this still seems fishy to me.  For example, what would it mean if two different nodes somewhere in a diagram hierarchy each set the background color / fill  with a different color?
2013-07-15 13:32:14 UTC <jbracker> byorgey: But as I said maybe we should change our API and instead of providing such an imperative operation, just provide a way to set the background color. AFAIK thats the only reason the operation exists anyway
2013-07-15 13:32:48 UTC <jbracker> byorgey: First come, first served
2013-07-15 13:32:52 UTC <jbracker> as in cairo
2013-07-15 13:33:15 UTC <fryguybob> luite: Ah, strange.  There was no end to surprises when I was working on extracting vector data from pdf, AI, eps and postscript.
2013-07-15 13:34:20 UTC <byorgey> jbracker: hmm, I suppose.  The background color which is furthest "atop" the other ones will win.
2013-07-15 13:34:47 UTC <luite> fryguybob: fortunately on the docs i had to do, just regexping all the BT ... ET (begin .. end text block instructions) out worked fine :)
2013-07-15 13:36:16 UTC <byorgey> jbracker: if you change your API so it provides a way to set the background color, then would it be possible for you to keep track of it and know what the background color should be at the very end, so you can set it globally on the entire diagram, at the top level?
2013-07-15 13:36:29 UTC <byorgey> that would be easiest because then you can just use the existing 'bg' function
2013-07-15 13:37:07 UTC <byorgey> otherwise we will have to add a background color attribute, and I am still not convinced it will be simple.  That is the reason we have no background attribute, because I could never figure out what it is supposed to mean.
2013-07-15 13:37:30 UTC <fryguybob> luite: Yeah, if I ever wanted to run an evil company I would make all my file formats programming languages where you could *just* get by for any single task with just regex but you could corner the market on tools that actually work by actually implementing the language.
2013-07-15 13:37:44 UTC <jbracker> byorgey: Right now we provide a deep embedding, and for every operation we have access to our current state
2013-07-15 13:37:59 UTC <byorgey> jbracker: ah, cool
2013-07-15 13:38:12 UTC <byorgey> so you can just set the background color in the state and then see what it is at the end?
2013-07-15 13:38:22 UTC <jbracker> yes
2013-07-15 13:38:28 UTC <byorgey> great
2013-07-15 13:39:28 UTC <luite> fryguybob: hehe. yeah PDF did remove of the PS instructions that it's not quite a programming language anymore, right? just drawing instructions with a state
2013-07-15 13:39:49 UTC <luite> +enough
2013-07-15 13:40:52 UTC <fryguybob> luite: Yeah unless you are adobe then you throw in special features like JS and a 3D model viewer ...
2013-07-15 13:40:55 UTC <jbracker> byorgey: Thanks for your input I will think this through and talk to Tim about it tomorrow
2013-07-15 13:41:34 UTC <byorgey> jbracker: OK.
2013-07-15 13:42:03 UTC <luite> fryguybob: oh yeah JS, i think it might've actually been doable from acrobat using the built-in JS engine, but i don't really know how that thing works
2013-07-15 13:44:09 UTC <luite> i'm not the only person with this scanner ocr problem, i've seen 'solutions' like exporting to multipage tiff, then reimporting as pdf, where you lose all metadata and probably a lot of image quality
2013-07-15 13:45:27 UTC <luite> which means i should sell my 20 line java thing as an enterprise digital document preprocessor
2013-07-15 13:47:16 UTC <fryguybob> hehe "Process to convert from convoluted crippled scanner format to usable format prepared for OCR" is the patent to search for.
2013-07-15 13:51:03 UTC <byorgey> "First, a convoluted cripped scanner format lexer generator generates a convoluted cripped scanner format lexer (Fig. 1). Then the convoluted cripped scanner format lexer lexes the convoluted cripped scanner format (Fig. 2)."
2013-07-15 13:51:38 UTC <jbracker> ...
2013-07-15 13:51:56 UTC <luite> hehe sorry for starting something off-topic again ;)
2013-07-15 13:52:11 UTC <luite> i hope jbracker didn't need to discuss much more gsoc stuff
2013-07-15 13:52:13 UTC <byorgey> In German, of course, each of those sentences would be just a few words =)
2013-07-15 13:52:21 UTC <luite> very long words though
2013-07-15 13:52:25 UTC <jbracker> XD
2013-07-15 13:52:43 UTC <jbracker> not even sure I could translate this into correct german
2013-07-15 13:53:08 UTC <jbracker> luite: I'm done with the last discussion
2013-07-15 13:53:27 UTC <byorgey> aw man, I missed a golden opportunity to use 'scanner' as a synonym for 'lexer'
2013-07-15 13:53:35 UTC <luite> byorgey: it's actually kind of annoying, dutch has more or less the same spelling rules with regard to using spaces, but people are so used to having multiple words in english that they get uncomfortable now, writing very long words in dutch, inserting spaces incorrectly
2013-07-15 13:53:57 UTC <byorgey> luite: huh, strange
2013-07-15 13:54:08 UTC <fryguybob> byorgey: haha
2013-07-15 13:55:36 UTC <jbracker> byorgey: I can only do relative transformations right, e.g. I can not reset the transformation matrix in diagrams?
2013-07-15 13:56:28 UTC <byorgey> jbracker: right
2013-07-15 13:57:30 UTC <jbracker> byorgey: Ok, then I will have to hand in the latest transformation instead of the complete transformation to my operations.
2013-07-15 13:59:09 UTC <jbracker> byorgey: Can I set the text color independent of other colors or is the line color reused for that?
2013-07-15 13:59:23 UTC <jbracker> foe the TwoD.Text stuff I mean
2013-07-15 14:01:14 UTC <byorgey> jbracker: one of them is reused... I think it's the fill color, actually.
2013-07-15 14:01:25 UTC <jbracker> ok
2013-07-15 14:01:35 UTC <byorgey> jbracker: If it would make things easier for you I would be happy to consider adding a separate text color attribute
2013-07-15 14:01:41 UTC <byorgey> it might be the right thing to do anyway
2013-07-15 14:02:16 UTC <jbracker> it does not make things complicated I just need to consider it while implementing
2013-07-15 14:02:22 UTC <byorgey> ok.
2013-07-15 14:13:37 UTC <luite> [1525924.418278] EXT4-fs (dm-3): Unaligned AIO/DIO on inode 135148527 by VBoxHeadless; performance will be poor.
2013-07-15 14:13:40 UTC <luite> whoops
2013-07-15 14:31:31 UTC <notdan> http://parenz.wordpress.com/2013/07/15/interactive-diagrams-gsoc-progress-report/ wrote another blog post, probably not very interesting to most of the people here though :)
2013-07-15 14:36:45 UTC <luite> notdan: at least it means that most of the annoying security work is probably done now :p
2013-07-15 14:37:16 UTC <notdan> Yep!
2013-07-15 14:37:43 UTC <luite> and plenty of time left for more diagrams-esque work
2013-07-15 14:38:03 UTC <byorgey> yay for annoying security work being done!
2013-07-15 15:21:37 UTC <jbracker> what is my easist option to create a T2 from a affine transformation matrix?
2013-07-15 18:08:51 UTC <notdan> byorgey: can I direct my interactive-diagrams notifications here or will the channel be too cluttered? maybe I could redirect them to #ghcjs if luite and hamishmack are OK with that
2013-07-15 18:10:11 UTC <gabor> notdan: why not try it for an hour and if it gets unbearable send it to #diagrams-chatter?
2013-07-15 18:18:05 UTC <notdan> I don't think it would get really unbearable - I don't commit that much - but I am afraid it would be mostly irrelevant
2013-07-15 18:44:25 UTC <byorgey> notdan: sure, you can direct them here
2013-07-15 18:45:13 UTC <byorgey> notdan: note that by default it only sends notifications of commits here
2013-07-15 18:45:34 UTC <byorgey> if you want to change which events generate notifications the only way to do it is by calling the github API manually =P
2013-07-15 18:46:35 UTC <byorgey> see http://cogo.wordpress.com/2012/11/07/irc-notifications-on-github/ though note there are now additional available events since that blog post was written (see the hook source code to find out which)
2013-07-15 18:48:13 UTC <notdan> Oh, so you use a custom bot
2013-07-15 18:52:31 UTC <byorgey> notdan: no
2013-07-15 18:53:45 UTC <byorgey> notdan: sorry, I think I was not clear.  If you want to *configure* the standard IRC hook to generate notifications for anything other than just commits, you have to make a single manual call to the github API.
2013-07-15 18:53:55 UTC <notdan> ah I see
2013-07-15 18:54:07 UTC <notdan> sorry I didn't properly read the post you linked, my bad
2013-07-15 18:54:13 UTC <byorgey> np
2013-07-15 19:06:56 UTC <fryguybob> ACTION is now within arms reach of the reset button.
2013-07-15 20:05:03 UTC <byorgey> check it:  http://byorgey.imagekind.com/factorization
2013-07-15 20:05:10 UTC <byorgey> password is the name of this channel (without the hash)
2013-07-15 20:05:32 UTC <carter> byorgey PRETTY :)
2013-07-15 20:05:35 UTC <byorgey> I've just ordered one, I'm going to wait until it comes and make sure it looks OK before publicizing more widely
2013-07-15 20:06:39 UTC <byorgey> so now you can get a ginormous custom-framed chart of factorization diagrams for $500, just like you've always wanted
2013-07-15 20:07:04 UTC <byorgey> or... you can just get a reasonbly-sized unframed one for like $20-30
2013-07-15 20:07:10 UTC <byorgey> well, plus shipping
2013-07-15 20:07:37 UTC <byorgey> but from what I can tell this company makes really high-quality prints
2013-07-15 20:11:10 UTC <fryguybob> byorgey: Cool, I think I know what Rebekah is getting for her birthday :D
2013-07-15 20:11:47 UTC <notdan> is that your poster for that FARM conference? looks cool
2013-07-15 20:13:58 UTC <carter> notdan thats the factorization diagram stuff that was really popular on the internet last december
2013-07-15 20:16:42 UTC <notdan> carter: yeah, I remember that
2013-07-15 20:17:12 UTC <notdan> it's how the diagrams got big, right?
2013-07-15 20:18:14 UTC <carter> well
2013-07-15 20:18:16 UTC <fryguybob> Wait we are big? Sweet!
2013-07-15 20:18:41 UTC <carter> "big" in the sense of everyone wrote their own wee factorization diagram code in every PL after brent did his 
2013-07-15 20:19:46 UTC <notdan> heh
2013-07-15 20:25:21 UTC <gabor> notdan: Deserialization error: ConversionException "length\ntoo few bytes\nFrom:\tdemandInput\n\n"
2013-07-15 20:25:35 UTC <gabor> just happened to me
2013-07-15 20:25:51 UTC <gabor> but it is not reproducible
2013-07-15 20:29:35 UTC <notdan> gabor: most likely it's an out-of-memory exception
2013-07-15 20:29:47 UTC <notdan> for some reason I struggle to catch async exceptions like those
2013-07-15 20:32:29 UTC <byorgey> fryguybob: when is Rebekah's birthday?
2013-07-15 20:33:09 UTC <byorgey> ACTION did not notice any particular increase in the popularity of diagrams due to the factorization diagram stuff =)
2013-07-15 20:33:41 UTC <byorgey> notdan: yeah, it's not for FARM, just for fun
2013-07-15 20:37:13 UTC <notdan> I see :)
2013-07-15 20:42:18 UTC <notdan> http://paste.hskll.org/get/157 oh, I like the background light thingy
2013-07-15 20:44:27 UTC <byorgey> woah, nice, how did you do that?
2013-07-15 20:44:48 UTC <byorgey> oh, it's just a star polygon with 2000 points?
2013-07-15 20:44:49 UTC <carter> woah
2013-07-15 20:44:52 UTC <carter> that is nice
2013-07-15 20:44:59 UTC <carter> accidental Moire?
2013-07-15 20:46:05 UTC <notdan> heh
2013-07-15 20:46:12 UTC <notdan> I didn't do it tho, somebody else has psted it
2013-07-15 20:46:15 UTC <notdan> pasted&
2013-07-15 20:46:17 UTC <notdan> *
2013-07-15 20:46:32 UTC <byorgey> ah
2013-07-15 20:46:45 UTC <byorgey> eventually I assume you are going to add an 'author' field
2013-07-15 20:48:06 UTC <notdan> Yeah
2013-07-15 20:48:16 UTC <notdan> Author, title, parent paste
2013-07-15 20:48:21 UTC <byorgey> right, cool
2013-07-15 20:49:12 UTC <notdan> I just need to swith to some templating engine first
2013-07-15 20:49:21 UTC <notdan> Right now I am using scotty + blaze-html
2013-07-15 20:49:50 UTC <notdan> which was Ok, but it's kinda painful to write HTML that way
2013-07-15 20:52:18 UTC <byorgey> hehe, right, fair enough
2013-07-15 20:53:13 UTC <byorgey> well, take your time, and let us know when you want suggestions.  There are a lot of suggestions I could make but I have refrained since I know you're probably already intending to do all of them anyway =)
2013-07-15 20:54:04 UTC <notdan> > 123 * 23
2013-07-15 20:54:04 UTC <iDiagrams> 2829
2013-07-15 20:54:04 UTC <lambdabot>   2829
2013-07-15 20:54:12 UTC <notdan> > 100000 * 9999
2013-07-15 20:54:13 UTC <iDiagrams> 999900000
2013-07-15 20:54:13 UTC <lambdabot>   999900000
2013-07-15 20:54:17 UTC <byorgey> iDiagrams!
2013-07-15 20:54:20 UTC <notdan> Faster than lambdabot ;)
2013-07-15 20:55:19 UTC <carter> now if only one was 32bit compiled so you could check that your math is portable :)
2013-07-15 20:55:26 UTC <carter> mwahahahah
2013-07-15 20:55:54 UTC <notdan> byorgey: actually I will be glad to hear all the suggestions! It would be super awesome if you could actually compile a list and send it to me
2013-07-15 20:56:15 UTC <notdan> or you can just send me your suggestion along the way and I'll write them down somewhere
2013-07-15 20:56:42 UTC <byorgey> notdan: ok! I will start a list and send it to you
2013-07-15 20:56:51 UTC <notdan> thanks
2013-07-15 20:57:13 UTC <notdan> btw if anyone else have any comments/suggestions please msg/mail me
2013-07-15 20:57:52 UTC <carter> notdan a meme version that lets you overlay diagrams on top of jpegs or gifs :)
2013-07-15 20:58:01 UTC <byorgey> nooooooooooo
2013-07-15 20:58:02 UTC <notdan> haha
2013-07-15 20:59:03 UTC <carter> giffy-diagrams!
2013-07-15 20:59:11 UTC <carter> portable embedded annimations :)
2013-07-15 20:59:31 UTC <carter> < 256 colors is ok :)
2013-07-15 20:59:31 UTC <carter> you get to pick which ones!
2013-07-15 21:00:35 UTC <carter> hrmmm
2013-07-15 21:00:40 UTC <carter> i've been wanting ot mess with gifs
2013-07-15 21:10:53 UTC <gabor> the 2000 polygon was mine ;-)
2013-07-15 21:11:14 UTC <notdan> the bot has to go for the  night, I haven't configured the security yet
2013-07-15 21:11:20 UTC <notdan> gabor: nice one!
2013-07-15 21:13:53 UTC <byorgey> notdan: sent
2013-07-15 21:14:22 UTC <byorgey> notdan: what will the bot do?  notify us of new pastes?
2013-07-15 21:14:31 UTC <notdan> thanks, will look into it tomorrow, gotta head to the bed now
2013-07-15 21:14:36 UTC <byorgey> ok, sleep well!
2013-07-15 21:15:13 UTC <notdan> byorgey: well I was thinking that you can evaluate code with it and if the user decides to evaluate a diagram it would post it to the site for him
2013-07-15 21:15:16 UTC <notdan> and return a link
2013-07-15 21:15:28 UTC <byorgey> ah, yes, that sounds great
2013-07-15 21:15:43 UTC <byorgey> I've been meaning to set up a bot so I'm glad someone else is doing it =)
2013-07-15 21:17:34 UTC <byorgey> ACTION goes home
2013-07-15 23:18:38 UTC <fryguybob> byorgey: Middle of August is her birthday.
2013-07-16 00:38:44 UTC <luite> hm what's a good cheap hotel in boston? :)
2013-07-16 00:40:03 UTC <fryguybob> luite: I wish we knew
2013-07-16 00:42:28 UTC <luite> are you staying in the hilton boston logan?
2013-07-16 00:55:27 UTC <fryguybob> luite: It seems like the best option.
2013-07-16 00:57:52 UTC <luite> hmm
2013-07-16 00:58:15 UTC <luite> perhaps i can stay one night and fly back home after my talk ;)
2013-07-16 00:59:23 UTC <fryguybob> I'm not sure if byorgey has found a better optio
2013-07-16 01:08:57 UTC <luite> hmm in the city center are cheaper options, but apparently that takes 40 mins by public transit, or more than 2 hours walking (according to google maps)
2013-07-16 01:09:13 UTC <fryguybob> yeah
2013-07-16 01:11:08 UTC <luite> hm i guess i really should make it a short trip and skip the main icfp stuff and nyc
2013-07-16 01:13:06 UTC <carter> luite asking one of the people in boston if they have a couch is probably cheapest
2013-07-16 01:13:47 UTC <carter> ask the organizers or some of the boston folks like edwardk for hotel / couch opinions
2013-07-16 01:13:48 UTC <luite> meh i don't know them. what if i turn out to be a huge asshole
2013-07-16 01:13:58 UTC <carter> luite well, then they'll tell the community
2013-07-16 01:14:00 UTC <carter> done
2013-07-16 01:14:01 UTC <carter> :)
2013-07-16 01:14:13 UTC <carter> also theres Air BnB even though its weird
2013-07-16 01:17:18 UTC <carter> luite point being : look into Air BnB, and also ask people who are currently in boston, or have been there for spans of time for ideas
2013-07-16 01:17:47 UTC <carter> likewise, sclv can probably help you figure out making the NYC part of the trip fit your budget
2013-07-16 01:18:11 UTC <carter> thats kind of one of his reponsibilities as organizer for nyc haskell
2013-07-16 01:18:39 UTC <luite> i haven't heard from the nyc haskell at all
2013-07-16 01:18:58 UTC <carter> luite you mean SCLV / gershom?
2013-07-16 01:19:07 UTC <carter> well, ping him 
2013-07-16 01:19:09 UTC <carter> he's on IRC
2013-07-16 01:19:10 UTC <carter> prolly
2013-07-16 01:46:17 UTC <luite> hm
2013-07-16 01:49:42 UTC <carter> there is NO downside to asking
2013-07-16 01:49:57 UTC <carter> bah, trying to get agda installed and usable 
2013-07-16 02:07:39 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1412d1ab6 http://travis-ci.org/diagrams/diagrams-core/builds/9121787 The build has errored.
2013-07-16 02:09:15 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14450a06e http://travis-ci.org/diagrams/diagrams-lib/builds/9121794 The build has errored.
2013-07-16 02:12:29 UTC <travis-ci> [travis-ci] 13dual-tree/06master 145d59dd0 http://travis-ci.org/diagrams/dual-tree/builds/9121832 The build passed.
2013-07-16 02:13:40 UTC <travis-ci> [travis-ci] 13dual-tree/06dual-tree-0.1 14986d88f http://travis-ci.org/diagrams/dual-tree/builds/9121871 The build passed.
2013-07-16 02:14:10 UTC <travis-ci> [travis-ci] 13dual-tree/06master 14802bee7 http://travis-ci.org/diagrams/dual-tree/builds/9121873 The build passed.
2013-07-16 02:15:16 UTC <byorgey> luite: want to share a room with me and fryguybob?
2013-07-16 02:15:19 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1412d1ab6 http://travis-ci.org/diagrams/diagrams-core/builds/9121787 The build passed.
2013-07-16 02:17:24 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14450a06e http://travis-ci.org/diagrams/diagrams-lib/builds/9121794 The build passed.
2013-07-16 02:18:47 UTC <luite> byorgey: in the hilton logan hotel?
2013-07-16 02:19:58 UTC <fryguybob> luite: Yes
2013-07-16 02:22:01 UTC <luite> hm they only have rooms with 2 double beds?
2013-07-16 02:22:34 UTC <byorgey> yes, that's true.  so we'd either have to share double beds or take turns sleeping on the floor
2013-07-16 02:22:38 UTC <fryguybob> luite: Yeah, I told byorgey I'm good at sleeping on the edge of the bed.
2013-07-16 02:22:44 UTC <byorgey> it's also possible the hotel has a cot they could put in the room
2013-07-16 02:22:55 UTC <byorgey> hotels can often do that sort of thing
2013-07-16 02:23:51 UTC <byorgey> luite: note also that our advisors are paying for it, I have not quite thought through all the ethics of the situation but probably we don't need to split the cost three ways.  Maybe you don't even have to pay at all.
2013-07-16 02:24:59 UTC <luite> well the room is more expensive for more guests
2013-07-16 02:25:11 UTC <byorgey> oh that's true, a bit more
2013-07-16 02:25:20 UTC <byorgey> so maybe you could just pay the difference
2013-07-16 02:26:40 UTC <luite> hm when do you want to book?
2013-07-16 02:27:17 UTC <byorgey> anytime really
2013-07-16 02:27:23 UTC <fryguybob> yeah
2013-07-16 02:27:50 UTC <byorgey> so if you want to look into other options take your time
2013-07-16 02:28:58 UTC <byorgey> ok, I'm off to bed, night all
2013-07-16 02:29:22 UTC <carter> luite yay! 
2013-07-16 02:29:27 UTC <carter> see people want to help
2013-07-16 02:31:51 UTC <luite> byorgey: ok, me too. tnx for the offer :)
2013-07-16 05:52:35 UTC <notdan> are you guys going to the ICFP?
2013-07-16 05:53:07 UTC <carter> i hope to :)
2013-07-16 05:53:17 UTC <carter> luite plans to,  fryguybob  and byorgey  def are
2013-07-16 08:43:29 UTC <jbracker> what is my easist option to create a T2 from a affine transformation matrix?
2013-07-16 09:17:21 UTC <alpounet> woah
2013-07-16 09:17:22 UTC <alpounet> http://www.josleys.com/show_gallery.php?galid=342
2013-07-16 09:17:30 UTC <alpounet> "Hyperbolic tesselations in 3D"
2013-07-16 09:17:55 UTC <alpounet> ClaudiusMaximus, don't know if you have worked on that kind of things, but these definitely look awesome
2013-07-16 09:20:23 UTC <alpounet> from the inside in particular
2013-07-16 09:38:25 UTC <ClaudiusMaximus> alpounet: nice!  I've only done hyperbolic stuff in 2d
2013-07-16 09:49:09 UTC <alpounet> luite, notdan, so, did you manage guys to wrap the selinux stuffs up? 
2013-07-16 09:56:06 UTC <jbracker> byorgey: There?
2013-07-16 09:56:38 UTC <alpounet> looks like it
2013-07-16 09:56:44 UTC <alpounet> (re. selinux)
2013-07-16 09:59:41 UTC <notdan> alpounet: yep :) I'll be refactoring the code later and moving the workers code to a separate library
2013-07-16 10:00:18 UTC <notdan> For your app you could use an IO worker (performs IO actions in a separate process with limits) or roll your own worker for your monad or whatnot
2013-07-16 10:06:33 UTC <alpounet> notdan, IO worker should be fine for a starter
2013-07-16 10:07:08 UTC <alpounet> i just need to build a hs file (not even entirely, getting the Core output is just enough) and dump the Core
2013-07-16 10:07:13 UTC <alpounet> that should be pretty simple
2013-07-16 10:18:06 UTC <jbracker> I am trying to use the diagrams cairo backend but for some reason I always get the error that "CairoOptions" is not exported by "Diagrams.Backend.Cairo"
2013-07-16 10:18:43 UTC <jbracker> or that it's simply not in scope
2013-07-16 10:18:44 UTC <jbracker> ...
2013-07-16 10:22:43 UTC <jbracker> oh... good thing the _sources_ tell you that you need to import Diagrams.Backend.Cairo.Internal
2013-07-16 10:27:10 UTC <mr-> jbracker: documentation works :-)
2013-07-16 11:00:57 UTC <byorgey> jbracker: re: making a T2 from a matrix, no one has ever wanted that before... =)
2013-07-16 11:01:21 UTC <byorgey> jbracker: you'll have to just make one explicitly using the Transformation constructor
2013-07-16 11:01:21 UTC <jbracker> there are some CPP hacks in Diagrams.Backend.Cairo that could be removed or rewritten du allow >=7.2
2013-07-16 11:01:41 UTC <jbracker> byorgey: Still not sure how that works
2013-07-16 11:02:10 UTC <jbracker> I got a function Matrix -> R2 -> R2
2013-07-16 11:02:25 UTC <jbracker> how would I put that in there?
2013-07-16 11:02:43 UTC <byorgey> jbracker: does that include the translation?
2013-07-16 11:02:51 UTC <jbracker> Yes!
2013-07-16 11:03:03 UTC <byorgey> so it really should be  Matrix -> P2 -> P2 ?
2013-07-16 11:03:13 UTC <byorgey> translation is supposed to have no effect on R2
2013-07-16 11:03:41 UTC <jbracker> ok right, still I don't know how to put it in the Transformation
2013-07-16 11:03:52 UTC <byorgey> sure, I'm getting there, just clarifying
2013-07-16 11:04:13 UTC <byorgey> well, you have to separate out the translation component from the linear component
2013-07-16 11:05:18 UTC <byorgey> the first step would be to make a modified function  Matrix -> R2 -> R2  which ignores the translation
2013-07-16 11:05:45 UTC <byorgey> do you have a function to invert a Matrix?
2013-07-16 11:05:51 UTC <jbracker> yes I do
2013-07-16 11:05:57 UTC <byorgey> ok, great.
2013-07-16 11:06:02 UTC <jbracker> and since its affine that should always work
2013-07-16 11:07:31 UTC <byorgey> so you want to do something like   Transformation (run m <-> run (inv m)) (run (transpose m) <-> run (transpose (inv m))) (<translation component of m>)
2013-07-16 11:07:40 UTC <byorgey> where 'run :: Matrix -> R2 -> R2'
2013-07-16 11:07:52 UTC <byorgey> but run should ignore the translation component
2013-07-16 11:08:24 UTC <byorgey> actually, don't worry about changing run, just first make a version of the matrix where you zero out the translation component
2013-07-16 11:08:56 UTC <jbracker> For the x component that would mean: xx m * x + xy m * y + x0 m ===> xx m * x + xy m * y
2013-07-16 11:09:23 UTC <byorgey> right
2013-07-16 11:11:13 UTC <byorgey> anyway, does that make sense?
2013-07-16 11:11:31 UTC <jbracker> what does transpose do?
2013-07-16 11:11:40 UTC <jbracker> take just the translation?
2013-07-16 11:11:42 UTC <notdan> Hm, maybe I should use Hastache templates for the site. The look OK. Heist's test-suite does not compile
2013-07-16 11:12:01 UTC <byorgey> transposing a matrix means reflecting it around the diagonal axis
2013-07-16 11:12:05 UTC <notdan> all the popular Haskell web frameworks do not compile with the latest GHC out of the box
2013-07-16 11:12:24 UTC <byorgey> so  transpose [[a b] [c d]]   ==>  [[a c] [b d]]
2013-07-16 11:12:59 UTC <jbracker> so there I also lose the translation component?
2013-07-16 11:13:02 UTC <byorgey> of course this does not make sense for a 2x3 matrix which includes a translation component in the last column, that's one reason you need to put zeros in that column first
2013-07-16 11:13:22 UTC <byorgey> in this case  transpose [[a b 0] [c d 0]] ==> [[a c 0] [b d 0]]
2013-07-16 11:14:10 UTC <byorgey> so let me state more precisely what I wrote above
2013-07-16 11:14:47 UTC <byorgey> let m' = m without the translation component, then you want  Transformation (run m' <-> run (inv m')) (run (transpose m') <-> run (transpose (inv m'))) (<translation component of m>)
2013-07-16 11:15:29 UTC <jbracker> <translation component of m> :: R2 ???
2013-07-16 11:15:49 UTC <byorgey> yes
2013-07-16 11:16:29 UTC <byorgey> think of Matrix as isomorphic to (R2,R2,R2)  (the three columns)
2013-07-16 11:17:07 UTC <byorgey> the first two R2 say where unitX and unitY are sent by the transformation (without translation)
2013-07-16 11:17:14 UTC <byorgey> the third R2 is the amount of translation.
2013-07-16 11:25:36 UTC <byorgey> anyway, we should probably add a generic function for doing matrix -> Transformation  conversion in Diagrams.Core.Transformation
2013-07-16 11:26:31 UTC <byorgey> but it would have to be a bit more general since it needs to work for arbitrary dimensions.  Hopefully the above discussion will be good enough for what you need at the moment.
2013-07-16 11:30:42 UTC <jbracker> byorgey: Does this look correct: http://pastebin.com/wGaHbNAZ
2013-07-16 11:38:47 UTC <byorgey> jbracker: yes, I think so
2013-07-16 11:40:12 UTC <jbracker> ok then I will try it when the meeting with tim is over. Thanks!
2013-07-16 12:19:40 UTC <jbracker> byorgey: If I clip with an empty path, the clip area will be empty right?
2013-07-16 12:38:19 UTC <byorgey> jbracker: hmm, honestly I am not sure what happens if you clip with an empty path
2013-07-16 12:39:04 UTC <byorgey> jbracker: if something happens other than what you think should happen, file a bug report and we can discuss it
2013-07-16 12:39:22 UTC <jbracker> ok
2013-07-16 12:46:07 UTC <byorgey> ugh, 96F/35C here today =(
2013-07-16 13:10:27 UTC <fryguybob> :(
2013-07-16 13:13:19 UTC <luite> :(
2013-07-16 13:13:40 UTC <luite> 24C here :p
2013-07-16 14:29:47 UTC <fryguybob> byorgey: Yesterday we were working in the machine room on our shiny new haswell machine and the AC floor vents were blasting really cold air right under our chairs.  I guess there are some benefits to being a systems person :D.
2013-07-16 14:31:14 UTC <byorgey> haha, I guess so =)
2013-07-16 14:32:13 UTC <byorgey> though, to be fair, my office is quite comfortable today.  Usually it is so cold during the summer I have to wear a sweater (which I keep in my office for that purpose).
2013-07-16 14:36:53 UTC <notdan> Hm, apparently snap uses enumerators, I thought that library as dead and ditched in favour of iteratees/conduit
2013-07-16 14:37:29 UTC <notdan> Oh, they are switching to io-streams
2013-07-16 14:52:30 UTC <byorgey> I think it was the snap people who developed io-streams
2013-07-16 17:21:58 UTC <byorgey> > 2 + 3
2013-07-16 17:21:59 UTC <lambdabot>   5
2013-07-16 17:23:02 UTC <byorgey> notdan: does InteractiveDiagr do anything interesting yet?
2013-07-16 17:52:38 UTC <notdan> Not really, it only evaluates expressions (faster than lambdabot)
2013-07-16 17:52:46 UTC <notdan> I'll make it paste diagrams once I am finished with templating
2013-07-16 18:01:03 UTC <byorgey> ok, no worries, just curious =)
2013-07-16 18:05:08 UTC <notdan> I didn't manage to compile any substantial web-server/framework with GHC7.7 and Heist doesn't play well with Scotty, I have switched to Hastache for now
2013-07-16 18:08:13 UTC <byorgey> sounds good
2013-07-16 18:09:54 UTC <byorgey> notdan: btw, you can set 'message without join' in your IRC hook settings, that way the github bot doesn't clutter the channel with additional joins and parts
2013-07-16 18:13:47 UTC <notdan> Oh, ok, I will
2013-07-16 18:13:58 UTC <notdan> I didn't notice that your channel was -n
2013-07-16 18:15:03 UTC <byorgey> I made it -n for this purpose =)
2013-07-16 18:55:22 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1408164e9 http://travis-ci.org/diagrams/diagrams-lib/builds/9150221 The build passed.
2013-07-16 19:02:43 UTC <carter> luite question: whats the storage size of your set of Hdiff repos?
2013-07-16 19:03:33 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1414cf9b9 http://travis-ci.org/diagrams/diagrams-lib/builds/9150593 The build passed.
2013-07-16 19:06:21 UTC <luite> carter: dunno exactly, it's lots of very small files
2013-07-16 19:06:33 UTC <tgeeky> fryguybob: yes, it's nice to be in a room with a chiller, until you have to do something to 50 or 200 machines, and you have to stop every once in a while with the teeth chatters.
2013-07-16 19:06:35 UTC <luite> the archives themselves are under 2GB
2013-07-16 19:06:39 UTC <carter> ok
2013-07-16 19:06:42 UTC <carter> all together?
2013-07-16 19:06:42 UTC <carter> cool
2013-07-16 19:07:02 UTC <luite> yeah but the git repos make it bigger, and millions of files with inode overhead
2013-07-16 19:07:07 UTC <tgeeky> quick poll: current recommended linux distro, go
2013-07-16 19:07:16 UTC <carter> luite how big is the folder with all of them?
2013-07-16 19:07:23 UTC <luite> lemme check
2013-07-16 19:07:28 UTC <carter> thanks
2013-07-16 19:12:34 UTC <carter> :)
2013-07-16 19:13:03 UTC <luite> du takes a while :)
2013-07-16 19:13:10 UTC <carter> soke
2013-07-16 19:13:18 UTC <luite> oh it just finished
2013-07-16 19:13:22 UTC <luite> it says 8.9GB
2013-07-16 19:13:37 UTC <carter> and thats because of all the extra git overhead?
2013-07-16 19:14:02 UTC <luite> also because everything is extracted
2013-07-16 19:14:07 UTC <luite> and it includes the original archives
2013-07-16 19:14:16 UTC <notdan> for some reason this chat reminded me of thislink: http://www.olark.com/spw/2011/08/you-can-list-a-directory-with-8-million-files-but-not-with-ls/
2013-07-16 19:14:33 UTC <luite> oh number of files is not as bad as i thought, 809014
2013-07-16 19:15:01 UTC <luite> notdan: fortunately it's all in different dirs
2013-07-16 19:15:34 UTC <luite> reminds me of when i tried to abuse the filesystem as a database, with millions of records as files in a db. it failed horribly obviously :)
2013-07-16 19:17:29 UTC <carter> hehe
2013-07-16 20:00:55 UTC <gabor> notdan: I hoe to got
2013-07-16 20:01:03 UTC <gabor> damn...
2013-07-16 20:01:24 UTC <gabor> notdan: I hope to go to IFL
2013-07-16 20:02:42 UTC <gabor> notdan: do you build (released) diagrams with GHC HEAD ?
2013-07-16 20:03:05 UTC <gabor> or the github trunk version of diagrams?
2013-07-16 20:10:11 UTC <notdan> github version
2013-07-16 20:11:02 UTC <byorgey> github version of diagrams should build on GHC HEAD, if you have trouble, let me know
2013-07-16 20:11:07 UTC <notdan> github version of diagrams, but 'active' (package) needs a little patch http://parenz.wordpress.com/2013/06/12/ghcjs-build/
2013-07-16 20:11:17 UTC <notdan> just a version bump
2013-07-16 20:11:50 UTC <byorgey> oh right
2013-07-16 20:11:59 UTC <byorgey> I ought to release a patched version of that
2013-07-16 20:12:28 UTC <byorgey> it's hard to really be motivated though since we're in the process of ripping active to pieces and rewriting it from scratch =)
2013-07-16 20:12:34 UTC <notdan> yeah :)
2013-07-16 20:13:17 UTC <notdan> I wish people would always use MonadIO constrain instead of just limiting functions to IO
2013-07-16 20:13:43 UTC <notdan> But Control.Monad.Morph is a life savior!
2013-07-16 20:14:53 UTC <notdan> luite: so I ment to ask, what version of Emacs have you ended up using?
2013-07-16 20:33:33 UTC <luite> notdan: oh sorry i forgot to answer, i switched back to emacs for os x 24, since they both had the sam crash
2013-07-16 20:33:56 UTC <notdan> oh :(
2013-07-16 20:34:26 UTC <luite> why, is aquamacs better?
2013-07-16 20:35:46 UTC <notdan> nah, I just got used to it :) It actually started to perform pretty bad, freezing up, using all the CPU time
2013-07-16 20:36:10 UTC <notdan> I was hoping you had switched to some version of Aquamacs and it worked flawlessly and briliantly :P
2013-07-16 20:36:18 UTC <notdan> I'll get Emacs for OSX 24 too
2013-07-16 20:36:45 UTC <luite> ah
2013-07-16 20:41:31 UTC <tgeeky> OSX 24 looks foreign to me?
2013-07-16 20:41:34 UTC <tgeeky> what version is it?
2013-07-16 20:42:40 UTC <tgeeky> oh, emacs version 24
2013-07-16 20:43:03 UTC <notdan> Yeah, that's emacs' version, not OSX's :)
2013-07-16 21:01:05 UTC <luite> tgeeky: hehe not much software has version numbers that high. even linux only goes to 3.11
2013-07-16 22:48:27 UTC <notdan> https://gist.github.com/co-dan/6015894 
2013-07-16 22:48:54 UTC <notdan> in order to do this I had to rewrite Scotty to use monad transformers instead of just monads :D
2013-07-16 22:49:04 UTC <notdan> ok, 3am, time to go to bed I guess
2013-07-16 22:49:39 UTC <luite> :)
2013-07-16 22:49:48 UTC <luite> oh less time difference than i thought
2013-07-16 22:50:02 UTC <luite> i'd have guessed it was almost 4am now there
2013-07-16 22:52:52 UTC <luite> looks like my guesses are bad, only ~33 degrees difference, with 15 degrees per time zone
2013-07-16 23:05:31 UTC <alpounet> luite, you're still in NL right?
2013-07-16 23:07:03 UTC <luite> yeah
2013-07-16 23:08:07 UTC <alpounet> looking for a job?
2013-07-16 23:08:14 UTC <alpounet> or have you found one already?
2013-07-16 23:13:08 UTC <luite> haven't found one
2013-07-16 23:37:42 UTC <travis-ci> [travis-ci] 13active/06active-0.1 1435b2139 http://travis-ci.org/diagrams/active/builds/9160442 The build passed.
2013-07-16 23:38:09 UTC <byorgey> notdan: just released active-0.1.0.5 which relaxes the upper bound on base
2013-07-16 23:38:18 UTC <travis-ci> [travis-ci] 13active/06master 140528da7 http://travis-ci.org/diagrams/active/builds/9160444 The build passed.
2013-07-16 23:54:23 UTC <travis-ci> [travis-ci] 13active/06master 1404587d2 http://travis-ci.org/diagrams/active/builds/9160724 The build passed.
2013-07-16 23:58:57 UTC <travis-ci> [travis-ci] 13active/06master 14a5ebc06 http://travis-ci.org/diagrams/active/builds/9160829 The build passed.
2013-07-17 00:05:37 UTC <travis-ci> [travis-ci] 13active/06active-0.1 146d8c9a5 http://travis-ci.org/diagrams/active/builds/9160957 The build passed.
2013-07-17 02:53:38 UTC <byorgey> martingalemeasur: welcome =)
2013-07-17 02:54:33 UTC <byorgey> ACTION -> bed
2013-07-17 16:59:56 UTC <byorgey> I'm back, did I miss anything? =)
2013-07-17 17:23:10 UTC <byorgey> mgsloan: had a chance to look at my pull request with the new parametric stuff?
2013-07-17 17:23:41 UTC <byorgey> no rush, I just wanted to make sure you saw it.  I would love to have your comments since it's based on your code.
2013-07-17 17:24:29 UTC <mgsloan> byorgey: I haven't yet, but I'm glad you're adding such stuff!
2013-07-17 17:24:35 UTC <mgsloan> I can take a look at it now
2013-07-17 17:24:42 UTC <byorgey> cool
2013-07-17 17:25:10 UTC <mgsloan> Hopefully my code didn't lead you too far astray ;)
2013-07-17 17:25:57 UTC <byorgey> hehe, I don't think so =)
2013-07-17 17:26:03 UTC <mgsloan> yeah, looks like the typeclasses stayed very similar! neat!
2013-07-17 17:26:08 UTC <byorgey> most of your code is still intact, yep
2013-07-17 17:26:28 UTC <byorgey> I think I merged the two arc length-related type classes into one
2013-07-17 17:27:05 UTC <byorgey> other than that I didn't change much, most of the work was in implementing the new instances of course
2013-07-17 17:27:15 UTC <mgsloan> Yup!
2013-07-17 17:36:01 UTC <mgsloan> byorgey: Looks good to me!
2013-07-17 17:36:22 UTC <mgsloan> The only things that are concerning are the behavior of sectionable for closed trails
2013-07-17 17:36:35 UTC <mgsloan> (but there's a comment about that)
2013-07-17 17:36:46 UTC <byorgey> oh... what does the comment say?  I forget =)
2013-07-17 17:37:13 UTC <byorgey> and why is it concerning?
2013-07-17 17:37:20 UTC <mgsloan> https://github.com/diagrams/diagrams-lib/pull/92/files#L7R451
2013-07-17 17:37:29 UTC <mgsloan> Oh, it's not too concerning, it's just tricky
2013-07-17 17:37:44 UTC <byorgey> oh, whoops, I forgot to expand that comment =)
2013-07-17 17:38:06 UTC <byorgey> ah, right, loops get split into two lines
2013-07-17 17:38:40 UTC <mgsloan> If you do support sectioning across the loop boundary, then you also start to ask questions like "what if I ask for (0, 1000) on a loop that has domain (0, 1)? Does it go around 1000 times?"
2013-07-17 17:40:11 UTC <byorgey> oh.... right
2013-07-17 17:40:21 UTC <byorgey> hmm
2013-07-17 17:40:38 UTC <byorgey> The Parametric instance for loops does in fact "do the right thing" (wrapping around) for the parametrization
2013-07-17 17:41:12 UTC <mgsloan> Right, so logically sectionable should also do that
2013-07-17 17:41:41 UTC <byorgey> though in a sense splitting a loop at a certain parameter should result in a *single* line
2013-07-17 17:42:00 UTC <byorgey> so the type of splitAtParam does not even really make sense for loops
2013-07-17 17:42:21 UTC <mgsloan> Sectionable is funny because it's saying "I can precompose with a linear function"
2013-07-17 17:42:56 UTC <byorgey> what do you mean by that?
2013-07-17 17:43:26 UTC <mgsloan> It's a linear transformation on the domain
2013-07-17 17:43:41 UTC <byorgey> oh, I see
2013-07-17 17:43:41 UTC <mgsloan> So with loops that ends up bringing up the periodicness of the domain
2013-07-17 17:44:11 UTC <mgsloan> splitAtParam mostly exists because it happens to be efficient for beziers
2013-07-17 17:44:17 UTC <byorgey> right
2013-07-17 17:44:18 UTC <byorgey> oh, actually, I note that I did NOT make a Sectionable instance for Trail' Loop.
2013-07-17 17:44:38 UTC <byorgey> but we want an instance for Trail  so the question is what you do if the Trail happens to contain a Loop.
2013-07-17 17:45:23 UTC <byorgey> so maybe the comment should say "here's what happens when you have a Loop, but it doesn't make sense, so Don't Do That"
2013-07-17 17:46:00 UTC <mgsloan> Hmm, maybe :)
2013-07-17 17:46:54 UTC <mgsloan> This was one of my main motives for "Periodic": https://github.com/mgsloan/curve/blob/master/Data/Curve/Periodic.hs
2013-07-17 17:47:40 UTC <byorgey> ah, interesting =)
2013-07-17 17:47:51 UTC <mgsloan> Things get really messy when you start doing operations on periodics, though
2013-07-17 17:47:56 UTC <byorgey> I bet
2013-07-17 17:48:29 UTC <byorgey> though I strongly believe that's just because we haven't found the right semantics, not because it's inherently messy =)
2013-07-17 17:49:05 UTC <mgsloan> Hmm, maybe so!
2013-07-17 17:49:07 UTC <byorgey> I wouldn't be entirely surprised if four years from now we end up completely rewriting all this stuff again =)
2013-07-17 17:49:16 UTC <byorgey> once we understand it a bit better
2013-07-17 17:50:33 UTC <mgsloan> One decent-ish semantics would be "if it goes around more than once, it's identity"
2013-07-17 17:52:10 UTC <mgsloan> The reason it's not so decent is that it'd break any laws you might imagine that relate atParam / atStart / atEnd / section
2013-07-17 17:52:41 UTC <mgsloan> Ahh, could just remove all complete loops
2013-07-17 17:53:38 UTC <byorgey> why remove complete loops?
2013-07-17 17:54:08 UTC <byorgey> I kind of like the idea of loops that can go around more than once.  It seems elegant.  Like the "usual" loops that only go around once are sort of a "degenerate case". =)
2013-07-17 17:54:24 UTC <byorgey> mgsloan: ^^^ how does that comment look to you?
2013-07-17 17:54:41 UTC <mgsloan> Hmm, yeah, that's reasonable, maybe I'm worrying too much about performance
2013-07-17 17:54:57 UTC <byorgey> performance? what's that?
2013-07-17 17:55:04 UTC <byorgey> ;-)
2013-07-17 17:56:28 UTC <byorgey> hmm, this makes me think perhaps we want a function like cutLoop but which takes a parameter as an argument
2013-07-17 17:56:47 UTC <byorgey> i.e. like splitAtParam except for the special case of loops where what you get out is a line
2013-07-17 17:57:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06parametric 149ecc5fb http://travis-ci.org/diagrams/diagrams-lib/builds/9198894 The build has errored.
2013-07-17 17:57:24 UTC <byorgey> o noes!
2013-07-17 17:58:17 UTC <mgsloan> Yup, comment looks good to me!
2013-07-17 17:58:26 UTC <byorgey> oh, I see, don't worry about that build failure, it's because of some changes in HEAD that aren't merged into parametric
2013-07-17 17:58:33 UTC <byorgey> but it should be fine
2013-07-17 17:58:51 UTC <byorgey> mgsloan: great!  want to merge it?
2013-07-17 17:58:53 UTC <mgsloan> If someone really needs the loopy semantics it shouldn't be all that hard to implement it
2013-07-17 17:58:59 UTC <byorgey> agreed
2013-07-17 17:59:57 UTC <byorgey> . o O ( cutLoop/splitAtParam are sort of like a combinatorial derivative... C' -> L; L' -> L^2 )
2013-07-17 18:00:31 UTC <mgsloan> Ah, so this is your clever scheme to get me back to diagramsing!  It might just work :D
2013-07-17 18:00:35 UTC <byorgey> muahahaha!!!
2013-07-17 18:00:35 UTC <mgsloan> Sure I can merge it
2013-07-17 18:00:36 UTC <byorgey> thanks =)
2013-07-17 18:00:51 UTC <mgsloan> I have been itching to do a bit of opensource on the side
2013-07-17 18:01:34 UTC <mgsloan> thanks for rescuing my parametrics code from obscurity! :D
2013-07-17 18:03:42 UTC <byorgey> you're welcome!  I'd wanted to get around to it for a while but suddenly when working on arrows I had a specific reason to want it rather than just a general desire.
2013-07-17 18:04:42 UTC <byorgey> mgsloan: I guess it's probably too far, but might you be at ICFP?
2013-07-17 18:07:35 UTC <mgsloan> I'm considering going!  Afterall, it's closer than last year
2013-07-17 18:07:58 UTC <byorgey> that's true =)
2013-07-17 18:08:37 UTC <byorgey> fryguybob and I will be there, and hopefully luite
2013-07-17 18:08:56 UTC <byorgey> mgsloan: have you even met fryguybob ?
2013-07-17 18:09:19 UTC <mgsloan> I don't think so!  There's lots of the Haskell community that I haven't met
2013-07-17 18:09:19 UTC <byorgey> I think you alternated Hac Phis
2013-07-17 18:09:38 UTC <mgsloan> Yup, 'fraid so
2013-07-17 18:09:55 UTC <byorgey> well in that case you simply *must* come. ;-)  I would love to get the two of you in the same room.
2013-07-17 18:10:45 UTC <mgsloan> It would definitely be interesting to meet some GHC people, other than a few folks at hac phi / oplss, I haven't really met any of them
2013-07-17 18:10:58 UTC <mgsloan> Yeah, that'd be fun!
2013-07-17 18:12:07 UTC <byorgey> because you are both People Who Actually Know Stuff About Computational Geometry
2013-07-17 18:12:10 UTC <byorgey> and also just cool people
2013-07-17 18:12:45 UTC <byorgey> yeah, ICFP is a ton of fun for meeting people
2013-07-17 18:15:52 UTC <mgsloan> Hmm, yeah, I'm sure it'd be a blast
2013-07-17 18:16:00 UTC <mgsloan> I always go away from such things extra motivated
2013-07-17 18:22:10 UTC <fryguybob> mgsloan: Yes come to ICFP!
2013-07-17 18:26:11 UTC <luite> i might also come
2013-07-17 18:27:12 UTC <luite> ah byorgey mentioned that
2013-07-17 18:28:28 UTC <byorgey> oh, I think carter_away is coming too?
2013-07-17 18:29:00 UTC <byorgey> not sure if there are any other #diagrams regulars planning to come
2013-07-17 18:29:36 UTC <mgsloan> I'm certainly hoping to make it!  I know johnw is going, would be fun to see him in person too
2013-07-17 18:31:34 UTC <byorgey> ah, yeah, I'm looking forward to meeting him too
2013-07-17 18:31:56 UTC <byorgey> I guess you probably haven't met a whole lot of your coworkers in person, eh?
2013-07-17 18:34:40 UTC <luite> hmm
2013-07-17 18:46:36 UTC <carter_away> byorgey i hope to go
2013-07-17 18:46:37 UTC <carter_away> yes
2013-07-17 18:47:03 UTC <luite> ok, so they're still expecting me at nyc, and ryant apparently offered a couch, which i forgot :)
2013-07-17 18:47:47 UTC <carter_away> luite yes
2013-07-17 18:47:48 UTC <carter> luite i may have told them they needed to be more explicit about that :)
2013-07-17 18:48:00 UTC <luite> ah
2013-07-17 18:48:22 UTC <luite> tnx :)
2013-07-17 18:48:37 UTC <carter> np
2013-07-17 18:48:44 UTC <carter> i'm doing a lot of that lately
2013-07-17 18:48:55 UTC <carter> luite relatedly: all the IOS Haskellers want TH :)
2013-07-17 18:49:15 UTC <carter> ie they want your th cross compiler patch
2013-07-17 18:49:21 UTC <luite> i'll try to stay 2 weeks then
2013-07-17 18:49:31 UTC <luite> oh i'm not sure that's terribly usable for them
2013-07-17 18:49:49 UTC <luite> since i can piggyback on the native compiler
2013-07-17 18:50:15 UTC <luite> but perhaps with some changes, i haven't really thought it through though
2013-07-17 18:50:27 UTC <carter> luite yeah
2013-07-17 18:50:28 UTC <carter> the point being: you've already gotten part of the work done
2013-07-17 18:50:53 UTC <luite> i want to finish the plugin-able ffi typechecking and desugaring first though
2013-07-17 18:51:26 UTC <carter> are those tightly coupled?
2013-07-17 18:52:39 UTC <luite> not with the th patch
2013-07-17 18:52:45 UTC <carter> ok
2013-07-17 18:53:08 UTC <carter> mainly the reason its better sooner rather than later is then the IOS folks can test it out / find bugs sooner 
2013-07-17 18:53:21 UTC <carter> or mod it to work for them too
2013-07-17 18:53:45 UTC <carter> even if near term that requires both native and cross compilers hooked in
2013-07-17 18:53:49 UTC <carter> that'd still be nice 
2013-07-17 18:54:01 UTC <luite> but there have been some changes in plugins, with some weird workarounds for global static data
2013-07-17 18:54:26 UTC <carter> wellâ¦ ask people for help then!
2013-07-17 18:54:48 UTC <carter> its faster than getting stuck
2013-07-17 18:54:51 UTC <luite> oh i'm not stuck, i just need to work that workaround into the patch
2013-07-17 18:55:03 UTC <luite> it already works if you link with the ghc api
2013-07-17 18:55:04 UTC <carter> ok
2013-07-17 18:55:20 UTC <carter> ah
2013-07-17 18:55:22 UTC <carter> ok
2013-07-17 18:55:23 UTC <carter> you're the expert (relatively)
2013-07-17 18:55:39 UTC <luite> but the problem is that a statically linked ghc + static api lib for the plugin means two copies of the global data everywhere
2013-07-17 18:55:51 UTC <luite> so if you use it as an actual plugin, it breaks
2013-07-17 18:56:25 UTC <carter> oh
2013-07-17 18:56:43 UTC <carter> and this is an issue for you (not TH) because ghcjs pretends to be a plugin
2013-07-17 18:57:17 UTC <luite> no wait, this is for the typechecking stuff
2013-07-17 18:57:53 UTC <luite> for the TH stuff, the problem is that i can let GHC load the static libs for the native platform, even though it is generating js code
2013-07-17 18:57:54 UTC <carter> huh?
2013-07-17 18:58:08 UTC <luite> which is probably not possible with a cross compiler
2013-07-17 18:58:19 UTC <luite> because it's just a plugin for the native compiler
2013-07-17 18:58:36 UTC <carter> huh
2013-07-17 18:58:50 UTC <luite> err, bleh i'm saying that wrong, sorry, not a plugin
2013-07-17 18:59:00 UTC <carter> its ok
2013-07-17 18:59:29 UTC <luite> sorry for being incoherent, bleh, i hope my talkk wil be better :)
2013-07-17 18:59:31 UTC <carter> luite more importantly: if you actively ping manuel, i think he would be willing to help 
2013-07-17 18:59:37 UTC <carter> its ok, its late over there
2013-07-17 18:59:47 UTC <luite> not really, 21:00 hours
2013-07-17 19:00:06 UTC <carter> :P
2013-07-17 19:00:20 UTC <luite> my productivity in the past week was rather abysmal, check my github activity, nonexistent :(
2013-07-17 19:00:59 UTC <carter> its ok
2013-07-17 19:01:06 UTC <carter> mine is 0 if you ignore issue tracker stuff
2013-07-17 19:29:29 UTC <luite> mgsloan: do you know what you're doing with hotel for icfp? sharing a room with johnw?
2013-07-17 19:30:05 UTC <mgsloan> luite: not sure if I'm going yet, but I dunno, I've heard that the ICFP hotel is pretty pricey
2013-07-17 19:31:15 UTC <luite> yeah, i can't afford it for a whole week on my own. byorgey/fryguybob offered to share a room with me, which would be cool, but i dunno what you're doing
2013-07-17 19:33:39 UTC <carter> mgsloan fpcomplete is covering right? :P
2013-07-17 19:34:07 UTC <mgsloan> carter: Dunno, haven't brought it up yet!
2013-07-17 19:34:11 UTC <carter> do it
2013-07-17 19:34:14 UTC <luite> oh in that case mgsloan should offer to share it with me for free :p
2013-07-17 19:34:17 UTC <carter> legit biz expese :P
2013-07-17 19:34:38 UTC <carter> luite "submit" ghcjs as one of the demo apps for that contest
2013-07-17 19:34:56 UTC <luite> that's not really a real world app
2013-07-17 19:34:59 UTC <mgsloan> luite: Haha, yeah I'd definitely want to share a room if I go for the venue hotel
2013-07-17 19:35:51 UTC <luite> i think the contest is a bit vague though... "submit arbitrary real world app" ?
2013-07-17 19:36:05 UTC <carter> luite yes
2013-07-17 19:36:12 UTC <mgsloan> I'm not sure if I could 100% justify it as a business expense, as I'd largely be going for personal enjoyment / benefit :D
2013-07-17 19:36:19 UTC <carter> mgsloan you'll also be saying "i work at fp complete"
2013-07-17 19:36:25 UTC <carter> and be both branding
2013-07-17 19:36:27 UTC <luite> mgsloan: just pretend that you hate it then ;p
2013-07-17 19:36:29 UTC <carter> and passively recruiting
2013-07-17 19:36:39 UTC <carter> its good for the biz
2013-07-17 19:36:51 UTC <carter> puts a Real World face
2013-07-17 19:37:02 UTC <carter> and I don't mean RealWorld# ST monad IO stuff ;)
2013-07-17 19:37:35 UTC <mgsloan> true true
2013-07-17 19:39:00 UTC <carter> mgsloan no down side to asking
2013-07-17 19:39:07 UTC <carter> worst case is same as not asking
2013-07-17 19:39:23 UTC <mgsloan> yup!
2013-07-17 19:39:44 UTC <carter> so do i t:)
2013-07-17 19:39:52 UTC <carter> mgsloan have you seen llvm-general?
2013-07-17 19:40:43 UTC <mgsloan> I haven't! looks neat
2013-07-17 19:40:55 UTC <mgsloan> Is this what would be needed to write custom LLVM passes?
2013-07-17 19:40:55 UTC <carter> essssssss
2013-07-17 19:40:57 UTC <carter> *yessss
2013-07-17 19:41:03 UTC <carter> mgsloan no, thats C++ :)
2013-07-17 19:41:08 UTC <carter> this is for everything else but that
2013-07-17 19:41:10 UTC <mgsloan> aww :/
2013-07-17 19:41:32 UTC <carter> mgsloan custom passes are dylibs you give to llvm
2013-07-17 19:42:04 UTC <carter> C++ ABI â¦. is kinda fictional
2013-07-17 19:42:14 UTC <carter> Johnw was tellling me and some others about this recently
2013-07-17 19:42:16 UTC <carter> ask ihim!
2013-07-17 19:42:31 UTC <mgsloan> It'd be neat if you could have a custom pass that was informed by info from GHC.  I think I read recently that LLVM has a hard time with GHC's LLVM backend since it uses CPS
2013-07-17 19:42:31 UTC <carter> mgsloan relaatedly: theres a #haskell-llvm :)
2013-07-17 19:42:41 UTC <carter> mgsloan nope
2013-07-17 19:42:43 UTC <carter> well
2013-07-17 19:42:59 UTC <carter> part of the issue is that ghc doesn't pass as much meta data along 
2013-07-17 19:43:05 UTC <mgsloan> right
2013-07-17 19:43:33 UTC <mgsloan> So if you could write a custom LLVM pass that knew about the GHC metadata..
2013-07-17 19:43:38 UTC <carter> mgsloan no
2013-07-17 19:43:40 UTC <mgsloan> well, just a thought
2013-07-17 19:43:48 UTC <mgsloan> Probably not a very well thought out thought ;)
2013-07-17 19:43:49 UTC <carter> mgsloan let me tell you the two issues
2013-07-17 19:43:55 UTC <carter> 1) we don't pass the aliasing info
2013-07-17 19:44:51 UTC <luite> does ghc know much aliasing info?
2013-07-17 19:44:55 UTC <carter> yes
2013-07-17 19:45:08 UTC <carter> or at least you can deduce a lot pretty easily if you wanted to
2013-07-17 19:45:31 UTC <luite> hmm
2013-07-17 19:45:59 UTC <carter> theres a reason why UnsafePerformIO are unsafe :)
2013-07-17 19:46:04 UTC <carter> and thats ok
2013-07-17 19:46:19 UTC <carter> mgsloan the other thing missing is mem2reg
2013-07-17 19:46:23 UTC <carter> which is fundamental
2013-07-17 19:46:29 UTC <carter> to a lot of low hanging fruit
2013-07-17 19:46:40 UTC <carter> llvm can't do it because it doesn't understand ghc stack
2013-07-17 19:46:47 UTC <carter> would be worth doing it on the ghc side
2013-07-17 19:47:10 UTC <carter> http://llvm.org/docs/Passes.html#passes-mem2reghttp://llvm.org/docs/Passes.html#scalarrepl-scalar-replacement-of-aggregates-dt
2013-07-17 19:47:12 UTC <carter> http://llvm.org/docs/Passes.html#scalarrepl-scalar-replacement-of-aggregates-dt
2013-07-17 19:47:15 UTC <carter> http://llvm.org/docs/Passes.html#passes-mem2reg
2013-07-17 19:48:17 UTC <carter> mgsloan luite  http://ghc.haskell.org/trac/ghc/ticket/8048#comment:4 is a recent ticket that relates to this
2013-07-17 19:53:16 UTC <mgsloan> interesting stuff!
2013-07-17 19:53:53 UTC <carter> mgsloan i may investigate that rather than the AVX patches I was planning
2013-07-17 19:53:58 UTC <mgsloan> It's good that existing solutions to this sort of thing can be pointed at
2013-07-17 19:54:18 UTC <luite> http://acoutts.com/a1ex/dual_iso.pdf <- this is quite a cool hack, reprogramming the adc chip to do dual-iso readout for high dynamic range video (14 EV). now i want an EOS 5D Mark III :p
2013-07-17 19:54:40 UTC <carter> luite first figure out people giving you money :)
2013-07-17 19:55:24 UTC <mgsloan> carter: Yeah, if I'm understanding properly, this could have a lot of benefits even for non numerical code
2013-07-17 19:55:24 UTC <carter> yes
2013-07-17 19:55:25 UTC <carter> it'd make everythign faster
2013-07-17 19:55:38 UTC <carter> AVX for reasons, won't always hlep
2013-07-17 19:56:23 UTC <luite> carter: yeah i can't think of a reason why people would do that :p
2013-07-17 19:56:57 UTC <carter> luite no, i mean it'd be a pain in the ass to make it supported sanely
2013-07-17 19:57:18 UTC <carter> because the lazy way would be to make make -fllvm only work wiht LLVM HEAD (well, 3.4 )
2013-07-17 19:57:22 UTC <carter> and say "NO"
2013-07-17 19:57:25 UTC <carter> otherwise
2013-07-17 19:57:30 UTC <carter> the "nice for users way"
2013-07-17 19:57:39 UTC <carter> requires two different stack spilling and register schemes
2013-07-17 19:58:40 UTC <mgsloan> luite: Wow, that does produce awesome photos
2013-07-17 19:59:32 UTC <mgsloan> Savvy camera manufacturers will probably pick up this technique
2013-07-17 19:59:36 UTC <luite> mgsloan: i think it's probably mostly useful for video
2013-07-17 19:59:37 UTC <mgsloan> I hope!
2013-07-17 19:59:40 UTC <mgsloan> Yup
2013-07-17 19:59:46 UTC <luite> since you sacrifice vertical res
2013-07-17 19:59:51 UTC <mgsloan> Which the 5D already dominates
2013-07-17 20:00:35 UTC <luite> 5D is used a lot yeah, but some sony sensors have better dynamic range
2013-07-17 20:00:56 UTC <carter> dynamic range is the yummiest of ranges
2013-07-17 20:01:10 UTC <luite> canon needs to integrate their digital processing on the main cmos chip, like sony did
2013-07-17 20:01:21 UTC <luite> that will get them 2-3EV of extra DR at low iso
2013-07-17 20:02:07 UTC <mgsloan> I imagine at the price of costing more to manufacture, though
2013-07-17 20:02:34 UTC <luite> probably, canon gets away with producing their current CMOS chips at an ancient 0.5um process
2013-07-17 20:02:53 UTC <luite> with the digital electronics on the same chip they'd probably have to switch to something modern :)
2013-07-17 20:04:08 UTC <luite> perhaps they've already upgraded their stuff to something better to make those new 40 megapixel 70D sensors
2013-07-18 01:52:33 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 14e7d3f9e http://travis-ci.org/diagrams/diagrams-doc/builds/9211491 The build has errored.
2013-07-18 02:43:15 UTC <mgsloan> byorgey: Hopefully that didn't break anything!  It builds but I can't run the tests atm
2013-07-18 02:45:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1421444c2 http://travis-ci.org/diagrams/diagrams-lib/builds/9212492 The build passed.
2013-07-19 06:53:43 UTC <ClaudiusMaximus> is there an ascii art backend yet?
2013-07-19 07:03:45 UTC <ClaudiusMaximus> actually what i want is a bit specific: reflowing cells of different sizes into a table with minimal width columns and minimal height rows given a fixed output text width
2013-07-19 07:25:16 UTC <lpaste> ClaudiusMaximus pasted âpacking blocks outputâ at http://lpaste.net/91048
2013-07-19 11:36:38 UTC <byorgey> s
2013-07-19 11:36:47 UTC <byorgey> uhh, oops =)
2013-07-19 11:36:57 UTC <byorgey> ClaudiusMaximus: no ascii art backend, sorry =)
2013-07-19 13:40:21 UTC <notdan> http://paste.hskll.org/gallery 
2013-07-19 13:40:30 UTC <notdan> Also, how do you like the improved design? :)
2013-07-19 14:04:27 UTC <fryguybob> notdan: It looks nice!
2013-07-19 14:06:58 UTC <luite> :)
2013-07-19 14:14:43 UTC <fryguybob> byorgey: Do you know when things start off for ICFP?  Are you going to get there on the 21st or the 22nd?
2013-07-19 14:26:23 UTC <luite> are you flying from jfk or ewr?
2013-07-19 14:32:00 UTC <fryguybob> luite: Rochester or Buffalo, neither of which have direct flights :(
2013-07-19 14:32:09 UTC <luite> ah ok
2013-07-19 14:33:57 UTC <luite> ewr->bos is cheaper, is it difficult/expensive to get there from jfk?
2013-07-19 14:36:09 UTC <fryguybob> I imagine JFK would have flights.  I'm at least 7 hours away from there though.
2013-07-19 14:37:07 UTC <fryguybob> Humm, there are direct flights, but not in the morning.
2013-07-19 14:37:57 UTC <fryguybob> I can get there around 10am on the 22nd.
2013-07-19 14:38:24 UTC <luite> delta, american and jetblue have direct flights from jfk to boston
2013-07-19 14:38:32 UTC <luite> 125-150 euro
2013-07-19 14:45:45 UTC <luite> oh hmm, it's cheaper to go AMS -> PHL -> BOS  and then JFK -> AMS  return
2013-07-19 14:52:08 UTC <luite> oh no wonder, 7:40 layover on PHL on the return flight
2013-07-19 14:52:16 UTC <fryguybob> wow
2013-07-19 14:52:30 UTC <fryguybob> That's not a layover, that's a holiday
2013-07-19 16:00:24 UTC <notdan> http://orbt.io/QL4d.png http://orbt.io/QL4Q.png what do you think? I don't like that the output of the paste is below the code, but I don't know how to place it better
2013-07-19 16:00:30 UTC <notdan> maybe it should go above?
2013-07-19 16:01:10 UTC <mr-> what's wrong with "next to"?
2013-07-19 16:11:58 UTC <notdan> what's "next to"?
2013-07-19 17:33:23 UTC <byorgey> notdan: awesome!
2013-07-19 17:33:44 UTC <byorgey> yes, I think the output should be above the code
2013-07-19 17:35:49 UTC <byorgey> fryguybob: I plan to arrive the evening of the 21st, since I'm going to attend the Haskell Implementors' Workshop on the 22nd
2013-07-19 17:36:19 UTC <byorgey> fryguybob: the Haskell Symposium is the 23rd-24th, then ICFP proper is 25-27, then FARM is on the 28th
2013-07-19 17:39:33 UTC <byorgey> mr-: not enough space for both code and output next to each other, IMO
2013-07-19 17:56:46 UTC <fryguybob> byorgey: Ok, I'll plan on the 21st also.
2013-07-19 18:35:04 UTC <luite> byorgey: 8 nights? or are you leaving the 28th already?
2013-07-19 18:37:56 UTC <byorgey> yes, I will leave the evening of the 28th
2013-07-19 18:53:51 UTC <luite> ah
2013-07-19 18:55:40 UTC <luite> at what time does it end? is a 6:39 pm flight too early?
2013-07-19 18:57:03 UTC <byorgey> luite: FARM ends at 5pm, other things may end at different times.
2013-07-19 18:57:57 UTC <byorgey> the hotel is right next to the airport so leaving at 5pm for a 6:39 flight might be OK, but then again it might be cutting it too close
2013-07-19 18:58:09 UTC <byorgey> also depends whether it is a domestic or international flight
2013-07-19 18:58:16 UTC <luite> domestic to nyc
2013-07-19 18:58:18 UTC <byorgey> in any case you can always duck out a little early.
2013-07-19 18:58:39 UTC <byorgey> it's probably fine then.
2013-07-19 18:58:40 UTC <carter> luite might be cheaper to take the train
2013-07-19 18:58:50 UTC <luite> oh there are later nonstop flights to ewr
2013-07-19 18:59:23 UTC <byorgey> carter: we have already been over this.  the train is not actually that much cheaper than flying.
2013-07-19 18:59:27 UTC <luite> carter: i'd be ok with that as well, what site to i check for timetables and fares?
2013-07-19 18:59:27 UTC <byorgey> and it takes a lot longer.
2013-07-19 18:59:29 UTC <carter> ok
2013-07-19 18:59:33 UTC <carter> true
2013-07-19 18:59:35 UTC <byorgey> luite: amtrak.com
2013-07-19 18:59:47 UTC <carter> if byorgey says so
2013-07-19 18:59:49 UTC <carter> :)
2013-07-19 18:59:59 UTC <luite> flight is ~60 euro
2013-07-19 19:00:10 UTC <carter> ah
2013-07-19 19:00:11 UTC <carter> ok
2013-07-19 19:00:12 UTC <luite> 80 usd (single)
2013-07-19 19:00:18 UTC <carter> thts pretty good
2013-07-19 19:00:18 UTC <carter> amtrak is same
2013-07-19 19:00:21 UTC <carter> so do the flight
2013-07-19 19:00:42 UTC <luite> that's delta to jfk or jetblue to ewr, what is the better airport?
2013-07-19 19:00:57 UTC <carter> ewr is what again?
2013-07-19 19:01:05 UTC <carter> oh
2013-07-19 19:01:10 UTC <carter> jfk is in nyc
2013-07-19 19:01:23 UTC <carter> http://web.mta.info/mta/airtrain.htm
2013-07-19 19:01:28 UTC <luite> google suggested it as being more or less close ;p
2013-07-19 19:02:17 UTC <luite> oh that airtrain is quite affordable
2013-07-19 19:02:54 UTC <carter> and then its a 1ish hour subway ride to ryan's couch
2013-07-19 19:03:48 UTC <luite> carter: do you get closer to the city center if you take amtrak?
2013-07-19 19:04:02 UTC <carter> penn station is in manhattan
2013-07-19 19:04:58 UTC <byorgey> actually EWR is closer to manhattan than JFK
2013-07-19 19:05:04 UTC <carter> hrm
2013-07-19 19:05:06 UTC <carter> you may be right
2013-07-19 19:05:08 UTC <byorgey> at least distance-wise
2013-07-19 19:05:13 UTC <carter> what transit would he do?
2013-07-19 19:05:23 UTC <byorgey> I don't know, I'm just looking at a map =)
2013-07-19 19:05:41 UTC <luite> EWR has later direct flights, so that would be more convenient
2013-07-19 19:05:52 UTC <luite> amtrak is cheaper, $49, 4h train ride
2013-07-19 19:06:20 UTC <byorgey> ah, that is a bit cheaper
2013-07-19 19:07:51 UTC <byorgey> carter: do you know where Ryan lives, or wherever luite will be staying?
2013-07-19 19:08:07 UTC <luite> if skytrain takes an hour, and then it's longer with the subway, then flying might not be too much faster
2013-07-19 19:08:18 UTC <byorgey> yeah, you might be right
2013-07-19 19:08:36 UTC <luite> and if it's a good train with power outlets and catering it's more comforable :p
2013-07-19 19:08:42 UTC <byorgey> since the train takes you right into the middle of manhattan
2013-07-19 19:08:47 UTC <byorgey> also true =)
2013-07-19 19:09:06 UTC <byorgey> it will definitely have power outlets.  and probably food too.
2013-07-19 19:09:25 UTC <byorgey> and the seats are bigger.
2013-07-19 19:09:30 UTC <byorgey> (than a plane)
2013-07-19 19:21:30 UTC <fryguybob> Humm upgrade to first class for only $775.00 more, so tempting.
2013-07-19 19:21:36 UTC <luite> lol :(
2013-07-19 19:22:40 UTC <carter> byorgey upper east side area of manahattan
2013-07-19 19:30:53 UTC <mr-> luite: Use Amtrak if you've never done it before, it
2013-07-19 19:31:15 UTC <mr-> 's quite an experience compared to european trains
2013-07-19 19:31:23 UTC <carter> how so?
2013-07-19 19:32:05 UTC <mr-> carter: I thought it feels quite like flying but extremely comfy. They even wake you at your stop!
2013-07-19 19:32:18 UTC <carter> in europe?
2013-07-19 19:32:21 UTC <carter> or amtrak?
2013-07-19 19:32:25 UTC <mr-> amtrak
2013-07-19 19:32:34 UTC <carter> ah
2013-07-19 19:32:41 UTC <carter> acella is nice, shame its not much faster
2013-07-19 19:32:44 UTC <carter> but both are pretty solid
2013-07-19 19:32:58 UTC <carter> whats the european version?
2013-07-19 19:33:33 UTC <carter> byorgey question: how much of diagrams would work with rational numbers and how much needs norms and floating point things?
2013-07-19 19:33:52 UTC <luite> oh hmm, feeling like flying is a bad thing imho :)
2013-07-19 19:34:00 UTC <mr-> Nobody cares if you miss your stop, you have to worry about space for your luggage, less space for your feet, ..
2013-07-19 19:34:24 UTC <mr-> luite: in the sense that you check in your luggage and get it back in the trainstation at your destination
2013-07-19 19:34:35 UTC <carter> mr-: I'd argue that amtrak is more spacious than an ariplain
2013-07-19 19:34:39 UTC <carter> *airplane
2013-07-19 19:34:56 UTC <luite> mr-: oh that's different indeed, but rather less convenient
2013-07-19 19:35:10 UTC <mr-> luite: depends on how much you'd have to carry around :-)
2013-07-19 19:35:35 UTC <luite> is it more comfortable than the european high speed trains?
2013-07-19 19:35:38 UTC <carter> luite i keep my luggage with me on amtrack
2013-07-19 19:35:40 UTC <luite> ice/tgv?
2013-07-19 19:35:45 UTC <mr-> luite: yes
2013-07-19 19:35:52 UTC <luite> oh cool
2013-07-19 19:36:11 UTC <carter> just slower right/ :)
2013-07-19 19:36:12 UTC <mr-> luite: much more space, at least in the trains I took
2013-07-19 19:36:25 UTC <luite> and what kind of food do they have?
2013-07-19 19:36:34 UTC <carter> shitty american food
2013-07-19 19:36:38 UTC <luite> carter: how far is that with subway from penn station? ~20 mins?
2013-07-19 19:36:43 UTC <carter> hehe
2013-07-19 19:36:45 UTC <carter> 100ft
2013-07-19 19:37:05 UTC <byorgey> carter: that's a good question.  There's quite a bit that would work with just rational numbers... but there some fundamental things need floating point.  I've never put in the effort to try to tease apart precisely what features require floating point.
2013-07-19 19:37:32 UTC <carter> k
2013-07-19 19:37:40 UTC <luite> carter: no i mean ryans place
2013-07-19 19:37:42 UTC <carter> oh
2013-07-19 19:37:57 UTC <carter> i don't recall his address
2013-07-19 19:38:25 UTC <carter> but you'd take the 1,2, or  3 (either) from 34th st to 42nd, then take the shuttle, then take the 6 up to whatever stop he says
2013-07-19 19:38:29 UTC <carter> idk where he's based 
2013-07-19 19:38:33 UTC <carter> just upper east side
2013-07-19 19:38:41 UTC <carter> pretty short subway ride though
2013-07-19 19:43:13 UTC <carter> byorgey i've been trying to tease out how much numerical linear algebra i can do with just rationals
2013-07-19 19:43:55 UTC <luite> at all, or in polynomial time?
2013-07-19 19:44:31 UTC <mr-> What is numerical linear algebra?
2013-07-19 19:44:52 UTC <carter> mr- : good question: solving math problems with numbers on a computer
2013-07-19 19:44:59 UTC <carter> using linear algebra and solvers etc
2013-07-19 19:45:20 UTC <carter> luite i'm only going to do rational algs i can make "exact"
2013-07-19 19:45:36 UTC <mr-> Ok, but linear algebra works well with any field, such as the rationals.
2013-07-19 19:45:43 UTC <carter> mr- nope
2013-07-19 19:45:47 UTC <mr-> Sure
2013-07-19 19:45:52 UTC <carter> many solver algorithms need square root
2013-07-19 19:46:05 UTC <mr-> What are those solving?
2013-07-19 19:46:12 UTC <carter> matrix factorizations
2013-07-19 19:46:18 UTC <carter> eg: QR factorizations
2013-07-19 19:46:26 UTC <carter> useful for finding the SVD
2013-07-19 19:46:32 UTC <carter> or solving a least squares problem
2013-07-19 19:46:33 UTC <carter> ec
2013-07-19 19:46:35 UTC <carter> etc
2013-07-19 19:46:45 UTC <carter> M = Q * R
2013-07-19 19:46:47 UTC <carter> Q = unitary
2013-07-19 19:46:57 UTC <carter> R upper triangular
2013-07-19 19:47:31 UTC <mr-> Sorry, I know the math, but seem to be woefully unprepared when it comes to actual computations..
2013-07-19 19:47:36 UTC <carter> mr- np
2013-07-19 19:47:47 UTC <mr-> I was just thinking "Gauss", all the time ;_)
2013-07-19 19:48:00 UTC <carter> numerical linear algebra is like an applied form of functional analysis on Finite dimensional spaces
2013-07-19 19:48:15 UTC <carter> mr- gausian elimin is fine on rationals
2013-07-19 19:48:23 UTC <carter> because exact
2013-07-19 19:48:25 UTC <mr-> I know, that's why I was confused
2013-07-19 19:48:27 UTC <carter> yes
2013-07-19 19:48:43 UTC <carter> but say you want to do gram-schmidth orthogonalization
2013-07-19 19:50:07 UTC <luite> exponential complexity though
2013-07-19 19:50:33 UTC <carter> luite in the rational numbers?
2013-07-19 19:50:40 UTC <carter> yeah
2013-07-19 19:50:43 UTC <luite> carter: yeah the standard gauss elim algorithm
2013-07-19 19:50:45 UTC <carter> not meant for speed
2013-07-19 19:50:51 UTC <carter> luite ohh, the blow up
2013-07-19 19:51:07 UTC <carter> luite funny thing though, the results will be the same 
2013-07-19 19:51:14 UTC <carter> nor matter if you have the blow up in the mean time or onot
2013-07-19 19:52:15 UTC <carter> your'e right
2013-07-19 19:52:16 UTC <mr-> Yeah, gram-schmidt does not work, but just because you can't really normalize
2013-07-19 19:52:25 UTC <carter> mr- actually found a paper that may evade that
2013-07-19 19:53:17 UTC <carter> 	 "solving linear least squares problems by gram-schmidt orthogonalization" by ake bjÃ¶rck 1967
2013-07-19 19:55:19 UTC <mr-> carter: but you are right, gram-schmidt doesn't exist in Q^n, because the reals don't act on Q^n (e.g. you can't normalize (1,1) in Q^2)
2013-07-19 19:55:23 UTC <mr-> Am I confused again?
2013-07-19 19:55:36 UTC <carter> mr- no
2013-07-19 19:55:42 UTC <carter> its a slightly different alg
2013-07-19 19:55:58 UTC <carter> your right though
2013-07-19 19:56:03 UTC <carter> you can't do square roots
2013-07-19 19:56:06 UTC <carter> or L2 norm
2013-07-19 19:56:07 UTC <carter> on reals
2013-07-19 19:56:20 UTC <carter> i mean Q
2013-07-19 19:56:25 UTC <carter> grrr
2013-07-19 19:56:29 UTC <mr-> :-)
2013-07-19 19:56:54 UTC <carter> oo http://www.mai.liu.se/~akbjo/shanghai.pdf
2013-07-19 19:57:05 UTC <carter> more recent talk by same dude
2013-07-19 19:57:24 UTC <mr-> lol
2013-07-19 20:00:45 UTC <mr-> Fun.. I've never relly considered the importance of the action of the reals (as domain of the norm) on the vectorspace
2013-07-20 01:18:51 UTC <byorgey> bye all, I'm off to the Oregon coast with no Internet
2013-07-20 01:18:54 UTC <byorgey> see you in a week =)
2013-07-20 01:23:51 UTC <byorgey> I will still be logged in here though, so if you were hoping to take the opportunity to talk about me behind my back, tough luck
2013-07-20 01:32:29 UTC <carter> enjoy !
2013-07-20 01:32:37 UTC <byorgey> thanks!
2013-07-20 01:34:33 UTC <carter> byorgey who knows, by the time your'e back haskell numerics will be changed for every :)
2013-07-20 01:34:35 UTC <carter> *ever
2013-07-20 01:34:36 UTC <carter> mahaha
2013-07-20 01:37:36 UTC <byorgey> ACTION decides a week would be a long time to hold his breath
2013-07-20 01:39:21 UTC <fryguybob> byorgey: Ooooo Oregon coast.
2013-07-20 01:42:04 UTC <fryguybob> byorgey: Be sure to eat some blackberries while you are there.
2013-07-20 01:42:14 UTC <byorgey> I'll try my best.
2013-07-20 01:42:34 UTC <byorgey> my uncle is a food scientist specializing in berries so I don't think I'll have to try very hard.
2013-07-20 01:43:15 UTC <fryguybob> Ah, excellent.  The sub-par berries that we have here are Judah's favorite food at the moment.
2013-07-20 01:43:48 UTC <byorgey> nice.  Just wait until he has REAL berries.
2013-07-20 01:44:13 UTC <byorgey> we took Noah blueberry picking last weekend.  I think he ate his weight in blueberries, straight off the bush.
2013-07-20 01:56:33 UTC <carter> byorgey i do have some stuff open yet, i've just not promoted it :)
2013-07-20 01:56:35 UTC <carter> shh
2013-07-20 01:56:45 UTC <carter> i'll tell yah next week
2013-07-20 02:30:27 UTC <byorgey> carter: ok, looking forward to it =)
2013-07-20 02:31:10 UTC <carter> i have hasnumerics.com just in case it fails as a biz and is just a neat open source lib :)
2013-07-20 09:51:38 UTC <notdan> howdy hi
2013-07-20 11:02:09 UTC <notdan> http://paste.hskll.org/get/298 unicode also should work
2013-07-20 11:42:20 UTC <luite> hehe i see you're using all the latest packages ;)
2013-07-20 12:49:43 UTC <notdan> :)
2013-07-20 15:27:54 UTC <qwebirc752502> can anyone help me with a problem installing diagrams in an hsenv from the repo
2013-07-20 15:28:53 UTC <qwebirc752502> I try: cabal install diagrams-core/ diagrams-lib/ diagrams-contrib/ diagrams-svg/ and get: cabal: Could not resolve dependencies: trying: diagrams-core-0.6.1 rejecting: monoid-extras-0.2.2.3/installed-954... (conflict: diagrams-core => monoid-extras>=0.3 && <0.4) trying: monoid-extras-0.3.0.0 rejecting: diagrams-svg-0.6.1 (conflict: monoid-extras==0.3.0.0, diagrams-svg
2013-07-20 15:46:19 UTC <fryguybob> qwebirc752502: Humm, perhaps you need to include the latest monoid-extras.
2013-07-20 15:59:33 UTC <qwebirc752502> thanks - i'm not sure how but i got it.
2013-07-21 16:55:26 UTC <notdan> Oh bummer, because of JavaScript online code editor thingy I now have more JS in my repo than I have Haskell: https://github.com/co-dan/interactive-diagrams
2013-07-21 16:57:18 UTC <luite> hehe
2013-07-28 18:10:06 UTC <byorgey> greetings!
2013-07-28 18:11:22 UTC <byorgey> notdan: re: favicon, of course I don't mind, steal away =)
2013-07-28 18:30:07 UTC <luite> :)
2013-07-28 18:47:48 UTC <fryguybob> byorgey: You are back? so soon?
2013-07-28 19:00:26 UTC <byorgey> fryguybob: what? I was gone a whole week!
2013-07-28 19:01:29 UTC <byorgey> guess you didn't miss me very much ;)
2013-07-28 19:03:00 UTC <luite> it was vewy vewy quiet here :(
2013-07-28 19:04:09 UTC <byorgey> hehe
2013-07-28 19:04:37 UTC <byorgey> well it's about to be a lot noisier since I am going to work on an 0.7 release this week
2013-07-28 19:24:31 UTC <fryguybob> byorgey: I just figured the blackberries would keep you there for at least two weeks.
2013-07-28 19:24:55 UTC <byorgey> I was sorely tempted
2013-07-28 19:25:08 UTC <byorgey> we had berries pretty much for every meal
2013-07-28 19:25:15 UTC <byorgey> Noah was in berry heaven
2013-07-28 19:25:15 UTC <fryguybob> Nice
2013-07-28 19:56:44 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14082f90a http://travis-ci.org/diagrams/diagrams-haddock/builds/9582530 The build passed.
2013-07-29 00:49:37 UTC <carter> byorgey egads your back
2013-07-29 00:49:56 UTC <carter> i do have some code online, but still another week or so from publicizing :)
2013-07-29 00:57:08 UTC <byorgey> carter: I suggest you stop predicting times in the future when you will do something.  I have long since stopped believing you. =)
2013-07-29 00:57:14 UTC <carter> yes
2013-07-29 00:57:19 UTC <carter> i don't believe myself either
2013-07-29 00:57:27 UTC <carter> im my own biggest bottle neck
2013-07-29 00:57:51 UTC <byorgey> however, I have no doubt that you are accomplishing stuff.
2013-07-29 00:57:58 UTC <carter> true!
2013-07-29 00:58:07 UTC <carter> spj said thankyou to me in an email last week!
2013-07-29 00:58:12 UTC <luite> \o/
2013-07-29 00:58:13 UTC <carter> that was awesome
2013-07-29 00:58:13 UTC <byorgey> nice =)
2013-07-29 00:58:48 UTC <luite> oh carter must also know things to do in the area
2013-07-29 00:59:27 UTC <carter> i do! 
2013-07-29 00:59:30 UTC <carter> luite context?
2013-07-29 00:59:36 UTC <carter> was someone asking for things to do?
2013-07-29 00:59:59 UTC <carter> honestly, i kinda want to nudge people into helping on hackage 2 more
2013-07-29 01:00:01 UTC <luite> carter: what shouldn't i miss on a visit to boston, nyc?
2013-07-29 01:00:03 UTC <carter> easier to test well
2013-07-29 01:00:07 UTC <carter> hrmm
2013-07-29 01:00:11 UTC <luite> hehe no not haskell this time, sorry ;)
2013-07-29 01:00:21 UTC <carter> darn
2013-07-29 01:00:30 UTC <carter> hrmm
2013-07-29 01:00:33 UTC <carter> i'm a bad tourist
2013-07-29 01:00:38 UTC <luite> nah i was asking byorgey for suggestions
2013-07-29 01:00:45 UTC <carter> luite in boston you should wander through the mit area
2013-07-29 01:00:50 UTC <carter> is a really cool neighborhood
2013-07-29 01:00:56 UTC <carter> really industrial
2013-07-29 01:00:59 UTC <luite> hmm
2013-07-29 01:01:02 UTC <carter> i like the architecture
2013-07-29 01:01:13 UTC <luite> oh i guess i should bring a camera
2013-07-29 01:01:16 UTC <carter> otoh, i don't like yale's architecture and people call yale "hogwarts"
2013-07-29 01:01:30 UTC <luite> or is that unsafe anywhere i can expect to go?
2013-07-29 01:01:37 UTC <carter> nope, should be fine :)
2013-07-29 01:01:47 UTC <carter> boston and nyc are very safe cities
2013-07-29 01:02:08 UTC <carter> i walk around NYC carrying my laptop + wearing a floppy hat
2013-07-29 01:04:16 UTC <carter> somehow carrying around a laptop+ reading some papers + having a pen+ paper notebook + floppy hat makes people ask me for directions in nyc 
2013-07-29 01:04:18 UTC <carter> tis odd
2013-07-29 01:04:39 UTC <luite> oh yale is in a more urban setting than i expected
2013-07-29 01:04:57 UTC <carter> yale is ghetto as hell too
2013-07-29 01:05:16 UTC <carter> dont go to new haven
2013-07-29 01:07:47 UTC <luite> ok :)
2013-07-29 01:10:46 UTC <carter> yay
2013-07-29 01:17:08 UTC <carter> on the new york side, there is a tiny math museum
2013-07-29 01:17:19 UTC <carter> + a museum of sex that I think is near the math museum
2013-07-29 01:17:23 UTC <carter> plus lots of otehr museums
2013-07-29 01:19:33 UTC <carter> also just wandering around will be fun honestly
2013-07-29 01:20:50 UTC <luite> yeah i guess i'll do that :)
2013-07-29 01:21:24 UTC <luite> momath?
2013-07-29 01:21:38 UTC <carter> yeah
2013-07-29 01:21:40 UTC <carter> its tiny
2013-07-29 01:21:49 UTC <carter> errr
2013-07-29 01:21:53 UTC <luite> oh that looks a bit like what they had in amsterdam, with those bikes
2013-07-29 01:21:55 UTC <carter> or was it they charged a lot? 
2013-07-29 01:22:06 UTC <carter> thres a LOT of good museums that say "donation"
2013-07-29 01:22:07 UTC <luite> and minimal surfaces with soap bubbles
2013-07-29 01:22:07 UTC <carter> but are free
2013-07-29 01:22:29 UTC <luite> aimed at children mostly, but fun
2013-07-29 01:22:44 UTC <carter> point being: research which museums don't require taking your money :)
2013-07-29 01:22:48 UTC <carter> budgetting is hard 
2013-07-29 01:27:19 UTC <luite> well i guess it would be a shame to miss out on some just because they aren't free?
2013-07-29 01:28:04 UTC <carter> theres SO MANY
2013-07-29 01:28:17 UTC <carter> how many days will you be in nyc?
2013-07-29 01:29:28 UTC <carter> 'cause theres lots 
2013-07-29 01:29:39 UTC <carter> and thers lots of things that aren't museums too
2013-07-29 01:29:42 UTC <carter> not sure what 
2013-07-29 01:29:43 UTC <carter> but lots
2013-07-29 01:30:03 UTC <luite> dunno yet, i should make some rough plan, that's mostly why i was asking, for example whether to book my return flight from jfk or from somewhere else
2013-07-29 01:31:00 UTC <carter> ask sclv for opinions too
2013-07-29 01:31:02 UTC <carter> he probably has some
2013-07-29 01:46:56 UTC <fryguybob> First mouse after a dormant six months or so... it begins.
2013-07-29 01:59:28 UTC <byorgey> what, is the snake gone now?
2013-07-29 02:00:13 UTC <luite> snaaaaake!
2013-07-29 02:05:08 UTC <fryguybob> byorgey: We haven't seen the snake in a while.
2013-07-29 03:58:19 UTC <carter> woah, a snake?
2013-07-29 04:27:09 UTC <luite> mushroom mushroom
2013-07-29 14:22:27 UTC <martingalemeasur> How do I render a scaleInvPrim using the SVG backend. I''m trying: main = defaultMain $ scaleInvPrim (circle 1 :: Path R2) unitX -- for example
2013-07-29 15:06:21 UTC <fryguybob> martingalemeasur: Hi, I'm a little confused by your question.  What are you expecting?  Does that give you an error?
2013-07-29 15:41:53 UTC <byorgey> martingalemeasur: note you have to  import Diagrams.TwoD.Transform
2013-07-29 15:42:15 UTC <byorgey> scaleInvPrim is not intended for general users so we don't re-export it from Diagrams.Prelude
2013-07-29 16:12:43 UTC <martingalemeasur> @fryguybob. I'm expecting a program that makes a circle. I'm getting  a empty diagram.
2013-07-29 16:12:43 UTC <lambdabot> Unknown command, try @list
2013-07-29 16:13:11 UTC <martingalemeasur> @byorgey. I am. I want to modify some of the Arrows.hs code to test my arrow heads.
2013-07-29 16:13:11 UTC <lambdabot> Unknown command, try @list
2013-07-29 16:15:38 UTC <byorgey> martingalemeasur: ah, that's because scaleInvPrim creates a diagram with an empty envelope (as explained in the scaleInvPrim documentation)
2013-07-29 16:16:00 UTC <byorgey> martingalemeasur: try something like   scaleInvPrim ... <> square 2
2013-07-29 16:25:40 UTC <martingalemeasur> I was actually trying    stroke p <>h;  where h  = scaleInvPrim (ht (arrowHead opts) # moveTo e) unitX # fc black # lw 0; p is a straight line and ht gets the arrowhead
2013-07-29 16:26:23 UTC <martingalemeasur> maybe i should email you some code -- it's still a bit raw.
2013-07-29 16:30:34 UTC <byorgey> martingalemeasur: if p  is a horizontal or vertical line that will still have an infinitely thin envelope, which may cause problems depending on how you specify the requested size of the output
2013-07-29 16:30:44 UTC <byorgey> but sure, you can send me some code
2013-07-29 16:32:53 UTC <martingalemeasur> that's probably it, but i sent you the code anyway.
2013-07-29 16:40:25 UTC <byorgey> martingalemeasur: ok, I got the code
2013-07-29 16:40:41 UTC <byorgey> are you still having trouble?  What exactly should I be looking at?
2013-07-29 17:05:14 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 1468ff35d http://travis-ci.org/diagrams/diagrams-svg/builds/9612588 The build passed.
2013-07-29 17:06:25 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 147c7e897 http://travis-ci.org/diagrams/diagrams-lib/builds/9612628 The build passed.
2013-07-29 17:20:07 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 144de3998 http://travis-ci.org/diagrams/diagrams-doc/builds/9611868 The build has errored.
2013-07-29 17:20:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14e03ea62 http://travis-ci.org/diagrams/diagrams-lib/builds/9613120 The build passed.
2013-07-29 17:32:14 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14a2c0f45 http://travis-ci.org/diagrams/diagrams-doc/builds/9612683 The build has errored.
2013-07-29 18:41:12 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 146db32fb http://travis-ci.org/diagrams/diagrams-core/builds/9616277 The build passed.
2013-07-29 18:45:29 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 144faee5b http://travis-ci.org/diagrams/diagrams-lib/builds/9616341 The build passed.
2013-07-29 19:09:11 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1417776be http://travis-ci.org/diagrams/diagrams-core/builds/9617388 The build passed.
2013-07-29 19:12:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1480230f1 http://travis-ci.org/diagrams/diagrams-lib/builds/9617395 The build passed.
2013-07-29 20:44:10 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 146785d2d http://travis-ci.org/diagrams/diagrams-lib/builds/9621016 The build passed.
2013-07-29 20:52:42 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 1471601e1 http://travis-ci.org/diagrams/diagrams-core/builds/9621480 The build passed.
2013-07-29 21:31:49 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14aa6e847 http://travis-ci.org/diagrams/diagrams-lib/builds/9622899 The build passed.
2013-07-29 21:43:03 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 143c5fd38 http://travis-ci.org/diagrams/diagrams-lib/builds/9623337 The build passed.
2013-07-29 21:48:51 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 142d488b3 http://travis-ci.org/diagrams/diagrams-core/builds/9623579 The build passed.
2013-07-29 21:53:51 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1451186a9 http://travis-ci.org/diagrams/diagrams-lib/builds/9623642 The build passed.
2013-07-29 21:56:09 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14839c724 http://travis-ci.org/diagrams/diagrams-postscript/builds/9623849 The build passed.
2013-07-29 21:56:27 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 1489f60b7 http://travis-ci.org/diagrams/diagrams-svg/builds/9623788 The build passed.
2013-07-30 12:11:32 UTC <ClaudiusMaximus> hi - i had a weird issue at the weekend, feeding some svgs from diagrams-cairo into a cutting maching (think plotter but with a knife instead of a pen..) - it went over every path twice, and debugging seemed to show there were indeed 2 copies of each path...
2013-07-30 12:11:55 UTC <ClaudiusMaximus> is this a diagrams-cairo issue or something in diagrams, or maybe diagrams-contrib turtle?
2013-07-30 12:12:46 UTC <ClaudiusMaximus> I'm thinking that it might be some duplication to make stroke/fill work properly? is there a way to turn off the duplication (eg: fill is useless with a plotter/cutter)
2013-07-30 12:15:04 UTC <ClaudiusMaximus> hm, actually looking at the svg source makes me think it's a turtle issue..
2013-07-30 12:16:32 UTC <ClaudiusMaximus> there's the path i made with turtle, followed by a duplicate but without the final "L x,y" and instead a "Z"
2013-07-30 12:19:39 UTC <ClaudiusMaximus> (i better test with diagrams-contrib 0.6.1 before complaining further, i had an older version...)
2013-07-30 13:08:21 UTC <byorgey> ClaudiusMaximus: interesting
2013-07-30 13:09:08 UTC <byorgey> ClaudiusMaximus: if you send me a minimal .hs file which gives you that behavior, I can try it out with the latest HEAD version of everything
2013-07-30 13:09:21 UTC <byorgey> I already have HEAD all built so it would be easier for me
2013-07-30 13:13:36 UTC <hpaste> ClaudiusMaximus pasted âturtle duplicationâ at http://lpaste.net/91330
2013-07-30 13:14:58 UTC <ClaudiusMaximus> byorgey: annotated it with output
2013-07-30 13:27:51 UTC <byorgey> ClaudiusMaximus: thanks, taking a look now
2013-07-30 13:39:53 UTC <fryguybob> ClaudiusMaximus: Out of curiosity what plotting software are you using?
2013-07-30 13:40:55 UTC <ClaudiusMaximus> fryguybob: think it was whatever comes with silhouette cameo on OS X - not sure, it's my gf's
2013-07-30 13:41:54 UTC <byorgey> ClaudiusMaximus: I can reproduce it with HEAD, and it does seem to be turtle-specific (at least, when I try drawing just 'square 1' I only get one path)
2013-07-30 13:41:55 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1414da44f http://travis-ci.org/diagrams/diagrams-contrib/builds/9648237 The build has errored.
2013-07-30 13:43:52 UTC <ClaudiusMaximus> byorgey: cool, hope it can be fixed..
2013-07-30 13:44:11 UTC <byorgey> interestingly, if I use the cairo backend I only get one path
2013-07-30 13:44:20 UTC <byorgey> er, I mean if I use the SVG backend
2013-07-30 13:44:38 UTC <ClaudiusMaximus> now that's odd..
2013-07-30 13:44:42 UTC <byorgey> indeed
2013-07-30 13:45:01 UTC <byorgey> so perhaps it is a bug in the cairo backend rather than in the turtle module itself
2013-07-30 13:46:06 UTC <fryguybob> We used to get a lot of postscript files that would include the paths twice where one instance was for fill even if they didn't have a fill.
2013-07-30 13:46:52 UTC <byorgey> yes, I wonder if that's what's going on
2013-07-30 13:49:20 UTC <byorgey> hah, nope, it is a turtle bug
2013-07-30 13:49:40 UTC <byorgey> now I am really confused why we only get one path with the SVG backend...
2013-07-30 13:49:50 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 145353a82 http://travis-ci.org/diagrams/diagrams-contrib/builds/9648354 The build has errored.
2013-07-30 13:51:19 UTC <byorgey> OH
2013-07-30 13:51:46 UTC <byorgey> hehe, it would have helped, when I tested the SVG backend, if I had switched back to drawing the turtle stuff instead of 'square 1' =)
2013-07-30 13:51:58 UTC <byorgey> the SVG backend gives a double path too.
2013-07-30 13:52:30 UTC <ClaudiusMaximus> :)
2013-07-30 13:54:33 UTC <fryguybob> ClaudiusMaximus: Looks like a fun little cutter.
2013-07-30 13:56:00 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1414da44f http://travis-ci.org/diagrams/diagrams-contrib/builds/9648237 The build has errored.
2013-07-30 13:57:43 UTC <byorgey> I am gratified to know that when converting the Turtle module over to the new trail refactoring, I did such a good job that I even preserved existing bugs
2013-07-30 13:59:14 UTC <ClaudiusMaximus> fryguybob: makes cool noises while it works too
2013-07-30 14:13:06 UTC <fryguybob> ClaudiusMaximus: The only cutters of that size that I had seen were the Cricut cutter, but those charge for basic shapes.  It is quite the racket.
2013-07-30 14:18:36 UTC <byorgey> ClaudiusMaximus: fixed =)
2013-07-30 14:28:17 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14e8e4856 http://travis-ci.org/diagrams/diagrams-contrib/builds/9649829 The build passed.
2013-07-30 14:40:28 UTC <ClaudiusMaximus> yay
2013-07-30 18:00:26 UTC <byorgey> martingalemeasur: just sent you some emails re: arrowheads, and helping with the 0.7 release
2013-07-30 18:38:00 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 141ba2e63 http://travis-ci.org/diagrams/diagrams-lib/builds/9660599 The build passed.
2013-07-30 18:39:43 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 147f6c8f9 http://travis-ci.org/diagrams/diagrams-doc/builds/9660680 The build has errored.
2013-07-30 18:52:02 UTC <travis-ci> [travis-ci] 13diagrams/06master 14f690266 http://travis-ci.org/diagrams/diagrams/builds/9661035 The build has errored.
2013-07-30 19:00:45 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14b286e6d http://travis-ci.org/diagrams/diagrams-builder/builds/9661114 The build passed.
2013-07-30 19:11:56 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14f708287 http://travis-ci.org/diagrams/diagrams-haddock/builds/9661370 The build passed.
2013-07-30 19:52:00 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 140f22e9d http://travis-ci.org/diagrams/diagrams-doc/builds/9663028 The build has errored.
2013-07-30 20:17:35 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14a2c0f45 http://travis-ci.org/diagrams/diagrams-doc/builds/9612683 The build is still failing.
2013-07-30 20:31:51 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14668458b http://travis-ci.org/diagrams/diagrams-doc/builds/9663639 The build has errored.
2013-07-30 21:08:43 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 144c106ea http://travis-ci.org/diagrams/diagrams-doc/builds/9665440 The build has errored.
2013-07-30 21:17:22 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 148fa1cda http://travis-ci.org/diagrams/diagrams-doc/builds/9665680 The build has errored.
2013-07-30 21:20:12 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 14797fd3a http://travis-ci.org/diagrams/diagrams-doc/builds/9666289 The build has errored.
2013-07-30 21:24:16 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 1414bff44 http://travis-ci.org/diagrams/diagrams-doc/builds/9665856 The build failed.
2013-07-31 14:33:56 UTC <byorgey> martingalemeasur: are you there?
2013-07-31 14:34:24 UTC <martingalemeasur> yes
2013-07-31 14:34:57 UTC <byorgey> martingalemeasur: what happens if you run the '.make/manual/xml2html.hs.exe ....' command manually?
2013-07-31 14:35:35 UTC <martingalemeasur> same thing: cannot satisfy -package diagrams-cairo
2013-07-31 14:36:13 UTC <byorgey> hmmm
2013-07-31 14:37:26 UTC <byorgey> very strange indeed
2013-07-31 14:37:48 UTC <byorgey> and you're running this all inside an hsenv
2013-07-31 14:37:57 UTC <martingalemeasur> yes
2013-07-31 14:40:14 UTC <byorgey> ohhhh, wait, I might know why
2013-07-31 14:40:32 UTC <martingalemeasur> i hope so, this type of debugging is always frustrating
2013-07-31 14:40:44 UTC <byorgey> I know!
2013-07-31 14:40:58 UTC <byorgey> xml2html.hs is using the GHC API to get some information from the package database... but I guess it doesn't know to use the hsenv database
2013-07-31 14:41:17 UTC <byorgey> I suppose we ought to fix that anyway
2013-07-31 14:41:33 UTC <martingalemeasur> Is there a work around for now?
2013-07-31 14:41:56 UTC <byorgey> I don't know, I'm looking
2013-07-31 14:42:50 UTC <martingalemeasur> OK
2013-07-31 14:46:40 UTC <byorgey> OK, so I think the relevant code is here, from docutils: https://github.com/diagrams/docutils/blob/master/src/Text/Docutils/Transformers/Haskell.hs#L180
2013-07-31 14:47:35 UTC <byorgey> that function is reading some package database and returning a data structure we can use to look up module names or something like that
2013-07-31 14:47:47 UTC <byorgey> the problem is that it's reading the wrong package database, I think
2013-07-31 14:48:27 UTC <byorgey> we can configure the package database in the call to initPackages, by modifying dflags'
2013-07-31 14:48:46 UTC <byorgey> the documentation for DynFlags (the type of dflags') is here: http://lambda.haskell.org/platform/doc/current/ghc-api/DynFlags.html#t:DynFlags
2013-07-31 14:49:03 UTC <byorgey> I guess we need to change the pkgDatabase field of dflags'
2013-07-31 14:49:16 UTC <byorgey> martingalemeasur: do you want to try tackling this?
2013-07-31 14:49:33 UTC <martingalemeasur> so i need to clone the docutils repo and edit?
2013-07-31 14:49:37 UTC <byorgey> yes
2013-07-31 14:49:46 UTC <martingalemeasur> OK ill give it a go
2013-07-31 14:50:42 UTC <byorgey> I'm going to see what the pkgDatabase field is currently set to
2013-07-31 14:50:51 UTC <martingalemeasur> thanks
2013-07-31 14:52:20 UTC <luite> yeah it's a common problem, hsenv uses a wrapper to pass the right args, but non-ghc progs don't see it. we had the same prob for yesod devel
2013-07-31 14:52:33 UTC <luite> there used to be an env var for this, but that got deprecated
2013-07-31 14:55:27 UTC <byorgey> luite: hmm, so is there a good way to auto-detect what the right package db is?
2013-07-31 14:55:32 UTC <byorgey> how does the wrapper program work?
2013-07-31 14:56:03 UTC <byorgey> OK, pkgDatabase seems to be Nothing by default
2013-07-31 14:56:15 UTC <byorgey> which I guess means it just uses the standard one?  Not sure what the semantics are
2013-07-31 14:56:59 UTC <luite> byorgey: not really, i think yesod devel just reads the hsenv config
2013-07-31 14:57:46 UTC <byorgey> hmmm
2013-07-31 14:58:02 UTC <luite> https://github.com/yesodweb/yesod/blob/master/yesod-bin/GhcBuild.hs#L68
2013-07-31 14:59:03 UTC <byorgey> aha
2013-07-31 14:59:05 UTC <byorgey> cool, thanks luite
2013-07-31 14:59:48 UTC <byorgey> hmm, not sure how that should be adapted for using the GHC API
2013-07-31 14:59:54 UTC <byorgey> we're not constructing a command line
2013-07-31 14:59:57 UTC <luite> this is useing the GHC API
2013-07-31 15:00:04 UTC <luite> using
2013-07-31 15:00:35 UTC <luite> byorgey: you can still use parseStaticFlags / parseDynamicFlags
2013-07-31 15:01:28 UTC <luite> you probably already are using the first, to initalize some global data structures?
2013-07-31 15:02:12 UTC <byorgey> nope
2013-07-31 15:02:23 UTC <byorgey> but those look like they will work
2013-07-31 15:02:59 UTC <martingalemeasur> I'm not sure how to proceed, I'm looking at the DynFlags docs
2013-07-31 15:03:17 UTC <byorgey> martingalemeasur: note, to find a particular function in the GHC API docs it's useful to go to http://lambda.haskell.org/platform/doc/current/ghc-api/ and click on "index"
2013-07-31 15:03:21 UTC <byorgey> just FYI
2013-07-31 15:04:02 UTC <martingalemeasur> thanks
2013-07-31 15:04:43 UTC <luite> byorgey: oh i thought parseStaticFlags was pretty much required to do GHC API work, perhaps you're lucky since you don't do any code generation so you don't hit any unitalized data
2013-07-31 15:06:35 UTC <luite> the haddocks say this about parseStaticFlags "This function must be called before any session is started, i.e., before the first call to withGhc.", i guess it can be interpreted in two ways :)
2013-07-31 15:07:41 UTC <byorgey> luite: yep, we're using it strictly to read info about the package DB
2013-07-31 15:07:46 UTC <byorgey> martingalemeasur: I realize I'm kind of throwing you in the deep end here.  Please let me know if and when you are no longer having fun and would rather work on something else!
2013-07-31 15:08:51 UTC <luite> martingalemeasur: i'd also be happy to help out a bit with the GHC API if you get stuck
2013-07-31 15:08:52 UTC <martingalemeasur> I'm having fun, I'm just not sure I'll be able to takle this in a timely fashion. I haven't done much with the GHC API
2013-07-31 15:09:19 UTC <byorgey> eh, I'm not super worried about the timely part =)
2013-07-31 15:09:46 UTC <byorgey> martingalemeasur: OK, so did you see the code luite linked to above?  That is looking up the HSENV and PACKAGE_DB_FOR_GHC environment variables, which is how we can discover whether we need to look at an hsenv package database
2013-07-31 15:10:15 UTC <byorgey> you can copy that function pretty much verbatim
2013-07-31 15:10:39 UTC <byorgey> that will give us some command-line arguments
2013-07-31 15:10:44 UTC <martingalemeasur> byorgey, not yet I'll look now
2013-07-31 15:10:59 UTC <byorgey> then we need to call parseDynamicFlags (I think) to update the DynFlags using those arguments
2013-07-31 15:11:17 UTC <byorgey> that should be pretty much it.
2013-07-31 15:11:59 UTC <byorgey> where by "that should be pretty much it" I mean "of course there will be further complications I don't know about"
2013-07-31 15:12:45 UTC <martingalemeasur> byorgey: so i need to copy the function prependHsenvArgv and then call parseDynamicFlags
2013-07-31 15:13:14 UTC <luite> you can feed it to parseStaticFlags, then that will give you the remainder of the command line arguments that you can pass to parseDynamicFlags (just in case HSENV is is configured to pass static flag arguments for some reason)
2013-07-31 15:15:05 UTC <byorgey> hsenv passes flags like "-no-user-package-db  -package-db=/home/brent/src/diagrams/.hsenv_master/ghc_pkg_db"
2013-07-31 15:15:12 UTC <byorgey> are those static or dynamic? (how can you tell?)
2013-07-31 15:15:17 UTC <luite> dynamic
2013-07-31 15:15:24 UTC <martingalemeasur> byorgey: this should all happen in Haskell.hs
2013-07-31 15:15:27 UTC <byorgey> OK, so parseDynamicFlags should suffice?
2013-07-31 15:15:39 UTC <byorgey> martingalemeasur: yes
2013-07-31 15:16:00 UTC <luite> but i think the parseStaticFlags call doesn't hurt, it's just one extra line and filters out any static thing that would otherwise cause an error in parseDynamicFlags
2013-07-31 15:16:11 UTC <byorgey> OK, fair enough
2013-07-31 15:16:27 UTC <byorgey> martingalemeasur: in particular, in between the lines "let dflags' = dflags { packageFlags = ExposePackage pkg : packageFlags dflags }" and "(dflags'', pids) <- liftIO $ initPackages dflags'"
2013-07-31 15:16:29 UTC <luite> perhaps it can be removed again in some future GHC, they're trying to remove the static flags at some point
2013-07-31 15:16:56 UTC <luite> since they're a bit inconvenient, they can't be reconfigured in the same process
2013-07-31 15:18:12 UTC <martingalemeasur> byorgey: is that where i call prependHsenvArgv
2013-07-31 15:19:21 UTC <byorgey> martingalemeasur: yes, and parseDynamicFlags to update dflags'
2013-07-31 15:19:52 UTC <martingalemeasur> byorgey: what is the argument to prependDynamicFlags?
2013-07-31 15:20:07 UTC <byorgey> martingalemeasur: though note you might as well remove the argument from prependHsenvArgv, we don't have anything to prepend to
2013-07-31 15:20:20 UTC <byorgey> and give it a name without 'prepend' in it of course =)
2013-07-31 15:20:55 UTC <martingalemeasur> OK, what do i do with the returned IO [String]
2013-07-31 15:21:47 UTC <byorgey> martingalemeasur: pass the [String] to parseDynamicFlags
2013-07-31 15:21:58 UTC <byorgey> you can call noLoc to turn Strings into Located Strings
2013-07-31 15:22:25 UTC <byorgey> luite wants us to use parseStaticFlags but let's just see if we can get it working with parseDynamicFlags first
2013-07-31 15:23:13 UTC <luite> yeah sorry for that :p
2013-07-31 15:23:43 UTC <martingalemeasur> what does parseDynamicFlags return
2013-07-31 15:24:09 UTC <byorgey> martingalemeasur: go to the index of the GHC API and look up parseDynamicFlags so you can see its type
2013-07-31 15:24:23 UTC <martingalemeasur> ok
2013-07-31 15:24:51 UTC <luite> the located strings are left-over argument and warnings
2013-07-31 15:25:01 UTC <byorgey> basically it takes a DynFlags value, a list of command-line arguments, and returns a new DynFlags, along with some extra Strings we can ignore
2013-07-31 15:25:38 UTC <luite> blurgh try/catch is annoying
2013-07-31 15:26:46 UTC <martingalemeasur> so something like (dflags''', _ , _) <- parseDynamicFlags prependHsenvArgv
2013-07-31 15:27:39 UTC <byorgey> martingalemeasur: you have to pass the old dflags' to parseDynamicFlags as well
2013-07-31 15:28:01 UTC <byorgey> also, prependHsenvArg has type  IO [String],  not [String]
2013-07-31 15:28:16 UTC <byorgey> so you have to first say   args <- liftIO prependHsenvArgv
2013-07-31 15:28:23 UTC <martingalemeasur> i.e. dflags'
2013-07-31 15:28:27 UTC <byorgey> right
2013-07-31 15:28:45 UTC <byorgey> then you have to convert  args :: [String]  into  [Located String] using  map noLoc
2013-07-31 15:31:12 UTC <martingalemeasur> so i have args <- liftIO prependHsenvArgv       args' = map noLoc args       parseDynamicFlags dflags' args
2013-07-31 15:31:44 UTC <byorgey> looks about right
2013-07-31 15:33:03 UTC <martingalemeasur> OK so should i try to compile Haskell.hs
2013-07-31 15:33:45 UTC <byorgey> martingalemeasur: no, you should try to compile the whole package: just go to the docutils/ directory and run  cabal configure && cabal build
2013-07-31 15:33:58 UTC <byorgey> compiling Haskell.hs on its own is unlikely to work right
2013-07-31 15:34:03 UTC <martingalemeasur> OK
2013-07-31 15:34:30 UTC <byorgey> once it compiles of course you can install it using  cabal install  and then see if it fixes ./Shake prview
2013-07-31 15:34:53 UTC <byorgey> I've got to run, will be back later in the afternoon
2013-07-31 15:34:58 UTC <byorgey> though I have an abstract I need to write
2013-07-31 15:35:14 UTC <byorgey> martingalemeasur: if you run into more issues you can ask luite or anyone else who's around
2013-07-31 15:35:45 UTC <byorgey> this is the other reason IRC is often better than email, people who actually know stuff chime in =)
2013-07-31 15:35:59 UTC <martingalemeasur> Thanks I'll see if i can get it going otherwise maybe luite can help or we can chat briefly this afternoon
2013-07-31 15:36:06 UTC <byorgey> sounds good
2013-07-31 18:27:39 UTC <travis-ci> [travis-ci] 13active/06master 1465260d2 http://travis-ci.org/diagrams/active/builds/9704350 The build passed.
2013-07-31 18:58:43 UTC <byorgey> luite: do you know anything about hint -- specifically, whether it's possible to make it use a custom package database?
2013-07-31 18:58:58 UTC <byorgey> we're running into the same problem as before
2013-07-31 18:59:01 UTC <byorgey> re: hsenv
2013-07-31 18:59:17 UTC <luite> hmm, dunno, i'll have a look
2013-07-31 19:00:32 UTC <byorgey> ah, maybe Language.Haskell.Interpreter.Unsafe.unsafeRunInterpreterWithArgs ?
2013-07-31 19:00:32 UTC <travis-ci> [travis-ci] 13active/06master 142ce11cf http://travis-ci.org/diagrams/active/builds/9705732 The build passed.
2013-07-31 19:07:01 UTC <byorgey> martingale: so it looks like we'll have to make a similar change to Executes the interpreter, setting the args as though they were command-line args. In particular, this means args that have no effect with :set in ghci might function properly from this context.
2013-07-31 19:07:15 UTC <byorgey> doh, stupid irssi
2013-07-31 19:07:30 UTC <byorgey> martingale: so it looks like we'll have to make a similar change to https://github.com/diagrams/diagrams-builder/blob/master/src/Diagrams/Builder.hs#L115
2013-07-31 19:08:03 UTC <byorgey> copy in getHsenvArgs, and change 'runInterpreter' to http://hackage.haskell.org/packages/archive/hint/0.3.3.6/doc/html/Language-Haskell-Interpreter-Unsafe.html#v:unsafeRunInterpreterWithArgs
2013-07-31 19:08:06 UTC <luite> ah
2013-07-31 19:08:22 UTC <byorgey> ought to do the trick I think
2013-07-31 19:12:47 UTC <martingale> I'm just on a conference call right now.  Should be done in a few minutes and I'll give it a try.
2013-07-31 19:30:41 UTC <martingale> byorgey: so would the call to getHsenvArgs be in getLocalImportHashes
2013-07-31 19:38:34 UTC <martingale> byorgey: whoops! I think i see what you mean put the dflags-like code in the interpretDiagram Function
2013-07-31 19:58:58 UTC <martingale> byrogey: In interpretDiagram I tried: do args <- liftIO getHsenvArgv; unsafeRunInterpreter args $ do.
2013-07-31 20:20:01 UTC <martingale> byorgey: code is at https://github.com/jeffreyrosenbluth/diagrams-builder/blob/master/src/Diagrams/Builder.hs
2013-07-31 20:24:23 UTC <travis-ci> [travis-ci] 13active/06master 14f392158 http://travis-ci.org/diagrams/active/builds/9709152 The build passed.
2013-07-31 20:30:11 UTC <travis-ci> [travis-ci] 13active/06master 14cf62ccf http://travis-ci.org/diagrams/active/builds/9709316 The build passed.
2013-07-31 20:47:01 UTC <travis-ci> [travis-ci] 13active/06master 144aff85b http://travis-ci.org/diagrams/active/builds/9710062 The build passed.
2013-07-31 20:52:06 UTC <travis-ci> [travis-ci] 13active/06master 14f823ce4 http://travis-ci.org/diagrams/active/builds/9710188 The build passed.
2013-07-31 20:56:07 UTC <travis-ci> [travis-ci] 13active/06master 1469512ef http://travis-ci.org/diagrams/active/builds/9710392 The build passed.
2013-07-31 20:59:17 UTC <travis-ci> [travis-ci] 13active/06master 14d48d319 http://travis-ci.org/diagrams/active/builds/9710556 The build passed.
2013-07-31 21:03:35 UTC <travis-ci> [travis-ci] 13active/06master 14e5af52e http://travis-ci.org/diagrams/active/builds/9710729 The build passed.
2013-07-31 21:12:37 UTC <travis-ci> [travis-ci] 13active/06master 14da3db55 http://travis-ci.org/diagrams/active/builds/9711054 The build passed.
2013-07-31 22:22:11 UTC <byorgey> martingale: incidentally, what sorts of errors do you get when building the manual example?
2013-07-31 22:22:19 UTC <byorgey> *examples
2013-07-31 22:31:05 UTC <luite> has anyone here hdevtools working in emacs, connecting to a different machine?
2013-07-31 22:37:43 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14f72a99c http://travis-ci.org/diagrams/diagrams-builder/builds/9713614 The build passed.
2013-07-31 22:42:41 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 1499faeb1 http://travis-ci.org/diagrams/diagrams-doc/builds/9713806 The build has errored.
2013-08-01 01:42:16 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 1406972a5 http://travis-ci.org/diagrams/diagrams-doc/builds/9717637 The build has errored.
2013-08-01 13:13:38 UTC <fryguybob> humm, I'm not sure what to think of the HRC paper after a brief scan.  Not only are there no async exceptions, but also no lightweight threads.  They don't mention STM, but I doubt they have it.
2013-08-01 13:16:02 UTC <luite> hmm, those shouldn't affect performance too much though
2013-08-01 13:16:25 UTC <fryguybob> Well for the right programs it certainly would.
2013-08-01 13:16:51 UTC <fryguybob> No sparks, only explicit forkIO..
2013-08-01 13:17:27 UTC <luite> oh i mean that a singlethreaded, non-parallel program would probably not run much slower if those things were implemented
2013-08-01 13:18:54 UTC <fryguybob> luite: Right.  But they are interested in parallel workloads.  It just seems like they are interested in the ones that are not very Haskelly.
2013-08-01 13:19:35 UTC <luite> hm right
2013-08-01 13:20:53 UTC <fryguybob> Also 32-bit only is disappointing.  Other then that, it is very interesting :D
2013-08-01 13:37:39 UTC <byorgey> what's HRC?
2013-08-01 13:37:58 UTC <byorgey> oh, the Intel Haskell Research Compiler?
2013-08-01 13:39:50 UTC <fryguybob> byorgey: Intel Labs :P
2013-08-01 13:40:47 UTC <byorgey> oh, the Intel LABS Haskell Research Compiler, I see.  Pardon me. =)
2013-08-01 14:59:00 UTC <ClaudiusMaximus> hi!  how might i create something like this in diagrams instead of pens/paper/gimp?  http://mathr.co.uk/misc/2013-08-01_wedged_wobbly.jpg  i'm thinking "for each segment of a path, make a wobbly line, generate offset curve at variable width, colour fill it, offset it a bit outwards/inwards, fill the difference black"
2013-08-01 14:59:50 UTC <ClaudiusMaximus> the wobbly line is something i'll have to code up, and i vaguely remember some seeing some offset curve stuff here
2013-08-01 15:01:22 UTC <ClaudiusMaximus> alternatively i could approximate it by a whole bunch of circles, which might be easier...
2013-08-01 15:18:51 UTC <byorgey> ooh, neat idea.
2013-08-01 15:19:22 UTC <byorgey> unfortunately I think the answer is "use the stuff fryguybob has been working on but isn't done yet"
2013-08-01 15:20:18 UTC <byorgey> but let's think if there's a shortcut you could use in this particular case...
2013-08-01 15:21:17 UTC <byorgey> ClaudiusMaximus: so far we have offset curves for segments, but not for entire trails/paths
2013-08-01 15:22:21 UTC <byorgey> if we had offset curves for entire trails/paths, then I think what you described would work
2013-08-01 15:23:20 UTC <byorgey> in order to "generate offset curve at variable width" you could e.g. generate an offset curve at a fixed width, then split it into suitably small pieces, then introduce suitable wiggle by modifying the pieces
2013-08-01 15:35:39 UTC <ClaudiusMaximus> byorgey: so far i've been working on the wobbly part by recursively subdividing a catmull-rom spline and perturbing the midpoint tangent at each step
2013-08-01 15:37:04 UTC <ClaudiusMaximus> byorgey: i think i'll just approximate the fattening by putting a whole bunch of circles along the path, at least for now...
2013-08-01 15:40:48 UTC <byorgey> hehe, OK =)
2013-08-01 16:05:11 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 140fb2f49 http://travis-ci.org/diagrams/diagrams-core/builds/9741568 The build passed.
2013-08-01 16:13:05 UTC <fryguybob> ClaudiusMaximus, byorgey: Sorry, since I have actual hardware my time is kind of sucked up.
2013-08-01 16:13:39 UTC <luite> are you doing lots of stm implementation?
2013-08-01 16:14:01 UTC <fryguybob> luite: Yeah, also porting benchmarks.
2013-08-01 16:15:04 UTC <luite> oh what benchmarks?
2013-08-01 16:15:15 UTC <fryguybob> luite: Some selections from STAMP
2013-08-01 16:15:37 UTC <fryguybob> Which are not very good, but there is a lot of data from other systems.
2013-08-01 16:18:04 UTC <fryguybob> ClaudiusMaximus: Your picture makes me wonder if you can take some sort of sampling approach where you get some fair subset of t-values then pick around the original from some distribution perpendicular then have an ordered set of points that you could pass a cubic spline through.
2013-08-01 16:18:09 UTC <luite> hmm that's written in C isn't it? is that reasonably portable to haskell, do you end up with haskellish code?
2013-08-01 16:18:25 UTC <fryguybob> ClaudiusMaximus: When you get to a fork in the road there should be something sensible to do.
2013-08-01 16:19:17 UTC <fryguybob> luite: I'm not going for haskellish at this point, I just want to measure comparative overhead from existing STM's to see how expensive haskells is and how much we can reasonably expect to gain from HTM.
2013-08-01 16:19:41 UTC <luite> ok
2013-08-01 16:21:58 UTC <byorgey> fryguybob: yeah, no worries
2013-08-01 16:22:18 UTC <luite> we can force fryguybob to work on it in ~7 weeks ;)
2013-08-01 16:22:28 UTC <fryguybob> hehe
2013-08-01 16:22:56 UTC <byorgey> =)
2013-08-01 16:23:32 UTC <fryguybob> Speaking of which, byorgey, we should book things.
2013-08-01 16:23:42 UTC <luite> \o/
2013-08-01 16:23:47 UTC <byorgey> indeed
2013-08-01 16:24:58 UTC <luite> you both arrive the 21st, right?
2013-08-01 16:25:59 UTC <fryguybob> luite: I get in late on the 21st
2013-08-01 16:26:31 UTC <luite> ok, i was planning ot arrive the same day, delta has a direct flight from amsterdam
2013-08-01 16:29:06 UTC <travis-ci> [travis-ci] 13backend-tests/06master 147677af4 http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9742527 The build has errored.
2013-08-01 16:29:22 UTC <luite> <- dinner
2013-08-01 16:38:28 UTC <ClaudiusMaximus> turns out splines are too complicated for my brain so i just subdivided linear segments - seems to look ok (no variable width yet though) http://mathr.co.uk/misc/2013-08-01_diagrams_wobble.png
2013-08-01 16:40:13 UTC <fryguybob> ClaudiusMaximus: Those look ince and wobbly :D
2013-08-01 16:41:35 UTC <byorgey> nice =)
2013-08-01 16:42:30 UTC <byorgey> ClaudiusMaximus: once you have the linear segments, you could try just extracting their vertices and calling 'cubicSpline'
2013-08-01 16:42:45 UTC <byorgey> that might make it look a bit smoother, and/or require less subdivision
2013-08-01 16:46:34 UTC <ClaudiusMaximus> interesting, and then get points from the spline to put circles on?
2013-08-01 16:46:53 UTC <ClaudiusMaximus> thanks btw, will post the code soon, gotta do dishes right now...
2013-08-01 16:50:44 UTC <fryguybob> Humm, graphs are an interesting generalization of paths... why have I never thought about this before?
2013-08-01 16:59:28 UTC <travis-ci> [travis-ci] 13backend-tests/06master 144af334e http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9743171 The build has errored.
2013-08-01 17:03:58 UTC <fryguybob> Mmmm crypto magic.
2013-08-01 17:14:03 UTC <travis-ci> [travis-ci] 13backend-tests/06master 143682980 http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9744267 The build passed.
2013-08-01 17:15:55 UTC <byorgey> I wanted to get travis to automatically upload the results of the backend-tests to the diagrams website upon successful completion of a build
2013-08-01 17:16:31 UTC <byorgey> but that requires authenticating to projects.haskell.org, which can only be done via SSH key, and obviously I don't want to store my private SSH key in the repository.
2013-08-01 17:17:59 UTC <byorgey> travis has some complicated stuff you can do involving encrypting stuff with a travis-generated public key and then instructing travis to unencrypt it during the build, but (a) it's very complicated and (b) seems to require a pro account
2013-08-01 17:19:04 UTC <fryguybob> byorgey: 
2013-08-01 17:19:07 UTC <fryguybob> byorgey: Ah
2013-08-01 17:59:02 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14a4fc9bb http://travis-ci.org/diagrams/diagrams-doc/builds/9744875 The build passed.
2013-08-01 18:16:05 UTC <travis-ci> [travis-ci] 13diagrams-gtk/06master 14e476e4a http://travis-ci.org/diagrams/diagrams-gtk/builds/9746124 The build passed.
2013-08-01 18:21:56 UTC <travis-ci> [travis-ci] 13diagrams-gtk/06master 147b39e98 http://travis-ci.org/diagrams/diagrams-gtk/builds/9746293 The build passed.
2013-08-01 18:42:16 UTC <fryguybob> luite: By the way, my benchmark work in progress is here: https://github.com/fryguybob/ghc-stm-benchmarks
2013-08-01 18:42:50 UTC <luite> oh vacation? where are you?
2013-08-01 18:44:04 UTC <fryguybob> luite: The benchmark is called vacation :D
2013-08-01 18:44:52 UTC <fryguybob> But I am in a Starbucks in Rochester if that counts as a vacation.
2013-08-01 18:46:09 UTC <luite> ow :(
2013-08-01 18:46:13 UTC <luite> hehe
2013-08-01 18:46:24 UTC <luite> for me it would count
2013-08-01 19:09:23 UTC <carter> i need a vacation
2013-08-01 19:09:52 UTC <luite> come to holland
2013-08-01 19:09:56 UTC <luite> we have windmills and stuff
2013-08-01 19:15:04 UTC <carter> stufff
2013-08-01 19:16:17 UTC <luite> yes stuff
2013-08-01 19:16:49 UTC <luite> most of our windmills are made of steel and polyester though, nowadays, and made in germany
2013-08-01 19:16:53 UTC <byorgey> and you have stroopwafels!
2013-08-01 19:17:05 UTC <luite> oh yes stroopwafels, how could i forget
2013-08-01 19:17:06 UTC <byorgey> or stroopwafeln, or whatever the right plural is
2013-08-01 19:17:23 UTC <luite> no that would be the german plural, except they don't have stroopwafels
2013-08-01 19:17:29 UTC <byorgey> indeed.
2013-08-01 19:17:46 UTC <byorgey> you also have yummy cheese
2013-08-01 19:18:44 UTC <luite> that is true, old gouda is one of my favourites :)
2013-08-01 19:20:23 UTC <byorgey> mine too =)
2013-08-01 19:25:24 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 149b0db22 http://travis-ci.org/diagrams/diagrams-haddock/builds/9748506 The build passed.
2013-08-01 19:26:08 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 142098cd2 http://travis-ci.org/diagrams/diagrams-haddock/builds/9748508 The build passed.
2013-08-01 19:28:57 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1414eee30 http://travis-ci.org/diagrams/diagrams-haddock/builds/9748666 The build passed.
2013-08-01 19:33:46 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 14f5c5502 http://travis-ci.org/diagrams/diagrams-haddock/builds/9748664 The build passed.
2013-08-01 19:53:52 UTC <fryguybob> mmmmmmm gouda
2013-08-01 19:54:28 UTC <ClaudiusMaximus> cubicSpline gives weird results when the first point is the same as the last point (though it seems duplicated points in the middle don't matter)
2013-08-01 19:55:03 UTC <fryguybob> ClaudiusMaximus: Humm
2013-08-01 19:55:30 UTC <ClaudiusMaximus> maybe it was just coincidence, i'm using randomness...
2013-08-01 19:55:43 UTC <fryguybob> ClaudiusMaximus: Checking now...
2013-08-01 19:56:36 UTC <ClaudiusMaximus> by weird i mean it gives a blob/point/loop (can't tell in my actual code) instead of a smooth curve
2013-08-01 20:00:33 UTC <ClaudiusMaximus> and when that happens the bool "should be closed" flag has no visible effect
2013-08-01 20:05:54 UTC <fryguybob> ClaudiusMaximus: I don't see anything fishy with a simple test.  You can get loops between segments when points are close together followed by points that are not close together.
2013-08-01 20:08:35 UTC <ClaudiusMaximus> fryguybob: ok - makes sense
2013-08-01 20:09:26 UTC <fryguybob> Oh, when first and last match, oops, I was looking at something else.
2013-08-01 20:14:33 UTC <ClaudiusMaximus> with the obvious workaround (dropping the duplicates) the splines look a lot better than the earlier test http://mathr.co.uk/misc/2013-08-01_diagrams_wobble_spline.png  (and renders much quicker too)
2013-08-01 20:14:53 UTC <luite> ok looks cool :)
2013-08-01 20:16:03 UTC <ClaudiusMaximus> :)
2013-08-01 20:16:22 UTC <ClaudiusMaximus> byorgey: thanks for the cubicSpline tip
2013-08-01 20:20:21 UTC <fryguybob> ClaudiusMaximus: So smooth :D
2013-08-01 22:07:37 UTC <luite> fryguybob / byorgey : you need anything from me for the otel reservation?
2013-08-01 23:32:44 UTC <byorgey> ClaudiusMaximus: cool, looks nice!
2013-08-01 23:33:35 UTC <byorgey> luite: probably not, we'll let you know if so
2013-08-01 23:34:19 UTC <luite> ok great, so you're both arriving the 21st, leaving the 28th in the evening?
2013-08-01 23:41:01 UTC <byorgey> yes
2013-08-01 23:41:02 UTC <byorgey> at least, I am
2013-08-01 23:41:27 UTC <luite> ok, i'll take the train to NYC the 28th then
2013-08-01 23:41:36 UTC <byorgey> OK, sounds good
2013-08-01 23:41:56 UTC <luite> don't want to miss the FARM workshop :)
2013-08-01 23:42:00 UTC <byorgey> =)
2013-08-01 23:43:19 UTC <luite> hm, do you know if demo proposals for the haskell symposium will be published anywhere? i tried to update mine last week but easychair didn't allow me. then mailed the haskell symposium chair, but no response
2013-08-01 23:43:59 UTC <luite> i clarified some of the examples and updated the API a bit
2013-08-01 23:44:30 UTC <luite> even if not in formal proceedings, if there's a pdf link anywhere it would be bettr to have the latest version
2013-08-01 23:45:13 UTC <byorgey> good question, I don't know
2013-08-01 23:45:38 UTC <luite> is conal the one who suggested VLSI layouts as possible outputs? :)
2013-08-01 23:45:58 UTC <byorgey> possible outputs of what?
2013-08-01 23:46:15 UTC <byorgey> oh, for FARM?  I don't know, maybe =)
2013-08-01 23:46:18 UTC <luite> of beautiful programs that generate beautiful artefacts
2013-08-01 23:46:48 UTC <byorgey> right
2013-08-01 23:47:24 UTC <luite> i briefly met him in SF last year, but didn't get the chance to talk to him about work. but he asked some questions pointing in that direction on some mailing list
2013-08-01 23:47:37 UTC <luite> synthesizing stuff from external core
2013-08-01 23:47:49 UTC <luite> oh not only mailing list, he was in #ghc
2013-08-01 23:51:30 UTC <luite> anyway it seemed interesting :)
2013-08-02 00:22:59 UTC <luite> oh hm Rochester is almost as far from NYC as from Boston... i thought it was much closer to NYC :)
2013-08-02 00:29:37 UTC <byorgey> yes, NY is a very wide state
2013-08-02 01:07:36 UTC <fryguybob> I've never been to NYC, well, I was at the airport once.
2013-08-02 01:08:49 UTC <luite> oh really :)
2013-08-02 01:09:06 UTC <luite> that explains your suggestion to go to montana instead
2013-08-02 01:09:44 UTC <fryguybob> ICFP 2010 was when I flew through NYC
2013-08-02 01:11:03 UTC <luite> is there a list of papers from this year already? and what day will be the exam to check if we have read and understood them all?
2013-08-02 01:13:21 UTC <fryguybob> luite: I already took the first practice exam
2013-08-02 01:14:29 UTC <luite> oh noes i'm behind
2013-08-02 01:15:40 UTC <luite> i hope doing well in the programming contest gets you extra credit this year
2013-08-02 01:16:02 UTC <fryguybob> oh yeah, that's being run by the MSR people right?
2013-08-02 01:17:54 UTC <luite> ah apparently it is
2013-08-02 01:17:56 UTC <luite> next week
2013-08-02 01:18:07 UTC <luite> you going to participate?
2013-08-02 01:24:16 UTC <fryguybob> luite: I don't have time too, unfortunately.  I find the topic very interesting though, I'll be interested in seeing the problem and what people come up with.
2013-08-02 01:26:50 UTC <luite> you mean program synthesis?
2013-08-02 01:29:18 UTC <luite> i don't have time either :(
2013-08-02 02:14:34 UTC <fryguybob> luite: Yeah program synthesis.
2013-08-02 12:06:25 UTC <ClaudiusMaximus> 99.99% finished the code part of my project... needs documenting and splitting up though (i have 1 module with 550 lines of code and almost 0 comments...)  sample output: http://mathr.co.uk/misc/2013-08-02_wedged.png
2013-08-02 12:08:36 UTC <luite> i have about 11000 lines with almost no comments ;p
2013-08-02 12:10:48 UTC <luite> oh i forgot the rts, that's only the haskell
2013-08-02 12:11:15 UTC <ClaudiusMaximus> wow
2013-08-02 12:12:09 UTC <luite> hehe that's ghcjs
2013-08-02 12:12:17 UTC <luite> there are soem comments but i should definitely improve
2013-08-02 12:12:28 UTC <luite> also there can probably some code be deleted or redone more efficiently
2013-08-02 12:12:50 UTC <luite> hm, someone from fpcomplete said that they have 270k loc or so
2013-08-02 12:13:03 UTC <luite> looks like they're a lot more productive coders than i am :p
2013-08-02 12:13:07 UTC <ClaudiusMaximus> yeah i like having 1 module for all the things so that ghc -Wall can tell me which bits i can remove
2013-08-02 12:13:43 UTC <luite> unless they counted yesod and other libs
2013-08-02 12:41:06 UTC <ClaudiusMaximus> hm, seems to be slow to render though - took around 3m40s when i was outputting 55x79 ppm images, but with the more beautiful diagrams output it takes around 35m - that's around 10s per image...  but i suppose it's not so bad considering each image has ~3500 circles...
2013-08-02 12:41:44 UTC <luite> whoah :)
2013-08-02 12:41:50 UTC <ClaudiusMaximus> *10s longer per image
2013-08-02 12:42:02 UTC <luite> is that svg output?
2013-08-02 12:42:06 UTC <ClaudiusMaximus> png
2013-08-02 12:42:11 UTC <ClaudiusMaximus> with cairo
2013-08-02 12:42:40 UTC <ClaudiusMaximus> i suspect some of the badness is calling   centerXY  on the whole collection of circles
2013-08-02 12:43:37 UTC <ClaudiusMaximus> which is a bug in itself because i know exactly where i want everything, and centerXY moves them slightly out of alignment (due to the wobbles)
2013-08-02 12:44:25 UTC <ClaudiusMaximus> so maybe i can give it a simpler envelope so that it doesn't need to care about all the envelopes of all the circles
2013-08-02 13:06:20 UTC <ClaudiusMaximus> yep simpler envelope fixes the slight misalignment issue, and now it takes around 16m30s instead of 35m :D
2013-08-02 13:06:38 UTC <luite> lol
2013-08-02 13:06:55 UTC <luite> you could render half of toy story in that time ;)
2013-08-02 13:43:01 UTC <ClaudiusMaximus> http://mathr.co.uk/misc/2013-08-02_wedged.gif
2013-08-02 13:48:49 UTC <luite> hm, what's the goal, just wobbly lines?
2013-08-02 13:52:14 UTC <ClaudiusMaximus> there's a long list of restrictions in the depth first search i wrote to generate them - things like "no adjacent tiles of same colour", "no complete rows/columns", "no tile can be moved", "fair distribution of colours", etc
2013-08-02 13:56:15 UTC <luite> yeah complete rows would obviously be removed ;)
2013-08-02 16:34:48 UTC <byorgey> ClaudiusMaximus: very cool!
2013-08-02 16:35:30 UTC <byorgey> ClaudiusMaximus: when you're done, if you are able to send me a nice self-contained version I could use as a benchmark (to attempt some more profiling/optimization) that would be great
2013-08-02 16:39:25 UTC <ClaudiusMaximus> byorgey: will push a repository later today - but how self-contained do you need?
2013-08-02 16:40:22 UTC <byorgey> ClaudiusMaximus: well, never mind, forget about the "self-contained" part.  How about I just send you a message if I trouble building it. =)
2013-08-02 16:40:24 UTC <luite> no big dependencies like diagrams-core ;)
2013-08-02 16:40:26 UTC <ClaudiusMaximus> oh joy.  i just got a cairo internal error/abort after making my thingy use more cores
2013-08-02 16:40:31 UTC <byorgey> eek
2013-08-02 16:40:40 UTC <ClaudiusMaximus> i guess cairo not thread safe?
2013-08-02 16:40:51 UTC <byorgey> ah, yes, parallelizing diagrams was something I was discussing offhandedly with bergey
2013-08-02 16:41:07 UTC <byorgey> didn't know cairo wasn't threadsafe but it wouldn't surprise me.
2013-08-02 16:41:54 UTC <ClaudiusMaximus> http://lists.cairographics.org/archives/cairo/2009-February/016648.html
2013-08-02 16:42:09 UTC <ClaudiusMaximus> it's supposed to be threadsafe but maybe it doesn't like haskell's threads jumping around
2013-08-02 16:42:55 UTC <byorgey> hmm, maybe not
2013-08-02 16:43:19 UTC <ClaudiusMaximus> Wedged: /tmp/buildd/cairo-1.12.2/src/cairo-hash.c:506: _cairo_hash_table_lookup_exact_key: Assertion `!"reached"' failed.
2013-08-02 16:43:21 UTC <byorgey> maybe you need forkOS?  (disclaimer: I actually don't understand the distinction between forkIO and forkOS at all)
2013-08-02 16:43:22 UTC <ClaudiusMaximus> Aborted
2013-08-02 16:43:23 UTC <ClaudiusMaximus> is the error i got
2013-08-02 16:43:37 UTC <byorgey> anyway, I'm off to school.  I hope to finish getting the diagrams website ported to hakyll 4 this afternoon.
2013-08-02 16:43:42 UTC <ClaudiusMaximus> mm, yes - or runInBoundThread or something
2013-08-02 16:43:49 UTC <ClaudiusMaximus> cool!
2013-08-02 16:44:03 UTC <luite> forkOS runs in a bound thread indeed, but if it's threadsafe that shouldn't be necessary
2013-08-02 17:02:30 UTC <ClaudiusMaximus> luite: mm, true - anyway forkOS fixed the abort but it didn't scale too well (11m30s wall clock time with 2 cores instead of 16m30s)
2013-08-02 17:04:05 UTC <gabor> forkOS is expensive when done often, I assume you have tried forkIO?
2013-08-02 17:04:43 UTC <ClaudiusMaximus> gabor: yes => cairo internal error
2013-08-02 17:05:37 UTC <ClaudiusMaximus> gabor: i have a pool of workers (1 per core) and feed them jobs via a TBQueue
2013-08-02 18:32:20 UTC <ClaudiusMaximus> huh, seems forkOS doesn't eliminate the crash entirely (but makes it rare) - guess it must be a cairo bug...
2013-08-02 18:34:55 UTC <byorgey> =(
2013-08-02 18:39:11 UTC <ClaudiusMaximus> probably fixed by now, cairo 1.12.2 is old
2013-08-02 18:39:19 UTC <ClaudiusMaximus> they're up to 1.12.14 noe
2013-08-02 18:39:55 UTC <ClaudiusMaximus> .2 is april 2012
2013-08-02 18:41:07 UTC <luite> did that come with your OS?
2013-08-02 18:41:38 UTC <ClaudiusMaximus> yes, debian wheezy
2013-08-02 18:42:13 UTC <luite> ah hmm, must sounds not easily upgradable
2013-08-02 18:45:22 UTC <ClaudiusMaximus> luite: yep.  wants to remove 279 packages
2013-08-02 18:47:03 UTC <ClaudiusMaximus> oh hm, seconds alternative is better - just libwayland0 to remove and some x/mesa stuff to upgrade
2013-08-02 18:49:11 UTC <luite> oh does wheezy run on wayland now?
2013-08-02 18:49:25 UTC <ClaudiusMaximus> don't think so
2013-08-02 18:49:36 UTC <ClaudiusMaximus> not sure where it comes from :)
2013-08-02 18:50:13 UTC <ClaudiusMaximus> oh, mplayer has it as a dependency (presumably to support all possible backends)
2013-08-02 18:52:05 UTC <luite> ah i see
2013-08-02 18:52:33 UTC <luite> it did sound a bit unlikely for debian to be one of the first to switch to something new ;)
2013-08-02 18:52:51 UTC <ClaudiusMaximus> (and libwayland0 is split to 2 packages for client and server now it seems)
2013-08-02 18:56:16 UTC <luite> but at least debian didn't mess up the selinux policy like ubuntu
2013-08-02 19:57:44 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14d80e79d http://travis-ci.org/diagrams/diagrams-doc/builds/9788277 The build has errored.
2013-08-02 20:00:05 UTC <ClaudiusMaximus> woe, still crashes with cairo 1.12.14 :'(
2013-08-02 20:01:43 UTC <byorgey> sad =(
2013-08-02 20:04:02 UTC <ClaudiusMaximus> i guess i'll stick to "5 mins slower, but doesn't randomly abort"
2013-08-02 20:15:21 UTC <travis-ci> [travis-ci] 13diagrams-doc/06hakyll4 14d80e79d http://travis-ci.org/diagrams/diagrams-doc/builds/9788267 The build has errored.
2013-08-02 20:34:15 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14d80e79d http://travis-ci.org/diagrams/diagrams-doc/builds/9788277 The build has errored.
2013-08-02 22:08:46 UTC <ClaudiusMaximus> byorgey: pushed https://gitorious.org/maximus/postcards (might be too big for benchmark/profiling?  takes 16m30s on my laptop and 14m on my desktop, generates 38MB of output.  also note the Free Art License.  need to write a blog post about it next week, the code is undocumented so far..)
2013-08-02 22:10:43 UTC <luite> hah gitorious, how nonconformist ;)
2013-08-02 22:11:16 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14d80e79d http://travis-ci.org/diagrams/diagrams-doc/builds/9788277 The build was broken.
2013-08-02 22:39:03 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 147dae3c3 http://travis-ci.org/diagrams/diagrams-doc/builds/9792406 The build has errored.
2013-08-03 01:40:39 UTC <ClaudiusMaximus> seems that cairo crash is during cleanup of the toy font cache - it tries to remove something from a hash table, which requires looking up the entry - the lookup fails because the item to be removed wasn't in the hash table in the first place...
2013-08-03 01:41:03 UTC <ClaudiusMaximus> but zzz time
2013-08-03 02:25:32 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1491e7fda http://travis-ci.org/diagrams/diagrams-doc/builds/9796470 The build has errored.
2013-08-03 02:48:54 UTC <byorgey> gah, it keeps failing because of connection timeouts while downloading packages from Hackage---a different package every time
2013-08-03 02:51:19 UTC <luite> use hdiff temporarily instead
2013-08-03 03:03:22 UTC <byorgey> oh, good idea
2013-08-03 03:25:37 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1491e7fda http://travis-ci.org/diagrams/diagrams-doc/builds/9796470 The build passed.
2013-08-03 05:46:03 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14adf32de http://travis-ci.org/diagrams/diagrams-doc/builds/9799096 The build has errored.
2013-08-03 06:11:31 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14f078ad4 http://travis-ci.org/diagrams/diagrams-doc/builds/9799244 The build has errored.
2013-08-03 06:25:26 UTC <travis-ci> [travis-ci] 13backend-tests/06master 14fb8ecfa http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9799735 The build passed.
2013-08-03 14:47:51 UTC <ClaudiusMaximus> ugh, withArgs is incredibly thread-unsafe :-/
2013-08-03 14:55:51 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14e97edb9 http://travis-ci.org/diagrams/diagrams-doc/builds/9807792 The build has errored.
2013-08-03 14:56:27 UTC <luite> hehe yeah it stores the args in a global var, right?
2013-08-03 14:58:15 UTC <ClaudiusMaximus> worse - it calls an foreign import unsafe c function to store the args somewhere, without any locking afaict...
2013-08-03 15:04:37 UTC <luite> ah
2013-08-03 15:04:52 UTC <luite> i think i had to implement that in the ghcjs runtime, fortunately that's single threaded :)
2013-08-03 15:11:30 UTC <ClaudiusMaximus> http://lpaste.net/91477 is my progress in debugging this crash, also mentioned it in #cairo where someone suggested it was reference counting going wrong...
2013-08-03 16:03:51 UTC <ClaudiusMaximus> ah, i think i figured it out:  haskell cairo bindings use finalizers, which don't necessarily run in the same thread :(
2013-08-03 16:34:16 UTC <luite> cairo requires that something is released in the same thread that allocated it?
2013-08-03 16:37:41 UTC <ClaudiusMaximus> apparently not, according to #cairo
2013-08-03 16:37:49 UTC <ClaudiusMaximus> so my search for the cause goes on...
2013-08-03 18:45:14 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14c1cd58b http://travis-ci.org/diagrams/diagrams-doc/builds/9812272 The build has errored.
2013-08-03 20:44:42 UTC <travis-ci> [travis-ci] 13diagrams/06master 148f0266b http://travis-ci.org/diagrams/diagrams/builds/9815199 The build has errored.
2013-08-03 21:13:33 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 146fd62e0 http://travis-ci.org/diagrams/diagrams-doc/builds/9815006 The build has errored.
2013-08-04 01:35:47 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14f5d84ae http://travis-ci.org/diagrams/diagrams-lib/builds/9820282 The build passed.
2013-08-04 02:30:09 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 144ea7251 http://travis-ci.org/diagrams/diagrams-doc/builds/9820689 The build passed.
2013-08-04 17:35:56 UTC <ClaudiusMaximus> byorgey: combine spawn and process packages on hackage?
2013-08-04 17:37:24 UTC <byorgey> well, the problem is that it happens in the context of rewriting an XML tree
2013-08-04 17:37:39 UTC <ClaudiusMaximus> oh.
2013-08-04 17:38:16 UTC <byorgey> I don't know how to replace the diagrams code in the XML tree with placeholders for future results and
2013-08-04 17:38:21 UTC <byorgey> s/and//
2013-08-04 17:39:10 UTC <ClaudiusMaximus> if you can extract the code, surely you can replace it?
2013-08-04 17:39:22 UTC <ClaudiusMaximus> or is it some xsltproc hell
2013-08-04 17:41:03 UTC <byorgey> it's hxt
2013-08-04 17:41:45 UTC <byorgey> I mean, maybe I have to extract all the code *first*, compile them all in parallel, and then generate the new tree
2013-08-04 17:42:00 UTC <byorgey> right now it just does a single pass over the tree, compiling each diagram and replacing it with its output.
2013-08-04 17:42:21 UTC <ClaudiusMaximus> hm, ok
2013-08-04 17:43:08 UTC <ClaudiusMaximus> what about generating a unique id while saving the code somewhere, then use defaultMain -o uniqueid to the right image file?
2013-08-04 17:43:31 UTC <ClaudiusMaximus> or am i missing something important?
2013-08-04 17:44:48 UTC <byorgey> the image files are named based on a hash of the code, which is important because it means we can avoid recompiling things that haven't changed
2013-08-04 17:45:01 UTC <ClaudiusMaximus> right, that makes sense
2013-08-04 17:45:25 UTC <byorgey> but that might work---just generate the hash + fork off a process to compile it
2013-08-04 17:45:29 UTC <ClaudiusMaximus> yeah
2013-08-04 17:45:35 UTC <byorgey> instead of waiting until the whole thing is compiled to return the hash
2013-08-04 17:46:25 UTC <ClaudiusMaximus> but then you might have that old issue of "when main exits, all the other threads vanish"
2013-08-04 17:46:43 UTC <byorgey> right, we'd have to be careful to wait for all the threads to finish at the end
2013-08-04 17:47:36 UTC <byorgey> which complicates matters since we have to accumulate thread id's while doing the traversal, in addition to replacing the code with links to images
2013-08-04 17:48:24 UTC <byorgey> maybe I'll first try the simpler approach of doing two passes -- one to extract all the code, and another to replace
2013-08-04 17:49:26 UTC <ClaudiusMaximus> nah, just write an IO (IO () -> IO (), IO()) that returns a wrapped forkIO and a wait for all threads
2013-08-04 17:50:48 UTC <ClaudiusMaximus> then perhaps main = do{  (forkSafe, waitForThreads) <- threadManager; ignoreExceptionsFrom realMain ; waitForThreads }
2013-08-04 17:52:29 UTC <ClaudiusMaximus> (where realMain is really passsed forkSafe to use instead of forkIO)
2013-08-04 17:55:26 UTC <byorgey> oh, brilliant =)
2013-08-04 17:55:57 UTC <ClaudiusMaximus> and forkSafe could keep track of how many threads have been launched to avoid dos'ing the host
2013-08-04 17:56:59 UTC <byorgey> I doubt that will be a problem, we're only talking about ~100 threads here, and they are lightweight threads managed by the Haskell RTS
2013-08-04 17:57:39 UTC <ClaudiusMaximus> oh - i thought each of those would call a system ghc process
2013-08-04 17:57:48 UTC <byorgey> OH
2013-08-04 17:57:48 UTC <byorgey> true =)
2013-08-04 17:58:13 UTC <ClaudiusMaximus> spawn package has a pool thing using qsem
2013-08-04 17:58:36 UTC <ClaudiusMaximus> http://hackage.haskell.org/packages/archive/spawn/0.3/doc/html/Control-Concurrent-Spawn.html
2013-08-04 18:00:58 UTC <byorgey> nice
2013-08-04 18:02:36 UTC <ClaudiusMaximus> you could probably use spawn and pool almost as is, the forkSafe could writeChan c . Just =<< spawn . yourPool, and waitForThreads would writeChan c Nothing then readChan repeatedly and wait for each Just thread and quit on Nothing
2013-08-04 18:24:38 UTC <ClaudiusMaximus> byorgey: actually something like withManagedThreads :: ((IO () -> IO ()) {- ^ managed fork -} -> IO ()) {- ^ wrapped main -} -> IO () might be cleaner, automagically cleaning up when the wrapped main finishes (and not before)
2013-08-04 20:18:52 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14479727b http://travis-ci.org/diagrams/diagrams-doc/builds/9837516 The build passed.
2013-08-04 23:55:22 UTC <cmears> I just saw byorgey's call for gallery examples
2013-08-04 23:55:28 UTC <cmears> I recently made this pretty chart:
2013-08-04 23:55:34 UTC <cmears> http://www.cmears.id.au/files/concert-plot-input_order.pdf
2013-08-04 23:55:36 UTC <fryguybob> byorgey: I got a factorization poster for Rebekah for her birthday.  I haven't looked at it all, but the bottom edge looks nice :D
2013-08-04 23:55:45 UTC <carter> cmears awesome
2013-08-04 23:55:54 UTC <cmears> But if there are already charty-things perhaps there's no need for such an example?
2013-08-05 00:01:59 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 146a8afb3 http://travis-ci.org/diagrams/diagrams-doc/builds/9842300 The build has errored.
2013-08-05 00:03:37 UTC <carter> is the charts-diagrams stuff ready for use?
2013-08-05 00:43:43 UTC <travis-ci> [travis-ci] 13backend-tests/06master 14f029fe3 http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9843425 The build passed.
2013-08-05 01:03:08 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14d8d6006 http://travis-ci.org/diagrams/diagrams-lib/builds/9843720 The build passed.
2013-08-05 01:07:08 UTC <travis-ci> [travis-ci] 13diagrams-cairo/06master 14bfa5f89 http://travis-ci.org/diagrams/diagrams-cairo/builds/9843768 The build passed.
2013-08-05 02:11:10 UTC <byorgey> cmears: oh, that would be great for the gallery!  We don't already have charty things.
2013-08-05 02:11:40 UTC <byorgey> carter: it is ready or very close to it. I think Jan just needs to do some cleanup and merging and releasing and such.
2013-08-05 02:11:56 UTC <byorgey> fryguybob: fun =)
2013-08-05 02:12:17 UTC <byorgey> fryguybob: I am not 100% happy with the way the colors look, but I don't think that is imagekind's fault
2013-08-05 02:17:30 UTC <carter> cool
2013-08-05 02:17:48 UTC <carter> at the current rate i'll have time to play with it late september or someting :)
2013-08-05 02:18:05 UTC <carter> i've been following the dev gsoc emails, but not following it closely
2013-08-05 02:18:25 UTC <travis-ci> [travis-ci] 13backend-tests/06master 14370afc9 http://travis-ci.org/diagrams/diagrams-backend-tests/builds/9844823 The build passed.
2013-08-05 02:41:16 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14b89d1d1 http://travis-ci.org/diagrams/diagrams-doc/builds/9844738 The build has errored.
2013-08-05 03:00:05 UTC <fryguybob> byorgey: I guess that means it is time to include fancy CMYK stuff :P
2013-08-05 03:39:07 UTC <cmears> byorgey, I'll try to tidy the code a bit and add it to the gallery
2013-08-08 14:41:48 UTC <byorgey> cmears: currently, no
2013-08-08 14:42:44 UTC <byorgey> cmears: I am not sure that is even possible
2013-08-08 14:43:45 UTC <byorgey> oh, hmm, maybe it is
2013-08-08 14:47:34 UTC <byorgey> we could change Trace to something like  Point v -> (NegInf (Scalar v), v -> PosInf (Scalar v))
2013-08-08 14:47:40 UTC <byorgey> with the derived Monoid semantics
2013-08-08 14:48:50 UTC <byorgey> cmears: note, however, that 'radius' is based on the envelope, not the trace
2013-08-08 18:19:30 UTC <fryguybob> ACTION registers for FARM
2013-08-08 19:04:41 UTC <byorgey> =D
2013-08-08 19:09:11 UTC <fryguybob> Strange... they want proof of enrollment so I found the page at my university that produces this sort of information and they list my Anticipated Graduation Date per term.
2013-08-08 19:10:04 UTC <fryguybob> At this point they anticipate Dec 2017!  But when I started they had May 2019.  Somebody is not optimistic, but it appears I'm getting better.
2013-08-08 19:13:05 UTC <byorgey> haha
2013-08-08 19:18:15 UTC <luite> or optimistic about years of cheap student labour
2013-08-08 19:22:14 UTC <byorgey> fryguybob: maybe your conditional probability of actually graduating increases the longer you stay in the program, and they are factoring that into the anticipated graduation date
2013-08-08 19:23:13 UTC <luite> that doesn't quite sound right... :)
2013-08-08 19:23:20 UTC <byorgey> =)
2013-08-08 19:23:34 UTC <fryguybob> byorgey: I didn't know they had such a sophisticated system :D
2013-08-08 19:24:10 UTC <byorgey> never attribute to sophistication that which can be explained by bugs, eh?
2013-08-08 19:24:57 UTC <fryguybob> Sophistication is just how well you hide the bugs.
2013-08-08 19:25:19 UTC <byorgey> heh, that sounds about right.
2013-08-08 19:27:33 UTC <fryguybob> Oh, they also list me as withdrawn last December then back in Feb.
2013-08-08 19:27:45 UTC <byorgey> haha, what
2013-08-08 19:27:46 UTC <fryguybob> So much drama and I never knew.
2013-08-08 19:28:31 UTC <fryguybob> ACTION makes a note to buy the Graduate Coordinator some chocolate.
2013-08-08 19:29:31 UTC <fryguybob> (I susspect something automatic happened when they gave me a masters degree.)
2013-08-08 19:33:20 UTC <byorgey> ooh, you got a masters degree?
2013-08-08 19:33:29 UTC <byorgey> I didn't even get one of those
2013-08-08 19:33:40 UTC <byorgey> though I guess they'd probably give me one if I asked?  I dunno.
2013-08-08 19:44:14 UTC <fryguybob> byorgey: Yeah it kind of just showed up in my mailbox
2013-08-08 19:48:21 UTC <byorgey> You have been PRE-APPROVED for a Masters Degree!  Just fill out your name, email address, and bank account info
2013-08-08 23:41:04 UTC <cmears> byorgey, I ended up doing my "maximum radius" calculation by brute force:
2013-08-08 23:41:21 UTC <cmears> maximum (map (\a -> envelopeS (rotateBy a unitX) diagram) [0,0.01..1])
2013-08-09 00:47:10 UTC <byorgey> cmears: heh, yes, that works =)
2013-08-09 00:49:47 UTC <byorgey> hmm, ICFP contest looks fun this year
2013-08-09 00:49:57 UTC <fryguybob> Oh, are there more detail now
2013-08-09 00:50:06 UTC <byorgey> http://icfpc2013.cloudapp.net/
2013-08-09 01:01:51 UTC <luite> hmm interesting
2013-08-09 01:02:03 UTC <cmears> Is this any use for the gallery too?  It demonstrates SVGFonts, envelopes, arrowheads and named diagrams.  http://www.cmears.id.au/files/cube.pdf
2013-08-09 01:24:32 UTC <byorgey> cmears: sure!
2013-08-09 01:24:57 UTC <byorgey> cmears: and once we get real arrows in (soon) you can update it to use that instead of constructing them manually
2013-08-09 01:28:16 UTC <cmears> cool (:
2013-08-09 01:29:22 UTC <byorgey> yes, I'm especially interested in these sorts of "real-world" examples
2013-08-09 01:29:30 UTC <byorgey> we have lots of fractally, mathy sorts of examples
2013-08-09 01:29:43 UTC <byorgey> because that's the kind of thing I like to make =)
2013-08-09 01:30:03 UTC <cmears> Yeah, I know (:
2013-08-09 01:30:11 UTC <cmears> text is particularly useful in a real diagram
2013-08-09 01:31:28 UTC <cmears> I had one more little problem with building the gallery:
2013-08-09 01:31:46 UTC <cmears> when I updated a .lhs file in the gallery directory, shake wouldn't rebuild its pictures
2013-08-09 01:32:02 UTC <cmears> (as though it hadn't recognised there was any change)
2013-08-09 01:32:43 UTC <byorgey> hmm
2013-08-09 01:33:11 UTC <cmears> if it works right for you, it must be something I mucked up
2013-08-09 01:33:22 UTC <cmears> if so I will try it again and figure it out
2013-08-09 01:33:53 UTC <byorgey> ahh, no, you're right
2013-08-09 01:34:26 UTC <byorgey> I hadn't edited the gallery since I ported the gallery building to shake
2013-08-09 01:34:42 UTC <byorgey> looks like I didn't properly encode the dependence of the pngs on the .lhs files
2013-08-09 01:34:50 UTC <cmears> ah
2013-08-09 01:35:05 UTC <cmears> I tried to read the Shake file but I've never used it before
2013-08-09 01:37:07 UTC <byorgey> cmears: try it now
2013-08-09 01:38:25 UTC <byorgey> cmears: before I had rules like  "web/gallery/*.thumb.png" *> compilePng False
2013-08-09 01:38:44 UTC <byorgey> which basically said "if you need to build this file, call this shell command"
2013-08-09 01:38:59 UTC <byorgey> but I neglected to call the 'need' function to tell it what the inputs to that shell command are
2013-08-09 01:39:09 UTC <byorgey> which is how it tracks dependencies
2013-08-09 01:39:21 UTC <cmears> I see
2013-08-09 01:39:48 UTC <cmears> have you noticed that if the build errors, shake will keep printing "OOOOO" even after the shell prompt has come back?
2013-08-09 01:40:16 UTC <byorgey> heh, really?  I hadn't noticed that.
2013-08-09 01:40:37 UTC <cmears> now it is complaining:
2013-08-09 01:40:42 UTC <cmears> Error, file does not exist and no rule available:
2013-08-09 01:40:42 UTC <cmears>   dist/web/gallery/Hilbert.lhs
2013-08-09 01:40:51 UTC <byorgey> oops
2013-08-09 01:41:16 UTC <cmears> ah
2013-08-09 01:41:20 UTC <cmears> you need to drop the "dist" too
2013-08-09 01:41:32 UTC <cmears> (I guess)
2013-08-09 01:41:37 UTC <byorgey> exactly
2013-08-09 01:41:48 UTC <byorgey> that's what I get for pushing a fix without testing it =P
2013-08-09 01:41:59 UTC <cmears> just call it "agile"
2013-08-09 01:42:02 UTC <byorgey> hehe
2013-08-09 01:47:07 UTC <byorgey> cmears: does it work now?
2013-08-09 01:47:28 UTC <cmears> it's better, but now it complains about something else
2013-08-09 01:47:34 UTC <byorgey> =(
2013-08-09 01:47:50 UTC <cmears> /tmp/Diagram10720.hs:17:59:
2013-08-09 01:47:50 UTC <cmears>     Not in scope: `onLineSegments'
2013-08-09 01:47:50 UTC <cmears>     Perhaps you meant `lineSegments' (imported from Diagrams.Prelude)
2013-08-09 01:48:14 UTC <cmears> hmm, but I don't see where it gets that from
2013-08-09 01:48:15 UTC <byorgey> cmears: oh, you need to pull in the latest changes in diagrams-lib and rebuild
2013-08-09 01:48:32 UTC <cmears> okie dokie
2013-08-09 01:48:37 UTC <byorgey> I just added it a few days ago to Diagrams.Trail
2013-08-09 01:51:42 UTC <cmears> seems to be working now...
2013-08-09 01:53:04 UTC <cmears> poor Quasifuchsian didn't make it
2013-08-09 01:53:14 UTC <cmears> it's just blank
2013-08-09 01:53:30 UTC <byorgey> that's strange
2013-08-09 01:54:00 UTC <byorgey> huh, you're right, it's blank for me too =(
2013-08-09 01:54:39 UTC <cmears> I occasionally get weird errors when it's trying to delete a /tmp/ file that doesn't exist
2013-08-09 01:55:21 UTC <byorgey> strange
2013-08-09 01:55:24 UTC <byorgey> I don't get any of those
2013-08-09 01:55:47 UTC <cmears> it always works the second time
2013-08-09 01:55:56 UTC <cmears> and I can confirm that rebuilding the gallery images is working
2013-08-09 01:56:29 UTC <cmears> (I should run "./Shake buildh" to rebuild, right?)
2013-08-09 01:57:39 UTC <byorgey> if you have preview running, then run ./Shake buildh to rebuild, yes
2013-08-09 01:57:46 UTC <cmears> cool
2013-08-09 01:57:47 UTC <byorgey> great, thanks
2013-08-09 02:02:19 UTC <cmears> that strange deletion error is consistent for me
2013-08-09 02:02:24 UTC <cmears> build-gallery.hs.exe: /tmp/3155266344099327941: removeLink: does not exist (No such file or directory)
2013-08-09 02:05:24 UTC <byorgey> huh
2013-08-09 02:07:09 UTC <byorgey> it just calls openTempFile and later removeFile
2013-08-09 02:07:34 UTC <byorgey> maybe there's some bug with the way System.IO.openTempFile works on OS X  (you're on OS X, right?)
2013-08-09 02:09:12 UTC <byorgey> I figured out that if I do a whole bunch of pushes all at once, it doesn't spam the channel as much because of rate-limiting or something =)
2013-08-09 02:09:53 UTC <byorgey> ok, bedtime.  release tomorrow!!
2013-08-09 02:10:14 UTC <fryguybob> woohoo!
2013-08-09 02:12:05 UTC <cmears> actually this problem is on linux
2013-08-09 02:12:09 UTC <cmears> I'll see if I can figure it out
2013-08-09 02:12:37 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14ec355fc http://travis-ci.org/diagrams/diagrams-doc/builds/10011150 The build passed.
2013-08-09 02:15:57 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 14a2c2b61 http://travis-ci.org/diagrams/SVGFonts/builds/10011666 The build passed.
2013-08-09 02:25:32 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14bda6ecd http://travis-ci.org/diagrams/diagrams-doc/builds/10011417 The build has errored.
2013-08-09 03:48:15 UTC <cmears> byorgey, I was able to narrow down the "removeLink" error to "interpretDiagram" in Builder.hs
2013-08-09 03:48:18 UTC <cmears> but no further
2013-08-09 04:14:02 UTC <cmears> byorgey, don't worry about my strange errors; I rebooted the computer and they went away (:
2013-08-09 04:35:56 UTC <cmears> ugh, they are back again :|
2013-08-09 06:35:35 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 148982e73 http://travis-ci.org/diagrams/diagrams-doc/builds/10015381 The build has errored.
2013-08-09 14:28:27 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14b9e1a8a http://travis-ci.org/diagrams/diagrams-doc/builds/10027589 The build has errored.
2013-08-09 15:20:53 UTC <byorgey> here we goooooo
2013-08-09 15:26:06 UTC <byorgey> and... released!!
2013-08-09 15:26:11 UTC <luite> \o/
2013-08-09 15:26:57 UTC <byorgey> note I'm not planning to advertise it yet, since there's still documentation that should be cleaned up and finished, etc. etc.
2013-08-09 15:27:20 UTC <luite> ok
2013-08-09 15:27:21 UTC <byorgey> but I wanted to get it out there for jbracker and notdan to depend on
2013-08-09 15:27:33 UTC <byorgey> not that we need to keep it a secret or anything =)
2013-08-09 15:27:48 UTC <luite> yeah i need to get some stuff out for notdan as well :)
2013-08-09 15:28:02 UTC <byorgey> =)
2013-08-09 15:28:11 UTC <luite> having some trouble with the dynamic ghci in 7.8, but i think it almost works now
2013-08-09 15:28:18 UTC <byorgey> ACTION waits with bated breath for the hackagebot announcements
2013-08-09 15:28:29 UTC <byorgey> here they come!
2013-08-09 15:29:00 UTC <byorgey> luite: cool
2013-08-09 15:29:41 UTC <notdan> yay updates
2013-08-09 15:34:20 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 143e83bf1 http://travis-ci.org/diagrams/diagrams-doc/builds/10030438 The build has errored.
2013-08-09 15:34:50 UTC <byorgey> WHATEVER travis.
2013-08-09 15:35:14 UTC <luite> notdan: looks like you've already passed according to gwern's gsoc criterion :)
2013-08-09 15:35:17 UTC <luite> http://predictionbook.com/predictions/20627
2013-08-09 15:36:20 UTC <notdan> phoooof :)
2013-08-09 15:36:40 UTC <notdan> still  lot of work to do tho
2013-08-09 15:38:05 UTC <luite> that's true, but it's hard to deny that there's there's a working pastebin... the only disputable thing is the exact meaning of the word 'live' (he didn't say interactive)
2013-08-09 15:39:21 UTC <notdan> I think he's unaware of the site (like many people). I plan to post it on reddit once I get all the old code sorted and >80% haddock coverage
2013-08-09 15:39:44 UTC <notdan> I plan on releasing one of the libraries on hackage this week, I just need to write a tutorial
2013-08-09 15:39:51 UTC <notdan> https://github.com/co-dan/interactive-diagrams/tree/master/workers
2013-08-09 15:39:57 UTC <luite> cool
2013-08-09 15:40:10 UTC <notdan> oh, and think of the namespace
2013-08-09 15:40:10 UTC <luite> i'll try to scrutinize the code for possible remaining security issues
2013-08-09 15:40:56 UTC <notdan> It's the library that deals with workers running in restricted environment. Right now I have all the modules in the Worker namespace. I thought I should change it to Control.Worker or something?
2013-08-09 15:41:40 UTC <luite> hmm, the Control prefix is a tad meaningless though
2013-08-09 15:42:34 UTC <ClaudiusMaximus> System might be better?  also "Worker" is a bit vague, the important bit is the restrictions
2013-08-09 15:42:39 UTC <luite> right
2013-08-09 15:46:05 UTC <byorgey> "System.Restrictions" then?  That's not vague in the slightest. ;-)
2013-08-09 15:49:02 UTC <notdan> System.Restrictions for 'LimitSettings' datatype & friends and System.Restrictions.Worker for actual workers?
2013-08-09 15:50:15 UTC <ClaudiusMaximus> maybe Restricted would be better for both, then System.Restricted.Worker has a nicer ring to it?
2013-08-09 15:50:43 UTC <ClaudiusMaximus> but i suck at naming, maybe check where other similar things put their things
2013-08-09 15:52:27 UTC <byorgey> System.Restricted.Worker sounds nice to me
2013-08-09 15:58:26 UTC <luite> yep to me too
2013-08-09 16:21:50 UTC <notdan> can I set/define CPP macros with cabal flags?
2013-08-09 16:22:09 UTC <notdan> The restricted-workers library depends on selinux, and I want to make it in a flag
2013-08-09 16:24:25 UTC <notdan> oh, it's Cpp-options
2013-08-09 16:45:18 UTC <notdan> Does anybody know if that's an acceptable way of handling situations like that? https://github.com/co-dan/interactive-diagrams/commit/df09423f6c79e7d612ec99980d56cc6eecabfe0a
2013-08-09 16:45:35 UTC <notdan> I basically want to be able to use that package without selinux
2013-08-09 17:34:09 UTC <luite> notdan: yeah, the api shouldn't depend on the flags, dependencies can
2013-08-09 17:34:43 UTC <luite> but it's not possible for other packages to say that they depend on restricted-workers with selinux enabled
2013-08-09 17:35:09 UTC <luite> so for that it'd be better to split the selinux thigns out to a separate restricted-workers-selinux package
2013-08-09 17:35:14 UTC <notdan> hm
2013-08-09 17:36:07 UTC <notdan> I am not sure how would I even do this
2013-08-09 17:36:50 UTC <notdan> selinux configuration is basically a string in the LimitSettings record
2013-08-09 17:43:14 UTC <notdan> I guess I'll just abandon that idea and depend on selinux for now
2013-08-09 17:44:12 UTC <luite> you could replace it with an IO action to run or something like that
2013-08-09 18:13:45 UTC <notdan> luite: I thought about this but it sounds hacky and I couldn't serialize the resulting data structure. 
2013-08-09 18:14:26 UTC <notdan> I have to investigate in which place of the program do I actually have to change the security context
2013-08-09 18:19:03 UTC <notdan> I also wrote two examples: https://github.com/co-dan/interactive-diagrams/blob/master/restricted-workers/examples/EchoWorker.lhs https://github.com/co-dan/interactive-diagrams/blob/master/restricted-workers/examples/EchoPool.lhs
2013-08-09 18:20:15 UTC <notdan> In order to finish the documentation I am going to have to write an example about creating custom worker types and the introduction
2013-08-09 18:24:57 UTC <luite> ah cool :)
2013-08-09 23:15:36 UTC <fryguybob> byorgey: You didn't reserve the room for ICFP yet right?  I'm going to be gone next week so I can do that now if that works for you.
2013-08-10 00:37:18 UTC <carter> byorgey: diagrams new version!
2013-08-10 03:20:33 UTC <byorgey> fryguybob: right, I haven't, and sure, that's fine
2013-08-10 03:21:31 UTC <byorgey> carter: \o/
2013-08-10 03:21:38 UTC <carter> congrats ;)
2013-08-10 03:45:54 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1480c728e http://travis-ci.org/diagrams/diagrams-doc/builds/10050090 The build failed.
2013-08-10 04:28:03 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1474a86d4 http://travis-ci.org/diagrams/diagrams-doc/builds/10050636 The build has errored.
2013-08-10 08:40:58 UTC <notdan> Is it a bad idea to implement MonadBase Ghc IO instance?
2013-08-10 11:27:22 UTC <luite> hmm, there are the usual caveats of orphan instances, and perhaps that it's a state monad where part of the state lives in iorefs
2013-08-10 11:27:48 UTC <luite> do you need to stack more transformers or is it for things like eception handling?
2013-08-10 12:24:54 UTC <notdan> no, this is for abstracting the Pool. I think I am doing something wrong
2013-08-10 13:26:56 UTC <notdan> woot, I think I generalized it a bit with monad-control. Still, there are some restrictions I want to get rid off, but I'll postpone it for later. 
2013-08-10 19:47:26 UTC <notdan> https://github.com/co-dan/interactive-diagrams/blob/master/restricted-workers/examples/NewWorkerType.lhs can somebody check my tutorial/example if it makes sense at all etc?
2013-08-10 19:47:53 UTC <notdan> Ok it probably wouldn't make much sense if you didn't read the previous examples :S
2013-08-10 23:49:38 UTC <fryguybob> I'm going to be away for almost a week.  Have fun everyone!
2013-08-10 23:51:23 UTC <luite> have fun you too :)
2013-08-11 00:29:28 UTC <byorgey> bye fryguybob, have fun!
2013-08-11 00:30:07 UTC <byorgey> ACTION just purchased plane tickets to Boston =D
2013-08-11 00:30:12 UTC <byorgey> for only $150 round trip!!
2013-08-11 00:41:32 UTC <fryguybob> byorgey: Nice!
2013-08-11 00:44:54 UTC <byorgey> only problem is there were no flights late enough Saturday night, so I'll be flying back Sunday morning
2013-08-11 00:45:05 UTC <byorgey> but I will find someone to stay with Saturday night, e.g. my sister and brother-in-law
2013-08-11 00:47:38 UTC <fryguybob> byorgey: Ah.
2013-08-11 06:03:33 UTC <notdan> byorgey: cool :D
2013-08-11 06:03:41 UTC <notdan> fryguybob: have a good week off :)
2013-08-11 11:16:16 UTC <notdan> hastache commits have been merged and released on hackage
2013-08-11 15:24:45 UTC <martingale> tangent :: (VectorSpace v, Num (Scalar v)) => Segment v -> v
2013-08-11 15:24:45 UTC <martingale> tangent (Cubic c1 c2 x2) = - (normalized c2)
2013-08-11 15:24:45 UTC <martingale> tangent (Linear x1) = normalized x1
2013-08-11 15:25:06 UTC <martingale> Expecting one more argument to `Segment v'
2013-08-11 15:25:06 UTC <martingale>     In the type signature for `tangent':
2013-08-11 15:25:07 UTC <martingale>       tangent :: (VectorSpace v, Num (Scalar v)) => Segment v -> v
2013-08-11 15:25:15 UTC <martingale> Please help with type signature?
2013-08-11 15:37:34 UTC <luite> byorgey: how bad is customs when you have a stop in PHL or IAD?
2013-08-11 15:37:45 UTC <luite> as a european
2013-08-11 15:38:38 UTC <luite> cheapest flights have a stop there, somewhat more expensive is stop at heathrow, frankfurt, direct flight is expensivest
2013-08-11 15:40:01 UTC <luite> do you go once through the really long customs line and then depart/arrive from a non-international terminal for the second leg?
2013-08-11 15:42:46 UTC <martingale> Nevermind, I was looking at old source code for Diagrams.Segment
2013-08-11 19:08:56 UTC <byorgey> luite: yes, you probably go through customs once and then take a domestic flight
2013-08-11 19:09:16 UTC <luite> is 3h enough for that?
2013-08-11 19:09:20 UTC <byorgey> luite: but I have never gone through customs as a European so I have no idea what it is like =)
2013-08-11 19:09:57 UTC <byorgey> I am 70% confident that 3h is enough.
2013-08-11 19:12:10 UTC <luite> is IAD or PHL better for transit? also just for getting there (return flight would be directly from there), PHL has regional rail service, IAD doesn't?
2013-08-11 19:14:36 UTC <byorgey> luite: yeah, getting to and from IAD is really annoying
2013-08-11 19:14:54 UTC <byorgey> it's in the middle of nowhere and there's no rail that goes to it, you have to get a taxi or bus etc.
2013-08-11 19:15:27 UTC <byorgey> they are building an extension of the DC subway to go all the way out there which is scheduled to be finished in 2037 or something like that =P
2013-08-11 19:17:06 UTC <byorgey> luite: PHL is nice for transit, there is regional rail service that goes right to the Amtrak station, and from there you can get trains up and down the east coast and the Philly subway
2013-08-11 19:20:00 UTC <luite> ok, us airways over PHL is almost as cheap as united over IAD, and 100 euro cheaper than delta which has direct flights both ways :)
2013-08-11 19:21:42 UTC <byorgey> cool
2013-08-11 19:21:53 UTC <byorgey> yeah, I just got very cheap flights to boston on US airways
2013-08-11 19:22:00 UTC <luite> which one do you have?
2013-08-11 19:23:01 UTC <byorgey> #729 (5:15-6:33) PHL-BOS
2013-08-11 19:23:05 UTC <luite> mine would probably be US Airways 729  5:15-6:33
2013-08-11 19:23:05 UTC <byorgey> on the 21st
2013-08-11 19:23:07 UTC <luite> oh
2013-08-11 19:23:11 UTC <byorgey> haha =)
2013-08-11 19:23:54 UTC <luite> i can get one flight earlier, but then it would be 1h45 layover instead of 2h45, that would be a bit short
2013-08-11 19:24:43 UTC <byorgey> yeah, 1h45 might be too short
2013-08-11 19:24:43 UTC <byorgey> anyway, you should totally join me on my flight
2013-08-11 19:24:43 UTC <byorgey> I am in seat 17A =)
2013-08-11 19:25:11 UTC <luite> hehe i'll book immediately, and i prefer an aisle seat anyway ;)
2013-08-11 19:25:35 UTC <byorgey> if you want to sit next to me that would be fun, and I will also not be offended if you want to sit by an aisle or sleep or whatever
2013-08-11 19:25:42 UTC <byorgey> we will have plenty of time to hang out in Boston =)
2013-08-11 19:25:47 UTC <luite> my return flight would be from PHL again then, about a week after my talk at icfp haskell, so i'll hae a few days to explore
2013-08-11 19:26:02 UTC <byorgey> cool, sounds great
2013-08-11 19:26:07 UTC <luite> oh i'm not sure what plane it is, is it 3-3 setup?
2013-08-11 19:26:11 UTC <byorgey> yes, 3-3
2013-08-11 19:29:03 UTC <luite> hm, only 17F is available in row 17
2013-08-11 19:29:58 UTC <byorgey> heh, ok, whatever
2013-08-11 19:30:29 UTC <byorgey> as I said, we will have plenty of time to hang out before and after the flight, so just pick whatever seat you want
2013-08-11 19:30:58 UTC <luite> sure, it's only a short flight anyway, and it says it has wifi, so we can just talk on irc ;)
2013-08-11 19:31:43 UTC <luite> hmm, i hope there's not a $25 checked luggage fee, if it counts as one transatlantic trip there shouldn't be
2013-08-11 19:37:04 UTC <byorgey> luite: the wifi isn't free though, I won't be using it =)
2013-08-11 19:37:55 UTC <byorgey> luite: I am not sure how they work out the luggage fees.  Probably you're right, there's no fee
2013-08-11 19:38:10 UTC <luite> oh right, i guess i can do 1:45 without internet. otherwise we can set up an ad hoc wifi network :p
2013-08-11 19:38:17 UTC <byorgey> hehe
2013-08-11 19:44:31 UTC <luite> oh all 17 is actually unavailable, and i guess 16A / 18A wouldn't make for very comfortable talking
2013-08-11 19:45:10 UTC <luite> oh no wait, frong flgiht
2013-08-11 19:52:03 UTC <luite> ok i have 16C
2013-08-11 19:54:10 UTC <luite> AMS - PHL 799 21 Sept 10:50am-1:30PM
2013-08-11 19:54:45 UTC <luite> oh crap
2013-08-11 19:55:56 UTC <luite> hehe oops i have the 4:15 723 now
2013-08-11 19:58:43 UTC <luite> (it does have the 2:45 time, the earlier one was a really small plane)
2013-08-11 19:59:38 UTC <luite> perhaps i can still chnge it
2013-08-11 20:01:59 UTC <luite> on that flight 17B is available =)
2013-08-11 20:02:42 UTC <luite> change is $199, i'll see you in Boston then :)
2013-08-11 20:14:54 UTC <luite> bleh stupid me, /me hides in a corner
2013-08-11 20:16:08 UTC <luite> ayway 2h45 should be enough, and if the flight is delayed too much they'll put me on your flight
2013-08-11 20:47:19 UTC <notdan> About to upload my first package on hackage, excited :D
2013-08-11 20:50:16 UTC <notdan> 20:40:16 * hackagebot restricted-workers 0.1.0 - Running worker processes under system resource restrictions  http://hackage.haskell.org/package/restricted-workers-0.1.0 (DaniilFrumin) 
2013-08-11 20:50:44 UTC <notdan> Hm, there is no haddock documentation.. weird
2013-08-11 20:50:51 UTC <luite> takes a while to generate
2013-08-11 20:50:55 UTC <notdan> oh, right
2013-08-11 20:51:23 UTC <luite> although it might fail because of selinux
2013-08-11 23:14:12 UTC <byorgey> notdan: congrats!!
2013-08-11 23:14:28 UTC <byorgey> luite: hehe, oops.  oh well, see you in Boston =)
2013-08-11 23:33:16 UTC <cmears> did my chart and cube examples work?
2013-08-12 01:02:58 UTC <travis-ci> [travis-ci] 13diagrams-povray/06master 144f0962f http://travis-ci.org/diagrams/diagrams-povray/builds/10098685 The build passed.
2013-08-12 01:09:41 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14e5ea701 http://travis-ci.org/diagrams/diagrams-contrib/builds/10098732 The build passed.
2013-08-12 01:47:58 UTC <byorgey> cmears: yep!  They are now live at http://projects.haskell.org/diagrams/gallery.html
2013-08-12 01:48:38 UTC <byorgey> mgsloan: heh, RankNTypes was all it needed, eh?
2013-08-12 01:49:12 UTC <byorgey> mgsloan: happy to release diagrams-contrib-0.7.1 with the Lens module whenever you think it's ready
2013-08-12 01:50:25 UTC <cmears> great (:
2013-08-12 01:54:23 UTC <carter> sweet!
2013-08-12 01:55:16 UTC <byorgey> oh man, did you guys see the poster that tkvogt sent to the mailing list?
2013-08-12 01:55:18 UTC <byorgey> crazy cool
2013-08-12 01:56:05 UTC <byorgey> ACTION -> bed
2013-08-12 01:58:53 UTC <carter> the unix bed?
2013-08-12 01:58:55 UTC <carter> *poster
2013-08-12 01:58:58 UTC <carter> *unix poster
2013-08-12 01:59:29 UTC <carter> woahhhhh
2013-08-12 01:59:55 UTC <carter> huhhhh, would the poster pdf render faster if the text were text ?
2013-08-12 02:17:37 UTC <luite> is it all regular curves?
2013-08-12 02:17:43 UTC <luite> it's really slow yeah
2013-08-12 02:20:44 UTC <carter> yeahhh, reallyyyyy slow
2013-08-12 02:22:19 UTC <luite> rendered glyphs would usually be cached so i'd expect it to b efaster
2013-08-12 02:27:47 UTC <carter> are they as glyphs?
2013-08-12 02:31:38 UTC <luite> hm acrobat thinks it doesn't have text
2013-08-12 02:33:25 UTC <carter> yup
2013-08-12 02:33:28 UTC <carter> nor does preview
2013-08-12 02:33:29 UTC <carter> i think it doesn
2013-08-12 02:34:02 UTC <carter> which backend does he use
2013-08-12 02:34:08 UTC <carter>  / which backends have fonts?
2013-08-12 02:34:32 UTC <carter> https://github.com/tkvogt/unixPoster/blob/master/poster.hs
2013-08-12 02:37:12 UTC <mgsloan> byorgey: No rush!  I can't say that I've really put most of this lens stuff through its paces yet
2013-08-12 02:37:20 UTC <luite> hmm it uses svgFonts, that inserts outlines directly i presume?
2013-08-12 02:37:40 UTC <mgsloan> Not sure how it could be wrong, but there's always the possibility that the type system didn't save me from something stupid
2013-08-12 02:38:39 UTC <carter> idk, just linked you to the source, didn't read it :)
2013-08-12 13:25:34 UTC <byorgey> re: the unix poster, yeah, it uses SVGFonts which reads the font file and converts the glyphs into paths
2013-08-12 13:26:52 UTC <byorgey> which lets us have very precise & correct envelopes for text
2013-08-12 13:27:01 UTC <byorgey> but is also slower, as you observe
2013-08-12 13:27:36 UTC <byorgey> anyway, it's also another nice test case for when I next try to do some profiling
2013-08-12 13:28:45 UTC <luite> not only generating the image, the file is also very slow to load (at least in acrobat and preview)
2013-08-12 13:29:32 UTC <byorgey> right
2013-08-12 13:31:32 UTC <luite> but jbracker's project should give us approximate envelopes for 'real' text, right?
2013-08-12 13:33:06 UTC <jbracker> luite: nope
2013-08-12 13:33:10 UTC <luite> oh
2013-08-12 13:33:12 UTC <luite> :(
2013-08-12 13:33:15 UTC <jbracker> I am working on the SVG font stuff
2013-08-12 13:33:50 UTC <jbracker> I think right now there is now effort for font metric support in diagrams, or is there byorgey
2013-08-12 13:33:51 UTC <jbracker> ?
2013-08-12 13:34:17 UTC <byorgey> right, no one is working on that
2013-08-12 13:34:27 UTC <byorgey> I am not even sure how it would work
2013-08-12 13:40:29 UTC <luite> ah ok, i thought there would just be some specialized envelope thing that'd quickly extract the data from the glyph widths in the font data, instead of the paths
2013-08-12 13:44:34 UTC <jbracker> luite: It's not that easy, because each backend handles fonts differently, e.g. cairo offers specific functions for doing so, postscript may offer some way to script it, but how would you do it for SVGs, which are purly descriptional?
2013-08-12 13:48:02 UTC <luite> jbracker: the SVG font description has a width for each glyph and a list of kerning pairs
2013-08-12 13:48:45 UTC <jbracker> If you have a SVG font for the font you want use. But I am not sure what happens if you just use generic or installed font
2013-08-12 13:48:45 UTC <luite> presumably you already read that info to convert the font to a path?
2013-08-12 13:48:53 UTC <jbracker> luite: Yes
2013-08-12 13:49:05 UTC <luite> oh yeah it would only be supported for fonts where you have that info
2013-08-12 18:25:49 UTC <enthropy> are there pre-existing ways to work with graphviz and diagrams?
2013-08-12 18:27:19 UTC <carter> pretty print dot files?
2013-08-12 18:27:44 UTC <enthropy> given a layout calculated by dot, render it
2013-08-12 18:29:30 UTC <enthropy> mostly because it's pretty awkward to figure out which item was clicked if you render a svg generated by dot
2013-08-12 18:51:11 UTC <enthropy> is there a way to express that one thing that can be rendered should be scaled to fit another?
2013-08-12 18:54:03 UTC <enthropy> ah the manual says "computing the size of some text in a given font is rather complicated, and diagrams cannot (yet) do it natively"
2013-08-12 18:54:05 UTC <enthropy> too bad
2013-08-12 19:10:33 UTC <byorgey> enthropy: (1) there are not pre-existing ways to work with graphviz and diagrams, but I hope someone will code up such a thing at some point
2013-08-12 19:11:09 UTC <byorgey> enthropy: (2) yes, using the 'sized' and 'sizedAs' functions from Diagrams.TwoD.Size
2013-08-12 19:12:17 UTC <byorgey> enthropy: (3) true; if you want to know the size of some text your current options are to either use Diagrams.Backend.Cairo.Text (though it is buggy) or to use the SVGFonts package
2013-08-12 19:46:27 UTC <enthropy> byorgey: do you have an example of the cairo backend working at all?
2013-08-12 19:46:43 UTC <enthropy> in this code it's quite far off http://code.haskell.org/~aavogt/module-management-gtk/
2013-08-12 19:48:38 UTC <byorgey> huh, cool, I didn't know aavogt was using diagrams =)
2013-08-12 19:48:43 UTC <enthropy> http://i.imgur.com/AnNQJtT.png
2013-08-12 19:48:57 UTC <enthropy> is what it renders as
2013-08-12 19:49:13 UTC <enthropy> the longer strings are smaller as they should be
2013-08-12 19:49:30 UTC <enthropy> but even the "??" seems like it should be bigger
2013-08-12 19:51:30 UTC <hpaste> byorgey pasted âexample of using Diagrams.Backend.Cairo.Textâ at http://lpaste.net/91789
2013-08-12 19:51:46 UTC <byorgey> enthropy: that's one example, though as you can see the text is off in that example too
2013-08-12 19:51:58 UTC <byorgey> maybe mgsloan has more examples
2013-08-12 19:53:36 UTC <enthropy> and what about SVGFonts?
2013-08-12 19:53:38 UTC <mgsloan> https://github.com/mgsloan/toy-gtk-diagrams/blob/master/src/Graphics/UI/Toy/Gtk/Text.hs#L25 - not a very good example
2013-08-12 19:53:46 UTC <enthropy> is it worth using that one instead?
2013-08-12 19:53:57 UTC <mgsloan> In particular "monoStyle" comes from one of my other modules
2013-08-12 19:57:42 UTC <notdan> I think SVGFonts works correctly but it's quite slow
2013-08-12 20:13:38 UTC <byorgey> enthropy: SVGFonts is quite nice.  as notdan mentions, it has some speed issues, but I don't know how much that matters to you.
2013-08-12 20:14:23 UTC <byorgey> the only other drawback is that it only works with fonts in the SVG font format.  The package comes pre-loaded with one or two nice fonts but if you want to use another font you will have to convert it to SVG format yourself.
2013-08-12 20:15:25 UTC <notdan> but it's not that hard, isn't it?
2013-08-12 20:15:31 UTC <notdan> i think it's like one command in the shell
2013-08-12 20:18:30 UTC <byorgey> notdan: which command?
2013-08-12 20:21:55 UTC <notdan> ttf2svg http://xmlgraphics.apache.org/batik/tools/font-converter.html
2013-08-12 20:22:30 UTC <byorgey> cool, thanks =)
2013-08-12 20:22:43 UTC <byorgey> we should probably add that to the SVGFonts documentation 
2013-08-12 20:23:44 UTC <notdan> I am not sure thought, I haven't tested it with SVGFonts package
2013-08-12 20:36:13 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1498914d0 http://travis-ci.org/diagrams/active/builds/10130389 The build failed.
2013-08-12 20:48:27 UTC <notdan> Hm, panning the images works, because I figured how to use a proper library, but now the whole canvas can be dragged, even if the image is not overflowing
2013-08-12 20:49:17 UTC <luite> what lib?
2013-08-12 20:50:53 UTC <notdan> jquery-svgpan https://github.com/talos/jquery-svgpan
2013-08-12 20:51:04 UTC <notdan> it's not very fancy but the other ones i found didn't work
2013-08-12 20:53:26 UTC <luite> ah the demo looks nice
2013-08-12 20:55:08 UTC <notdan> I'll try to hack it a little bit tomorrow, going to bed for now :]
2013-08-12 20:55:38 UTC <luite> i'm going to wait a bit to see if the vagrant build succeeds :)
2013-08-12 21:10:15 UTC <enthropy> https://github.com/diagrams/SVGFonts/blob/master/SVGFonts.cabal line 53 points to a repo that isn't accessible
2013-08-13 00:20:40 UTC <byorgey> enthropy: ah, thanks
2013-08-13 00:20:50 UTC <byorgey> enthropy: the new location is github.com/diagrams/SVGFonts
2013-08-13 00:29:27 UTC <travis-ci> [travis-ci] 13SVGFonts/06SVGFonts-1.3 14f85582e http://travis-ci.org/diagrams/SVGFonts/builds/10137947 The build passed.
2013-08-13 00:30:52 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 147c080d9 http://travis-ci.org/diagrams/SVGFonts/builds/10137952 The build passed.
2013-08-13 00:37:07 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 14568e463 http://travis-ci.org/diagrams/SVGFonts/builds/10138098 The build passed.
2013-08-13 00:37:58 UTC <travis-ci> [travis-ci] 13SVGFonts/06SVGFonts-1.3 14fbf24ef http://travis-ci.org/diagrams/SVGFonts/builds/10138096 The build passed.
2013-08-13 01:08:02 UTC <travis-ci> [travis-ci] 13active/06new-semantics 140e3fba0 http://travis-ci.org/diagrams/active/builds/10138640 The build is still failing.
2013-08-13 01:56:44 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1453f9d94 http://travis-ci.org/diagrams/active/builds/10139414 The build is still failing.
2013-08-13 06:26:11 UTC <raymank26> hi all. What's wrong with my code? http://pastebin.com/e2RQPQab
2013-08-13 06:32:05 UTC <raymank26> any ideas?)
2013-08-13 06:49:27 UTC <raymank26> oh, i fix that
2013-08-13 07:53:30 UTC <raymank26> is there some way to use hoogle for diagrams?
2013-08-13 08:00:35 UTC <mgsloan> raymank26: You can install hoogle locally: https://github.com/ndmitchell/hoogle/blob/master/docs/Local-Install.md
2013-08-13 08:02:23 UTC <raymank26> ok, i will try this
2013-08-13 09:26:44 UTC <raymank26> Is there some in-depth tutorial about paths and trails in diagrams? I read the manual but understand nothing =(
2013-08-13 11:39:29 UTC <notdan> https://files.app.net/h2jcV0J8.png got literate haskell support in the editor
2013-08-13 11:39:54 UTC <notdan> but i need to fix the way hscolour renders comments in literal haskell code
2013-08-13 11:48:20 UTC <luite> cool. did it already support it or did you have to make new combined mode?
2013-08-13 11:51:25 UTC <notdan> I made a new mode, but it was easier than I expected. Certainly easier than my adventures with SVG last morning :) The codemirror codebase looks clean
2013-08-13 11:51:42 UTC <notdan> and language mode is basically a state machine parser
2013-08-13 11:55:42 UTC <luite> hehe
2013-08-13 11:57:13 UTC <notdan> I wish hscolour library would export more internal functions :(
2013-08-13 11:57:29 UTC <notdan> Also, are the calls to Data.Text.Lazy.pack/unpack very expensive?
2013-08-13 11:59:05 UTC <luite> about as expencive as using String in the first place i think (unless you kill some fusion by converting to Text)
2013-08-13 12:02:56 UTC <notdan> Text does not support stream fusion?
2013-08-13 12:08:36 UTC <luite> it supports stream fusion but that's probably killed if you go through string, unless everything can be optimzied away to pack . unpack
2013-08-13 12:10:30 UTC <luite> fusion only works if you do succesive operations on streams and the superfluous unstream/stream pairs can be removed by rewrite rules
2013-08-13 12:13:35 UTC <notdan> Hm, so here's the problem. The input is split into chunks. I need to run a function over some of the chunks, but the function accepts and returns String. Should I be packing/unpacking those individual chunks or the whole thing instead?
2013-08-13 12:13:55 UTC <notdan> Sorry, I still kinda suck and reasoning about complexity and speed of the haskell code
2013-08-13 12:17:53 UTC <luite> notdan: hmm, well this is rather library-specific :)
2013-08-13 12:18:18 UTC <luite> is everything run through that function, or just some specific chunks?
2013-08-13 12:18:49 UTC <notdan> Some chunks (code) are run through hscolour, some chunks (comments) are left as they are
2013-08-13 12:19:18 UTC <notdan> maybe later I can slap on some filter on the comments so it could render markdown or something, but it would be a different function
2013-08-13 12:20:07 UTC <luite> oh hmm, it's only a few kilobytes of code usually, right? i'd just convert to String first probably
2013-08-13 12:23:42 UTC <notdan> ok
2013-08-13 12:24:01 UTC <notdan> maybe i should talk to malcom wallace about patching the library but can't even find his email
2013-08-13 13:00:26 UTC <notdan> Uh, well it kinda works https://files.app.net/h20tQdIA.png but the formatting is off... I wonder if I can make text appear preformatted in bootstrap without those dumb wells
2013-08-13 13:00:35 UTC <notdan> wells/boxes w/e
2013-08-13 13:05:55 UTC <notdan> https://files.app.net/h20vJaSP.png vs https://files.app.net/h2120nj-.png which one looks better?
2013-08-13 13:07:59 UTC <luite> first
2013-08-13 13:10:51 UTC <notdan> k
2013-08-13 14:42:49 UTC <notdan> So I kinda added an ability to run the examples from the diagrams website in the pastebin with one click: https://files.app.net/h2dmUW93.png
2013-08-13 14:43:14 UTC <notdan> but it's very hacky right now (uses unsafeperformio) and requires to make some changes in the examples itself
2013-08-13 15:31:50 UTC <luite> notdan: perhaps it's a fun idea to make it run code from any site in one click?
2013-08-13 15:32:22 UTC <luite> with some special URL, where either you do a POST request that already includes the whole source, or a GET request where the server retrieves the code
2013-08-13 16:45:57 UTC <byorgey> raymank26: sorry about that!  I am working on one.  I haven't publically announced the new release for exactly this reason.
2013-08-13 16:47:04 UTC <byorgey> notdan: ooh, nice =)
2013-08-13 16:47:20 UTC <byorgey> notdan: what changes does it require in the examples?
2013-08-13 16:47:26 UTC <raymank26> byorgey: hi! I will wait it =)
2013-08-13 16:47:46 UTC <byorgey> raymank26: are there any particular parts you are confused about?  Or you are just generally confused?
2013-08-13 16:48:41 UTC <raymank26> Hm.. Haskell advanced type system confuses me. Type families, multi-param type classes.
2013-08-13 16:53:46 UTC <luite> multi-param typeclasses are simple by themselves, just add parameters. the complexity comes from dependencies between them and instance resolution
2013-08-13 16:54:13 UTC <byorgey> raymank26: you shouldn't have to know too much about that stuff to be able to use diagrams.
2013-08-13 16:54:40 UTC <byorgey> but in any case, the ways that diagrams uses those features is not very complex, so we are happy to explain it if you have particular questions
2013-08-13 16:56:20 UTC <raymank26> But this knowledge is desirable for search over api, doesn't it?
2013-08-13 16:57:33 UTC <byorgey> I don't know! =)
2013-08-13 16:58:08 UTC <byorgey> If you can tell us specific things that confuse you when you are searching over the API, that would be very helpful so we can improve the documentation
2013-08-13 16:58:39 UTC <byorgey> It is hard for me to know what you need to understand to use diagrams, because I already understand it =)
2013-08-13 16:59:01 UTC <raymank26> =)
2013-08-13 16:59:54 UTC <luite> raymank26: some superficial knowledge of type families is useful i think
2013-08-13 17:00:18 UTC <luite> raymank26: so you can read the type signatures with type functions
2013-08-13 17:00:31 UTC <byorgey> are there any type families we use other than V ?
2013-08-13 17:00:39 UTC <raymank26> oh.. they is so complicate =(
2013-08-13 17:00:56 UTC <luite> raymank26: no it's not really complicated. do you know vector spaces from math?
2013-08-13 17:00:57 UTC <martingale> byorgey: I sent you an email about a problem I'm having with Parametric - If you have a chance to look at it I would really appreciate, I'm going crazy trying to figure out what I'm doing wrong.
2013-08-13 17:01:09 UTC <byorgey> raymank26: you may find http://projects.haskell.org/diagrams/doc/manual.html#type-reference  helpful
2013-08-13 17:01:19 UTC <raymank26> luite: yes. This is no problem
2013-08-13 17:01:23 UTC <byorgey> martingale: yep, I'm looking at it now
2013-08-13 17:01:33 UTC <martingale> byorgey: thanks!
2013-08-13 17:03:30 UTC <raymank26> byorgey: I read this article today but it isn't exhaustive for me. What about AffineSpace or VectorSpace for example?
2013-08-13 17:03:36 UTC <luite> raymank26: right, so vector spaces are defined over a scalar field (usually R or C), the vector-space uses an associated type to get from vectors of some type to the underlying scalar type
2013-08-13 17:04:06 UTC <byorgey> raymank26: ah, good point, we should add those
2013-08-13 17:04:29 UTC <byorgey> raymank26: those are defined in the vector-space library so I didn't think to add them, but you're right that you need to understand them to read diagrams types
2013-08-13 17:04:40 UTC <raymank26> yep
2013-08-13 17:05:11 UTC <raymank26> and. Tutorial should say something about operations on vectors and points
2013-08-13 17:05:25 UTC <luite> raymank26: and similarly, from diagrams things, you get a function from some diagrams element to the underlying vector space
2013-08-13 17:05:33 UTC <raymank26> but now it contains only information about construction
2013-08-13 17:05:59 UTC <luite> raymank26: i should've said the type of
2013-08-13 17:06:07 UTC <byorgey> raymank26: good idea
2013-08-13 17:06:36 UTC <raymank26> luite: give me one minute to understand this =)
2013-08-13 17:07:22 UTC <raymank26> byorgey: .-. ^* and others
2013-08-13 17:07:49 UTC <byorgey> raymank26: right
2013-08-13 17:07:58 UTC <byorgey> martingale: hmm, looks like a bug
2013-08-13 17:08:43 UTC <martingale> byorgey: yours or mine?
2013-08-13 17:09:46 UTC <byorgey> martingale: mine, I assume.  From what I can see, paramTest.hs is not producing the output I would expect
2013-08-13 17:10:09 UTC <byorgey> and it's simple enough, I don't see much room in paramTest.hs for silly mistakes
2013-08-13 17:10:12 UTC <luite> raymank26: the example says V a ~ R2, V is a type family, `V a` says that our `a` has to be an instance of that family, and its value is a type
2013-08-13 17:10:37 UTC <luite> raymank26: for example to define one: type instance V MyCrazyType = R2
2013-08-13 17:11:09 UTC <luite> raymank26: in that case, if a would be MyCrazyType, then V a is equal to R2
2013-08-13 17:11:11 UTC <martingale> byorgey: Would in be in the Sectionable instance for Trail?
2013-08-13 17:12:00 UTC <raymank26> luite: my brain is exploded =)
2013-08-13 17:12:16 UTC <byorgey> martingale: probably.  Does it work for single Segments?
2013-08-13 17:12:33 UTC <luite> raymank26: ok sorry :)
2013-08-13 17:12:35 UTC <byorgey> I mean if you call adjust on a Segment, and then use the result in a trail, does it do what you expect?
2013-08-13 17:12:55 UTC <luite> raymank26: you can read `V a` as "the underlying vector space of a"
2013-08-13 17:13:10 UTC <luite> raymank26: and `~ R2` as is equal to R2
2013-08-13 17:13:12 UTC <byorgey> raymank26: think of V as a function from types to types
2013-08-13 17:13:33 UTC <martingale> byorgey: yes it seems to work for single segments
2013-08-13 17:13:48 UTC <byorgey> martingale: ok, then the bug is likely in the Sectionable instance for Trail, yes
2013-08-13 17:13:53 UTC <raymank26> luite: I think that king of abstractions make simple things more complicated..
2013-08-13 17:14:08 UTC <luite> raymank26: but complicated things more simple ;)
2013-08-13 17:14:27 UTC <raymank26> luite: sometimes..)
2013-08-13 17:14:29 UTC <luite> it's true that it steepens the learning curve though
2013-08-13 17:14:52 UTC <raymank26> function from type to type? O_o
2013-08-13 17:15:11 UTC <byorgey> raymank26: yes, it takes a type as input and gives another type as output.
2013-08-13 17:15:19 UTC <raymank26> oh, yes
2013-08-13 17:15:25 UTC <raymank26> i understand that
2013-08-13 17:15:32 UTC <byorgey> just like   succ 3 = 4,  we have e.g.   V (Path R2) = R2
2013-08-13 17:16:23 UTC <martingale> byorgey: I'm not sure if I should try to fix it or if I should leave it to you. It might take me a while to understand your code.
2013-08-13 17:17:20 UTC <raymank26> byorgey: I don't understand this. Can you explain?
2013-08-13 17:17:41 UTC <raymank26> byorgey: what is V (Path R2) = R2? Equality? Why?
2013-08-13 17:21:06 UTC <luite> raymank26: V (Path R2) = R2, just the result of applying V to Path R2, when you have V a ~ R2 in a constraint, then Path R2 would be an acceptable value for a
2013-08-13 17:21:12 UTC <byorgey> martingale: it's up to you.  Yes, it would probably take you longer than me to fix.  But you would probably learn a lot in the process.  If you want to try to fix it go ahead, or I can take a look, either way is fine with me!
2013-08-13 17:21:48 UTC <byorgey> raymank26: that is just the definition of V on the input (Path R2)
2013-08-13 17:22:17 UTC <byorgey> raymank26: in fact more generally  V (Path v) = v,  which is defined here: https://github.com/diagrams/diagrams-lib/blob/master/src/Diagrams/Path.hs#L92
2013-08-13 17:22:38 UTC <martingale> byorgey: Let me see if I can figure it out, I'll probably have lots of questions along the way
2013-08-13 17:22:44 UTC <byorgey> martingale: sure
2013-08-13 17:23:28 UTC <byorgey> martingale: note I opened an issue for it (see above), as you figure things out, gain more info, rule things out, etc. you can add comments to the issue
2013-08-13 17:23:39 UTC <raymank26> I need the book "Haskell for dummies" =(
2013-08-13 17:24:01 UTC <luite> raymank26: just play with diagrams a bit more and when you see difficult type errors ask here
2013-08-13 17:24:31 UTC <martingale> byorgey: First question, what's the best way to test it - if I import a local copy of Trail will it override the one in the ghc pkg
2013-08-13 17:25:20 UTC <byorgey> martingale: no, that won't work
2013-08-13 17:25:50 UTC <raymank26> luite: oh, thank you. I would like to make this fractal http://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Koch_curve_construction.svg/250px-Koch_curve_construction.svg.png What primitives should I use? Paths?
2013-08-13 17:26:18 UTC <luite> i think there's an example that does that thing :)
2013-08-13 17:26:29 UTC <byorgey> martingale: when I'm doing this sort of thing I would usually just edit Trail.hs directly and 'cabal install' (in a sandbox of course)
2013-08-13 17:27:28 UTC <luite> raymank26: hm can't find it, byorgey might know
2013-08-13 17:27:43 UTC <luite> raymank26: but you have two cases, the base case is just a line
2013-08-13 17:27:44 UTC <byorgey> raymank26: http://hackage.haskell.org/packages/archive/diagrams-contrib/0.7/doc/html/Diagrams-TwoD-Path-IteratedSubset.html
2013-08-13 17:27:59 UTC <luite> hah :)
2013-08-13 17:28:05 UTC <byorgey> raymank26: that is somewhat more general though, you still might learn more just by trying to write the code yourself =)
2013-08-13 17:28:22 UTC <raymank26> :D
2013-08-13 17:28:40 UTC <byorgey> raymank26: for that I would work with 'lines' (i.e. things of type  Trail' Line R2)
2013-08-13 17:29:06 UTC <raymank26> what about coordinates for lines?
2013-08-13 17:29:27 UTC <byorgey> raymank26: you can apply transformations such as rotations to a line, and you can concatenate them in sequence using (<>)  (the Monoid combining operation)
2013-08-13 17:29:40 UTC <byorgey> raymank26: what do you mean?
2013-08-13 17:30:14 UTC <byorgey> raymank26: you should not have to think about coordinates at all
2013-08-13 17:30:25 UTC <raymank26> hm
2013-08-13 17:31:00 UTC <byorgey> raymank26: try writing a function koch :: Int -> Trail' Line R2  so that  koch n  produces an order-n koch curve
2013-08-13 17:31:15 UTC <byorgey> in the base case (n = 0) you can use  fromOffsets  to create a straight line
2013-08-13 17:31:40 UTC <byorgey> in the recursive case, take four copies of the order-(n-1) curve, rotate some of them, and concatenate them all with 'mconcat'
2013-08-13 17:32:02 UTC <byorgey> if you want them all to be the same size you can also shrink down the result using 'sized'
2013-08-13 17:32:09 UTC <raymank26> base case is simple, I know. But How can I "devide" line into three in case of deep 1?
2013-08-13 17:32:34 UTC <byorgey> raymank26: don't think in terms of dividing a line, think in terms of putting together four copies
2013-08-13 17:32:50 UTC <raymank26> hm. looks good
2013-08-13 17:33:46 UTC <raymank26> hm. much simpler now
2013-08-13 17:33:55 UTC <raymank26> i will try this now =)
2013-08-13 17:34:29 UTC <byorgey> raymank26: great, let us know how it goes =)
2013-08-13 17:34:37 UTC <raymank26> ok :D
2013-08-13 18:05:05 UTC <raymank26> how to move origin to the right side of diagram?
2013-08-13 18:08:03 UTC <raymank26> alignR
2013-08-13 18:08:06 UTC <raymank26> =)
2013-08-13 18:09:00 UTC <raymank26> I make this!! =)
2013-08-13 18:09:10 UTC <martingale> byorgey: where is :< defined?
2013-08-13 18:13:20 UTC <martingale> byorgey: never mind, is see it's in fingertree
2013-08-13 20:23:13 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1442ee00a http://travis-ci.org/diagrams/active/builds/10170691 The build is still failing.
2013-08-14 00:59:32 UTC <cmears> re named subdiagrams: does it make sense to have a function with type "IsName n => n -> QDiagram b v m -> Subdiagram b v m" ?
2013-08-14 00:59:47 UTC <cmears> That is, just lookup a subdiagram by its name
2013-08-14 01:00:17 UTC <cmears> (I guess it would actually return "Maybe (Subdiagram b v m)"
2013-08-14 01:02:00 UTC <byorgey> cmears: yes!
2013-08-14 01:02:20 UTC <cmears> oh good
2013-08-14 01:02:20 UTC <byorgey> I keep meaning to add such a function but I've never gotten a properly sized round tuit
2013-08-14 01:02:42 UTC <cmears> I thought I had misunderstood the design or something
2013-08-14 01:03:14 UTC <cmears> Regular "withName" could be implemented in terms of it
2013-08-14 01:04:42 UTC <byorgey> indeed
2013-08-14 01:05:17 UTC <cmears> oh, it's basically "lookupSub"
2013-08-14 01:06:07 UTC <cmears> + subMap
2013-08-14 01:06:44 UTC <byorgey> yes, but with a nicer API
2013-08-14 01:06:48 UTC <byorgey> =)
2013-08-14 01:07:00 UTC <byorgey> I beg you to add it.
2013-08-14 01:07:04 UTC <cmears> so basically you've already written it, I just need to give it a type and export it (:
2013-08-14 01:07:09 UTC <byorgey> sure =)
2013-08-14 01:25:45 UTC <martingale> byorgey: Since you asked nicely I returned your gitignore
2013-08-14 01:26:02 UTC <martingale> byorgey: By the way, I don't think it works for segments either - your have reversDomain = reveseSegment
2013-08-14 12:56:11 UTC <byorgey> martingale: yeah, you might be right.  Probably we should just remove that default implementation.
2013-08-14 13:01:14 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14d36aae4 http://travis-ci.org/diagrams/diagrams-lib/builds/10197114 The build passed.
2013-08-14 13:02:52 UTC <martingale> Fun with arrow heads - a vectorfield: https://github.com/jeffreyrosenbluth/arrowheads/blob/master/vectorfield.png
2013-08-14 13:03:47 UTC <byorgey> oooh, nice =)
2013-08-14 13:04:46 UTC <martingale> byorgey: Thanks, I think it would be a good idea to remove the default implementation, easier find bugs.
2013-08-14 13:06:05 UTC <byorgey> martingale: sure.  do you want to do that?
2013-08-14 13:07:23 UTC <martingale> Sure, can you think of any other instance thay may use the default, so that i can fix those as well?
2013-08-14 13:08:26 UTC <byorgey> martingale: I have no idea.  Just remove it and see what breaks. =)
2013-08-14 13:08:37 UTC <martingale> byorgey: will do
2013-08-14 13:08:48 UTC <byorgey> if you remove the default implementation, then any instances which do not override it will generate warnings
2013-08-14 13:09:01 UTC <byorgey> so they should be easy to find.
2013-08-14 13:12:51 UTC <martingale> byorgey: got it
2013-08-14 13:16:16 UTC <byorgey> martingale: btw, I gave you push access to diagrams-lib. see http://www.haskell.org/haskellwiki/Diagrams/Dev/ReviewingAndMerging
2013-08-14 13:25:36 UTC <martingale> byorgey: thanks
2013-08-14 13:33:26 UTC <byorgey> can anyone think of a nice design for an icon to go with sections of "exercises" in tutorials on the diagrams site
2013-08-14 13:33:35 UTC <byorgey> just like "warning" and "todo" sections have little icons
2013-08-14 13:34:33 UTC <byorgey> for the moment I will just use a big 'E'
2013-08-14 13:59:44 UTC <martingale> A dumbell
2013-08-14 15:05:54 UTC <byorgey> martingale: oh, good idea
2013-08-14 15:06:46 UTC <byorgey> how's this: http://www.cis.upenn.edu/~byorgey/hosted/Exercises.png
2013-08-14 15:07:23 UTC <martingale> perfect!
2013-08-14 15:07:39 UTC <byorgey> great =)
2013-08-14 15:09:14 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-exercises.png
2013-08-14 15:12:21 UTC <luite> 3. generalize this result
2013-08-14 15:12:57 UTC <martingale> That looks great
2013-08-14 15:14:10 UTC <byorgey> luite: hehe, added =)
2013-08-14 15:16:15 UTC <luite> grmblz how do i insert a foreign call in core without it making a let binding
2013-08-14 15:23:32 UTC <martingale> byorgey: Just submitted a pull request removing the default implementation of reverseDomain. I know I have push access, but I would prefer If someone takes a look before megring.
2013-08-14 15:31:24 UTC <byorgey> martingale: sure, sounds good
2013-08-14 15:49:23 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14965ffe1 http://travis-ci.org/diagrams/diagrams-doc/builds/10202257 The build failed.
2013-08-14 16:19:45 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 14e708b1f http://travis-ci.org/diagrams/SVGFonts/builds/10204636 The build passed.
2013-08-14 16:20:42 UTC <travis-ci> [travis-ci] 13SVGFonts/06SVGFonts-1.3 146e603f6 http://travis-ci.org/diagrams/SVGFonts/builds/10204634 The build passed.
2013-08-14 16:44:14 UTC <notdan> luite: I thought about it, but it requires more than a quick hack, in order to avoid DoS with big files, etc. I think I might use a streaming library for that?
2013-08-14 16:44:27 UTC <notdan> luite: (that's about GET request. POST request is how it works right now)
2013-08-14 16:45:13 UTC <notdan> byorgey: I had to add 'main = return example' and 'main :: IO (Diagram SVG R2)', but this is a shortcoming in my code, as I've discovered
2013-08-14 16:45:37 UTC <notdan> byorgey: and I also changed Cairo -> SVG, because that's the backend I am using
2013-08-14 16:46:02 UTC <luite> notdan: i think you can just limit the POST body size to 64kB or so, compiling very large hs files is probably not something that should be allowed :)
2013-08-14 16:46:46 UTC <luite> oh, get, yeah, use http-conduit or so, i think you can abort the connection with an exception if it's too big
2013-08-14 16:47:01 UTC <luite> hmm, perhaps POST is enough
2013-08-14 16:47:49 UTC <notdan> byorgey: do you know, by any change, is there a way to get a raw body of the .lhs file in hakyll? $body$ is already formated one
2013-08-14 16:47:54 UTC <notdan> luite: yeah that's a good idea
2013-08-14 16:50:13 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 149eaff96 http://travis-ci.org/diagrams/diagrams-doc/builds/10204732 The build is still failing.
2013-08-14 17:15:45 UTC <byorgey> notdan: yes, it is possible.  $body$ will only be formatted if you call pandocCompiler.  Take a look at the diagrams hakyll.hs and see how we compile the .lhs files in multiple ways---in particular the "raw" version does not do any formatting
2013-08-14 19:22:40 UTC <ClaudiusMaximus> anyone know any nice conformally invariant* curve representations?  *by which I mean   given  f :: Curve -> R -> RÂ²  and a conformal  g :: RÂ² -> RÂ²  there exists  h :: (RÂ² -> RÂ²) -> Curve -> Curve  such that  f (h g c) t = g (f c t)
2013-08-14 19:28:07 UTC <ClaudiusMaximus> actually, maybe changing the space would be a way to get there too...  http://www2.eng.cam.ac.uk/~rjw57/pdf/r_wareham_pdh_thesis.pdf "Computer Graphics Using Conformal Geometric Algebra" R Wareham 2006  (which also describes a hyperbolic mandelbrot set variant, though I'm not sure what properties it has)
2013-08-14 19:33:01 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 142653221 http://travis-ci.org/diagrams/diagrams-doc/builds/10211079 The build is still failing.
2013-08-14 23:50:51 UTC <cmears> wow, github is clever
2013-08-14 23:51:26 UTC <cmears> I did a forced-update to my master, and it updated the pull request to match
2013-08-14 23:51:38 UTC <cmears> it's a good thing that's actually what I wanted (:
2013-08-14 23:56:58 UTC <travis-ci> [travis-ci] 13diagrams-core/06master 147a71314 http://travis-ci.org/diagrams/diagrams-core/builds/10221728 The build passed.
2013-08-15 00:13:08 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c7802a7 http://travis-ci.org/diagrams/diagrams-lib/builds/10222440 The build passed.
2013-08-15 02:26:29 UTC <byorgey> martingale: looks great, thanks!
2013-08-15 02:30:30 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c10448a http://travis-ci.org/diagrams/diagrams-lib/builds/10225771 The build passed.
2013-08-15 02:41:17 UTC <martingale> byorgey: my pleasure
2013-08-15 03:31:36 UTC <cmears> byorgey, I merged the lookupName stuff without the CHANGES changes
2013-08-15 03:31:51 UTC <cmears> (and exported it in diagrams-lib)
2013-08-15 10:57:18 UTC <byorgey> cmears: yep, I saw that, thanks!
2013-08-15 10:58:06 UTC <travis-ci> [travis-ci] 13monoid-extras/06master 141a31438 http://travis-ci.org/diagrams/monoid-extras/builds/10236225 The build passed.
2013-08-15 11:01:48 UTC <byorgey> wow, so many pull requests all of a sudden.  This is great. =)
2013-08-15 11:04:30 UTC <travis-ci> [travis-ci] 13SVGFonts/06master 14e4237f2 http://travis-ci.org/diagrams/SVGFonts/builds/10236283 The build passed.
2013-08-15 13:19:58 UTC <martingale> byorgey: I'm having trouble using Style R2 -> Style R2, if headStyle is of this type (say fc red . opacity 0.50 )how do I apply the style to a head diagram?
2013-08-15 15:50:09 UTC <notdan> https://files.app.net/h72hH41t.png RSS feed for the pastebin
2013-08-15 16:55:38 UTC <luite> rss is pull-only isn't it?
2013-08-15 17:26:45 UTC <notdan> what do you mean?
2013-08-15 19:25:32 UTC <luite> notdan: oh i thought it might be nice to use the rss as input for an irc bot
2013-08-15 19:25:42 UTC <luite> if the feed could include some category or channel tag
2013-08-15 19:28:41 UTC <notdan> oh yeah I forgot that I had an irc bot
2013-08-15 19:28:49 UTC <notdan> well I can just push updates to it directly
2013-08-15 19:44:52 UTC <raymank26> http://82.196.11.44/screens/1376595836.png
2013-08-15 19:45:02 UTC <raymank26> =)
2013-08-15 19:45:28 UTC <raymank26> great lib
2013-08-15 19:45:55 UTC <notdan> yay sierpinski triangles :)
2013-08-15 19:47:38 UTC <raymank26> and Kosh curve :)
2013-08-15 19:47:38 UTC <luite> raymank26: cool :) got used to the type errors already?
2013-08-15 19:47:42 UTC <edwardk> heya
2013-08-15 19:47:48 UTC <luite> oh hi
2013-08-15 19:47:53 UTC <edwardk> byorgey/anyone: can diagrams generate an animated gif?
2013-08-15 19:47:54 UTC <raymank26> luite: :D yep
2013-08-15 19:48:10 UTC <luite> edwardk: it can spit out multiple images that you can combine into one
2013-08-15 19:48:22 UTC <edwardk> i'm trying to do a nice post on cellular automata using lenses and comonads on the school of haskell
2013-08-15 19:48:26 UTC <raymank26> luite: But now I'm stucking at Dragon curve =( Some strange error...
2013-08-15 19:48:29 UTC <ClaudiusMaximus> edwardk: gifsicle is a cool tool
2013-08-15 19:48:32 UTC <edwardk> so i'm kind of limited to what i can do within their site
2013-08-15 19:48:52 UTC <edwardk> hence my inquiry about getting diagrams itself to do the heavy lifting
2013-08-15 19:49:02 UTC <ClaudiusMaximus> ah
2013-08-15 19:49:07 UTC <luite> clearly you should convince them to buy ghcjs
2013-08-15 19:49:22 UTC <edwardk> because it'd be really sexy to be able to spit out an animated gif of say a game of life evolving
2013-08-15 19:51:54 UTC <luite> hmm i don't think diagrams can do it without special tools yet
2013-08-15 19:52:13 UTC <luite> and diagrams-cairo would probably not run there anyway
2013-08-15 19:53:25 UTC <luite> edwardk: does SoH support svg?
2013-08-15 19:53:54 UTC <raymank26> luite: I read material about type families and understood it =)
2013-08-15 19:55:43 UTC <luite> http://hdiff.luite.com/tmp/life/ =)
2013-08-15 19:56:28 UTC <raymank26> wow
2013-08-15 19:57:42 UTC <raymank26> I would like to view haskell code for this
2013-08-15 19:58:06 UTC <edwardk> luite: there is some web based back end support for the active haskell stuff, so i was  going to try to use that
2013-08-15 19:59:53 UTC <luite> raymank26: sorry that's not diagrams, it's gloss i think
2013-08-15 20:01:32 UTC <luite> edwardk: if you can somehow serve an svg with that, it should be doable. diagrams-svg doesn't have foreign deps.
2013-08-15 20:02:00 UTC <edwardk> i can render the svg i think. if not i'll harass johnw until i can
2013-08-15 20:03:01 UTC <luite> i was a bit confused when you said 'active haskell' though, since the package name for animations is also 'active'
2013-08-15 20:03:33 UTC <luite> i think byorgey is doing some major rewriting with that though
2013-08-15 20:04:20 UTC <luite> but at least you can get out a list of diagrams, do some hackery to combine those in an animated svg
2013-08-15 20:04:42 UTC <edwardk> well i was hoping to do so in a convincingly short haskell snippet ;)
2013-08-15 20:06:43 UTC <luite> hehe, i don't know that :( perhaps byorgey has been working on something
2013-08-15 20:14:11 UTC <edwardk> what is the easiest way to get the svg writer to spew out an svg document as a bytestring?
2013-08-15 20:14:16 UTC <edwardk> i suck at diagrams
2013-08-15 20:16:25 UTC <luite> renderDia SVG something i should've installed the hoogle docs
2013-08-15 20:17:07 UTC <luite> http://hackage.haskell.org/packages/archive/diagrams-svg/0.7/doc/html/Diagrams-Backend-SVG.html ah see here
2013-08-15 20:17:30 UTC <notdan> renderSvg . renderDia SVG options diagrams
2013-08-15 20:17:35 UTC <notdan> oh too alte
2013-08-15 20:17:35 UTC <edwardk> shit it wants to spit out a file
2013-08-15 20:17:46 UTC <notdan> that's renderSVG
2013-08-15 20:17:47 UTC <luite> nah just an Svg
2013-08-15 20:18:05 UTC <notdan> renderSVG wants to split out a file, renderSvg just converts Svg to Text 
2013-08-15 20:18:06 UTC <luite> which is some builder thing that you can render to a ByteString
2013-08-15 20:18:15 UTC <edwardk> ah
2013-08-15 20:18:17 UTC <edwardk> blaze.svg
2013-08-15 20:18:25 UTC <notdan> yea
2013-08-15 20:18:40 UTC <notdan> https://github.com/diagrams/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L30
2013-08-15 20:19:23 UTC <luite> notdan: where is this renderSVG you're talking about?
2013-08-15 20:19:39 UTC <notdan> luite: https://github.com/diagrams/diagrams-svg/blob/master/src/Diagrams/Backend/SVG.hs#L228
2013-08-15 20:20:18 UTC <luite> oh must be newer than the version i have installed
2013-08-15 20:20:18 UTC <notdan> btw, it's definition is exactly what edwardk wants except for the BS.writeFile part :)
2013-08-15 20:20:19 UTC <mgsloan> edwardk: Doing diagrams on SoH has been on my backburner for /waaay/ too long
2013-08-15 20:20:31 UTC <mgsloan> I'll be curious to hear about any headway on that
2013-08-15 20:20:49 UTC <mgsloan> It really shouldn't be much harder than serving up an svg
2013-08-15 20:21:32 UTC <mgsloan> A gif would be neat too!  Theoretically svg could also be used for animations, though it'd be a bit heavyweight if it was done frame by frame
2013-08-15 20:22:22 UTC <mgsloan> edwardk: Also, check this out: https://github.com/diagrams/diagrams-contrib/tree/master/src/Diagrams/Lens.hs
2013-08-15 20:23:06 UTC <edwardk> well, i confess this side of the code is the kind of thing that causes my interest to rapidly taper off
2013-08-15 20:23:06 UTC <luite> mgsloan: does SoH support cairo?
2013-08-15 20:23:16 UTC <mgsloan> I'll bet some of these lens have unlawful corner cases, but hey, what can you do
2013-08-15 20:23:17 UTC <edwardk> so i'm hoping to get something done before i burn out and go back to the matrix posts ;)
2013-08-15 20:23:42 UTC <luite> do another matrix post, the last one was fun :)
2013-08-15 20:24:03 UTC <mgsloan> edwardk: :D  Well, if you need to ask someone about stuff, feel free to ask me
2013-08-15 20:24:39 UTC <mgsloan> luite: Nope :/
2013-08-15 20:24:40 UTC <edwardk> will do
2013-08-15 20:25:00 UTC <edwardk> i'm going to write up the next one, but i want someone to win No-Prize #2 first
2013-08-15 20:25:47 UTC <mgsloan> luite: It shouldn't be too hard to add it to stackage, but it does have unfortunate implications for ease of building on multiple platforms
2013-08-15 20:26:05 UTC <mgsloan> Well, maybe not so bad.  I'm not sure if people end up in gtk hell due to a libcairo dependency
2013-08-15 20:28:19 UTC <luite> mgsloan: perhaps doing it through svg is easier. just need someone to spend some time figuring out how to munge the separate frames into one file with the correct animate tags
2013-08-15 20:30:16 UTC <mgsloan> luite: Yup.  Could also spit out some javascript that hide/shows the svgs appropriately
2013-08-15 20:30:59 UTC <luite> yeah but allowing js is a bit risky, do you serve those files in an iframe form a different domain?
2013-08-15 20:31:42 UTC <mgsloan> Yup
2013-08-15 20:32:24 UTC <mgsloan> Essentially, nothing is disallowed because everything is sandboxed on both the server and webpage
2013-08-15 20:33:12 UTC <mgsloan> luite: If at some point ghcjs can make it into stackage, we could conceivably serve ghcjs output
2013-08-15 20:33:30 UTC <mgsloan> (I realize that's a little problematic what with ghc versions etc etc)
2013-08-15 20:34:06 UTC <luite> it requires a bit of setup though...
2013-08-15 20:34:56 UTC <luite> but i hope i can sneak my patches past the ghc maintainers, so it will build on a stock ghc 7.8 :)
2013-08-15 20:35:06 UTC <mgsloan> Awesome :D
2013-08-15 20:35:19 UTC <luite> mgsloan: i finally did the desugaring and typechecking customizations i had been planning for a long time
2013-08-15 20:36:08 UTC <luite> so we can add extra allowed ffi types in ghcjs (without patching ghc), and customize how they're marshalled
2013-08-15 20:36:33 UTC <mgsloan> luite: Cool!  I can't wait for such stuff to be the defacto approach for Haskell UI
2013-08-15 20:36:38 UTC <luite> first thing i did was removing the 0# / 1# marshalling of Bool (since both a tthe GHCJS and JavaScript side, booleans are just javascript bool values)
2013-08-15 20:37:17 UTC <mgsloan> ahh
2013-08-15 20:40:36 UTC <luite> mgsloan: but if you have ideas about great things that are possible with Fay's FFI, but not with GHC's, plz tell. we could automatically convert String back and forth for example, but i'm not sure that's a good idea :)
2013-08-15 20:41:12 UTC <mgsloan> luite: Marshalling 'Text' would be nice
2013-08-15 20:41:52 UTC <luite> yeah that should be possible
2013-08-15 20:42:00 UTC <mgsloan> https://github.com/fpco/yesod-fay/blob/master/Language/Fay/Yesod.hs
2013-08-15 20:42:59 UTC <luite> well that is another option, type Text = JSString
2013-08-15 20:43:10 UTC <mgsloan> Ah, right!
2013-08-15 20:43:25 UTC <luite> and lock someone in the basement to rebuild the Text API for you based on JSString
2013-08-15 20:43:34 UTC <mgsloan> Haha
2013-08-15 20:43:54 UTC <mgsloan> Yeah, currently there isn't very much proper "Text" manipulation
2013-08-15 20:44:00 UTC <mgsloan> But its nice to be able to pass them around
2013-08-15 20:44:30 UTC <luite> we use JSRef a for javascript references of some kind, phantom type similar to Ptr
2013-08-15 20:44:43 UTC <luite> so JSString = JSRef JSString_ or something
2013-08-15 20:45:07 UTC <luite> JSRef a = JSRef ByteArray#
2013-08-15 20:45:13 UTC <mgsloan> luite: Can ghcjs's ffi pass in polymorphic types (such that javascript can do the type tag discrimination)?
2013-08-15 20:45:20 UTC <luite> but that's just because ByteArray# is a convenient primitive type
2013-08-15 20:45:23 UTC <mgsloan> I suppose at that point the types have been erased, so that'd be rather tricky
2013-08-15 20:45:33 UTC <mgsloan> Maybe with a Typeable constraint!
2013-08-15 20:45:57 UTC <luite> Typeable could work yeah, but why do you want it?
2013-08-15 20:47:00 UTC <mgsloan> It's just kindofa neat hack - turns out that you can use empty typeclasses with Fay - as long as you do the dispatch in javascript
2013-08-15 20:47:13 UTC <mgsloan> So, closed-world typeclasses :)
2013-08-15 20:47:28 UTC <mgsloan> But when you have proper typeclasses I'm not sure how useful it is
2013-08-15 20:48:24 UTC <luite> how do you get the type from a value?
2013-08-15 20:49:21 UTC <luite> in GHCJS that's quite unpossible in general.... for example the js value `false' can be the first constructor of any enumeration ADT
2013-08-15 20:49:52 UTC <luite> and a JavaScript Number can be Char#, Int#, Word#
2013-08-15 20:50:11 UTC <luite> and every one-constructor type with exactly one of thise primitives
2013-08-15 21:47:24 UTC <mgsloan> luite: sorry, got distracted.  type is gotten via "instanceOf"
2013-08-15 21:47:50 UTC <mgsloan> luite: Clearly this only works for the topmost type constructor
2013-08-15 21:48:01 UTC <mgsloan> err "instanceof"
2013-08-15 21:51:46 UTC <luite> ah right
2013-08-15 22:19:48 UTC <luite> ClaudiusMaximus: if you come up with some industrial application for these conformal maps you could win $1000 from pfcomplete :p
2013-08-15 22:20:35 UTC <luite> actually i shouldn't have said that because now i want to do it ;)
2013-08-15 22:21:18 UTC <ClaudiusMaximus> luite: heh, go for it - i just want something to use :)
2013-08-15 22:25:00 UTC <luite> so they're used in electrodynamics, and in engineering in fluid dynamics, electrical engineering, must be possible to come up with a convincing example
2013-08-15 22:25:09 UTC <ClaudiusMaximus> yep..
2013-08-15 22:28:02 UTC <ClaudiusMaximus> saw one paper about using it for motion/trajectory planning in AI
2013-08-15 22:28:18 UTC <luite> oh cool
2013-08-15 22:28:42 UTC <ClaudiusMaximus> though i didn't read it properly, was looking more for things to make things like http://www.bugman123.com/Hyperbolic/SquareSpheres-large.jpg
2013-08-15 22:29:08 UTC <ClaudiusMaximus> to transform poincare disk into a square or rectangle or whichever other shape
2013-08-15 22:29:14 UTC <luite> but actually i just like them for the pictures :)
2013-08-15 22:30:28 UTC <ClaudiusMaximus> more here http://www.bugman123.com/Hyperbolic/#ConformalMapping
2013-08-15 22:31:40 UTC <pr> is there a tikz backend for diagrams?
2013-08-15 22:33:34 UTC <luite> ClaudiusMaximus: hmm, kinda cute, but i prefer them less shiny :)
2013-08-15 22:36:34 UTC <ClaudiusMaximus> pr: http://hackage.haskell.org/package/diagrams-tikz (never tried it)
2013-08-15 22:42:30 UTC <pr> neat
2013-08-15 22:42:44 UTC <pr> oh wow, just seeing you guys had a 'major' release just a week ago or so
2013-08-15 22:42:49 UTC <pr> congrats on that =)
2013-08-15 23:24:43 UTC <luite> putStrLn ('a':undefined) -- should this print the 'a' if the output is buffered?
2013-08-16 01:16:36 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14492c9b5 http://travis-ci.org/diagrams/diagrams-postscript/builds/10262807 The build passed.
2013-08-16 01:36:25 UTC <byorgey> bergey: ooh, happy to see you working on the metafont stuff =)
2013-08-16 01:50:10 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06ps-0.7 14fdf79e5 http://travis-ci.org/diagrams/diagrams-postscript/builds/10263509 The build passed.
2013-08-16 01:50:59 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14647584c http://travis-ci.org/diagrams/diagrams-postscript/builds/10263507 The build passed.
2013-08-16 02:29:21 UTC <bergey> The metafont code correctly renders the first example from the MF book.  It makes a huge hash of the second, though. :/
2013-08-16 02:32:34 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 147a2ef30 http://travis-ci.org/diagrams/diagrams-doc/builds/10263835 The build has errored.
2013-08-16 04:04:36 UTC <cmears> it would be nice if travis-ci didn't complain if it's just a timeout
2013-08-16 04:04:36 UTC <cmears> (why does it timeout anyway?)
2013-08-16 09:07:48 UTC <notdan> I am having some troubles compiling the 'active-0.1.0.6' package
2013-08-16 09:08:12 UTC <notdan> http://pastebin.com/qrExH6YQ
2013-08-16 09:16:00 UTC <notdan> I gues the vector space (with inner product) for Rational is just a field of rational numbers?
2013-08-16 09:17:53 UTC <notdan> Maybe somebody has broke GeneralizedNewtypeDeriving in GHC HEAD
2013-08-16 09:37:19 UTC <notdan> Also automatically deriving Transformable instance for SegTree is not longer working
2013-08-16 09:37:24 UTC <mgsloan> notdan: probably related to http://typesandkinds.wordpress.com/2013/08/15/roles-a-new-feature-of-ghc/
2013-08-16 09:38:23 UTC <notdan> Oh, I've heard of roles but didn't read anything about them
2013-08-16 09:38:23 UTC <mgsloan> (which overall is pretty awesome)
2013-08-16 09:38:43 UTC <notdan> yeah i bet, eir know his shit
2013-08-16 09:38:57 UTC <notdan> I saw his presentation on singletons once
2013-08-16 09:39:05 UTC <mgsloan> I hope that the fix to those errors isn't too huge
2013-08-16 09:39:22 UTC <mgsloan> me too, at OPLSS!
2013-08-16 09:39:58 UTC <notdan> yeah, last year :) 
2013-08-16 09:40:05 UTC <notdan> have you been to this year's OPLSS?
2013-08-16 09:40:12 UTC <mgsloan> Nope
2013-08-16 09:40:22 UTC <mgsloan> I bet it was a good one, though!
2013-08-16 09:40:59 UTC <notdan> yeah it's a shame that they haven't sorted the videos, I wanted to re-watch the Amal Ahmed's lectures
2013-08-16 09:45:13 UTC <mgsloan> notdan: It looks like they have sorted out the videos!
2013-08-16 09:45:15 UTC <mgsloan> http://www.cs.uoregon.edu/research/summerschool/summer12/curriculum.html
2013-08-16 09:48:17 UTC <mgsloan> You could also watch Amal's course from this year - it's got an additional lecture
2013-08-16 09:48:41 UTC <notdan> oh, that's interesting, I'll try that
2013-08-16 09:49:35 UTC <mgsloan> Yup, might as well go for variety! :D
2013-08-16 09:51:51 UTC <mgsloan> ACTION downloads Stephanie Wierich's lectures
2013-08-16 09:52:12 UTC <notdan> are they all multiple gigabytes each?
2013-08-16 09:52:28 UTC <mgsloan> 1.4 or so
2013-08-16 09:53:32 UTC <notdan> I see
2013-08-16 11:08:30 UTC <byorgey> notdan: yeah, those errors look definitely related to the new roles stuff.  Can you file a ticket on the active issue tracker?  I want to remember to look into it more carefully
2013-08-17 01:15:04 UTC <edwardk> so cairo would be painful, svg is slow, postscript is file only
2013-08-17 01:15:22 UTC <edwardk> is the html canvas stuff usable?
2013-08-17 01:15:47 UTC <edwardk> btw- i'm not nearly as negative as that line sounded, just ticking off possible worlds
2013-08-17 01:16:50 UTC <byorgey> sure, understood
2013-08-17 01:17:00 UTC <byorgey> edwardk: maybe check out https://github.com/jbracker/diagrams-sunroof
2013-08-17 01:17:08 UTC <byorgey> not sure what the status is, but I know jbracker was hacking on it recently
2013-08-17 01:17:14 UTC <byorgey> so it might actually work
2013-08-17 01:17:34 UTC <edwardk> hrmm wonder if it is on SoH
2013-08-17 01:18:17 UTC <byorgey> oh, well, it's not even released on Hackage
2013-08-17 01:18:32 UTC <edwardk> shucks
2013-08-17 01:18:55 UTC <byorgey> however!
2013-08-17 01:19:30 UTC <byorgey> I have  https://github.com/byorgey/diagrams-canvas .  I could probably get it to work pretty quickly and upload it to Hackage
2013-08-17 01:19:43 UTC <byorgey> if you could convince the SoH people to install it
2013-08-17 01:20:15 UTC <edwardk> =)
2013-08-17 01:20:22 UTC <edwardk> you'd just have to get it into stackage
2013-08-17 01:20:29 UTC <edwardk> and then it'd be in their supported packages list
2013-08-17 01:20:33 UTC <edwardk> probably up in a day or so
2013-08-17 01:20:52 UTC <edwardk> adding to stackage is just patching that fil
2013-08-17 01:20:53 UTC <edwardk> er file
2013-08-17 01:21:14 UTC <byorgey> yeah, I've added stuff to stackage before
2013-08-17 01:21:24 UTC <byorgey> I can probably do that, assuming none of the dependencies have rotted
2013-08-17 01:22:00 UTC <byorgey> OK, let me try =)
2013-08-17 01:22:03 UTC <edwardk> sweet. i can either release this stuff today/tomorrow or i can wait. i'd rather have it run stupidly fast because then the eyeballs i get you see diagrams in its best light
2013-08-17 01:22:39 UTC <byorgey> yeah, wait a bit and see if we can pull off this diagrams-canvas thing
2013-08-17 01:22:45 UTC <edwardk> sounds good
2013-08-17 01:22:53 UTC <edwardk> i'll let rein know i'm going to delay a bit
2013-08-17 01:23:17 UTC <edwardk> i have enough other stuff to write up that having this one stalled at 90% isn't bad
2013-08-17 01:23:52 UTC <fryguybob> There might be enough in canvas to avoid the transform problem as it tracks transforms in the backend and can tell if there is a difference and just not emit the transform when it would be the same.  The problem is getting rid of save/restore pairs.
2013-08-17 01:24:37 UTC <edwardk> i suppose you could do the same in the svg backend for that matter
2013-08-17 01:24:53 UTC <edwardk> just throw all the primitives with the same transform/etc into an extra structure
2013-08-17 01:25:24 UTC <edwardk> that could cut the document size down dramatically, even if you just do it for neighboring constructs
2013-08-17 01:25:33 UTC <fryguybob> Right
2013-08-17 01:26:03 UTC <fryguybob> SVG needs a little structure to do that, with canvas or postscript it is implicit render state for whoever is doing the rendering.
2013-08-17 01:26:05 UTC <edwardk> with only comparing the new thing to the last thing it still takes constant memory
2013-08-17 01:26:19 UTC <edwardk> *nods*
2013-08-17 01:36:07 UTC <byorgey> now installing 7 million packages in an hsenv sandbox...
2013-08-17 01:40:25 UTC <byorgey> edwardk: hmm, I still think this ought to work somehow, but I am not sure of the right way to hook it up.  By default blank-canvas (which diagrams-canvas is built on) actually creates and runs a little web server
2013-08-17 01:40:40 UTC <byorgey> but you want to somehow just send commands to an embedded HTML5 canvas
2013-08-17 01:40:57 UTC <edwardk> let me get it tweaked a little and send you the code i'm using
2013-08-17 01:41:11 UTC <byorgey> OK
2013-08-17 01:41:12 UTC <edwardk> i can run a whole web server in here
2013-08-17 01:41:17 UTC <byorgey> cool
2013-08-17 01:41:18 UTC <edwardk> in fact it does
2013-08-17 01:41:30 UTC <edwardk> so if you need interactivity you can have it, via snap, yesod, warp, whatever
2013-08-17 01:41:37 UTC <edwardk> doesn't change my code much
2013-08-17 01:41:51 UTC <edwardk> yesod was just because its the fewest # of lines to something that looks real
2013-08-17 01:49:35 UTC <byorgey> OK.  So I'm sure it will be possible, just not sure how.  Maybe you can figure out how to glue it in (I hope).
2013-08-17 01:50:36 UTC <hpaste> edwardk pasted âcellular automatorâ at http://lpaste.net/91908
2013-08-17 01:50:47 UTC <edwardk> that is the version i have now
2013-08-17 01:50:57 UTC <edwardk> that will draw rule 110
2013-08-17 01:52:01 UTC <edwardk> actually i guess i can remove the 'home' page
2013-08-17 01:52:21 UTC <edwardk> then it draws faster
2013-08-17 01:53:55 UTC <edwardk> hrmm, hcat wants to draw the image from bottom to top when the svg renders
2013-08-17 01:54:17 UTC <edwardk> can i get it emit my primitives in the opposite order so it looks like its progressively scanning out the automaton? ;)
2013-08-17 01:55:04 UTC <byorgey> try using   cat unit_Y . reverse
2013-08-17 01:56:06 UTC <edwardk> now how do i flip it over?
2013-08-17 01:56:48 UTC <byorgey> flip it over?
2013-08-17 01:57:29 UTC <edwardk> that caused my diagram to flip over
2013-08-17 01:57:38 UTC <byorgey> oh, sorry, use  unitY  instead of  unit_Y
2013-08-17 01:57:41 UTC <edwardk> k
2013-08-17 01:57:49 UTC <byorgey> up is positive =)
2013-08-17 01:58:13 UTC <edwardk> perfect!
2013-08-17 01:58:17 UTC <byorgey> great =)
2013-08-17 02:08:22 UTC <byorgey> got diagrams-canvas working, now I'm testing it with your automaton example
2013-08-17 02:08:53 UTC <byorgey> edwardk: which package is Data.Bits.Lens from?
2013-08-17 02:08:59 UTC <edwardk> lens
2013-08-17 02:09:12 UTC <edwardk> 3.8 or 3.9
2013-08-17 02:09:32 UTC <byorgey> ah
2013-08-17 02:10:05 UTC <byorgey> heh, I thought I had lens already, but not in this sandbox
2013-08-17 02:11:15 UTC <hpaste> edwardk revised âcellular automatorâ: âNo titleâ at http://lpaste.net/91908
2013-08-17 02:11:27 UTC <edwardk> down to 63 lines
2013-08-17 02:16:03 UTC <byorgey> arggh, diagrams-canvas seems to be even slower than the SVG version =(
2013-08-17 02:18:34 UTC <luite> how fast is diagrams-ghcjs?
2013-08-17 02:18:59 UTC <byorgey> good question, want to test it?
2013-08-17 02:19:21 UTC <byorgey> though given edwardk's stated goals I don't think he would use that
2013-08-17 02:19:52 UTC <luite> yeah it doesn't fit the stackage guidelines :(
2013-08-17 02:20:09 UTC <byorgey> a bit
2013-08-17 02:21:03 UTC <luite> i have some test failures in my current build and i'm working on the optimizer, but i'll try to compile diagrams again tomorrow or sunday then
2013-08-17 02:22:08 UTC <byorgey> edwardk: well, it looks like diagrams-canvas is a failure too.  I do have high hopes for jbracker's diagrams-sunroof, but that probably won't be ready for a while
2013-08-17 02:22:13 UTC <edwardk> shucks
2013-08-17 02:22:41 UTC <edwardk> should i just publish it? it actually does look quite good and runs at a reasonable _enough_ speed to act as a proof of concept
2013-08-17 02:22:59 UTC <byorgey> in the meantime I'll put optimizing the SVG backend at the front of my queue, but I can't make any promises about how long that will take.
2013-08-17 02:23:26 UTC <byorgey> Yeah, just go ahead and publish it.  And if you don't mind, just mention the fact that the size/performance of the generated SVGs is being actively worked on.
2013-08-17 02:23:28 UTC <edwardk> if we don't think there'll be a much better solution in the next few days then it'd probably be better to publish this way and then showcase improvments magically when they happen via stackage or in a followup
2013-08-17 02:23:33 UTC <edwardk> Will do
2013-08-17 02:23:36 UTC <byorgey> right
2013-08-17 02:28:00 UTC <byorgey> bergey: ping
2013-08-17 02:40:44 UTC <byorgey> bergey: I seem to recall you were at one point thinking about/hacking on ttps://github.com/diagrams/diagrams-core/issues/19 (tree structure in backends), just wondering what the status is
2013-08-17 02:41:11 UTC <byorgey> ACTION -> bed, night all
2013-08-17 02:54:53 UTC <edwardk> so close to being done. just wanting to polish it before i put it up
2013-08-17 02:56:59 UTC <bergey> I looked enough at tree structure in backends to understand why it's hard, not enough to have insight.
2013-08-17 02:59:48 UTC <bergey> I'd be game to take another look at it in September.  Or to help convert the Backends, if someone else figures out the design. 
2013-08-17 03:13:07 UTC <bergey> Incidentally, I think the MetaFont paths are working now.  I'm adding tests, aiming for a pull request in a couple of days.  The interface is not good, though.
2013-08-17 03:52:26 UTC <mgsloan> edwardk: awesome!
2013-08-17 03:54:46 UTC <edwardk> https://www.fpcomplete.com/user/edwardk/cellular-automata is posted
2013-08-17 03:55:16 UTC <mgsloan> (which is what I was "awesome!"-ing about) :D
2013-08-17 03:55:21 UTC <edwardk> =)
2013-08-17 03:55:29 UTC <edwardk> yeah but i figured i'd share the links
2013-08-17 03:55:35 UTC <edwardk> thanks everyone for your help =)
2013-08-17 03:56:19 UTC <mgsloan> Might be cool to package that up in a little "diagrams-soh" library
2013-08-17 03:57:17 UTC <mgsloan> Hmm, no reason to make it soh specific, though.  Could just be "diagrams-server"
2013-08-17 04:04:05 UTC <edwardk> i was planning on trying to render some sparse boolean matrices in later posts, so i wanted a way to draw grids like that
2013-08-17 04:04:11 UTC <edwardk> this served as a good test case
2013-08-17 04:06:02 UTC <mgsloan> Yup, very cool.  It's fun to change the rule number in the code and re run
2013-08-17 04:08:05 UTC <mgsloan> I look forward to such illustrated maths tutorials!  It's really a perfect application for diagrams
2013-08-17 04:08:40 UTC <bergey> edwardk: Is there a word missing in this part of your tutorial? "where have some ambient current configuration that is known we could run the experiment with."
2013-08-17 04:08:45 UTC <edwardk> fixed
2013-08-17 04:09:51 UTC <bergey> So it is, thanks!  The first appearance of grid still has [[Bool] (no second ]) in the type.  Unless that's my Firefox.
2013-08-17 04:10:42 UTC <edwardk> will fix
2013-08-17 04:11:18 UTC <edwardk> updated
2013-08-17 04:11:39 UTC <bergey> thanks
2013-08-17 16:41:49 UTC <byorgey> bergey: re: the Metafont interface, I was thinking of maybe making a little quasiquoter so you can directly write Metafont syntax
2013-08-17 16:42:02 UTC <byorgey> or maybe we can come up with a nice little combinator interface
2013-08-17 17:24:35 UTC <byorgey> edwardk: very cool SoH post!
2013-08-17 17:26:13 UTC <edwardk> byorgey: thanks =)
2013-08-17 17:26:36 UTC <edwardk> i'm sure i could have said 'diagrams' a few more times in that last paragraph or so but it would have been hard ;)
2013-08-17 17:28:00 UTC <byorgey> hehehe
2013-08-17 18:36:02 UTC <notdan> luite: what do you think of my plan for getting the interactive widgets to work: https://github.com/co-dan/interactive-diagrams/wiki/Interactive-widgets ?
2013-08-17 18:46:34 UTC <luite> notdan: hmm, the problem is that linking in the whole of diagrams and all of its dependencies is huge
2013-08-17 18:46:54 UTC <luite> normally you'd only link the functions you use
2013-08-17 18:50:06 UTC <luite> unless you link each function to a separate file (like split-objs), but then you'd have thousands of requests
2013-08-17 18:54:20 UTC <notdan> Oh, I see. Yeah that is problematic
2013-08-17 18:55:05 UTC <notdan> although I had the impression that GHC itself links modules, not functions. So even if you use one function from a module, the linker adds the whole module to your binary
2013-08-17 18:55:22 UTC <notdan> that's why binaries produced with ghc can be quite big
2013-08-17 18:55:33 UTC <luite> it usually uses splits-objs, so it has lots of tiny object files in a lib
2013-08-17 18:55:39 UTC <luite> multiple per module
2013-08-17 19:00:26 UTC <luite> what's perhaps possible is make a few base bundles manually, with dependencies
2013-08-17 19:00:44 UTC <luite> for example a program that just uses some putStrLn or simple stuff
2013-08-17 19:00:57 UTC <luite> one that draws a few diagrams
2013-08-17 19:01:17 UTC <luite> then based on the package deps of the current module, it selects the base bundles
2013-08-17 19:01:32 UTC <luite> and links in all the extra things required that are not there yet in out.js
2013-08-17 19:02:23 UTC <luite> that would require some mod to the linker, to omit some set of symbols
2013-08-17 19:05:11 UTC <luite> hmm i'm not yet convince that that's the ideal solution
2013-08-17 19:05:15 UTC <notdan> I see, that's a nice idea. Also in case lib.js, lib1.js and rts.js we can "link" them during runtime, right?
2013-08-17 19:05:39 UTC <luite> rts.js is always the same, so you can load that statically
2013-08-17 19:05:46 UTC <notdan> Well I'll start with linking everything then and we will come up with something
2013-08-17 19:06:09 UTC <luite> lib.js / lib1.js just contain the shims, so you only need to figure out package dependencies for those
2013-08-17 19:06:10 UTC <notdan> yeah and lib*.js contains shims (and user provided js code, but we won't have it)
2013-08-17 19:06:19 UTC <notdan> yea
2013-08-17 19:06:58 UTC <luite> we only have a few shims files, i think it's possible to bundle most of them in a static lib.js
2013-08-17 19:07:31 UTC <luite> the out.js is really the tricky one...
2013-08-17 21:24:09 UTC <luite> notdan: can you build a version that just spits out a new out.js for ever request first? i'll think about the linker changes required
2013-08-17 21:36:56 UTC <notdan> luite: yeah, definetely, I am working on a prototype
2013-08-18 01:18:33 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1436afd74 http://travis-ci.org/diagrams/active/builds/10322191 The build is still failing.
2013-08-18 01:19:51 UTC <carter> notdan: you've had a pretty productive gsoc!
2013-08-18 01:19:57 UTC <carter> look forward to playing with the final result
2013-08-18 01:20:45 UTC <mgsloan> ACTION too
2013-08-18 01:25:53 UTC <byorgey> ACTION too
2013-08-18 01:26:45 UTC <luite> :)
2013-08-18 01:46:58 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1438eaa50 http://travis-ci.org/diagrams/active/builds/10322419 The build is still failing.
2013-08-18 02:38:21 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14bae30b0 http://travis-ci.org/diagrams/diagrams-doc/builds/10322791 The build failed.
2013-08-18 02:42:41 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14a8c6675 http://travis-ci.org/diagrams/diagrams-doc/builds/10322914 The build has errored.
2013-08-18 04:41:19 UTC <bergey> byorgey: I was picturing a quasiquoter; glad to hear you were too.  I've written a parser, which works for point literals.  I don't think it will be hard to add syntax to refer to haskell variables.
2013-08-18 04:42:49 UTC <bergey> A combinator interface would be interesting, but I think it may be less clear to people who know metafont or have read the metafont docs, because .. is so overloaded.
2013-08-18 04:48:23 UTC <carter> byorgey what are you talking about?
2013-08-18 04:48:24 UTC <carter> :)
2013-08-18 07:41:39 UTC <notdan> carter: heh, thanks, but I think it's too early to say that
2013-08-18 07:43:41 UTC <notdan> Man, I fail to see how 'Roles' in GHC are a good idea. It seems like existing code might start having runtime errors because of the abscence of Role annotations. Also I don't understand why role inference is decidable, since type families are open
2013-08-18 07:44:21 UTC <notdan> so in some cases all type families might point to one type (hence it's safe to assume that the role of the parameter under that family is R) and once you include another module...
2013-08-18 07:45:33 UTC <notdan> oh, all type family parameters have roles N, I see
2013-08-18 07:45:58 UTC <notdan> that might be the reason deriving some instances in diagrams-lib and active has failed
2013-08-18 07:55:18 UTC <mgsloan> Yeah, as far as I know roles only make things safer
2013-08-18 07:55:52 UTC <mgsloan> It'll be interesting to see whether people will need the escape hatch of disabling it
2013-08-18 07:57:21 UTC <notdan> Yeah, it's because of the usage of (V t) in Transformable: https://gist.github.com/co-dan/6260479
2013-08-18 07:58:28 UTC <notdan> well *we* knew, actually, that the instances were co-inciding https://github.com/co-dan/diagrams-lib/blob/34b8929083da850f6060370853e89d1ca7c5eeb3/src/Diagrams/Trail.hs#L144 but I guess there is no way in general for compiler to know that with open type families
2013-08-18 07:59:48 UTC <notdan> mgsloan: I am a little bit afraid of the 'P'hantom role, becase it seems to me that a lot of code that uses it might become less type-safe actually
2013-08-18 07:59:53 UTC <notdan> but i really should read the full paper
2013-08-18 08:00:22 UTC <mgsloan> Oh, huh!  Well I be they're being careful with it
2013-08-18 08:00:40 UTC <mgsloan> Who knows, I haven't looked into it too thoroughly myself
2013-08-18 08:02:48 UTC <notdan> well i was talking abut this mostly http://typesandkinds.wordpress.com/2013/08/15/roles-a-new-feature-of-ghc/#role-annotations
2013-08-18 08:16:52 UTC <mgsloan> I don't think that's talking about making "Ptr Int" and "Ptr (Bool -> Bool)" unify
2013-08-18 08:17:21 UTC <mgsloan> instead it's about whether you want to be able to safely and cheaply cast between them
2013-08-18 08:17:48 UTC <mgsloan> I could be wrong, though
2013-08-18 08:18:42 UTC <mgsloan> Hmm, nah, I think that's right.
2013-08-18 11:13:13 UTC <byorgey> yes, that's right.  None of this Role stuff will hurt type safety in any way.  Any program which did not type check before will still not type check.
2013-08-18 11:13:37 UTC <byorgey> and it will definitely not cause any runtime errors.
2013-08-18 11:14:28 UTC <byorgey> the interaction of roles with diagrams-lib is a bit annoying, but in another way I'm glad, because it makes evident the hidden assumption which was there before
2013-08-18 11:15:09 UTC <byorgey> I hadn't explicitly realized that we were depending for type safety on the coincidence of Scalar and/or V results
2013-08-18 11:15:59 UTC <byorgey> notdan: I know Richard personally and I have a lot of faith in his ability to think through all of this carefully, so I am not as worried as you =)
2013-08-18 11:36:22 UTC <byorgey> kuribas: welcome =)  Anything which advances the state of the art in Haskell-native graphics/font support/etc. is a win for diagrams.
2013-08-18 11:36:33 UTC <kuribas> https://github.com/kuribas/cubicbezier
2013-08-18 11:37:19 UTC <byorgey> oooh, nice =)
2013-08-18 11:37:35 UTC <kuribas> I just finished the Bezier Clipping algorithm.
2013-08-18 11:38:32 UTC <kuribas> If I could make it _fit_ within the diagram API, that would be nice.
2013-08-18 11:40:01 UTC <kuribas> The real hard things left are closed path arithmetic and finding out how the metafont paths are calculated.
2013-08-18 11:41:24 UTC <byorgey> kuribas: bergey and I have actually already done a bunch of work on calculating metafont paths, see https://github.com/diagrams/diagrams-contrib/tree/metafont
2013-08-18 11:41:58 UTC <byorgey> kuribas: I think it makes the most sense for your library to remain separate (i.e. not tied to the diagrams API) so it will be most generally useful
2013-08-18 11:42:27 UTC <byorgey> however, there is a lot of overlap and I would be very interested to look into outsourcing our bezier stuff to your library
2013-08-18 11:42:38 UTC <byorgey> and contributing the stuff we've done
2013-08-18 11:43:34 UTC <byorgey> fryguybob has done most of the work re: bezier stuff in diagrams
2013-08-18 11:44:41 UTC <kuribas> Ah, I'll check your metafont work out.
2013-08-18 11:45:41 UTC <byorgey> hmm, what do you use hmatrix for?
2013-08-18 11:46:31 UTC <byorgey> kuribas: we have been interested in implementing the metafont path syntax + spline generation algorithm, as a way to construct diagrams paths
2013-08-18 11:47:56 UTC <kuribas> byorgey: For finding a specific radius of curvature on a curve.  It uses the root finding function of hmatrix.
2013-08-18 11:48:22 UTC <kuribas> I need this to approximate an outline in bezier curves.
2013-08-18 11:48:39 UTC <byorgey> I ask just becuase hmatrix is a pretty heavy dependency (since it uses the FFI and requires having certain C libraries installed, etc.)
2013-08-18 11:48:59 UTC <kuribas> Yes, I have been thinking about that.
2013-08-18 11:49:26 UTC <byorgey> fryguybob has implemented curvature for cubic beziers in diagrams
2013-08-18 11:49:30 UTC <kuribas> Maybe I should use this: http://hackage.haskell.org/packages/archive/roots/0.1.1.2/doc/html/Math-Root-Finder-Brent.html
2013-08-18 11:50:13 UTC <kuribas> byorgey: I need to find for which points on a cubic bezier, the curvature is equal to a value.  Can diagrams do this?
2013-08-18 11:50:41 UTC <byorgey> ah, no, we don't have that implemented
2013-08-18 11:50:46 UTC <byorgey> just finding the curvature at a given point
2013-08-18 11:51:01 UTC <byorgey> what is the degree of the equation you need to solve?
2013-08-18 11:51:32 UTC <byorgey> but yes, the roots package is probably a good option
2013-08-18 11:52:05 UTC <kuribas> byorgey: I think a 12 degree polynomial.
2013-08-18 11:52:12 UTC <byorgey> haha, yikes =)
2013-08-18 11:56:10 UTC <notdan> byorgey: sorry, I didn't try to question Richards efforts, I know his other work which still doesn't sease to amaze me (like the singletons library), I was just stating my lack of understanding of some aspects of the ROle changes
2013-08-18 11:56:58 UTC <byorgey> notdan: oh, no worries, I didn't interpret it that way
2013-08-18 11:57:30 UTC <byorgey> I have also been sort-of involved in thinking about this Role stuff going back several years so it already all makes perfect sense to me ;)
2013-08-18 11:57:52 UTC <notdan> heh
2013-08-18 12:00:05 UTC <raymank26> hi guys. I have this simple fractal http://www.ad.ntust.edu.tw/grad/think/2paper/WEN1/BASICF~1/Image5.gif If I have solution to (n - 1)  then how to compose them to achieve solution for n?
2013-08-18 12:00:12 UTC <byorgey> kuribas: anyway, I'm quite excited by the work you're doing.  Let us know if there are particular ways we can help.  I think mgsloan and fryguybob may be particularly interested to take a look at what you're doing, when they are around later
2013-08-18 12:00:34 UTC <kuribas> ok, great!
2013-08-18 12:01:12 UTC <byorgey> raymank26: see http://hackage.haskell.org/packages/archive/diagrams-contrib/0.7/doc/html/Diagrams-TwoD-Path-IteratedSubset.html
2013-08-18 12:01:37 UTC <byorgey> raymank26: in particular you can use the 'iterTrail' function to do that
2013-08-18 12:01:53 UTC <byorgey> and you can take a look at how it is implemented if you want to see how it is done
2013-08-18 12:02:37 UTC <raymank26> byorgey: thank you!
2013-08-18 12:02:57 UTC <kuribas> byorgey: Well, I am interested in the metafont implementation, if I could use it somehow.
2013-08-18 12:03:30 UTC <byorgey> kuribas: right, you should talk to bergey about that, he has been hacking on it recently
2013-08-18 12:03:51 UTC <kuribas> ok
2013-08-18 12:05:17 UTC <byorgey> notdan: thanks!
2013-08-18 12:07:06 UTC <travis-ci> [travis-ci] 13active/06active-0.1 1451c1dcd http://travis-ci.org/diagrams/active/builds/10330552 The build passed.
2013-08-18 12:08:58 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14e1f0223 http://travis-ci.org/diagrams/diagrams-lib/builds/10330554 The build passed.
2013-08-18 12:15:09 UTC <notdan> np, thank you:)
2013-08-18 12:22:36 UTC <byorgey> I just sent an email to Richard linking to your pull request
2013-08-18 12:22:43 UTC <byorgey> just to give him one more example to think about
2013-08-18 13:13:44 UTC <raymank26> what is envelope of line?
2013-08-18 13:14:37 UTC <raymank26> I'm trying to do this http://82.196.11.44/screens/1376831632.png
2013-08-18 13:14:46 UTC <raymank26> but i've no luck =(
2013-08-18 13:20:56 UTC <ClaudiusMaximus> raymank26: define no luck - ambiguous type?  maybe try using:   withEnvelope' e d = withEnvelope (e `asTypeOf` d) d
2013-08-18 13:22:02 UTC <raymank26> I'm new in haskell and types of diagrams explode my brain. It is hard to define types by hand
2013-08-18 13:23:48 UTC <ClaudiusMaximus> i'm not so new and i have problems defining types - i tend to leave them out, and use  asTypeOf  when i get ambiguity
2013-08-18 13:27:41 UTC <notdan> what is the type error?
2013-08-18 13:30:01 UTC <raymank26> i fixed that, thank you, ClaudiusMaximus =)
2013-08-18 13:30:38 UTC <ClaudiusMaximus> withEnvelope needs an Enveloped, fromVertices gives a Pathlike, there might be more than one type that's both Enveloped and Pathlike
2013-08-18 13:31:44 UTC <raymank26> how to connect list of paths end-to-end?
2013-08-18 13:34:20 UTC <ClaudiusMaximus> maybe something using   pathTrails, trailSegments, fromSegments, pathFromTrailAt
2013-08-18 13:36:51 UTC <raymank26> hmmmm
2013-08-18 13:37:33 UTC <ClaudiusMaximus> or  pathTrails, monoid instance for Trail, and pathFromTrailAt
2013-08-18 13:38:41 UTC <raymank26> Segments, Paths, Trails..
2013-08-18 13:38:47 UTC <raymank26> some many abstractions(
2013-08-18 14:04:04 UTC <notdan> https://github.com/colah/ImplicitCAD this is pretty cool, although not based on diagrams
2013-08-18 14:11:13 UTC <byorgey> raymank26: I'm working on a tutorial for vectors and points: http://projects.haskell.org/diagrams/doc/vector.html
2013-08-18 14:11:23 UTC <byorgey> raymank26: paths and trails are next!
2013-08-18 14:11:44 UTC <raymank26> wow1
2013-08-18 14:12:18 UTC <raymank26> great
2013-08-18 14:15:58 UTC <byorgey> raymank26: you can connect Trails end-to-end using the Monoid instance
2013-08-18 14:16:26 UTC <byorgey> if you have a specific example of some code + something you are trying to do I could take a look and tell you how I would do it
2013-08-18 14:17:19 UTC <byorgey> notdan: yeah, that's very cool indeed
2013-08-18 14:17:40 UTC <byorgey> maybe someone will hook it up to diagrams, especially once we get a real functioning 3D backend
2013-08-18 14:18:04 UTC <byorgey> it would be super cool to be able to describe objects using ImplicitCAD and then import them into diagrams
2013-08-18 14:22:49 UTC <luite> i wonder if it can output parametric surfaces, all images seem tessellated, but that may be just for rendering
2013-08-18 14:26:47 UTC <luite> though he could've spent a few minutes calculating vertex normals and adding gouraud shading ;)
2013-08-18 14:26:58 UTC <byorgey> I don't know, I haven't looked into it in any detail
2013-08-18 14:27:48 UTC <byorgey> but ISTR the reason it's called *Implicit*CAD is that everything is represented implicitly, i.e. as solutions to equations and/or parametric functions
2013-08-18 14:28:03 UTC <byorgey> so I think the tessellation is just for rendering
2013-08-18 14:35:56 UTC <luite> hmm, i'm not sure if it can represent arbitrary surfaces: https://github.com/colah/ImplicitCAD/blob/master/Graphics/Implicit/Definitions.hs#L117
2013-08-18 14:38:30 UTC <luite> oh the Object class adds implicit functions
2013-08-18 14:39:27 UTC <luite> but those look like haskell functions that might not be outputable
2013-08-18 15:17:58 UTC <raymank26> http://82.196.11.44/screens/1376839047.png
2013-08-18 15:18:00 UTC <raymank26> =)
2013-08-18 15:19:17 UTC <luite> cool :)
2013-08-18 15:20:17 UTC <raymank26> I append mincowski curve to my collection =)
2013-08-18 15:22:22 UTC <notdan> did you use Paths/Trails to build that?
2013-08-18 15:22:29 UTC <notdan> looks cool, btw :)
2013-08-18 15:23:06 UTC <raymank26> http://82.196.11.44/screens/1376839354.png
2013-08-18 15:23:25 UTC <luite> hehe different spelling every time :p
2013-08-18 15:23:42 UTC <notdan> hah 
2013-08-18 15:23:47 UTC <raymank26> i don't understand theory about trails/path and use points =)
2013-08-18 15:24:09 UTC <raymank26> luite: different spelling?)
2013-08-18 15:24:35 UTC <luite> raymank26: different transliteration of minkowski
2013-08-18 15:24:41 UTC <notdan> mincowski vs mincovski vs minkowski
2013-08-18 15:24:51 UTC <raymank26> oh, my mistake =(
2013-08-18 15:26:46 UTC <notdan> what's the type of the TrailLike thingie in the result of 'fromOffset' in that case?
2013-08-18 15:27:19 UTC <raymank26> http://82.196.11.44/screens/1376839613.png
2013-08-18 15:27:20 UTC <notdan> I guess I am wondering what is the monoid instance for it. Does it connect the trails into one big trail?
2013-08-18 15:27:35 UTC <raymank26> yep, something like this
2013-08-18 15:27:43 UTC <notdan> I see, cool
2013-08-18 15:28:03 UTC <luite> yeah connecting the endpoints of trails makes writing these fractals really easy
2013-08-18 15:28:06 UTC <raymank26> i write some vim function for import type declaration from ghci =)
2013-08-18 15:29:08 UTC <notdan> nice
2013-08-18 15:29:14 UTC <notdan> there are a bunch of scripts like that for vim, I suppose, like https://github.com/scrooloose/syntastic
2013-08-18 15:29:30 UTC <raymank26> yes, but it's only for type checking
2013-08-18 15:31:24 UTC <raymank26> luite: are you a developer of diagrams?
2013-08-18 15:32:55 UTC <luite> no, more an interested observer :)
2013-08-18 15:33:15 UTC <raymank26> :)
2013-08-18 15:34:24 UTC <luite> i've been intending to do some diagrams hacking for a long time but i keep coming up with distractions
2013-08-18 16:42:35 UTC <bergey> kuribas: It should be easy to use the MetaFont parser & solver outside of Diagrams.  Take a look at the last two definitions in https://github.com/diagrams/diagrams-contrib/blob/metafont/src/Diagrams/TwoD/Path/Metafont.hs  You'll need a function like importSegment that converts to your CubicBezier type.
2013-08-18 16:43:20 UTC <bergey> You'll also need to convert Diagrams points to your points.  I could try generalizing the types over vector-space, if that would help.
2013-08-18 16:48:43 UTC <bergey> Right now making a path requires something like: "importTrail . map computeControls . interpolateDirs $ parse metafont "" "(0,0)..(1,1)..(2,0)", which is a bit of a mouthful.  I'm need to define a more sucinct name that goes straight from ByteString -> Trail, and I'll probably move a bunch of code to Metafont.Internals when that happens.
2013-08-18 17:19:54 UTC <ibab> Hey, is there any standard way to get the rotation of an r2 vector? (i.e. the angle between the vector and the x-axis)
2013-08-18 17:21:04 UTC <ibab> So far I've been using: getRotation (unr2 -> (x, y)) = Rad (atan2 y x)
2013-08-18 17:21:30 UTC <fryguybob> ibab: There is, I'm looking up the name now
2013-08-18 17:22:31 UTC <fryguybob> http://projects.haskell.org/diagrams/haddock/Diagrams-TwoD-Vector.html#v:direction
2013-08-18 17:23:05 UTC <fryguybob> ibab: The name is direction and the documentation is in the link I just gave.
2013-08-18 17:24:50 UTC <ibab> Ah, of course, thanks. I somehow forgot about that function.
2013-08-18 17:27:31 UTC <fryguybob> ibab: I always forget.  But somewhere in my head is the phrase "a vector has a magnitude and direction" and eventually I remember that and try that name.
2013-08-18 17:38:30 UTC <byorgey> bergey: I don't think kuribas was logged in
2013-08-18 17:43:41 UTC <byorgey> oh my goodness, Diagrams.TwoD.Shapes defines 'septagon', an ugly admixture of Latin and Greek, instead of the usual (and thoroughly Greek) 'heptagon'
2013-08-18 17:43:45 UTC <byorgey> why did no one tell me!?!?!
2013-08-18 17:57:21 UTC <fryguybob> I would have complained if you had called it 'sevengon'
2013-08-18 18:37:29 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14507fc8c http://travis-ci.org/diagrams/diagrams-lib/builds/10338991 The build was broken.
2013-08-18 18:38:29 UTC <byorgey> whoops, I thought I had compiled that
2013-08-18 18:38:34 UTC <byorgey> hooray for travis!
2013-08-18 18:44:20 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1431118ff http://travis-ci.org/diagrams/diagrams-lib/builds/10339179 The build was fixed.
2013-08-18 18:49:39 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14a7ba66b http://travis-ci.org/diagrams/diagrams-lib/builds/10339309 The build passed.
2013-08-18 19:03:10 UTC <fryguybob> byorgey: Any tips on getting the raw JS from diagrams-canvas as it is now?
2013-08-18 19:03:29 UTC <byorgey> yeah, no idea
2013-08-18 19:03:55 UTC <byorgey> ask jbracker, he has been working on a diagrams-sunroof backend which compiles directly to JS
2013-08-18 19:04:39 UTC <fryguybob> Ok.  I don't have a real webbrowser and wget and links can only get you so far...
2013-08-18 19:06:11 UTC <byorgey> hehe, right
2013-08-18 19:07:18 UTC <byorgey> I was just messing with diagrams-canvas the other night (to try to make it work for edwardk) and it really, really wants to run a webserver.
2013-08-18 19:07:45 UTC <byorgey> I have no idea how to do anything else with it other than run a little webserver and look at the output in my browser on port 3000.
2013-08-18 19:07:48 UTC <fryguybob> Humm, maybe raw telnet will get me there.
2013-08-18 19:07:59 UTC <byorgey> hah, I doubt it
2013-08-18 19:08:05 UTC <byorgey> you will have to emulate a web browser!
2013-08-18 19:08:18 UTC <fryguybob> It needs a post response to get a session then a get with the session id.
2013-08-18 19:08:27 UTC <byorgey> oh, maybe that's not so bad
2013-08-18 19:08:39 UTC <byorgey> well, have fun =)
2013-08-18 19:09:43 UTC <fryguybob> byorgey: I would just add another main but I don't know how to turn a blank canvas into text.
2013-08-18 19:10:33 UTC <byorgey> yeah, there's probably a way but you'd have to dig into the blank-canvas source code I guess
2013-08-18 19:11:05 UTC <fryguybob> byorgey: Anyway, once I figure it out I'm going to try to elide save/restore pairs with state.
2013-08-18 19:11:21 UTC <byorgey> ah, cool
2013-08-18 19:19:05 UTC <fryguybob> Any guess on what $.toJSON([w,h]) turns into (w is width and h is height)?
2013-08-18 19:21:17 UTC <byorgey> My guess is something like  [5.6,4.8]
2013-08-18 19:21:33 UTC <byorgey> which should be valid JSON syntax
2013-08-18 19:22:05 UTC <byorgey> at least that's what I get from calling  Data.Aeson.encode on the Haskell value with the same syntax
2013-08-18 19:23:01 UTC <fryguybob> Humm, doesn't like it.  I could have something else wrong.
2013-08-18 19:23:09 UTC <byorgey> dunno then.
2013-08-18 19:46:37 UTC <duplode> Hello! Two questions about types:
2013-08-18 19:47:07 UTC <duplode> (1) My application has grown to the point I'd like to add type signatures to the key diagram-making functions.
2013-08-18 19:47:37 UTC <duplode> Thing is, Diagrams types are rather complex, and I would rather not specialize the signatures more than needed. How do I cope?
2013-08-18 19:48:14 UTC <duplode> I'm thinking about defining a bunch of synonyms to make things easier. Are there any other/better strategies?
2013-08-18 19:51:17 UTC <duplode> (2) Having just found out about queries, I will probably find an use for them at some point.
2013-08-18 19:52:22 UTC <duplode> However, I noticed that one of the relevant diagram-making functions I use is getting specialized to QDiagram b R2 Any as result type  
2013-08-18 19:53:25 UTC <duplode> I suspect some of the 30-odd pattern matching cases in it is constraining the inferred type.
2013-08-18 19:53:51 UTC <duplode> Will that be a problem when I get to use queries? If so, how do I deal with it?
2013-08-18 20:31:23 UTC <notdan> depends on the type of query you want to use?
2013-08-18 20:32:29 UTC <notdan> but you can use value function to convert between type of queries
2013-08-18 20:33:21 UTC <notdan> value :: Monoid m => m -> QDiagram b v Any -> QDiagram b v m
2013-08-18 20:34:09 UTC <duplode> Let us see if I can clarify what my use case might be...
2013-08-18 20:34:41 UTC <duplode> My diagram is essentialy a grid of tiles, each being its own diagram.
2013-08-18 20:35:20 UTC <duplode> A query on Any, if I understood it, would allow me to find whether a point lies within a tile or not...
2013-08-18 20:38:12 UTC <duplode> ...but if I wanted something more sophisticates (e.g. identifying regions within the tiles) I would need the more general type. Is that right?
2013-08-18 20:43:20 UTC <notdan> Hm, I am not sure you can do regions of diagrams just like that, but if the region you are talking about is an intersection of diagrams then yes, it is possible
2013-08-18 20:43:37 UTC <notdan> you can do that with the sum monoid, like in the manual
2013-08-18 20:43:43 UTC <notdan> 1 sec, I can find the link 
2013-08-18 20:44:09 UTC <notdan> http://projects.haskell.org/diagrams/doc/manual.html#using-other-monoids
2013-08-18 20:44:33 UTC <notdan> and you can interchange between QDiagram b R2 Any and QDiagram b R2 Sum
2013-08-18 20:44:36 UTC <notdan> using the value function
2013-08-18 20:46:56 UTC <duplode> I guess that applies to my case, as I mostly compose the tiles by overlaying the (would-be) regions.
2013-08-18 20:47:43 UTC <duplode> So when the time comes I can make up a monoid with the relevant semantics, and use value in the different parts/regions of a tile.
2013-08-18 20:48:15 UTC <duplode> The only extra thing I might need would be adjusting some of the QDiagrams b R2 Any signatures. 
2013-08-18 20:54:45 UTC <duplode> BTW I think I found ot what was restricting the monoid type
2013-08-18 20:55:12 UTC <duplode> stroke and text. Both return a Diagram instead of a QDiagram.
2013-08-18 21:02:32 UTC <duplode> Anyway that monoid constraining does not seem much of a problem now. Thank you!
2013-08-18 21:34:20 UTC <luite> notdan: the codemirror manual has an example of a keymap to make tab produce spaces instead, although copypasting haskell code into the editor might still sneak some in
2013-08-18 23:52:19 UTC <byorgey> duplode: your question re: types is a good question.  I don't have any very good answers for you.
2013-08-18 23:57:01 UTC <byorgey> Personally, when I am adding type signatures, I look at the inferred type and specialize it if it is "too polymorphic".
2013-08-18 23:58:13 UTC <duplode> "Too polymorphic" as in "I am never going to use the other possibilities", I guess...
2013-08-18 23:58:19 UTC <byorgey> right.
2013-08-18 23:58:36 UTC <byorgey> Generally, I find that just specializing everything is not that bad.
2013-08-18 23:58:58 UTC <byorgey> There are really not very many times that I have written something and I end up wanting it to work, say, for all Enveloped things
2013-08-18 23:59:15 UTC <byorgey> if you really do come up with such a thing then maybe we should add it to diagrams-lib =)
2013-08-19 00:00:34 UTC <duplode> Looking at it pragmatically, I probably should just specialize, as what is making the class constraints unwiedly are Backend and Renderable
2013-08-19 00:01:02 UTC <duplode> I would like to leave the choice of backend open, but I will need PNG rendering anyway so I can't avoid Cairo for now.
2013-08-19 00:05:26 UTC <byorgey> yeah.  sometimes I wish that the backend wasn't part of the type of a diagram... but we made the choice explicitly so that different backends can support different primitives
2013-08-19 00:05:35 UTC <byorgey> rather than baking into the definition of diagrams what all backends must support
2013-08-19 00:05:44 UTC <byorgey> it's a tradeoff.
2013-08-19 00:06:35 UTC <fryguybob> byorgey: Yeah, I think that tradeoff will payoff more later.
2013-08-19 00:12:33 UTC <carter> byorgey: huh, i'm doing a similar multibackend thing in what i'm doing!
2013-08-19 00:12:43 UTC <carter> well, the having a "backend type parameter"
2013-08-19 00:13:00 UTC <carter> i wonder if i got the idea from diagrams
2013-08-19 00:15:21 UTC <byorgey> who knows, ideas are funny that way =)
2013-08-19 00:15:37 UTC <carter> I suspect i never noticed that diagrams trick
2013-08-19 00:15:57 UTC <carter> and that embarrasses me, because it would have saved me time had i known of it earlier
2013-08-19 00:16:11 UTC <carter> though I hadn't needed it till i realized i wanted mutliple easy to swap backends
2013-08-19 00:18:49 UTC <byorgey> you never notice things before you know you are going to need them.
2013-08-19 00:19:15 UTC <carter> fact
2013-08-19 00:19:26 UTC <duplode> indeed
2013-08-19 00:19:36 UTC <carter> a lot of the past year has also been me learning how to prioritize and resist yak shaving
2013-08-19 00:20:33 UTC <byorgey> duplode: out of curiosity, what are you working on?
2013-08-19 00:22:21 UTC <duplode> A hobby project; namely a vectorial map viewer for an old game.
2013-08-19 00:22:24 UTC <duplode> https://sourceforge.net/projects/stunts-cartography/
2013-08-19 00:23:21 UTC <fryguybob> ACTION may have played that game waaaay too much as a child.
2013-08-19 00:23:51 UTC <duplode> :)
2013-08-19 00:24:32 UTC <byorgey> cool =)
2013-08-19 00:24:47 UTC <duplode> ultimate goals are (1) making annotated maps without needing gimp etc.; and 
2013-08-19 00:25:09 UTC <duplode> (2) animated diagrams from game data
2013-08-19 00:26:01 UTC <duplode> As for (2), this is a tech demo I made a while ago: http://youtu.be/Dwnej8PUsjg 
2013-08-19 00:29:53 UTC <byorgey> cool!
2013-08-19 00:33:04 UTC <duplode> Thank you :) It is starting to get useable now, as Apfelmus' Threepenny allowed me to have an interface for the Windows users without too much trouble. 
2013-08-19 00:33:06 UTC <luite> i have to admit that it took me about two days to find the moving thing in that video ;)
2013-08-19 00:33:48 UTC <carter> same here
2013-08-19 00:35:51 UTC <duplode> luite / carter: indeed. I wasn't pragmatic about it back then as I wanted to give a sense of scale.  
2013-08-19 00:36:02 UTC <carter> thats fine
2013-08-19 00:36:05 UTC <carter> neat project!
2013-08-19 00:36:20 UTC <carter> wait, you're hosting on svn/source forge?
2013-08-19 00:36:33 UTC <carter> i can never figure out how to navigate source forge
2013-08-19 00:36:58 UTC <duplode> Mercurial / sourceforge.
2013-08-19 00:38:17 UTC <carter> bitbucket >>> source forge :)
2013-08-19 00:38:22 UTC <carter> :ish
2013-08-19 00:41:22 UTC <duplode> I may end up moving it. In fact, I first went to googlecode, only to realize they don't allow uploading binary packages anymore.
2013-08-19 00:42:46 UTC <carter> not sure what bitbucket does on that side
2013-08-19 00:42:51 UTC <carter> but i really like it overall
2013-08-19 00:57:46 UTC <duplode> Bitbucket does allow for project downloads. Good :)
2013-08-19 01:08:27 UTC <duplode> Taking up the opportunity, one more question:
2013-08-19 01:09:05 UTC <duplode> In diagrams 0.6, arc and wedge used to be fillable. That changed in 0.7 due to the Path --> Trail change.
2013-08-19 01:09:50 UTC <duplode> That means i need something like: # closeLine # wrapTrail # pathFromTrail # stroke
2013-08-19 01:09:57 UTC <duplode> or: # closeLine # wrapTrail # flip at (p2 (0, 0)) # trailLike
2013-08-19 01:10:30 UTC <duplode> before styling them to get similar results. Is there an easier way I am not noticing?
2013-08-19 01:11:37 UTC <byorgey> oh, is wedge not closed?
2013-08-19 01:11:46 UTC <byorgey> sure enough, it isn't.  That's a bug.
2013-08-19 01:13:10 UTC <duplode> arc shouldn't be closed, though, I gather? (I mean, I used to fill them, but that never felt quite right)
2013-08-19 01:13:49 UTC <byorgey> right, it shouldn't.
2013-08-19 01:14:10 UTC <byorgey> if you want a filled arc shape you have to use closeLine first.
2013-08-19 01:15:01 UTC <byorgey> duplode: by the way, instead of   # closeLine # wrapTrail # pathFromTrail # stroke   you can just   # closeLine # strokeLoop
2013-08-19 01:16:35 UTC <duplode> strokeLoop :: Renderable (Path R2) b => Trail' Loop R2 -> Diagram b R2
2013-08-19 01:16:42 UTC <duplode> that's it! Much better now.
2013-08-19 01:22:09 UTC <duplode> Well, gotta go now. Thanks Brent, good night everyone.
2013-08-19 01:22:42 UTC <byorgey> night duplode 
2013-08-19 01:40:27 UTC <byorgey> vector tutorial is done!  http://projects.haskell.org/diagrams/doc/vector.html
2013-08-19 01:40:42 UTC <byorgey> suggestions for improvements, especially additional exercises, welcome
2013-08-19 01:48:43 UTC <martingale> byorgey: I've only had a chance to skim it, but it looks really nice!!! I noticed that some of the literate haskell extends past the rectangle on my browser (chrome)
2013-08-19 01:49:03 UTC <carter> neat!
2013-08-19 01:49:08 UTC <byorgey> martingale: ah, which ones?
2013-08-19 01:49:52 UTC <martingale> byorgey:  e.g. the first box under Constructing vectors, the line starting > example = fromOffsets [UnitX, UnitY, 2 *^ ...
2013-08-19 01:50:20 UTC <martingale> > example = lw 0.05 . mconcat . map (fromOffsets . (:[]))
2013-08-19 01:50:20 UTC <martingale> >         $ [ r *^ e (Rad r) | r <- [33 * tau/32, 34 * tau/32 .. 2 * tau] ]
2013-08-19 01:50:21 UTC <lambdabot>   <hint>:1:9: parse error on input `='
2013-08-19 01:50:21 UTC <lambdabot>   can't find file: L.hs
2013-08-19 01:50:48 UTC <martingale> > example = mconcat $ map (fromOffsets . (:[])) vs
2013-08-19 01:50:48 UTC <martingale> >   where
2013-08-19 01:50:48 UTC <martingale> >     vs = take 33 . iterate (scale (2**(1/32)) . rotateBy (1/32)) $ unitX
2013-08-19 01:50:49 UTC <lambdabot>   <hint>:1:9: parse error on input `='
2013-08-19 01:50:49 UTC <lambdabot>   can't find file: L.hs
2013-08-19 01:50:49 UTC <lambdabot>   can't find file: L.hs
2013-08-19 01:51:13 UTC <martingale> byorgey: and
2013-08-19 01:51:23 UTC <martingale> > example = position . map (\p -> (p, circle 0.2 # fc green)) $ nonagon 1
2013-08-19 01:51:24 UTC <lambdabot>   <hint>:1:9: parse error on input `='
2013-08-19 01:57:52 UTC <byorgey> ok, thanks.
2013-08-19 01:58:42 UTC <byorgey> how do you tell a browser to use a L-R scrolly bar if the content doesn't fit?
2013-08-19 02:00:49 UTC <martingale> byorgey:  I think your problem is that the content does fit, because it includes all of the space on the left. You can see this if you shrink your browser window to a reallly thin width. then the L-R scrolly bar apperas
2013-08-19 02:01:27 UTC <luite> byorgey: overflow: auto
2013-08-19 02:05:08 UTC <byorgey> luite: thanks, that seems to work
2013-08-19 02:06:38 UTC <byorgey> martingale: better now?
2013-08-19 02:09:20 UTC <martingale> byorgey: Yes, that worked. You might want to inset the bounding box inside the drawn rectangle so that the lhs doesn't go from edge to edge
2013-08-19 02:10:02 UTC <martingale> byorgey: probable just a space or two on the right marging
2013-08-19 02:10:07 UTC <martingale> *margin
2013-08-19 02:11:14 UTC <byorgey> how do I do that?
2013-08-19 02:11:23 UTC <byorgey> I already have  padding: 20px
2013-08-19 02:11:37 UTC <byorgey> do I need to make a separate div for the content inside the div with the border?
2013-08-19 02:12:08 UTC <martingale> byorgey: I'm not an html expert buy I think that is what you need to do.
2013-08-19 02:12:38 UTC <martingale> byorgey: If you stuck I can ask my son, who will probably know.
2013-08-19 02:12:48 UTC <byorgey> well, that's sufficiently annoying that I will put it off.  Patches welcome. =)
2013-08-19 02:12:54 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1485d283e http://travis-ci.org/diagrams/diagrams-doc/builds/10348564 The build failed.
2013-08-19 02:13:07 UTC <byorgey> martingale: haha, sure
2013-08-19 02:15:07 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14fa0ec2b http://travis-ci.org/diagrams/diagrams-doc/builds/10348794 The build failed.
2013-08-19 02:21:19 UTC <martingale> byorgey: I asked my son and he said to style the sourceCode class with a "margin-right" of about 20px
2013-08-19 02:23:01 UTC <martingale> byorgey: By the way my son's name is Reed and he will be a freshman at Penn engineering this fall majoring in CS
2013-08-19 02:23:47 UTC <byorgey> hmm, that doesn't seem to have any effect
2013-08-19 02:23:59 UTC <byorgey> martingale: oh, awesome!
2013-08-19 02:24:12 UTC <martingale> byorgey: So it worked?
2013-08-19 02:24:51 UTC <byorgey> no, it didn't work, I was saying "awesome" re: your son =)
2013-08-19 02:25:05 UTC <byorgey> I would love to meet him
2013-08-19 02:25:29 UTC <byorgey> will you be around to drop him off?
2013-08-19 02:25:51 UTC <martingale> byorgey: Yes, we are coming up on Wednesday and moving him in on Thursday
2013-08-19 02:26:56 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14c56051a http://travis-ci.org/diagrams/diagrams-doc/builds/10349155 The build has errored.
2013-08-19 11:55:24 UTC <kuribas> bergey: I got your mail.
2013-08-19 11:55:43 UTC <kuribas> Can't I use a datatype to describe metafont paths?
2013-08-19 11:56:15 UTC <kuribas> I don't like the idea of using Strings to create a datatype...
2013-08-19 11:56:57 UTC <kuribas> A datatype would be more robust.
2013-08-19 12:27:35 UTC <fryguybob> kuribas: I've looked some at your cubicbezier package.  Nice work!  You might be interested in our offset segment function:  https://github.com/diagrams/diagrams-lib/blob/master/src/Diagrams/TwoD/Offset.hs
2013-08-19 12:28:31 UTC <kuribas> fryguybob: great, thanks!
2013-08-19 12:31:46 UTC <kuribas> Interesting, you use the radius of curvature to approximate the new bezier.
2013-08-19 12:32:03 UTC <kuribas> May original idea was to use a least squares approximation, but this maybe better.
2013-08-19 12:33:54 UTC <kuribas> fryguybob: How do you calculate the handles based on curvature?
2013-08-19 12:34:58 UTC <fryguybob> kuribas: I place the handles at the offsets then scale the handles by the expected curvature change (factor).
2013-08-19 12:35:42 UTC <fryguybob> kuribas: The idea is take a bezier that approximates an arc.  It's best offset will be an exact scaling about the arc center.
2013-08-19 12:35:56 UTC <kuribas> yes
2013-08-19 12:36:01 UTC <kuribas> Is it an approximation?
2013-08-19 12:36:18 UTC <fryguybob> As you subdivide eventually subsections will be close to an arc, so this will be close to the best approximation.
2013-08-19 12:36:27 UTC <kuribas> Maybe you can calculate it exactly using this: http://en.wikiversity.org/wiki/CAGD/B%C3%A9zier_Curves#Curvature_of_a_B.C3.A9zier_Curve
2013-08-19 12:36:41 UTC <fryguybob> kuribas: You cannot exactly represent the offset curve, so yes it is approximate.
2013-08-19 12:37:06 UTC <kuribas> But it the curvature exact at the endpoints?
2013-08-19 12:37:28 UTC <fryguybob> kuribas: Yes
2013-08-19 12:37:50 UTC <fryguybob> the handles are scaled along the vector from the nearest end.
2013-08-19 12:38:27 UTC <kuribas> Ah, I see!
2013-08-19 12:38:46 UTC <kuribas> Where do you subdivide?
2013-08-19 12:40:23 UTC <fryguybob> kuribas: I blindly try to fit and if it doesn't fit within some epsilon, I subdivide in the middle.
2013-08-19 12:40:41 UTC <fryguybob> kuribas: Some examples: http://www.cs.rochester.edu/u/ryates/temp/offsetSeg.pdf
2013-08-19 12:40:59 UTC <fryguybob> (at least I think that's what I do.  Where to split could be improved)
2013-08-19 12:41:36 UTC <kuribas> I was thinking to split at the place with the largest error (as returned by my least squares approximation).
2013-08-19 12:41:37 UTC <fryguybob> kuribas: Blue is the original curve and the offset alternates green and red
2013-08-19 12:42:04 UTC <kuribas> For my purpose (typography) I'd like as few subsegments as possible.
2013-08-19 12:42:12 UTC <fryguybob> kuribas: Right
2013-08-19 12:42:23 UTC <kuribas> It doesn't really need to be very exact.
2013-08-19 12:43:42 UTC <fryguybob> kuribas: Yeah, we have uses in mind where we want to be fairly exact and we also want to be able to quickly corrilate t-values for things like annimations that move along the curve and the offset.
2013-08-19 12:44:13 UTC <fryguybob> But fewer curves with the same precision is always desired :D
2013-08-19 12:46:51 UTC <kuribas> I'll try my least squares solution, and then we can compare the algorithms.
2013-08-19 12:49:10 UTC <kuribas> fryguybob: But you have two radiuses of curvature, on on each endpoint.  Which one do you use?
2013-08-19 12:53:50 UTC <fryguybob> kuribas: I use the curvature from t = 0.5
2013-08-19 12:54:06 UTC <kuribas> I see.
2013-08-19 12:54:13 UTC <fryguybob> kuribas: If I used the ends I would probably scale differently for each handle.
2013-08-19 12:54:19 UTC <kuribas> yes
2013-08-19 12:55:01 UTC <fryguybob> Lots of room to explore more options :D
2013-08-19 12:55:36 UTC <fryguybob> kuribas: If you want to do a direct compairson to the example, the code for it is here: http://www.cs.rochester.edu/u/ryates/files/offsetCubicSegment.hs
2013-08-19 12:56:33 UTC <kuribas> thanks!
2013-08-19 13:05:25 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14d8fecfd http://travis-ci.org/diagrams/diagrams-doc/builds/10361827 The build has errored.
2013-08-19 16:15:58 UTC <travis-ci> [travis-ci] 13active/06new-semantics 146b1ddbe http://travis-ci.org/diagrams/active/builds/10370245 The build is still failing.
2013-08-19 17:11:10 UTC <fryguybob> Humm, trying to get rid of the save/restore's is not going so well.
2013-08-19 17:11:39 UTC <byorgey> fryguybob: it sounds like blank-canvas is deprecated/no longer supported in favor of sunroof anyway.
2013-08-19 17:12:05 UTC <fryguybob> byorgey: Yeah I gave up and was trying to do it for postscript.
2013-08-19 17:12:13 UTC <byorgey> oh, I see.
2013-08-19 17:12:51 UTC <byorgey> well, it was worth a try.  But I think we just need to buckle down and figure out the Right way to do it.
2013-08-19 17:13:19 UTC <fryguybob> The transform is emitted for transforming the stroke so I suppose that the best optimization there would be to get rid of things with zero line width.
2013-08-19 17:13:31 UTC <fryguybob> Or strokes for empty primatives.
2013-08-19 17:14:51 UTC <byorgey> what I'm thinking at the moment goes something like this: we first convert from DUALTrees to some simpler sort of tree (not sure what)
2013-08-19 17:15:01 UTC <fryguybob> byorgey: Yeah, I was hoping for a quick change by tracking a bit more state, but I think I would have to transform each primative to be relative to the previous state but that can accumulate error.
2013-08-19 17:15:35 UTC <byorgey> ah, right, that doesn't sound good, especially for diagrams with lots of primitives.
2013-08-19 17:16:20 UTC <fryguybob> With postscript (and any JS backend) there is the option of just naming things that happen often and "calling" the name instead of reproducing it all over.
2013-08-19 17:16:46 UTC <byorgey> yes, with SVG too I think
2013-08-19 17:16:48 UTC <fryguybob> Anyway, we hope with the tree to capture the structure of shared transformation.
2013-08-19 17:17:04 UTC <byorgey> not just shared transformation but also shared attributes.
2013-08-19 17:17:32 UTC <fryguybob> Right for the tree.
2013-08-19 17:17:34 UTC <byorgey> so then we have an optimization pass over these simpler trees which does things like prune stuff with zero line width, coalesce transforms and attributes, maybe even pull shared attributes up in the tree, and even CSE (to be able to generate those "named" things)
2013-08-19 17:18:01 UTC <byorgey> then we hand off the resulting optimized tree to the backends.
2013-08-19 17:18:28 UTC <fryguybob> Yeah with a tree that should all be pretty straight forward.
2013-08-19 17:18:32 UTC <byorgey> and of course we can have a function to compile a tree down to a list of primitives which will preserve the status quo.
2013-08-19 17:23:34 UTC <fryguybob> byorgey: So to be more specific, this optimization and supsequent reflattening could be a drop in replacement for `prims` right?
2013-08-19 17:26:14 UTC <byorgey> fryguybob: right
2013-08-19 17:27:32 UTC <byorgey> so "all" we have to do is figure out what these simpler trees should look like, and what sorts of transformations/optimizations we can do on them
2013-08-19 17:27:58 UTC <byorgey> with 'freeze' being the giant monkey-wrench-shaped elephant in the tree, to mix metaphors somewhat
2013-08-19 17:30:47 UTC <fryguybob> Yeah, the strange part is that freeze brings a transformation on the stroke into play so somethings that might seem to be commutative are not if the freeze is non-symetric
2013-08-19 17:31:47 UTC <fryguybob> As in, you can just apply a uniform scaling to the line width, but for a non-uniform scaling you have to transform the primatives and the stroke.
2013-08-19 17:31:56 UTC <fryguybob> (depending on the semantics of the backend)
2013-08-19 17:34:58 UTC <fryguybob> It seems reasonable to leave that up to the backend to figure out (maybe that's what we do right now).
2013-08-19 17:35:58 UTC <fryguybob> As in, just give the primatives where they should end up and give a transform that should be applied to the stroke.
2013-08-19 18:15:21 UTC <byorgey> fryguybob: yeah, that makes sense, and that's indeed what we do now
2013-08-19 18:15:45 UTC <byorgey> I think the real problem is that the transformation to be appled to the stroke currently gets duplicated for each primitive
2013-08-19 18:17:33 UTC <byorgey> well, that's one problem at least.  edwardk's automaton SVG had the same transformation repeated a zillion times, and I think that's what it was
2013-08-19 18:21:44 UTC <fryguybob> byorgey: I think I can git rid of that one when it is not needed.
2013-08-19 18:49:24 UTC <fryguybob> byorgey: I'm making some progess now (on the state side of things), I don't think this will make it faster or get rid of most save/restores, but it should improve things significantly.
2013-08-19 18:49:57 UTC <byorgey> fryguybob: if it doesn't make it faster or get rid of most save/restores, then in what sense will it improve significantly?
2013-08-19 18:58:43 UTC <fryguybob> The output file will be less then half the size
2013-08-19 19:33:20 UTC <carter> woot: HPDF is going to become BSD :)
2013-08-19 19:33:36 UTC <carter> this means a pdf backend for diagrams thats bsd + pure haskell ish
2013-08-19 20:14:46 UTC <notdan> hey, sup carter 
2013-08-19 20:14:50 UTC <carter> hey
2013-08-19 20:14:51 UTC <notdan> that's good news
2013-08-19 20:14:53 UTC <carter> yes
2013-08-19 20:15:00 UTC <carter> its so easy to ask peple "could you bsd please"
2013-08-19 20:15:04 UTC <carter> and sometimes they meant to but forget
2013-08-19 20:15:27 UTC <notdan> actually that email from alephcar has reminded me that i have to add more backends to interactive-diagrams
2013-08-19 20:15:56 UTC <notdan> hm i have to check if i depend on any packages that are GPL
2013-08-19 20:16:24 UTC <notdan> i guess it actually makes more sense to release libraries as LGPL than as GPL
2013-08-19 20:17:54 UTC <carter> he's changing it to BSD :)
2013-08-19 20:18:50 UTC <notdan> speaking about licensing: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=692613
2013-08-19 20:19:47 UTC <carter> notdan: unrelatedly: i have a sad problem building head
2013-08-19 20:20:58 UTC <notdan> yeah I saw :( I haven't encountered such an error
2013-08-19 20:22:11 UTC <carter> hence why i'm confused
2013-08-19 20:24:00 UTC <notdan> yeah weird error, I'd think it is a happy/alex bug, but it's unlikely
2013-08-19 20:26:38 UTC <carter> this is the part where I binary search through the commit history 
2013-08-19 20:26:45 UTC <carter> to see if i can dumbly pin it down
2013-08-19 20:28:35 UTC <notdan> heh
2013-08-19 20:29:50 UTC <carter> yay, raceconditions :)
2013-08-19 20:29:53 UTC <notdan> I am using 94c35ddf31aef28de84661860f77a94229f60cb4
2013-08-19 20:30:51 UTC <carter> i think i foudn what date is that?
2013-08-19 20:33:49 UTC <notdan> aug 14
2013-08-19 20:33:55 UTC <carter> k
2013-08-19 20:49:52 UTC <byorgey> fryguybob: ah, I see, nice
2013-08-19 20:51:28 UTC <carter> notdan: CPP 
2013-08-19 20:51:28 UTC <carter> i think i fixed it
2013-08-19 20:51:31 UTC <carter> testing a build
2013-08-19 20:59:48 UTC <notdan> oh
2013-08-19 21:03:24 UTC <fryguybob> byorgey: 75% the size at this point.
2013-08-19 21:07:01 UTC <byorgey> nice!
2013-08-19 21:07:54 UTC <fryguybob> But not any faster.   I should profile :D
2013-08-19 21:33:56 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14349ef19 http://travis-ci.org/diagrams/active/builds/10382933 The build has errored.
2013-08-20 01:06:48 UTC <fryguybob> byorgey: http://heap.ezyang.com/view/8042ed8fd2bd38b09f159e15c55c7d678407d79b#form
2013-08-20 01:10:25 UTC <byorgey> fryguybob: hmm, main/Main.CAF does not tell me very much
2013-08-20 01:12:10 UTC <fryguybob> I know.  I'm not sure where to break it up, but I think the blue part is the diagrams side of things (this is the Mandelbrot example).
2013-08-20 01:14:55 UTC <byorgey> fryguybob: ah, when I did this at Hac Phi I realized that just compiling profiling versions of libraries is not enough.  If you want to actually generate cost centers within those libraries you have to compile the libraries with something like -auto-all
2013-08-20 01:15:38 UTC <byorgey> otherwise the cost of all calls into the library get lumped into the cost of the caller.
2013-08-20 01:15:48 UTC <fryguybob> Ah, ok, I'll try that.
2013-08-20 01:16:14 UTC <fryguybob> -auto-all as a ghc argument or a cabal argument?
2013-08-20 01:16:24 UTC <byorgey> but anyway, I think the fact that there is a big spike is not a good sign.  Seems like perhaps a bunch of thunks building up and then all getting forced at once
2013-08-20 01:17:05 UTC <fryguybob> byorgey: Yeah, it might just be the DList thing with postscript
2013-08-20 01:17:06 UTC <byorgey> fryguybob: as a ghc argument, so you have to give cabal the argument  --ghc-options='-prof -auto-all' or something along those lines
2013-08-20 01:19:23 UTC <fryguybob> http://heap.ezyang.com/view/b4bce4cd621176447739394ca6a2e417c25a3378#form
2013-08-20 01:19:49 UTC <fryguybob> We have upgraded from Main to OTHER
2013-08-20 01:20:03 UTC <byorgey> wait, is that the same program as before?
2013-08-20 01:20:33 UTC <fryguybob> Yeah
2013-08-20 01:22:00 UTC <byorgey> it seems to spend a lot of time in <> and *^ (if I am interpreting this correctly)
2013-08-20 01:22:50 UTC <fryguybob> I'll paste a -p
2013-08-20 01:23:05 UTC <byorgey> oh, this is memory usage, not time
2013-08-20 01:23:26 UTC <byorgey> but the observation stands.  it doesn't seem like <> and *^ should use a lot of memory.
2013-08-20 01:25:42 UTC <byorgey> I wonder if we should make DUALTrees spine-strict
2013-08-20 01:25:50 UTC <fryguybob> Humm, the -p is quite large.  There is a <> from  Diagrams.Core.Transform  with 1.3% of time.
2013-08-20 01:26:09 UTC <byorgey> yeah, I remember the -p being humongous
2013-08-20 01:26:33 UTC <fryguybob> renderWith form postscript 2.1%
2013-08-20 01:27:19 UTC <fryguybob> Oh, I think I remember this part: toRGBAUsingSpace.c  Diagrams.Attributes  5.6%
2013-08-20 01:27:30 UTC <byorgey> haha, yikes
2013-08-20 01:27:57 UTC <fryguybob> (These are individual numbers)
2013-08-20 01:28:08 UTC <byorgey> well, that's probably because it's calling toRGBAUsingSpace once or twice for each and every primitive
2013-08-20 01:28:09 UTC <fryguybob> Collectively renderDia.renderOne is 40%
2013-08-20 01:28:27 UTC <byorgey> if we are able to factor out shared attributes that should go down
2013-08-20 01:28:41 UTC <fryguybob> Yeah
2013-08-20 01:29:16 UTC <byorgey> hmm, I really do want to try making DUALTrees spine-strict as an experiment
2013-08-20 01:29:17 UTC <fryguybob> Only 4225 entries for toRGBAUsingSpace.c
2013-08-20 01:29:36 UTC <fryguybob> Where do I make the change? I'll try it.
2013-08-20 01:30:10 UTC <byorgey> the only problem is that most of the nontrivial recursive structure is farmed out to NonEmpty lists from the semigroups package, which are not spine-strict
2013-08-20 01:30:22 UTC <fryguybob> (further down toRGBAUsingSpace.c under strokeColor 12675 entries 16% time.
2013-08-20 01:30:38 UTC <byorgey> hehe, yup
2013-08-20 01:31:35 UTC <byorgey> well, it would entail putting bangs in front of all the (mutually)-recursive occurrences inside the definitions of DUALTree, DUALTreeU, and DUALTreeNE
2013-08-20 01:31:53 UTC <byorgey> but also making our own spine-strict variant of NonEmpty
2013-08-20 01:32:45 UTC <byorgey> but it looks like we only use toList, fromList, and map, so that shouldn't be too bad
2013-08-20 01:32:53 UTC <byorgey> from Data.List.NonEmpty I mean
2013-08-20 01:33:10 UTC <fryguybob> Ok
2013-08-20 02:03:06 UTC <martingale> Where do I find the source code/documentation for functions in Diagrams.Prelude, e.g. alerp?
2013-08-20 02:06:24 UTC <fryguybob> martingale: I go to here and Ctrl+F: http://projects.haskell.org/diagrams/haddock/doc-index-All.html
2013-08-20 02:11:07 UTC <byorgey> martingale: alerp is from Data.AffineSpace in the vector-space package
2013-08-20 02:11:44 UTC <byorgey> WARNING, http://projects.haskell.org/diagrams/haddock/doc-index-All.html  is still the 0.6 documentation =(
2013-08-20 02:11:55 UTC <byorgey> I have to rebuild the Haddock docs yet
2013-08-20 02:12:01 UTC <byorgey> it's super annoying so I keep putting it off.
2013-08-20 02:13:38 UTC <fryguybob> ACTION slowly shakes his head in horror at colour.
2013-08-20 02:16:38 UTC <fryguybob> byorgey: It is no lie, 16% of the time is converting blue to 0,0,255
2013-08-20 02:16:52 UTC <byorgey> haha, what
2013-08-20 02:17:07 UTC <byorgey> well, blue is a very difficult colour to deal with properly, you know
2013-08-20 02:17:48 UTC <fryguybob> It does a full 3x3 matrix inverse.
2013-08-20 02:18:10 UTC <fryguybob> Using lists.
2013-08-20 02:23:54 UTC <byorgey> hahahaha
2013-08-20 02:24:36 UTC <byorgey> so you're saying maybe we should contribute some improvements back to colour.
2013-08-20 02:25:03 UTC <fryguybob> I think so
2013-08-20 02:25:20 UTC <fryguybob> Or memoize the rainbow.
2013-08-20 02:25:45 UTC <fryguybob> Perhaps the #haskell-game people will want to do it.
2013-08-20 02:27:54 UTC <byorgey> hehe
2013-08-20 02:28:04 UTC <fryguybob> byorgey: I don't think that is our space problem though: http://heap.ezyang.com/view/6d491b995afbd590c1a09516def7a1c6d5853891#form
2013-08-20 02:28:19 UTC <fryguybob> That is where you can have any color as long as it is blue.
2013-08-20 02:28:28 UTC <fryguybob> http://heap.ezyang.com/view/64bd6f0c688e1466bf7a605c84fc3291a89c71fd  Is before
2013-08-20 02:28:28 UTC <byorgey> hehehe
2013-08-20 02:28:41 UTC <byorgey> yeah, I wouldn't think that was our space problem
2013-08-20 02:28:56 UTC <byorgey> my current hunch is that our space problem is because of DUALTree being too lazy.
2013-08-20 02:29:05 UTC <byorgey> which is why we see a lot of memory being eaten by <> .
2013-08-20 02:29:16 UTC <byorgey> (because <> constructs DUALTrees)
2013-08-20 02:30:33 UTC <fryguybob> Yeah, I added a few !'s but I'm out of time to do anything more extensive.  For the newtypes would those have to change to a data type strict in the DUALTree part?
2013-08-20 02:31:58 UTC <byorgey> right, DUALTree needs to be strict in DUALTreeU, which needs to be strict in DUALTreeNE, which needs to be... etc.
2013-08-20 02:32:37 UTC <byorgey> and our copy of the NonEmpty type needs to be strict in everything, I guess
2013-08-20 02:32:44 UTC <byorgey> anyway, I'm off to bed, goodnight
2013-08-20 02:33:50 UTC <fryguybob> Goodnight!
2013-08-20 04:13:13 UTC <martingale> fryguybob: Ah, thanks
2013-08-20 04:14:03 UTC <martingale> fryguybob: But that does not have a link to the source code
2013-08-20 04:15:26 UTC <martingale> byorgey: shouldn't there be a link from alerp in the index to Data.AffineSpace? and similar for other functions in the prelude?
2013-08-20 04:16:12 UTC <martingale> byorgey: I assume this must be difficult to do in haddoc
2013-08-20 09:36:45 UTC <kuribas> Is there a lower limit on the wanted accuracy for an outline of a bezier curve?
2013-08-20 09:37:36 UTC <kuribas> I use a least squares algorithm to approximate the outline, but it has finite accuracy.
2013-08-20 11:32:45 UTC <fryguybob> kuribas: Well if the bezier segment has a loop then there exists an offset curve with two cusps which a bezier curve cannot represent, so the worst case could be quite bad.
2013-08-20 11:38:20 UTC <kuribas> Well, I calculate all points where the radius of curvature is the same as the distance.
2013-08-20 11:39:01 UTC <kuribas> But currently it can only find them if there aren't more than two such values.
2013-08-20 11:39:50 UTC <kuribas> I use the derivative of the the square of the curvature to find the roots, but the numerical solver needs two points with opposite signs.
2013-08-20 11:42:17 UTC <kuribas> But if I can split the curve into "well behaving" curves, this may still work.
2013-08-20 11:43:37 UTC <kuribas> I approximate bezier curves between these singular points.
2013-08-20 11:43:40 UTC <fryguybob> Yeah, wikipedia mentions a method that decomposes the curve into well behaved sections.
2013-08-20 11:44:09 UTC <kuribas> I only hope my formula is numerically stable.
2013-08-20 11:45:31 UTC <fryguybob> Right, I was concerned with the points that the wikipedia method needed to find.  As in, I think you might be able to find them, but can you do so with reasonable error bounds?
2013-08-20 11:46:22 UTC <fryguybob> kuribas: The method is described here: http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.1724
2013-08-20 11:47:27 UTC <kuribas> fryguybob: I use a numerical root finder.
2013-08-20 11:48:11 UTC <kuribas> You can give it the wanted accuracy.  I used a hardwired 1e-8.
2013-08-20 11:48:49 UTC <fryguybob> kuribas: Sure, but is that accuracy in the domain or the codomain?
2013-08-20 11:49:20 UTC <fryguybob> kuribas: And how do you relate error from one of those to maximal error in the subsequent approximation?
2013-08-20 11:50:15 UTC <fryguybob> Due to these sort of questions, I punted and made my algorithm error bound driven.
2013-08-20 11:50:22 UTC <fryguybob> (at the cost of adding more segments)
2013-08-20 11:51:15 UTC <fryguybob> kuribas: I'm not trying to discourage you, but just pointing out questions that I don't know the answer to.
2013-08-20 11:51:15 UTC <kuribas> In the domain.
2013-08-20 11:51:24 UTC <kuribas> right.
2013-08-20 11:53:13 UTC <kuribas> I had a formula for the maximal error, but it wasn't very usefull.
2013-08-20 11:53:34 UTC <kuribas> It depends on the coordinates from the bezier (logically).
2013-08-20 11:55:39 UTC <kuribas> I guess, the large the second derivative, the greater the error.
2013-08-20 11:55:48 UTC <kuribas> first derivative.
2013-08-20 11:56:45 UTC <kuribas> fryguybob: How do you find those points then?
2013-08-20 11:58:55 UTC <kuribas> hm, you could find the where the first derivative is the largest, and the take an approximation of the error.
2013-08-20 11:59:54 UTC <kuribas> It would be accurate for small errors.
2013-08-20 12:12:09 UTC <kuribas> Instead of the derivate a upper bound could be estimated.
2013-08-20 12:16:44 UTC <rayman_> byorgey: are you here?
2013-08-20 12:17:32 UTC <rayman_> OK
2013-08-20 12:20:49 UTC <kuribas> fryguybob: So if you divide by the longest line in the convex hull, you should be safe.
2013-08-20 12:20:59 UTC <kuribas> Maybe add some margin.
2013-08-20 12:30:55 UTC <Taneb> I wrote a program that uses diagrams to render the dragon curve (because I was bored)
2013-08-20 12:33:58 UTC <Taneb> It's not very memory efficient, though :(
2013-08-20 12:36:27 UTC <Taneb> http://www.vandoorn.talktalk.net/Nathan's_Stuff/d.svg is as detailed as it can render it
2013-08-20 12:38:14 UTC <rayman_> very cool :)
2013-08-20 12:40:59 UTC <Taneb> Now to delve into GHC profiling to see if I can get a more intricate rendering
2013-08-20 12:50:11 UTC <fryguybob> kuribas: I don't completely follow.  Finding where the first derivative is largest comes with some error.  I'm off for now.
2013-08-20 12:51:06 UTC <kuribas> fryguybob: You can take the maximum of the convex hull of the derivative.  The tangent will always be smaller than that.
2013-08-20 12:52:07 UTC <kuribas> And I half it because it is only true for infinitesimal errors.
2013-08-20 12:52:17 UTC <kuribas> That should cover most cases.
2013-08-20 13:05:34 UTC <byorgey> Taneb: cool!
2013-08-20 13:05:37 UTC <byorgey> Taneb: I'm guessing it's diagrams rather than your program which is to blame.  It's not very optimized/efficient.  fryguybob and I are currently looking into it.
2013-08-20 13:06:01 UTC <Taneb> byorgey, going to double-check, I haven't really thought about the algorithm in too much detail
2013-08-20 13:06:10 UTC <Taneb> There's a lot of sharing I could do but I'm not
2013-08-20 13:06:22 UTC <byorgey> Taneb: did you draw it with squares or with one continuous path?
2013-08-20 13:06:27 UTC <Taneb> One continuous path
2013-08-20 13:06:48 UTC <byorgey> Taneb: 50 lines sounds WAY too long then =)
2013-08-20 13:07:28 UTC <Taneb> byorgey, I'm re-installing all my libraries with profiling enabled (figured I'd have to bite the bullet eventually), I'll mess with it after that
2013-08-20 13:07:31 UTC <byorgey> I drew the dragon curve once with a much older version of diagrams, using an iterated string rewriting system, it was probably only about 20 lines or so
2013-08-20 13:07:39 UTC <byorgey> Taneb: ok, sounds good =)
2013-08-20 13:07:49 UTC <Taneb> (and I'm really kind of new to diagrams)
2013-08-20 13:08:00 UTC <byorgey> sure, no worries
2013-08-20 13:08:18 UTC <byorgey> ACTION -> school, back in 15 mins or so
2013-08-20 13:08:25 UTC <Taneb> I define my own direction type, which I can cut out completely probably
2013-08-20 13:08:26 UTC <Taneb> Bye!
2013-08-20 13:21:45 UTC <Taneb> It looks like the slowness is me
2013-08-20 13:23:06 UTC <ClaudiusMaximus> Taneb: http://hackage.haskell.org/packages/archive/diagrams-contrib/0.7/doc/html/Diagrams-TwoD-Path-IteratedSubset.html might be useful (not tried it myself)
2013-08-20 13:24:00 UTC <byorgey> I don't think the dragon curve is the image of an iterated subset construction
2013-08-20 13:24:13 UTC <Taneb> ...I think it may be
2013-08-20 13:24:14 UTC <ClaudiusMaximus> oh heh
2013-08-20 13:24:26 UTC <ClaudiusMaximus> anyway, gotta dash
2013-08-20 13:24:43 UTC <Taneb> Me too
2013-08-20 13:24:44 UTC <Taneb> Bye
2013-08-20 13:24:46 UTC <byorgey> bye
2013-08-20 13:25:38 UTC <byorgey> martingale: re: link to alerp documentation, yes, there should be... and there WILL be, once I get around to rebuilding the Haddocks for 0.7
2013-08-20 13:31:41 UTC <byorgey> rayman_: what's up?
2013-08-20 13:32:12 UTC <rayman_> byorgey: I read the tutorial about vectors. It's a very cool. :)
2013-08-20 13:33:29 UTC <rayman_> byorgey: I will wait before you complete tutorials and thereafter I will make a russian translation of them. :)
2013-08-20 13:34:13 UTC <byorgey> ooh, awesome =D
2013-08-20 13:34:46 UTC <rayman_> yep :)
2013-08-20 13:34:59 UTC <byorgey> rayman_: the tutorials will never be done, there are always more tutorials to write =)
2013-08-20 13:35:33 UTC <byorgey> but I just have a few more changes to make to the vector one and it will be done
2013-08-20 13:35:36 UTC <luite> cool, so i can learn some russian when i read the english one first ;)
2013-08-20 13:35:36 UTC <rayman_> yes, but someone should complete basic of them
2013-08-20 13:35:41 UTC <byorgey> sure.
2013-08-20 13:36:01 UTC <rayman_> luite: some russian about beer and vodka? =D
2013-08-20 13:36:03 UTC <byorgey> if you translate them into Russian we should figure out a way to host them on the diagrams site too
2013-08-20 13:36:19 UTC <byorgey> so you can click a little flag at the top of the tutorial and switch languages maybe
2013-08-20 13:36:20 UTC <rayman_> *bear
2013-08-20 13:36:20 UTC <luite> rayman_: will your translated tutorial invole beer and vodka?
2013-08-20 13:36:30 UTC <luite> involve
2013-08-20 13:36:34 UTC <byorgey> bears and vodka, even better
2013-08-20 13:36:38 UTC <rayman_> yep
2013-08-20 13:36:45 UTC <luite> oh bears, yeah much more russian
2013-08-20 13:36:47 UTC <rayman_> luite: nope =)
2013-08-20 13:37:59 UTC <rayman_> byorgey: I can create site for this stuff
2013-08-20 13:38:02 UTC <luite> perhaps some vodka to ease the headache from all the new typeclasses
2013-08-20 13:38:11 UTC <rayman_> :D
2013-08-20 13:38:11 UTC <byorgey> rayman_: sure, we could have it on separate site too
2013-08-20 13:38:17 UTC <byorgey> hahaha
2013-08-20 13:39:01 UTC <byorgey> ACTION prefers a dram of scotch for that, but the diagrams typeclasses definitely require some form of alcohol ;)
2013-08-20 13:39:34 UTC <rayman_> yes especially about trails and paths =)
2013-08-20 13:40:09 UTC <byorgey> indeed =)
2013-08-20 13:42:18 UTC <fryguybob> I think trails and paths could be a nice continuation of the vector tutorial
2013-08-20 13:44:14 UTC <kuribas> fryguybob: The nice thing is that it is easy to calculate an upper bound of the tangent vector.
2013-08-20 13:44:34 UTC <kuribas> fryguybob: Using the fact that the derivative of a bezier is a bezier itself.
2013-08-20 13:45:01 UTC <kuribas> You can simply take the maximum of the convex hull of the derivative.
2013-08-20 13:52:29 UTC <fryguybob> kuribas: Ah, with lower degree?
2013-08-20 13:53:34 UTC <kuribas> fryguybob: I just take the maximum of magnitude of the three control points.
2013-08-20 13:55:08 UTC <kuribas> Which are simply 2*(C[i] - C[i-1]).
2013-08-20 13:56:37 UTC <kuribas> And then I double it to have some room.
2013-08-20 13:59:39 UTC <fryguybob> So what is the maximal derivative giving you?
2013-08-20 13:59:59 UTC <fryguybob> (I guess I should say an upper bound on the magnitude of the derivative?)
2013-08-20 14:02:14 UTC <kuribas> http://paste.lisp.org/display/138538
2013-08-20 14:08:36 UTC <martingale> how do i locate a trail?
2013-08-20 14:09:10 UTC <byorgey> martingale: use  at :: a -> Point (V a) -> Located a
2013-08-20 14:09:30 UTC <martingale> byorgey: ah yes, i forgot
2013-08-20 14:09:41 UTC <byorgey> so e.g.     someTrail `at` p2 (3,1)
2013-08-20 14:15:08 UTC <kuribas> fryguybob: It gives the magnification of the tolerance from the domain to the codomain.
2013-08-20 14:15:31 UTC <kuribas> fryguybob: For infinitesimal values.
2013-08-20 14:20:28 UTC <rayman_> why explodeTrail function works only on Located things?
2013-08-20 14:21:16 UTC <fryguybob> kuribas: Oh, ok.  That makes sense.
2013-08-20 14:21:31 UTC <fryguybob> kuribas: Sorry, I'm a bit distracted at the moment.
2013-08-20 14:22:19 UTC <kuribas> no problem
2013-08-20 14:25:14 UTC <byorgey> rayman_: because you might want to get paths out of it, or Located trails, etc.
2013-08-20 14:25:21 UTC <byorgey> so it needs to know a position.
2013-08-20 14:25:37 UTC <rayman_> hmm
2013-08-20 14:25:38 UTC <rayman_> but
2013-08-20 14:25:42 UTC <byorgey> rayman_: if you have a Trail  you can just do   `at` origin   to turn it into a Located Trail
2013-08-20 14:25:52 UTC <rayman_> yes, I know it
2013-08-20 14:26:48 UTC <byorgey> rayman_: what would you expect, say   explodeTrail :: Trail v -> [Path v]   to do?  Which paths would I get as output?
2013-08-20 14:27:01 UTC <rayman_> but If I want to make some square with different colors of lines using trails, what should I do?
2013-08-20 14:33:42 UTC <byorgey> rayman_: http://paste.hskll.org/get/334
2013-08-20 14:34:29 UTC <rayman_> hmm
2013-08-20 14:41:25 UTC <byorgey> rayman_: does that code make sense?
2013-08-20 14:41:56 UTC <rayman_> yes. I'm trying to understand why you should make path for applying some style
2013-08-20 14:42:25 UTC <byorgey> it doesn't really matter whether you make a path or a located trail or whatever.
2013-08-20 14:42:31 UTC <byorgey> you can only apply styles to diagrams.
2013-08-20 14:42:51 UTC <byorgey> paths and trails are just abstract geometric objects, they do not have styles.
2013-08-20 14:43:24 UTC <rayman_> okey, then we should to turn each side to diagram, yes?
2013-08-20 14:43:28 UTC <byorgey> right
2013-08-20 14:43:31 UTC <rayman_> hmm
2013-08-20 14:43:31 UTC <rayman_> ok
2013-08-20 14:43:33 UTC <byorgey> that is what 'map stroke' does
2013-08-20 14:43:50 UTC <rayman_> and map stroke works only on located things
2013-08-20 14:43:59 UTC <byorgey> in fact as the comment says, the 'map stroke' is unnecessary.  The call to explodeTrail can already generate a list of diagrams.
2013-08-20 14:44:17 UTC <byorgey> rayman_: stroke turns a Path into a diagram
2013-08-20 14:44:34 UTC <rayman_> but Path it's a located thing
2013-08-20 14:44:46 UTC <byorgey> yes, paths have concrete locations
2013-08-20 14:44:53 UTC <byorgey> trails do not.
2013-08-20 14:44:53 UTC <rayman_> hm
2013-08-20 14:45:05 UTC <rayman_> yes, I understand this
2013-08-20 14:45:31 UTC <rayman_> soo.. we can convert only located things to diagrams?
2013-08-20 14:46:03 UTC <byorgey> rayman_: you can also convert a Trail to a diagram, using  strokeT.  But it will pick a default location for the trail (it will start at the origin)
2013-08-20 14:46:15 UTC <byorgey> rayman_: try changing 'stroke' to 'strokeT' (which turns a Trail into a diagram) and see if you can explain why the output picture changes.
2013-08-20 14:46:44 UTC <rayman_> but, if some object has origin then it's located or not?
2013-08-20 14:47:17 UTC <byorgey> sorry, I don't think I understand your question
2013-08-20 14:49:44 UTC <byorgey> of course, this is why I need to write a tutorial on all of this =)
2013-08-20 14:58:32 UTC <rayman_> hm.. Ok. I understand this :)
2013-08-20 15:30:35 UTC <notdan> hey rayman_ :) 
2013-08-20 15:30:42 UTC <notdan> any new fractals?
2013-08-20 15:34:48 UTC <rayman_> no :) now I make some program for maze generation with render using Diagrams. Really fun
2013-08-20 15:35:16 UTC <rayman_> but I stuck on mutable vectors =(
2013-08-20 15:36:36 UTC <notdan> yikes
2013-08-20 15:37:25 UTC <rayman_> :)
2013-08-20 15:40:44 UTC <ClaudiusMaximus> rayman_: i was playing with making mazes the other day... http://mathr.co.uk/misc/2013-08-17_mazing-3-3.png
2013-08-20 15:41:11 UTC <ClaudiusMaximus> using list monad and backtracking search to build a tree
2013-08-20 15:41:19 UTC <ClaudiusMaximus> *all trees
2013-08-20 15:41:31 UTC <rayman_> hmm
2013-08-20 15:41:35 UTC <rayman_> looks good
2013-08-20 15:41:37 UTC <byorgey> nice, looks like some weird alien language
2013-08-20 15:41:42 UTC <rayman_> +1
2013-08-20 15:42:17 UTC <rayman_> it there some tutorial for using ST monad for dummers? :)
2013-08-20 15:42:20 UTC <ClaudiusMaximus> then i added some symmetry analysis http://mathr.co.uk/misc/2013-08-17_mazing_3-3_symmetries.png  but i tried it on 4x4 grid and my code is too naive to run in an acceptable amount of time
2013-08-20 15:43:38 UTC <ClaudiusMaximus> so if i feel like revisiting that project i'll make it generate mazes (well, trees on a grid) using randomized choice for each step
2013-08-20 15:44:41 UTC <ClaudiusMaximus> rayman_: st mutable arrays are a bit awkward, maybe try using plain immutable arrays first, unless they're huge the cost of updates isn't that high
2013-08-20 15:45:30 UTC <luite> rayman_: it really works very much like IO, but with more annoying type errors
2013-08-20 15:45:38 UTC <rayman_> hm
2013-08-20 15:45:40 UTC <byorgey> ACTION suggests trying it without arrays at all =)
2013-08-20 15:45:50 UTC <byorgey> well, without mutable arrays that is
2013-08-20 15:45:59 UTC <luite> but yeah, often you can avoid them
2013-08-20 15:46:00 UTC <rayman_> type Maze = V.Vector (V.Vector Cell)
2013-08-20 15:46:22 UTC <rayman_> i already have this type
2013-08-20 15:46:23 UTC <ClaudiusMaximus> i used Set (SortedPair (Int,Int)) to store my maze as a list of edges
2013-08-20 15:46:29 UTC <luite> i wonder how much work byorgey's idea of a rasterizer with repa and gpipe would be
2013-08-20 15:46:29 UTC <Taneb> Is there an easy way to multiply an R2 by a matrix/
2013-08-20 15:46:36 UTC <rayman_> but it's pain to update this
2013-08-20 15:47:26 UTC <luite> does repa already support gpipe as a backend for some computations?
2013-08-20 15:48:13 UTC <byorgey> luite: oh, interesting idea
2013-08-20 15:48:22 UTC <ClaudiusMaximus> i think there's a repa backend for Cuda, afaik gpipe was some unsafePerformIO-heavy dsl for shaders
2013-08-20 15:49:12 UTC <notdan> do backends need to provide renderable instances only for closed segments?
2013-08-20 15:49:16 UTC <byorgey> Taneb: sadly, no. No one has yet written a function to convert arbitrary matrices into Transformations
2013-08-20 15:49:29 UTC <byorgey> see https://github.com/diagrams/diagrams-core/issues/40
2013-08-20 15:49:56 UTC <byorgey> Taneb: where did your matrix come from?
2013-08-20 15:49:59 UTC <Taneb> This is probably way overkill for what I want (efficient rotation of a unit vector by 90 degrees)
2013-08-20 15:50:28 UTC <byorgey> just use  rotateBy (1/4)/
2013-08-20 15:50:31 UTC <byorgey> uh, without the final stray /
2013-08-20 15:51:12 UTC <byorgey> Taneb: or use 'perp'
2013-08-20 15:51:25 UTC <notdan> 'data Segment c v = ... | Cubic v v (Offset c v)' <- what are those variables supposed to mean?
2013-08-20 15:51:29 UTC <notdan> Why not three offsets?
2013-08-20 15:51:52 UTC <byorgey> Taneb: in fact, perp will be more efficient than multiplying by a matrix anyway
2013-08-20 15:52:24 UTC <byorgey> notdan: there are three offsets, the first two are plain vectors, and the third is of type  Offset c v
2013-08-20 15:52:37 UTC <byorgey> the point is that if  c ~ Open  then there is no third offset
2013-08-20 15:52:54 UTC <byorgey> because the final offset is determined by the context somehow, e.g. this is the final segment in a Loop
2013-08-20 15:53:18 UTC <Taneb> Thank you :)
2013-08-20 15:53:59 UTC <Taneb> That's just vastly diminished the last remaining expensive bit in my program that I could do anything about
2013-08-20 15:55:29 UTC <Taneb> Now my program spends 70% of its time in "lw 0.5 . strokeLine . lineFromOffsets"
2013-08-20 15:56:09 UTC <notdan> Oh, I see
2013-08-20 15:57:50 UTC <notdan> hm, it seems that trails representation has changed quite drastically
2013-08-20 15:59:46 UTC <byorgey> yes indeed
2013-08-20 16:04:01 UTC <Taneb> Still runs out of memory, but I realised that I'm asking it to remember where over 2^17 lines go, so I think it may deserve to
2013-08-20 16:13:57 UTC <byorgey> that is a lot of lines, yes.
2013-08-20 16:15:25 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 149578ddc http://travis-ci.org/diagrams/diagrams-doc/builds/10413315 The build failed.
2013-08-20 16:16:55 UTC <rayman_> byorgey: http://www.cis.upenn.edu/~byorgey/pub/monad_tutorial.jpg lol :D
2013-08-20 16:17:07 UTC <byorgey> =)
2013-08-20 16:21:07 UTC <byorgey> ACTION has some gouda for lunch, yum!
2013-08-20 16:22:34 UTC <luite> but can you pronounce it correctly? :p
2013-08-20 16:23:28 UTC <byorgey> it's something like "khowda"
2013-08-20 16:23:45 UTC <byorgey> I think
2013-08-20 16:24:14 UTC <luite> yeah
2013-08-20 16:24:28 UTC <luite> although i'm not sure about the pronunciation of "kh" :)
2013-08-20 16:24:55 UTC <rayman_> :D
2013-08-20 16:25:23 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14df2fde5 http://travis-ci.org/diagrams/diagrams-doc/builds/10414018 The build has errored.
2013-08-20 16:26:17 UTC <rayman_> Russian language is simpler in case of pronunciation =)
2013-08-20 16:27:29 UTC <byorgey> luite: is it a voiceless velar fricative?
2013-08-20 16:28:48 UTC <byorgey> or is it more like the English pronunciation for 'g'?
2013-08-20 16:29:43 UTC <luite> oh yeah it's a bit like the 'ch' in 'Bach'
2013-08-20 16:29:55 UTC <byorgey> ok, right, that's what I thought
2013-08-20 16:35:28 UTC <rayman_> http://82.196.11.44/screens/1377016489.png
2013-08-20 16:35:37 UTC <rayman_> how pipe (|) works in patterns?
2013-08-20 16:35:59 UTC <byorgey> rayman_: those are guards
2013-08-20 16:36:00 UTC <rayman_> it's hack for implementing guards inside a let expression
2013-08-20 16:36:00 UTC <byorgey> they work the same way as guards in function definitions
2013-08-20 16:36:16 UTC <rayman_> hm..
2013-08-20 16:36:44 UTC <byorgey> that code does a pattern match on () against the pattern _, which always matches, and then the guards are tried in order from top to bottom
2013-08-20 16:36:49 UTC <rayman_> so I can use guards in pattern matching?
2013-08-20 16:36:50 UTC <byorgey> the first one which evalutes to True is chosen
2013-08-20 16:37:11 UTC <byorgey> yes
2013-08-20 16:37:44 UTC <rayman_> I see this at the first time
2013-08-20 16:50:11 UTC <rayman_> http://82.196.11.44/screens/1377017384.png
2013-08-20 16:50:26 UTC <rayman_> :D how to replace elem in vector of vectors
2013-08-20 16:52:26 UTC <byorgey> nice =)
2013-08-20 17:13:55 UTC <arkeet> sounds like a job for lens!
2013-08-20 17:15:29 UTC <arkeet> [[0,0,0],[0,0,0],[0,0,0]] & ix 1 . ix 2 .~ 3
2013-08-20 17:15:35 UTC <arkeet> > [[0,0,0],[0,0,0],[0,0,0]] & ix 1 . ix 2 .~ 3
2013-08-20 17:15:35 UTC <lambdabot>   [[0,0,0],[0,0,3],[0,0,0]]
2013-08-20 17:31:49 UTC <rayman_> wow
2013-08-20 17:33:15 UTC <rayman_> so, I make a bug in my recursive function and program runs forever =(
2013-08-20 17:47:55 UTC <travis-ci> [travis-ci] 13monoid-extras/06master 14e4b9b4e http://travis-ci.org/diagrams/monoid-extras/builds/10418859 The build passed.
2013-08-20 17:48:22 UTC <travis-ci> [travis-ci] 13monoid-extras/06master 14c280bd4 http://travis-ci.org/diagrams/monoid-extras/builds/10418884 The build passed.
2013-08-20 18:09:07 UTC <travis-ci> [travis-ci] 13backend-tests/06master 149b4fd39 http://travis-ci.org/diagrams/diagrams-backend-tests/builds/10419545 The build was broken.
2013-08-20 18:22:00 UTC <hpaste_> Taneb pasted âDragon Curveâ at http://lpaste.net/92009
2013-08-20 18:22:10 UTC <Taneb> How can I make that more space-efficient?
2013-08-20 18:23:54 UTC <travis-ci> [travis-ci] 13backend-tests/06master 14ca0f06d http://travis-ci.org/diagrams/diagrams-backend-tests/builds/10420195 The build is still failing.
2013-08-20 18:28:27 UTC <byorgey> Taneb: no idea, though I am currently trying to squash some apparent space leaks
2013-08-20 18:28:33 UTC <Taneb> :D
2013-08-20 18:28:56 UTC <byorgey> ACTION steals Taneb's program to use as a benchmark
2013-08-20 18:28:59 UTC <Taneb> :O
2013-08-20 18:29:22 UTC <Taneb> byorgey, the number on line 28 is what controls how details it is
2013-08-20 18:29:30 UTC <Taneb> Above 16 and I run out of memory
2013-08-20 18:29:47 UTC <byorgey> OK
2013-08-20 18:31:04 UTC <travis-ci> [travis-ci] 13backend-tests/06master 14b3736ca http://travis-ci.org/diagrams/diagrams-backend-tests/builds/10420559 The build has errored.
2013-08-20 18:53:30 UTC <fryguybob> byorgey: Are you doing the spine-strict conversion now?
2013-08-20 18:55:09 UTC <byorgey> fryguybob: I got as far as compiling everything with profiling and generating a few test profiles, but I haven't actually done any conversion yet.
2013-08-20 18:55:20 UTC <byorgey> and I'm not going to have any more time to work on it today.
2013-08-20 18:55:40 UTC <byorgey> so if you want to take a shot at it, go ahead.
2013-08-20 18:55:42 UTC <fryguybob> byorgey: Ok, I'll take another crack at it.
2013-08-20 18:56:19 UTC <fryguybob> There are a couple other RTS options I'll try to see if they are insightful first.
2013-08-20 18:59:09 UTC <luite> oh what is your general strategy? ghcjs has a leak and i have to find it :)
2013-08-20 19:01:40 UTC <byorgey> my general strategy is "flail around trying random things until it gets faster"
2013-08-20 19:03:11 UTC <fryguybob> luite: My first step is to figure out how to do it.  Second step is doing it.
2013-08-20 19:04:13 UTC <fryguybob> http://heap.ezyang.com/view/e1975225238e653ee699e918e7c50010621e0b8f#form
2013-08-20 19:06:17 UTC <fryguybob> Diagrams.TwoD.Types.sat_... <- luite, byorgey any idea what that closure is connected to?
2013-08-20 19:06:55 UTC <Taneb> byorgey, don't use my dragon curve as a benchmark!
2013-08-20 19:07:06 UTC <Taneb> I don't think the problem is diagram-related!
2013-08-20 19:09:29 UTC <byorgey> Taneb: well, I think it is.
2013-08-20 19:09:37 UTC <byorgey> there's only one way to find out!
2013-08-20 19:10:57 UTC <Taneb> fiiiiiiiight?
2013-08-20 19:11:33 UTC <luite> fryguybob: sat* stuff is all kinds of local led bindings
2013-08-20 19:11:37 UTC <luite> let
2013-08-20 19:12:08 UTC <byorgey> Taneb: http://www.googlefight.com/index.php?lang=en_GB&word1=the+problem+is+diagram-related&word2=the+problem+is+not+diagram-related
2013-08-20 19:12:34 UTC <byorgey> looks like I was right, but only by a hair!
2013-08-20 19:12:52 UTC <fryguybob> luite: Ok
2013-08-20 19:13:17 UTC <luite> fryguybob: you might want to recompile with some flag that automatically adds CAFs
2013-08-20 19:14:08 UTC <Taneb> Okay, that was almost certainly the wrong way to find out
2013-08-20 19:14:18 UTC <byorgey> =)
2013-08-20 19:14:52 UTC <fryguybob> luite: I'll try -caf-all on lib
2013-08-20 19:15:15 UTC <fryguybob> luite: Any clues on what OTHER is?
2013-08-20 19:15:53 UTC <fryguybob> \me hopes it is something the Simon's put in to slow down haskell programs so other things don't look bad.
2013-08-20 19:16:34 UTC <luite> not really :)
2013-08-20 19:19:15 UTC <byorgey> "your program is too fast, don't be such a jerk."
2013-08-20 19:20:26 UTC <fryguybob> Humm -caf-all didn't help that I can see.
2013-08-20 19:20:33 UTC <fryguybob> http://heap.ezyang.com/view/6b7c91dd24bb5fc0761b658ab19d7f5c68ec2e90#form
2013-08-20 19:22:13 UTC <fryguybob> byorgey: My guess is that the (,) there is the tuple from the dual tree
2013-08-20 19:22:27 UTC <byorgey> fryguybob: yeah, those look identical
2013-08-20 19:22:55 UTC <byorgey> yes, you might be right
2013-08-20 19:23:44 UTC <fryguybob> Since the sat_ things decrease as we render, perhaps they are Prim's.  Those are in Diagrams.TwoD.Types right?
2013-08-20 19:23:53 UTC <byorgey> no
2013-08-20 19:24:07 UTC <byorgey> Diagrams.TwoD.Types is from diagrams-lib, it defines things like R2 and P2
2013-08-20 19:24:16 UTC <fryguybob> Ah, ok.
2013-08-20 19:24:40 UTC <byorgey> it could just be vectors or something.
2013-08-22 02:01:38 UTC <travis-ci> [travis-ci] 13dual-tree/06master 143f6f11a http://travis-ci.org/diagrams/dual-tree/builds/10478189 The build passed.
2013-08-22 02:04:26 UTC <travis-ci> [travis-ci] 13dual-tree/06internal-d 14a3ab95c http://travis-ci.org/diagrams/dual-tree/builds/10478214 The build passed.
2013-08-22 02:35:40 UTC <luite> byorgey: i'm not going to ICFP/FARM sorry
2013-08-22 02:39:08 UTC <fryguybob> :(
2013-08-22 02:39:23 UTC <luite> fryguybob: not cancelling haskell symposium
2013-08-22 02:39:42 UTC <fryguybob> :)  but still :(
2013-08-22 06:17:43 UTC <raymank26> http://82.196.11.44/screens/1377152235.png
2013-08-22 06:18:16 UTC <raymank26> I make it :)
2013-08-22 06:27:52 UTC <raymank26> okey :(
2013-08-22 06:29:46 UTC <johnw> nice, from what code?
2013-08-22 10:09:12 UTC <jbracker> What is the default fill rule?
2013-08-22 10:51:40 UTC <byorgey> jbracker: the default fill is transparent
2013-08-22 10:52:55 UTC <fryguybob> jbracker: Postscript backend defaults to Winding.
2013-08-22 10:53:09 UTC <byorgey> ohhh, fill RULE
2013-08-22 10:53:19 UTC <fryguybob> :D
2013-08-22 10:53:34 UTC <byorgey> uh, good question, I am not sure
2013-08-22 10:53:40 UTC <byorgey> probably Winding
2013-08-22 10:54:08 UTC <byorgey> if you find a backend that does something different, file a bug
2013-08-22 10:55:05 UTC <fryguybob> I should add a test to the backend tests that probs each default.
2013-08-22 10:56:02 UTC <fryguybob> *probes
2013-08-22 10:56:31 UTC <byorgey> yes, sounds like a good idea
2013-08-22 10:57:01 UTC <byorgey> fryguybob: speaking of backend tests, I should have mentioned earlier that there is a failing test for the postscript backend =)
2013-08-22 10:57:14 UTC <byorgey> to be fair, ALL the backends were failing it, and I fixed the other ones
2013-08-22 10:59:16 UTC <Taneb> How's the backend improvement going?
2013-08-22 10:59:30 UTC <byorgey> in particular the "fill-line" test (and "line-loop", but it's the same issue).  Lines should not be filled, which requires a bit of work because you have to notice whether you're drawing lines or loops and explicitly NOT fill when you are drawing lines
2013-08-22 11:00:53 UTC <fryguybob> byorgey: Ah, ok.  I'll take a look.
2013-08-22 11:00:59 UTC <byorgey> Taneb: going well, though it's mostly still in my head =)   See https://github.com/diagrams/dual-tree/tree/internal-d , and I have a bit of code I've written here for diagrams-core which I haven't pushed yet
2013-08-22 11:01:31 UTC <byorgey> fryguybob: it may mean you have to add a StateT to your rendering monad =(
2013-08-22 11:02:16 UTC <fryguybob> byorgey: It is already there.
2013-08-22 11:02:37 UTC <fryguybob> I have to track fonts and fill rule
2013-08-22 11:02:59 UTC <fryguybob> (or emit those on each primative)
2013-08-22 11:03:59 UTC <jbracker> byorgey: How about a defoult instance for FillRule and FillRuleA then?
2013-08-22 11:05:20 UTC <byorgey> fryguybob: ah, I must have missed that
2013-08-22 11:05:45 UTC <byorgey> jbracker: oh, you mean a Data.Default instance?  sure!
2013-08-22 11:06:37 UTC <jbracker> should I add one and push it?
2013-08-22 11:08:43 UTC <byorgey> jbracker: sure
2013-08-22 12:21:29 UTC <notdan> Do you guys think it makes sense at all to expose the tests from diagrams-backend-tests as a libriary module?
2013-08-22 13:50:44 UTC <byorgey> notdan: sure, why not
2013-08-22 13:53:09 UTC <notdan> OK. I was just thinking how would I test diagrams-ghcjs. And right now I just copy the tests code :)
2013-08-22 13:55:00 UTC <notdan> Man, I spent like two days chasing this bug: https://github.com/ghcjs/ghcjs-canvas/blob/c548e1dcc2a2cdbd46a32b43870c276d4567273e/JavaScript/Canvas.hs#L93 :D
2013-08-22 13:55:25 UTC <notdan> But at least now I (almost fully) understand how to implement diagrams backends
2013-08-22 13:55:34 UTC <fryguybob> hehe
2013-08-22 13:55:52 UTC <byorgey> haha, whoops
2013-08-22 13:55:56 UTC <fryguybob> line 97 too
2013-08-22 13:56:04 UTC <byorgey> those definitions look... not very useful
2013-08-22 13:56:16 UTC <byorgey> notdan: excellent =)
2013-08-22 13:56:21 UTC <fryguybob> Is there a warning for functions defined that way?  Seems like GHC could do that.
2013-08-22 13:56:31 UTC <byorgey> ACTION was just wondering the same thing.
2013-08-22 13:57:08 UTC <byorgey> survey says... nope.
2013-08-22 13:58:01 UTC <byorgey> even undefined isn't defined that way, so it seems to me a warning would be entirely legitimate.
2013-08-22 13:58:15 UTC <fryguybob> -fwarn-dodgy-extra-tight-loop
2013-08-22 13:58:22 UTC <byorgey> hehe
2013-08-22 13:58:29 UTC <byorgey> are there any warnings not enabled by -Wall ?
2013-08-22 13:58:40 UTC <byorgey> ACTION hopes that is a silly question
2013-08-22 13:58:46 UTC <fryguybob> byorgey: I think I remember hearing that there are
2013-08-22 13:58:55 UTC <byorgey> ugh
2013-08-22 13:59:23 UTC <byorgey> -Wall-I-mean-it
2013-08-22 13:59:30 UTC <fryguybob> The docs list the ones that are not: http://www.haskell.org/ghc/docs/7.6.3/html/users_guide/options-sanity.html
2013-08-22 13:59:41 UTC <fryguybob> -fwarn-tabs <-- boo!
2013-08-22 14:00:05 UTC <byorgey> I know right?
2013-08-22 14:00:13 UTC <fryguybob> warn-tabs isn't potentially suspicious, it *is* suspicious :D
2013-08-22 14:05:58 UTC <fryguybob> ACTION adds tabs to the list of things to erase from the world if he happens upon a time machine at some point.
2013-08-22 14:06:08 UTC <fryguybob> Don't worry, it is pretty far down the list.
2013-08-22 14:15:26 UTC <byorgey> hey raymank26, nice maze =)
2013-08-22 14:16:14 UTC <raymank26> byorgey: thanks! =)
2013-08-22 14:16:24 UTC <raymank26> i will show you some magic
2013-08-22 14:17:03 UTC <byorgey> =O
2013-08-22 14:17:14 UTC <byorgey> yes please
2013-08-22 14:17:37 UTC <raymank26> http://82.196.11.44/screens/1377181011.png it's how to replace Cell in a maze using Control.Lens as L
2013-08-22 14:17:41 UTC <raymank26> =)
2013-08-22 14:17:55 UTC <raymank26> beautiful
2013-08-22 14:18:14 UTC <byorgey> nice =D
2013-08-22 14:18:20 UTC <byorgey> ACTION <3 lens
2013-08-22 14:18:40 UTC <raymank26> it there some in-depth tutorial for lenses?
2013-08-22 14:19:59 UTC <raymank26> api references is so difficult :(
2013-08-22 14:20:12 UTC <byorgey> I recommend reading https://github.com/ekmett/lens#lens-lenses-folds-and-traversals and watching http://youtu.be/cefnmjtAolY?hd=1
2013-08-22 14:20:23 UTC <byorgey> and ask questions in #lens
2013-08-22 14:20:34 UTC <byorgey> I don't think there's really an in-depth tutorial
2013-08-22 14:21:11 UTC <byorgey> oh, and follow along the video with the slides http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf
2013-08-22 14:21:15 UTC <raymank26> purple links =)
2013-08-22 14:21:20 UTC <byorgey> hehe
2013-08-22 14:21:22 UTC <byorgey> ok
2013-08-22 14:21:51 UTC <raymank26> hm. Channel for lenses in freenode? Wow
2013-08-22 14:21:59 UTC <raymank26> thanks :)
2013-08-22 14:22:11 UTC <byorgey> I agree there is some missing documentation to fill in the gap between understanding the basics and being a lens ninja
2013-08-22 14:22:30 UTC <byorgey> I am currently struggling through that phase as well
2013-08-22 14:23:23 UTC <raymank26> Libs like lens is for haskell type ninja.
2013-08-22 14:23:28 UTC <notdan> I think it's #haskell-lens though
2013-08-22 14:23:30 UTC <luite> hehe i think everyone is somewhere in that gap
2013-08-22 14:24:19 UTC <raymank26> but not lens developer :D
2013-08-22 14:25:15 UTC <byorgey> oh, right, #haskell-lens
2013-08-22 14:25:17 UTC <luite> well, even edwardk said that he tends to forget how they work, and many of them were originally built with lots of help from ghci
2013-08-22 14:25:39 UTC <notdan> just play around until the types match
2013-08-22 14:25:48 UTC <raymank26> hard way :D
2013-08-22 14:25:50 UTC <byorgey> right, but the error messages are usually impossible to understand
2013-08-22 14:26:18 UTC <raymank26> yes, haskell error messages is the most confusing part of the ghc
2013-08-22 14:26:35 UTC <byorgey> no, GHC's error messages are actually quite nice!
2013-08-22 14:26:38 UTC <luite> yeah i guess he's seen so many of them that he can pattern match a bit more efficienlty :)
2013-08-22 14:27:03 UTC <byorgey> the problem is with EDSLs like diagrams and lens, the type error messages rarely tell you much about what is actually wrong
2013-08-22 14:27:15 UTC <byorgey> but that's not really GHC's fault.
2013-08-22 14:27:31 UTC <raymank26> okey :(
2013-08-22 14:27:49 UTC <byorgey> at some point in the future (read: after I finish my PhD) I may pick up scriptable error messages for EDSLs as a research topic
2013-08-22 14:27:56 UTC <raymank26> hm.. today all links to github either 404 or 500.
2013-08-22 14:28:09 UTC <byorgey> works ok for me
2013-08-22 14:28:25 UTC <raymank26> http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf i get 404
2013-08-22 14:29:17 UTC <byorgey> oh, comonad.com has been down for a while I think
2013-08-22 14:29:40 UTC <raymank26> "There isn't a GitHub Page here." hmm
2013-08-22 14:29:41 UTC <byorgey> try kmett.com in place of comonad.com
2013-08-22 14:30:03 UTC <raymank26> yep, it works
2013-08-22 14:30:19 UTC <raymank26> wow, slides from lecture
2013-08-22 14:31:02 UTC <fryguybob> byorgey: Scriptable error messages for EDSLs is a very interesting topic.
2013-08-22 14:32:00 UTC <raymank26> byorgey: I read your tutorials at fpcomplete. They are really good and understandable :)
2013-08-22 14:32:05 UTC <byorgey> fryguybob: indeed. There is one paper on it ("scripting the type inference process") about Helium, but of course Helium is dead and I haven't seen anything else on the topic since.
2013-08-22 14:32:09 UTC <byorgey> raymank26: great! thanks =)
2013-08-22 14:32:18 UTC <luite> there was a PhD position in utrecht for that earlier this year
2013-08-22 14:32:25 UTC <byorgey> oh? nice!
2013-08-22 14:32:57 UTC <fryguybob> byorgey: Ah, yeah Helium would be an interesting use.
2013-08-22 14:33:16 UTC <luite> https://www.academictransfer.com/employer/UU/vacancy/18688/lang/en/
2013-08-22 14:34:38 UTC <byorgey> oh, that's perfect
2013-08-22 14:34:42 UTC <byorgey> I hope they got someone good
2013-08-22 14:34:51 UTC <luite> be too, that's why i didn't apply ;)
2013-08-22 14:34:54 UTC <luite> me too
2013-08-22 14:35:00 UTC <byorgey> hehe
2013-08-22 14:36:06 UTC <byorgey> Jurriaan's home page says "this position has been filled"
2013-08-22 14:36:59 UTC <byorgey> I wonder if he will be at ICFP
2013-08-22 14:37:12 UTC <luite> ah
2013-08-22 14:37:30 UTC <luite> i have to admit that i don't really know anyone at the functional programming group in utrecht
2013-08-22 14:38:47 UTC <byorgey> oh, TFP will be in Utrecht next year
2013-08-22 14:39:25 UTC <byorgey> maybe I will see if I can go
2013-08-22 14:39:50 UTC <luite> oh cool
2013-08-22 14:40:36 UTC <luite> have you been to utrecht before?
2013-08-22 14:40:46 UTC <byorgey> nope
2013-08-22 14:41:02 UTC <byorgey> I have been to Amsterdam, Leiden, and Delft, but not Utrecht
2013-08-22 14:43:25 UTC <luite> ah it will still look somewhat familiar then (but the university is not in the historic city center)
2013-08-22 14:44:19 UTC <byorgey> right
2013-08-22 14:44:37 UTC <byorgey> but if I make it all the way to Utrecht I will spend some time in the historic city center whether the university is there or not =)
2013-08-22 14:47:57 UTC <luite> sure, the bus connection is good :)
2013-08-22 14:48:20 UTC <luite> (although a bit overloaded, there have been plans to construct a tram line instead, but those things take ages)
2013-08-22 14:49:04 UTC <luite> apparently it should be operational in 2018 now
2013-08-22 14:54:57 UTC <byorgey> hehe, of course =)
2013-08-22 14:58:53 UTC <fryguybob> California will have the hyperloop by then :P
2013-08-22 15:00:52 UTC <luite> hehe, we have a semi-highspeed railway in nl, that should've started operation early this year (actually a few years earlier), but it appeared that the cheaper (unproven) italian trains they bought are extremely unreliable, so they've only run them for a week or so
2013-08-22 15:03:14 UTC <luite> they've already lost so much now that they could've bought the expensive siemens or alstom high speed trains instead... and they knew about the problems all along
2013-08-22 15:04:10 UTC <luite> so i guess public transport projects fail everywhere :)
2013-08-22 15:06:54 UTC <fryguybob> Hardware is too hard.  I'll stick with software.
2013-08-22 15:07:29 UTC <fryguybob> At least with software you sometimes have the illusion that it isn't hard.
2013-08-22 15:07:34 UTC <luite> well software projects also fail all the time, and it puzzles me why :)
2013-08-22 15:08:44 UTC <luite> some police document management system here that cost $20M was scrapped here because it's a failuer... and it wasn't even that complex (of course they find ways to make simple projects complex, especially the large government contractors)
2013-08-22 15:09:09 UTC <luite> still a lot cheaper than the $200M for the trains i guess :)
2013-08-22 15:09:52 UTC <luite> (and they still have no high speed service, so i guess this is not the end of those losses)
2013-08-22 15:09:59 UTC <fryguybob> Yeah.  Even existing software that works is too much for some people.  Rebekah is having a hard time getting people to use a shared google drive to colaborate on a document.
2013-08-22 15:10:16 UTC <fryguybob> She keeps getting emails "Attached is a pdf of my changes"...
2013-08-22 15:12:43 UTC <luite> hmm
2013-08-22 15:19:28 UTC <notdan> http://co-dan.github.io/ghcjs/diagrams-ghcjs-tests/Main.jsexe/ diagrams-ghcjs progress so far
2013-08-22 15:19:37 UTC <luite> i have to admit that i've never used google docs very seriously for collaboration so far :)
2013-08-22 15:19:50 UTC <luite> latex + git seems to work, but might be a hard sell to some people ;)
2013-08-22 15:19:58 UTC <notdan> It looks like I broke the path rendering thought
2013-08-22 15:27:51 UTC <byorgey> notdan: excellent progress!  looks like you are only missing (1) dashing (2) EvenOdd fill rule (3) clipping and (4) avoid setting a fill attribute when stroking lines (not loops)
2013-08-22 15:28:44 UTC <luite> notdan: cool work :) looks like the optimizer does a reasonable job too, although diagrams is still lots of functions
2013-08-22 15:33:24 UTC <notdan> hm, is FillRule an attribute?
2013-08-22 15:36:07 UTC <notdan> e.g. am I supposed to update it in the Backend.withStyle function?
2013-08-22 15:42:19 UTC <notdan> Is there a comprehensive list of attributes that backend should implement?
2013-08-22 15:42:40 UTC <luite> oh hmm, i originally adapted it from the canvas backend i think
2013-08-22 15:42:51 UTC <luite> perhaps you can use the svg backend as reference for the missing things
2013-08-22 15:44:50 UTC <byorgey> notdan: FillRule is an attribute, yes
2013-08-22 15:47:15 UTC <notdan> luite: oh, good idea
2013-08-22 16:04:25 UTC <travis-ci> [travis-ci] 13diagrams-builder/06builder-0.4 14215f2d3 http://travis-ci.org/diagrams/diagrams-builder/builds/10500722 The build passed.
2013-08-22 16:04:57 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14d4d94f2 http://travis-ci.org/diagrams/diagrams-builder/builds/10500724 The build passed.
2013-08-22 16:35:42 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14ae7dc5f http://travis-ci.org/diagrams/diagrams-builder/builds/10502071 The build passed.
2013-08-22 16:44:25 UTC <kuribas> Is there a good package to calculate the inverse of a transformation?
2013-08-22 16:44:37 UTC <kuribas> (An affine transformation)
2013-08-22 16:46:49 UTC <byorgey> kuribas: you might be able to use  http://hackage.haskell.org/package/bed-and-breakfast
2013-08-22 16:46:54 UTC <byorgey> I haven't used it but it looks nice
2013-08-22 16:47:23 UTC <kuribas> ok
2013-08-22 16:47:27 UTC <byorgey> I don't think it does affine transformations explicitly but really the crux of the matter is finding inverse matrices
2013-08-22 16:47:36 UTC <kuribas> yes
2013-08-22 16:48:18 UTC <carter> byorgey kuribas  don't like the bed and breakfast design 
2013-08-22 16:48:19 UTC <carter> :)
2013-08-22 16:48:33 UTC <carter> kuribas: rationals or floats or doubles?
2013-08-22 16:48:47 UTC <kuribas> doubles
2013-08-22 16:48:57 UTC <carter> what size?
2013-08-22 16:49:04 UTC <kuribas> 2D
2013-08-22 16:49:08 UTC <carter> kuribas: also, linear is perhaps worth checking out then :)
2013-08-22 16:49:14 UTC <kuribas> 3x3
2013-08-22 16:49:18 UTC <carter> linear is optimized for 2/3d
2013-08-22 16:49:24 UTC <carter> @hackage linear
2013-08-22 16:49:24 UTC <lambdabot> http://hackage.haskell.org/package/linear
2013-08-22 16:49:34 UTC <byorgey> ah, didn't realize linear does matrix inverse
2013-08-22 16:49:35 UTC <byorgey> nice
2013-08-22 16:49:37 UTC <carter> http://hackage.haskell.org/packages/archive/linear/1.2/doc/html/Linear-Matrix.html
2013-08-22 16:49:40 UTC <carter> yeah
2013-08-22 16:49:57 UTC <carter> bed and breakfast is meant for general purpose
2013-08-22 16:50:05 UTC <byorgey> right
2013-08-22 16:50:20 UTC <carter> but it has weird design decisions that make it bad for general purpose
2013-08-22 16:50:41 UTC <carter> like, the memory layout for matrices it uses will result in ~ 1000x slow down 
2013-08-22 16:50:44 UTC <carter> or worse
2013-08-22 16:51:06 UTC <carter> or at least thats the gap between c that uses the bad layouts and C or haskell with the good layouts
2013-08-22 16:52:57 UTC <kuribas> It's a large depency...  Maybe it's better if I code something up myself?
2013-08-22 16:53:14 UTC <carter> kuribas what are you working on?
2013-08-22 16:53:17 UTC <byorgey> if you're just inverting 2x2 matrices it's easy enough to code yourself
2013-08-22 16:53:20 UTC <carter> yeah
2013-08-22 16:53:27 UTC <carter> but any more
2013-08-22 16:53:57 UTC <kuribas> carter: https://github.com/kuribas/cubicbezier
2013-08-22 17:14:56 UTC <ClaudiusMaximus> @hackage Vec is what i use for small matrices
2013-08-22 17:14:56 UTC <lambdabot> http://hackage.haskell.org/package/Vec is what i use for small matrices
2013-08-22 17:18:21 UTC <kuribas> hm, I already hardcoded it.
2013-08-22 17:47:05 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06dia-haddock-0.1 149695c37 http://travis-ci.org/diagrams/diagrams-haddock/builds/10504987 The build has errored.
2013-08-22 17:47:20 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14967b0e2 http://travis-ci.org/diagrams/diagrams-haddock/builds/10504989 The build has errored.
2013-08-22 18:00:09 UTC <kuribas> Any criticism of my geometry base?  https://github.com/kuribas/cubicbezier/blob/master/Geom2D.hs
2013-08-22 18:00:40 UTC <byorgey> kuribas: just headed out now, but I can take a look at it in an hour or so
2013-08-22 18:01:40 UTC <kuribas> ok :)
2013-08-22 18:02:31 UTC <kuribas> I have been wondering if they are not too general for my bezier library...  Or not general enough for a 2D geometry library.
2013-08-22 18:17:52 UTC <bergey> Why did you decide not to use vector-space?
2013-08-22 18:36:46 UTC <notdan> Hm, so, if I understand this AttributeClass thing correctly, there is no way for me two get two parameters simultaneously, right?
2013-08-22 18:39:35 UTC <fryguybob> notdan: That sounds right, but you can make multiple appeals to getAttr
2013-08-22 18:48:02 UTC <notdan> fryguybob: oh, I'll try that
2013-08-22 18:48:06 UTC <notdan> thx
2013-08-22 19:18:21 UTC <byorgey> bergey: presumably becayse vector-space doesn't do inverses.
2013-08-22 19:18:24 UTC <byorgey> *because
2013-08-22 19:25:18 UTC <bergey> Good point.  I think it's very reasonable to use explicit matrices for transforms.  I was surprised that vector-space instances aren't defined on Point, especially since the operators have the same names as those in vector-space.
2013-08-22 19:25:39 UTC <carter> inverses aren't always stable....
2013-08-22 19:27:01 UTC <bergey> I assume the answer is "Complicated types are deterring new users", but I was curious.
2013-08-22 19:57:53 UTC <byorgey> oh dang, cubicSpline was implicitly depending on that Num R2 instance
2013-08-22 19:58:06 UTC <byorgey> it *compiles* fine without the instance, you just can't *use* it at all =P
2013-08-22 19:58:22 UTC <byorgey> welp, I guess I'll add the instance back for now
2013-08-22 20:11:18 UTC <luite> yuck :p
2013-08-22 20:12:25 UTC <byorgey> currently trying to build the Haddock docs to put on the website
2013-08-22 20:13:21 UTC <byorgey> it's so annoying.  All versions of everything used to build everything else must match up just so, otherwise you get various incompatibilities
2013-08-22 20:14:54 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1458a2d65 http://travis-ci.org/diagrams/diagrams-lib/builds/10510428 The build passed.
2013-08-22 20:16:47 UTC <byorgey> there, I think it's finally building properly
2013-08-22 20:29:52 UTC <fryguybob> byorgey: my fault again :(
2013-08-22 20:30:50 UTC <byorgey> fryguybob: don't worry about it, I don't think it's worth it at this point =)
2013-08-22 20:31:08 UTC <byorgey> also: http://projects.haskell.org/diagrams/haddock/index.html  \o/
2013-08-22 20:32:32 UTC <fryguybob> byorgey: Excellent!
2013-08-22 20:44:52 UTC <byorgey> http://www.cis.upenn.edu/~byorgey/hosted/diagrams-graph.svg  -- a graph of diagrams packages and their dependencies
2013-08-22 20:45:25 UTC <luite> i prefer the arrows the other way :)
2013-08-22 20:46:40 UTC <carter> cool diagram of diagrams!
2013-08-22 20:46:40 UTC <notdan> byorgey: soon you will able to add diagrams-pdf and diagrams-ghcjs to that list :D (hopefully)
2013-08-22 20:46:42 UTC <carter> its a metadiagram
2013-08-22 20:46:49 UTC <byorgey> notdan: yes!
2013-08-22 20:46:52 UTC <carter> notdan: 'cause hpdf will be bsd'd soon?
2013-08-22 20:47:10 UTC <byorgey> carter: unfortunately, I did not make it with diagrams
2013-08-22 20:47:17 UTC <carter> oh
2013-08-22 20:47:18 UTC <carter> darn
2013-08-22 20:47:26 UTC <carter> @hackage diagrams-pdf
2013-08-22 20:47:26 UTC <lambdabot> http://hackage.haskell.org/package/diagrams-pdf
2013-08-22 20:47:34 UTC <byorgey> because we still suck at drawing arrows (but martingale is working on that =)
2013-08-22 20:47:44 UTC <carter> right now http://hackage.haskell.org/package/HPDF-1.4.5 is LGPL
2013-08-22 20:47:53 UTC <carter> but the author is going to fix that
2013-08-22 20:47:54 UTC <carter> :)
2013-08-22 20:49:02 UTC <byorgey> I feel like I should put this graph on the website somewhere, but I'm not sure where it should go
2013-08-22 20:49:05 UTC <byorgey> suggestions welcome
2013-08-22 20:49:21 UTC <byorgey> maybe I should just stick it on the developer wiki
2013-08-22 20:49:35 UTC <fryguybob> byorgey: I still need to fix my curvature digrams-haddock.
2013-08-22 20:49:59 UTC <byorgey> oh, is it broken?
2013-08-22 20:50:44 UTC <byorgey> http://projects.haskell.org/diagrams/haddock/Diagrams-TwoD-Curvature.html  -- looks OK to me
2013-08-22 21:02:35 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 144e47bc1 http://travis-ci.org/diagrams/diagrams-doc/builds/10511034 The build has errored.
2013-08-22 21:18:10 UTC <fryguybob> byorgey: The "approaches zero curvature" is passed zero...
2013-08-22 21:18:33 UTC <byorgey> oh =)
2013-08-22 21:32:15 UTC <notdan> http://co-dan.github.io/ghcjs/interactive/example1/Test.jsexe/ my first interactive mock-up
2013-08-22 21:32:36 UTC <notdan> the code is very messy though
2013-08-22 21:32:53 UTC <notdan> and to implement full-featured "wizards" I'd probably need something like continuations
2013-08-22 21:33:41 UTC <notdan> currrently diagrams-ghcjs renders those factorizations diagrams OK, I still haven't figured how to render text and do clipping properly though
2013-08-22 21:34:16 UTC <notdan> oh, and OddEven fill style is currently supported only for Firefox's Canvas, if I understood everything correctly
2013-08-22 21:36:06 UTC <luite> oh it seems a bit flaky, took me a few tries to get it working
2013-08-22 21:36:31 UTC <luite> oh wait, no, just 2 args :)
2013-08-22 21:37:12 UTC <luite> so eh, not a speed demon ;)
2013-08-22 21:38:08 UTC <notdan> heh :] As you can see in Test.hs, you can 'render' any functions, which result I can output and which argument you can enter (only Integers and Strings atm)
2013-08-22 21:38:30 UTC <byorgey> what am I supposed to do for the factorDiagram thing?
2013-08-22 21:38:42 UTC <byorgey> I entered f 2 3 into the box and clicked Next but nothing happend
2013-08-22 21:38:46 UTC <notdan> Input two numbers, x and y
2013-08-22 21:38:58 UTC <notdan> ah
2013-08-22 21:38:58 UTC <byorgey> oh, just the numbers
2013-08-22 21:39:13 UTC <notdan> you have to enter the first number, then press "next", then input another number
2013-08-22 21:39:17 UTC <byorgey> ohhh
2013-08-22 21:39:21 UTC <byorgey> I see =)
2013-08-22 21:39:37 UTC <notdan> sorry, it's not user-friendly, it's just a very alpha prototype :)
2013-08-22 21:39:40 UTC <luite> chrome is a bit faster it seems :)
2013-08-22 21:39:49 UTC <luite> it's cool that it works though
2013-08-22 21:39:54 UTC <byorgey> notdan: yeah, no worries, I just wanted to try it out =)
2013-08-22 21:40:06 UTC <byorgey> nifty =)
2013-08-22 21:40:11 UTC <luite> i'll try to help optimize it a bit later
2013-08-22 21:40:25 UTC <notdan> If you enter '0' and '1' thought it is almost instant
2013-08-22 21:40:30 UTC <luite> currently a bit stressed because suddenly the ghc and cabal patches need to be merged really soon now
2013-08-22 21:40:51 UTC <luite> cabal is probably already too late and spj is not keen on the hooks thing i submitted :(
2013-08-22 21:41:27 UTC <notdan> oh :( he doesn't want to merge your hooks into the ghc tree?
2013-08-22 21:42:05 UTC <luite> dunno, i've uploaded a new example, indicating that they also implement Edsko's and Thomas' things
2013-08-22 21:42:49 UTC <luite> would be rather bad if it wasn't merged
2013-08-22 21:50:28 UTC <notdan> i hope it will be merged in. maybe spj just didn't read/replied to your proposal
2013-08-22 22:01:55 UTC <luite> notdan: yeah he hadn't read it, because he thought that there were 3 different proposals
2013-08-22 22:03:14 UTC <luite> but nominolo's is not really a concrete one
2013-08-22 22:03:30 UTC <luite> more a wish for some features, and Edsko's can be done more generally with this
2013-08-22 22:03:51 UTC <luite> but my priority is cabal now
2013-08-22 22:03:55 UTC <luite> just talked to tibbe
2013-08-22 22:04:02 UTC <luite> who wants to release 1.18 asap
2013-08-22 22:04:24 UTC <luite> when Mikhail gives green light he will branch from master again
2013-08-22 22:04:32 UTC <luite> and not hold up the release for GHCJS
2013-08-22 22:05:07 UTC <luite> which is a tad annoying, but i think his vacation is coming to an end and he wants to release before being swamped in real work again
2013-08-22 22:06:04 UTC <luite> so i'm going to perpare two patches now, hopefully ready tomorrow, one only adds GHCJS to the public API, without implementation, so it breaks nothing, and we can add real support in 1.18.1 without changing anything, perhaps get that shipped with GHC
2013-08-22 22:06:18 UTC <luite> the other one is the full patch and hopefully someone has time to review
2013-08-22 22:06:44 UTC <luite> so, busy night coming up, i't better make a few pots of coffee
2013-08-22 22:11:11 UTC <luite> only thing is that i'm not sure how we're going to install executables with ghcjs
2013-08-22 22:11:20 UTC <luite> and it needs to be in the patch by tomorrow of course
2013-08-22 22:11:33 UTC <luite> so i'm thing to just let cabal call ghcjs with --install-executable
2013-08-22 22:11:42 UTC <luite> so we can decide later how to do it
2013-08-22 22:12:01 UTC <luite> libraries seem fine, have been working stable for a while now
2013-08-22 23:00:52 UTC <fryguybob> luite: Good luck!
2013-08-22 23:00:58 UTC <luite> :)
2013-08-23 00:38:22 UTC <byorgey> go ghcjs go!
2013-08-23 00:40:59 UTC <byorgey> ACTION hacks on active
2013-08-23 01:47:54 UTC <travis-ci> [travis-ci] 13active/06new-semantics 141499aa6 http://travis-ci.org/diagrams/active/builds/10520053 The build has errored.
2013-08-23 06:53:48 UTC <notdan> ACTION brews some coffee with milk for luite and other hackers
2013-08-23 08:54:39 UTC <jbracker> If I use fixPath it delivers a list of trails right?
2013-08-23 10:50:53 UTC <kuribas> Is a non-invertable affine transformation always a projection on a line or point?
2013-08-23 10:53:06 UTC <kuribas> I can use the offset curve to stroke a path with a unit circle.  So for stroking elipses I would apply the inverse transformation on the bezier, stroke with a circle, and transform again.  If the transformation is non-invertible, I could use a polygon?
2013-08-23 10:54:32 UTC <kuribas> I also think that stroking a path using a general closed path might not be much different than stroking with a polygon.
2013-08-23 10:55:22 UTC <kuribas> (If that's useful at all)
2013-08-23 11:12:04 UTC <byorgey> kuribas: yes, I think a non-invertible affine transformation is always a projection
2013-08-23 11:12:16 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1416511d8 http://travis-ci.org/diagrams/diagrams-lib/builds/10532654 The build passed.
2013-08-23 11:12:17 UTC <kuribas> ok
2013-08-23 11:12:34 UTC <kuribas> Then my algorihm should work.
2013-08-23 11:12:47 UTC <byorgey> great =)
2013-08-23 11:13:47 UTC <byorgey> last night while I was trying to go to sleep I had a crazy idea which is either super dumb or super awesome.
2013-08-23 11:14:37 UTC <kuribas> All great ideas start like that :Ã 
2013-08-23 11:14:47 UTC <kuribas> :)
2013-08-23 11:15:08 UTC <kuribas> The ones that aren't proven wrong.
2013-08-23 11:15:12 UTC <byorgey> the basic idea is to incrementally hash diagram contents (using hash values from some semiring so we get a monoid + monoid action of hashes on hashes) so we can later do CSE
2013-08-23 11:15:16 UTC <byorgey> kuribas: indeed =)
2013-08-23 11:16:25 UTC <byorgey> It was so exciting that I had to get up and write it all down.  I will try to type it up soon so the rest of you can tell me how crazy it is.
2013-08-23 11:16:27 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 1483d5b8e http://travis-ci.org/diagrams/diagrams-contrib/builds/10532673 The build passed.
2013-08-23 11:42:02 UTC <kuribas> Wow, bezier clipping for finding an intersection from a line with a bezier is really fast!
2013-08-23 11:42:15 UTC <kuribas> And it can be used for polynomial root finding too.
2013-08-23 11:44:11 UTC <byorgey> kuribas: nice!
2013-08-23 11:45:50 UTC <kuribas> http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=854A88855B3F84884BA389036F6CE32A?doi=10.1.1.111.7872&rep=rep1&type=pdf
2013-08-23 11:46:53 UTC <kuribas> I found 14 digits of accuracy with 4 iterations. 
2013-08-23 11:49:01 UTC <byorgey> wow, nice
2013-08-23 11:49:14 UTC <byorgey> both the link and the accuracy.
2013-08-23 12:17:22 UTC <notdan> http://co-dan.github.io/ghcjs/diagrams-ghcjs-tests/Main.jsexe/ ok, almost everything works now
2013-08-23 12:17:25 UTC <notdan> except for text
2013-08-23 12:45:28 UTC <byorgey> =D
2013-08-23 12:45:37 UTC <byorgey> and really, who cares about text
2013-08-23 12:46:09 UTC <byorgey> text is a crutch for when you can't think of a good way to express yourself using a diagram ;)
2013-08-23 13:02:51 UTC <fryguybob> haha -- good morning/afternoon/evening all
2013-08-23 13:24:16 UTC <byorgey> good morning fryguybob!
2013-08-23 13:26:16 UTC <fryguybob> kuribas: What is the title of that paper, the link isn't working for me right now.
2013-08-23 13:33:55 UTC <fryguybob> ACTION attempts to use Chart-diagrams
2013-08-23 13:47:45 UTC <kuribas> fryguybob: computer aided geometric design by Sederberg
2013-08-23 13:59:50 UTC <fryguybob> kuribas: Thanks, found it.
2013-08-23 14:02:45 UTC <luite> bleh looks like i missed the deadline for cabal already
2013-08-23 14:04:51 UTC <fryguybob> :(
2013-08-23 14:05:46 UTC <luite> well there was no real deadline, but Mikhail already committed some stuff that allows them to release and they don't want to wait
2013-08-23 14:06:05 UTC <luite> grmblz
2013-08-23 14:24:36 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/plot100.pdf
2013-08-23 14:25:17 UTC <fryguybob> @tell jbracker Chart-diagrams is fun! http://www.cs.rochester.edu/u/ryates/temp/plot100.pdf
2013-08-23 14:25:17 UTC <lambdabot> Consider it noted.
2013-08-23 14:47:22 UTC <fryguybob> fryguybob: I see why you were confused about having state in the Postscript backend.  It is one level down, in the Render type.  So this fix isn't the cleanest, but it works.  It might be better when I finish some code that avoids emitting unneeded code.
2013-08-23 14:49:34 UTC <luite> luite: ah i see
2013-08-23 14:54:07 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 141847a2c http://travis-ci.org/diagrams/diagrams-postscript/builds/10539351 The build passed.
2013-08-23 14:55:19 UTC <fryguybob> luite: :D that was of course supposed to be byorgey.  For a second I thought lack of sleep was getting to you, but it appears that it was getting to me!
2013-08-23 17:00:30 UTC <byorgey> luite: what about the GHC patches?
2013-08-23 17:01:08 UTC <byorgey> luite: they will apparently be putting out Cabal releases much more frequently now
2013-08-23 17:01:25 UTC <luite> yeah they also said that about GHC half a year ago
2013-08-23 17:01:48 UTC <byorgey> no, I think there was just a very long *discussion* about it for GHC.
2013-08-23 17:01:55 UTC <byorgey> I actually believe it for Cabal.
2013-08-23 17:04:44 UTC <alpounet> i've seen what byorgey's talking about mentionned a couple of times too
2013-08-23 17:04:54 UTC <luite> it is easier to upgrade Cabal, but it still requires upgrading cabal-install, not ideal for haskell platform users
2013-08-23 17:04:57 UTC <alpounet> don't remember exactly where but that's going to happen, most likely
2013-08-23 17:05:16 UTC <byorgey> luite: true, but it's still an order of magnitude easier than building GHC HEAD =)
2013-08-23 17:05:34 UTC <alpounet> for GHC well the GHC dev team has to settle a bit before major changes like that can happen, I think
2013-08-23 17:05:55 UTC <luite> byorgey: for the GHC patch i'm still waiting for feedback from nominolo and edsko
2013-08-23 17:06:03 UTC <byorgey> OK
2013-08-23 17:10:49 UTC <luite> but i don't want to let it sit for a week without responses
2013-08-23 18:06:19 UTC <notdan> luite: that sucks, but I guess it wouldn't be awful if you can get necessary changes into the next cabal version. Updating cabal-install is just 'cabal install cabal-install ghcjs'
2013-08-23 18:07:04 UTC <notdan> and about GHC, I think SPJ mentioned that your case is exceptional and I got the idea that he wants to merge your stuff
2013-08-23 18:13:35 UTC <luite> notdan: yeah but he doesn't know yet that it depends on hooks, and that there are not really multiple conflicting proposals for those
2013-08-23 18:22:20 UTC <haasn> byorgey: would it be possible to place a diagram at every point where two other diagrams intersect?
2013-08-23 18:22:38 UTC <haasn> say I have two circles that intersect eachother, and I want a square at both intersections
2013-08-23 18:23:00 UTC <byorgey> haasn: we don't yet have any way to compute intersections of paths
2013-08-23 18:23:17 UTC <byorgey> however, there is no reason we can't, and I hope we will soon, especially given the work kuribas has been doing
2013-08-23 18:28:03 UTC <haasn> oh, okay
2013-08-23 18:30:53 UTC <haasn> any workaround I could use in the meantime? I'm trying to generate a diagram that's based on iterating a transformation; the initial state is two overlapping circles and the transformation places a new circle at every intersection
2013-08-23 18:31:56 UTC <fryguybob> byorgey: Do you want heptagon exported from Diagrams.TwoD?  Right now only septagon is so Diagrams.Prelude doesn't export it.
2013-08-23 18:32:08 UTC <byorgey> fryguybob: whoops, yes
2013-08-23 18:32:14 UTC <fryguybob> ok, I'll change it
2013-08-23 18:32:18 UTC <byorgey> thanks
2013-08-23 18:32:20 UTC <fryguybob> (add it)
2013-08-23 18:32:36 UTC <byorgey> haasn: the workaround is to work out some trig on a piece of paper and hard code it into your program =P
2013-08-23 18:32:40 UTC <ClaudiusMaximus> haasn: i have some compass-and-straightedge stuff that i could push somewhere if you need it, not very clean yet though - used it for this http://mathr.co.uk/blog/2013-04-26_fish_variations.html
2013-08-23 18:33:02 UTC <haasn> ClaudiusMaximus: that might come in handy
2013-08-23 18:34:43 UTC <byorgey> haasn: given the distance between circle centers and the two radii, you can use the Law of Sines to work out the angles, and hence the positions of the intersection points
2013-08-23 18:35:23 UTC <byorgey> wait, actually, I guess the Law of Cosines is more appropriate
2013-08-23 18:35:26 UTC <haasn> byorgey: I'm mainly looking for a beautiful declarative approach. I don't really care about the problem itself, just wanted to see if this was possibly in an elegant way using diagrams
2013-08-23 18:35:41 UTC <byorgey> haasn: ok, fair enough. =)
2013-08-23 18:35:48 UTC <carter> notdan i chimed in agreeing with you
2013-08-23 18:35:50 UTC <carter> :)
2013-08-23 18:35:55 UTC <haasn> ClaudiusMaximus: oh, but this is 2d only yes?
2013-08-23 18:36:05 UTC <byorgey> haasn: so to reiterate, the answer is that it *should* be possible, and *will* be, but *isn't* yet =)
2013-08-23 18:37:20 UTC <haasn> oh, come to think of it, that's not quite the problem I wanted to solve, either
2013-08-23 18:37:33 UTC <byorgey> ah =)
2013-08-23 18:37:39 UTC <byorgey> so what IS the problem you wanted to solve?
2013-08-23 18:37:59 UTC <haasn> I only want to add new circles on the *outermost* intersections; the whole pattern grows outwards with each iteration
2013-08-23 18:38:03 UTC <haasn> http://sadpanda.us/images/1810656-BXBI8VX.jpg
2013-08-23 18:38:06 UTC <haasn> think something like this
2013-08-23 18:38:46 UTC <haasn> that would be after 4-5 iterations
2013-08-23 18:39:16 UTC <haasn> I think..
2013-08-23 18:39:22 UTC <byorgey> oh, I see
2013-08-23 18:39:25 UTC <ClaudiusMaximus> haasn: https://gitorious.org/maximus/compass
2013-08-23 18:39:44 UTC <haasn> upon yet further inspection it seems that every intersection already has a circle around it either way
2013-08-23 18:40:04 UTC <byorgey> haasn: that looks to me like a bunch of circles all of the same size, arranged at the points of a triangular grid
2013-08-23 18:40:06 UTC <haasn> oh yes, this makes sense
2013-08-23 18:40:22 UTC <byorgey> so there's no need to compute intersection points
2013-08-23 18:40:22 UTC <haasn> byorgey: yeah that makes sense too
2013-08-23 18:42:33 UTC <haasn> I wonder though how this generalizes into n dimensions
2013-08-23 18:42:40 UTC <haasn> the ultimate goal is to move from a 2d solution to a 3d solution
2013-08-23 18:43:07 UTC <haasn> some kind of pyramid-like arrangement?
2013-08-23 18:44:04 UTC <notdan> carter: awesome :]
2013-08-23 18:44:33 UTC <byorgey> haasn: well, regular tetrahedra do not tile 3D space, so there is no direct analogue
2013-08-23 18:44:55 UTC <haasn> oh
2013-08-23 18:44:57 UTC <ClaudiusMaximus> *flat 3D space
2013-08-23 18:45:48 UTC <ClaudiusMaximus> though, not sure if they tile curved spaces either - Coxeter probably has a book about it
2013-08-23 18:45:55 UTC <byorgey> ClaudiusMaximus: can it in hyperbolic space? ... ok
2013-08-23 18:46:14 UTC <byorgey> haasn: http://mathworld.wolfram.com/Space-FillingPolyhedron.html
2013-08-23 18:46:27 UTC <byorgey> arrange the sphere circles at the vertices of one of those =)
2013-08-23 18:46:40 UTC <ClaudiusMaximus> haasn: crystallography seems relevant too
2013-08-23 18:48:18 UTC <haasn> byorgey: neat
2013-08-23 18:49:26 UTC <notdan> ClaudiusMaximus: the video link is this post is broken: http://mathr.co.uk/blog/2012-01-12_gearbox.html
2013-08-23 18:50:13 UTC <haasn> ClaudiusMaximus: ah, saw your project source now. neat!
2013-08-23 18:52:47 UTC <notdan> So, I've updated the interactive facilities for the interactive-diagrams. http://co-dan.github.io/ghcjs/interactive/example1/Test.jsexe/ it should be faster and it also features a wizard-like interface, where you can go back and forth, powered by the ContT monad
2013-08-23 18:53:00 UTC <ClaudiusMaximus> notdan: ah, yes - need to reupload some stuff since my blog switched domain and server...
2013-08-23 18:53:19 UTC <notdan> I tried to do it with delimited continuations, but failed miserably..
2013-08-23 18:53:34 UTC <notdan> you have to be Oleg to understand this stuff I guess
2013-08-23 18:53:50 UTC <byorgey> haasn: http://paste.hskll.org/get/336  =)
2013-08-23 18:54:42 UTC <notdan> @ty position
2013-08-23 18:54:43 UTC <lambdabot> Not in scope: `position'
2013-08-23 18:55:13 UTC <haasn> ooh, is that the pretty diagrams pastebin from gsoc
2013-08-23 18:55:28 UTC <byorgey> notdan: cool!
2013-08-23 18:55:33 UTC <byorgey> haasn: yep, notdan made it =)
2013-08-23 18:55:39 UTC <ClaudiusMaximus> byorgey: so you can tile spherical space, not sure about hyperbolic though  http://www.math.niu.edu/~rusin/known-math/99/600cell
2013-08-23 18:56:05 UTC <byorgey> ClaudiusMaximus: oh, nice
2013-08-23 18:56:28 UTC <byorgey> notdan: position :: (Monoid a, Semigroup a, HasOrigin a) => [(Point (V a), a)] -> a
2013-08-23 18:56:50 UTC <byorgey> hmm, someone should get a version of lambdabot running in here with diagrams stuff in scope
2013-08-23 18:58:16 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14c988c5d http://travis-ci.org/diagrams/diagrams-lib/builds/10548903 The build passed.
2013-08-23 18:58:48 UTC <byorgey> notdan: the link to the diagrams tutorial at the bottom of paste.hskell.org is out of date, it should be http://projects.haskell.org/diagrams/doc/quickstart.html
2013-08-23 19:00:08 UTC <ClaudiusMaximus> byorgey: how about filling the whole thing with even/odd fill rule?
2013-08-23 19:00:25 UTC <notdan> oh I haven't updated the version on the server for a while
2013-08-23 19:01:49 UTC <byorgey> ClaudiusMaximus: http://paste.hskll.org/get/338
2013-08-23 19:01:56 UTC <byorgey> cool =)
2013-08-23 19:02:52 UTC <notdan> updated
2013-08-23 19:05:06 UTC <byorgey> great, thanks =)
2013-08-23 19:07:59 UTC <ClaudiusMaximus> nice :)
2013-08-23 19:11:24 UTC <byorgey> notdan: also, I really think the picture ought to be *above* the code.  When I visit http://paste.hskll.org/get/nnn  I want to *first* see the diagram, and *then* see how it is implemented.
2013-08-23 19:11:30 UTC <byorgey> though perhaps others will disagree with me.
2013-08-23 19:15:49 UTC <notdan> I thought about this for a while. It makes sense for diagrams, but I am not so sure about other code.
2013-08-23 19:16:06 UTC <byorgey> oh, that's true
2013-08-23 19:16:32 UTC <martingale> I'd like to be able to align diagrams et al by trace if it exists and default back to envelope if it doesn't. Do I need to create a new module and class say "snug" or can I add the functionality to Align with an optional parameter (trace or envelope)
2013-08-23 19:17:06 UTC <martingale> i.e is there a way to test if an object is Traced?
2013-08-23 19:17:15 UTC <byorgey> notdan: I forgot it can show results of more general evaluations
2013-08-23 19:17:54 UTC <byorgey> martingale: what do you mean, if the trace doesn't exist?  Every diagram has a trace.  Or do you mean if the trace is empty?
2013-08-23 19:19:01 UTC <martingale> I mean not only diagrams, other things that are Alignable
2013-08-23 19:19:39 UTC <byorgey> martingale: ah.  No, there is no way to branch on the presence or absence of instances.
2013-08-23 19:20:14 UTC <martingale> So do you think a Snug  and TwoD.Snug would be useful?
2013-08-23 19:20:46 UTC <byorgey> martingale: It sounds reasonable.  I don't have a good sense of whether it would be useful.
2013-08-23 19:21:30 UTC <byorgey> martingale: e.g. we do something similar for Juxtaposable, where there is a function called 'juxtaposeDefault' which can be used to implement juxtapose for Enveloped things
2013-08-23 19:21:48 UTC <byorgey> but for non-Enveloped things you can just implement juxtapose directly
2013-08-23 19:22:26 UTC <byorgey> martingale: which things are Enveloped but not Traced?
2013-08-23 19:25:36 UTC <martingale> byorgey: I don't know, but I've needed to align arrow heads and tails which are not convex and wanted to have alignL and alingR that worked with the trace
2013-08-23 19:26:15 UTC <martingale> byorgey: Of course it's not hard to do with the existing tools but I thought maybe we should generalize
2013-08-23 19:26:50 UTC <byorgey> wanting versions of alignL and alignR that work with trace instead of envelope makes sense
2013-08-23 19:27:21 UTC <byorgey> maybe we should just add some generic tools like that, but specific to Traced?
2013-08-23 19:27:37 UTC <martingale> byorgey: Yes, that's what I had in mind
2013-08-23 19:27:40 UTC <byorgey> I don't (yet) see the value of generalizing as far as using Traced and falling back to Enveloped
2013-08-23 19:28:11 UTC <martingale> byorgey: That's fine I can skip the "falling back to envelope part" and just build the tools for Traced
2013-08-23 19:28:21 UTC <byorgey> ok, let's do that for now
2013-08-23 19:28:35 UTC <martingale> byorgey: can you think of a better name to parallel align than snug?
2013-08-23 19:28:35 UTC <byorgey> we can always generalize further if it turns out to be useful later
2013-08-23 19:28:54 UTC <byorgey> snug sounds like a good name to me.
2013-08-23 19:29:14 UTC <martingale> byorgey: Snug it is.
2013-08-23 19:29:55 UTC <martingale> byorgey: when you have some time play with arrowtest.hs. I linked it in the email
2013-08-23 19:30:05 UTC <byorgey> martingale: will do!
2013-08-23 20:12:40 UTC <luite> notdan: i think it should only display the diagram above the code if it's prettier than the code ;)
2013-08-23 20:13:46 UTC <byorgey> hmm, is prettiness a monoid?  We could cache a prettiness value for each diagram... ;)
2013-08-23 20:17:31 UTC <haasn> the prettiness of a combination of diagrams is only as great as the ugliest element
2013-08-23 20:17:47 UTC <notdan> heh :)
2013-08-23 20:17:55 UTC <haasn> this being a monoid implies having some diagrams that is infinitely pretty :)
2013-08-23 20:18:03 UTC <byorgey> =D
2013-08-23 20:29:14 UTC <luite> haasn: not necessarily, it's possible of course to have the empty diagram be infinitely pretty, but in practice we only work with diagrams of bounded prettiness
2013-08-23 22:11:53 UTC <martingale> alignR / alignL vs snugR / snugL
2013-08-23 22:16:49 UTC <martingale> https://github.com/jeffreyrosenbluth/arrowheads/blob/master/snugtest.png
2013-08-23 22:37:23 UTC <fryguybob> martingale: Nice!
2013-08-23 22:51:31 UTC <martingale> fryguybob: Thanks, It's almost  carbon copy of Align replace envelopeP with traceP, I'll organize the code an send a Pull request later
2013-08-23 23:29:26 UTC <byorgey> martingale: cool =)
2013-08-24 00:09:53 UTC <martingale> byorgey: Right now I have two modules that Snug and TwoD.Snug, do you think i'm better of modifying Align to take an AlignOpts record where the default is envelope and the option is trace?
2013-08-24 00:11:56 UTC <byorgey> martingale: ah, maybe that is a good idea
2013-08-24 00:12:06 UTC <byorgey> martingale: so change the type of alignBy to take an AlignOpts
2013-08-24 00:12:30 UTC <martingale> byorgey: will do
2013-08-24 00:12:33 UTC <byorgey> leave all the functions like  alignL, alignR etc. with the same behavior as currently
2013-08-24 00:12:47 UTC <byorgey> and add new functions  snugL, snugR  which are implemented in terms of alignBy ?
2013-08-24 00:13:26 UTC <byorgey> I don't want to change *all* the functions  alignL, alignR, etc. to take an AlignOpts  (not sure if you were suggesting that)
2013-08-24 00:13:45 UTC <byorgey> but changing the type of a general function like alignBy (which probably no one uses directly anyway) is totally fine
2013-08-24 00:24:52 UTC <travis-ci> [travis-ci] 13diagrams/06master 14b3ae3d5 http://travis-ci.org/diagrams/diagrams/builds/10558120 The build failed.
2013-08-24 00:39:56 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14b9eb867 http://travis-ci.org/diagrams/active/builds/10558409 The build has errored.
2013-08-24 00:40:10 UTC <travis-ci> [travis-ci] 13diagrams/06master 14be1f387 http://travis-ci.org/diagrams/diagrams/builds/10558287 The build was fixed.
2013-08-24 00:49:22 UTC <fryguybob> Oh, whoops.  I used  flip at  instead of just  Loc...
2013-08-24 00:50:23 UTC <fryguybob> byorgey: Now that we have Located, I should just change offset to result in a located segment.
2013-08-24 00:51:55 UTC <byorgey> fryguybob: using flip at is probably preferable
2013-08-24 00:52:10 UTC <byorgey> fryguybob: since presumably 'at' will stay the same even if we change the representation
2013-08-24 00:52:22 UTC <byorgey> fryguybob: what does offset result in now?
2013-08-24 00:52:40 UTC <fryguybob> byorgey: Ok.  Offset gives a tuple with a point and segment.
2013-08-24 00:53:07 UTC <byorgey> ok, yes, in that case giving a Located Segment sounds like a good idea indeed
2013-08-24 00:54:12 UTC <byorgey> since we now have a lot of tools that make working with Located nicer (IMO) than working with a pair
2013-08-24 00:54:50 UTC <fryguybob> byorgey: Right, that should be useful for doing offsets of more then segments.
2013-08-24 00:55:01 UTC <byorgey> right
2013-08-24 00:58:05 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14257b6ab http://travis-ci.org/diagrams/active/builds/10558639 The build has errored.
2013-08-24 01:06:07 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 148d8d705 http://travis-ci.org/diagrams/diagrams-lib/builds/10558822 The build passed.
2013-08-24 01:07:52 UTC <martingale> byorgey: I was planning on adding functions like alignL' and letting alignL be alignL' def ?
2013-08-24 01:10:57 UTC <martingale> byorgey: but I could do it the way you suggested above if you prefer
2013-08-24 01:14:56 UTC <byorgey> martingale: oh, that works too
2013-08-24 01:15:37 UTC <byorgey> yeah, that's probably the best way
2013-08-24 01:21:22 UTC <martingale> byorgey: Good, I'll get to it.
2013-08-24 01:21:28 UTC <byorgey> =)
2013-08-24 01:21:41 UTC <byorgey> martingale: also, I just replied to your email
2013-08-24 01:22:22 UTC <martingale> byorgey: Good I'll have a look
2013-08-24 01:37:52 UTC <byorgey> BTW, the diagrams-0.7.1 package I just uploaded adds a flag to enable the gtk backend (and has improved travis testing)
2013-08-24 01:38:38 UTC <luite> yay, i think :)
2013-08-24 01:39:09 UTC <luite> i'm tying to compile edwardk's automaton with diagrams-ghcjs now :)
2013-08-24 01:39:31 UTC <luite> that stuff has so many dependencies that it makes an excellent test for my cabal update
2013-08-24 01:39:45 UTC <byorgey> sweet!
2013-08-24 01:40:38 UTC <luite> i hope tibbe has too much fun on his vacation to branch cabal 1.18 today :p
2013-08-24 01:40:59 UTC <byorgey> hehe
2013-08-24 01:41:48 UTC <fryguybob> ACTION looks for where he put that file with trail offsets...
2013-08-24 01:47:56 UTC <byorgey> sounds like it got... offset?
2013-08-24 01:48:52 UTC <martingale> byorgey: I have some git confusion: do i have to fork your arrows branch seperately or should I push my arrows stuff into the master
2013-08-24 01:49:19 UTC <carter> i wonder how long till someone makes a haskell ios app that lets you construct neat diagrams with diagrams now that we've a working ios target?
2013-08-24 01:49:24 UTC <byorgey> martingale: you should do neither! =)
2013-08-24 01:49:42 UTC <martingale> byorgey:  OK what then?
2013-08-24 01:49:57 UTC <byorgey> martingale: just a second, let me figure out the right commands
2013-08-24 01:50:49 UTC <byorgey> martingale: git clone https://github.com/diagrams/diagrams-lib.git ; git checkout arrows
2013-08-24 01:51:08 UTC <byorgey> then add your stuff, commit, and push
2013-08-24 01:51:13 UTC <martingale> byorgey: got it
2013-08-24 01:51:28 UTC <byorgey> martingale: oh, wait, sorry
2013-08-24 01:51:45 UTC <byorgey> martingale: you should  git clone git@github.com:diagrams/diagrams-lib.git   instead of the https:// thing
2013-08-24 01:51:58 UTC <byorgey> if you clone via HTTP it won't let you push
2013-08-24 01:52:05 UTC <martingale> byorgey:  OK
2013-08-24 01:52:24 UTC <fryguybob> Oh, I bet the file is on my laptop.  Who keeps files in windows?
2013-08-24 01:52:50 UTC <byorgey> In windows or in Windows?
2013-08-24 01:52:59 UTC <byorgey> I have my files in windows all the time
2013-08-24 01:54:01 UTC <fryguybob> Windows, you know the thing that runs chrome and putty.
2013-08-24 01:54:25 UTC <byorgey> hahaha
2013-08-24 01:58:48 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 140a61063 http://travis-ci.org/diagrams/diagrams-doc/builds/10559059 The build failed.
2013-08-24 02:19:50 UTC <luite> yay my cabal patch works
2013-08-24 02:20:00 UTC <luite> i can even compile the Cabal lib itself with GHCJS now
2013-08-24 02:21:07 UTC <fryguybob> luite: \o/  next stop cabal install ... in the browser!
2013-08-24 02:22:05 UTC <luite> everyone distract tibbe until this is murged :p
2013-08-24 02:22:06 UTC <luite> merged
2013-08-24 02:22:10 UTC <luite> beh it's late
2013-08-24 02:23:13 UTC <fryguybob> Tag cat videos with his twitter name!
2013-08-24 02:24:42 UTC <luite> hmm lens still breaks :/
2013-08-24 02:24:46 UTC <martingale> byorgey: I pushed but it [Errored] I'm wondering if this is becasue the Arrows branch is not up to data with 0.7?
2013-08-24 02:25:55 UTC <martingale> byorgey: *date
2013-08-24 03:00:40 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 1446a1ee1 http://travis-ci.org/diagrams/diagrams-lib/builds/10559886 The build failed.
2013-08-24 03:14:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 143408d10 http://travis-ci.org/diagrams/diagrams-lib/builds/10560047 The build is still failing.
2013-08-24 03:27:41 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 140b371bd http://travis-ci.org/diagrams/diagrams-lib/builds/10560234 The build is still failing.
2013-08-24 03:44:29 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 143ec7e48 http://travis-ci.org/diagrams/diagrams-lib/builds/10560394 The build is still failing.
2013-08-24 03:50:22 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 1433089cf http://travis-ci.org/diagrams/diagrams-lib/builds/10560422 The build is still failing.
2013-08-24 03:54:50 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 142b7754d http://travis-ci.org/diagrams/diagrams-lib/builds/10560459 The build is still failing.
2013-08-24 03:57:04 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14d35e035 http://travis-ci.org/diagrams/diagrams-lib/builds/10560474 The build was fixed.
2013-08-24 03:57:28 UTC <martingale> Finally!! I can go to bed now
2013-08-24 04:03:18 UTC <luite> :)
2013-08-24 08:55:48 UTC <haasn> byorgey: is there something like âvacuumâ for diagrams? An ability to just type âview $ someDiagramâ and have it show up in a new window
2013-08-24 08:56:07 UTC <haasn> ie. directly from GHCi
2013-08-24 08:57:07 UTC <Taneb> There's the GTK backend, that's almost there
2013-08-24 09:27:14 UTC <haasn> http://paste.hskll.org/get/346 <- better way to do this? :)
2013-08-24 09:29:50 UTC <Taneb> Have you seen the dragon curve code I pasted the other day?
2013-08-24 09:30:02 UTC <haasn> nope!
2013-08-24 09:30:11 UTC <Taneb> http://lpaste.net/92030
2013-08-24 09:30:36 UTC <Taneb> We use different algorithms to generate the curve, though
2013-08-24 09:30:39 UTC <haasn> ah, based on rewriting
2013-08-24 09:30:45 UTC <haasn> yeah I just overlay the diagram on itself, like folding a paper in half
2013-08-24 09:30:56 UTC <Taneb> I just like L-systems
2013-08-24 09:31:05 UTC <haasn> mine probably isn't awfully efficient, with reverse and stuff :)
2013-08-24 09:31:47 UTC <haasn> I was going for simplicity
2013-08-24 09:32:12 UTC <mgsloan> haasn: https://github.com/mgsloan/diagrams-ghci
2013-08-24 09:32:22 UTC <Taneb> I was going for "Right, I've worked out how to generate this, now how to write it" :P
2013-08-24 09:32:35 UTC <haasn> mgsloan: oh, right, that's what I was remembering! thanks
2013-08-24 09:32:40 UTC <mgsloan> This is a gtk window that updates whenever you save a ".hse" (haskell expression file) in the directory that it's running in
2013-08-24 09:32:58 UTC <mgsloan> I need to polish it, though - there's no real good reason to not have proper .hs files
2013-08-24 09:32:59 UTC <haasn> simple enough; I think I'd still rather have it in GHCi itself though
2013-08-24 09:33:15 UTC <mgsloan> Ah, I've got that too actually
2013-08-24 09:33:17 UTC <haasn> it would be cool if you could make it work the way paste.hskll.org does
2013-08-24 09:33:43 UTC <Taneb> haasn, by the way, my code renders: http://www.vandoorn.talktalk.net/Nathan's_Stuff/d.svg
2013-08-24 09:33:45 UTC <mgsloan> Right, having a non IO main value
2013-08-24 09:35:13 UTC <mgsloan> haasn: https://github.com/mgsloan/toy-gtk-diagrams/blob/master/src/Graphics/UI/Toy/Gtk/Dict.hs#L57
2013-08-24 09:35:39 UTC <mgsloan> I guess for some reason I overlooked the use case where it's not an interactive diagram
2013-08-24 09:35:50 UTC <mgsloan> however, if you just ignore the mouse position :)
2013-08-24 09:37:40 UTC <Taneb> (is it weird that I prefer the dragon curve rendered with quite thick lines?)
2013-08-24 09:38:34 UTC <mgsloan> I hope to finally put this toy-* stuff on hackage soon, it's been laying around for years, and I think it's quite fun to mess with
2013-08-24 09:42:16 UTC <haasn> Taneb: http://sadpanda.us/images/1811986-4GVP960.png
2013-08-24 09:42:24 UTC <haasn> looks like ours are upside down :)
2013-08-24 09:44:19 UTC <Taneb> :O
2013-08-24 09:44:25 UTC <Taneb> Blashphemy
2013-08-24 09:44:50 UTC <Taneb> Oh dear I've gone all Sean Connery
2013-08-24 09:44:51 UTC <haasn> I can produce either version by swapping the sides of (++) and/or moving the reverse to the other side
2013-08-24 09:45:06 UTC <haasn> I went with the combination that seemed most aesthetically pleasing :)
2013-08-24 09:45:50 UTC <Taneb> I just have to add an underscore in line 17
2013-08-24 09:46:10 UTC <Taneb> So it starts facing West rather than East
2013-08-24 09:46:40 UTC <haasn> # rotateBy (1/2) -- the only obviously correct solution
2013-08-24 09:46:57 UTC <Taneb> :P
2013-08-24 10:00:22 UTC <notdan> mgsloan: that's very interesting
2013-08-24 10:00:38 UTC <notdan> mgsloan: what is the Manipulabe class for? https://github.com/mgsloan/toy-diagrams/blob/master/src/Graphics/UI/Toy/Demo.hs#L23
2013-08-24 10:01:20 UTC <mgsloan> I wanted to be to turn datatypes into interfaces for manipulating them
2013-08-24 10:01:51 UTC <mgsloan> Eventually scaling all the way up to code, but it didn't quite get that far :D
2013-08-24 10:02:24 UTC <mgsloan> Other than that little formatting tweak I haven't worked on that module in ages
2013-08-24 10:35:08 UTC <kuribas> Right now I can find one extremum of the curvature, because the root finder needs an interval.  Any idea how I can find more extrema?
2013-08-24 10:35:37 UTC <kuribas> I need this to find singularities in the offset curve.
2013-08-24 10:55:35 UTC <travis-ci> [travis-ci] 13diagrams-core/06backend-tree 14576a4fa http://travis-ci.org/diagrams/diagrams-core/builds/10565745 The build has errored.
2013-08-24 12:15:53 UTC <travis-ci> [travis-ci] 13diagrams-core/06backend-tree 1426602fd http://travis-ci.org/diagrams/diagrams-core/builds/10566946 The build passed.
2013-08-24 12:41:08 UTC <martingale> byorgey: If I create instances Alignable (Envelope v) and Alignable (Trace v) won't this cause problems for the compiler to deduce the right type?
2013-08-24 12:52:00 UTC <byorgey> martingale: Problems to deduce the right type in what situation?
2013-08-24 12:52:56 UTC <byorgey> martingale: also, what is your proposed definition of AlignOpts?
2013-08-24 12:55:05 UTC <martingale> byorgey: Since most things that are enveloped are traced I was wondering if the user would have to specify the type of v
2013-08-24 12:56:15 UTC <martingale> byorgey: the definition of AlignOpts is tricky, I would like to make it a function, but alignBy and snugBy have different type signatures and I'm not sure I can or if it makes sense to unify them.
2013-08-24 12:56:56 UTC <martingale> I was think of a (gasp!) of type Boundry = EnvB | TrcB
2013-08-24 12:58:07 UTC <martingale> to use as a flag (This is ugly, but i'm not sure there is a better way
2013-08-24 12:59:15 UTC <byorgey> martingale: sorry, back later, I have Noah duty =)
2013-08-24 12:59:53 UTC <martingale> byorgey: OK, I have to head out myself for a couple of hours
2013-08-24 15:50:09 UTC <byorgey> I think I just leveled up.  I wanted a certain type synonym, so I wrote out   type Foo = ... , scratched my head over the resulting error, and then realized that I actually want a *kind* synonym not a type synonym.
2013-08-24 15:50:19 UTC <byorgey> either I leveled up or I am very confused.  Sometimes they are the same.
2013-08-24 15:50:39 UTC <byorgey> also, now I am sad that Haskell does not have kind synonyms.
2013-08-24 16:02:20 UTC <martingale> byorgey: I'm having second thoughts about creating  AlignOpts since there are only two choices Envelope and Trace, it might be better to have two function names, align and snug.
2013-08-24 16:02:59 UTC <martingale> byorgey: Unless we plan on adding other "boundries" e.g bounding box later.
2013-08-24 16:04:41 UTC <byorgey> martingale: ok, what I was going to say earlier: first, making type Boundry = EnvB | TrcB  as a field of AlignOpts cannot possibly work, because when 'alignBy' is called there's no guarantee that you can get an Envelope or Trace for the thing you're aligning
2013-08-24 16:05:22 UTC <byorgey> martingale: can't AlignOpts just contain a function like   (v -> Scalar v) ?
2013-08-24 16:05:44 UTC <byorgey> or even  (Point v -> v -> Scalar v), where the version for envelopes ignores the input Point
2013-08-24 16:06:34 UTC <byorgey> martingale: can you elaborate on what you mean when you say alignBy and snugBy have different type signatures?  what is the type of snugBy?
2013-08-24 16:07:40 UTC <martingale> byorgey: Ah, of course you are right, I was looking at the signatures for snugByDefault which is
2013-08-24 16:07:43 UTC <martingale> (HasOrigin a, Traced a, Fractional (Scalar (V a)), Num (Scalar (V a)))
2013-08-24 16:07:44 UTC <martingale>   => V a -> Scalar (V a) -> a -> a
2013-08-24 16:08:28 UTC <martingale> byorgey: I think (v -> Scalar v) will work.
2013-08-24 16:09:08 UTC <byorgey> OK.  If that works out then it's nice because of course you can come up with other ways to align things.
2013-08-24 16:09:19 UTC <byorgey> you can just pass an arbitrary function.
2013-08-24 16:09:37 UTC <martingale> byorgey: make that: V a -> Scalar (V a) -> a -> a
2013-08-24 16:09:51 UTC <martingale> byorgey: as is the current signature of alignBy
2013-08-24 16:10:59 UTC <byorgey> no, I really do mean having   V a -> Scalar (V a)   as a field of AlignOpts, not  V a -> Scalar (V a) -> a -> a
2013-08-24 16:11:31 UTC <byorgey> alignBy will call that function with the given vector, to determine how far away the "edge" is
2013-08-24 16:11:41 UTC <byorgey> and then translate accordingly
2013-08-24 16:12:44 UTC <byorgey> does that make sense?
2013-08-24 16:13:16 UTC <martingale> byorgey: I think so, I'll try to code it up and let you know if I run into any problems
2013-08-24 16:13:19 UTC <byorgey> ok
2013-08-24 16:14:15 UTC <byorgey> ACTION comes to the sudden realization that *scalars* and *distances* ideally ought to have different types
2013-08-24 16:14:35 UTC <byorgey> a scalar is a scaling factor.  e.g.  (*^) :: scalar -> vector -> vector
2013-08-24 16:15:09 UTC <byorgey> oh, never mind, I guess they are the same thing.
2013-08-24 16:15:33 UTC <byorgey> hmmm
2013-08-24 16:15:54 UTC <martingale> byorgey: Can AlignOpts be a type synonym then or do I need a data type
2013-08-24 16:17:24 UTC <byorgey> martingale: I would make it a data type, so that people can use the same syntax that's used elsewhere, like   alignBy v with { foo = blah }
2013-08-24 16:17:43 UTC <byorgey> that will also make it easier to upgrade if we ever decide to add more alignment options
2013-08-24 16:17:55 UTC <martingale> byorgey: OK
2013-08-24 16:18:53 UTC <martingale> byorgey: By the way I made the arrow post to the google group, make you can send some traffic so it.
2013-08-24 16:19:00 UTC <martingale> *maybe
2013-08-24 16:19:45 UTC <fryguybob> byorgey: You could make comparable distances opaque.
2013-08-24 16:28:36 UTC <kuribas> Is a R tree a good structure for finding intersections?
2013-08-24 16:30:02 UTC <kuribas> If I check against all curves, it would be 0(n^2).
2013-08-24 16:31:14 UTC <byorgey> sounds like a good idea to me
2013-08-24 16:31:28 UTC <kuribas> What does diagrams use?
2013-08-24 16:32:38 UTC <byorgey> kuribas: we don't use anything at all at the moment, we haven't needed anything like that yet
2013-08-24 16:33:02 UTC <byorgey> but you could get an R-tree out of diagrams almost for free just by adding bounding boxes as a u-annotation
2013-08-24 16:37:15 UTC <kuribas> I see.
2013-08-24 16:43:02 UTC <kuribas> So to find points with a certain radius of curvature I want to convert the curvature to a 12 degree bezier curve, and use the bezier clipping algorithm on that curve.
2013-08-24 16:43:39 UTC <kuribas> It should be more robust than the general root solver and give all solutions.
2013-08-24 16:44:05 UTC <kuribas> But calculating the 12 degree bezier curve may be a bit expensive.
2013-08-24 16:44:57 UTC <kuribas> (about 100 multiplications)
2013-08-24 17:01:34 UTC <kuribas> But I am probably underestimating the power of modern computers...
2013-08-24 17:15:10 UTC <ClaudiusMaximus> is that 100x slower or a one-off cost?
2013-08-24 17:15:34 UTC <kuribas> one of
2013-08-24 17:16:08 UTC <kuribas> bezier clipping should be reasonably fast.
2013-08-24 17:18:18 UTC <ClaudiusMaximus> then i wouldn't worry about additive time costs, it's the multiplicative or polynomial or exponential ones that are concerning..
2013-08-24 17:19:15 UTC <kuribas> ok
2013-08-24 18:02:47 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14b6581ab http://travis-ci.org/diagrams/active/builds/10573848 The build has errored.
2013-08-24 18:16:14 UTC <martingale_> byorgey: I guess I don't really understand what you mean by having alignOpts be V a -> Scalar (V a), what would this look like for the default case of alignBy
2013-08-24 18:18:08 UTC <byorgey> martingale_: I was thinking of having it be the same sort of thing as what you get out of appEnvelope
2013-08-24 18:18:30 UTC <byorgey> but on second thought, perhaps that's a bit too low-level.  Looking at the current implementation of alignByDefault, I see it uses envelopeP
2013-08-24 18:19:36 UTC <byorgey> oh, and I guess in any case it really has to take an a, doesn't it?
2013-08-24 18:19:42 UTC <byorgey> heh, sorry for confusing you =P
2013-08-24 18:20:08 UTC <byorgey> so how about let's have an option of type  V a -> a -> Point (V a)
2013-08-24 18:20:41 UTC <byorgey> for Enveloped, you can drop in envelopeP; for Traced, you can drop in something related to traceP
2013-08-24 18:20:41 UTC <martingale_> byorgey: so what i originally said was correct? that is use: V a -> Scalar (V a) -> a -> a 
2013-08-24 18:21:07 UTC <byorgey> no, thte option should not be the function which actually does the alignment
2013-08-24 18:21:10 UTC <byorgey> that is alignBy's job
2013-08-24 18:21:22 UTC <byorgey> the option merely computes something about the thing being aligned
2013-08-24 18:21:46 UTC <martingale_> byorgey: So the something related to traceP would extract it from the maybe with a default of say origin
2013-08-24 18:22:10 UTC <byorgey> right. Though I am not sure what to do in the case of traceP returning Nothing.
2013-08-24 18:22:18 UTC <byorgey> what did you do in e.g. snugL?
2013-08-24 18:22:33 UTC <martingale_> byorgey: I returned the local origin
2013-08-24 18:22:49 UTC <byorgey> ok, that sounds sensible
2013-08-24 18:23:13 UTC <martingale_> byorgey: sounds like a plan
2013-08-24 18:23:28 UTC <byorgey> great =)  sorry for making this more complicated than necessary.
2013-08-24 18:24:04 UTC <martingale_> byorgey: no worries, just glad I wasn't missing something silly
2013-08-24 20:14:29 UTC <travis-ci> [travis-ci] 13active/06new-semantics 148d7f914 http://travis-ci.org/diagrams/active/builds/10576628 The build has errored.
2013-08-24 20:42:28 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14ef84eda http://travis-ci.org/diagrams/active/builds/10577176 The build has errored.
2013-08-24 20:53:00 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14d6619d1 http://travis-ci.org/diagrams/active/builds/10577441 The build has errored.
2013-08-24 21:18:14 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14201d992 http://travis-ci.org/diagrams/active/builds/10578006 The build has errored.
2013-08-24 21:23:47 UTC <travis-ci> [travis-ci] 13active/06new-semantics 145349833 http://travis-ci.org/diagrams/active/builds/10578088 The build has errored.
2013-08-24 21:31:26 UTC <travis-ci> [travis-ci] 13active/06new-semantics 141393964 http://travis-ci.org/diagrams/active/builds/10578229 The build has errored.
2013-08-24 22:09:19 UTC <martinga_> there has to be a more haskelly way to right this: alignTL' opts = alignT' opts . alignL' opts
2013-08-24 22:11:51 UTC <martinga_> It seems to be working https://github.com/jeffreyrosenbluth/align/blob/master/snugtest.svg
2013-08-24 23:10:10 UTC <fryguybob> @pl \a -> f a . g a
2013-08-24 23:10:10 UTC <lambdabot> liftM2 (.) f g
2013-08-24 23:16:03 UTC <fryguybob> @type \f g -> liftA2 (.) f g
2013-08-24 23:16:04 UTC <lambdabot> Applicative f => f (b -> c) -> f (a -> b) -> f (a -> c)
2013-08-24 23:16:10 UTC <fryguybob> @type \f g -> (.) <$> f <*> g
2013-08-24 23:16:11 UTC <lambdabot> Applicative f => f (b -> c) -> f (a -> b) -> f (a -> c)
2013-08-25 00:44:10 UTC <martingale> Wow, lots of good choices
2013-08-25 00:46:49 UTC <martingale> fryguybob: thanks
2013-08-25 01:51:24 UTC <fryguybob> byorgey: Is Located a Functor?
2013-08-25 01:53:33 UTC <fryguybob> Oh, there is mapLoc
2013-08-25 01:54:20 UTC <byorgey> fryguybob: it is a little-f functor (from an appropriate category) but not a Functor
2013-08-25 01:55:16 UTC <fryguybob> byorgey: Is there something similar to join?
2013-08-25 01:55:40 UTC <byorgey> fryguybob: you mean like   Located (Located a) -> Located a  ?
2013-08-25 01:55:44 UTC <fryguybob> Yeah
2013-08-25 01:55:48 UTC <byorgey> what would it do?
2013-08-25 01:56:35 UTC <byorgey> of course you could write a function of that type just by throwing away one of the locations
2013-08-25 01:56:39 UTC <byorgey> but that seems uninteresting
2013-08-25 01:57:17 UTC <fryguybob> Humm, yeah.  I want + but perhaps that means one of my steps isn't really Located.
2013-08-25 01:57:58 UTC <byorgey> + does not really make sense on points, so yes, I would say one of them is actually  (V a, a)  instead of  (Point (V a), a)
2013-08-25 01:58:11 UTC <byorgey> then you can use  .+^
2013-08-25 01:58:17 UTC <fryguybob> Yeah.
2013-08-25 02:11:59 UTC <fryguybob> byorgey: In particular I have a Path and a function from Trail to Located Trail and I want to apply that to each of the trails in the path.
2013-08-25 02:12:47 UTC <martingale> byorgey: I'll have a look, it built fine in my hsenv sandbox. Problem seems to be in Path.hs
2013-08-25 02:14:02 UTC <byorgey> martingale: ok, thanks
2013-08-25 02:14:05 UTC <fryguybob> (???) . mapLoc f . pathTrails  Has ??? as Located (Located Trail) -> Located Trail
2013-08-25 02:14:37 UTC <byorgey> fryguybob: hmm, I see.
2013-08-25 02:15:05 UTC <byorgey> huh, perhaps + does make sense
2013-08-25 02:15:56 UTC <byorgey> that is a very compelling example .
2013-08-25 02:17:00 UTC <byorgey> fryguybob: well, feel free to add a function which collapses Located with + like that.  The hard part is coming up with a good name.
2013-08-25 02:17:24 UTC <byorgey> I don't think it should be called 'joinLocated' or something like that, because although I'm convinced it's useful I'm not convinced it's canonical.
2013-08-25 02:17:34 UTC <fryguybob> byorgey: hehe
2013-08-25 02:18:18 UTC <byorgey> anyway, bedtime for me, see you all later
2013-08-25 02:18:47 UTC <fryguybob> I suppose another way to view it is to make  f :: Trail -> Offset Trail  and  (???) :: Located (Offset Trail) -> Located Trail
2013-08-25 02:19:01 UTC <fryguybob> But I will have to think if that makes more sense or less.
2013-08-25 02:19:07 UTC <fryguybob> byorgey: Good night!
2013-08-25 02:23:18 UTC <fryguybob> ACTION uses the name  nonCanonicalJoin = (???)  while byorgey isn't looking.
2013-08-25 02:30:15 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14826a787 http://travis-ci.org/diagrams/diagrams-doc/builds/10583017 The build has errored.
2013-08-25 02:45:57 UTC <martingale> How do I re-export an imported instance of Default?
2013-08-26 02:38:50 UTC <fryguybob> byorgey: When I finish with this offset trail stuff we would be able convert any stroked line into a path that could be filled.  This would give us a slow renderer.
2013-08-26 02:40:59 UTC <luite> a slow renderer, just what we need!
2013-08-26 02:41:40 UTC <luite> why slow?
2013-08-26 02:41:43 UTC <fryguybob> :D
2013-08-26 02:43:31 UTC <fryguybob> luite: Containment test per pixel was what I had in mind.
2013-08-26 02:45:50 UTC <luite> using diagrams' raytracer?
2013-08-26 02:46:58 UTC <fryguybob> luite: Right, the point is something slow but obviously correct could be useful for things like the diagrams backend tests.
2013-08-26 02:58:05 UTC <luite> yeah could be a nice reference target for the fast rasterizer Tillmann's going to write
2013-08-26 03:00:26 UTC <fryguybob> I suppose if we have trace instances for segments we can do a bit better without much work.  Anyway, good night.
2013-08-26 03:01:10 UTC <luite> :)
2013-08-26 04:06:53 UTC <luite> http://hdiff.luite.com/ghcjs/automaton/
2013-08-26 05:15:30 UTC <Twey> What's the best way to fill a shape with a repeated pattern?
2013-08-26 05:16:30 UTC <Twey> I'm leery of drawing the pattern and then clipping it with the shape because there doesn't seem to be anything for making infinite patterns, so if the shape were resized the pattern could break
2013-08-26 08:17:13 UTC <notdan> luite: cool :)
2013-08-26 08:17:19 UTC <notdan> it works faster on reload
2013-08-26 11:57:28 UTC <byorgey> Twey: good question, we don't really have a good way of doing that right now
2013-08-26 11:59:13 UTC <byorgey> luite: what am I supposed to see at http://hdiff.luite.com/ghcjs/automaton/ ?
2013-08-26 11:59:16 UTC <byorgey> I just get a blank window
2013-08-26 11:59:23 UTC <notdan> Beh, I wonder why ghc library does not provide the TypeRep module. I assume they want to hide the representation of types. But if they introduce a breaking change to the type representation chances are they'll have to add/remove splitTyConApp/splitFunTy/splitBla functions too
2013-08-26 11:59:31 UTC <notdan> byorgey: you will see a cellular automata
2013-08-26 11:59:34 UTC <notdan> just give it a minute
2013-08-26 11:59:38 UTC <notdan> :)
2013-08-26 11:59:43 UTC <notdan> it's faster in Chrome though
2013-08-26 12:00:16 UTC <notdan> and it's pretty fast on each consecutive reload
2013-08-26 12:00:35 UTC <byorgey> notdan: ok, still waiting... =)
2013-08-26 12:47:47 UTC <byorgey> ah, it's working now, I didn't realize it only runs when it has the focus =)
2013-08-26 12:48:07 UTC <byorgey> so that's running edwardk's code through diagrams-ghcjs ?
2013-08-26 12:59:06 UTC <martingale> byorgey: I think i need to re-exprot all of the Arrowhead.hs fucntions from Arrow.hs, is the a one line way to do this or do I have to list all of the functions?
2013-08-26 13:00:40 UTC <martingale> byorgey: I played around with your knights tour, to use arrows - a possible option to showcase arrows in the gallery once it's mereged.
2013-08-26 13:01:41 UTC <martingale> byorgey:  https://raw.github.com/jeffreyrosenbluth/arrowheads/master/knightstour.png
2013-08-26 13:02:20 UTC <martingale> byorgey: I didn't bother with the knight image
2013-08-26 13:07:26 UTC <byorgey> martingale: nice =)
2013-08-26 13:07:46 UTC <byorgey> martingale: if you want to export an entire module you can just put  'module Foo'  in the export list
2013-08-26 13:08:57 UTC <martingale> byorgey: thanks will do and re push the fork
2013-08-26 13:09:35 UTC <martingale> byorgey: Also, I finally got the enhanced Align module to pass Travis ci
2013-08-26 13:11:21 UTC <byorgey> martingale: yes, I saw that, thanks =)
2013-08-26 13:16:46 UTC <fryguybob> martingale: Nice, arrows are looking good :D
2013-08-26 13:17:38 UTC <martingale> fryguybob: thanks
2013-08-26 13:18:47 UTC <martingale> fryguybob: If you get a chance play with the arrows branch?
2013-08-26 13:19:16 UTC <fryguybob> martingale: I haven't had a chance yet, but I certainly have plenty of backburner projects that would need them.
2013-08-26 13:20:10 UTC <martingale> fryguybob: great, I look forward to hearing any suggestions you may have
2013-08-26 13:21:31 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 145d730dd http://travis-ci.org/diagrams/diagrams-lib/builds/10623174 The build was broken.
2013-08-26 13:22:14 UTC <byorgey> martingale: ah, you have to export  module Diagrams.TwoD.Arrowheads, not just  module Arrowheads
2013-08-26 13:22:30 UTC <martingale> byorgey: yes, i just realized that
2013-08-26 13:22:35 UTC <byorgey> =)
2013-08-26 13:27:57 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14187a229 http://travis-ci.org/diagrams/diagrams-lib/builds/10623423 The build was fixed.
2013-08-26 13:49:24 UTC <fryguybob> byorgey: Any opposition to adding  locatedTrailSegments :: ... => Trail v -> [Located (Segment Closed v)]  ?
2013-08-26 13:50:16 UTC <fryguybob> byorgey: I'm using  Located (Segment Closed v)  as a replacement for  FixedSegment v.
2013-08-26 14:08:23 UTC <byorgey> fryguybob: I think it might be slightly more general/correct to have   Located (Trail v) -> [Located (Segment Closed v)]
2013-08-26 14:08:54 UTC <byorgey> from which you can recover the type you proposed by composing with (`at` origin)
2013-08-26 14:08:59 UTC <fryguybob> byorgey: Yeah
2013-08-26 14:10:53 UTC <fryguybob> byorgey: Even makes it simpler :D
2013-08-26 14:10:59 UTC <byorgey> great =)
2013-08-26 14:18:52 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 143fcd71e http://travis-ci.org/diagrams/diagrams-lib/builds/10625275 The build passed.
2013-08-26 14:29:22 UTC <martingale> byorgey: should diagrams-cairo work for cairo 12.14, the cabal script has < .13?
2013-08-26 14:31:42 UTC <byorgey> martingale: the latest release of the Haskell cairo package is 0.12.4 which is < 0.13.  The latest release of the cairo C library is 1.12.14, but that version number has nothing to do with what is in diagrams-cairo.cabal
2013-08-26 14:32:59 UTC <martingale> byorgey: hmm not sure why I'm having trouble installing the cairo backend. any suggestions on installing the Haskell cairo package
2013-08-26 14:33:09 UTC <martingale> byorgey: OSX
2013-08-26 14:33:42 UTC <martingale> byorgey: I know I have done it before but that was in a different hsenv
2013-08-26 14:34:01 UTC <byorgey> installing cairo is notoriously difficult on OSX.  there are some instructions here: http://www.haskell.org/haskellwiki/Diagrams/Install#Installing_on_Mac_OS_X
2013-08-26 14:34:07 UTC <byorgey> no idea how up to date those instructions are
2013-08-26 14:34:21 UTC <byorgey> martingale: what error(s) are you getting?
2013-08-26 14:34:47 UTC <byorgey> or are you saying you already have the cairo C library installed, and you are just having trouble installing the Haskell package?
2013-08-26 14:35:07 UTC <martingale> byorgey: yes, the c library is installed
2013-08-26 14:35:14 UTC <byorgey> OK, ignore that link then
2013-08-26 14:35:55 UTC <martingale> abal: Error: some packages failed to install:
2013-08-26 14:35:55 UTC <martingale> cairo-0.12.4 failed during the configure step. The exception was:
2013-08-26 14:35:55 UTC <martingale> ExitFailure 1
2013-08-26 14:35:57 UTC <martingale> diagrams-0.7.1 depends on cairo-0.12.4 which failed to install.
2013-08-26 14:35:59 UTC <martingale> diagrams-cairo-0.7 depends on cairo-0.12.4 which failed to install.
2013-08-26 14:36:40 UTC <byorgey> martingale: you will have to scroll up to find the actual error that happened during the installation of the cairo package
2013-08-26 14:37:53 UTC <byorgey> or if you were building using -jN you can look at the log in .hsenv_foo/cabal/logs/cairo-0.12.4.log
2013-08-26 14:40:30 UTC <martingale> onfiguring cairo-0.12.4...
2013-08-26 14:40:30 UTC <martingale> setup: Package xcb-shm was not found in the pkg-config search path.
2013-08-26 14:40:30 UTC <martingale> Perhaps you should add the directory containing `xcb-shm.pc'
2013-08-26 14:40:31 UTC <martingale> to the PKG_CONFIG_PATH environment variable
2013-08-26 14:40:33 UTC <martingale> Package 'xcb-shm', required by 'cairo', not found
2013-08-26 14:40:35 UTC <martingale> Failed to install cairo-0.12.4
2013-08-26 14:40:37 UTC <martingale> cabal: Error: some packages failed to install:
2013-08-26 14:40:39 UTC <martingale> cairo-0.12.4 failed during the configure step. The exception was:
2013-08-26 14:40:41 UTC <martingale> ExitFailure 1
2013-08-26 14:41:40 UTC <byorgey> ah, well, apparently you need to install some library called something like xcb-shm from macports or homebrew or whatever you use
2013-08-26 14:42:21 UTC <fryguybob> martingale: Or perhaps you do not have paths set up correctly for pkg-config.
2013-08-26 14:42:38 UTC <fryguybob> (I know on windows this can be tricky)
2013-08-26 14:43:17 UTC <martingale> yeah, i had this problem before, it's a path thing i have to find where xcb-sbm is installed on my directory and fix my path
2013-08-26 15:09:12 UTC <fryguybob> ACTION reads up on the new parametric stuff.
2013-08-26 15:40:41 UTC <martingale> how do i append to : PKG_CONFIG_PATH
2013-08-26 15:44:13 UTC <fryguybob> martingale: No idea, is this in a standard shell?
2013-08-26 15:44:33 UTC <martingale> fryguybob: nevermind, i got it
2013-08-26 15:57:56 UTC <martingale> For anyone else having trouble installing the haskell cairo package: export PKG_CONFIG_PATH=/usr/X11/lib/pkgconfig
2013-08-26 16:00:45 UTC <fryguybob> martingale: You could add details to the wiki page byorgey linked to.
2013-08-26 16:01:23 UTC <martingale> fryguybob: sure
2013-08-26 16:04:37 UTC <martingale> fryguybob: I don't have a login to the haskellwiki - seems like it takes a while to get one?
2013-08-26 16:23:28 UTC <fryguybob> humm.  I don't remember.  No worries, I can add to it for you.
2013-08-26 16:24:15 UTC <notdan> yeah you have to mail somebody for a login
2013-08-26 16:24:30 UTC <notdan> i got a very quick reply though
2013-08-26 16:25:32 UTC <martingale> fryguybob: Thanks, What happens is that xcb-shm.pc is needed to install cairo and for some strange reason on OSX it is in /urs/X11/lib/pkgconfig
2013-08-26 16:25:42 UTC <martingale> notdan: who do you email?
2013-08-26 16:26:40 UTC <martingale> fryguybob: */usr
2013-08-26 16:26:53 UTC <fryguybob> martingale: nominolo,  There is a note on the login page.
2013-08-26 16:27:02 UTC <fryguybob> (at gmail)
2013-08-26 16:27:17 UTC <martingale> thanks
2013-08-26 16:27:36 UTC <notdan> oops, forgot that this chjannel is logged D:
2013-08-26 16:27:40 UTC <notdan> sorry nominolo :(
2013-08-26 16:30:46 UTC <byorgey> ACTION scrubs nominolo's email address from the log
2013-08-26 16:31:30 UTC <byorgey> the log is only made public occasionally, when I remember to commit
2013-08-26 16:32:01 UTC <fryguybob> ACTION looks for other ways byorgey has "corrected" the record.
2013-08-26 16:34:17 UTC <notdan> heh
2013-08-26 16:34:19 UTC <notdan> thanks byorgey 
2013-08-26 16:36:58 UTC <byorgey> I go through and correct all my typos, and remove any mention of ideas I had which didn't work
2013-08-26 16:38:10 UTC <fryguybob> Ah, that's why I couldn't find that idea about the robot cockroach with a paintbrush backend.
2013-08-26 16:39:24 UTC <byorgey> apparently the original LOGO turtle was a physical turtle robot with an actual pen, that drew on a giant piece of paper
2013-08-26 16:39:44 UTC <fryguybob> Sweet
2013-08-26 17:32:44 UTC <travis-ci> [travis-ci] 13active/06new-semantics 142f408a3 http://travis-ci.org/diagrams/active/builds/10632555 The build has errored.
2013-08-26 17:38:17 UTC <fryguybob> byorgey: I'm finding it hard to use the instance: type instance Codomain (Located a) = Located (Codomain a)
2013-08-26 17:40:55 UTC <byorgey> fryguybob: how so, precisely?
2013-08-26 17:41:03 UTC <byorgey> I agree that instance seems a bit fishy
2013-08-26 17:42:47 UTC <fryguybob> byorgey: I have to use my nonCanonicalJoin when I use it.
2013-08-26 17:43:51 UTC <fryguybob> byorgey: I guess it fells like I want something like  type instance ... => Codomain (Located a) = Codomain a
2013-08-26 17:43:59 UTC <fryguybob> byorgey: But I'm not sure that makes sense.
2013-08-26 17:45:37 UTC <ClaudiusMaximus> what's the best (ie, least coding for me) way to go from CSG (intersection of half spaces) to a net that i could cut out and assemble?
2013-08-26 17:50:10 UTC <fryguybob> ClaudiusMaximus: 2D? And cuting out by hand?
2013-08-26 17:50:26 UTC <byorgey> fryguybob: I don't think  Codomain (Located a) = Codomain a  makes sense, since that means e.g. that calling atParam on a Located Trail would give you a vector, just like a Trail, when what you really expect is a Point
2013-08-26 17:51:09 UTC <byorgey> so the current instance gives you a Located Vector, which you have to collapse to a point if you want, using .+^
2013-08-26 17:51:11 UTC <fryguybob> byorgey: Humm, yeah
2013-08-26 17:51:21 UTC <ClaudiusMaximus> fryguybob: 3D model -> 2D net -> cut out by machine
2013-08-26 17:51:35 UTC <byorgey> fryguybob: so in some sense I'm not that surprised that you need the nonCanonicalJoin
2013-08-26 17:51:42 UTC <ClaudiusMaximus> fryguybob: looks like Mecha -> OpenSCAD -> Blender -> some blender plugin might work...
2013-08-26 17:51:45 UTC <fryguybob> ClaudiusMaximus: So cuting out the surface to be glued together at the eges?
2013-08-26 17:51:55 UTC <byorgey> maybe it is canonical after all =)
2013-08-26 17:52:01 UTC <fryguybob> :D
2013-08-26 17:52:16 UTC <ClaudiusMaximus> fryguybob: right, http://en.wikipedia.org/wiki/Net_%28polyhedron%29
2013-08-26 17:52:51 UTC <fryguybob> ClaudiusMaximus: I know that Rhino had a plugin for flattening developable surfaces.
2013-08-26 17:54:42 UTC <fryguybob> ClaudiusMaximus: I think deciding if unfolding without overlapping is a hard problem.
2013-08-26 17:55:14 UTC <ClaudiusMaximus> fryguybob: sure, it's easier for convex shapes like the one i have in mind though - gonna try mecha / openscad, bbl
2013-08-26 17:55:17 UTC <ClaudiusMaximus> :)
2013-08-26 17:56:14 UTC <ClaudiusMaximus> huh, mecha doesn't have a half-space primitive :(
2013-08-26 17:57:19 UTC <kuribas> What's the best source for the metafont path interpolation algorithm?  I have the metafontbook and the metafont program book, but I don't quite grasp the math yet.
2013-08-26 17:57:25 UTC <fryguybob> ClaudiusMaximus: It shouldn't be too hard to get the shape that each half surface contributes and at the same time record which pair of half spaces contribute to each edge.
2013-08-26 17:58:03 UTC <fryguybob> Then some spanning tree of that graph would be the flattened shape
2013-08-26 17:58:09 UTC <byorgey> kuribas: there's the Metafont book, and the original paper by Hobby (which I think the Metafont book references).  I haven't looked at the Hobby paper so I don't know what it's like.
2013-08-26 17:59:36 UTC <byorgey> Presumably it actually derives the formulas (whereas the Metafont book just reproduces the formulas without going into why).
2013-08-26 17:59:38 UTC <kuribas> I looked at the Metafont book, but I couldn't yet make a full algorithm out of it.  Maybe my complex math is too rusty.
2013-08-26 18:00:08 UTC <kuribas> I don't need the derivation, just an algorithm that works :)
2013-08-26 18:00:27 UTC <ClaudiusMaximus> fryguybob: sure, i guess i'll have to bite that snake..
2013-08-26 18:01:07 UTC <kuribas> fryguybob: I can now find all points with a certain radius of curvature, using the bezier clipping algortih
2013-08-26 18:01:13 UTC <kuribas> algorithm.
2013-08-26 18:01:21 UTC <fryguybob> kuribas: Cool
2013-08-26 18:01:31 UTC <kuribas> It's reasonably fast, and converges really fast.
2013-08-26 18:01:45 UTC <byorgey> yay =D
2013-08-26 18:01:53 UTC <kuribas> And it's more robust than the numeric root solver.
2013-08-26 18:02:16 UTC <kuribas> But if you feed it a colinear bezier, it might produce an huge list of points...
2013-08-26 18:02:24 UTC <fryguybob> hehe
2013-08-26 18:02:59 UTC <kuribas> Maybe I should check for it...
2013-08-26 18:04:09 UTC <fryguybob> ClaudiusMaximus: If you know that each half space contributes to exactly one face that should make things easier.
2013-08-26 18:04:37 UTC <fryguybob> ClaudiusMaximus: And with some information about the shape there might be a heristic that works for picking the right spanning tree.
2013-08-26 18:39:36 UTC <kuribas> Can the DUALtree be used to make a hilbert R-tree?
2013-08-26 18:40:48 UTC <travis-ci> [travis-ci] 13active/06new-semantics 146f3eded http://travis-ci.org/diagrams/active/builds/10634715 The build has errored.
2013-08-26 18:43:49 UTC <byorgey> kuribas: only if hilbert R-trees have a useful monoid structure.
2013-08-26 18:44:16 UTC <byorgey> kuribas: looking at the definition of hilbert R-trees, that seems doubtful.
2013-08-26 18:45:51 UTC <kuribas> Oh well, it wouldn't be so difficult to code a hilbert R-tree.
2013-08-26 18:46:18 UTC <byorgey> sure
2013-08-26 19:30:13 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14f74c763 http://travis-ci.org/diagrams/active/builds/10636364 The build has errored.
2013-08-26 20:46:00 UTC <fryguybob> byorgey: Concrete example:  straight (nonCanonicalJoin (atStart b) ^-^ (e .-. origin))  where b :: Located (Trail R2)  and  e :: P2
2013-08-26 20:46:12 UTC <fryguybob> I'm not sure how to make that more elegant.
2013-08-26 21:01:57 UTC <fryguybob> byorgey: It looks like the only uses I'm getting for nonCanonicalJoin are with mapLoc and when I really want a point, not a vector.  So I'll make something special for both those cases and use those.
2013-08-26 22:25:46 UTC <martingale> byorgey: I think I'm going to need some help here. I'm not sure how to fix all the types in Align.hs, and somehting is awry with hsenv I'm working in so I can't even test locally. I've been using travis to debug which I know is a horrible idea.
2013-08-27 00:12:44 UTC <byorgey> hehe
2013-08-27 00:13:49 UTC <byorgey> at least I got rid of the travis email notification so you aren't spamming the mailing list with the build failures =)
2013-08-27 00:14:38 UTC <carter> it does email the list more than people do
2013-08-27 00:15:56 UTC <byorgey> it used to.  I am disabling the email notifications for all the repositories because I realized it was probably annoying, and we get notifications in here anyway
2013-08-27 00:16:07 UTC <byorgey> so pretty soon there should be no more travis traffic on the mailing list
2013-08-27 00:19:03 UTC <fryguybob> ACTION gets closer: http://www.cs.rochester.edu/u/ryates/temp/exampleC.pdf
2013-08-27 00:19:03 UTC <carter> soon?
2013-08-27 00:19:16 UTC <carter> ooo, what are you trying to do?
2013-08-27 00:19:32 UTC <fryguybob> Offset trails
2013-08-27 00:19:39 UTC <carter> what are those?
2013-08-27 00:20:22 UTC <fryguybob> Given a trail, find the extent that is radius r from the trail.
2013-08-27 00:22:00 UTC <fryguybob> carter: I had it working before but not for bezier segments.  Now I can do bezier segments, but I have to stitch the code back together to do it in a trail.
2013-08-27 00:22:17 UTC <fryguybob> I used the wrong representation before and things changed anyway on top of that.
2013-08-27 00:23:25 UTC <carter> ah
2013-08-27 00:23:53 UTC <byorgey> yay, offset trails =D
2013-08-27 00:24:28 UTC <fryguybob> byorgey: I ended up calling my two uses of non-join bindLoc and atStartL/atEndL
2013-08-27 00:24:48 UTC <byorgey> sounds good
2013-08-27 00:25:32 UTC <byorgey> man, martingale seems to have a knack for picking the complicated stuff to work on =)
2013-08-27 00:25:39 UTC <fryguybob> ha
2013-08-27 00:26:19 UTC <carter> whats he working on?
2013-08-27 00:26:36 UTC <carter> is that all the pull request activity?
2013-08-27 00:26:48 UTC <fryguybob> At my old work we had one guy that could break anything.  We thought we had tested every corner case and he goes and touches the machine and loud clunking noises would start happening.
2013-08-27 00:26:59 UTC <carter> oh?
2013-08-27 00:27:17 UTC <fryguybob> He was always just trying to use it like normal.
2013-08-27 00:27:46 UTC <martingale> I'm glad your all having a good laugh, I'm pulling my hair out trying to get my code to compile :D
2013-08-27 00:28:08 UTC <carter> martingale what are you hacking on?
2013-08-27 00:28:51 UTC <fryguybob> martingale: Merging align and snug sensibly right?
2013-08-27 00:29:06 UTC <martingale> Yes
2013-08-27 00:29:27 UTC <fryguybob> (I like the name snug by the way)
2013-08-27 00:29:31 UTC <martingale> carter: Snut is like align but uses the Trace instead of the envelope
2013-08-27 00:29:45 UTC <carter> what will this do?
2013-08-27 00:29:48 UTC <carter> or mean
2013-08-27 00:29:55 UTC <martingale> fryguybob: I't took a lot a hoping around the thesaurus 
2013-08-27 00:30:39 UTC <martingale> carter: It means you can snug a convex shape into a concave one without any space inbetween
2013-08-27 00:31:28 UTC <martingale> carter: Like putting the pieces of a jigsaw puzzle together
2013-08-27 00:31:31 UTC <carter> ok
2013-08-27 00:31:32 UTC <carter> cool
2013-08-27 00:32:20 UTC <carter> so "snug" is apt
2013-08-27 00:32:27 UTC <martingale> carter: yeah I needed something like it to attach my arrowheads to their shafts, and did it by hand so I thought it would be nice to generalize
2013-08-27 00:32:33 UTC <carter> cool!
2013-08-27 00:32:41 UTC <carter> also means you can think about rendering nicely
2013-08-27 00:32:49 UTC <carter> you just add padding around stuff to space it out
2013-08-27 00:33:02 UTC <carter> you don't need to remove space
2013-08-27 00:33:07 UTC <carter> or do layer tricks...
2013-08-27 00:33:15 UTC <carter> ish
2013-08-27 00:33:41 UTC <carter> anyways, cool
2013-08-27 00:33:41 UTC <martingale> carter: I created a module called snug that did the job, but I feel that modifying Align to take an AlignOpt is cleaner
2013-08-27 00:34:39 UTC <byorgey> martingale: I left a comment.  I'm happy to continue discussing it in here.  The short verion is that this is rather tricky and I don't blame you for pulling your hair out.
2013-08-27 00:34:51 UTC <byorgey> and it's not just you being silly or missing something obvious.
2013-08-27 00:36:35 UTC <martingale> byorgey: That makes me fell better, I'll read your comments and see if I grok them. Let's both think about it some more and pick it up then : )
2013-08-27 00:36:44 UTC <byorgey> sounds good =)
2013-08-27 00:38:58 UTC <martingale> byorgey: By the way, does there exist anything in Diagrams which is Enveloped but not Traced or vice versa?
2013-08-27 00:39:45 UTC <byorgey> martingale: yes, Envelopes are not Traced and vice versa =)
2013-08-27 00:40:12 UTC <byorgey> martingale: also, animations (i.e. Active Diagrams) are neither Enveloped nor Traced, but they are Alignable
2013-08-27 00:40:34 UTC <byorgey> that was actually the original motivating example that led me to split out Alignable into a separate class from Enveloped
2013-08-27 00:40:44 UTC <martingale> byorgey: Ah
2013-08-27 00:40:53 UTC <byorgey> originally all the alignX methods were just implemented directly in terms of Enveloped
2013-08-27 00:41:49 UTC <byorgey> this is why ideally the instance for  Alignable [b]  should only require  Alignable b, and not something like  Enveloped b
2013-08-27 00:41:58 UTC <byorgey> because if you have a list of animations...
2013-08-27 00:42:29 UTC <byorgey> apparently no one ever tried to align a list of animations so no one ever noticed
2013-08-27 00:42:56 UTC <martingale> byorgey: interesting
2013-08-27 00:42:56 UTC <byorgey> but aligning a list of animations is a perfectly reasonable thing to do.
2013-08-27 00:43:41 UTC <martingale> byorgey: I guess you could even alignBy bounding rect, although that's not very diagrams like.
2013-08-27 00:46:30 UTC <martingale> byorgey: Side Question: The semantics for traceP seem unnatural to me. If I say  traceP origin  (unitX # rotate 30 degrees) I would expect the point in the first quadrant. Wondering why you choose to do it the way you did?
2013-08-27 00:46:38 UTC <byorgey> yes, you could.  whether it's "diagrams like" is neither here nor there -- if that's what you want to do, diagrams should let you.
2013-08-27 00:47:32 UTC <byorgey> martingale: it's because I'm thinking of it like a ray tracer.  Usually with a ray tracer you're shooting a ray from somewhere outside an object and seeing the first place where it hits.
2013-08-27 00:48:22 UTC <byorgey> but if you shoot a ray starting from *inside* the object, the "first place it hits" is actually behind you.
2013-08-27 00:48:43 UTC <byorgey> (yes, I know you could make an argument for "the first place it hits" being in front of you no matter what, but mathematically things work out much nicer this way).
2013-08-27 00:49:04 UTC <martingale> byorgey: Ah, I see. But the consequence is that every time I want to replace envelopeP with traceP I have to negateV
2013-08-27 00:49:16 UTC <byorgey> right.
2013-08-27 00:49:57 UTC <byorgey> didn't we just add another function for doing something like that?  I seem to remember something along those lines... just a second..
2013-08-27 00:51:01 UTC <byorgey> martingale: ah, yes, use 'maxTraceP' instead of traceP
2013-08-27 00:51:05 UTC <byorgey> it does the negation for you
2013-08-27 00:52:50 UTC <martingale> byorgey: Seems like an odd name for it, I'll have to look at the source. Is that all maxTraceP does i.e. is it identical to traceP negateV?
2013-08-27 00:53:20 UTC <byorgey> martingale: it is so named because what it does is return the *furthest* (maximum) point in the given direction
2013-08-27 00:53:34 UTC <byorgey> but yes, it is defined as  maxTraceP = traceP . negateV
2013-08-27 00:54:02 UTC <martingale> byorgey: perfect!
2013-08-27 02:24:10 UTC <martingale> More things to do with arrows, a DFA accepting real numbers: https://raw.github.com/jeffreyrosenbluth/arrowheads/master/dfa.png
2013-08-27 02:33:29 UTC <fryguybob> martingale: Nice!
2013-08-27 02:34:38 UTC <fryguybob> Offsets are now working, I'll package it up tomorrow: http://www.cs.rochester.edu/u/ryates/temp/exampleC.pdf
2013-08-27 02:34:39 UTC <martingale> fryguybob: thanks, good night
2013-08-27 02:34:46 UTC <fryguybob> good night!
2013-08-27 02:34:52 UTC <carter> oooooo
2013-08-27 02:34:57 UTC <carter> those both look cool
2013-08-27 02:35:03 UTC <carter> whats the source for the dfa nodes?
2013-08-27 02:35:23 UTC <carter> fryguybob is theres source for your stuff?
2013-08-27 02:36:24 UTC <fryguybob> carter: It is based on this: https://gist.github.com/fryguybob/3969759 but updated for the latest stuff.  I'll have a pull request tomorrow.
2013-08-27 02:36:45 UTC <carter> huh
2013-08-27 11:09:06 UTC <yitz> i just created my first diagram. yay!
2013-08-27 11:09:25 UTC <yitz> but it contains a string of text, and the letters are very poorly spaced - they run into each other.
2013-08-27 11:09:54 UTC <yitz> i just used text "foobar" and then the usual primitives for scaling things, composing things, etc. and rendered as an svg
2013-08-27 11:10:26 UTC <yitz> in fact, it was this: square 10 # scaleY 0.4 # lw 1 `atop` text "Missing image"
2013-08-27 11:10:40 UTC <yitz> as an svg, this looks really awful
2013-08-27 11:10:45 UTC <yitz> what am i doing wrong?
2013-08-27 11:11:46 UTC <yitz> another question: what i really want is for the rectangle to be a border around the text. how do i say that?
2013-08-27 11:12:40 UTC <yitz> i tried using let t = text "blah" in square 1 # scaleX (width t + 2) # scaleY (height t + 2) but the types got really angry at me for that.
2013-08-27 11:13:26 UTC <ClaudiusMaximus> text support is a bit suboptimal (so far at least) as i understand it - http://projects.haskell.org/diagrams/manual/diagrams-manual.html#text
2013-08-27 11:13:55 UTC <ClaudiusMaximus> when types get angry i use `asTypeOf` to ensure things i'm getting properties from have unambiguous types
2013-08-27 11:14:24 UTC <yitz> ClaudiusMaximus: can you show me how to do that in my example?
2013-08-27 11:14:48 UTC <ClaudiusMaximus> let t = text "blah" in .... `asTypeOf` t
2013-08-27 11:15:30 UTC <yitz> ClaudiusMaximus: so the whole diagram must have the same type as just the text in order for that to work?
2013-08-27 11:16:01 UTC <ClaudiusMaximus> yitz: yes, otherwise the text might be ambiguous if you're just getting its width and height
2013-08-27 11:16:15 UTC <yitz> ok. i'll try it. thanks!
2013-08-27 11:16:28 UTC <ClaudiusMaximus> yitz: so you're constraining the type of t to be the same as the rest of the diagram
2013-08-27 11:16:45 UTC <yitz> so if I really want that text to look better, i guess i'll just have to lay it out letter by letter by hand :(
2013-08-27 11:16:58 UTC <ClaudiusMaximus> which backend are you using?
2013-08-27 11:17:03 UTC <yitz> svg
2013-08-27 11:17:39 UTC <ClaudiusMaximus> maybe this will help too http://hackage.haskell.org/package/SVGFonts 
2013-08-27 11:17:57 UTC <yitz> ah ok thanks!
2013-08-27 11:24:15 UTC <byorgey> yitz: cool!
2013-08-27 11:24:19 UTC <byorgey> yitz: yes, use SVGFonts for nice text
2013-08-27 11:25:17 UTC <byorgey> yitz: built-in text objects actually take up no space, so  height (text "blah") == 0  etc.
2013-08-27 11:25:32 UTC <ClaudiusMaximus> heh, it only uses IO for something that could probably be pure?
2013-08-27 11:25:42 UTC <byorgey> ClaudiusMaximus: hmm?
2013-08-27 11:26:13 UTC <ClaudiusMaximus> http://hackage.haskell.org/packages/archive/SVGFonts/1.3.0.2/doc/html/src/Graphics-SVGFonts-ReadPath.html#pathFromString
2013-08-27 11:26:48 UTC <byorgey> oh, heh, yeah, that is strange
2013-08-27 11:26:57 UTC <byorgey> jbracker might have fixed that, I'm not sure
2013-08-27 11:27:02 UTC <yitz> oh hi byorgey. up late or up early?
2013-08-27 11:27:13 UTC <byorgey> there are some pending improvements to SVGFonts that we haven't released yet
2013-08-27 11:27:39 UTC <byorgey> yitz: early, though this is not even that early for me (I have a two-year-old =)
2013-08-27 11:27:53 UTC <jbracker> byorgey: ClaudiusMaximus: Yes I fixed that up
2013-08-27 11:28:05 UTC <jbracker> pathFromString is pure, at least in my repo
2013-08-27 11:28:08 UTC <byorgey> awesome, I thought so
2013-08-27 11:28:09 UTC <yitz> byorgey: ha! i know the feeling. in the end, you'll look back on this and understand that you enjoyed it.
2013-08-27 11:28:15 UTC <jbracker> though I only moved the IO up one layer
2013-08-27 11:28:23 UTC <byorgey> yitz: oh, don't get me wrong, I am thoroughly enjoying it =)
2013-08-27 11:29:09 UTC <yitz> where is the origin of textSVG x? and is the bounding box good by default?
2013-08-27 11:29:32 UTC <yitz> (the docs don't make either of those things clear, and they probably should.)
2013-08-27 11:29:43 UTC <yitz> docs = haddock
2013-08-27 11:30:26 UTC <ClaudiusMaximus> jbracker: cool
2013-08-27 11:30:26 UTC <jbracker> the change should get into SVGFonts as soon as I submit the font embedding code
2013-08-27 11:30:35 UTC <byorgey> yitz: ah, you're right, we could make those things clearer.  Can you file a feature request at https://github.com/diagrams/SVGFonts/issues ?
2013-08-27 11:31:01 UTC <jbracker> THe bounding box is from the top border to the bottom border of the text
2013-08-27 11:31:05 UTC <byorgey> and any other things you notice.  I want diagrams to have awesome documentation.
2013-08-27 11:31:22 UTC <byorgey> I'm guessing for textSVG the origin is centered?
2013-08-27 11:31:33 UTC <jbracker> if you write down what is missing I can add that stuff
2013-08-27 11:31:52 UTC <jbracker> actually I think its basline left oriented
2013-08-27 11:31:53 UTC <yitz> ah i see yes the origin part is clear - i missed that textSVG is a version of textSVG', not textSVG_.
2013-08-27 11:32:09 UTC <byorgey> yitz: if you didn't see it at first, then it isn't clear =)
2013-08-27 11:32:39 UTC <yitz> so i should hope that the origin is at the center like textSVG'
2013-08-27 11:32:59 UTC <jbracker> wait I can check on that.
2013-08-27 11:33:36 UTC <jbracker> textSVG_ is basline left oriented
2013-08-27 11:33:56 UTC <yitz> byorgey: i guess. maybe the issue here is that textSVG' and textSVG_ are not exactly the most mnemonic names
2013-08-27 11:34:06 UTC <byorgey> they aren't, it's true
2013-08-27 11:34:45 UTC <byorgey> I'm happy to rename them.
2013-08-27 11:34:54 UTC <jbracker> textSVG' is centered and textSVG is defined in terms of textSVG'
2013-08-27 11:35:12 UTC <yitz> jbracker: right, i see that now. thanks.
2013-08-27 11:36:10 UTC <byorgey> ACTION is off for a bit, back in 2hrs or so
2013-08-27 11:37:07 UTC <yitz> the nicest interface would be similar to built-in text - just text "blah" to get some text with all the defaults, then transformations to specify more, like most things in diagrams.
2013-08-27 11:37:14 UTC <jbracker> byorgey: Then you will miss the weekly meetup in 20 minutes
2013-08-27 11:37:31 UTC <yitz> it's weird that the simplest interface, textSVG, requires you to stroke it.
2013-08-27 11:38:44 UTC <jbracker> yitz: Well, it's not that big of a burden ;)
2013-08-27 11:38:53 UTC <yitz> agreed
2013-08-27 11:39:50 UTC <yitz> jbracker: looks to me that this library should probably become the default at some point and replace what is now "built-in text".
2013-08-27 11:41:03 UTC <jbracker> yitz: It has a lot of potential but there are major donwsides.
2013-08-27 11:41:30 UTC <jbracker> 1. It not very performant. Rendering paths of strings is magnitudes slower then rendering text natively
2013-08-27 11:41:57 UTC <jbracker> 2. You loose text support in output. e.g. you can't select text in PDFs or SVGs anymore
2013-08-27 11:42:24 UTC <jbracker> 3. The output is huge, because every character path is embedded
2013-08-27 11:43:56 UTC <yitz> jbracker: i see. otoh, at least in the svg backend, "built-in text" seems totally useless, so you're not really losing any of those 3.
2013-08-27 11:44:53 UTC <jbracker> Why does it seem totally useless? I still see all three problems present in the SVG backend
2013-08-27 11:46:02 UTC <jbracker> in PNG 2 and 3 are not a concern anymore, but 1 is still a major breakdown
2013-08-27 11:46:03 UTC <yitz> when i just say text "blah" and render it to svg, the glyphs are so badly spaced to make the text almost illegible, and certainly nothing close to good enough to usable for anything
2013-08-27 11:46:38 UTC <jbracker> yitz: Really? I did not notice things like that yet
2013-08-27 11:46:45 UTC <jbracker> yitz: What viewer are you using?
2013-08-27 11:47:11 UTC <yitz> so unless there's something obvious i'm doing wrong (i'm a complete diagrams newbie), there is in practice no text in svg diagrams without SVGFonts.
2013-08-27 11:47:26 UTC <yitz> jbracker: imagemagick
2013-08-27 11:47:36 UTC <jbracker> well there is the text primitive
2013-08-27 11:47:45 UTC <jbracker> but there are no metrics for that
2013-08-27 11:48:06 UTC <jbracker> I you chromium, I did not notice that kind of issue before
2013-08-27 11:48:13 UTC <jbracker> use
2013-08-27 11:48:23 UTC <yitz> so maybe it's an imagemagick issue then
2013-08-27 11:48:23 UTC <ClaudiusMaximus> i had misc bad issues with imagemagick and svg, if i want to be sure what it looks like i'll use a browser or rsvg
2013-08-27 11:48:32 UTC <yitz> rsvg?
2013-08-27 11:48:44 UTC <ClaudiusMaximus> commnad line svg -> png
2013-08-27 11:49:02 UTC <martingale> carter: dfa code: It's kind of ugly because I do a lot of positioning by hand. It also uses the Arrow stuff in the same repo: https://github.com/jeffreyrosenbluth/arrowheads/blob/master/FiniteAutomata.hs
2013-08-27 11:49:05 UTC <jbracker> I would use chromium or opera both have fairly good svg support
2013-08-27 11:49:05 UTC <ClaudiusMaximus> which kinda misses the point, but it's handy for testing compatibility
2013-08-27 11:49:14 UTC <yitz> aha. ok i'll try that. i assumed that imagemagick would do something reasonable, because it does for most things.
2013-08-27 11:50:19 UTC <yitz> jbracker: i actually can't use an svg for what i'm doing at the moment. i just assumed that the svg backend is the most natural way to render a diagram, and then i can easily go from that to anything else i need.
2013-08-27 11:50:51 UTC <jbracker> yitz: As natural as the cairo or pdf backend
2013-08-27 11:52:26 UTC <yitz> forget cairo, too messy a dependency. pdf is very specialized - usually won't be useful either. PostScript could be OK, but it's based on a page, which most often isn't what you want.
2013-08-27 11:53:03 UTC <yitz> svg seems to have the exact semantics of what diagrams is trying to do, and it's a very generally useful format.
2013-08-27 11:54:08 UTC <yitz> but yeah, a shame that imagemagick's support for text in svg is so bad.
2013-08-27 11:54:15 UTC <jbracker> well SVG is the standard backend afaik.
2013-08-27 11:56:24 UTC <jbracker> I think there are some good pdf/eps to png converters around
2013-08-27 11:59:13 UTC <yitz> eps is one of those formats with a long and checkered history to it.
2013-08-27 12:00:12 UTC <yitz> and pdf is usually a document with pages, so renerers would tend to be designed around that model, not as a format for just an image.
2013-08-27 12:00:25 UTC <fryguybob> yitz: With great power comes great responsibility.
2013-08-27 12:00:30 UTC <yitz> svg is the way to g imho
2013-08-27 12:00:35 UTC <yitz> fryguybob: :)
2013-08-27 12:00:43 UTC <yitz> *go
2013-08-27 12:01:16 UTC <fryguybob> yitz: EPS does not support transparency also.
2013-08-27 12:19:29 UTC <yitz> hmm imagemagick *is* using rsvg. i installed the rsvg binary, and it give the exact same poor result.
2013-08-27 12:19:57 UTC <yitz> must be some problem with the default font for rsvg on ubuntu.
2013-08-27 12:22:00 UTC <yitz> jbracker: anyway, even with those 3 disadvantages for SVGFonts, i think the lack of any meaningful bounding box is also a huge disadvantage for built-in text.
2013-08-27 12:22:48 UTC <jbracker> yitz: No arguments about that. That is exactly why I use it
2013-08-27 12:25:24 UTC <yitz> jbracker: and as we have seen, with built-in text you are at the mercy of all kinds of font defaults and configurations for your platform.
2013-08-27 12:25:30 UTC <yitz> jbracker: overall i'm ready to vote for using SVGFonts as a default and provide a hopefully improved interface to native fonts as an alternative.
2013-08-27 12:27:20 UTC <jbracker> In general I like it a lot too but I still see the issues and that makes me hesistant
2013-08-27 12:29:43 UTC <jbracker> just to give you a feel for the performance issues we are talking about: I am working on charts backends. Charts usually do not contain much text but still: pure cairo 3 seconds, diagrams with SVGFonts 1 minute for rendering 20 charts
2013-08-27 12:32:55 UTC <yitz> jbracker: yeah i noticed the performance issue too.
2013-08-27 12:34:10 UTC <yitz> jbracker: if my problem with native fonts is rare, then i agree. but if it's common - bad performance still beats not usable at all, especially when you also get a lot of other advantages for the price.
2013-08-27 12:36:01 UTC <jbracker> yitz: Yes, indeed. Thats why I use it ;)
2013-08-27 14:06:38 UTC <fryguybob> I think I'm going to go with the name offsetTrail for building a trail offset to the right.  I need a name for the function that takes a trail and builds the loop as though it had been stroked.  Any ideas?
2013-08-27 14:15:01 UTC <fryguybob> I would like to use  strokeTrail  but I don't want to add confusion with stroke.
2013-08-27 14:30:21 UTC <byorgey> fryguybob: yeah, strokeTrail does not seem like a good name for that
2013-08-27 14:30:52 UTC <byorgey> since at the moment we are using the term "stroke" to refer to turning some trail-like thing into a diagram.
2013-08-27 15:28:50 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14cb9a1d3 http://travis-ci.org/diagrams/active/builds/10672512 The build has errored.
2013-08-27 16:20:12 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14a38c940 http://travis-ci.org/diagrams/active/builds/10674835 The build has errored.
2013-08-27 16:26:04 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14e60ecdb http://travis-ci.org/diagrams/active/builds/10675155 The build has errored.
2013-08-27 16:46:01 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14b112aa2 http://travis-ci.org/diagrams/active/builds/10676001 The build has errored.
2013-08-27 16:47:41 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14000e8bc http://travis-ci.org/diagrams/active/builds/10676140 The build has errored.
2013-08-27 17:20:58 UTC <carter> martingale thanks!
2013-08-27 17:35:26 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 145731ac5 http://travis-ci.org/diagrams/diagrams-lib/builds/10678347 The build passed.
2013-08-27 17:42:28 UTC <fryguybob> ACTION re-learns haddock for the nth time.
2013-08-27 17:42:58 UTC <fryguybob> Perhaps I should say "learns enough haddock to barely get by for the nth time."
2013-08-27 17:58:58 UTC <fryguybob> byorgey: Nice summary!
2013-08-27 18:59:54 UTC <byorgey> fryguybob: hehe (re: Haddock)
2013-08-27 19:02:10 UTC <fryguybob> byorgey: Speaking of haddock, I'm not sure why, but diagrams-haddock doesn't like my latest and was asking for TypeFamilies.  I added that as an enabled extension and it is happy for now.
2013-08-27 19:02:59 UTC <byorgey> fryguybob: I have relearned Haddock enough times that it has mostly stuck by now, so let me know if you run into trouble
2013-08-27 19:03:25 UTC <byorgey> fryguybob: ah, there are a few cases where haskell-src-exts is strict about extensions in ways that GHC is lax
2013-08-27 19:03:57 UTC <byorgey> i.e. technically syntax X is not valid Haskell 2010 but GHC allows it without enabling an extension because it's unambiguous and convenient
2013-08-27 19:04:03 UTC <fryguybob> byorgey: Ok, nothing else in lib broke, should I just push a change with that added?
2013-08-27 19:04:09 UTC <byorgey> sure
2013-08-27 19:41:18 UTC <fryguybob> docs: http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-08-27 19:43:46 UTC <carter> oooooo
2013-08-27 19:43:57 UTC <carter> pretty
2013-08-27 19:44:37 UTC <ClaudiusMaximus> nice!  could have done with that a few weeks ago, when i instead used loads of circles along a path :) Maybe i'll rewrite the code to use shiny new features
2013-08-27 19:45:48 UTC <fryguybob> ClaudiusMaximus: Great! Still a few details to finish, but it should be merged pretty soon.
2013-08-27 19:54:32 UTC <luite> fryguybob: you say that the degree of an offset curve increases, but is it even polynomial? i thought it wouldn't be since the offset of a point is a circle
2013-08-27 19:55:28 UTC <carter> fryguybob:  wikipedia (and luite) say a miter joint is something different http://en.wikipedia.org/wiki/Miter_joint 
2013-08-27 19:55:30 UTC <fryguybob> luite: I'm not sure if it is or not.  I mean that it can have more roots.
2013-08-27 19:55:48 UTC <fryguybob> carter: Yes.  Miter is not implemented yet, that is a place holder :D
2013-08-27 19:56:17 UTC <carter> though having a hing joint would be cool too!
2013-08-27 19:56:21 UTC <carter> *hinge
2013-08-27 19:59:45 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14c554e67 http://travis-ci.org/diagrams/diagrams-haddock/builds/10684138 The build has errored.
2013-08-27 20:01:34 UTC <fryguybob> :(
2013-08-27 20:11:15 UTC <carter> oh, thats at travis not at me
2013-08-27 20:11:16 UTC <carter> :)
2013-08-27 20:12:08 UTC <fryguybob> carter: oh, ha.  Yes, travis :(, always travis :(.
2013-08-27 20:12:22 UTC <carter> yeahâ¦ i'm on the fence about travis for what i'm doing
2013-08-27 20:20:37 UTC <byorgey> fryguybob: does offsetTrail give you a trail on the other side if you specify a negative radius?
2013-08-27 20:21:10 UTC <fryguybob> byorgey: Yeah, I forgot to  mention that in the docs.
2013-08-27 20:21:13 UTC <byorgey> ok
2013-08-27 20:21:54 UTC <byorgey> fryguybob: looks awesome, by the way =)
2013-08-27 20:21:57 UTC <fryguybob> negative radius in expand has no meaning (that I can think of) and probably does something strange.
2013-08-27 20:23:03 UTC <fryguybob> I also haven't done anything special when given a loop.  I've assumed lines for the input.  That will have to change and be documented.
2013-08-27 20:23:23 UTC <byorgey> hehe, might as well just take the absolute value of the radius for expand
2013-08-27 20:23:44 UTC <byorgey> ah, right, I was going to ask about loops too but then I forgot =)
2013-08-27 20:23:46 UTC <fryguybob> Yeah.  Though it might make some sense for loops.
2013-08-27 20:23:59 UTC <fryguybob> (a negative value in expand that is)
2013-08-27 20:24:21 UTC <byorgey> hmm, what would it mean for loops?
2013-08-27 20:24:52 UTC <fryguybob> Humm, for a loop you should get a path.
2013-08-27 20:25:05 UTC <byorgey> so offsetTrail on loops makes sense.  However, for expandTrail ... right, exactly =)
2013-08-27 20:26:04 UTC <byorgey> so maybe there should be separate functions expandLine and expandLoop?
2013-08-27 20:26:20 UTC <byorgey> or maybe we should just make the type  expandTrail :: ... Located (Trail R2) -> Path R2
2013-08-27 20:27:04 UTC <byorgey> not sure which is best
2013-08-27 20:36:16 UTC <fryguybob> byorgey: Yeah.  The only reason for a path is to get a hole.  We could fill the whole region and have -r be the hole
2013-08-27 20:55:23 UTC <byorgey> ah, I see.  Yes, I guess that's another option.  But then we lose the nice explanation that expandTrail is like stroking.
2013-08-27 20:55:48 UTC <byorgey> "it's like stroking... well, unless you stroke a loop, in which case you have to call this twice with different arguments and then stick the results together yourself"
2013-08-27 21:08:23 UTC <fryguybob> byorgey: Right.  I'll explore a bit and see if I find something that makes the most sense.
2013-08-27 21:08:53 UTC <fryguybob> byorgey: I'll probably end up adding a backend test for negative space fills in paths too.
2013-08-27 21:10:37 UTC <byorgey> fryguybob: don't we already have one?  The purple ring?
2013-08-27 21:11:39 UTC <byorgey> or did you mean something else?
2013-08-27 21:12:57 UTC <notdan> byorgey: awesome diagrams dispatch letter
2013-08-27 21:13:04 UTC <byorgey> notdan: thanks =)
2013-08-27 21:13:59 UTC <notdan> are you going to post it on your blog?
2013-08-27 21:17:52 UTC <byorgey> notdan: I don't know, I wasn't planning on it
2013-08-27 21:18:28 UTC <byorgey> what I need to post on my blog is an 0.7 announcement!
2013-08-27 21:32:31 UTC <fryguybob> byorgey: Oh, right, that one slipped my mind.
2013-08-27 21:39:06 UTC <byorgey> more tests are always good though
2013-08-28 00:31:49 UTC <byorgey> fryguybob: oh, I didn't realize you meant adding TypeFamilies to the enabled extensions in diagrams-haddock
2013-08-28 00:32:13 UTC <byorgey> you should just be able to enable TypeFamilies individually for whatever code it couldn't parse, can't you?
2013-08-28 00:42:56 UTC <fryguybob> byorgey: I tried that, but perhaps I didn't do it right.
2013-08-28 00:43:16 UTC <byorgey> OK, no worries
2013-08-28 00:43:17 UTC <fryguybob> byorgey: Does it have to be the first line in the code block?
2013-08-28 00:43:51 UTC <byorgey> yeah, LANGUAGE pragmas have to be at the beginning of any module
2013-08-28 00:43:54 UTC <byorgey> otherwise they are just comments
2013-08-28 00:44:23 UTC <byorgey> I'm off to watch a movie
2013-08-28 00:44:32 UTC <fryguybob> byorgey: Ok, I'll try again.  It could be that I just had some other parse error and it was just triggering HSE to think I was doing type family syntax.
2013-08-28 00:44:45 UTC <fryguybob> byorgey: What movie?
2013-08-28 01:23:00 UTC <fryguybob> byorgey: OOOooh, it was complaining about parsing the whole source file, not my code in the comments... sometimes I'm a little slow.
2013-08-28 01:31:50 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14c9cd2fc http://travis-ci.org/diagrams/diagrams-haddock/builds/10694764 The build has errored.
2013-08-28 02:34:17 UTC <fryguybob> Now with more miter: http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-08-28 02:39:23 UTC <carter> no hinged version?
2013-08-28 02:40:26 UTC <fryguybob> carter: Not at the moment.  We will have to extend the options to allow for custom joins and include that one there.  This matches the joins that all backend renderers support.
2013-08-28 02:40:37 UTC <carter> oh ok
2013-08-28 02:40:39 UTC <carter> still, awesome
2013-08-28 02:41:37 UTC <fryguybob> In the pattern making world we had a couple other joins that we cared about too, but they are too complicated for me to make without someone paying me :P
2013-08-28 02:41:59 UTC <carter> touche!
2013-08-28 02:42:04 UTC <carter> pattern making?
2013-08-28 02:42:24 UTC <fryguybob> CAD for things made out of fabric
2013-08-28 02:43:45 UTC <carter> links?
2013-08-28 02:43:47 UTC <carter> exmaples?
2013-08-28 02:45:42 UTC <fryguybob> Clothing, inflatables, bicycles, cars, airplanes, boats...
2013-08-28 02:45:56 UTC <carter> ok
2013-08-28 02:47:34 UTC <fryguybob> carter: http://en.wikipedia.org/wiki/File:Bundesarchiv_Bild_183-1987-0310-011,_Rostock,_Zuschnitt_per_Mikroelektronik.jpg
2013-08-28 02:48:00 UTC <carter> cool
2013-08-28 02:48:01 UTC <carter> thanks
2013-08-28 02:48:22 UTC <fryguybob> :P  The company I worked for was http://autometrix.com/
2013-08-28 02:50:30 UTC <fryguybob> carter: There is a cheesy marketing video of an early version of a product that I made here: http://www.youtube.com/watch?v=wdmV83RaGzs
2013-08-28 03:03:31 UTC <carter> watching now
2013-08-28 03:04:21 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 14e331852 http://travis-ci.org/diagrams/diagrams-lib/builds/10696461 The build passed.
2013-08-28 12:57:14 UTC <byorgey> fryguybob: re: diagrams-haddock, ah, no worries
2013-08-28 12:57:27 UTC <byorgey> it is a bit confusing since we do multiple passes with haskell-src-exts
2013-08-28 12:58:14 UTC <byorgey> fryguybob: the movie was Rain Man ... we only watched part of it, will finish it some other time.
2013-08-28 13:04:08 UTC <byorgey> *** hackagebot Chart-diagrams 1.0 - Diagrams backend for Charts.   =D
2013-08-28 13:16:26 UTC <fryguybob> Nice!
2013-08-28 13:17:29 UTC <fryguybob> byorgey: I figured there was an instance, I couldn't find the import for it though.  I think haddock should have an instances index that covers everything in the package.
2013-08-28 13:20:18 UTC <martingale> Is there a way to recover say a fill color (fc) from an object, or from a function hasStyle c => c -> c?
2013-08-28 13:26:22 UTC <fryguybob> martingale: Humm, I'll have to poke around a bit to figure that out.
2013-08-28 13:34:38 UTC <byorgey> martingale: first, you can recover a fill color from a Style using the 'getAttr' and 'getFillColor' functions:   fmap getFillColor . getAttr :: Style v -> Maybe SomeColor
2013-08-28 13:35:08 UTC <byorgey> martingale: second, if you have a function  f :: HasStyle c => c -> c, you can turn it into a Style by applying it to the empty style:  fmap getFillColor . getAttr $ f mempty
2013-08-28 13:35:57 UTC <byorgey> martingale: you cannot in general recover a fill color from objects which are instances of HasStyle.
2013-08-28 13:38:04 UTC <martingale> byorgey: I discovered an inconvenience in Arrows, the shaftStyle opt has type hasStyle c => c-> c and I need to get the shaft line color to use as the joint fill color.
2013-08-28 13:38:42 UTC <byorgey> martingale: why is that inconvenient?
2013-08-28 13:39:52 UTC <byorgey> makes sense to me
2013-08-28 13:39:59 UTC <martingale> byorgey: because I apply shaftStyle to the joint
2013-08-28 13:40:50 UTC <martingale> byorgey: and as is not shaftStyle need to include say # lc black # fc black even though the shaft is not filled
2013-08-28 13:41:18 UTC <martingale> *shaftStyle needs
2013-08-28 13:42:03 UTC <byorgey> martingale: that doesn't sound like a problem to me.  Extract a color from the  HasStyle c => c -> c  as I explained above, and then just apply it to the joint *before* the shaftStyle
2013-08-28 13:42:42 UTC <byorgey> attributes applied earlier override those applied later
2013-08-28 13:43:35 UTC <martingale> byorgey: Sorry I mis-read you response , I see that I can just grab the line color from f :: HasStyle ...
2013-08-28 13:44:41 UTC <byorgey> right, my first two comments were a positive answer to your second question, and my third was a negative answer to your first =)
2013-08-28 13:46:44 UTC <martingale> byorgey: great, thanks
2013-08-28 14:14:57 UTC <fryguybob> byorgey: For offsetTrail to be as useful as possible it should be clipping inside corners.  This can get tricky, but I think we can compromise and do something simple with a few assumptions.
2013-08-28 14:16:12 UTC <fryguybob> byorgey: The question is the timing of when we want to implement clipping?
2013-08-28 14:17:09 UTC <fryguybob> For the simple option we need bezier bezier intersection and trimming to a t-value
2013-08-28 14:21:12 UTC <fryguybob> We could make clipping an option in the OffsetOpts and not implement it now, but it should probably be the default.  So is it better to add a feature later or change a default (it doesn't make much sense for the default option to be a "not implemented yet" error).
2013-08-28 14:36:17 UTC <byorgey> haha, "you can use this new feature, but by default it is not implemented yet!" =)
2013-08-28 14:37:27 UTC <fryguybob> :D
2013-08-28 14:37:36 UTC <byorgey> I'd rather get this released and then turn to focus on clipping later
2013-08-28 14:37:51 UTC <byorgey> e.g. we may be able to use kuribas's work, etc.
2013-08-28 14:37:56 UTC <fryguybob> byorgey: Right
2013-08-28 14:38:07 UTC <byorgey> but it seems like that will be a nontrivial undertaking
2013-08-28 14:38:35 UTC <fryguybob> I was thinking that we might be able to avoid changing the join code and do a separate pass that when it comes to a self intersection "goes right".
2013-08-28 14:39:08 UTC <fryguybob> But that gives a different meaning to trails where the original trail self intersects.
2013-08-28 14:39:44 UTC <byorgey> oh, now that is an interesting issue as well =)
2013-08-28 14:40:45 UTC <fryguybob> I suppose if we can't find a "this works for everything option" we can provide several clipping methods.
2013-08-28 14:40:54 UTC <byorgey> e.g. if you have a trail that intersects itself a bunch and you call expandTrail, do you get a path with a bunch of components (one for each loop that is "inside") or just one?
2013-08-28 14:40:58 UTC <byorgey> I guess that should be an option.
2013-08-28 14:41:19 UTC <byorgey> yes, providing several methods seems to be "the diagrams way" =)
2013-08-28 14:41:25 UTC <fryguybob> byorgey: Yeah, it gets complicated rather quickly :D
2013-08-28 14:42:02 UTC <byorgey> Well, I will defer to you on this.  Do whatever you think is best.  I don't think it matters too much if the API ends up changing later, as long as we document it
2013-08-28 14:42:22 UTC <fryguybob> byorgey: I think you can phrase some sort of "niceness" criteria as how continuous the offset is as you grow r
2013-08-28 14:42:35 UTC <fryguybob> byorgey: Ok
2013-08-28 14:42:39 UTC <byorgey> makes sense
2013-08-28 14:45:16 UTC <fryguybob> byorgey: Also the example you gave might look the same filled with even/odd if it is clipped locally.
2013-08-28 14:47:51 UTC <byorgey> fryguybob: fair enough.  So it might not make a huge difference if you only want to draw it.  But it does make a difference if you want to compute with it.
2013-08-28 14:48:08 UTC <fryguybob> byorgey: Right.  I'll write up some ideas for different clipping options and think a little about loops as it is right now then make a pull request.
2013-08-28 14:48:29 UTC <byorgey> great!
2013-08-28 14:48:42 UTC <fryguybob> byorgey: When it gets complicated enough you probably want full "CGS" support anyway.
2013-08-28 14:48:54 UTC <byorgey> right.
2013-08-28 14:49:43 UTC <fryguybob> I don't know if you looked at the video that I linked to for carter, but there is a part where they are marking regions on patterns and on the hide.  For that we punted and just did CGS for everything.
2013-08-28 15:21:44 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14be24e33 http://travis-ci.org/diagrams/diagrams-lib/builds/10716843 The build was broken.
2013-08-28 15:37:09 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 141932d19 http://travis-ci.org/diagrams/diagrams-lib/builds/10717396 The build is still failing.
2013-08-28 15:45:30 UTC <travis-ci> [travis-ci] 13diagrams-lib/06arrows 14d27d3ed http://travis-ci.org/diagrams/diagrams-lib/builds/10717768 The build was fixed.
2013-08-28 16:00:47 UTC <martingale> byorgey: I want to start with a fresh environment, is there a way I can revoke my pull request and then issue a new one once I have coded up the align stuff?
2013-08-28 16:03:11 UTC <byorgey> martingale: yes, you can just click the "close" button on the bottom of the pull request page
2013-08-28 16:05:04 UTC <byorgey> martingale: incidentally, this sort of thing is one reason why it's usually a good idea to work on new features in a separate branch rather than in 'master'
2013-08-28 16:05:10 UTC <byorgey> much easier to throw away and start over =)
2013-08-28 16:06:06 UTC <martingale> byorgey: will that delete our discussion on the github page. I don't want to lose it?
2013-08-28 16:06:37 UTC <byorgey> martingale: no, it will not delete the discussion.  It will just mark the pull request as closed, not delete it
2013-08-28 16:07:30 UTC <byorgey> you can even link to the old discussion from your new pull request just by mentioning '#101' somewhere in the pull request
2013-08-28 16:07:36 UTC <martingale> byorgey: Great, I'll branch this time.
2013-08-28 16:08:39 UTC <byorgey> we used to use darcs which is SO much easier to work with than git.  But we switched to git because github is so fantastic.
2013-08-28 16:40:45 UTC <martingale> byorgey: Should I start with a fork or a clone?
2013-08-28 16:44:56 UTC <byorgey> martingale: doesn't really matter.  Since you have commit access you're welcome to just work on a branch in the main diagrams-lib repo instead of in your own fork
2013-08-28 16:45:15 UTC <byorgey> ah, it looks like that's what you are doing
2013-08-28 16:45:47 UTC <byorgey> you can open pull requests from one branch to another just the same as you can from a fork
2013-08-28 16:46:39 UTC <martingale> byorgey: I didn't know that. I need to refresh my git skills for the nth time : P
2013-08-28 16:49:39 UTC <martingale> byorgey: when I test should I also use local copies of Diagrams.Core and Diagrams.SVG or should I let cabal get them from the package list?
2013-08-28 16:50:25 UTC <byorgey> I don't think there have been any changes to those since the release so at the moment it's fine to just let cabal get them
2013-08-28 17:23:49 UTC <martingale> byorgey: actually, a lookupName function was added to core.
2013-08-28 17:30:06 UTC <byorgey> ah, so it was
2013-08-28 17:30:22 UTC <byorgey> sorry, I guess you have to use a local clone of diagrams-core then =)
2013-08-28 17:46:53 UTC <martingale> byorgey: when I push diagrams-lib from my local clone of the snug branch is there anything I need to do to make sure it pushes to the remote snug branch
2013-08-28 17:47:28 UTC <martingale> byorgey: sorry for all the git questions, I just don't want to screw anything up.
2013-08-28 18:11:22 UTC <byorgey> martingale: no worries, git is confusing, all git questions are welcome =)
2013-08-28 18:11:22 UTC <fryguybob> martingale: I'm not particularly well versed in git, but when I push to a branch that I am locally on I do   git push origin thebranchname
2013-08-28 18:11:58 UTC <byorgey> martingale: yes, git push origin snug   will push from your local snug branch to the remote snug branch (in particular, to the remote named 'origin')
2013-08-28 18:14:28 UTC <ClaudiusMaximus> i'm sure there are ways to get into hells with local branches named differently from remote branches, but generally i do "git checkout mybranch && git push myremote mybranch"
2013-08-28 18:15:08 UTC <byorgey> yep
2013-08-28 18:16:46 UTC <ClaudiusMaximus> (in particular i'm not sure whether  git push myremote mybranch  pushes the current branch or the named branch, the manual probably has some info)
2013-08-28 18:17:56 UTC <ClaudiusMaximus> you can set up remote tracking, which makes it easier, but i always forget the details
2013-08-28 18:19:12 UTC <byorgey> to set up remote tracking you pass -u the first time you push
2013-08-28 18:20:13 UTC <byorgey> according to the documentation, in 'git push myremote mybranch',  mybranch is the name of a *local* branch, and it will push to a remote branch of the same name
2013-08-28 18:20:32 UTC <ClaudiusMaximus> thanks, the -u should be useful :)
2013-08-28 18:20:36 UTC <fryguybob> Looks like the syntax for picking a source branch is "blah:..." so  git push origin localbranch:remotebranch
2013-08-28 18:20:47 UTC <byorgey> fryguybob: right.
2013-08-28 18:21:18 UTC <fryguybob> Which leads to  git push origin :blah  as the command to *delete* blah from the remote repo.
2013-08-28 18:21:24 UTC <byorgey> naturally.
2013-08-28 18:23:13 UTC <byorgey> so be careful with those stray colons.
2013-08-28 18:24:20 UTC <fryguybob> ACTION adds two factor authentication to his : key.
2013-08-28 18:25:06 UTC <ClaudiusMaximus> that could get annoying when processing lists in haskel
2013-08-28 18:25:08 UTC <ClaudiusMaximus> l
2013-08-28 18:26:00 UTC <fryguybob> Only when the command line starts with git :D
2013-08-28 18:26:49 UTC <ClaudiusMaximus> nice
2013-08-28 20:00:57 UTC <martingale> So: git push -u origin snug?
2013-08-28 20:01:31 UTC <martingale> and from then on just git push?
2013-08-28 20:21:08 UTC <byorgey> martingale: yes
2013-08-28 20:21:32 UTC <byorgey> martingale: with the latter you just have to be careful that you have the right branch currently checked out
2013-08-28 20:21:51 UTC <byorgey> which you can check with 'git branch'
2013-08-28 20:35:58 UTC <luite> bluh really tired
2013-08-28 20:38:58 UTC <luite> but talk far from donw
2013-08-28 20:39:00 UTC <luite> done
2013-08-28 20:42:15 UTC <luite> grmblz
2013-08-28 20:43:10 UTC <byorgey> you can do it =)
2013-08-28 20:43:52 UTC <byorgey> the trick is to intentionally work on the talk in order of most to least embarassing
2013-08-28 20:44:06 UTC <byorgey> i.e. "which is the part that would be most embarrassing if I didn't finish/fix it"
2013-08-28 20:44:25 UTC <byorgey> then finish/fix it.  lather, rinse, repeat.
2013-08-28 20:44:37 UTC <byorgey> I find it is way too easy to get caught up fixing the kerning or whatever
2013-08-28 22:05:31 UTC <carter> fryguybob whats CGS?
2013-08-28 23:13:49 UTC <fryguybob> carter: Constructive Solid Geometry.  In 2d that translates to being able to do union and intersection of 2d regions.
2013-08-28 23:13:57 UTC <carter> oh cool
2013-08-28 23:14:07 UTC <carter> speaking of cool: acowley is giving a fun talk right now!
2013-08-28 23:14:11 UTC <carter> you should watch the video later
2013-08-28 23:14:21 UTC <fryguybob> It sounded like it was going to be interesting.
2013-08-28 23:14:22 UTC <carter> once its avalable
2013-08-28 23:14:32 UTC <fryguybob> I'm glad to hear it will be in video
2013-08-28 23:22:13 UTC <carter> every nyc haskell event has a video
2013-08-28 23:22:17 UTC <carter> even my terrible talk :)
2013-08-28 23:22:23 UTC <carter> g2g
2013-08-28 23:22:25 UTC <carter> :)
2013-08-28 23:48:46 UTC <byorgey> fryguybob: I was going to suggest you should come to the NY Haskell users' group on Nov 20 when I will talk about diagrams.  But once again my grasp of geography has failed me.
2013-08-28 23:49:01 UTC <byorgey> it appears that New York City may be even farther from you than Philadelphia.
2013-08-29 00:08:51 UTC <fryguybob> byorgey: Yeah, it is pretty far away.  But we do actually have a reason to go to NYC (beyond seeing you talk at NY Haskell) MoMath!
2013-08-29 00:29:13 UTC <byorgey> oh, right!  I would love to visit MoMath
2013-08-29 00:29:29 UTC <byorgey> maybe I'll see if I can work in a visit in the afternoon before my talk.
2013-08-29 00:31:16 UTC <fryguybob> byorgey: I hear you might be coming a bit closer to us in Houghton too?
2013-08-29 00:31:33 UTC <byorgey> yes! =)  Not sure when yet
2013-08-29 00:32:01 UTC <byorgey> sadly it looks like it will just be me
2013-08-29 00:32:14 UTC <fryguybob> :( we will take what we can get :D
2013-08-29 01:39:10 UTC <byorgey> ACTION just accidentally called cubicSpline on an infinite list of points
2013-08-29 01:39:15 UTC <byorgey> had to hard reboot =(
2013-08-29 01:54:55 UTC <fryguybob> byorgey: woww
2013-08-29 01:55:58 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14b0a34f3 http://travis-ci.org/diagrams/diagrams-doc/builds/10736672 The build has errored.
2013-08-29 02:36:14 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 147cf57ca http://travis-ci.org/diagrams/diagrams-doc/builds/10737399 The build has errored.
2013-08-29 02:46:21 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 142452b8a http://travis-ci.org/diagrams/diagrams-doc/builds/10737452 The build has errored.
2013-08-29 03:40:54 UTC <martingale> byorgey: fryguybob: Let me know if you want to visit MoMath the day of the nyc haskell event, I know the president Glen Whitney and perhaps i can set something up.
2013-08-29 10:10:48 UTC <jbracker> byorgey: You there?
2013-08-29 10:16:10 UTC <jbracker> or anybody that worked on diagrams-svg
2013-08-29 10:16:11 UTC <jbracker> ?
2013-08-29 10:18:59 UTC <fryguybob> jbracker: I know a little about it.
2013-08-29 10:22:30 UTC <jbracker> fryguybob: I am working on embedding SVG fonts in the SVG output of diagrams. For that to work I need to write custom stuff to the "defs" element. I altered it to insert the defs element with custom content, but now I am unsure where I should supply the stuff I want to write. The obvious location would be in the Options but if I add it there everybody who uses the backend would have to alter their code by supplying something they will 
2013-08-29 10:22:30 UTC <jbracker> probably never use
2013-08-29 10:24:53 UTC <jbracker> afk for an hour, happy to hear suggestions anyway
2013-08-29 10:25:05 UTC <fryguybob> jbracker: Ok
2013-08-29 10:44:55 UTC <fryguybob> jbracker: Where is this thing that needs to be supplied generated?
2013-08-29 10:57:30 UTC <travis-ci> [travis-ci] 13monoid-extras/06master 147a3072d http://travis-ci.org/diagrams/monoid-extras/builds/10749093 The build passed.
2013-08-29 11:24:19 UTC <jbracker> fryguybob: In svg fonts
2013-08-29 11:24:49 UTC <jbracker> If I would generate it in the SVG backend I would need to add SVGFonts as a dependency
2013-08-29 11:27:01 UTC <byorgey> for what it's worth, I am OK with adding SVGFonts as a dependency of diagrams-svg, if that ends up being the best way to do it
2013-08-29 11:28:22 UTC <byorgey> jbracker: I don't have any time this morning, but I might be able to take a look this afternoon
2013-08-29 11:28:38 UTC <byorgey> martingale: cool, thanks for the offer!  I'll let you know.
2013-08-29 11:29:38 UTC <byorgey> jbracker: are you talking about the Options record of diagrams-svg?
2013-08-29 11:29:44 UTC <jbracker> yes
2013-08-29 11:30:16 UTC <jbracker> that would be the best way in my optinion, but it would mean people would have to adept their code to that change
2013-08-29 11:30:22 UTC <byorgey> actually I doubt very many people directly use Options
2013-08-29 11:30:28 UTC <byorgey> so most people would not have to change their code
2013-08-29 11:30:40 UTC <jbracker> so then I will just add an entry and use it that way?
2013-08-29 11:30:47 UTC <byorgey> most people will be using defaultMain or renderSVG
2013-08-29 11:30:54 UTC <byorgey> sure, I think that is fine
2013-08-29 11:31:04 UTC <jbracker> then I will do it like that
2013-08-29 11:31:36 UTC <byorgey> sounds good to me.
2013-08-29 11:32:41 UTC <jbracker> ok, thanks!
2013-08-29 11:46:57 UTC <luite> byorgey: oh the kerning is totally wrong yes!
2013-08-29 11:47:24 UTC <luite> simonm is giving a talk atm
2013-08-29 11:51:01 UTC <luite> lots of sad animals
2013-08-29 11:58:43 UTC <fryguybob> Sad animals?
2013-08-29 12:02:59 UTC <luite> pictures of sad animals, because the original idea wasn't very good
2013-08-29 12:03:09 UTC <luite> and he's explaining some concurrency monad now
2013-08-29 12:03:23 UTC <luite> which is better, since there haven't been sad animals for more than 5 mins now
2013-08-29 12:09:38 UTC <fryguybob> Oh, good :D
2013-08-29 12:10:45 UTC <luite> he's talking about how Applicative and this Monad work at facebook to get parallel data queries
2013-08-29 12:29:13 UTC <notdan> :D
2013-08-29 12:29:14 UTC <notdan> have you gave your talk alredy luite?
2013-08-29 13:00:58 UTC <jbracker> byorgey: fryguybob: I just discovered that text alignment is ignored by the SVG backend. Should I fix this along the way or hand in a separate patch now?
2013-08-29 13:08:55 UTC <fryguybob> jbracker: I thought that got fixed, but I'm probably not remembering correctly.
2013-08-29 13:11:30 UTC <jbracker> I'll push a separate patch for this
2013-08-29 13:12:16 UTC <fryguybob> jbracker: Ok
2013-08-29 13:13:16 UTC <fryguybob> jbracker: Ah, the ticket is still open: https://github.com/diagrams/diagrams-svg/issues/17
2013-08-29 13:13:41 UTC <jbracker> I'll fix that ;)
2013-08-29 13:15:16 UTC <jbracker> fryguybob: The alignments given in BoxAlignedText have what kind of scale?
2013-08-29 13:15:37 UTC <jbracker> left [0,1] right or left [-1, 1] right ?
2013-08-29 13:20:34 UTC <jbracker> I found it
2013-08-29 14:35:55 UTC <haasn> byorgey: Hey; Deg/Turn really shouldn't derive a Floating instance
2013-08-29 14:36:05 UTC <haasn> instead you should implement sin/cos/tan/pi properly imo
2013-08-29 14:46:17 UTC <fryguybob> haasn: It came up before, the result of trig functions should not be an angle.
2013-08-29 14:47:18 UTC <haasn> oh, yeah; I see where you're coming from, the output is a Deg too in that model
2013-08-29 14:47:57 UTC <haasn> nvm then :)
2013-08-29 14:48:06 UTC <fryguybob> Really it took a while for this to even come up because you do not generally use trig with diagrams and instead use things like rotateBy
2013-08-29 14:48:58 UTC <fryguybob> But perhaps there isn't anything in Floating that makes sense on angles.
2013-08-29 15:37:54 UTC <martingale> Argh! I screwed up git again, I meant to push to the snug branch
2013-08-29 15:38:04 UTC <fryguybob> :D
2013-08-29 15:38:21 UTC <martingale> fryguybob: how do I undo this?
2013-08-29 15:40:40 UTC <martingale> Here is what I did: 1. created a snug branch on github. 2. cloned to local machine. 3. made changes. But on my local machine I only had a master branch so i just pushed it. Not sure how to tell it to push to snug remote branch
2013-08-29 15:41:01 UTC <carter> i'm getting some crazy linker errors from builiding lens and its deps, so i can't play with the new chart lib yet :(
2013-08-29 15:43:51 UTC <martingale> Is it - git push origin/snug?
2013-08-29 15:43:56 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1486a1df6 http://travis-ci.org/diagrams/diagrams-lib/builds/10759768 The build passed.
2013-08-29 15:46:03 UTC <fryguybob> martingale: I'm not sure :( But the build passed :D.  I don't have time now, but I can look into it in a bit.
2013-08-29 15:46:30 UTC <martingale> fryguybob: should i try pushing it to origin/snug as well?
2013-08-29 15:48:04 UTC <notdan> martingale: it's git push origin snug
2013-08-29 15:48:31 UTC <martingale> notdan: I have not local branch called snug
2013-08-29 15:48:36 UTC <martingale> *no
2013-08-29 15:48:48 UTC <notdan> and you can undo the pushing to master branch thing by either reverting the commits and pushing the change or by rebasing
2013-08-29 15:48:59 UTC <notdan> well, you can make one 'git checkout -b snug'
2013-08-29 15:50:26 UTC <martingale> notdan: I'll try to checkout -b snug and push it. maybe I'll wait for byorgey to see if he wants to revert 
2013-08-29 15:55:33 UTC <fryguybob> martingale: to push from local master to origin snug you do  git push origin master:snug
2013-08-29 15:56:01 UTC <martingale> fryguybob: thx
2013-08-29 16:02:32 UTC <travis-ci> [travis-ci] 13diagrams-lib/06snug 1423d44e5 http://travis-ci.org/diagrams/diagrams-lib/builds/10760521 The build passed.
2013-08-29 16:21:00 UTC <carter>  yay, diagram-charts is installed!
2013-08-29 16:22:40 UTC <fryguybob> martingale: I think that put master back to where it should be.
2013-08-29 16:23:07 UTC <martingale> fryguybob: Thanks, if you get a chance check out the snug branch
2013-08-29 16:24:00 UTC <fryguybob> martingale: Snug is at "added back align.hs to TwoD" is that right?
2013-08-29 16:59:04 UTC <byorgey> martingale: hehe, oops, no worries =)
2013-08-29 16:59:07 UTC <martingale> fryguybob: yes, it's Align, TwoD.Align and Test/Snugtest
2013-08-29 16:59:36 UTC <martingale> byorgey: yeah, fryguybob fixed it. Are you still seeing comments to closed pull request 101
2013-08-29 16:59:40 UTC <byorgey> martingale: in the future, what I usually do is create a local branch first (with checkout -b) and then do  git push -u origin localbranch
2013-08-29 16:59:45 UTC <byorgey> martingale: yes
2013-08-29 17:00:00 UTC <byorgey> martingale: that automatically creates a corresponding branch on the remote repo
2013-08-29 17:00:24 UTC <martingale> byorgey: OK, I'll follow that workflow in the future
2013-08-29 17:00:37 UTC <martingale> byorgey: checkout the snug branch when you have some time
2013-08-29 17:00:41 UTC <byorgey> will do.
2013-08-29 17:01:02 UTC <byorgey> I hope to have some time tonight.  But I might not have time until Saturday.
2013-08-29 17:01:23 UTC <byorgey> this has been a busy week.
2013-08-29 17:01:52 UTC <byorgey> haasn: hmm, you're totally right about the Floating instances for Deg and Turn
2013-08-29 17:01:59 UTC <byorgey> what do we lose if we just get rid of them?
2013-08-29 17:02:05 UTC <haasn> (**)
2013-08-29 17:02:31 UTC <haasn> then again
2013-08-29 17:02:50 UTC <byorgey> why would you want to use (**) on an angle
2013-08-29 17:02:51 UTC <haasn> I'm not sure that even makes sense, for the same reasons as sin/cos
2013-08-29 17:02:54 UTC <haasn> yeah
2013-08-29 17:02:55 UTC <byorgey> right.
2013-08-29 17:02:59 UTC <haasn> âsqrtâ maybe? no idea
2013-08-29 17:03:03 UTC <byorgey> OK, let's kill those instances dead
2013-08-29 17:03:05 UTC <haasn> try it, check for build failures
2013-08-29 17:03:09 UTC <byorgey> right
2013-08-29 17:03:29 UTC <martingale> byorgey: I'll be away next Monday through Satrudary with limit internet access
2013-08-29 17:03:42 UTC <byorgey> martingale: OK
2013-08-29 17:06:07 UTC <martingale> byorgey: By the way at what point do we either merge in Arrow or revise it?
2013-08-29 17:06:25 UTC <byorgey> martingale: soon, I just haven't had a chance to look at it yet
2013-08-29 17:06:52 UTC <martingale> byorgey: No worries, I realize you busy. Are you teaching this semester?
2013-08-29 17:06:59 UTC <byorgey> martingale: most likely we will just merge it and then continue to refine it in the master branch
2013-08-29 17:07:25 UTC <martingale> byorgey: great : )
2013-08-29 17:07:44 UTC <byorgey> martingale: no, no teaching this semester, just trying to finish a PhD and take care of a 2-year-old =)
2013-08-29 17:08:40 UTC <martingale> byorgey: I've been there, I get it =)
2013-08-29 17:08:58 UTC <byorgey> right =)
2013-08-29 17:11:06 UTC <byorgey> haasn: looks like we should remove RealFloat as well.  What's your opinion on Real and RealFrac ?
2013-08-29 17:11:30 UTC <haasn> Real is benign, only has -> Rational
2013-08-29 17:11:45 UTC <haasn> tbh though I see calculations happening in Double
2013-08-29 17:11:48 UTC <haasn> eg. Deg $ sin x)
2013-08-29 17:12:22 UTC <byorgey> hmm?  Deg $ sin x  doesn't make much sense to me
2013-08-29 17:12:30 UTC <haasn> it was a nonsensical example
2013-08-29 17:12:34 UTC <haasn> sorry
2013-08-29 17:12:38 UTC <byorgey> ok =)
2013-08-29 17:13:00 UTC <haasn> but this shows why those instances aren't as important as they would be even if we needed sin etc.
2013-08-29 17:13:30 UTC <byorgey> right.  Well, I will leave them in, I don't think there's anything wrong with them
2013-08-29 17:13:59 UTC <byorgey> currently building everything including the user manual + gallery etc. to make sure we don't have any code which depends on those instances
2013-08-29 17:15:21 UTC <byorgey> I guess even the Floating instance for Rad is a bit bogus, because it returns an answer of type Rad
2013-08-29 17:16:28 UTC <byorgey> you know what, the FLOATING CLASS ITSELF IS BOGUS
2013-08-29 17:16:32 UTC <byorgey> =(
2013-08-29 17:21:47 UTC <fryguybob> byorgey: Yeah
2013-08-29 17:23:26 UTC <byorgey> so should I leave in the Floating instance for Rad, or take it out?
2013-08-29 17:23:35 UTC <byorgey> oh, but I guess we really do want pi
2013-08-29 17:23:52 UTC <byorgey> we just don't want all the trig functions
2013-08-29 17:24:33 UTC <fryguybob> We could make HasTau
2013-08-29 17:24:54 UTC <byorgey> hehe
2013-08-29 17:43:14 UTC <byorgey> SLOCCount says diagrams is worth half a million dollars!!
2013-08-29 17:43:59 UTC <fryguybob> Imagine what it will be worth when arrows hits master :D
2013-08-29 17:44:57 UTC <byorgey> you bet =)
2013-08-29 17:46:10 UTC <haasn> byorgey: put that on your resume!!!
2013-08-29 17:46:38 UTC <haasn> I wonder what the hell that metric is derived from
2013-08-29 17:46:50 UTC <haasn> (and I guess it's based on C/Java SLOCs, which are worth much less than Haskell SLOCs ;)
2013-08-29 17:47:22 UTC <byorgey> yeah, it tells you what model it's using, but you're right that it probably doesn't really apply =)
2013-08-29 17:48:12 UTC <byorgey> it estimates 4.1 person-years, which is about how long we've been working on this, but nowhere near full time.
2013-08-29 17:55:18 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14527403b http://travis-ci.org/diagrams/diagrams-lib/builds/10764727 The build passed.
2013-08-29 18:11:08 UTC <haasn> byorgey: doesn't matter as long as you get paid full-time :))
2013-08-29 18:20:58 UTC <carter> byorgey: i've a bit of rage about the numerical classes myself
2013-08-29 18:21:24 UTC <carter> some of the code i'll be releasing soon will have lots of comments on this
2013-08-29 18:58:25 UTC <byorgey> haasn: haha, oh man, do I ever wish I could get paid full-time to work on diagrams =)
2013-08-29 18:59:05 UTC <haasn> it doesn't seem too far off that a company could find use in this
2013-08-29 18:59:11 UTC <haasn> perhaps for educational purposes
2013-08-29 18:59:25 UTC <haasn> just build a pretty DSL on top of it so they don't have to use scary H
2013-08-29 19:00:16 UTC <byorgey> true, though I also don't really want to have a company telling me what to do with it =P
2013-08-29 19:13:04 UTC <carter> byorgey you could be like the luajit guy
2013-08-29 19:13:07 UTC <carter> but with pretty pictures!
2013-08-29 19:13:42 UTC <carter> wrangling the initial "sponsor shit"
2013-08-29 19:13:44 UTC <carter> *ship
2013-08-29 19:13:56 UTC <carter> might be a bit of work
2013-08-29 19:13:57 UTC <carter> but
2013-08-29 19:19:51 UTC <martingale> byorgey: At least a million
2013-08-29 19:22:14 UTC <carter> BIG DAATA DIAGRAMS
2013-08-29 19:22:15 UTC <carter> :)
2013-08-29 19:24:10 UTC <martingale> Talking about educational uses, at some point I want to write a package for use in illustrating high school geometry texts (paper and online)
2013-08-29 19:24:52 UTC <carter> ooo
2013-08-29 19:24:54 UTC <carter> that'd be cool
2013-08-29 19:25:09 UTC <carter> I was planning to use diagrams for some stuff a while ago, but then I got a bit side trackedâ¦ :(
2013-08-29 19:25:12 UTC <haasn> byorgey: you could work on proper 3d/4d backends already
2013-08-29 19:25:17 UTC <martingale> When my son was taking geometry I wrote an iPhone app for him listing all of the definitions and theorems he needed for proofs, but I never got around to making the diagrams because it was so time consuming.
2013-08-29 19:25:17 UTC <haasn> or 3d-to-2d projection
2013-08-29 19:25:23 UTC <haasn> equivalently, 4d-to-3d or 4d-to-2d
2013-08-29 19:25:24 UTC <carter> byorgey: btw: looks like i may be at ICFP!
2013-08-29 19:25:37 UTC <carter> martingale we now have ghci-ios too
2013-08-29 19:25:52 UTC <carter> that plus hpdf + webview might be a nice combo...
2013-08-29 19:26:05 UTC <martingale> carter: really, what is ghci-ios?
2013-08-29 19:26:10 UTC <carter> unless diagrams or one of its deps needs template haskell
2013-08-29 19:26:31 UTC <carter> www.reddit.com/r/haskell/comments/1lboh4/announcing_ghc_ios/
2013-08-29 19:26:44 UTC <martingale> carter: thanks, i'll  have a look
2013-08-29 19:26:59 UTC <carter> basically luke ianni + stepen Blackheath have gotten the GHC os x 2 ios cross compiler working reliably enough that
2013-08-29 19:27:05 UTC <carter> you can just use it
2013-08-29 19:27:13 UTC <carter> shoudl work with currently head
2013-08-29 19:27:21 UTC <carter> and definitely once 7.8 is tagged
2013-08-29 19:27:34 UTC <martingale> carter: wow! that's incredible.
2013-08-29 19:27:49 UTC <carter> you'll still need to ffi wrapp any IOS sdk stuff you want to use
2013-08-29 19:27:59 UTC <carter> and currently theres no Template haskell support
2013-08-29 19:28:05 UTC <martingale> carter: of course
2013-08-29 19:28:07 UTC <carter> brb in a bit
2013-08-29 19:28:15 UTC <martingale> carter: bye
2013-08-29 19:37:39 UTC <carter> back
2013-08-29 19:38:43 UTC <carter> martingale: lukexi hangs out on #haskell-mac if you want to ask him any questions
2013-08-29 19:38:47 UTC <carter> or ask on the reddit
2013-08-29 19:40:07 UTC <martingale> carter: good to know, I'm not quite ready to dust off Xcode. To many interesting things to learn about haskell
2013-08-29 19:40:31 UTC <carter> yeah, i think the xcode load for getting things to work is pretty simple now with luke's directions though
2013-08-29 19:41:58 UTC <martingale> It's too bad this wasn't available this past winter, I wrote a natural language parser for my son's calendar app in objective-c, it would have been so much nicer in haskell
2013-08-29 19:42:40 UTC <byorgey> carter: we do use TH
2013-08-29 19:42:46 UTC <carter> ach
2013-08-29 19:42:46 UTC <byorgey> via lens
2013-08-29 19:42:46 UTC <carter> ok
2013-08-29 19:43:41 UTC <byorgey> it would probably be not too bad to write all the lenses manually (or use TH once and then paste in the generated code)
2013-08-29 19:43:54 UTC <byorgey> if it ever becomes important/worth it.  But I'm not going to worry about it right now.
2013-08-29 19:44:16 UTC <martingale> What's the best place to start learning about TH
2013-08-29 19:44:30 UTC <carter> hrmm
2013-08-29 19:44:33 UTC <carter> well
2013-08-29 19:44:42 UTC <carter> TH also changes to be a bit awesomer in 7.8
2013-08-29 19:44:57 UTC <byorgey> martingale: generating diagrams for geometry (or any other sorts of math) sounds really cool
2013-08-29 19:44:58 UTC <carter> so there's actually two parts to "CURRENT" TH
2013-08-29 19:45:18 UTC <carter> theres template haskell, which lets you generate an AST and splice it in
2013-08-29 19:45:29 UTC <carter> and theres quasiquoters, which may generate an AST that you splice in
2013-08-29 19:45:49 UTC <martingale> byorgey: yeah, i've been thinking about it for a while. so many cool things to work on
2013-08-29 19:45:55 UTC <carter> heres some notes on the new TH stuff http://ghc.haskell.org/trac/ghc/wiki/TemplateHaskell/BlogPostChanges
2013-08-29 19:45:59 UTC <byorgey> martingale: indeed =)
2013-08-29 19:46:07 UTC <martingale> carter: thanks
2013-08-29 19:46:26 UTC <carter> 7.8 will have "typed expressions" macros
2013-08-29 19:46:40 UTC <carter> where you know the "type" of the expression that the generated AST will do
2013-08-29 19:46:47 UTC <carter> which is kinda like MetaML and stuff
2013-08-29 19:47:18 UTC <martingale> carter: Sounds like Paul Graham is involved
2013-08-29 19:47:20 UTC <carter> and then theres "LISP MACROS" style TH, which is current TH, but unlike current TH, will only check AST terms that actually get spliced in
2013-08-29 19:47:21 UTC <carter> nope
2013-08-29 19:47:31 UTC <carter> PG aint got nutting on this
2013-08-29 19:47:39 UTC <carter> i'm over simpliflying
2013-08-29 19:47:41 UTC <martingale> carter: just kidding :D
2013-08-29 19:48:08 UTC <carter> basically with TH in 7.6 and earlier, if i write an expression in a quasiquoter, it needs to refer to valid binders, even if I never splice that quoted ast in
2013-08-29 19:48:43 UTC <carter> so heres an example where I hit that problem
2013-08-29 19:49:05 UTC <carter> to make the llvm-base lib work with cabal 1.17 and newer while stilll being backwards compatible with older cabal
2013-08-29 19:49:06 UTC <carter> https://github.com/bos/llvm/blob/master/base/Setup.hs#L116-L144
2013-08-29 19:49:28 UTC <carter> the commented out part: https://github.com/bos/llvm/blob/master/base/Setup.hs#L116-L144 
2013-08-29 19:49:34 UTC <carter> is how the code would look with quasiquoters
2013-08-29 19:49:44 UTC <martingale> carter: Seems like that is a lot to TH
2013-08-29 19:49:46 UTC <carter> nope
2013-08-29 19:49:51 UTC <carter> this is tiny
2013-08-29 19:50:03 UTC <carter> but in 7.6 and older, quasiquoters check before they splice
2013-08-29 19:50:08 UTC <carter> so i couldn't use quasi quoters
2013-08-29 19:50:29 UTC <carter> so i had to instaed have the AST nodes constructed (and those aren't checked by GHC unless they get spliced in)
2013-08-29 19:50:29 UTC <martingale> carter: when will 7.8 come out
2013-08-29 19:50:39 UTC <carter> october
2013-08-29 19:50:45 UTC <carter> there may be an RC sooner
2013-08-29 19:50:47 UTC <carter> hopefully note
2013-08-29 19:50:50 UTC <carter> *not
2013-08-29 19:51:09 UTC <martingale> carter: awesome
2013-08-29 19:51:11 UTC <carter> theres a bunch of things that still need to get merged in and stuff that will help make the 7.8 release nice
2013-08-29 19:51:41 UTC <carter> and theres a lot of really really nice work thats pretty mature, but for  a variety of reasons wont land till 7.10 at the soonest
2013-08-29 19:52:15 UTC <carter> its really really easy to help out with ghc dev
2013-08-29 19:52:33 UTC <carter> when you hit a GHC bug, figure out how to reproduce it and report it 
2013-08-29 19:52:50 UTC <carter> sometimes its also good for people to randomly try and build ghc source for fun, 
2013-08-29 19:53:01 UTC <carter> because theres not that many configurations that the build servers test
2013-08-29 19:53:23 UTC <martingale> carter: Do you work, on ghc?
2013-08-29 19:53:42 UTC <carter> becuse someone has to, yes :)
2013-08-29 19:53:55 UTC <carter> i'm allegedly trying to do a wee haskell business, allegedly
2013-08-29 19:54:16 UTC <carter> i'm helping out with ghc because so few people do, and it makes a huge difference, even if you're only doing a teeny bit
2013-08-29 19:54:30 UTC <martingale> carter: that's great, hopefully when i'm a little less busy in a few months I'll get involved in ghc
2013-08-29 19:54:40 UTC <carter> theres some really really awesome people hacking on ghc
2013-08-29 19:54:45 UTC <martingale> carter: can i ask what your wee business is
2013-08-29 19:54:49 UTC <carter> wellposed.com
2013-08-29 19:55:04 UTC <carter> allegedly i have libraries i'm writing that i want to do a version zero release really really really soon for
2013-08-29 19:55:09 UTC <carter> ideally before ICFP
2013-08-29 19:56:28 UTC <martingale> carter: that looks really cool, will it include an analog of numpy/scipy/pandas
2013-08-29 19:56:38 UTC <carter> thats the idea
2013-08-29 19:56:44 UTC <carter> the initial release won't have that much stuff
2013-08-29 19:56:55 UTC <carter> but a starter subset that gives a path towards that
2013-08-29 19:56:56 UTC <carter> but nicer 
2013-08-29 19:57:00 UTC <carter> and hopefully faster
2013-08-29 19:57:22 UTC <carter> it all started with me wanting to write a ggplot2 analogue in haskell using diagrams
2013-08-29 19:57:35 UTC <carter> but then I realized i needed a good data frame (sort of like pandas)
2013-08-29 19:57:43 UTC <byorgey> carter: how many yaks down are you at the moment?
2013-08-29 19:57:46 UTC <byorgey> =)
2013-08-29 19:57:50 UTC <carter> then i realized that I also needed a good numerical computing latyer
2013-08-29 19:58:01 UTC <carter> well, i'm at the platonic base case yak
2013-08-29 19:58:04 UTC <martingale> carter: that sounds great, i'll put myself on the mailing list, i've used those python libraries quite a bit if you ever want to get another perspective
2013-08-29 19:58:09 UTC <byorgey> carter: awesome =)
2013-08-29 19:58:15 UTC <carter> martingale thanks!
2013-08-29 19:58:30 UTC <carter> i did a "i'm going to do a release soon" email a few weeks ago
2013-08-29 19:58:36 UTC <carter> martingale awesome
2013-08-29 19:59:04 UTC <carter> martingale: honestly just having lots of people trying things out, trying to write out examples and help with documentation and identify pain points in the api 
2013-08-29 19:59:05 UTC <carter> will be huge
2013-08-29 19:59:22 UTC <martingale> carter: I'm in
2013-08-29 19:59:54 UTC <carter> also the initial api will only be a sort of "power users" api, theres still going to need to be a "simpler, but less aweesome"  api later
2013-08-29 20:00:10 UTC <martingale> carter: understood
2013-08-29 20:00:12 UTC <carter> you can also lurk on #haskell-llvm and #haskell-numerics to hear about stuff as i say it
2013-08-29 20:00:23 UTC <martingale> ok
2013-08-29 20:00:31 UTC <carter> so i dont' spam diagrams too much :)
2013-08-29 20:00:53 UTC <carter> (i'm not using llvm yet, but that the path i'll be taking at some point after the initial release)
2013-08-29 20:02:17 UTC <carter> but yeah: basically haskell should have a nice "good default" numerical substrate
2013-08-29 20:03:45 UTC <martingale> carter: yes, I'm interested in seeing how you deal with the trade offs of using immutable data structures
2013-08-29 20:03:51 UTC <carter> oh
2013-08-29 20:03:52 UTC <carter> hehe
2013-08-29 20:03:56 UTC <carter> BOTH is the answer
2013-08-29 20:04:15 UTC <carter> it winds up being possible to support both mutable and immutable ops
2013-08-29 20:04:46 UTC <martingale> carter: I guess I'll have to see it, to understand how it works, i look forward to it.
2013-08-29 20:04:52 UTC <carter> and in some backendsyeah
2013-08-29 20:04:57 UTC <carter> theres some complicated bits
2013-08-29 20:05:08 UTC <carter> so one design novelty
2013-08-29 20:05:15 UTC <carter> is making it possible to reason about memory locality
2013-08-29 20:05:21 UTC <carter> explicitly
2013-08-29 20:05:24 UTC <carter> with the types to hlep
2013-08-29 20:05:34 UTC <martingale> carter: hmm
2013-08-29 20:05:50 UTC <carter> because normally you have "heres the voodoo fast code"
2013-08-29 20:05:56 UTC <carter> which does all sorts of crazy shuffling
2013-08-29 20:06:01 UTC <carter> and you can't understand why
2013-08-29 20:06:22 UTC <carter> unless you have the locality (contigious vs not) and layout (row major, column major, blocked, etc) explicit
2013-08-29 20:06:23 UTC <martingale> carter: yes, i've seen some of that type of code
2013-08-29 20:07:37 UTC <carter> we can switch this to #haskell-llvm or #haskell-numerics if you want to ask more
2013-08-29 20:07:48 UTC <carter> i don't want to spam diagrams too much :)
2013-08-29 20:08:20 UTC <carter> (and i'm happy to try to explain more)
2013-08-29 20:08:23 UTC <martingale> carter: yeah we have already taken up a few pages of posts :)
2013-08-29 20:08:37 UTC <carter> ping me on #haskell-llvm 
2013-08-29 20:08:39 UTC <carter> and i'll explain more there
2013-08-29 20:09:04 UTC <carter> (because its sort of on topic there)
2013-08-29 20:09:21 UTC <martingale> carter: I need go for a bit now but, i definitely will when I get a chance
2013-08-29 20:09:26 UTC <carter> k
2013-08-29 20:59:42 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1429bd416 http://travis-ci.org/diagrams/diagrams-lib/builds/10771640 The build passed.
2013-08-29 21:06:38 UTC <Taneb> byorgey, I was surprised you accepted my diagrams pull request adding the Group instance for Endomorphism
2013-08-29 21:07:03 UTC <Taneb> monoid-extras pull request, rather
2013-08-30 04:27:23 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 146993de0 http://travis-ci.org/diagrams/diagrams-lib/builds/10784358 The build passed.
2013-08-30 08:08:49 UTC <notdan> martingale: Love the snug alignment :)
2013-08-30 13:48:44 UTC <martingale> byorgey: You may be better at answering notdan's questions on arrows, I'm sure you have a deeper understanding of scaleInvPrim issues than i do
2013-08-30 14:54:34 UTC <byorgey> martingale: yeah, I just responded.  The short answer is that with ScaleInv in the mix we have no hope of producing anything more general than QDiagrams.
2013-08-30 14:55:46 UTC <byorgey> but I don't really see the benefit of implementing (~~) in terms of some arrow functions anyway... maybe notdan can elaborate on what he had in mind and why it would be useful.
2013-08-30 15:17:31 UTC <notdan> I see
2013-08-30 15:17:34 UTC <notdan> nah I was just wondering
2013-08-30 15:44:38 UTC <travis-ci> [travis-ci] 13diagrams-svg/06master 14671f8ba http://travis-ci.org/diagrams/diagrams-svg/builds/10804997 The build passed.
2013-08-30 15:45:03 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14cb6e3cf http://travis-ci.org/diagrams/diagrams-contrib/builds/10804801 The build passed.
2013-08-30 15:53:30 UTC <byorgey> ACTION checks out the snug branch
2013-08-30 16:04:44 UTC <martingale> byorgey: how do you do that: "dot" byorget checks out the snug branc in irc?
2013-08-30 16:14:41 UTC <ClaudiusMaximus> martingale: /me stuff
2013-08-30 16:20:02 UTC <byorgey> martingale: the Alignable/snug stuff looks good.  Though we still will need to add some examples to the documentation and update the user manual.
2013-08-30 16:20:29 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14f9f93c2 http://travis-ci.org/diagrams/diagrams-doc/builds/10805225 The build has errored.
2013-08-30 16:20:35 UTC <byorgey> I'm just making sure the user manual + gallery still build, and then I'll merge it in after lunch, and also start loking at arrows
2013-08-30 16:41:38 UTC <martingale> byorgey: awesome, I'm working on Parametric - I'm hoping to have the concept ready to show you later on
2013-08-30 16:42:12 UTC <martingale> ClaudiusMaximus: thanks : )
2013-08-30 16:43:53 UTC <martingale> byorgey: The examples I have in snugtest may be a start for the docs, but I agree we definitely need some more.
2013-08-30 17:27:12 UTC <byorgey> martingale: cool, not sure what you mean re: parametric, look forward to hearing more about it
2013-08-30 17:55:58 UTC <fryguybob> On the arrow stuff.  Perhaps something like this would be nice:  a ~~ b ~~ c ~~> pointy  where it would be a line from a to be to c and end with a "pointy" style arrow.
2013-08-30 18:08:32 UTC <byorgey> fryguybob: hmm, yes, something like that would be nice
2013-08-30 18:11:00 UTC <fryguybob> byorgey: And   roundy >~~ a ~~ b ~~> pointy  but you don't want to go too far with it.
2013-08-30 18:11:44 UTC <byorgey> fryguybob: down that road lies a DSL embedding of Metafont paths.
2013-08-30 18:11:53 UTC <fryguybob> byorgey: Right
2013-08-30 18:12:19 UTC <byorgey> roundy >~~ (a `withCurvature` 0.6) ~..~ (b `withTangent` unitY) ~~> pointy
2013-08-30 18:15:42 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 148f1bc45 http://travis-ci.org/diagrams/diagrams-lib/builds/10810851 The build passed.
2013-08-30 19:58:42 UTC <travis-ci> [travis-ci] 13monoid-extras/06master 148d8e096 http://travis-ci.org/diagrams/monoid-extras/builds/10814496 The build passed.
2013-08-31 14:51:56 UTC <martingale> byorgey:  I wonder if the problem has something to do with .exe, It seems to be looking for files with this extension but there are none in my directory,
2013-08-31 14:52:27 UTC <martingale> i.e I have hakyll.hs now hakyll.hs.exe?
2013-08-31 15:12:57 UTC <martingale> byorgey: hmm - that doesn't seem to be the problem
2013-08-31 15:52:08 UTC <travis-ci> [travis-ci] 13diagrams-builder/06builder-0.4 1434f97b9 http://travis-ci.org/diagrams/diagrams-builder/builds/10835450 The build passed.
2013-08-31 15:52:17 UTC <travis-ci> [travis-ci] 13diagrams-builder/06master 14ec3ca0a http://travis-ci.org/diagrams/diagrams-builder/builds/10835449 The build passed.
2013-08-31 17:11:22 UTC <byorgey> martingale: I just pushed (what I hope is) a workaround for the build system problems, can you pull and give it another try?
2013-08-31 17:33:56 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14874917a http://travis-ci.org/diagrams/diagrams-doc/builds/10837263 The build has errored.
2013-08-31 18:35:03 UTC <notdan> Hi
2013-08-31 18:35:22 UTC <byorgey> hi notdan 
2013-08-31 18:36:02 UTC <notdan> how is it going? :]
2013-08-31 18:37:06 UTC <byorgey> I seem to be coming down with a cold or something, but otherwise good =)  going to do a bit of diagrams hacking this afternoon.
2013-08-31 18:37:09 UTC <byorgey> how are you?
2013-08-31 18:39:22 UTC <notdan> I am good. I am in the process of moving so got a little bit tired because of that, but otherwise it's ok, gonna update the pastebin to match 'master' now I think
2013-08-31 18:39:47 UTC <notdan> my ghc patch got accepted so I am happy because of that even though it's a silly patch, just an applicative instance for the Ghc monad
2013-08-31 18:43:47 UTC <byorgey> notdan: yeah, moving is rough
2013-08-31 18:44:01 UTC <byorgey> notdan: congrats! (re: GHC patch =)
2013-08-31 18:50:20 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 145487b29 http://travis-ci.org/diagrams/diagrams-doc/builds/10838356 The build has errored.
2013-08-31 19:08:01 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14b1b9382 http://travis-ci.org/diagrams/diagrams-lib/builds/10839009 The build passed.
2013-08-31 19:09:49 UTC <byorgey> martingale: why not make the Trail used for the shaft be a field of ArrowOpts?
2013-08-31 19:10:12 UTC <byorgey> It seems then we would not need connectTrail at all, we could just use connect
2013-08-31 19:12:11 UTC <byorgey> anyway: arrows are merged!  and there was much rejoicing
2013-08-31 19:13:31 UTC <fryguybob> \o/
2013-08-31 19:23:03 UTC <notdan> woot
2013-08-31 19:25:51 UTC <notdan> https://github.com/diagrams/diagrams-lib/blob/master/src/Diagrams/TwoD/Arrow.hs#L87 this should be changed to black IMO :)
2013-08-31 19:26:11 UTC <notdan> so the defult arrowhead color matches the default arrow body color
2013-08-31 19:29:50 UTC <byorgey> yes, it will =)
2013-08-31 19:30:03 UTC <byorgey> those were just for testing I think
2013-08-31 20:01:29 UTC <notdan> Ok I think the new versino of interactive-diagrams is up, featuring zooming & panning
2013-08-31 20:01:55 UTC <notdan> still (ugh) no interactive widgets, yet. But I promise they will be ready this month
2013-08-31 20:45:07 UTC <martingale> Yippee: Arrows are in!
2013-08-31 20:45:47 UTC <martingale> byorgey: good idea, about putting trail in ArrowOpts!
2013-08-31 21:06:35 UTC <byorgey> martingale: OK, great!  I was hoping there wasn't some complicated reason why it couldn't be or something like that
2013-08-31 21:22:02 UTC <martingale> notdan: yes, those were just for testing, I will change them to black.
2013-08-31 21:42:22 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14345e0b3 http://travis-ci.org/diagrams/diagrams-lib/builds/10842397 The build passed.
2013-08-31 21:43:51 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 142d56315 http://travis-ci.org/diagrams/diagrams-lib/builds/10842423 The build passed.
2013-09-01 00:04:59 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14e47f8d5 http://travis-ci.org/diagrams/diagrams-lib/builds/10845163 The build passed.
2013-09-01 00:20:36 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14160316a http://travis-ci.org/diagrams/diagrams-lib/builds/10845378 The build passed.
2013-09-01 00:47:22 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 144853a0f http://travis-ci.org/diagrams/diagrams-lib/builds/10845802 The build passed.
2013-09-01 00:51:42 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1411029c5 http://travis-ci.org/diagrams/diagrams-doc/builds/10845390 The build has errored.
2013-09-01 01:01:54 UTC <byorgey> yessssssss I made it faster!!!!
2013-09-01 01:02:40 UTC <fryguybob> Ohh what did you do?
2013-09-01 01:02:56 UTC <byorgey> changing from  R2 = R2 (Double, Double)  to  R2 = R2 {-# UNPACK #-} !Double  {-# UNPACK #-} !Double   brought the time to compile my factorization diagrams poster down from 24s to 17s
2013-09-01 01:03:27 UTC <fryguybob> Ah, I should see what changes on my heap graphs with that.
2013-09-01 01:04:09 UTC <byorgey> I will check it in, just a second
2013-09-01 01:04:45 UTC <carter> cool!
2013-09-01 01:04:53 UTC <fryguybob> byorgey: Any opinion on just making all the results for offset/expand/trail/path be Path R2?
2013-09-01 01:05:43 UTC <byorgey> fryguybob: I think that's fine.
2013-09-01 01:17:29 UTC <fryguybob> byorgey: I don't know where my brain is, just expandTrail.
2013-09-01 01:18:06 UTC <byorgey> hehe, OK, sure =)
2013-09-01 01:20:11 UTC <byorgey> ACTION goes looking for other things to strictify and/or UNPACK
2013-09-01 01:23:01 UTC <byorgey> ACTION tries Transformations
2013-09-01 01:23:20 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 144086f99 http://travis-ci.org/diagrams/diagrams-lib/builds/10846285 The build passed.
2013-09-01 01:24:51 UTC <byorgey> fryguybob: remember when you had some profiling report that showed a bunch of (,) nodes?
2013-09-01 01:25:04 UTC <byorgey> I wonder if those were all from R2, not DUALTree
2013-09-01 01:25:15 UTC <fryguybob> byorgey: Yeah that might be.
2013-09-01 01:25:33 UTC <fryguybob> byorgey: We should see soon :D
2013-09-01 01:25:42 UTC <byorgey> =D
2013-09-01 01:25:55 UTC <byorgey> hmm, strictifying Transformation didn't seem to make a difference
2013-09-01 01:26:33 UTC <fryguybob> Looks like I'm still the only one giving ezyang's heap site work :D
2013-09-01 01:26:42 UTC <byorgey> hehe
2013-09-01 01:27:20 UTC <byorgey> on the one hand that's too bad since it's a nice site.  On the other hand, I don't mind having it all to ourselves =)
2013-09-01 01:28:24 UTC <byorgey> fryguybob: can you think of any scenario in which making Transformations stricter would be bad?
2013-09-01 01:29:32 UTC <fryguybob> byorgey: I suppose if you built a bunch of small things that you want to position "absolutely" and just replace all their envelops directly.  Not sure if that made sense.
2013-09-01 01:31:35 UTC <byorgey> ah, hmm
2013-09-01 01:37:36 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14d16213e http://travis-ci.org/diagrams/diagrams-lib/builds/10846492 The build passed.
2013-09-01 01:43:12 UTC <fryguybob> :( -- Internal Server Error: permission denied (Disk quota exceeded)
2013-09-01 01:46:54 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/Mandelbrot-ps.pdf
2013-09-01 01:50:24 UTC <byorgey> aww =(
2013-09-01 01:50:48 UTC <fryguybob> @tell ezyang It appears I killed your heap site.  "Disk quota exceeded", sorry :(
2013-09-01 01:50:48 UTC <lambdabot> Consider it noted.
2013-09-01 01:51:14 UTC <fryguybob> byorgey: It is hard to do a side by side comparison, but it looks like that make a significant difference.
2013-09-01 01:52:01 UTC <fryguybob> Oh, I can download the old one form ezyang's site and do hp2ps on it.
2013-09-01 01:52:09 UTC <byorgey> oh, good idea
2013-09-01 01:53:45 UTC <byorgey> huh, how come there are so many pairs (,) and their number stays constant over the last 4 seconds?
2013-09-01 01:54:15 UTC <byorgey> also, why are we building so many cons cells
2013-09-01 01:54:28 UTC <byorgey> it's also possible that I am completely misreading this.
2013-09-01 01:55:12 UTC <fryguybob> byorgey: I think the cons cells are the DList accumulating as we output postscript
2013-09-01 01:55:31 UTC <byorgey> ahh, right
2013-09-01 01:55:36 UTC <fryguybob> byorgey: That should be straight forward to fix, but isn't general to diagrams.
2013-09-01 01:55:38 UTC <byorgey> but why do they all stay in memory?
2013-09-01 01:55:43 UTC <byorgey> right, OK.
2013-09-01 01:55:48 UTC <fryguybob> byorgey: But you should see that they shoot up at the end.
2013-09-01 01:56:09 UTC <fryguybob> So the http://www.cs.rochester.edu/u/ryates/temp/Mandelbrot-ps-13.pdf
2013-09-01 01:56:29 UTC <fryguybob> So the new one does much better on memory, but it looks like it is taking more time.
2013-09-01 01:57:44 UTC <byorgey> hmm
2013-09-01 01:58:29 UTC <fryguybob> Gaaah, what we need is hp diff...
2013-09-01 01:59:23 UTC <byorgey> yeah, the R2 changes clearly helped with memory.  Note there are less (,) as well as no thunks listed from Diagrams.TwoD.Types
2013-09-01 01:59:40 UTC <fryguybob> Yeah
2013-09-01 02:00:07 UTC <byorgey> I don't understand why it would be slower though.
2013-09-01 02:00:43 UTC <fryguybob> Maybe I'm doing something silly like converting from R2 to (Double,Double) when I render.
2013-09-01 02:01:05 UTC <fryguybob> Before that would be just unwrapping, now it allocates.
2013-09-01 02:02:05 UTC <byorgey> well, if you use  unr2 or coords  that's what you're doing indeed
2013-09-01 02:02:19 UTC <byorgey> if you import Diagrams.TwoD.Types you can pattern match directly on R2
2013-09-01 02:02:38 UTC <fryguybob> byorgey: I'll see if that makes a difference.
2013-09-01 02:08:49 UTC <byorgey> It would be nice to set up a profiling/benchmarking framework that compiles a bunch of examples with all the backends
2013-09-01 02:09:39 UTC <byorgey> maybe with a script that takes some local git commits as arguments and automatically checks out, builds, and tests both versions so you can compare the performance
2013-09-01 02:09:48 UTC <byorgey> anyway, I'm off to bed
2013-09-01 02:15:28 UTC <fryguybob> byorgey: Yeah.  I wonder if the intermediate (,)'s (if that is the issue) go away with -O2.
2013-09-01 02:25:43 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14ab1ce8b http://travis-ci.org/diagrams/diagrams-doc/builds/10847086 The build has errored.
2013-09-01 02:58:49 UTC <carter> oo
2013-09-01 02:58:52 UTC <carter> that would be nice
2013-09-01 03:00:53 UTC <fryguybob> carter: Sadly that doesn't seem to be the issue.
2013-09-01 03:01:10 UTC <carter> i meant the "benchmark at certain commits"
2013-09-01 03:01:35 UTC <carter> i'm giong to need to figure out a systematic way of benchmarking
2013-09-01 03:01:53 UTC <carter> and tracking perf regressions
2013-09-01 03:05:35 UTC <fryguybob> carter: Ah yes, automated perf tests would be nice.
2013-09-01 03:05:45 UTC <carter> yeah
2013-09-01 03:10:54 UTC <carter> theres some subtleties to doing that right
2013-09-01 03:11:10 UTC <carter> but its something i'll need to have for myself soon one way or anotehr
2013-09-01 12:10:18 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 143c56d3e http://travis-ci.org/diagrams/diagrams-doc/builds/10858273 The build has errored.
2013-09-01 14:29:21 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 145bade10 http://travis-ci.org/diagrams/diagrams-doc/builds/10860884 The build has errored.
2013-09-01 15:13:35 UTC <martingale> byorgey: To use snugL / snugR in the manual I need to import TwoD.Align explicitly in the lhs, but you don't to use alignL etc. What do I have to due to make the snug functions visible?
2013-09-01 15:45:21 UTC <martingale> byorgey: Also, can i get the snug functions to appear in the API reference?
2013-09-01 17:27:18 UTC <kuribas> What's a good datatype for a path?  I am thinking either a list of lines and cubic beziers, or a list of points with line joins or (bezier) control points.
2013-09-01 17:27:34 UTC <kuribas> The advantage of the latter that there are no duplicate points.
2013-09-01 17:41:03 UTC <fryguybob> kuribas: The way that Diagrams does it now is somewhat complicated but I think it is the right way to do it.
2013-09-01 17:41:57 UTC <fryguybob> We have three "levels" of path data, first is a segment, then a trail is a list of segments, finally a path is a list of located trails
2013-09-01 17:45:18 UTC <fryguybob> Segments can either have their last offset (Closed) or describe some curve but still need an ending offset (Open).
2013-09-01 17:46:22 UTC <fryguybob> Closed segments are sort of like a generalized vector.  They have a magnitude, direction, *and* some squiggle.
2013-09-01 17:48:21 UTC <fryguybob> Trails (specifically Trail') can be either a Line or a Loop.  A Line is a sequence of closed segments and a loop is a sequence of closed segments and a final open segment.
2013-09-01 17:48:51 UTC <fryguybob> Loops can be filled.
2013-09-01 17:50:20 UTC <fryguybob> Paths are a sequence of Located trails (any mix of lines and loops).
2013-09-01 17:51:45 UTC <fryguybob> Located fixes a location for something, so while a closed segment is like a vector, a located closed segment is some segment of a curve somewhere in your space.
2013-09-01 19:20:54 UTC <kuribas> Ok, I understand.
2013-09-01 19:42:02 UTC <kuribas> It's a good abstraction, but it probably would make my path algorithms more difficult.
2013-09-01 19:42:31 UTC <kuribas> For example removing overlap.
2013-09-01 19:45:21 UTC <kuribas> I mean, my library is more low level, so I don't know of relative path's make sense.
2013-09-01 19:48:25 UTC <byorgey> martingale: ah, you need to explicitly re-export the snug functions from Diagrams.TwoD
2013-09-01 19:48:47 UTC <byorgey> martingale: I will rebuild the API reference next time we make a release.
2013-09-01 19:59:26 UTC <byorgey> fryguybob: looks like I'll be coming October 29
2013-09-01 20:28:17 UTC <luite> so that was zurihac :)
2013-09-01 20:28:41 UTC <byorgey> luite: how was it?
2013-09-01 20:29:16 UTC <luite> oh met lots of interesting people
2013-09-01 20:29:48 UTC <luite> found out at the last minute that the http://idontgetoutmuch.wordpress.com/ guy was there
2013-09-01 20:31:41 UTC <luite> i didn't get his name though, and i don't see it on that site
2013-09-01 20:34:12 UTC <byorgey> luite: Dominic Steinitz
2013-09-01 20:34:33 UTC <luite> ah tnx
2013-09-01 20:34:55 UTC <luite> he promised he'd send me a good book (pdf) on numerical methods :)
2013-09-01 20:35:10 UTC <byorgey> cool =)
2013-09-01 20:35:16 UTC <byorgey> yeah, he seems to know a lot about that
2013-09-01 20:35:22 UTC <byorgey> oops, Noah's awake, better go get him
2013-09-01 20:35:50 UTC <luite> yeah i think he worked in finance and now does these things for hobby or something :)
2013-09-01 21:40:25 UTC <fryguybob> byorgey: Woohoo!
2013-09-01 21:42:36 UTC <luite> hm i wonder if hostels got les social in the past decade
2013-09-01 21:42:55 UTC <luite> i'm still in the lobby and 90% here is looking at their smartphone or laptop screen
2013-09-01 21:43:08 UTC <fryguybob> :(
2013-09-01 21:43:23 UTC <luite> well no prob, i'm not very social either :p
2013-09-01 21:52:23 UTC <luite> but wavewave (Ian-Woo Kim) said i should visit him at CERN and he'd explain what he's doing. it involved making some lagrangian with a polynomial where the terms correspond with particle interactions, and some monte carlo method for calculating some probabilities in a simulated detector, and then hoping that they'd match the measurements :)
2013-09-01 21:53:47 UTC <luite> (i probably got it all backward because i was too impressed by his hoodle note-taking setup to be listening properly :)
2013-09-01 22:08:21 UTC <fryguybob> luite: I got to meet him at hacphi a couple years ago.  In need to get some hoodle going on my laptop.
2013-09-01 22:08:51 UTC <luite> yeah i guess he will be more at european hackathons now :)
2013-09-01 22:14:19 UTC <fryguybob> You have to go where the exciting physics is happening.
2013-09-01 22:14:54 UTC <luite> they're certainly exciting those particles, up to 7TeV when it starts again!
2013-09-01 22:15:50 UTC <luite> i'm not sure if it's really useful to do the theoretical modelling and verification work there, but i guess it's like a hackathon, lots of interesting people at the same place makes it better :p
2013-09-01 22:20:37 UTC <luite> fryguybob: did he have the realtime cloud and phone synchronizing already back then?
2013-09-01 22:39:33 UTC <fryguybob> luite: No, I don't think there was much at that point.
2013-09-01 23:20:39 UTC <byorgey> man, I'm having real trouble doing profiling builds
2013-09-01 23:21:03 UTC <byorgey> I keep getting weird linker errors, ".hi file type does not match", and all sorts of strange stuff =P
2013-09-01 23:21:52 UTC <fryguybob> byorgey: Strange
2013-09-01 23:22:09 UTC <fryguybob> Which GHC?
2013-09-01 23:22:26 UTC <byorgey> 7.6.3
2013-09-01 23:22:50 UTC <fryguybob> That's what I have working here.  But I did sort of start clean slate with profiling this time.
2013-09-01 23:23:08 UTC <byorgey> I am starting clean slate too, in a fresh hsenv environment
2013-09-01 23:23:32 UTC <byorgey> ACTION tries something different
2013-09-01 23:23:42 UTC <fryguybob> Maybe hsenv misses something with regard to profiling?
2013-09-01 23:23:50 UTC <byorgey> I wanted to compile more packages than I have previously with -prof -fprof-auto
2013-09-01 23:23:53 UTC <byorgey> e.g. including dual-tree
2013-09-01 23:24:19 UTC <byorgey> I am not sure the best way to compile one set of packages with --enable-library-profiling and the rest with -prof -fprof-auto
2013-09-01 23:24:38 UTC <byorgey> OK, I have to go, Noah is standing here requesting that I tickle him =)
2013-09-01 23:24:46 UTC <fryguybob> :D
2013-09-02 00:18:34 UTC <byorgey> /home/brent/src/diagrams/.hsenv_profile/cabal/lib/dual-tree-0.1.0.1/ghc-7.6.3/HSdual-tree-0.1.0.1.o: unknown symbol `CC_LIST'
2013-09-02 00:19:05 UTC <byorgey> luite: does this error message look familiar to you?  ISTR someone talking about CC_LIST recently
2013-09-02 00:19:07 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 1410e24b3 http://travis-ci.org/diagrams/diagrams-lib/builds/10876553 The build passed.
2013-09-02 00:20:45 UTC <byorgey> hmm, it's possible this might be related: http://ghc.haskell.org/trac/ghc/ticket/7746
2013-09-02 00:20:55 UTC <byorgey> but I have no idea what that ticket is about
2013-09-02 00:21:07 UTC <byorgey> "For example, if you load an un-profiled object file into a profiled binary, GHC will eat all your puppies."
2013-09-02 00:21:27 UTC <byorgey> sounds serious
2013-09-02 00:21:42 UTC <fryguybob> Good thing I don't have any puppies
2013-09-02 00:24:03 UTC <martingale> Lens.hs is causing diagrams-contrib to fail when building docs? 
2013-09-02 00:24:08 UTC <martingale> rc/Diagrams/Lens.hs:70:3:
2013-09-02 00:24:08 UTC <martingale>     makeWrappedInstance: Constructor must have a single field
2013-09-02 00:24:34 UTC <byorgey> oh, yeah, that's because it was deriving lenses for R2 but R2 isn't a newtype anymore
2013-09-02 00:24:54 UTC <byorgey> just a second
2013-09-02 00:26:42 UTC <byorgey> martingale: ^^^ fixed
2013-09-02 00:27:28 UTC <martingale> byorgey: thanks I want to push a version of the docs with snug. Arrows will take a bit more time
2013-09-02 00:27:43 UTC <byorgey> awesome, push away
2013-09-02 00:27:55 UTC <byorgey> martingale: did I give you push access to the diagrams-doc repo?
2013-09-02 00:28:25 UTC <martingale> byorgey: yes, I pushed earlier but travis failed it due to the above problem
2013-09-02 00:28:38 UTC <byorgey> ah, ok
2013-09-02 00:29:10 UTC <byorgey> oh, right, I saw that commit, you changed e.g. 'connect' to 'attach' etc.
2013-09-02 00:29:42 UTC <martingale> byorgey: yes but I undid that and just hid connect, etc for now and added snug
2013-09-02 00:30:08 UTC <byorgey> oh, ok
2013-09-02 00:33:34 UTC <martingale> I"m heading to southern Utah for a week of hiking with my wife and some friends. So I won't have much time to hack on diagrams : (
2013-09-02 00:34:04 UTC <martingale> but : ) for the vacation !
2013-09-02 00:35:23 UTC <byorgey> martingale: woohoo!  sounds great!  (the vacation that is)
2013-09-02 00:36:41 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 14d0c063f http://travis-ci.org/diagrams/diagrams-contrib/builds/10876738 The build passed.
2013-09-02 00:36:51 UTC <martingale> byorgey: Yeah, we realized we haven't been away without the kids since they were born, 18 years!
2013-09-02 00:37:14 UTC <martingale> byorgey: I know that seems crazy
2013-09-02 00:37:21 UTC <byorgey> hah, wow!  well, sounds like it is well deserved -- enjoy!
2013-09-02 00:37:34 UTC <martingale> byorgey: thanks
2013-09-02 00:37:46 UTC <byorgey> we'll miss you, but I'm guessing there will still be plenty of diagrams stuff to hack on when you return =)
2013-09-02 00:38:30 UTC <martingale> byorgey: Yes, there are lots of great ideas in the community, I'm really enjoying being involved =)
2013-09-02 00:39:19 UTC <fryguybob> martingale: :D
2013-09-02 00:52:16 UTC <martingale> good night all
2013-09-02 00:56:12 UTC <fryguybob> I was about to add another comment to that but then I realized that I had already made the exact comment I was going to make.
2013-09-02 01:00:30 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 14d5261f4 http://travis-ci.org/diagrams/diagrams-doc/builds/10876836 The build has errored.
2013-09-02 01:00:39 UTC <byorgey> fryguybob: hehe
2013-09-02 01:01:20 UTC <byorgey> martingale: good night martingale, we're enjoying having you involved too =)
2013-09-02 01:26:05 UTC <fryguybob> byorgey: There is enough in the adjust stuff to make an arrow function to modify a trail and add arrows inplace right? 
2013-09-02 01:26:33 UTC <byorgey> fryguybob: I am having trouble parsing your question.
2013-09-02 01:27:06 UTC <fryguybob> Looking at the functions in arrow they all scale a path to match some placement of the arrow right?
2013-09-02 01:27:20 UTC <byorgey> right, I think so
2013-09-02 01:27:48 UTC <fryguybob> I'm wondering if there is anything missing from being able to take a trail as is, and add an arrow to the end so the arrow ends where the trail used to.
2013-09-02 01:27:59 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 142862755 http://travis-ci.org/diagrams/diagrams-lib/builds/10878055 The build passed.
2013-09-02 01:28:22 UTC <fryguybob> (I know this is a harder thing to do)
2013-09-02 01:28:47 UTC <byorgey> ohh, I think I understand your question now.
2013-09-02 01:28:56 UTC <byorgey> I though that's what the arrow code was already doing.
2013-09-02 01:29:16 UTC <fryguybob> byorgey: Ok.  I was confused by the parameters if that is the case.
2013-09-02 01:29:18 UTC <byorgey> But I guess it's not because I just moved the adjust stuff into another module and I didn't have to change the arrows code at all =)
2013-09-02 01:30:08 UTC <fryguybob> Ok.  Well both options are useful.
2013-09-02 01:30:08 UTC <byorgey> I still haven't looked super carefully at the arrows code.  Just close enough to see that it was definitely in a good state to merge, and continue working on it in master
2013-09-02 01:48:14 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14126bb89 http://travis-ci.org/diagrams/diagrams-haddock/builds/10878487 The build has errored.
2013-09-02 01:50:13 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14e74b250 http://travis-ci.org/diagrams/diagrams-haddock/builds/10878537 The build has errored.
2013-09-02 01:50:20 UTC <byorgey> silly travis.
2013-09-02 01:50:37 UTC <byorgey> I might try this: http://www.gergely.risko.hu/fpafternoon-zurich-20130829/ceh.html#(13)
2013-09-02 01:53:21 UTC <fryguybob> byorgey: What does that give you?
2013-09-02 01:54:37 UTC <byorgey> fryguybob: you basically start by cloning a complete up-to-date Haskell environment, built using something based on nix (I don't quite understand the details)
2013-09-02 01:54:56 UTC <byorgey> and then run your tests.  It completely ignores the Haskell environment provided by Travis.
2013-09-02 01:55:33 UTC <fryguybob> byorgey: Ah, yeah the travis one is a moving target right?
2013-09-02 01:56:00 UTC <byorgey> no, it's not moving at all.  That's the problem.
2013-09-02 01:56:15 UTC <byorgey> It's stuck in 2010 or something like that.
2013-09-02 01:56:23 UTC <fryguybob> byorgey: Oh, that sort of problem
2013-09-02 01:57:10 UTC <byorgey> fryguybob: e.g. the reason the diagrams-haddock build just failed is because it has transformers-0.2 and refuses to install stuff which depends on transformers-0.3
2013-09-02 02:01:57 UTC <fryguybob> byorgey: Off hand do you know how to get from a Trail' Loop R2 to a Path R2?
2013-09-02 02:03:35 UTC <byorgey> hmm, not offhand
2013-09-02 02:03:45 UTC <fryguybob> ok I'll find it :D
2013-09-02 02:04:13 UTC <byorgey> perhaps we should have functions like   singletonPath :: Trail v -> Path v   and  singletonPath' :: Trail' c v -> Path v
2013-09-02 02:04:56 UTC <byorgey> Path . (`at` origin) . wrapLoop    or something like that
2013-09-02 02:05:17 UTC <byorgey> I mean   Path . (:[]) . (`at` origin) . wrapLoop
2013-09-02 02:06:06 UTC <byorgey> well, more likely  singletonPath :: Located (Trail v) -> Path v
2013-09-02 02:06:23 UTC <fryguybob> Right, in my case they are located.
2013-09-02 02:07:01 UTC <byorgey> oh!  I forget, we have  pathFromTrail, and pathFromLocTrail
2013-09-02 02:07:01 UTC <fryguybob> I wrote a withTrailL which lifts withTrail through a Located.
2013-09-02 02:07:10 UTC <fryguybob> Ah, that would do it.
2013-09-02 02:07:30 UTC <byorgey> so  pathFromLocTrail . mapLoc wrapLoop ?
2013-09-02 02:08:13 UTC <fryguybob> byorgey: That type checks.
2013-09-02 02:09:39 UTC <byorgey> then it must be correct! ;-)
2013-09-02 02:16:40 UTC <fryguybob> I'll have to clean it up more later, but I should have loops working now.
2013-09-02 02:22:52 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 148f1bc17 http://travis-ci.org/diagrams/diagrams-lib/builds/10879045 The build passed.
2013-09-02 02:24:01 UTC <byorgey> fryguybob: awesome! =D
2013-09-02 02:28:23 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 140514bfa http://travis-ci.org/diagrams/diagrams-lib/builds/10879114 The build passed.
2013-09-02 02:40:35 UTC <fryguybob> byorgey: I'll try to add some examples and see if it actually works tomorrow :D
2013-09-02 02:40:43 UTC <fryguybob> Have a good night!
2013-09-02 02:44:36 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 1408387d7 http://travis-ci.org/diagrams/diagrams-lib/builds/10879374 The build passed.
2013-09-02 11:32:17 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 140eec075 http://travis-ci.org/diagrams/diagrams-lib/builds/10889994 The build passed.
2013-09-02 12:27:45 UTC <jbracker> There is an issue with clipping in the SVG backend
2013-09-02 12:28:54 UTC <jbracker> Currently all paths in the clip stack are inserted into one big clipPath element but that ORs them otgether in SVG instead of intersecting them
2013-09-02 13:17:23 UTC <fryguybob> jbracker: We should add an issue and a test to backend-tests.
2013-09-02 13:27:50 UTC <jbracker> I just finished a fix for this issue
2013-09-02 13:28:02 UTC <jbracker> commit it now and adjusting pull request
2013-09-02 13:28:24 UTC <jbracker> the problem occures when several clipBy calls are nested in each other
2013-09-02 13:28:59 UTC <jbracker> fryguybob: A test could be based on my clipping test from Charts
2013-09-02 13:29:14 UTC <jbracker> that should be easy to convert
2013-09-02 13:29:19 UTC <fryguybob> jbracker: Ok
2013-09-02 13:32:41 UTC <fryguybob> jbracker: I think postscript's default miterlimit is 10, I'm not sure if cairo follows suit or not.  We should probably be consistent.  SVG does use the same definition as postscript.
2013-09-02 14:00:51 UTC <jbracker> fryguybob: I think as long as you can't set the miter limit yourself it should be a very high value, because that would be what I expect. You can't change it so there is none
2013-09-02 14:08:09 UTC <fryguybob> jbracker: Ah, well miter limit should be an attribute.  The problem with a high value is if you are trying to model something like a graph that has sharp spikes, the spikes get quite exagerated.
2013-09-02 14:08:43 UTC <jbracker> fryguybob: At the same time that behaviour is to be expected if you don't have tools to control it
2013-09-02 14:09:42 UTC <fryguybob> jbracker: Well I disagree.  I don't know of a situation where I would want a high miter limit intentionally.
2013-09-02 14:10:43 UTC <fryguybob> And there are a lot of places where you get accidental sharp corners.
2013-09-02 14:12:28 UTC <fryguybob> jbracker: I see what you are saying (and the solution is just to add miter limit attribute which we can do).  Having a high limit gives a capability that cannot really be emulated otherwise, but I don't know of legitimate uses of that cabability and know a lot of circumstances where you accidentally would trigger the high value.
2013-09-02 14:15:10 UTC <fryguybob> jbracker: I can add a miter limit attribute right now if you want.
2013-09-02 14:22:44 UTC <byorgey> yes, adding a miter limit attribute sounds like the right way to go
2013-09-02 14:23:14 UTC <fryguybob> byorgey: Name LineMiterLimit or MiterLimit?
2013-09-02 14:24:02 UTC <byorgey> meh
2013-09-02 14:33:49 UTC <fryguybob> byorgey: I'm adding Default instances now, I already have some on the expand branch, but I'll look at setDefault2dAttributes too.
2013-09-02 14:34:00 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 147be5cdf http://travis-ci.org/diagrams/diagrams-lib/builds/10896222 The build passed.
2013-09-02 14:34:02 UTC <byorgey> ok
2013-09-02 14:36:52 UTC <jbracker> Well, this is going fast :)
2013-09-02 14:37:54 UTC <fryguybob> byorgey: LineCap and LineJoin are not in setDefault2dAttributes should I add those also?
2013-09-02 14:39:32 UTC <byorgey> fryguybob: yes, we probably should
2013-09-02 14:39:37 UTC <fryguybob> ok, done
2013-09-02 14:39:56 UTC <jbracker> About the spec: Cairo say:  miter limit = 1/sin(angle/2), svg says: miterLength / stroke-width = 1 / sin ( theta / 2 ), so I think miter limit = 1/sin(angle/2) is a good semantic
2013-09-02 14:39:57 UTC <byorgey> if some attribute is not set in setDefault2DAttributes it means we are just relying on the backends to all have the same default, which is dangerous
2013-09-02 14:42:01 UTC <byorgey> jbracker: agreed
2013-09-02 14:47:07 UTC <jbracker> what about the test for stacked clippings? Where should that go?
2013-09-02 14:49:14 UTC <fryguybob> Humm, I'm not sure the Default instance for miter limit is actually useful.
2013-09-02 14:49:44 UTC <jbracker> fryguybob: Just wanted to say, if you define it you should use it in setDefault2DAttribute
2013-09-02 14:50:07 UTC <fryguybob> jbracker: Yeah, line width has the same problem we just need to come up with some convention that makes sense.
2013-09-02 14:51:35 UTC <fryguybob> like lineMiterLimitA :: HasStyle a => LineMiterLimit -> a -> a.  But that is just applyAttr.
2013-09-02 14:51:51 UTC <fryguybob> So I should just use applyAttr in setDefault2DAttribute :D
2013-09-02 14:52:00 UTC <jbracker> :D
2013-09-02 14:53:03 UTC <fryguybob> Ah, then I would need a type assertion, so perhasp the lineMiterLimitA convention is useful.
2013-09-02 14:54:21 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14b0db882 http://travis-ci.org/diagrams/diagrams-lib/builds/10896812 The build passed.
2013-09-02 14:58:21 UTC <Taneb> Do animated SVGs exist?
2013-09-02 14:59:02 UTC <fryguybob> Taneb: I think you can include javascript in an SVG to do animation, but I don't know who supports that and I don't think anyone has done that with diagrams.
2013-09-02 15:01:52 UTC <byorgey> jbracker: so can you update your pull request to set the miter limit attribute?
2013-09-02 15:03:06 UTC <byorgey> as for the clip path stuff, I don't know much about it so I trust you.  Though if you have a ready test case you could add to backend-tests which shows the bug that would be great.
2013-09-02 15:14:08 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 143ffa7be http://travis-ci.org/diagrams/diagrams-lib/builds/10897680 The build passed.
2013-09-02 15:27:37 UTC <jbracker> byorgey: Will do so (in both cases)
2013-09-02 15:30:23 UTC <luite> you can also do animation in svg without js
2013-09-02 15:30:38 UTC <luite> with paths and interpolation
2013-09-02 15:31:20 UTC <fryguybob> luite: Ah, nice.
2013-09-02 15:31:44 UTC <luite> i don't think anyone has done that with diagrams either though :)
2013-09-02 15:40:48 UTC <fryguybob> It is kind of hard to make a nice visual test for miter limit :(
2013-09-02 15:41:47 UTC <luite> bleh i got distracted, reading those books that dominic sent me the whole afternoon, so i still didn't get to see zurich :p
2013-09-02 15:42:17 UTC <fryguybob> http://www.cs.rochester.edu/u/ryates/temp/limits.pdf
2013-09-02 15:43:41 UTC <luite> oh cool, proper miters :)
2013-09-02 15:44:04 UTC <jbracker> byorgey: diagrams-svg does not use setDefault2DAttributes yet. Should I just add it?
2013-09-02 15:44:50 UTC <luite> uh oh, google found me on github and now they want to talk
2013-09-02 15:45:03 UTC <jbracker> luite: ?
2013-09-02 15:46:01 UTC <luite> jbracker: oh recruiting email spam :p
2013-09-02 15:48:30 UTC <travis-ci> [travis-ci] 13diagrams-postscript/06master 14cc39d27 http://travis-ci.org/diagrams/diagrams-postscript/builds/10899127 The build passed.
2013-09-02 16:05:49 UTC <byorgey> jbracker: does diagrams-svg call adjustDia2D?  That calls setDefault2DAttributes
2013-09-02 16:05:57 UTC <byorgey> it probably shouldn't though =P
2013-09-02 16:06:42 UTC <byorgey> oh, never mind, we have adjustDiaSize2D, so you can use that if you don't want the attributes
2013-09-02 16:06:57 UTC <byorgey> adjustDia2D is probably a bad name though
2013-09-02 16:31:46 UTC <jbracker> byorgey: I will just remove the call again
2013-09-02 16:43:44 UTC <luite> hmm need to find some food, wonder if i can find something cheaper than a $25 pizza today
2013-09-02 16:50:31 UTC <mr-> 3â¬ DÃ¶ner? ;-P
2013-09-02 16:50:54 UTC <luite> i'm sure that'd be 15 here
2013-09-02 16:51:43 UTC <mr-> which would be cheaper!
2013-09-02 16:52:48 UTC <luite> yeah
2013-09-02 17:46:51 UTC <notdan> Zuric is that expensive?
2013-09-02 17:46:53 UTC <notdan> Also, hi
2013-09-02 18:33:30 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14f1140bd http://travis-ci.org/diagrams/diagrams-haddock/builds/10904840 The build has errored.
2013-09-02 19:19:55 UTC <fryguybob> byorgey: Nice.  I'm trying to fix expandTrail.  It is broken now :(
2013-09-02 19:20:55 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 1439ad3b0 http://travis-ci.org/diagrams/diagrams-haddock/builds/10906374 The build has errored.
2013-09-02 19:37:18 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14268886b http://travis-ci.org/diagrams/diagrams-haddock/builds/10906881 The build has errored.
2013-09-02 19:38:08 UTC <byorgey> fryguybob: aww =(
2013-09-02 19:39:40 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 141efcb09 http://travis-ci.org/diagrams/diagrams-haddock/builds/10906990 The build has errored.
2013-09-02 19:40:03 UTC <byorgey> there, diagrams-haddock has zero open tickets =D
2013-09-02 19:42:20 UTC <byorgey> ACTION makes a todo to write a blog post about it
2013-09-02 19:43:36 UTC <fryguybob> byorgey: Nice
2013-09-02 19:45:11 UTC <byorgey> I guess now I have to make some big patches to diagrams-lib and -contrib etc. since the filename format for diagrams-haddock has changed
2013-09-02 19:49:21 UTC <fryguybob> Ah, I fixed lines, loops are still crazy: http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-09-02 19:49:52 UTC <byorgey> hahahaha, awesome
2013-09-02 19:50:13 UTC <byorgey> I kinda like it that way ;-)
2013-09-02 19:51:03 UTC <fryguybob> We do need a Picasso backend
2013-09-02 19:52:01 UTC <fryguybob> I'll be back later to sort out loops.
2013-09-02 19:52:57 UTC <byorgey> hehe, a Picasso backends sounds fun =)
2013-09-02 19:55:06 UTC <travis-ci> [travis-ci] 13diagrams-lib/06master 14b8e4870 http://travis-ci.org/diagrams/diagrams-lib/builds/10907277 The build passed.
2013-09-02 20:02:26 UTC <travis-ci> [travis-ci] 13diagrams-contrib/06master 146df4d72 http://travis-ci.org/diagrams/diagrams-contrib/builds/10907441 The build passed.
2013-09-02 23:08:45 UTC <fryguybob> getting close: http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-09-02 23:33:34 UTC <fryguybob> Humm, we need diagrams-haddock -j8
2013-09-02 23:35:35 UTC <luite> -j085
2013-09-02 23:35:59 UTC <fryguybob> :D
2013-09-02 23:36:45 UTC <luite> finally people are going to sleep, i can hack a bit more undisturbed
2013-09-02 23:43:14 UTC <fryguybob> blah.  Elegance is escaping me right now...
2013-09-02 23:45:57 UTC <luite> hmmmmmm sleepy
2013-09-02 23:46:42 UTC <luite> perhaps more beer wil help
2013-09-02 23:48:03 UTC <fryguybob> woohoo! http://www.cs.rochester.edu/u/ryates/temp/dl/html/diagrams-lib/Diagrams-TwoD-Offset.html
2013-09-02 23:48:32 UTC <byorgey> =D
2013-09-02 23:48:50 UTC <byorgey> fryguybob: oh, good idea re: diagrams-haddock -j8
2013-09-02 23:49:02 UTC <byorgey> should be pretty easy, really
2013-09-02 23:49:40 UTC <fryguybob> byorgey: Yeah.  Saddly I want it because I keep blowing away the cache because I'm working on lib which it needs to build the diagrams in lib.  The diagrams don't change but lib does.
2013-09-02 23:50:11 UTC <byorgey> ohhh.  Well, we should fix that too.
2013-09-02 23:50:31 UTC <fryguybob> And sadly the working version of expand includes (\(a:as) -> as ++ [a]) Just doesn't feel nice.
2013-09-02 23:50:47 UTC <byorgey> fryguybob: well, getting something that works is the first step =)
2013-09-02 23:51:33 UTC <fryguybob> byorgey: Yeah.  The moments where I want to hug Haskell the most are when I finally get something working then spend a few minutes and it magically works and is nice.
2013-09-02 23:51:43 UTC <byorgey> hehe, indeed =)
2013-09-02 23:52:56 UTC <luite> i'm a bit scared going to my room, so far every time there was a new guest he snored louder than the old one, and this night there are two...
2013-09-02 23:53:10 UTC <byorgey> luite: hehe
2013-09-02 23:53:12 UTC <byorgey> luite: good luck
2013-09-02 23:53:16 UTC <luite> although the one last night is pretty hard to beat
2013-09-02 23:53:52 UTC <fryguybob> We once had to get a separate room from my parents at like 3 am because we couldn't take it anymore.
2013-09-02 23:53:53 UTC <luite> byorgey: no internet there and i'm still compiling etc, so i'm forced to sit with people downstairs
2013-09-02 23:54:16 UTC <luite> some are playing d&d or something
2013-09-02 23:54:28 UTC <luite> or a drinking game variant of it
2013-09-02 23:54:30 UTC <byorgey> sounds like quite the place
2013-09-02 23:54:40 UTC <byorgey> haha
2013-09-02 23:55:33 UTC <luite> hehe it's kinda fun, but i didn't find zurich itself all that interesting i have to admit
2013-09-02 23:56:03 UTC <luite> and it's rather expensive too, cost of living here is quite a bit higher than nyc
2013-09-02 23:58:51 UTC <luite> perhaps it's more interesting if you like expensive watches, banks and designer clothes
2013-09-02 23:59:29 UTC <byorgey> hehe
2013-09-02 23:59:44 UTC <byorgey> sounds like I would love it =P
2013-09-03 00:00:22 UTC <byorgey> what's the state of the art in running a bunch of actions concurrently using a thread pool (e.g. so no more than N are running at once)?
2013-09-03 00:00:46 UTC <fryguybob> byorgey: async?
2013-09-03 00:01:37 UTC <fryguybob> byorgey: Oh, didn't fully read that.  Perhaps async has something for that.
2013-09-03 00:01:55 UTC <byorgey> I looked at async, it looks really nice, but I don't see anything for limiting to at most N concurrent actions
2013-09-03 00:02:24 UTC <byorgey> async is a bit higher-level than raw MVars or whatever but it's still pretty low-level.
2013-09-03 00:02:35 UTC <byorgey> I'll ask in #haskell
2013-09-03 00:03:57 UTC <luite> newQSem n >>= \qs -> async (map (bracket (waitQSem qs) (signalQSem qs)) actions)
2013-09-03 00:04:20 UTC <fryguybob> byorgey: If you ... yeah what luite wrote.
2013-09-03 00:04:36 UTC <luite> still spawns the lightweight threads though
2013-09-03 00:04:48 UTC <byorgey> luite: as opposed to what?
2013-09-03 00:04:48 UTC <luite> but that should scale reasonably well :)
2013-09-03 00:04:56 UTC <luite> byorgey: doing it in n lightweight threads
2013-09-03 00:05:02 UTC <fryguybob> byorgey: You could have a queue of tasks then just async n workers that dequeue.
2013-09-03 00:05:30 UTC <luite> right, but i didn't know how to code golf that to something that short :)
2013-09-03 00:05:48 UTC <byorgey> makes sense
2013-09-03 00:06:05 UTC <byorgey> and how does one have a threadsafe shared mutable queue?
2013-09-03 00:06:13 UTC <luite> Chan
2013-09-03 00:06:22 UTC <fryguybob> byorgey: STM of course :D
2013-09-03 00:06:28 UTC <byorgey> hehe
2013-09-03 00:06:41 UTC <fryguybob> Oh you want fast :P
2013-09-03 00:06:55 UTC <luite> well with the STM chan you can check if it's empty
2013-09-03 00:07:26 UTC <luite> supposedly the actions are quite a bit higher than the STM overhead, otherwise you wouldn't have to pool them :)
2013-09-03 00:09:37 UTC <byorgey> well I will certainly need to check if the chan is empty.  So Control.Concurrent.STM.TChan it is.
2013-09-03 00:12:02 UTC <fryguybob> worker c = join $ atomically (readTChan c >>= return . (>> worker c) <|> return ())
2013-09-03 00:13:08 UTC <byorgey> what does that do?
2013-09-03 00:14:03 UTC <fryguybob> I could be completely off, but I'm trying to read an IO action from a channel, if there was one, perform it, then loop.  Otherwise finish.
2013-09-03 00:14:39 UTC <byorgey> fryguybob: oh, I get it
2013-09-03 00:15:43 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06master 14bfc9505 http://travis-ci.org/diagrams/diagrams-haddock/builds/10914589 The build has errored.
2013-09-03 00:16:02 UTC <byorgey> OK, goodnight all
2013-09-03 00:16:18 UTC <fryguybob> Goodnight!
2013-09-03 00:16:52 UTC <luite> good night
2013-09-03 00:34:48 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 145b9fed4 http://travis-ci.org/diagrams/diagrams-lib/builds/10914853 The build passed.
2013-09-03 00:38:11 UTC <luite> bluh
2013-09-03 00:52:37 UTC <travis-ci> [travis-ci] 13diagrams-lib/06expand 148766c24 http://travis-ci.org/diagrams/diagrams-lib/builds/10915226 The build passed.
2013-09-03 00:53:16 UTC <fryguybob> luite: Was that bluh at my ugly code :P
2013-09-03 00:54:04 UTC <luite> no at being tired and still wanting to finish the ghc patch etc
2013-09-03 00:54:14 UTC <luite> that hackathon got me out of the flow of getting things done :(
2013-09-03 00:54:29 UTC <fryguybob> Ah.
2013-09-03 00:55:02 UTC <luite> i think i'll drive south tomorrow and do some hiking, find a hotel/hostel outside the city
2013-09-03 00:55:36 UTC <fryguybob> luite: Sounds like a good plan.
2013-09-03 00:56:14 UTC <fryguybob> ACTION has been away from mountains for too long.
2013-09-03 00:56:27 UTC <luite> yeah would be a shame to be in switzerland and only see city...
2013-09-03 02:18:40 UTC <fryguybob> Boo! "This version of GHC is not thread-safe,can't safely run two instances of the interpreter simultaneously"
2013-09-03 02:19:31 UTC <fryguybob> So un-haskelly of GHC.
2013-09-03 02:22:12 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06parallel 141d5bc08 http://travis-ci.org/diagrams/diagrams-haddock/builds/10917033 The build has errored.
2013-09-03 09:13:03 UTC <luite> bleh gotta run, parking was only valid until 11
2013-09-03 09:52:54 UTC <mr-> Oh.. that's expensive
2013-09-03 12:52:59 UTC <luite> bluh finally found a hotel :)
2013-09-03 13:27:04 UTC <lemao> luite: were are you now? Zurich still?
2013-09-03 13:27:11 UTC <luite> no chur
2013-09-03 13:32:49 UTC <lemao> :-) well, you are heading south ... 
2013-09-03 13:32:57 UTC <lemao> ok, southeast
2013-09-03 15:58:26 UTC <travis-ci> [travis-ci] 13diagrams-haddock/06parallel 14e7458b7 http://travis-ci.org/diagrams/diagrams-haddock/builds/10939929 The build has errored.
2013-09-03 18:42:52 UTC <travis-ci> [travis-ci] 13diagrams-doc/06master 1411bb952 http://travis-ci.org/diagrams/diagrams-doc/builds/10944592 The build failed.
2013-09-03 19:10:01 UTC <travis-ci> [travis-ci] 13active/06new-semantics 1420f446e http://travis-ci.org/diagrams/active/builds/10946747 The build has errored.
2013-09-04 01:53:26 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14253c73e http://travis-ci.org/diagrams/active/builds/10958045 The build has errored.
2013-09-04 01:57:57 UTC <travis-ci> [travis-ci] 13active/06new-semantics 149df2e5d http://travis-ci.org/diagrams/active/builds/10958156 The build has errored.
2013-09-04 02:08:44 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14e09c29e http://travis-ci.org/diagrams/active/builds/10958376 The build has errored.
2013-09-04 02:15:15 UTC <travis-ci> [travis-ci] 13diagrams-lib/06new-active 1444bd7cf http://travis-ci.org/diagrams/diagrams-lib/builds/10958557 The build has errored.
2013-09-04 02:20:10 UTC <travis-ci> [travis-ci] 13active/06new-semantics 14fab6f86 http://travis-ci.org/diagrams/active/builds/10958536 The build has errored.
2013-09-04 14:26:15 UTC <fryguybob> byorgey: I see now that the "GHC isn't thread-safe" message we git is from hint, not GHC.  It checks for multiple calls with an MVar (I'm not really sure why they don't just use that as a lock, but anyway).
2013-09-04 14:26:54 UTC <fryguybob> byorgey: So I suppose that GHC could be ok now, but hint doesn't know it.
2013-09-04 14:31:33 UTC <byorgey> fryguybob: interesting.  I kind of doubt it though, because that GHC trac ticket is still open.
2013-09-04 14:32:19 UTC <fryguybob> byorgey: Yeah, but it could have been missed I suppose.  I'll try and see what the structures mentioned in the ticket are like now.
2013-09-04 14:32:27 UTC <byorgey> OK.
2013-09-04 14:32:47 UTC <byorgey> I guess the recent work on parallelizing GHC builds could be relevant.
2013-09-04 14:32:57 UTC <fryguybob> byorgey: Right
2013-09-04 14:33:31 UTC <fryguybob> byorgey: I suppose I could just build hint without the check and see if the wheels fall off.
2013-09-04 14:34:35 UTC <byorgey> right =)
2013-09-04 15:24:12 UTC <fryguybob> byorgey: The wheels do fall off most of the time.  When they don't speedup is still fairly small.  4.02s -j8 vs 6.91s -- speedup 1.7
2013-09-04 16:26:24 UTC <haasn> byorgey: diagrams-html
2013-09-04 16:26:26 UTC <haasn> fund it
2013-09-04 16:33:02 UTC <fryguybob> haasn: ?
2013-09-04 16:33:17 UTC <haasn> fryguybob: rendering HTML via digrams
2013-09-04 16:33:19 UTC <haasn> somehow
2013-09-04 16:33:26 UTC <haasn> it would be super interesting
2013-09-04 16:33:30 UTC <fryguybob> haasn: There is the diagrams-canvas backend which I initially wrote.
2013-09-04 16:33:38 UTC <haasn> no no rendering HTML itself
2013-09-04 16:33:40 UTC <haasn> as a diagram
2013-09-04 16:33:43 UTC <haasn> not rendering diagrams in HTML :)
2013-09-04 16:34:04 UTC <fryguybob> Ah, no thanks :P
2013-09-04 16:34:59 UTC <haasn> do you think it could be done? I mean, layout in r2 with margins, paddings and stuff should be easily doable this way
2013-09-04 16:35:03 UTC <haasn> superimposing things too
2013-09-04 16:35:18 UTC <haasn> text would be trickiest, though
2013-09-04 16:36:09 UTC <fryguybob> haasn: I just mean HTML is a mess.  So is CSS.
2013-09-04 16:38:27 UTC <fryguybob> haasn: I'm in no way trying to discourage you though :D
2013-09-04 16:38:51 UTC <haasn> I think this project would be out of the scope of an individual programmer, personally
2013-09-04 16:39:02 UTC <haasn> especially if you want to do *all* of CSS3
2013-09-04 16:39:08 UTC <haasn> animations and whatnot, maybe via FRP
2013-09-04 16:39:36 UTC <haasn> ..and interactivity would be a nightmare, though possible, with the various monoid probing stuff diagrams exposes
2013-09-04 16:39:59 UTC <haasn> if you could throw a nonexistant high-profile Haskell company at it..
2013-09-04 16:40:01 UTC <haasn> ACTION stops dreaming
